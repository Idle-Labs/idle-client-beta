{"version":3,"sources":["PageNotFound/PageNotFound.module.scss","utilities/components/Header.module.scss","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","utilities/components/ModalCard.module.scss","NewsletterForm/NewsletterForm.module.scss","TwitterShareButton/TwitterShareButton.module.scss","MenuAccount/MenuAccount.module.scss","CryptoInput/CryptoInput.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","Governance/ProposalListFilters/ProposalListFilters.module.scss","Tos/Tos.module.scss","Governance/NewProposal/NewProposal.module.scss","DashboardCard/DashboardCard.module.scss","colors.js","theme.js","ExtLink/ExtLink.js","utilities/IdleGovToken.js","SmartNumber/SmartNumber.js","FlexLoader/FlexLoader.js","GenericChart/GenericChart.js","VariationNumber/VariationNumber.js","AllocationChart/AllocationChart.js","AssetField/AssetField.js","DashboardCard/DashboardCard.js","GenericSelector/GenericSelector.js","AssetSelector/AssetSelector.js","TokenSwap/TokenSwap.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","NexusMutual/NexusMutual.js","Title/Title.js","TableRow/TableRow.js","TableCellHeader/TableCellHeader.js","TableHeader/TableHeader.js","AssetsList/AssetsList.js","PortfolioDonut/PortfolioDonut.js","ChartCustomTooltip/ChartCustomTooltip.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","PortfolioEquity/PortfolioEquity.js","utilities/components/ShortHash.js","TransactionField/TransactionField.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","EarningsEstimation/EarningsEstimation.js","StrategyPage/StrategyPage.js","utilities/components/ModalCard.js","ImageButton/ImageButton.js","utilities/components/BuyModal.js","RoundButton/RoundButton.js","TxProgressBar/TxProgressBar.js","FastBalanceSelector/FastBalanceSelector.js","Migrate/Migrate.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","configs/globalConfigs.js","utilities/FunctionsUtil.js","Footer/Footer.js","Tos/Tos.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","Faquestion/Faquestion.js","Faq/Faq.js","FlexCards/FlexCards.js","AuditCard/AuditCard.js","HowItWorks/HowItWorks.js","StrategyBox/StrategyBox.js","NewsletterForm/NewsletterForm.js","RoundIconButton/RoundIconButton.js","FloatingToastMessage/FloatingToastMessage.js","AssetsUnderManagement/AssetsUnderManagement.js","Landing/Landing.js","DashboardMenu/DashboardMenu.js","Stats/StatsChart.js","Rebalance/Rebalance.js","StatsCard/StatsCard.js","Breadcrumb/Breadcrumb.js","utilities/components/DateRangeModal.js","Stats/Stats.js","Utils/Utils.js","FundsOverview/FundsOverview.js","ConnectBox/ConnectBox.js","CurveRedeem/CurveRedeem.js","TwitterShareButton/TwitterShareButton.js","utilities/components/ShareModal.js","DepositRedeem/DepositRedeem.js","CardIconButton/CardIconButton.js","EstimatedEarnings/EstimatedEarnings.js","AssetPage/AssetPage.js","CurveDeposit/CurveDeposit.js","PortfolioEquityCurve/PortfolioEquityCurve.js","FundsOverviewCurve/FundsOverviewCurve.js","CurveStrategy/CurveStrategy.js","utilities/components/WelcomeModal.js","utilities/components/TooltipModal.js","utilities/components/MigrateModal.js","utilities/components/UpgradeModal.js","utilities/components/AccountModal.js","MenuAccount/MenuAccount.js","utilities/components/GovModal.js","utilities/GovernanceUtil.js","DelegateVesting/DelegateVesting.js","DashboardHeader/DashboardHeader.js","Dashboard/Dashboard.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","Governance/ProposalField/ProposalField.js","Governance/ProposalListFilters/ProposalListFilters.js","Governance/ProposalsList/ProposalsList.js","Governance/DelegateField/DelegateField.js","Governance/DelegatesList/DelegatesList.js","Governance/Overview.js","Governance/DelegateVote/DelegateVote.js","Governance/Delegate.js","Governance/NewProposal/NewProposal.js","Governance/CastVote/CastVote.js","Governance/ProposalDetails/ProposalDetails.js","Governance/Proposals.js","Governance/DelegateDetails/DelegateDetails.js","Governance/Leaderboard.js","Governance/Governance.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","abis/tokens/DAI.js","abis/compound/cDAI.js","configs/availableTokens.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","Footer/Footer.module.scss","LoadingSpinner/LoadingSpinner.module.scss","HowItWorks/HowItWorks.module.scss","GenericSelector/GenericSelector.module.scss","Landing/Landing.module.scss"],"names":["module","exports","headerContainer","headerBgFiller","bgContainer","list","textContainer","gradientButton","empty","tooltip","radioBtn","bg","twitterIcon","balanceButton","newLink","newPill","mainInput","button","newPillContainerAnim","input","defaultOpacity","hidden","interactive","active","rainbow","disabled","baseColors","black","white","blue","darkBlue","green","yellow","red","blurple","consensysblue","colors","base","text","readableColor","light","tint","dark","shade","theme","breakpoints","fontSizes","fontWeights","letterSpacings","lineHeights","solid","title","copy","fonts","serif","sansSerif","counter","space","radii","width","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","primary","gradient-bg","primary-light","primary-dark","bgBlue","dark-blue","skyBlue","lightBlue","copyColor","subColor","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","transparent","lineChartStroke","dashboardBg","statValue","boxBorder","cellTitle","cellText","divider","redeem","deposit","migrate","legend","cardBg","transactions","action","send","swap","swapout","boost","receive","default","withdraw","actionBg","status","completed","pending","failed","blacks","whites","zIndices","messageStyle","color","backgroundColor","borderColor","success","warning","danger","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","fontSize","height","minWidth","padding","medium","large","borderRadius","ExtLink","react_default","a","createElement","index_es","Object","assign","target","rel","this","props","children","Component","IdleGovToken","_this","classCallCheck","tokenName","tokenConfig","functionsUtil","setProps","FunctionsUtil","getGlobalConfig","getBalance","asyncToGenerator","regenerator_default","mark","_callee","balance","wrap","_context","prev","next","getTokenBalance","account","sent","BNify","isNaN","abrupt","stop","claimRewards","_ref2","_callee2","callback","callbackReceipt","_context2","contractMethodSendWrapper","_x","_x2","apply","arguments","getPriorVotes","_callee3","priorVotes","_args3","_context3","length","undefined","genericContractCall","getUnclaimedTokens","_callee4","rewards","_context4","fixTokenDecimals","decimals","getAPR","_ref5","_callee5","token","conversionRate","IDLETokenConfig","cachedDataKey","APR","_ref6","_ref7","idleDistribution","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args5","_context5","enabled","concat","idle","Promise","all","getDistribution","getTokenAllocation","slicedToArray","getUniswapConversionRate","t0","lte","convertTokenBalance","totalAllocationWithUnlent","times","div","setCachedData","_x3","_x4","getSpeed","_ref8","_callee6","idleTokenAddress","idleSpeeds","_context6","_x5","_ref9","_callee7","cachedData","blocksPerYear","distribution","_context7","getCachedData","address","_x6","getUserDistribution","_callee9","availableTokens","fixByFrequency","totalSpeed","_args9","_context9","selectedStrategy","availableStrategies","asyncForEach","keys","_ref11","_callee8","_ref12","_ref13","idleSpeed","userPoolShare","tokenSpeed","_context8","getUserPoolShare","plus","_x7","fixDistributionSpeed","distributionFrequency","getAvgApr","_callee11","output","totalAllocation","_args11","_context11","_ref15","_callee10","_ref16","_ref17","idleApr","_context10","_x8","SmartNumber","loadUtils","_this2","formattedNumber","number","type","formatMoney","precision","abbreviateNumber","maxPrecision","minPrecision","flexProps","alignItems","flexDirection","justifyContent","forEach","p","showUnit","unitPos","unit","unitProps","FlexLoader","loaderProps","textProps","GenericChart","state","componentUnmounted","window","addEventListener","handleWindowSizeChange","bind","removeEventListener","prevProps","isMobile","newState","objectSpread","parentId","chartContainer","document","getElementById","chartWidth","parseFloat","offsetWidth","parentIdHeight","chartContainerH","chartHeight","setState","ChartType","parseInt","chartProps","showLoader","data","src_FlexLoader_FlexLoader","minHeight","size","ml","loaderText","VariationNumber","IconDirection","direction","name","iconSize","iconPos","AllocationChart","chartData","selectedSlice","protocolsAllocations","protocolsAllocationsPerc","loadData","prevState","selectedToken","setStateSafe","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","e","_this3","onMouseLeave","sliceLabel","value","tooltipFormat","v","radialLabel","container","inline","display","labels","fontWeight","fontFamily","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","modifiers","margin","top","right","bottom","left","protocols","protocolInfo","i","protocolName","protocolAddr","toLowerCase","protocolAllocationPercParsed","toFixed","push","id","globalConfigs","stats","hsl","join","label","capitalize","protocolIcon","icon","position","zIndex","textAlign","mb","src","src_SmartNumber_SmartNumber","src_GenericChart_GenericChart","Pie","AssetField","ready","loadField","fieldName","isRisk","fieldInfo","fieldProps","addGovTokens","govTokens","getGovTokensDistributionSpeed","oldContractBalanceFormatted","_ref3","redeemableBalanceCurveEnd","redeemableBalanceCurveStart","_ref4","redeemableBalanceEnd","redeemableBalanceStart","earningsCounter","feePercentage","feesStart","feesEnd","curveApy","earningsCurveStart","amountLentCurve","earningsCurveEnd","_ref10","tokenAPY2","earningsStart","amountLent2","earningsEnd","tokenScore","tokenAPR","oldTokenConfig","tokenAPY","govTokensAprs","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","aprChartData","startTimestamp","y","mDate","x","frequencySeconds","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","_args","loadAssetField","tokenBalance","toString","getTokenGovTokens","tokenPrice","fee","checkMigration","amountToMigrate","amountLent","idleTokenBalance","earnings","getTokenFees","getCurveAPY","gt","redeemableBalance","getTokenScore","score","poolSize","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","earningsPerc","showAPR","migration","oldContract","values","oldProtocols","oldProtocol","foundProtocol","find","protocolPos","indexOf","oldAPY","tokenAPYNoGov","curveAvgSlippage","showTooltip","getGovTokensAprs","t1","allocationChartRowElement","rowId","$allocationChartRowElement","jQuery","innerWidth","css","innerHeight","Math","min","assertThisInitialized","max","strToMoment","Date","format","subtract","_d","getTime","add","random","getFrequencySeconds","getTokenApiData","timestamp","idleRate","aprChartRowElement","$aprChartRowElement","Line","pointSize","lineWidth","useMesh","axisLeft","curve","axisBottom","enableArea","areaOpacity","enableGridX","enableGridY","pointBorderWidth","enableSlices","isInteractive","defs","linearGradientDef","offset","fill","match","PerformanceChartRowElement","$PerformanceChartRowElement","clone","map","idlePrice","minus","blocknumber","pointLabelYOffset","defineProperty","tokenChanged","accountChanged","fieldChanged","contractInitialized","contractsInitialized","transactionsChanged","filter","tx","loader","funcProps","icon1","placement","message","tooltipProps","icon2","build_default","delay","decimal","separator","useEasing","duration","end","start","formattingFn","n","countUpRef","style","ref","_ref14","govTokenConfig","govTokenIndex","key","boxShadow","showDirection","src_VariationNumber_VariationNumber","earningsCurve","governanceTokenName","idleTokenConfig","userDistributionSpeed","distributionSpeed","iconProps","govToken","tooltipMode","buttonLabel","onClick","handleClick","src_AllocationChart_AllocationChart","formattedValue","_isBigNumber","DashboardCard","isDisabled","isActive","isVisible","isRainbow","cardProps","background","className","styles","mt","titleParentProps","h4","lineHeight","titleProps","description","GenericSelector","loadComponents","selectedTokenChanged","optionsChanged","JSON","stringify","options","defaultValueChanged","defaultValue","componentsChanged","CustomOptionValue","CustomValueContainer","ControlComponent","innerProps","cursor","menuIsOpen","src_DashboardCard_DashboardCard","CustomIndicatorSeparator","CustomMenu","selectProps","CustomInputContainer","isSearchable","searchInput","searchInputHidden","CustomOption","selectedValue","o","px","py","genericSelector","isFocused","react_select_browser_esm","onChange","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","AssetSelector","toUpperCase","src_AssetField_AssetField","mr","showCustomField","showBalance","flex","src_GenericSelector_GenericSelector","changeToken","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","baseToken","selectDestToken","getGlobalConfigs","paymentProvider","providerInfo","initProps","buttonId","initParams","getInitParams","render","sendGoogleAnalyticsEvent","eventCategory","eventAction","eventLabel","remoteResources","url","j","split","pop","scriptID","script","remoteResourceParams","precall","readyState","onreadystatechange","onload","async","parentElement","appendChild","head","stylesheetId","href","loadTokens","toolProps","getContractByName","abi","initContract","fromTokenChanged","destTokenChanged","loadKyberWidget","_this4","src_AssetSelector_AssetSelector","my","mx","mainColor","LoadingSpinner","ButtonLoader","buttonProps","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","NexusMutual","step","steps","1","2","3","loading","amountValue","periodValue","quoteResponse","changeAmount","changePeriod","makeRequest","stepIndex","flexBasis","textDecoration","hoverColor","activeColor","changeSelectedToken","required","border","placeholder","src_ButtonLoader_ButtonLoader","getQuote","Title","HeadingComponent","component","Heading","h1","TableRow","FieldComponent","fieldComponent","cardId","rowProps","cols","colInfo","colIndex","visible","mobile","parentProps","fields","fieldIndex","overflow","colProps","TableCellHeader","ColTitle","whiteSpace","desc","openTooltipModal","TableHeader","pb","src_TableCellHeader_TableCellHeader","AssetsList","enabledTokens","src_TableHeader_TableHeader","src_TableRow_TableRow","PortfolioDonut","totalFunds","parentWidth","selectedTokenConfig","loadPortfolio","portfolio","_ref","getIdleTokenPrice","getGovTokensUserBalances","govTokensUserBalances","govTokenBalance","tokenPercentage","tokenColorHsl","substr","round","radialLabelsLinkOffset","itemWidth","itemHeight","translateY","symbolSize","anchor","itemTextColor","symbolShape","effects","on","strategyIcon","convertToken","Fragment","ChartCustomTooltip","point","itemPos","xFormatted","ChartCustomTooltipRow","pr","textTransform","dangerouslySetInnerHTML","__html","PortfolioEquity","startDate","chartwidth","loadChartData","quickDateSelectionChanged","quickDateSelection","componentDidMount","getEtherscanTxs","etherscanTxs","tokensBalance","firstTxTimestamp","filteredTxs","index","hash","timeStamp","tokenAmount","lt","idleTokens","currentDate","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","tokensData","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","filteredTokenData","tokenDecimals","filteredBalances","lastFilteredTx","newBalance","lastTx","lastTxBalance","tokenUsdConversionRate","conversionRateField","chartToken","momentDate","isSameOrAfter","isAfter","formattedDate","_loop","aggregatedBalances","date","balances","itemIndex","item","floor","yFormatDecimals","gridYStep","gridYValues","gridYValue","daysCount","daysFrequency","ceil","xScale","yScale","stacked","xFormat","yFormat","tickSize","tickPadding","orient","legendOffset","legendPosition","tickValues","tickRotation","pointLabel","areaBaselineValue","pointColor","axis","ticks","grid","line","stroke","strokeDasharray","sliceTooltip","slideData","slice","points","src_ChartCustomTooltip_ChartCustomTooltip","src_ChartCustomTooltipRow_ChartCustomTooltipRow","serieId","yFormatted","formattedBalance","ShortHash","shortenHash","shortHash","txStart","txEnd","React","TransactionField","hashChanged","bgColor","transaction","maxWidth","textOverflow","align","components_ShortHash","amount","tokenSymbol","TransactionListFilters","maxHeight","isOpened","activeFilters","assets","actions","setFilter","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","transition","borderTop","filters","filterCategory","filterValues","filterValue","filterLabel","isChecked","checked","Text","filterName","TransactionsList","page","prevTxs","txsPerPage","totalTxs","totalPages","renderedTxs","processedTxs","lastBlockNumber","processTxs","availableActions","txsIndexes","includes","sort","b","getTxAction","parsedValue","preventDefault","loadTxs","count","firstBlockNumber","enabledActions","hashKey","blockNumber","hasActiveFilters","m","pt","src_TransactionListFilters_TransactionListFilters","txHash","txHashKey","open","prevPage","nextPage","h3","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","90","2 Years","5 Years","loadEarnings","getAmountLent","amountLents","aggregatedEarnings","earningsYear","avgBuyPrice","idleTokenPrice","tokenAprs","earningsPercStep","possibleSteps","maxPossibleStep","getAvgBuyPrice","getTokenAprs","avgApr","avgApy","orderedTokensEarnings","estimationStep","option","setEstimationStepsPerc","tokenIndex","tokenEarnings","estimationStepPerc","finalEarnings","cursorPerc","tokenRGBColor","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","gte","pl","estimationLabel","StrategyPage","tokensToMigrate","aggregatedValues","depositedTokens","remainingTokens","portfolioLoaded","availableGovTokens","portfolioEquityStartDate","portfolioEquityQuickSelection","getAccountPortfolio","avgAPY","avgScore","totalEarnings","totalAmountLent","amountLentToken","tokenWeight","tokenEarningsPerc","totalBalance","getGovTokensUserTotalBalance","govTokensTotalBalance","govTokensUserBalance","govTokensTotalBalanceTooltip","getTokensToMigrate","apyLong","riskScore","yieldFarming","src_Title_Title","src_PortfolioDonut_PortfolioDonut","aligItems","setPortfolioEquityQuickSelection","src_PortfolioEquity_PortfolioEquity","borderBottom","src_AssetsList_AssetsList","src_EarningsEstimation_EarningsEstimation","src_TransactionsList_TransactionsList","textSize","ModalCard","closeFunc","objectWithoutProperties","icononly","bgLayer","backgroundSize","Header","iconHeight","subtitle","subtitleProps","subtitle2","Body","Footer","BackButton","Outline","ImageButton","image","imageSrc","imageProps","iconName","caption","contrastColor","buttonStyle","badge","captionPos","subcaption","BuyModal","selectedMethod","availableMethods","selectedCountry","selectedProvider","availableProviders","buyToken","renderPaymentMethod","provider","buyParams","onSuccess","onClose","currentState","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","variant","getAccountBalance","payments","providers","analytics","google","events","closeModal","goBack","resetModal","componentWillMount","showInline","getProviderInfo","getInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","defaultProvider","getAvailablePaymentProviders","providerSupportMethod","supportedMethods","providerSupportToken","supportedTokens","defaultPaymentProvider","showDefaultOnly","selectProvider","ethAvailable","tokenAvailable","selectMethod","selectToken","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","supportedCountries","countryCode","countries","methods","method","loadAvailableMethods","toConsumableArray","showAllTokens","InnerComponent","flexWrap","src_ImageButton_ImageButton","methodInfo","imagePropsExtended","noOptionsMessage","inputValue","isOpen","components_ModalCard","RoundButton","TxProgressBar","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","initProgressBar","getTransaction","resolve","reject","customLog","web3","eth","err","getBlockTime","blockTime","axios","get","getPredictionTable","predictTable","getTxEstimatedTime","gasPrice","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","calculateRemainingTime","secondsPassed","timePassed","setTimeout","updateProgressBar","getTxInfo","txProgressBarKey","txProgressBarData","localStorage","getItem","parse","setLocalStorage","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","textColor","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","cancelTransaction","cancelTextColor","cancelTextHoverColor","FastBalanceSelector","onMouseDown","replaceArrayProps","Migrate","approve","oldTokenName","oldIdleTokens","skipMigration","buttonDisabled","migrationEnabled","fastBalanceSelector","oldContractBalance","biconomyLimitReached","metaTransactionsEnabled","oldContractTokenDecimals","migrationContractApproved","setAction","toggleSkipMigration","changeInputValue","checkButtonDisabled","setInputValue","selectedPercentage","setFastBalanceSelector","executeAction","oldContractName","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","normalizeTokenAmount","txSucceeded","eventData","eventValue","getTransactionError","transactionHash","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractInfo","migrationContractName","tokenApproved","migrationContract","checkTokenApproved","oldIdleTokensConverted","oldTokenPrice","getTokenPrice","oldContractInfo","oldContractABI","biconomyLimits","getTokenDecimals","getContractBalance","biconomy","checkBiconomyLimits","allowed","disapproveMigration","disableERC20","approveMigration","callbackApprove","callbackReceiptApprove","enableERC20","migrationMethod","params","callbackMigrate","callbackReceiptMigrate","useMetaTx","toMigrate","_skipRebalance","minAmountForRebalance","migrationParams","_migrationContract$me","functionSignature","migrationCallback","integerValue","skipMintForDeposit","encodeABI","sendBiconomyTxWithPersonalSign","biconomyChanged","actionChanged","fastBalanceSelectorChanged","batchMigrationInfo","batchMigrationEnabled","batchMigrationDepositEnabled","depositEnabled","SkipMigrationComponent","biconomyEnabled","isMigrationTool","migrateTextBefore","migrateText","showActions","src_TransactionField_TransactionField","route","src_TxProgressBar_TxProgressBar","migrationImage","migrationIcon","migrationText","migrationTextProps","functions","functionInfo","functionName","src_RoundButton_RoundButton","approveText","src_FastBalanceSelector_FastBalanceSelector","TokenMigration","migrationSucceeded","changeFromToken","convertTool","goToSection","tokenInfo","strategy","baseTokenConfig","destTokenConfig","migrateFunction","setStrategyToken","urlParams","param2","src_Migrate_Migrate","connectAndValidateAccount","BatchMigration","canClaim","batchTotals","canDeposit","batchDeposits","claim","hasDeposited","batchCompleted","claimSucceeded","strategyAvailableTokens","batchId","callbackClaim","callbackReceiptClaim","checkBatchs","currBatchIndex","batchIndex","batchTotal","batchDeposit","env","process","appName","version","baseURL","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","logs","errorsEnabled","messagesEnabled","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","fortmatic","portis","authereum","torus","trezor","ledger","newsletterSubscription","endpoint","messages","scoreShort","apyShort","cheapRedeem","curveBonusSlippage","directMint","govTokenApr","govTokenRedeemableBalance","curveInstructions","addPostfixForTestnet","debugEnabled","modals","first_deposit_referral","first_deposit_share","welcome","frequency","dashboard","baseRoute","governance","test","startBlock","availableContracts","IDLE","PriceOracle","GovernorAlpha","EcosystemFund","IdleController","contracts","delegates","n_coins","imageInactive","rates","path","poolContract","CurvePool","depositContract","CurveDeposit","zapContract","CurveZap","CurveSwap","idleDAIYield","coinIndex","idleUSDCYield","idleUSDTYield","idleTUSDYield","showAUM","protocol","aprTooltipMode","COMP","Timelock","VesterFactory","EarlyRewards","Comptroller","UniswapRouter","UniswapV2Router02","tokens","DAI","zeroExInstant","orderSource","assetData","affiliateInfo","feeRecipient","USDC","strategies","best","comingSoon","titlePostfix","govTokensEnabled","chartColor","iconInactive","descLong","descShort","risk","new","TTL","scores","versions","v3","additionalProtocols","endTimestamp","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","rgb","hex","chart","labelTextColorModifiers","performanceTooltip","USD","USDT","TUSD","SUSD","WBTC","YDAI+YUSDC+YUSDT+YTUSD","compound","compoundWithCOMP","rateField","fulcrum","dsr","dydx","iearn","aave","0xfc1e690f61efd961294b3e1ce3313fbd8aa4f85d","9599092","9599138","9599263","9599267","9599295","9599299","9599307","9599315","9599579","9599866","9600156","9600433","9600704","9600982","9601051","9601073","9601077","9601345","9601619","9601891","9602144","9602429","9602724","9602993","9603272","9603536","9603826","9603840","9604038","9604182","9604457","9604701","9604979","9605247","9605505","9605793","9606073","9606368","9606639","9606896","9607147","9607406","9607722","9608130","9608395","9608656","9608959","9609544","9609811","9610073","9610341","9610601","9610871","9611120","9611386","9611665","9611949","9612210","9612487","9612758","9613012","9613276","9613542","9613824","9614069","9614327","9614596","9614864","9615111","9615394","9615679","9615958","9616245","9616531","9616803","9617053","9617326","0x9ba00d6856a4edf4665bca2c2309936572473b7e","9598633","9598646","9598684","9598823","9598869","9598915","contract","skipRebalance","skipMint","minAmountForMint","skipMintCheckboxEnabled","proxyContract","IdleProxyMinter","function","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","network","availableNetworks","4","42","isForked","requiredNetwork","requiredConfirmations","accountBalanceMinimum","infura","etherscan","endpoints","enableLogin","supportedNetworks","disabledWallets","limits","debug","apiKey","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","apiId","terminal","REACT_APP_TERMINAL_KEY","projectId","REACT_APP_TERMINAL_PROJECT_ID","source","web3Version","Web3Versions","one","simpleID","getNetwork","networkId","networkName","appOrigin","location","origin","appId","renderNotifications","tools","batchMigration","claimEnabled","subComponent","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","oldAddresses","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","directProps","insurance","ETH","ens","tokenSwap","USDS","WETH","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","bank","card","wallet","wyre","envParams","accountId","prod","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","innerHTML","body","wyreStyle","ramp","hostAppName","userAddress","hostApiKey","REACT_APP_RAMP_KEY","hostLogoUrl","swapAsset","RampInstantSDK","event","payload","purchase","pow","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","tokenParams","connectorName","RimbleWeb3_context","chainId","connector","ethereum","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","contractAddress","decodeLogsData","internalType","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","mode","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","ethereumjsABI","require","idleGovToken","trimEth","toBN","utils","BN","toEth","wei","fromWei","toWei","BNify_obj","s","BigNumber","String","_len","Array","_key","moment","customLogError","_console","_len2","_key2","console","contractName","c","normalizeSimpleIDNotification","replace","str","arr1","arr2","stripHtml","html","tmp","textContent","innerText","scrollTo","to","scrollY","change","currentTime","easeInOutQuad","t","animateScroll","val","depositProxyContractInfo","migrationContractAddr","migrationContractOldAddrs","batchMigrationContractAddr","isMigrationTx","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","orderedTokensBalance","_args2","getCurveAvgSlippage","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","deposited","getCurveAvgBuyPrice","_args4","prevAvgBuyPrice","_args6","idleTokensBalance","getDepositTimestamp","deposits","_args7","depositTimestamp","getAmountDeposited","userAvgPrice","amountDeposited","getEtherscanBaseTxs","endBlockNumber","firstIdleBlockNumber","etherscanInfo","results","etherscanBaseTxs","etherscanBaseEndpoint","etherscanApiUrl","lastCachedTx","lastCachedBlockNumber","etherscanEndpointLastBlock","latestTxs","latestBlockNumbers","txs","_args10","REACT_APP_ETHERSCAN_KEY","getCachedRequest","result","makeCachedRequest","filterEtherscanTxs","saveCachedRequest","filterCurveTxs","_callee12","allAvailableTokens","etherscanTxsToStore","cachedRequestData","_args12","_context12","processStoredTxs","txInfo","_callee13","_args13","_context13","_callee14","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args14","_context14","tokenMigrationToolParams","curveEnabled","curveTokenConfig","idleToken","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","isSwapOutTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","tokenDecimal","tokenValue","newValue","iTxs","withdrawnValue","processEtherscanTransactions","addStoredTransaction","txKey","tokenKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref18","_callee19","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args19","_context19","baseTokenAddress","_ref19","_callee18","minedTxs","_context18","_ref20","_callee17","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context17","getCurveTokenPrice","_ref21","_callee15","_context15","getTransactionReceipt","_x11","_x12","log","topics","baseTokensConfig","t2","_ref22","_callee16","_context16","_x13","_x14","_x9","_x10","_ref23","_callee25","txsToProcess","_args25","_context25","_ref24","_callee24","_context24","_ref25","_callee23","isStoredTx","allowedMethods","pendingStatus","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context23","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","created","_ref26","_callee20","_context20","txReceipt","_x19","_x20","_ref27","_callee21","_context21","_x21","_x22","raw","_ref28","_callee22","_context22","_x23","_x24","decodeLog","_token","_x17","_x18","_x16","_x15","alias","cachedRequests","_ref29","_callee26","error_callback","config","_args26","_context26","catch","_x25","_ref30","_callee27","return_data","_args27","_context27","_x26","code","errorCode","getArrayPath","array","prop","shift","configs","checkUrlOrigin","_ref31","_callee29","googleEventsInfo","originOk","currentNetwork","_args29","_context29","ga","_ref32","_callee28","_context28","hitCallback","hitCallbackFail","_x28","_x29","_x27","createContract","_ref33","_callee30","_context30","Contract","_x30","_x31","_x32","getWalletProvider","simpleIDPassUserInfo","userInfo","email","initSimpleID","passUserInfo","getEtherscanTransactionUrl","tx_address","getEtherscanAddressUrl","decimalCount","thousands","abs","negativeSign","Number","_ref34","_callee31","forceStartTimestamp","order","limit","filteredCachedData","filteredData","apiInfo","_args31","_context31","_x33","_ref35","_callee32","_context32","_x34","aprs","allocations","reduce","aprWeighted","allocation","apr","quantity","hour","day","week","getProtocolInfoByAddress","addr","ROUND_FLOOR","normalizeTokenDecimals","normalizedTokenDecimals","exchangeRate","checkContractPaused","_callee33","contractPaused","_args33","_context33","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref37","_callee36","rebalancer","idleRebalancerInstance","allocationsPromises","availableTokensPromises","protocolIndex","nextAllocations","newTotalAllocation","newProtocolsAllocations","shouldRebalance","_context36","allocationPromise","_ref38","_callee34","_context34","lastAmounts","call","_x36","_x37","availableTokenPromise","_ref39","_callee35","_context35","_x38","_x39","accumulator","availableTokenInfo","nextAllocation","protocolAllocation","protocolAllocationPerc","newProtocolAllocation","_x35","_ref40","_callee37","_context37","_x40","_x41","_ref41","_callee38","signedParameters","callback_receipt","_contract$methods","_context38","getGasPrice","once","confirmationNumber","receipt","_x42","_x43","_x44","_x45","_x46","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","soliditySHA3","toBuffer","_ref42","_callee39","biconomyInfo","res","_context39","headers","x-api-key","_x47","_ref43","_callee40","messageToSign","_this$getSignaturePar","_context40","getNonce","_address","personal","sign","_x48","_x49","_x50","_x51","sendBiconomyTx","_ref44","_callee41","EIP712Domain","MetaTransaction","domainData","dataToSign","_context41","getChainId","verifyingContract","types","domain","primaryType","currentProvider","jsonrpc","response","_x52","_x53","_x54","_x55","_x56","_ref45","_callee42","contractAddr","walletAddr","allowance","_context42","getAllowance","_x57","_x58","_x59","_ref46","_callee43","_context43","_x60","_x61","_x62","methodName","txData","toTwosComplement","_ref47","_callee44","field","addCurveApy","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref48","_ref49","curveAvgBuyPrice","curveTokenBalance","_ref50","_ref51","amountLentCurve1","redeemableBalanceCurve","_ref52","_ref53","earningPerYear","_ref54","_ref55","amountLent1","redeemableBalance1","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","cTokenInfo","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref56","_ref57","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref58","_ref59","tokenAPY1","_earningPerYear","_govTokenConfig2","_ref60","_ref61","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","_ref62","_ref63","amountLentCurve2","redeemableBalanceCurve1","_ref64","_ref65","redeemableBalance2","_args44","_context44","getCurveTokenBalance","getCurveRedeemableIdleTokens","getGovTokenPool","getCompUserDistribution","getIdleGovToken","t3","getCompSpeed","t4","getCompAvgApr","t5","t6","t7","getUserTokenFees","t8","t9","getGovTokenUserBalance","_x63","_x64","_x65","_x66","_ref66","_callee45","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args45","_context45","_x67","clearCachedData","expirationDate","_ref67","_callee46","_ref68","_ref69","idleTokensTotalSupply","userShare","_context46","_x68","_x69","_ref70","_callee47","fixDecimals","_ref71","_ref72","_args47","_context47","_x70","_x71","copyToClipboard","copyText","select","setSelectionRange","execCommand","loadScript","attr","isValidJSON","checkAddress","_ref73","_callee48","_context48","getProtocolBalance","_x72","_x73","_ref74","_callee49","_context49","_x74","_x75","getAprs","_ref75","_callee50","_context50","_x76","genericIdleCall","_ref76","_callee51","callParams","_args51","_context51","_x77","estimateGas","_ref77","_callee52","_contract$methods2","_args52","_context52","_x78","_x79","getTxDecodedLogs","_ref78","_callee54","logAddr","decodeLogs","internalTransfers","_context54","_ref79","_callee53","_context53","_x84","_x85","_x80","_x81","_x82","_x83","getBlockNumber","_callee55","_context55","getContractPastEvents","_ref81","_callee56","_args56","_context56","getPastEvents","_x86","_x87","_ref82","_callee57","_contract$methods3","_args57","_context57","_x88","_x89","_ref83","_callee58","_args58","_context58","_x90","_x91","apr2apy","getUnlentBalance","_ref84","_callee59","unlentBalance","_context59","_x92","_ref85","_callee61","protocolsAprs","exchangeRates","protocolsBalances","govTokensBalances","_args61","_context61","_ref86","_callee60","_ref87","_ref88","protocolBalance","_context60","_x94","_x95","getGovTokensBalances","total","getTokenConversionRate","_x93","getUniswapConversionRate_path","_ref89","_callee62","unires","_context62","_x96","_ref90","_callee63","tokenConfigFrom","tokenConfigDest","_context63","_x97","_x98","getCurveDepositedTokens","_ref91","_callee64","idleTokensBalances","remainingCurveTokens","_args64","_context64","_x99","getCurveUnevenTokenAmounts","_ref92","_callee65","amounts","max_burn_amount","unevenAmounts","_context65","getCurveSwapContract","_x100","_x101","_callee66","curveRatesInfo","_context66","strategyTokens","getCurveAPYContract","_callee67","blocksForPrevTokenPrice","_ref95","_ref96","_tokenPrice","prevTokenPrice","blocksMultiplier","curveAPR","_context67","getCurveTokenSupply","_callee68","_context68","getCurvePoolContract","_callee69","_args69","_context69","_callee70","_args70","_context70","_ref100","_callee71","_ref101","_ref102","_context71","_x102","getCurveDepositContract","_callee72","depositContractInfo","_context72","getCurveZapContract","_callee73","zapContractInfo","_context73","_callee74","poolContractInfo","_context74","_callee75","_context75","getCurveIdleTokensAmounts","_callee77","max_slippage","curveTokenSupply","curveTokenShare","_args77","_context77","_ref108","_callee76","curveIdleTokens","_context76","_x103","getCurveTokensAmounts","_callee79","_args79","_context79","_ref110","_callee78","_ref111","_ref112","totalTokenSupply","_context78","_x104","getCurveAmounts","_ref113","_callee81","_args81","_context81","_ref114","_callee80","_context80","_x107","_x105","_x106","getCurveTokenAmount","_ref115","_callee82","_args82","_context82","_x108","getCurveSlippage","_ref116","_callee83","uneven_amounts","_ref117","_ref118","virtualPrice","Sv","_args83","_context83","_x109","_x110","getCompAPR","_ref119","_callee84","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","compoundAllocation","_ref120","_ref121","_args84","_context84","getCompDistribution","_x111","_x112","_ref122","_callee85","cTokenAddress","compSpeed","_context85","_x113","_ref123","_callee86","compoundAllocationPerc","_ref124","_ref125","cTokenTotalSupply","_args86","_context86","_x114","_callee88","_args88","_context88","_ref127","_callee87","_ref128","_ref129","_context87","_x115","_callee90","_args90","_context90","_ref131","_callee89","_ref132","_ref133","compApr","_context89","_x116","getTokensCsv","_callee93","csv","_context93","prototype","sum","pv","cv","avg","_ref135","_callee92","_context92","_ref136","_callee91","header","rows","aprAvg","scoreAvg","lastRow","_context91","protocolsData","p1","p2","rate","idleScore","row","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","_x118","_x117","_callee95","_args95","_context95","_ref138","_callee94","compTokenBalance","_context94","_x119","speed","getGovTokensUserDistributionSpeed","_ref139","_callee97","govTokensUserDistribution","_args97","_context97","_ref140","_callee96","_context96","_x121","_x120","_ref141","_callee99","govTokensDistribution","_args99","_context99","_ref142","_callee98","govSpeed","_context98","_x123","_x122","_ref143","_callee101","_args101","_context101","_ref144","_callee100","_ref145","_ref146","compoundInfo","_context100","_x126","_x124","_x125","_callee103","_args103","_context103","_ref148","_callee102","tokenConversionRate","fromTokenConfig","_context102","_x127","getGovTokenConfigByAddress","_callee104","checkShowBalance","govTokensEarnings","_args104","_context104","acc","govTokenAmount","_callee107","govTokenConfigForced","_args107","_context107","_ref151","_callee106","govTokensAmounts","_context106","_ref152","_callee105","govTokenAddress","_context105","_x129","_x130","_x128","_callee108","_args108","_context108","_callee109","_ref155","_ref156","gain","fees","_args109","_context109","_ref157","_callee110","_args110","_context110","_x131","getAggregatedStats","_callee114","avgAPR","totalAUM","_args114","_context114","_ref159","_callee113","_context113","_ref160","_callee112","oldTokenAllocation","oldTokenTotalAllocation","_context112","_ref161","_callee111","_ref162","_ref163","tokenBalanceConverted","_context111","_x134","_x133","_x132","getTokenApy","_ref164","_callee115","_context115","_x135","_callee118","_args118","_context118","_ref166","_callee117","_context117","_ref167","_callee116","_ref168","_context116","_x137","_x136","getProtocolsTokensBalances","_callee120","tokenBalances","minTokenBalance","protocolsTokens","_args120","_context120","_ref170","_callee119","tokenContract","_context119","_x138","_ref171","_callee121","_args121","_context121","_x139","_x140","_x141","_ref172","_callee122","_args122","_context122","_x142","_x143","_ref173","_callee123","_ref174","_ref175","_context123","protocolScore","getTokenScoreApi","_x144","_x145","_ref176","_callee124","_context124","_x146","_x147","_ref177","_callee126","Aprs","addresses","protocolsApys","idleGovTokenShowAPR","idleAPR","_args126","_context126","_ref178","_callee125","addrIndex","protocolApr","protocolApy","_context125","_x149","_x150","_x148","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","currYear","getFullYear","governanceEnabled","columnWidth","footer","src_ExtLink_ExtLink","react_router_dom","link","Tos","h2","listStyle","src_Footer_Footer","TorusConnector","kwargs","Torus","api","rest","possibleConstructorReturn","getPrototypeOf","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","close","WalletConnectConnector","WalletConnectProvider","infuraId","defaultNetwork","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","REACT_APP_INFURA_KEY","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","Faquestion","isShowingAnswer","question","answer","Faq","openedAnswer","selectedSection","generalQuestions","q","guidelinesQuestions","ratesQuestions","section","_this$state","generalDivs","src_Faquestion_Faquestion","toggleAnswer","guidelinesDivs","ratesDivs","isGeneralSelected","isGuidelinesSelected","isRatesSelected","setSection","FlexCards","itemPerc","itemsPerRow","cards","AuditCard","transform","HowItWorks","bulletCard","StrategyBox","getHighestAprToken","highestValue","tokensAprs","strategyUrl","fontStyle","NewsletterForm","validated","privacy","handleSubmit","handleValidation","messageColor","post","then","parentNode","classList","onSubmit","Field","outline","toggleCheckbox","RoundIconButton","FloatingToastMessage","ToastComponent","ToastMessage","Success","Processing","Failure","closeElem","handleClose","AssetsUnderManagement","totalAUMEndOfYear","loadTotalAUM","counterStyle","scrolling","Landing","carouselMax","carouselIndex","activeCarousel","runConfetti","activeBullet","testPerformed","carouselOffsetLeft","setActiveCarousel","carouselIntervalID","randomAllocationEnabled","handleCarousel","multiplier","$element","processScrolling","bulletCards","getElementsByClassName","offsetParent","offsetY","offsetTop","getAllocations","remainingAllocation","totProtocols","alloc","startLending","updateSelectedTab","setConfetti","connectAndGoToRoute","goToLocation","processCustomParam","mainViewport","paddingBottom","isCorrectNetwork","textAlignLast","overflowY","strategyIndex","src_StrategyBox_StrategyBox","src_RoundIconButton_RoundIconButton","src_HowItWorks_HowItWorks","src_AssetsUnderManagement_AssetsUnderManagement","src_AuditCard_AuditCard","gradientBackground","h5","sandbox","src_FlexCards_FlexCards","src_Faq_Faq","src_NewsletterForm_NewsletterForm","toastMessageProps","src_FloatingToastMessage_FloatingToastMessage","closeToastMessage","DashboardMenu","buyModalOpened","menu","visibleLinks","menuLink","showMobile","menuIndex","LinkComponent","isExternalLink","RouterLink","selected","StatsChart","chartType","parseAum","loadApiData","CustomTooltipRow","CustomTooltip","maxGridLines","apiResults","apiResults_unfiltered","totalItems","versionInfo","tempData","axisBottomIndex","idleChartData","divergingData","maxRange","_i","_i2","_i3","prevValue","_i4","prevApr","prevData","startBalance","currentBalance","_i5","_i6","chartMode","idleVersion","redeems","idleSupply","idleTokensPrev","eq","diff","Bar","indexBy","enableLabel","minValue","maxValue","axisRight","markers","lineStyle","strokeOpacity","textStyle","legendOrientation","legendOffsetX","labelTextColor","labelSkipWidth","labelSkipHeight","dataFrom","translateX","itemsSpacing","indexValue","depositFormatted","redeemFormatted","aum","z","foundItem","pos","showAdvanced","serieColor","protocolColor","protocolAllocationFormatted","protocolData","protocolPaused","borderCollapse","allocationPerc","protocolEarning","apy","earning","additionalProtocol","unshift","chartRow","baseProfit","firstProtocolData","firstProtocolBlock","protocolRate","idlePerformance","d1","rowData","lastRowData","lastTokenPrice","tokenExchangeRate","tokenPriceFixed","lastYDiff","showAdvancedChanged","apiResultsChanged","Rebalance","StatsCard","titleMinHeight","valueProps","labelTooltip","Breadcrumb","showPathMobile","pathLink","Link","borderLeft","DateRangeModal","quickSelection","ranges","endDate","componentDidUpdate","selection","handleSelect","startTimestampObj","endTimestampObj","handleQuickSelect","react_date_range_dist","minDate","maxDate","Stats","delta","rebalances","buttonGroups","statsVersions","minStartTime","govTokensPool","dateRangeModalOpened","quickSelections","weeks","month","setDateRange","isSame","isBefore","maxEndDate","toggleAdvancedCharts","setDateRangeModal","filterTokenData","setIdleVersion","firstResult","lastResult","firstIdlePrice","lastIdlePrice","firstCompoundData","lastCompoundData","compoundWithCOMPInfo","compoundAvgApr","firstCompoundPrice","lastCompoundPrice","compoundApr","compoundData","compoundRate","prevRow","prevTotalAllocation","hasRebalanced","prevP","prevAllocation","loadParams","latestVersion","versionInfoExtra","param","currentNetworkAvailableTokens","customToken","getLatestAvailableVersion","getVersionInfo","newEndTimestampObj","newStartTimestampObj","initWeb3","loadCarousel","strategyChanged","dateChanged","versionChanged","showAPYDisclaimer","versionsOptions","versionDefaultValue","src_Breadcrumb_Breadcrumb","src_StatsCard_StatsCard","Stats_StatsChart","src_Rebalance_Rebalance","components_DateRangeModal","statsTokens","statsProtocols","Utils","SubComponent","selectedSubsection","submenu","tool","toolIndex","FundsOverview","govTokensTotalApr","govTokensTotalAprTooltip","idleTokenUserDistribution","govTokensDistributionTooltip","totBalance","totApr","ConnectBox","CurveRedeem","maxSlippage","showMaxSlippage","curveTokensAmounts","redeemUnevenAmounts","curveRedeemableIdleTokens","toggleUnevenAmounts","initToken","curveConfig","withdrawSlippage","_amount","min_amounts","coin_index","min_amount","_token_amount","calculateSlippage","isGreaterThan","getFastBalanceSelector","setMaxSlippage","normalizedAmount","curveIdleTokensAmounts","redeemUnevenAmountsChanged","inputChanged","maxSlippageChanged","showSlippage","curveTokenName","TwitterShareButton","share","parent","w","tweet","ShareModal","escape","customText","confettiEnabled","react_confetti_default","recycle","src_TwitterShareButton_TwitterShareButton","DepositRedeem","txError","canRedeem","activeModal","showBuyFlow","showRedeemFlow","canRedeemCurve","canDepositCurve","actionProxyContract","componentMounted","redeemCurveEnabled","depositCurveBalance","depositCurveEnabled","showAdvancedOptions","depositCurveSlippage","setShowRedeemFlow","setShowBuyFlow","toggleShowAdvancedOptions","toggleRedeemCurve","toggleDepositCurve","toggleSkipMint","toggleRedeemGovTokens","setActiveModal","approveContract","approveToken","loadTokenInfo","curveTokenEnabled","checkAction","loadAPY","contractSendResult","callbackDeposit","callbackReceiptDeposit","curvePoolContractInfo","tokensToDeposit","minMintAmount","depositParams","_tokensToDeposit","depositMetaTransactionsEnabled","_depositParams","mintProxyContractInfo","mintProxyContract","_mintProxyContract$me","_skipMint","maxUnlentPerc","depositPerc","_callbackRedeem","_callbackReceiptRedeem","redeemParams","lendingProcessing","lendAmount","genericError","loadProxyContracts","hasProxyContract","approved","tokenBalanceChanged","depositCurveChanged","calculateCurveSlippage","govTokensDisabled","skipMintForDepositEnabled","redeemGovTokenEnabled","metaTransactionsAvailable","depositCurve","showDepositOptions","canPerformAction","showDepositCurve","showRedeemCurve","showActionFlow","showCurveSlippage","showRebalanceOption","showAdvancedDepositOptions","tokenFeesPercentage","src_ConnectBox_ConnectBox","src_CurveRedeem_CurveRedeem","components_BuyModal","components_ShareModal","CardIconButton","EstimatedEarnings","tokenApy","maxInputValue","loadChart","amountMonth","amount3Months","amount6Months","amountYear","monthColor","month3","month3Color","month6","month6Color","year","yearColor","verticalAlign","AssetPage","tokenFees","loadTokensInfo","userHasFunds","src_CardIconButton_CardIconButton","src_DepositRedeem_DepositRedeem","src_FundsOverview_FundsOverview","src_EstimatedEarnings_EstimatedEarnings","depositSlippage","approveCallback","normalizeIdleTokenBalance","idleTokenBalanceChanged","hasCurveTokens","getMigrationParams","PortfolioEquityCurve","aggregatedBalanceParsed","FundsOverviewCurve","src_PortfolioEquityCurve_PortfolioEquityCurve","redeemBalance","depositBalance","setSelectedToken","getSelectedToken","param1","updateAssetSelector","curveTokensToRedeem","src_CurveDeposit_CurveDeposit","src_FundsOverviewCurve_FundsOverviewCurve","WelcomeModal","subscribed","sendingForm","sendUserInfo","sendEmail","walletProvider","lastLogin","signedUp","header_styles","TooltipModal","content","MigrateModal","dontShowAgain","toggleDontShowAgain","tokenMigrationRoute","protocolsTokensBalances","UpgradeModal","convert","oldIdleTokensToMigrate","AccountModal","loadBalances","strategyToken","setConnector","context","acccount","renderBalances","MenuAccount","isModalOpen","toggleModal","modalName","loadIdleTokenBalance","unclaimed","connectorInfo","walletIcon","alt","setGovModal","components_AccountModal","GovModal","txStatus","claimCallback","GovernanceUtil","getTotalSupply","totalSupply","getTokensBalance","getVestingContract","vestingContract","VesterABI","delegateVesting","delegate","getVestingAmount","vestingAmount","getCurrentDelegate","getCurrentVotes","votes","queueProposal","proposalId","_args8","executeProposal","proposeAndVoteFor","targets","signatures","calldatas","batcher","Batcher","propose","args","castVote","support","setDelegate","getDelegates","delegationsCalls","fromBlock","delegatesContractName","toBlock","all_delegations","delegations","delegateAccounts","all_votes","_e$returnValues","returnValues","getVotes","rank","vote_weight","proposals","voter","splice","getProposalParams","govContractName","proposalThreshold","proposalMaxOperations","governanceContractName","_e$returnValues2","getProposals","voted_by","enumerateProposalState","proposalCount","proposalGets","proposalStateGets","_arr","proposalStates","proposalQueuedEvents","proposalCreatedEvents","proposalCanceledEvents","proposalExecutedEvents","_args18","reverse","createdEvent","canceledEvent","executedEvent","queuedEvent","createdBlockInfo","createdState","activeState","canceledBlockInfo","canceledState","queuedBlockInfo","succeededState","queuedState","executedBlockInfo","executedState","endBlockInfo","endState","_createdEvent$returnV","states","getBlock","end_time","start_time","trx_hash","endBlock","eta","executed","canceled","forVotes","proposer","againstVotes","DelegateVesting","currentDelegate","idleTokenDelegated","vestingContractDelegated","governanceUtil","delegateTokens","DashboardHeader","govModalOpened","isDashboard","isGovernance","governanceRoute","dashboardRoute","src_MenuAccount_MenuAccount","src_DelegateVesting_DelegateVesting","components_GovModal","Dashboard","currentRoute","pageComponent","currentSection","showResetButton","timeoutId","modalTitle","modalContent","curveParams","CurveStrategy","u","section_is_strategy","param1_is_strategy","param1_is_token","param2_is_token","sectionRoute","subm","loadMenu","accountInizialized","initAccount","initializeContracts","checkModals","prevParams","checkTokensToMigrate","checkWelcomeModal","checkProtocolsTokensBalances","showUpgradeModal","welcomeIsOpen","welcomeModalProps","currTime","lastTime","migrateModalEnabled","showMigrateModal","newRoute","routeParts","PageComponent","src_DashboardMenu_DashboardMenu","overflowX","src_DashboardHeader_DashboardHeader","components_UpgradeModal","components_MigrateModal","components_TooltipModal","components_WelcomeModal","current","baseTokenName","WrongNetworkBanner","NetworkUtil","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","bold","NoWalletModal","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","Web3ConnectionButtons","useWeb3Context","connectionCallback","unsetConnector","isMetamask","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","ConnectionModal","showTxFees","closeRemainingTime","newToEthereumChoice","showInstructions","toggleShowTxFees","setStoredSection","closeCountdown","setWalletChoice","choice","setCurrentSection","renderModalContent","TOSacceptance","showConnectionButtons","newToEthereum","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","LowFundsModal","showSecondary","toggleQRVisible","alignContent","as","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","INFURA_KEY","RimbleTransactionContext","createContext","accountBalance","accountBalanceToken","accountBalanceLow","web3Infura","checkPreflight","rejectAccountConnect","accountValidationPending","rejectValidation","enableUnderlyingWithdraw","checkNetwork","userRejectedValidation","transactionConnectionModalIsOpen","openNoWeb3BrowserModal","openConnectionPendingModal","openUserRejectedConnectionModal","closeUserRejectedValidationModal","openUserRejectedValidationModal","openConnectionErrorModal","openTransactionErrorModal","openWrongNetworkModal","openLowFundsModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","testTransaction","createTransaction","addTransaction","updateTransaction","errorMessage","isWalletConnectClosedModalError","availableStrategiesChanged","customAddress","connectorNameChanged","web3Host","web3Provider","forceCallback","terminalInfo","TerminalHttpProviderParams","terminalSourceType","terminalHttpProvider","web3Callback","originalWeb3","biconomyWeb3Provider","autoRefreshOnNetworkChange","Web3","HttpProvider","library","SourceType","customHttpProvider","TerminalHttpProvider","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","simpleIDInfo","simpleIDParams","SimpleID","wallets","notifications","shownNotifications","isError","$crisp","notificationId","Sentry","increaseAmount","contractInfo","balanceOf","determineAccountLowBalance","openConnectionModal","getRequiredNetwork","getNetworkId","net","getId","getNetworkName","getNetworkType","contractMethod","gasLimit","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","_args24","confirmationCount","call_callback","confidenceThreshold","recentEvent","timeout","now","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","ProposalField","proposal","totalVotes","vote","ProposalListFilters","ProposalsList","rowsPerPage","totalRows","defeated","succeeded","queued","expired","processedRows","processList","pageChanged","proposalsChanged","filtersEnabled","hasRows","Governance_ProposalListFilters_ProposalListFilters","DelegateField","opts","bgcolor","spotcolor","seed","DelegatesList","maxRows","delegatesChanged","delegateId","Overview","dataLoaded","votesDelegated","Governance_ProposalsList_ProposalsList","Governance_DelegatesList_DelegatesList","DelegateVote","newDelegate","checkNewDelegate","changeDelegate","loadUserData","isUndelegated","canClose","Delegate","Governance_DelegateVote_DelegateVote","NewProposal","actionValue","customABI","newAction","editAction","actionInputs","actionValid","contractOptions","proposalCreated","functionsOptions","selectedContract","selectedFunction","selectedSignature","availableFunctions","validateForm","checkInputs","loadFunctionsOptions","contractABI","getContractABI","f","constant","inputs","stateMutability","valid","fieldPattern","getPatternByFieldType","returnString","RegExp","inputIndex","inputInfo","inputValid","validateField","inputTypes","calldata","encodeParameters","_this5","handleInput","actionIndex","setEditAction","changeContract","pattern","changeFunction","payable","valueChange","fieldType","inputChange","addAction","deleteAction","setNewAction","CastVote","loaded","userVote","voteSucceed","showDelegateBox","setVote","Governance_ProposalField_ProposalField","toggleDelegateBox","ProposalDetails","showActionParams","lastState","hasVotes","forVotesPerc","againstVotesPerc","forVotesAddrs","againstVotesAddrs","canQueue","canExecute","Governance_CastVote_CastVote","decodedParams","attrs","decodeParameters","toggleShowParams","paramIndex","stateInfo","stateIndex","voteInfo","voteIndex","Proposals","addProposal","selectedProposal","item_id","foundProposal","Governance_ProposalDetails_ProposalDetails","Governance_NewProposal_NewProposal","DelegateDetails","loadProposals","Leaderboard","selectedDelegate","Governance_DelegateDetails_DelegateDetails","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","outputs","anonymous","indexed","ERC20","defiPrime","IdleTokenV4","cToken","yToken","iToken","aToken","CHAI","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","transactionToastMeta","transactionAction","charAt","newMessage","App","selectedTab","connecting","unsubscribeFromHistory","showToastMessage","customParam","setCustomAddress","widthChanged","heightChanged","tabIndex","loadAvailableTokens","warn","closeIframe","iFrames","getElementsByTagName","iframe","contentWindow","parents","self","hasMetamask","web3_react_dist_default","libraryName","web3Api","web3_react_dist","RimbleWeb3","needsPreflight","react_router","src_Dashboard_Dashboard","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","Governance","components_Header","src_Web3Debugger_Web3Debugger","exact","src_Landing_Landing","react_cookie_consent_build_default","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","registration","unregister","loading-dots","loading-dots--dot","dot-keyframes","graySection","whiteSection","howItWork","skewBg","bgHeart","platformLogo","bulletCardFirst","bulletCardActive","bulletPoint","bulletRight","bulletTop","bulletLeft","bulletBottom","bulletBottomLeft","bulletBottomBottom","bulletMobile","carouselItem","pos1","carouselItemMobile","pos2","pos3","bentTube","bounceArrow","bounce","rebalanceCircle","spin","carouselDesc","carouselNav","socialIcon","bentTubeLeft","bentTubeRight","bentTubeActive","bg1"],"mappings":"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,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,uBACx7EC,6CAA6C,CAACC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUnF,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,aAGpqD1hC,MAAM,CACJlJ,MAAM,GACN5S,MAAM,CACJw3C,IAAI,CAAC,EAAG,GAAI,KACZ9kC,IAAI,CAAC,MAAO,OAAQ,SAGxBnM,KAAK,CACHqM,MAAM,OACN5S,MAAM,CACJw3C,IAAI,CAAC,EAAG,GAAI,KACZ9kC,IAAI,CAAC,MAAO,OAAQ,WAK5BsrC,SAAS,CACPxb,QAAQ,CACN/jC,OAAO,CACLw/C,eAAc,EACd7V,yBAAwB,GAE1B1pC,QAAQ,CACNw/C,UAAS,EACTC,iBAAiB,IACjBC,yBAAwB,EACxBhW,yBAAwB,EACxBiW,cAAc,CACZh4C,SAAQ,EACRygB,IAAIw3B,GACJ9vC,KAAK,kBACL+vC,SAAS,sBACTl2C,QAAQ,+CAGZ1J,QAAQ,CACNs/C,eAAc,EACdvS,sBAAsB,IACtB8S,4BAA4B,KAE9BC,gBAAgB,CACdp4C,SAAQ,GAEVq4C,UAAU,CACRr4C,SAAQ,EACRygB,IAAI63B,MAIVC,QAAQ,CACNC,kBAAkB,CAChB52B,EAAE,UACFE,EAAE,UACF22B,EAAE,UACFC,GAAG,SAELC,UAAS,EACTC,gBAAgB,EAChBh3C,cAAc,QACdgvB,iBAAiB,QACjBioB,sBAAuB,EACvBC,sBAAuB,EACvB7e,UAAU,CACR8e,OAAO,CACLn3B,EAAG,gCACH82B,GAAI,+BAENM,UAAU,CACRh5C,SAAQ,EACRi5C,UAAU,CACRr3B,EAAG,+BACH82B,GAAI,uCAGRrU,SAAS,CACPrkC,SAAQ,EACRk5C,aAAY,EACZC,kBAAkB,CAAC,EAAE,IACrBC,gBAAgB,CAAC,aACjBH,UAAU,CACRI,OAAO,mDAETtU,OAAO,CACLuU,OAAO,EACPC,OAAQ9P,GAAI+P,uBACZC,OAAQhQ,GAAIiQ,yBACZC,MAAO,yCAGXC,SAAS,CACP55C,SAAQ,EACRm5C,kBAAkB,CAAC,EAAE,IACrBpU,OAAO,CACLwU,OAAQ9P,GAAIoQ,uBACZC,UAAWrQ,GAAIsQ,8BACfC,OAAQ,KACRC,YAAaC,gBAAaC,MAG9BC,SAAS,CACPp6C,SAAQ,EACRm5C,kBAAkB,CAAC,GACnBkB,WAAW,SAACC,EAAU9B,GACpB,IAAI+B,EAAc,KAClB,OAAQD,GACN,KAAK,EACHC,EAAc,UAChB,MACA,QACEA,EAAc/B,EAAkB8B,GAAa9B,EAAkB8B,GAAWxuC,cAAgB,UAG9F,OAAOyuC,GAETxV,OAAO,CACLyV,UAAWt0C,OAAOu0C,SAASC,OAC3B/Q,QAAS,OACTgR,MAAO,uCACPC,qBAAqB,EACrBrC,QAAS,cAKjBsC,MAAM,CACJC,eAAe,CACb96C,SAAQ,EACR+6C,cAAa,EACb3U,gBAAe,EACf15B,KAAK,eACLk6B,MAAM,kBACNr6B,MAAM,kBACNyuC,aAAazS,GACb/jB,KAAK,gGACL/oB,MAAM,CACJ2G,gBAAgB,CACdmsC,aAAa,CACXzvC,SAAS,GACT2hB,IAAIw6B,GACJnT,SAAS,OACTxpB,UAAU,MACVnW,KAAK,iBACLjJ,MAAM,iBACN8C,QAAQ,6CACR2hC,kBAAkB,CAChBljB,IAAIy6B,GACJ/yC,KAAK,wBACLnG,QAAQ,6CACRklC,UAAU,CACR,CACE36B,MAAM,UACNpE,KAAK,cAKbsmC,cAAc,CACZ3vC,SAAS,GACT2hB,IAAIw6B,GACJnT,SAAS,OACTxpB,UAAU,OACVnW,KAAK,kBACLjJ,MAAM,kBACN8C,QAAQ,6CACR2hC,kBAAkB,CAChBljB,IAAIy6B,GACJ/yC,KAAK,yBACLnG,QAAQ,6CACRklC,UAAU,CACR,CACE36B,MAAM,UACNpE,KAAK,cAKbumC,cAAc,CACZ5vC,SAAS,GACT2hB,IAAIw6B,GACJnT,SAAS,OACTxpB,UAAU,OACVnW,KAAK,kBACLjJ,MAAM,kBACN8C,QAAQ,6CACR2hC,kBAAkB,CAChBljB,IAAIy6B,GACJ/yC,KAAK,yBACLnG,QAAQ,6CACRklC,UAAU,CACR,CACE36B,MAAM,UACNpE,KAAK,cAKbgzC,cAAc,CACZr8C,SAAS,GACT2hB,IAAIw6B,GACJnT,SAAS,OACTxpB,UAAU,OACVnW,KAAK,kBACLjJ,MAAM,kBACN8C,QAAQ,6CACR2hC,kBAAkB,CAChBljB,IAAIy6B,GACJ/yC,KAAK,yBACLnG,QAAQ,6CACRklC,UAAU,CACR,CACE36B,MAAM,UACNpE,KAAK,cAKbwmC,cAAc,CACZ7vC,SAAS,GACT2hB,IAAIw6B,GACJnT,SAAS,OACTxpB,UAAU,OACVnW,KAAK,kBACLjJ,MAAM,kBACN8C,QAAQ,6CACR2hC,kBAAkB,CAChBljB,IAAIy6B,GACJ/yC,KAAK,yBACLnG,QAAQ,6CACRklC,UAAU,CACR,CACE36B,MAAM,UACNpE,KAAK,cAKbizC,cAAc,CACZt8C,SAAS,GACT2hB,IAAIw6B,GACJnT,SAAS,OACTxpB,UAAU,OACVnW,KAAK,kBACLjJ,MAAM,kBACN8C,QAAQ,6CACR2hC,kBAAkB,CAChBljB,IAAIy6B,GACJ/yC,KAAK,yBACLnG,QAAQ,6CACRklC,UAAU,CACR,CACE36B,MAAM,UACNpE,KAAK,cAKbkzC,YAAY,CACVv8C,SAAS,GACT2hB,IAAIw6B,GACJnT,SAAS,OACTxpB,UAAU,MACVnW,KAAK,gBACLjJ,MAAM,gBACN8C,QAAQ,6CACR2hC,kBAAkB,CAChBljB,IAAIy6B,GACJ/yC,KAAK,4BACLnG,QAAQ,6CACRklC,UAAU,CACR,CACE36B,MAAM,UACNpE,KAAK,cAKbmzC,aAAa,CACXx8C,SAAS,GACT2hB,IAAIw6B,GACJnT,SAAS,OACTxpB,UAAU,OACVnW,KAAK,iBACLjJ,MAAM,iBACN8C,QAAQ,6CACR2hC,kBAAkB,CAChBljB,IAAIy6B,GACJ/yC,KAAK,6BACLnG,QAAQ,6CACRklC,UAAU,CACR,CACE36B,MAAM,UACNpE,KAAK,cAKbozC,aAAa,CACXz8C,SAAS,GACT2hB,IAAIw6B,GACJnT,SAAS,OACTxpB,UAAU,OACVnW,KAAK,iBACLjJ,MAAM,iBACN8C,QAAQ,6CACR2hC,kBAAkB,CAChBljB,IAAIy6B,GACJ/yC,KAAK,6BACLnG,QAAQ,6CACRklC,UAAU,CACR,CACE36B,MAAM,UACNpE,KAAK,iBAQnBqzC,eAAe,CACbx7C,SAAQ,EACR0M,KAAK,YACLk6B,MAAM,UACNr6B,MAAM,kBACNiY,KAAK,yEACLw2B,aAAaxT,GACb/rC,MAAM,CACJkoC,kBAAkB,CAChBx7B,KAAK,kBACLsY,IAAIg7B,GACJz5C,QAAQ,6CACR05C,aAAa,GACbxU,UAAU,CACR,CACE36B,MAAM,UACNpE,KAAK,uBAIXzF,oBAAoB,CAAC,OAAO,QAC5BN,gBAAgB,CACdu5C,UAAU,CACR78C,SAAS,GACTkB,SAAQ,EACR6uC,SAAS,OACTvwB,UAAU,MACVmC,IAAIm7B,GACJ18C,MAAM,aACNwN,KAAK,4BACLu7B,gBAAgB,oBAChBjmC,QAAQ,8CAEV65C,KAAK,CACH/8C,SAAS,EACTkB,SAAQ,EACRd,MAAM,OACNof,UAAU,MACVuwB,SAAS,WACT5G,gBAAgB,4BAChBjmC,QAAQ,8CAEV85C,KAAK,CACHh9C,SAAS,GACTkB,SAAQ,EACRd,MAAM,OACNof,UAAU,MACVuwB,SAAS,UACT5G,gBAAgB,2BAChBjmC,QAAQ,8CAEV+5C,KAAK,CACHj9C,SAAS,GACTkB,SAAQ,EACRd,MAAM,OACN2vC,SAAS,OACTvwB,UAAU,MACV2pB,gBAAgB,wBAChBjmC,QAAQ,8CAEVg6C,OAAO,CACLl9C,SAAS,GACTkB,SAAQ,EACRd,MAAM,SACNuhB,IAAIu7B,GAAOv7B,IACXnC,UAAU,MACVuwB,SAAS,QACTniC,KAAK,yBACLu7B,gBAAgB,yBAChBjmC,QAAQ,8CAEVi6C,OAAO,CACLn9C,SAAS,GACTkB,SAAQ,EACRd,MAAM,SACNof,UAAU,MACVmC,IAAIu7B,GAAOv7B,IACXouB,SAAS,QACTniC,KAAK,yBACLu7B,gBAAgB,yBAChBjmC,QAAQ,8CAEVk6C,WAAW,CACTp9C,SAAS,GACTkB,SAAQ,EACR6uC,SAAS,OACTpuB,IAAIm7B,GACJt9B,UAAU,OACVpf,MAAM,cACNwN,KAAK,6BACLu7B,gBAAgB,oBAChBjmC,QAAQ,8CAEVm6C,MAAM,CACJr9C,SAAS,EACTkB,SAAQ,EACRd,MAAM,QACNof,UAAU,OACVuwB,SAAS,WACT5G,gBAAgB,4BAChBjmC,QAAQ,8CAEVo6C,MAAM,CACJt9C,SAAS,EACTkB,SAAQ,EACRd,MAAM,QACNof,UAAU,OACVuwB,SAAS,UACT5G,gBAAgB,2BAChBjmC,QAAQ,8CAEVq6C,MAAM,CACJv9C,SAAS,EACTkB,SAAQ,EACRd,MAAM,QACN2vC,SAAS,OACTvwB,UAAU,OACV2pB,gBAAgB,wBAChBjmC,QAAQ,8CAEVs6C,QAAQ,CACNx9C,SAAS,EACTkB,SAAQ,EACRd,MAAM,UACN2vC,SAAS,QACTpuB,IAAI67B,GAAQ77B,IACZnC,UAAU,OACV5R,KAAK,0BACLu7B,gBAAgB,yBAChBjmC,QAAQ,8CAEVu6C,QAAQ,CACNz9C,SAAS,EACTkB,SAAQ,EACRd,MAAM,UACN2vC,SAAS,QACTpuB,IAAI67B,GAAQ77B,IACZnC,UAAU,OACV5R,KAAK,0BACLu7B,gBAAgB,yBAChBjmC,QAAQ,8CAEVw6C,MAAM,CACJ19C,SAAS,EACTkB,SAAQ,EACRd,MAAM,QACNof,UAAU,OACVuwB,SAAS,WACT5G,gBAAgB,4BAChBjmC,QAAQ,8CAEVy6C,MAAM,CACJ39C,SAAS,EACTkB,SAAQ,EACRd,MAAM,QACNof,UAAU,OACVuwB,SAAS,UACT5G,gBAAgB,2BAChBjmC,QAAQ,8CAEV06C,MAAM,CACJ59C,SAAS,EACTkB,SAAQ,EACRd,MAAM,QACN2vC,SAAS,OACTvwB,UAAU,OACV2pB,gBAAgB,wBAChBjmC,QAAQ,8CAEV26C,QAAQ,CACN79C,SAAS,EACTkB,SAAQ,EACRd,MAAM,UACNuhB,IAAIk8B,GAAQl8B,IACZouB,SAAS,QACTvwB,UAAU,OACV5R,KAAK,0BACLu7B,gBAAgB,yBAChBjmC,QAAQ,8CAEV46C,QAAQ,CACN99C,SAAS,EACTkB,SAAQ,EACRd,MAAM,UACNuhB,IAAIk8B,GAAQl8B,IACZouB,SAAS,QACTvwB,UAAU,OACV5R,KAAK,0BACLu7B,gBAAgB,yBAChBjmC,QAAQ,8CAEV66C,WAAW,CACT/9C,SAAS,GACTkB,SAAQ,EACRygB,IAAIm7B,GACJ/M,SAAS,OACTvwB,UAAU,OACVpf,MAAM,mBACNwD,oBAAoB,CAAC,QACrBulC,gBAAgB,oBAChBv7B,KAAK,kCACL1K,QAAQ,8CAEV86C,MAAM,CACJh+C,SAAS,EACTkB,SAAQ,EACRd,MAAM,QACN2vC,SAAS,OACTvwB,UAAU,OACV2pB,gBAAgB,wBAChBjmC,QAAQ,8CAEV+6C,QAAQ,CACNj+C,SAAS,GACTkB,SAAQ,EACRd,MAAM,UACNuhB,IAAIs8B,GACJz+B,UAAU,OACVuwB,SAAS,QACTnsC,oBAAoB,CAAC,QACrBgK,KAAK,4BACLu7B,gBAAgB,yBAChBjmC,QAAQ,8CAEVg7C,WAAW,CACTl+C,SAAS,GACTkB,SAAQ,EACRygB,IAAIm7B,GACJ/M,SAAS,OACTvwB,UAAU,OACVpf,MAAM,mBACNwD,oBAAoB,CAAC,QACrBulC,gBAAgB,oBAChBv7B,KAAK,kCACL1K,QAAQ,8CAEVi7C,MAAM,CACJn+C,SAAS,EACTkB,SAAQ,EACRd,MAAM,QACN2vC,SAAS,OACTvwB,UAAU,OACV2pB,gBAAgB,wBAChBjmC,QAAQ,8CAEVk7C,QAAQ,CACNp+C,SAAS,GACTkB,SAAQ,EACRygB,IAAIy8B,GACJh+C,MAAM,UACNof,UAAU,OACVuwB,SAAS,QACTniC,KAAK,4BACLu7B,gBAAgB,yBAChBjmC,QAAQ,8CAEVm7C,MAAM,CACJr+C,SAAS,EACTkB,SAAQ,EACRd,MAAM,QACNof,UAAU,OACVuwB,SAAS,WACT5G,gBAAgB,4BAChBjmC,QAAQ,8CAEVo7C,MAAM,CACJt+C,SAAS,EACTkB,SAAQ,EACRd,MAAM,QACNof,UAAU,OACVuwB,SAAS,UACT5G,gBAAgB,2BAChBjmC,QAAQ,8CAEVq7C,MAAM,CACJv+C,SAAS,EACTkB,SAAQ,EACRd,MAAM,QACN2vC,SAAS,OACTvwB,UAAU,OACV2pB,gBAAgB,wBAChBjmC,QAAQ,iDAKhBs7C,SAAS,CACPt9C,SAAQ,EACR0M,KAAK,mBACLk6B,MAAM,YACNr6B,MAAM,YACNiY,KAAK,8CACLw2B,aAAariB,GACb4kB,YAAY,CACV9iB,YAAW,EACX8B,eAAc,IAGlBihB,UAAU,CACRx9C,SAAQ,EACR0M,KAAK,WACLk6B,MAAM,eACNr6B,MAAM,eACNiY,KAAK,8CACLw2B,aAAav5B,GACbhmB,MAAM,CACJ2G,gBAAgB,CACdq7C,IAAM,CAACv+C,MAAQ,OACfqwC,IAAM,CAACrwC,MAAQ,SAGnBq+C,YAAY,CACVG,IAAI,gCACJ17C,QAAQ,+CAGZ27C,UAAU,CACR39C,SAAQ,EACR0M,KAAK,OACLk6B,MAAM,aACNr6B,MAAM,aACNiY,KAAK,4CACLw2B,aAAa/8B,GACbxiB,MAAM,CACJ2G,gBAAgB,CACdq7C,IAAM,CAACv+C,MAAQ,OACfqwC,IAAM,CAACrwC,MAAQ,OACfyyC,KAAO,CAACzyC,MAAQ,QAChBwyC,KAAO,CAACxyC,MAAQ,QAChB2wC,KAAO,CAAC3wC,MAAQ,QAChB0+C,KAAO,CAAC1+C,MAAQ,QAChBuyC,KAAO,CAACvyC,MAAQ,QAChB0yC,KAAO,CAAC1yC,MAAQ,QAChB2+C,KAAO,CAAC3+C,MAAQ,QAChB4+C,KAAO,CAAC5+C,MAAQ,QAChB6+C,KAAO,CAAC7+C,MAAQ,QAChB8+C,OAAO,CAAC9+C,MAAQ,QAChB++C,IAAM,CAAC/+C,MAAQ,OACfg/C,MAAQ,CAACh/C,MAAQ,SACjBi/C,KAAO,CAACj/C,MAAQ,QAChBk/C,IAAM,CAACl/C,MAAQ,OACfm/C,IAAM,CAACn/C,MAAQ,OACfo/C,KAAO,CAACp/C,MAAQ,QAChBq/C,IAAM,CAACr/C,MAAQ,OACfs/C,IAAM,CAACt/C,MAAQ,OACfu/C,IAAM,CAACv/C,MAAQ,OACfw/C,IAAM,CAACx/C,MAAQ,OACfy/C,IAAM,CAACz/C,MAAQ,OACf0/C,IAAM,CAAC1/C,MAAQ,OACf2/C,IAAM,CAAC3/C,MAAQ,OACf4/C,IAAM,CAAC5/C,MAAQ,OACf6/C,IAAM,CAAC7/C,MAAQ,OACf8/C,IAAM,CAAC9/C,MAAQ,OACf+/C,IAAM,CAAC//C,MAAQ,OACfggD,IAAM,CAAChgD,MAAQ,OACfigD,MAAQ,CAACjgD,MAAQ,SACjBkgD,IAAM,CAAClgD,MAAQ,OACfmgD,IAAM,CAACngD,MAAQ,OACfogD,IAAM,CAACpgD,MAAQ,OACfqgD,IAAM,CAACrgD,MAAQ,OACfsgD,IAAM,CAACtgD,MAAQ,OACfugD,KAAO,CAACvgD,MAAQ,QAChBwgD,IAAM,CAACxgD,MAAQ,OACfygD,IAAM,CAACzgD,MAAQ,OACf0gD,KAAO,CAAC1gD,MAAQ,QAChB2gD,KAAO,CAAC3gD,MAAQ,QAChB4gD,KAAO,CAAC5gD,MAAQ,QAChB6gD,IAAM,CAAC7gD,MAAQ,OACf8gD,KAAO,CAAC9gD,MAAQ,QAChB+gD,IAAM,CAAC/gD,MAAQ,OACfghD,IAAM,CAAChhD,MAAQ,OACfihD,IAAM,CAACjhD,MAAQ,OACfkhD,IAAM,CAAClhD,MAAQ,OACfmhD,IAAM,CAACnhD,MAAQ,OACfohD,IAAM,CAACphD,MAAQ,OACfqhD,IAAM,CAACrhD,MAAQ,OACfshD,MAAQ,CAACthD,MAAQ,SACjBuhD,KAAO,CAACvhD,MAAQ,QAChBwhD,IAAM,CAACxhD,MAAQ,OACfyhD,IAAM,CAACzhD,MAAQ,OACf0hD,IAAM,CAAC1hD,MAAQ,OACf2hD,IAAM,CAAC3hD,MAAQ,OACf4hD,KAAO,CAAC5hD,MAAQ,QAChB6hD,IAAM,CAAC7hD,MAAQ,OACf8hD,IAAM,CAAC9hD,MAAQ,OACf+hD,KAAO,CAAC/hD,MAAQ,QAChBgiD,KAAO,CAAChiD,MAAQ,QAChBiiD,GAAK,CAACjiD,MAAQ,MACdkiD,IAAM,CAACliD,MAAQ,OACfmiD,IAAM,CAACniD,MAAQ,OACfoiD,IAAM,CAACpiD,MAAQ,OACfqiD,IAAM,CAACriD,MAAQ,OACfsiD,IAAM,CAACtiD,MAAQ,OACfuiD,IAAM,CAACviD,MAAQ,OACfwiD,IAAM,CAACxiD,MAAQ,OACfyiD,IAAM,CAACziD,MAAQ,OACf0iD,IAAM,CAAC1iD,MAAQ,OACf2iD,IAAM,CAAC3iD,MAAQ,OACf4iD,IAAM,CAAC5iD,MAAQ,OACf6iD,IAAM,CAAC7iD,MAAQ,OACf8iD,MAAQ,CAAC9iD,MAAQ,SACjB+iD,IAAM,CAAC/iD,MAAQ,OACfgjD,IAAM,CAAChjD,MAAQ,OACfijD,IAAM,CAACjjD,MAAQ,OACfkjD,KAAO,CAACljD,MAAQ,QAChBmjD,IAAM,CAACnjD,MAAQ,OACfojD,IAAM,CAACpjD,MAAQ,OACfqjD,IAAM,CAACrjD,MAAQ,SAGnBq+C,YAAY,KAIhBvjB,SAAU,CACRmC,QAAQ,CACNqmB,KAAK,CACHznB,gBAAgB,KAChBO,iBAAgB,EAChB7/B,MAAM,CACJy8B,SAAS,kBACTG,QAAQ,iBAGZoqB,KAAK,CACH1nB,gBAAgB,KAChBO,iBAAgB,EAChB7/B,MAAM,CACJy8B,SAAS,wBACTG,QAAQ,gBAGZqqB,OAAO,CACL3nB,gBAAgB,gBAChBO,iBAAgB,EAChB7/B,MAAM,CACJy8B,SAAS,6BACTG,QAAQ,kBACRF,WAAW,CACTx9B,QAAQ,CAAC,IAAI,WAKrBs/B,UAAW,CACT0oB,KAAM,CACJ3iD,SAAS,EACTk4B,SAAU,2BACVC,WAAY,CACVriC,MAAO,CAAC,OAAO,QACf2E,OAAQ,CAAC,OAAO,QAChBumB,GAAI,OAENqX,QAAS,WACTI,WAAY,MACZC,WAAY,gBACZwC,iBAAiB,CAAC,QAClBc,mBAAmB,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OACxDZ,gBAAgB,CAAC,OAAO,MAAM,OAC9Bhc,gBAAgB,GAChBqqB,IAAI,OACJmZ,UAAU,CACR1V,KAAK,CACH2V,UAAU,kBAEZC,KAAK,CACHD,UAAU,mBAGdloB,QAAS,SAACl/B,GACR,IAAMxB,EAAO,GACb,GAAIwB,EAAMm9B,gBAAkBn9B,EAAMm9B,eAChC,OAAQn9B,EAAMm9B,gBACZ,IAAK,OACH3+B,EAAKy+B,WAAL,8BACF,MACA,IAAK,OACHz+B,EAAKy+B,WAAL,4BAMN,OAAOz+B,GAET6kB,cAAe,SAACrjB,EAAM0Q,EAAcitB,GAClC,IAAMqQ,EAAMt9B,EAAc6tB,SAASC,UAAU0oB,KAAKlZ,IAE5CsZ,EADY52C,EAAc6tB,SAASC,UAAU0oB,KAAKC,UAAUnZ,GAC9BoZ,UAG9B9d,EAAS,CACbie,KAAI,YAAA/iD,OAAcxE,EAAMuB,SACxBimD,aAAc7pB,EAAUvwB,cAAgBuwB,EAAUvwB,cAAkBpN,EAAMO,YAAY2mD,MAAQlnD,EAAMO,YAAY2mD,KAAKM,aAAexnD,EAAMO,YAAY2mD,KAAKM,aAAexnD,EAAMoN,cAChLk6C,oBACAG,YAAY/2C,EAAc09B,SAI5B,MAAO,GAAA5pC,OAVK,oCAUL,KAAU7E,OAAOwH,KAAKmiC,GACxBruB,IAAI,SAAAysC,GAAC,OAAIC,mBAAmBD,GAAK,IAAMC,mBAAmBre,EAAOoe,MACjE72C,KAAK,MAEZyS,OAAQ,SAACF,EAAWkP,EAAOtyB,EAAM0Q,GAE/B,IADmBtF,SAASC,eAAe,eAC3B,CACd,IAAMu8C,EAAYx8C,SAAS3L,cAAc,OA2BzC,GA1BAmoD,EAAUC,UAAV,68BAAArjD,OASe4e,EATf,2dAAA5e,OAgBsBkM,EAAc6tB,SAASC,UAAU0oB,KAAKzqB,SAhB5D,oQAuBArxB,SAAS08C,KAAKrjC,YAAYmjC,IAGrBx8C,SAASC,eAAe,oBAAoB,CAC/C,IAAM08C,EAAY38C,SAAS3L,cAAc,SACzCsoD,EAAUt3C,GAAK,mBACfs3C,EAAUF,UAAV,4aAaAz8C,SAAS08C,KAAKrjC,YAAYsjC,OAKlCC,KAAM,CACJzjD,SAAQ,EACRk4B,SAAU,2BACVC,WAAY,CACVriC,MAAO,CAAC,OAAO,QACf2E,OAAQ,CAAC,OAAO,QAChBumB,GAAI,OAENqX,QAAS,WACTI,WAAY,MACZC,WAAU,0BACVwC,iBAAiB,CAAC,QAClB1C,MAAO,CACL/jC,KAAK,iBACLkF,MAAM,OACN8zB,QAAQ,WAEVuO,mBAAmB,CAAC,MAAM,OAC1BZ,gBAAgB,CAAC,MAAM,MAAM,QAC7Btc,cAAe,SAACrjB,EAAM0Q,EAAcitB,GACnC,MAAO,CACLsqB,YAAa,OACZC,YAAaloD,EAAMuB,QACnB4mD,WAAYna,GAAIoa,mBAChB/pB,QAASr+B,EAAM+K,SAAW,SAAW,UACrCs9C,YAAW,GAAA7jD,OAAKkM,EAAc09B,QAAnB,0BACXka,UAAW3qB,EAAUvwB,cAAgBuwB,EAAUvwB,cAAkBpN,EAAMO,YAAYynD,MAAQhoD,EAAMO,YAAYynD,KAAKM,UAAYtoD,EAAMO,YAAYynD,KAAKM,UAAYtoD,EAAMoN,gBAG3KkW,OAAQ,SAACF,EAAWkP,EAAOtyB,EAAM0Q,GAC/B,IAAI63C,KAAenlC,GAChB4H,GAAG,IADN,eAAAlB,EAAAnqB,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KACW,SAAAC,EAAOwnD,GAAP,IAAAhoD,EAAAutB,EAAAnB,EAAA,OAAA9rB,EAAAtB,EAAA0B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACDb,EAAgB,IAAIE,GAAcV,GACpC+tB,EAAgB,KAChBnB,EAAc,KAHXzrB,EAAA6D,GAKCwjD,EAAMr/C,KALPhI,EAAAE,KAMA,wBANAF,EAAA6D,GAAA,yBAQHhF,EAAMs+B,oBARHn9B,EAAAE,KAAA,EAUmBrB,EAAM0oC,mBAVzB,cAUH3a,EAVG5sB,EAAAK,KAYHorB,EAAc47B,EAAMC,QAAQC,SAAS97B,YACrCA,EAAcpsB,EAAciB,MAAMmrB,EAAY9W,YAAYzQ,IAAI7E,EAAciB,MAAMgX,KAAKkwC,IAAI,GAAG78C,SAASiiB,IAAgBjY,aAAaA,WAGpIrL,OAAOszB,cAAcC,WAArB,oBAAqD,CACnDC,iBAAgB,GAAAz5B,OAAKooB,EAAL,KAAApoB,OAAoBxE,EAAMoN,cAA1B,2BAChB8wB,WAAY,QACZC,WAAY,GACZC,WAAY,GACZC,QAAS,YArBRl9B,EAAAQ,OAAA,2BAAAR,EAAAQ,OAAA,qCAAAR,EAAAS,SAAAZ,EAAAjB,SADX,gBAAAqC,GAAA,OAAA0nB,EAAAxnB,MAAAvC,KAAAwC,YAAA,IA8BGqmD,SAGPC,QAAS,CACPtkD,SAAQ,EACRk4B,SAAU,8BACVC,WAAY,CACVriC,MAAO,CAAC,OAAO,QACf2E,OAAQ,CAAC,OAAO,QAChBumB,GAAI,OAENqX,QAAS,WACTI,WAAY,MACZC,WAAU,+BACVwC,iBAAiB,CAAC,OAAO,QACzBc,mBAAmB,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAC9DZ,gBAAgB,CAAC,MAAM,MAAM,OAAO,OAAO,OAAO,OAAO,QACzDhc,gBAAgB,CAACmlC,0CAA0C,IAC3D9a,IAAI,OACJjR,MAAM,CACJ/jC,KAAK,UACLg5B,QAAQ,WAEVm1B,UAAU,CACR1V,KAAK,CACHqM,OAAO9P,GAAI+a,2BACXnlC,IAAI,8BAENyjC,KAAK,CACHvJ,OAAO9P,GAAIgb,2BACXplC,IAAI,+BAGRsb,QAAS,SAACl/B,GACR,IAAMxB,EAAO,GAEP2+B,EAAiBn9B,EAAMm9B,gBAAkBn9B,EAAMm9B,eACjDlnB,EAAyB,SAAnBknB,EAA4B,OAAS,OAE/C,GAAIn9B,EAAMq9B,iBAAmBr9B,EAAMq9B,gBAAgBlvB,MACjD,OAAQnO,EAAMq9B,gBAAgBlvB,MAAM6T,eAClC,IAAK,MACHxjB,EAAKu+B,MAAQ,CACX/jC,KAAK,UACLg5B,QAAQ,WAEVxzB,EAAKy+B,WAAL,KAAAz4B,OAAuByR,EAAvB,oBACF,MACA,IAAK,MACHA,EAAM,OACNzX,EAAKu+B,MAAQ,CACX/jC,KAAK,UACLg5B,QAAQ,WAEVxzB,EAAKy+B,WAAL,KAAAz4B,OAAuByR,EAAvB,oBACF,MACA,IAAK,MAEDzX,EAAKu+B,MADgB,SAAnBI,EACW,CACXnkC,KAAK,OACLkF,MAAM,WACN8zB,QAAQ,WAGG,CACXh5B,KAAK,UACLg5B,QAAQ,WAGZxzB,EAAKy+B,WAAL,KAAAz4B,OAAuByR,EAAvB,oBAMN,OAAOzX,GAET6kB,cAAe,SAACrjB,EAAM0Q,EAAcitB,GAClC,IAAMqQ,EAAMt9B,EAAc6tB,SAASC,UAAUqqB,QAAQ7a,IAC/CmZ,EAAYz2C,EAAc6tB,SAASC,UAAUqqB,QAAQ1B,UAAUnZ,GAEjEib,EAAe,KAEnB,GAAItrB,EAAUN,iBAAmBM,EAAUN,gBAAgBlvB,MACzD,OAAQwvB,EAAUN,gBAAgBlvB,MAAM6T,eACtC,IAAK,MACHinC,EAAe,MACjB,MACA,IAAK,MACHA,EAAe,MACjB,MACA,IAAK,MACHA,EAAe,MACjB,MACA,IAAK,MACHA,EAAe,MACjB,MACA,QACEA,EAAe,MAKrB,IAAIC,EAAqBvrB,EAAUvwB,cAAgBuwB,EAAUvwB,cAAciD,cAAkBrQ,EAAMO,YAAYsoD,SAAW7oD,EAAMO,YAAYsoD,QAAQM,aAAenpD,EAAMO,YAAYsoD,QAAQM,aAAenpD,EAAMoN,cAClN87C,EAAqBA,EAAmBlnC,cAOxC,MAAO,CACL87B,OANaqJ,EAAUrJ,OAOvBoL,qBACAE,cAPoBppD,EAAMuB,QAQ1B0nD,eACAI,kBARwBrpD,EAAMuB,QAS9B+nD,0BAR+B,EAS/BjvD,MAAM,OACN2E,OAAO,SAIXskB,OAAQ,SAACF,EAAWkP,EAAOtyB,EAAM0Q,GAC/B,GAAIjG,OAAO8+C,cAAc,CAGvB,IADsBn+C,SAASC,eAAe,kBAC3B,CACjB,IAAMu8C,EAAYx8C,SAAS3L,cAAc,OAmBzC,GAlBAmoD,EAAUC,UAAV,szCAAArjD,OAQsBkM,EAAc6tB,SAASC,UAAUqqB,QAAQpsB,SAR/D,iQAeArxB,SAAS08C,KAAKrjC,YAAYmjC,IAGrBx8C,SAASC,eAAe,uBAAuB,CAClD,IAAMm+C,EAAep+C,SAAS3L,cAAc,SAC5C+pD,EAAa/4C,GAAK,sBAClB+4C,EAAa3B,UAAb,6cAaAz8C,SAAS08C,KAAKrjC,YAAY+kC,IAI9B/+C,OAAO8+C,cAAcjmC,OAAOF,EAAY,+BAI9CqmC,QAAS,CACPllD,SAAQ,EACRk4B,SAAU,8BACVC,WAAY,CACVriC,MAAO,CAAC,OAAO,QACf2E,OAAQ,CAAC,OAAO,QAChBumB,GAAI,OAENqX,QAAS,WACTI,WAAY,MACZC,WAAY,eACZwC,iBAAiB,CAAC,OAAO,QACzBc,mBAAmB,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAChFZ,gBAAgB,CAAC,OAAO,MAAM,OAC9BqO,IAAI,OACJmZ,UAAU,CACR1V,KAAK,CACH7tB,IAAI,iCACJk6B,OAAO9P,GAAI0b,4BAEbrC,KAAK,CACHzjC,IAAI,yBACJk6B,OAAO9P,GAAI2b,6BAGfzqB,QAAS,SAACl/B,GACR,IAAMxB,EAAO,GACb,GAAIwB,EAAMm9B,gBAAkBn9B,EAAMm9B,eAChC,OAAQn9B,EAAMm9B,gBACZ,IAAK,OACH,GAAIn9B,EAAMq9B,iBAAmBr9B,EAAMq9B,gBAAgBlvB,MACjD,OAAQnO,EAAMq9B,gBAAgBlvB,MAAM6T,eAClC,IAAK,MACHxjB,EAAKu+B,MAAQ,CACX/jC,KAAK,OACLkF,MAAM,WACN8zB,QAAQ,WAEVxzB,EAAKy+B,WAAL,yBACF,MACA,IAAK,MACHz+B,EAAKu+B,MAAQ,CACX/jC,KAAK,OAEPwF,EAAKy+B,WAAL,yBACF,MACA,QACEz+B,EAAKu+B,MAAQ,KACbv+B,EAAKy+B,WAAL,6BAIR,MACA,IAAK,OACHz+B,EAAKu+B,MAAQ,KACbv+B,EAAKy+B,WAAL,aAMN,OAAOz+B,GAET6kB,cAAe,SAACrjB,EAAM0Q,EAAcitB,GAClC,IAAMqQ,EAAMt9B,EAAc6tB,SAASC,UAAUirB,QAAQzb,IAC/CmZ,EAAYz2C,EAAc6tB,SAASC,UAAUirB,QAAQtC,UAAUnZ,GAE/D1E,EAAS,CACbwU,OAFaqJ,EAAUrJ,OAGvBqL,aAAcxrB,EAAUvwB,cAAgBuwB,EAAUvwB,cAAciD,cAAkBrQ,EAAMO,YAAYkpD,SAAWzpD,EAAMO,YAAYkpD,QAAQN,aAAenpD,EAAMO,YAAYkpD,QAAQN,aAAenpD,EAAMoN,cAAciD,cACrN+4C,cAAcppD,EAAMuB,QACpBqoD,iBAAiB,MACjBC,uBAAuB,GAGnBnpB,EAAU,CACdqmB,KAAO,CACLzY,IAAM,oBACNK,IAAM,sBAERqY,KAAO,qBAGH3pB,EAAkBM,EAAUN,iBAAmBM,EAAUN,gBAAgBlvB,MAAQwvB,EAAUN,gBAAgBlvB,MAAM6T,cAAgB,KAGvI,GAAI2b,EAAUR,eACZ,OAAQQ,EAAUR,gBAChB,IAAK,OAEH,OADAmM,EAAOwgB,sBAAwBppB,EAAQ/C,EAAUR,gBAAlB,IACvBE,GACN,IAAK,MACL,IAAK,MACHiM,EAAOwgB,sBAAwBppB,EAAQ/C,EAAUR,gBAAgBE,GACnE,MACA,QACEiM,EAAOwgB,sBAAwBnqD,OAAO0X,OAAOqpB,EAAQ/C,EAAUR,iBAAiBtsB,KAAK,KAG3F,MACA,IAAK,OACL,QACEy4B,EAAOwgB,sBAAwBppB,EAAQ/C,EAAUR,gBAMvD,OAAQE,GACN,IAAK,MACHiM,EAAOsgB,iBAAmB,MAC5B,MACA,IAAK,MACHtgB,EAAOsgB,iBAAmB,MAC5B,MACA,QACEtgB,EAAOsgB,iBAAmB,MAI9B,IAAIhmC,EAAMujC,EAAUvjC,IAWpB,OARemmC,UAAUC,UAAUryC,QAAQ,WAAa,IAEjDvM,SAAS6+C,OAAOpvC,MAAM,+CACzBzP,SAAS6+C,OAAS,qEAClBrmC,GAAO,gBAIJ,GAAApf,OAAGof,EAAH,KAAUjkB,OAAOwH,KAAKmiC,GACxBruB,IAAI,SAAAysC,GAAC,OAAIC,mBAAmBD,GAAK,IAAMC,mBAAmBre,EAAOoe,MACjE72C,KAAK,MAEZyS,OAAQ,SAACF,EAAWkP,EAAOtyB,EAAM0Q,GAE/B,IADsBtF,SAASC,eAAe,kBAC3B,CACjB,IAAMu8C,EAAYx8C,SAAS3L,cAAc,OA8BzC,GA7BAmoD,EAAUC,UAAV,iqBAAArjD,OAQiB4e,EARjB,yeAAA5e,OAewBkM,EAAc6tB,SAASC,UAAUirB,QAAQhtB,SAfjE,iwBA0BArxB,SAAS08C,KAAKrjC,YAAYmjC,IAGrBx8C,SAASC,eAAe,uBAAuB,CAClD,IAAM6+C,EAAe9+C,SAAS3L,cAAc,SAC5CyqD,EAAaz5C,GAAK,sBAClBy5C,EAAarC,UAAb,qbAaAz8C,SAAS08C,KAAKrjC,YAAYylC,OAKlCnW,cAAe,CACbxvC,SAAS,EACTk4B,SAAU,oCACVC,WAAY,CACVriC,MAAO,CAAC,OAAO,QACf2E,OAAQ,CAAC,OAAO,QAChBumB,GAAI,OAENqX,QAAS,WACTI,WAAY,MACZC,WAAY,gBACZwC,iBAAiB,CAAC,UAClBE,gBAAgB,CAAC,OAAO,OACxBhc,gBAAgB,CAACwmC,uCAAuC,IACxD9mC,cAAe,SAACrjB,EAAM0Q,EAAcitB,EAAUC,EAAUC,GAEtD,IAAMusB,EAAc15C,EAAcmjC,OAAOlW,EAAUvwB,eAC7Ci9C,EAAgB5/C,OAAO6/C,mBAAqB7/C,OAAO6/C,mBAAmBD,cAAgB,KAE5F,OAAKD,EAAYrW,cAIV,CACL8K,UAAWnuC,EAAcosC,QAAQK,gBACjCoN,QAAS75C,EAAcosC,QAAQK,gBAC/Bzf,SAAU2sB,GAAiC,aAAhBA,GAA8B5/C,OAAO6/C,mBAAmBE,UAAUH,EAAch6C,eAAiB5F,OAAO6/C,mBAAmBE,UAAU//C,OAAO6/C,mBAAmBD,cAAch6C,eAAeqtB,SAAWjzB,OAAOggD,SACzOzW,YAAaoW,EAAYrW,cAAcC,YACvCE,cAAekW,EAAYrW,cAAcG,cACzCwW,yBAA0BN,EAAYrW,cAAcE,UACpD0W,oBAAqB,CAACP,EAAYrW,cAAcE,WAChD2W,gCAAgC,EAChChtB,UAAWA,GAAwB,aACnCC,QAASA,GAAoB,cAbtB,MAgBXva,OAAQ,SAACF,EAAWkP,GACd7nB,OAAOspC,eAAiB3wB,IACtBkP,IACFlP,EAAWynC,sBAAwBt/C,WAAW+mB,IAEhD7nB,OAAOspC,cAAczwB,OAAOF,EAAY,WAI9C0nC,UAAW,CACTvmD,SAAS,EACTk4B,SAAU,4BACVC,WAAY,CACVriC,MAAO,CAAC,OAAO,QACf2E,OAAQ,CAAC,OAAO,QAChBumB,GAAI,OAENqX,QAAS,YACTI,WAAY,MACZC,WAAY,gBACZwC,iBAAiB,CAAC,UAClBE,gBAAgB,CAAC,OAAO,MAAM,OAAO,OAAO,OAAO,QACnDorB,iBAAiB,CACfxmD,SAAS,EACTymD,gBAAiB,6CACjBC,eAAgB,CACd,CACEC,aAAgB,UAChBx+C,KAAQ,gBACRvD,KAAQ,WAEV,CACE+hD,aAAgB,UAChBx+C,KAAQ,gBACRvD,KAAQ,WAEV,CACE+hD,aAAgB,UAChBx+C,KAAQ,eACRvD,KAAQ,WAEV,CACE+hD,aAAgB,UAChBx+C,KAAQ,eACRvD,KAAQ,aAIdwa,gBAAgB,CACdwnC,iDAAiD,GACjDC,gDAAgD,CAC9C5mC,cAAcpZ,SAAS08C,KACvB3jC,QAAS,SAACnkB,EAAM0Q,EAAcuS,GAI5B,IADA,IAAMxkB,EAAU2M,SAASigD,iBAAiB,wBACjCn7C,EAAE,EAAEA,EAAEzR,EAAQoE,OAAOqN,IAC5BzR,EAAQyR,GAAGo7C,SASb,IADA,IAAMC,EAAUngD,SAASigD,iBAAiB,qBACjCn7C,EAAE,EAAEA,EAAEq7C,EAAQ1oD,OAAOqN,IAC5Bq7C,EAAQr7C,GAAGo7C,SAGb,IAAMnoC,EAAWnjB,EAAMmjB,SAAWnjB,EAAMmjB,SAAvB,iBAAA3e,OAAmDxE,EAAMoN,eAC1E,IAAKhC,SAASC,eAAe8X,GAAU,CACrC,IAAM3jB,EAAI4L,SAAS3L,cAAc,KACjCD,EAAEiR,GAAK0S,EACP3jB,EAAEolB,KAAO3B,EAAaI,cAAcrjB,EAAM0Q,GAC1ClR,EAAEK,OAAS,SACXL,EAAEM,IAAM,+BACRN,EAAEuf,UAAY,kDACdvf,EAAE3F,MAAQ,kBACV2F,EAAEyd,MAAQ,gBACV7R,SAAS08C,KAAKrjC,YAAYjlB,OAKlC6jB,cAAe,SAACrjB,EAAM0Q,GAAiCnO,UAAAM,OAAA,QAAAC,IAAAP,UAAA,IAAAA,UAAA,OAC/CsgB,EAAY7iB,EAAM6iB,UAAY7iB,EAAM6iB,UAAY,MAChDymB,EAAS,CACbkiB,KAAK,KACLriD,KAAK,OACLsiD,KAAK,SACLnyD,MAAM,cACNoyD,iBAAgB,EAEhBC,aAAY,GAAAnnD,OAAIqe,EAAJ,KAAAre,OAAiBxE,EAAMoN,eACnCvT,MAAK,QAAA2K,OAASqe,EAAT,SAAAre,OAA0BxE,EAAMoN,eACrCw+C,YAAW,GAAApnD,OAAIqe,EAAJ,KAAAre,OAAiBxE,EAAMoN,eAClCy+C,aAAa,6CACb/O,QAAmD,IAA1CpsC,EAAcosC,QAAQK,gBAAwB,UAAY,QAKrE,MAAO,GAAA34C,OAFM,uCAEN,KAAU7E,OAAOwH,KAAKmiC,GACxBruB,IAAI,SAAAysC,GAAC,OAAIC,mBAAmBD,GAAK,IAAMC,mBAAmBre,EAAOoe,MACjE72C,KAAK,MAEZyS,OAAQ,SAACF,EAAWkP,EAAOtyB,GACzB,IAAMmjB,EAAWnjB,EAAMmjB,SAAWnjB,EAAMmjB,SAAvB,iBAAA3e,OAAkDxE,EAAMoN,eACnE5N,EAAI4L,SAASC,eAAe8X,GAC9B3jB,GACFA,EAAEssD,UAgCRC,QAAS,CACPxnD,SAAS,EACTk4B,SAAU,8BACVC,WAAY,CACVriC,MAAO,CAAC,OAAO,QACf2E,OAAQ,CAAC,OAAO,QAChBumB,GAAI,OAENqX,QAAS,WACTI,WAAY,MACZC,WAAY,aACZwC,iBAAiB,CAAC,UAClBE,gBAAgB,CAAC,OAAO,OACxBqO,IAAI,aACJrqB,gBAAgB,CAACqoC,mDAAmD,IACpE3oC,cAAe,SAACrjB,EAAM0Q,EAAcitB,EAAUsuB,EAAWpuB,GACvD,MAAO,CACLmQ,IAAK,aACLyd,KAAM,MACNhoD,MAAOzD,EAAMO,YAAYgG,QACzBsc,UAAW,MACXopC,WAAYA,GAA0B,aACtCpuB,QAASA,GAAoB,eAGjCva,OAAQ,SAACF,EAAWkP,EAAOtyB,GACrByK,OAAOyhD,iBACL55B,IACFlP,EAAWkP,OAASA,EAAOxc,YAE7BrL,OAAOyhD,eAAe5oC,OAAOF,EAAW,WAI9C+oC,MAAO,CACL5nD,SAAS,EACTk4B,SAAU,4BACVC,WAAY,CACVriC,MAAO,CAAC,OAAO,QACf2E,OAAQ,CAAC,OAAO,QAChBumB,GAAI,OAENqX,QAAS,WACTI,WAAY,MACZC,WAAY,aACZwC,iBAAiB,CAAC,UAClBE,gBAAgB,CAAC,OAAO,OACxBqO,IAAI,aACJrqB,gBAAgB,CAACyoC,0CAA0C,IAC3D/oC,cAAe,SAACrjB,EAAM0Q,EAAcitB,EAAUsuB,EAAWpuB,GACvD,MAAO,CACLwuB,mBAAoB,KACpBC,oBAAqB,KACrBC,wBAAyB,KACzBC,yBAA0B,KAC1B1O,OAAQ,KACR2O,uBAAwB,OAG5BnpC,OAAQ,SAACF,EAAWkP,EAAOtyB,GACzB,GAAIyK,OAAOiiD,YAAY,CACrB,IAAMC,EAAS,eACf,IAAKvhD,SAASC,eAAeshD,GAAQ,CACnC,IAAMC,EAAuBxhD,SAAS3L,cAAc,OACpDmtD,EAAqBn8C,GAAKk8C,EAC1BvhD,SAAS08C,KAAKrjC,YAAYmoC,GAG5BniD,OAAOiiD,YAAYnvD,QAAQsvD,IAAIzpC,EAAWhY,SAASC,eAAeshD,UC5qExEG,GAAgBC,EAAQ,MACxB/e,GAAMC,qoCAmnJGvtC,cA1mJb,SAAAA,EAAYV,GAAM,IAAAI,EAAAL,KAAAJ,OAAAU,EAAA,EAAAV,CAAAI,KAAAW,GAAAX,KAJlBC,MAAQ,GAIUD,KAHlBitD,aAAe,KAGGjtD,KAKlBU,SAAW,SAAAT,GACTI,EAAKJ,MAAQA,GANGD,KAQlBktD,QAAU,SAAAzqB,GACR,OAAOpiC,EAAKqB,MAAM+gC,GAAKjyB,QAAQ,IATfxQ,KAWlBmtD,KAAO,SAAAnwC,GAAC,OAAI,IAAI3c,EAAKJ,MAAMuiC,KAAK4qB,MAAMC,GAAGrwC,IAXvBhd,KAYlBstD,MAAQ,SAAAC,GACN,OAAKltD,EAAKJ,MAAMuiC,KAGTniC,EAAKJ,MAAMuiC,KAAK4qB,MAAMI,SAC1BD,GAAO,GAAGx3C,WACX,SAJO,MAdO/V,KAqBlBytD,MAAQ,SAAAhrB,GACN,OAAKpiC,EAAKJ,MAAMuiC,KAGTniC,EAAKJ,MAAMuiC,KAAK4qB,MAAMK,OAC1BhrB,GAAO,GAAG1sB,WACX,SAJO,MAvBO/V,KA8BlB0tD,UAAY,SAAAC,GAAC,OAAI,IAAIC,IAAUD,IA9Bb3tD,KA+BlB0B,MAAQ,SAAAisD,GAAC,OAAI,IAAIC,IAAwB,kBAAND,EAAiBA,EAAIE,OAAOF,KA/B7C3tD,KAgClBuiC,UAAY,WAAc,QAAAurB,EAAAtrD,UAAAM,OAAV7C,EAAU,IAAA8tD,MAAAD,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAV/tD,EAAU+tD,GAAAxrD,UAAAwrD,GAAMr9C,GAAcw+B,KAAKE,iBAAiBhvC,EAAKkiC,UAALhgC,MAAAlC,EAAI,CAAW4tD,MAASj1C,OAAO,aAA3BvU,OAA0CxE,KAhChGD,KAiClBkuD,eAAiB,WAAc,QAAAC,EAAAC,EAAA5rD,UAAAM,OAAV7C,EAAU,IAAA8tD,MAAAK,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAVpuD,EAAUouD,GAAA7rD,UAAA6rD,GAAM19C,GAAcw+B,KAAKC,gBAAe+e,EAAAG,SAAQ3sB,MAARp/B,MAAA4rD,EAAA,CAAcF,MAASj1C,OAAO,aAA9BvU,OAA6CxE,KAjClGD,KAkClBglB,kBAAoB,SAACupC,GACnB,IAAMpS,EAAW97C,EAAKJ,MAAMiyC,UAAUx6B,KAAK,SAAA82C,GAAC,OAAIA,EAAE7hD,OAAS4hD,IAC3D,QAAKpS,GAGEA,EAASA,UAvCAn8C,KAyClByuD,8BAAgC,SAACzxC,GAC/B,OAAOA,EAAE0xC,QAAQ,YAAY,MACpBA,QAAQ,OAAO,IACfA,QAAQ,QAAQ,IAChBA,QAAQ,UAAU,KAClBA,QAAQ,SAAS,KA9CV1uD,KAgDlBgR,WAAa,SAAC29C,GACZ,OAAOA,EAAIrkC,OAAO,EAAE,GAAGrI,cAAc0sC,EAAIrkC,OAAO,IAjDhCtqB,KAmDlB8Y,YAAc,SAACiW,GAAqB,IAAhB/V,EAAgBxW,UAAAM,OAAA,QAAAC,IAAAP,UAAA,GAAAA,UAAA,GAAT,KACzB,OAAOyrD,IAAOl/B,EAAK/V,IApDHhZ,KAsDlB4lC,kBAAoB,SAACgpB,EAAKC,GAOxB,OANIA,GAAQjvD,OAAOwH,KAAKynD,GAAM/rD,QAC5BlD,OAAOwH,KAAKynD,GAAM/kD,QAAQ,SAAAC,GACxB6kD,EAAK7kD,GAAK8kD,EAAK9kD,KAIZ6kD,GA7DS5uD,KA+DlB8uD,UAAY,SAACC,GACV,IAAIC,EAAM3jD,SAAS3L,cAAc,OAEjC,OADAsvD,EAAIlH,UAAYiH,EACTC,EAAIC,aAAeD,EAAIE,WAAa,IAlE5BlvD,KAqElBmvD,SAAW,SAACC,EAAIxyC,GACd,IAAME,EAAQpS,OAAO2kD,QACfC,EAASF,EAAKtyC,EAEhByyC,EAAc,EAElB72C,KAAK82C,cAAgB,SAAUC,EAAG36B,EAAG05B,EAAG1gD,GAEtC,OADA2hD,GAAK3hD,EAAE,GACC,EAAU0gD,EAAE,EAAEiB,EAAEA,EAAI36B,GAEpB05B,EAAE,KADViB,GACkBA,EAAE,GAAK,GAAK36B,IAGV,SAAhB46B,IACFH,GAXc,GAYd,IAAII,EAAMj3C,KAAK82C,cAAcD,EAAazyC,EAAOwyC,EAAQ1yC,GACzDlS,OAAOykD,SAAS,EAAEQ,GACfJ,EAAc3yC,GACflS,OAAOm5B,WAAW6rB,EAfN,IAmBlBA,IA3FgB1vD,KA6FlB+0B,YAAc,SAAChZ,EAAGvb,GAEhB,IAAMqF,EAAmBrF,EAAYkE,KAAK8B,QACpCopD,EAA2BvvD,EAAKO,gBAAgB,CAAC,WAAW,UAAU,UAAU,kBAChFivD,EAAwBrvD,EAAY4W,WAAa5W,EAAY4W,UAAU+wB,kBAAoB3nC,EAAY4W,UAAU+wB,kBAAkB3hC,QAAU,KAC7IspD,EAA4BtvD,EAAY4W,WAAa5W,EAAY4W,UAAU+wB,mBAAqB3nC,EAAY4W,UAAU+wB,kBAAkB+X,aAAe1/C,EAAY4W,UAAU+wB,kBAAkB+X,aAAe,GAC9MZ,EAAiBj/C,EAAKO,gBAAgB,CAAC,QAAQ,iBAAiB,QAAQ,kBAAkBJ,EAAYkE,KAAKhB,QAC3GqsD,EAA6BzQ,GAAkBA,EAAenX,kBAAoBmX,EAAenX,kBAAkB3hC,QAAU,KAG7HwpD,EADqBD,GAA8Bh0C,EAAGrM,KAAKY,gBAAkBy/C,EAA2Bz/C,eAAiByL,EAAGkvC,gBAAgB36C,gBAAkB9P,EAAYkE,KAAK8B,QAAQ8J,eAAiByL,EAAGqzC,GAAG9+C,gBAAkBjQ,EAAKJ,MAAMuB,QAAQ8O,eAC5Mu/C,IAA0B9zC,EAAGrM,KAAKY,gBAAkBu/C,EAAsBv/C,gBAAuH,IAAtGw/C,EAA0B50C,IAAI,SAAC5M,GAAQ,OAAOA,EAAEgC,gBAAkBsH,QAAQmE,EAAGrM,KAAKY,iBAA2ByL,EAAGkvC,gBAAgB36C,gBAAkBzK,EAAiByK,cACrS2/C,GAAoBD,GAAiBj0C,EAAGrM,KAAKY,gBAAkBjQ,EAAKJ,MAAMuB,QAAQ8O,eAAiByL,EAAGkvC,gBAAgB36C,gBAAkBzK,EAAiByK,cACzJ4/C,GAAuBF,GAAiBj0C,EAAGqzC,GAAG9+C,gBAAkBjQ,EAAKJ,MAAMuB,QAAQ8O,eAAiByL,EAAGkvC,gBAAgB36C,gBAAkBzK,EAAiByK,cAC1J6/C,GAAeH,IAAkBC,IAAqBC,IAAwBn0C,EAAGqzC,GAAG9+C,gBAAkBzK,EAAiByK,eAAkBs/C,GAA4B7zC,EAAGqzC,GAAG9+C,gBAAkBs/C,EAAyBppD,QAAQ8J,eAC9N8/C,GAAcJ,IAAkBC,IAAqBC,GAAuBn0C,EAAGqzC,GAAG9+C,gBAAkBjQ,EAAKJ,MAAMuB,QAAQ8O,cACvH+/C,GAAYL,IAAkBC,IAAqBC,IAAwBC,GAAep0C,EAAGqzC,GAAG9+C,gBAAkBjQ,EAAKJ,MAAMuB,QAAQ8O,eAAiByL,EAAGkvC,gBAAgB36C,gBAAkBzK,EAAiByK,cAE9MpT,EAAS,KAkBb,OAhBIizD,EACFjzD,EAAS,UACAkzD,EACTlzD,EAAS,SACA8yD,EACT9yD,EAAS,UACA+yD,EACT/yD,EAAS,OACAgzD,EACThzD,EAAS,UACAmzD,EACTnzD,EAAS,OACAmzD,IACTnzD,EAAS,WAGJA,GAhIS8C,KAkIlB85B,oBAlIkBl6B,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAkII,SAAAgB,IAAA,IAAA4E,EAAApF,EAAAsoB,EAAAwmC,EAAAC,EAAA/tD,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,UAAOsF,EAAP2pD,EAAAztD,OAAA,QAAAC,IAAAwtD,EAAA,GAAAA,EAAA,GAAuB,KAAK/uD,EAA5B+uD,EAAAztD,OAAA,QAAAC,IAAAwtD,EAAA,GAAAA,EAAA,GAAoC,KAClDzmC,EAAY,CAChByC,cAAc,GACd+N,aAAaj6B,EAAKqB,MAAM,IAG1BkF,EAAkBA,GAAoCvG,EAAKJ,MAAM2G,iBACjEpF,EAAUA,GAAoBnB,EAAKJ,MAAMuB,UAExBoF,EATG,CAAAzE,EAAAb,KAAA,eAAAa,EAAAP,OAAA,SAUXkoB,GAVW,cAAA3nB,EAAAb,KAAA,EAadjB,EAAK8G,aAAavH,OAAOwH,KAAKR,GAA9B,eAAA7E,EAAAnC,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAA+C,SAAAC,EAAOyC,GAAP,IAAAlD,EAAA8V,EAAAL,EAAAH,EAAA,OAAA/U,EAAAtB,EAAA0B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAC7Cd,EAAcoG,EAAgBlD,GADetC,EAAAE,KAAA,EAEpBjB,EAAKkB,gBAAgBf,EAAYkE,KAAKhB,MAAMlC,GAFxB,YAE7C8U,EAF6ClV,EAAAK,MAAA,CAAAL,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,EAKxBjB,EAAK2pB,kBAAkBxpB,GALC,OAK3CyV,EAL2C7U,EAAAK,KAM3CqU,EAAeQ,EAAiBjR,MAAM4Q,GAEvCA,EAAWtU,SAAYmU,EAAanU,UACvCmoB,EAAUyC,cAAc7oB,GAAS,CAC/BuS,aACAH,eACAQ,oBAIFwT,EAAUwQ,aAAexQ,EAAUwQ,aAAaxyB,KAAKgO,IAhBN,yBAAA1U,EAAAS,SAAAZ,EAAAjB,SAA/C,gBAAAqC,GAAA,OAAAN,EAAAQ,MAAAvC,KAAAwC,YAAA,IAbc,cAkCd8tD,EAAuB,GAC7B1wD,OAAOwH,KAAKR,GAAiBkD,QAAS,SAAApG,GAChComB,EAAUyC,cAAc7oB,KAC1B4sD,EAAqB5sD,GAASomB,EAAUyC,cAAc7oB,MAI1DomB,EAAUyC,cAAgB+jC,EAzCNnuD,EAAAP,OAAA,SA2CbkoB,GA3Ca,yBAAA3nB,EAAAN,SAAAG,EAAAhC,SAlIJA,KA+KlBwwD,oBA/KkB5wD,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA+KI,SAAA0B,IAAA,IAAA4mB,EAAA9nB,EAAAoF,EAAA2tB,EAAAk8B,EAAAC,EAAAC,EAAAC,EAAAC,EAAAjuD,EAAAJ,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,UAAOgoB,EAAP1mB,EAAAE,OAAA,QAAAC,IAAAH,EAAA,GAAAA,EAAA,GAAqB,GAAGpB,EAAxBoB,EAAAE,OAAA,QAAAC,IAAAH,EAAA,GAAAA,EAAA,GAAgC,OAAhCA,EAAAE,OAAA,QAAAC,IAAAH,EAAA,KAAAA,EAAA,GACpBpB,EAAUA,GAAoBnB,EAAKJ,MAAMuB,QADrB,CAAAqB,EAAAvB,KAAA,eAAAuB,EAAAjB,OAAA,SAIX,IAJW,cAOdgF,EAAkBvG,EAAKywD,0BAExBxnC,GAAkBA,EAAcxmB,SACnCwmB,EAAgB1pB,OAAOwH,KAAKR,IAG1B2tB,EAAe,GACbk8B,EAAkB,GACpBC,EAAqBrwD,EAAKqB,MAAM,GAfhBmB,EAAAvB,KAAA,GAgBGjB,EAAK0wD,YAAYvvD,EAAQ,EAAE,SAAS8nB,GAhBvC,eAgBdqnC,EAhBc9tD,EAAApB,OAkBJkvD,EAAS7tD,QAEvB6tD,EAAS7mD,QAAQ,SAACiS,EAAG2Q,GAGnB,IAAK3Q,EAAG4Q,OAAS5Q,EAAGi1C,cAAgBj1C,EAAGk1C,gBACrC,OAAO,EAGT,IAAMpkC,EAAcxsB,EAAKqB,MAAMqa,EAAG8Q,aAC9BmkC,EAAc3wD,EAAKqB,MAAMqa,EAAGi1C,aAC1BC,EAAkB5wD,EAAKqB,MAAMqa,EAAGk1C,iBAEtC,OAAQl1C,EAAG7e,QACT,IAAK,UACL,IAAK,aACL,IAAK,iBACL,IAAK,kBACH,GAAkB,oBAAd6e,EAAG7e,QACDwvB,EAAM,GAAKgkC,EAAmBh6C,GAAG,GACnC,OAIC6d,EAAaxY,EAAG4Q,QACnB4H,EAAaxY,EAAG4Q,MAAQ,CACtBukC,MAAM,KACNC,SAAS,KACTC,SAAS,KACTC,UAAUhxD,EAAKqB,MAAM,KAIzB6yB,EAAaxY,EAAG4Q,MAAM0kC,UAAY98B,EAAaxY,EAAG4Q,MAAM0kC,UAAUvpD,KAAK+kB,GAChC,OAAnC0H,EAAaxY,EAAG4Q,MAAMwkC,WACxB58B,EAAaxY,EAAG4Q,MAAMukC,MAAQD,EAC9B18B,EAAaxY,EAAG4Q,MAAMwkC,SAAWH,EAAY3rD,MAAM4rD,IAIvD,MACA,IAAK,WACL,IAAK,cACL,IAAK,kBACHD,EAAcA,EAAY3rD,MAAMhF,EAAKqB,OAAO,IAO3C+uD,EAAgB10C,EAAG4Q,SACtB+jC,EAAqBA,EAAmB5oD,KAAKkpD,IACtB9rD,IAAI,KACzBwrD,EAAqBrwD,EAAKqB,MAAM,IAKlC+uD,EAAgB10C,EAAG4Q,OAAQ,KAO7BikC,EAAcvwD,EAAKqB,MAAM,GACzBmvD,EAAiBxwD,EAAKqB,MAAM,GAChC9B,OAAO0X,OAAOid,GAAczqB,QAAS,SAAAiS,GACnC,IAAMq1C,EAAWr1C,EAAGo1C,SAAS7rD,IAAIyW,EAAGs1C,WAAWj2C,MAAM,GACrDw1C,EAAcA,EAAY9oD,KAAKspD,EAAS/rD,MAAM0W,EAAGs1C,YACjDR,EAAiBA,EAAe/oD,KAAKiU,EAAGs1C,aAG1CT,EAAcA,EAAYtrD,IAAIurD,GAAgBxrD,OAAO,GA5FjCxC,EAAAjB,OAAA,SAiGbgvD,GAjGa,yBAAA/tD,EAAAhB,SAAAa,EAAA1C,SA/KJA,KAkRlBsxD,oBAlRkB1xD,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAkRI,SAAAkC,IAAA,IAAAomB,EAAA9nB,EAAAoF,EAAA2tB,EAAAkD,EAAAi5B,EAAAC,EAAAY,EAAA/uD,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAiC,GAAA,cAAAA,EAAA/B,KAAA+B,EAAA9B,MAAA,UAAOgoB,EAAPioC,EAAAzuD,OAAA,QAAAC,IAAAwuD,EAAA,GAAAA,EAAA,GAAqB,GACzC/vD,GAD4CA,EAAxB+vD,EAAAzuD,OAAA,QAAAC,IAAAwuD,EAAA,GAAAA,EAAA,GAAgC,OACtBlxD,EAAKJ,MAAMuB,QADrB,CAAA4B,EAAA9B,KAAA,eAAA8B,EAAAxB,OAAA,SAIX,IAJW,cAOdgF,EAAkBvG,EAAKywD,0BAExBxnC,GAAkBA,EAAcxmB,SACnCwmB,EAAgB1pB,OAAOwH,KAAKR,IAGxB2tB,EAAe,GACjBkD,EAAcp3B,EAAKqB,MAAM,GACzBgvD,EAAqBrwD,EAAKqB,MAAM,GAfhB0B,EAAA9B,KAAA,GAgBGjB,EAAK0wD,YAAYvvD,EAAQ,EAAE,SAAS8nB,GAhBvC,eAgBdqnC,EAhBcvtD,EAAA3B,OAoBJkvD,EAAS7tD,QAEvB6tD,EAAS7mD,QAAQ,SAACiS,EAAG2Q,GAMnB,GAJK6H,EAAaxY,EAAG4Q,QACnB4H,EAAaxY,EAAG4Q,MAAQ,KAGtB4H,EAAaxY,EAAG4Q,MAAMiI,SAAS7Y,EAAG7e,QAAtC,CAKA,IAAK6e,EAAG4Q,OAAS5Q,EAAGi1C,cAAgBj1C,EAAGk1C,gBACrC,OAAO,EAGT,IAAMO,EAAkB/5B,EACpBu5B,EAAc3wD,EAAKqB,MAAMqa,EAAGi1C,aAC1BC,EAAkB5wD,EAAKqB,MAAMqa,EAAGk1C,iBAGtC,OAAQl1C,EAAG7e,QACT,IAAK,UACL,IAAK,aACL,IAAK,iBACL,IAAK,kBACH,GAAkB,oBAAd6e,EAAG7e,QACDwvB,EAAM,GAAKgkC,EAAmBh6C,GAAG,GACnC,OAGJ+gB,EAAcu5B,EAAY3rD,MAAM4rD,GAAiBnpD,KAAK0pD,EAAgBnsD,MAAMqrD,IAAqBprD,IAAIorD,EAAmB5oD,KAAKkpD,IAC/H,MACA,IAAK,WACL,IAAK,cACL,IAAK,kBAEHA,EAAcA,EAAY3rD,MAAMhF,EAAKqB,OAAO,KAOhDgvD,EAAqBA,EAAmB5oD,KAAKkpD,IACtB9rD,IAAI,KACzBuyB,EAAcp3B,EAAKqB,MAAM,GACzBgvD,EAAqBrwD,EAAKqB,MAAM,IAGlC6yB,EAAaxY,EAAG4Q,MAAMlc,KAAKsL,EAAG7e,WAvEdkG,EAAAxB,OAAA,SA+Eb61B,GA/Ea,yBAAAr0B,EAAAvB,SAAAqB,EAAAlD,SAlRJA,KAmWlB+3B,eAnWkBn4B,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAmWD,SAAA4E,IAAA,IAAA0jB,EAAA9nB,EAAA4G,EAAAkkB,EAAAmlC,EAAAjvD,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAA4E,GAAA,cAAAA,EAAA1E,KAAA0E,EAAAzE,MAAA,UAAOgoB,EAAPmoC,EAAA3uD,OAAA,QAAAC,IAAA0uD,EAAA,GAAAA,EAAA,GAAqB,IACpCjwD,GADuCA,EAAxBiwD,EAAA3uD,OAAA,EAAA2uD,EAAA,QAAA1uD,IACe1C,EAAKJ,MAAMuB,UAExB8nB,GAAkBA,EAAcxmB,QAAWzC,EAAKJ,MAAM2G,gBAHxD,CAAAb,EAAAzE,KAAA,eAAAyE,EAAAnE,OAAA,SAIN,IAJM,cAOTwG,EAAS,GAPArC,EAAAzE,KAAA,EAQYjB,EAAKgsB,gBAAgB7qB,EAAQ,EAAE,SAAS8nB,GARpD,cAQTgD,EARSvmB,EAAAtE,KAAAsE,EAAAzE,KAAA,GAUTjB,EAAK8G,aAAamiB,EAAlB,eAAAvlB,EAAAnE,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAiC,SAAAyC,EAAO4J,GAAP,IAAAoqB,EAAAi6B,EAAAjlC,EAAA,OAAA1rB,EAAAtB,EAAA0B,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,OAErC8G,EAAOiF,GAAiB,GACpBoqB,EAAcp3B,EAAKqB,MAAM,GAEzBgwD,EAAmBrxD,EAAKqB,MAAM,IAC5B+qB,EAAc7sB,OAAO0X,OAAOgV,GAAcxQ,OAAO,SAAAC,GAAE,OAAKA,EAAGrY,QAAU2J,MAExDof,EAAY3pB,QAE7B2pB,EAAY3iB,QAAQ,SAACiS,EAAG2Q,GAGtB,IAAK3Q,EAAG4Q,MAAS5Q,EAAGpe,QAAwB,YAAdoe,EAAGpe,SAA0Boe,EAAGgR,aAAehR,EAAG9F,WAC9E,OAAO,EAGT,IAAMu7C,EAAkB/5B,EACpB1K,EAAa1sB,EAAKqB,MAAMqa,EAAGgR,YACzB9W,EAAa5V,EAAKqB,MAAMqa,EAAG9F,YAGjC,OAAQ8F,EAAG7e,QACT,IAAK,UACL,IAAK,UACL,IAAK,OACL,IAAK,UACHu6B,EAAc1K,EAAW1nB,MAAM4Q,GAAYnO,KAAK0pD,EAAgBnsD,MAAMqsD,IAAoBpsD,IAAIosD,EAAkB5pD,KAAKilB,IACvH,MACA,IAAK,WACL,IAAK,OACL,IAAK,SACL,IAAK,UACHA,EAAaA,EAAW1nB,MAAMhF,EAAKqB,OAAO,KAO9CgwD,EAAoBA,EAAkB5pD,KAAKilB,IACrB7nB,IAAI,KACxBuyB,EAAcp3B,EAAKqB,MAAM,GACzBgwD,EAAoBrxD,EAAKqB,MAAM,MAOrC0G,EAAOiF,GAAiBoqB,EAlDa,wBAAAlzB,EAAA1C,SAAA4B,EAAAzD,SAAjC,gBAAAsC,GAAA,OAAAyB,EAAAxB,MAAAvC,KAAAwC,YAAA,IAVS,eAAAuD,EAAAnE,OAAA,SA+DRwG,GA/DQ,yBAAArC,EAAAlE,SAAA+D,EAAA5F,SAnWCA,KAoalB2xD,oBApakB/xD,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAoaI,SAAAkF,IAAA,IAAAojB,EAAA9nB,EAAA8qB,EAAAslC,EAAAC,EAAArvD,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAmF,GAAA,cAAAA,EAAAjF,KAAAiF,EAAAhF,MAAA,UAAOgoB,EAAPuoC,EAAA/uD,OAAA,QAAAC,IAAA8uD,EAAA,GAAAA,EAAA,GAAqB,IACzCrwD,GAD4CA,EAAxBqwD,EAAA/uD,OAAA,EAAA+uD,EAAA,QAAA9uD,IACU1C,EAAKJ,MAAMuB,UAExB8nB,GAAkBA,EAAcxmB,QAAWzC,EAAKJ,MAAM2G,gBAHnD,CAAAN,EAAAhF,KAAA,eAAAgF,EAAA1E,OAAA,SAIX,IAJW,cAAA0E,EAAAhF,KAAA,EAOOjB,EAAKgsB,gBAAgB7qB,EAAQ,EAAE,SAAS8nB,GAP/C,cAOdgD,EAPchmB,EAAA7E,KASdmwD,EAAW,GAEjBtoC,EAAcxf,QAAQ,SAACuD,GACrB,IAAIgJ,EAAahW,EAAKqB,MAAM,GACxBowD,EAAmB,KACvBF,EAASvkD,GAAiBykD,EAE1B,IAAMrlC,EAAc7sB,OAAO0X,OAAOgV,GAAcxQ,OAAO,SAAAC,GAAE,OAAKA,EAAGrY,QAAU2J,IACvEof,GAAeA,EAAY3pB,QAE7B2pB,EAAY3iB,QAAQ,SAACiS,EAAG2Q,GAEtB,IAAK3Q,EAAG4Q,MAAS5Q,EAAGpe,QAAwB,YAAdoe,EAAGpe,SAA0Boe,EAAG8Q,YAC5D,OAAO,EAGT,OAAQ9Q,EAAG7e,QACT,IAAK,OACL,IAAK,UACL,IAAK,UACL,IAAK,UACHmZ,EAAaA,EAAWvO,KAAKiU,EAAG8Q,aAC3BilC,IACHA,EAAmB/1C,EAAG6Q,WAE1B,MACA,IAAK,OACL,IAAK,SACL,IAAK,UACL,IAAK,WACHvW,EAAaA,EAAW+E,MAAMW,EAAG8Q,aAOjCxW,EAAWyW,GAAG,KAChBzW,EAAahW,EAAKqB,MAAM,GACxBowD,EAAmB,QAMzBF,EAASvkD,GAAiBykD,IAtDRxrD,EAAA1E,OAAA,SAyDbgwD,GAzDa,yBAAAtrD,EAAAzE,SAAAqE,EAAAlG,SApaJA,KA+dlB+xD,mBA/dkB,eAAApsD,EAAA/F,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA+dG,SAAAsG,EAAO9G,EAAYgB,GAAnB,IAAAyE,EAAAmN,EAAA0C,EAAAk8C,EAAAC,EAAA,OAAAlxD,EAAAtB,EAAA0B,KAAA,SAAAyG,GAAA,cAAAA,EAAAvG,KAAAuG,EAAAtG,MAAA,cAAAsG,EAAAtG,KAAA,EACqBqD,QAAQC,IAAI,CAClDvE,EAAKkB,gBAAgBf,EAAYkE,KAAKhB,MAAMlC,GAC5CnB,EAAK2C,oBAAoBxC,EAAYkE,KAAKhB,MAAO,gBAAiB,CAAClC,MAHlD,UAAAyE,EAAA2B,EAAAnG,KAAA2R,EAAAxT,OAAAmF,EAAA,EAAAnF,CAAAqG,EAAA,GACd6P,EADc1C,EAAA,GACD4+C,EADC5+C,EAAA,IAMf0C,IAAgBk8C,EAND,CAAApqD,EAAAtG,KAAA,gBAOjB0wD,EAAe3xD,EAAKgD,iBAAiB2uD,EAAaxxD,EAAY8C,UACxD2uD,EAAkBn8C,EAAazQ,MAAM2sD,GAR1BpqD,EAAAhG,OAAA,SASVqwD,GATU,eAAArqD,EAAAhG,OAAA,SAYZ,MAZY,yBAAAgG,EAAA/F,SAAAyF,EAAAtH,SA/dH,gBAAAwF,EAAAC,GAAA,OAAAE,EAAApD,MAAAvC,KAAAwC,YAAA,GAAAxC,KA6elBq3B,cA7ekBz3B,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA6eF,SAAA2F,IAAA,IAAA2iB,EAAA9nB,EAAA8qB,EAAAgL,EAAAvwB,EAAAvE,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAA6F,GAAA,cAAAA,EAAA3F,KAAA2F,EAAA1F,MAAA,UAAOgoB,EAAPviB,EAAAjE,OAAA,QAAAC,IAAAgE,EAAA,GAAAA,EAAA,GAAqB,IACnCvF,GADsCA,EAAxBuF,EAAAjE,OAAA,EAAAiE,EAAA,QAAAhE,IACgB1C,EAAKJ,MAAMuB,UAExB8nB,GAAkBA,EAAcxmB,QAAWzC,EAAKJ,MAAM2G,gBAHzD,CAAAI,EAAA1F,KAAA,eAAA0F,EAAApF,OAAA,SAIL,IAJK,cAAAoF,EAAA1F,KAAA,EAOajB,EAAKgsB,gBAAgB7qB,EAAQ,EAAE,SAAS8nB,GAPrD,cAORgD,EAPQtlB,EAAAvF,KASR61B,EAAc,GAEpBhO,EAAcxf,QAAQ,SAACuD,GACrB,IAAIgJ,EAAahW,EAAKqB,MAAM,GAC5B41B,EAAYjqB,GAAiBgJ,EAE7B,IAAMoW,EAAc7sB,OAAO0X,OAAOgV,GAAcxQ,OAAO,SAAAC,GAAE,OAAKA,EAAGrY,QAAU2J,IACvEof,GAAeA,EAAY3pB,QAE7B2pB,EAAY3iB,QAAQ,SAACiS,EAAG2Q,GAEtB,IAAK3Q,EAAG4Q,MAAS5Q,EAAGpe,QAAwB,YAAdoe,EAAGpe,SAA0Boe,EAAG8Q,YAC5D,OAAO,EAGT,OAAQ9Q,EAAG7e,QACT,IAAK,OACL,IAAK,UACL,IAAK,UACL,IAAK,UACHmZ,EAAaA,EAAWvO,KAAKiU,EAAG8Q,aAClC,MACA,IAAK,OACL,IAAK,SACL,IAAK,UACL,IAAK,WACHxW,EAAaA,EAAW+E,MAAMW,EAAG8Q,aAOjCxW,EAAWyW,GAAG,KAChBzW,EAAahW,EAAKqB,MAAM,MAM9B41B,EAAYjqB,GAAiBgJ,IAjDjBrP,EAAApF,OAAA,SAoDP01B,GApDO,yBAAAtwB,EAAAnF,SAAA8E,EAAA3G,SA7eEA,KAmiBlBkyD,oBAniBkBtyD,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAmiBI,SAAAyH,IAAA,IAAAjH,EAAA4zB,EAAA+8B,EAAA7oC,EAAAriB,EAAAmrD,EAAAhV,EAAAiV,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAxwD,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAA0H,GAAA,cAAAA,EAAAxH,KAAAwH,EAAAvH,MAAA,UAAOE,EAAPwxD,EAAAlwD,OAAA,QAAAC,IAAAiwD,EAAA,IAAAA,EAAA,GAAqB59B,EAArB49B,EAAAlwD,OAAA,QAAAC,IAAAiwD,EAAA,GAAAA,EAAA,GAAsC,EAAEb,EAAxCa,EAAAlwD,OAAA,QAAAC,IAAAiwD,EAAA,GAAAA,EAAA,GAAuD,SAAS1pC,EAAhE0pC,EAAAlwD,OAAA,QAAAC,IAAAiwD,EAAA,GAAAA,EAAA,GAA8E,IAClGxxD,EAAUA,GAAoBnB,EAAKJ,MAAMuB,UAExB8nB,GAAkBA,EAAcxmB,OAH7B,CAAA+F,EAAAvH,KAAA,eAAAuH,EAAAjH,OAAA,SAIX,IAJW,UAOpBJ,EAAUA,EAAQ8O,cAEZrJ,EAAmB5G,EAAKJ,MAAMgH,iBAG9BmrD,EAAuB/xD,EAAKO,gBAAgB,CAAC,UAAU,qBAC7Dw0B,EAAmB1c,KAAKG,IAAIu5C,EAAqBh9B,GAE3CgoB,EAAkBzsC,GAAcosC,QAAQK,gBACxCiV,EAAgB1hD,GAAcosC,QAAQte,UAAU+e,UAElD8U,EAAU,GACVC,EAAmB,KACnBC,EAAwB,MAGxBH,EAAc7tD,UAAW6tD,EAAc5U,UAAUL,GAvBjC,CAAAv0C,EAAAvH,KAAA,YAwBZmxD,EAAkBJ,EAAc5U,UAAUL,GAGhDoV,EAAqB,GAAA/tD,OAAMguD,EAAN,cAAAhuD,OAAkCwC,EAAlC,YAAAxC,OAA6DwpC,GAAIglB,wBAAjE,2CAAAxuD,OAAkIjD,EAAlI,gBAAAiD,OAAwJ2tD,EAAxJ,cAAA3tD,OAAyL0tD,EAAzL,gBACrBI,EAAmBlyD,EAAK6yD,iBAAiBV,KAGjBD,EAAiBrmD,KAAKinD,QAAUvzD,OAAO0X,OAAOi7C,EAAiBrmD,KAAKinD,QAAQrwD,QA/BlF,CAAA+F,EAAAvH,KAAA,gBAiCVoxD,EAAe9yD,OAAO0X,OAAOi7C,EAAiBrmD,KAAKinD,QAAQnvC,MAC3D2uC,EAAwBD,GAAgBA,EAAan9B,YAAcxpB,SAAS2mD,EAAan9B,aAAa,EAAIH,EAE1Gw9B,EApCU,GAAAnuD,OAoCsBguD,EApCtB,cAAAhuD,OAoCkDwC,EApClD,YAAAxC,OAoC6EwpC,GAAIglB,wBApCjF,2CAAAxuD,OAoCkJjD,EApClJ,gBAAAiD,OAoCwKkuD,EApCxK,cAAAluD,OAoC0M0tD,EApC1M,aAAAtpD,EAAAvH,KAAA,GAqCMjB,EAAK+yD,kBAAkBR,EAA2B,IArCxD,cAqCZC,EArCYhqD,EAAApH,OAuCCoxD,EAAU3mD,KAAKinD,QAAUN,EAAU3mD,KAAKinD,OAAOrwD,QAvChD,CAAA+F,EAAAvH,KAAA,gBAAAuH,EAAAvH,KAAA,GAyCIjB,EAAKgzD,mBAAmBR,EAAU3mD,KAAKinD,OAAO7pC,GAzClD,SAyCdupC,EAzCchqD,EAAApH,OA2CG7B,OAAO0X,OAAOu7C,GAAW/vD,SAElCgwD,EAAqBlzD,OAAO0X,OAAOu7C,GAAW33C,IAAK,SAAAkT,GAAM,OAAKriB,SAASqiB,EAAOmH,eACxD7c,KAAKG,IAALtW,MAAAmW,KAAI9Y,OAAAkhC,EAAA,EAAAlhC,CAAQkzD,KAGfH,IAEvB/yD,OAAO0X,OAAOu7C,GAAW/oD,QAAQ,SAACiS,GAChBnc,OAAOwH,KAAKmrD,EAAiBrmD,KAAKinD,QAAQv+B,SAAS7Y,EAAG4Q,KAAKrc,iBAEzEiiD,EAAiBrmD,KAAKinD,OAAOp3C,EAAG4Q,KAAKrc,eAAiByL,KAK1D1b,EAAKizD,kBAAkBd,GAAsB,EAAMD,KA3DzC,QAAA1pD,EAAAvH,KAAA,iBAgEhBixD,EAAmB,KAhEH,WAmEdQ,EAAMR,EAnEQ,CAAA1pD,EAAAvH,KAAA,gBAAAuH,EAAAvH,KAAA,GAuEJjB,EAAKwmB,YAAY2rC,GAvEb,QAuEhBO,EAvEgBlqD,EAAApH,KAAA,aA0EdsxD,GAAOA,EAAI7mD,MAAQ6mD,EAAI7mD,KAAKinD,QA1Ed,CAAAtqD,EAAAvH,KAAA,SA2EhBgxD,EAAUS,EAAI7mD,KAAKinD,OA3EHtqD,EAAAvH,KAAA,wBAAAuH,EAAAjH,OAAA,SA6ET,IA7ES,eAAAiH,EAAAjH,OAAA,SAiFb,CACL0wD,UACAC,mBACAC,0BApFkB,yBAAA3pD,EAAAhH,SAAA4G,EAAAzI,SAniBJA,KA0nBlB+wD,YA1nBkBnxD,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA0nBJ,SAAAmH,IAAA,IAAA3G,EAAA4zB,EAAA+8B,EAAA7oC,EAAAgpC,EAAAhqD,EAAA9F,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAoH,GAAA,cAAAA,EAAAlH,KAAAkH,EAAAjH,MAAA,cAAOE,EAAP8G,EAAAxF,OAAA,QAAAC,IAAAuF,EAAA,IAAAA,EAAA,GAAqB8sB,EAArB9sB,EAAAxF,OAAA,QAAAC,IAAAuF,EAAA,GAAAA,EAAA,GAAsC,EAAE6pD,EAAxC7pD,EAAAxF,OAAA,QAAAC,IAAAuF,EAAA,GAAAA,EAAA,GAAuD,SAASghB,EAAhEhhB,EAAAxF,OAAA,QAAAC,IAAAuF,EAAA,GAAAA,EAAA,GAA8E,GAA9EC,EAAAjH,KAAA,EACUjB,EAAKgsB,gBAAgB7qB,EAAQ4zB,EAAiB+8B,EAAe7oC,GADvE,cACNgpC,EADM/pD,EAAA9G,KAAA8G,EAAA3G,OAAA,SAGLvB,EAAKkzD,eAAejB,EAAQhpC,IAHvB,wBAAA/gB,EAAA1G,SAAAsG,EAAAnI,SA1nBIA,KA+nBlBqsB,gBA/nBkBzsB,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA+nBA,SAAAwyD,IAAA,IAAAhyD,EAAA4zB,EAAA+8B,EAAA7oC,EAAA9gB,EAAA8pD,EAAAC,EAAAC,EAAAlmC,EAAAmnC,EAAAC,EAAAC,EAAAC,EAAApxD,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAA0yD,GAAA,cAAAA,EAAAxyD,KAAAwyD,EAAAvyD,MAAA,cAAOE,EAAPoyD,EAAA9wD,OAAA,QAAAC,IAAA6wD,EAAA,IAAAA,EAAA,GAAqBx+B,EAArBw+B,EAAA9wD,OAAA,QAAAC,IAAA6wD,EAAA,GAAAA,EAAA,GAAsC,EAAEzB,EAAxCyB,EAAA9wD,OAAA,QAAAC,IAAA6wD,EAAA,GAAAA,EAAA,GAAuD,SAAStqC,EAAhEsqC,EAAA9wD,OAAA,QAAAC,IAAA6wD,EAAA,GAAAA,EAAA,GAA8E,GAA9EC,EAAAvyD,KAAA,EAKNjB,EAAK6xD,oBAAoB1wD,EAAQ4zB,EAAiB+8B,EAAe7oC,GAL3D,UAAA9gB,EAAAqrD,EAAApyD,KAEd6wD,EAFc9pD,EAEd8pD,QACAC,EAHc/pD,EAGd+pD,iBACAC,EAJchqD,EAIdgqD,sBAIElmC,EAAe,IAEfimC,EAVY,CAAAsB,EAAAvyD,KAAA,gBAAAuyD,EAAAvyD,KAAA,GAYOjB,EAAKyzD,iBAAiBxB,EAAQhpC,GAZrC,QAYdgD,EAZcunC,EAAApyD,KAAAoyD,EAAAvyD,KAAA,wBAcRmyD,EAAqB7zD,OAAOwH,KAAK/G,EAAKJ,MAAM2G,iBAdpCitD,EAAAvyD,KAAA,GAgBOjB,EAAKgzD,mBAAmBf,EAAQmB,GAhBvC,SAgBdnnC,EAhBcunC,EAAApyD,OAmBM7B,OAAOwH,KAAKklB,GAAcxpB,SAEtC4wD,EAAsB,GAE5B9zD,OAAOwH,KAAKklB,GAAcxiB,QAAQ,SAAA8rB,GAChC,IAAMm+B,EAASznC,EAAasJ,GACxBm+B,EAAOx+B,cACTm+B,EAAoB99B,GAAUm+B,KAI5BJ,EAAoB,CACxBznD,KAAK,CACHinD,OAAOO,IAIXrzD,EAAKizD,kBAAkBd,GAAsB,EAAMmB,IApCvC,eAAAE,EAAAjyD,OAAA,SA0CThC,OACE0X,OAAOgV,GACPxQ,OAAO,SAAAC,GAAE,OAAKuN,EAAcsL,SAAS7Y,EAAGrY,MAAMue,iBAC9C4S,KAAK,SAACp1B,EAAEq1B,GAAH,OAAUr1B,EAAEmtB,UAAYkI,EAAElI,WAAa,EAAI,KA7CzC,yBAAAinC,EAAAhyD,SAAA2xD,EAAAxzD,SA/nBAA,KA8qBlBuzD,eA9qBkB,eAAA7qD,EAAA9I,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA8qBD,SAAAgzD,EAAO1B,GAAP,IAAAhpC,EAAA1iB,EAAA+pD,EAAAsD,EAAAzxD,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAA+yD,GAAA,cAAAA,EAAA7yD,KAAA6yD,EAAA5yD,MAAA,UAAegoB,EAAf2qC,EAAAnxD,OAAA,QAAAC,IAAAkxD,EAAA,GAAAA,EAAA,GAA6B,GAEvC3B,GAAYA,EAAQxvD,QAAqC,oBAApBwvD,EAAQxoD,QAFnC,CAAAoqD,EAAA5yD,KAAA,eAAA4yD,EAAAtyD,OAAA,SAGN,IAHM,cAMTgF,EAAkBvG,EAAKJ,MAAM2G,gBAAkBvG,EAAKJ,MAAM2G,gBAAkBvG,EAAKywD,0BAElFxnC,GAAkBA,EAAcxmB,SACnCwmB,EAAgB1pB,OAAOwH,KAAKR,KAGxB+pD,EAAW2B,EAAQx2C,OAAQ,SAAAC,GAAE,OAAKuN,EAAcsL,SAAS7Y,EAAGrY,QAAU,CAAC,UAAU,WAAW,aAAa,cAAc,kBAAkB,mBAAmB,iBAAiB,mBAAmBkxB,SAAS7Y,EAAG7e,WAErM4F,QACX6tD,EAAS97B,KAAK,SAACp1B,EAAEq1B,GAAH,OAAUr1B,EAAEmtB,UAAYkI,EAAElI,WAAa,EAAI,IAf5CsnC,EAAAtyD,OAAA,SAkBR+uD,GAlBQ,wBAAAuD,EAAAryD,SAAAmyD,EAAAh0D,SA9qBC,gBAAAgG,GAAA,OAAA0C,EAAAnG,MAAAvC,KAAAwC,YAAA,GAAAxC,KAksBlBqzD,mBAlsBkB,eAAA1qD,EAAA/I,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAksBG,SAAAmzD,EAAO7B,GAAP,IAAAhpC,EAAAmL,EAAAnI,EAAA8nC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAlyD,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAwzD,GAAA,cAAAA,EAAAtzD,KAAAszD,EAAArzD,MAAA,UAAegoB,EAAforC,EAAA5xD,OAAA,QAAAC,IAAA2xD,EAAA,GAAAA,EAAA,GAA6B,GAAGjgC,IAAhCigC,EAAA5xD,OAAA,QAAAC,IAAA2xD,EAAA,KAAAA,EAAA,GACdpC,GAAYA,EAAQxvD,QAAqC,oBAApBwvD,EAAQxoD,QAD/B,CAAA6qD,EAAArzD,KAAA,eAAAqzD,EAAA/yD,OAAA,SAEV,IAFU,UAKd0nB,GAAkBA,EAAcxmB,SACnCwmB,EAAgB1pB,OAAOwH,KAAK/G,EAAKJ,MAAM2G,kBAGrC0lB,EAAe,GACf8nC,EAAoB,GACpBC,EAA4B,GAG1BC,EAAmBj0D,EAAKO,gBAAgB,CAAC,QAAQ,gBACjD2zD,EAAoBl0D,EAAKO,gBAAgB,CAAC,QAAQ,iBAClD4zD,EAAoBn0D,EAAKO,gBAAgB,CAAC,QAAQ,sBAClD6zD,EAAuBp0D,EAAKO,gBAAgB,CAAC,QAAQ,oBAI3D0oB,EAAcxf,QAAQ,SAAApG,GACpB,IAAMlD,EAAcH,EAAKJ,MAAM2G,gBAAgBlD,GACzCksD,EAA2BvvD,EAAKO,gBAAgB,CAAC,WAAW,UAAU,UAAU,kBAChFivD,EAAwBrvD,EAAY4W,WAAa5W,EAAY4W,UAAU+wB,kBAAoB3nC,EAAY4W,UAAU+wB,kBAAkB3hC,QAAU,KAC7IspD,EAA4BtvD,EAAY4W,WAAa5W,EAAY4W,UAAU+wB,mBAAqB3nC,EAAY4W,UAAU+wB,kBAAkB+X,aAAe1/C,EAAY4W,UAAU+wB,kBAAkB+X,aAAe,GAC9M0U,EAA2Bv0D,EAAKO,gBAAgB,CAAC,QAAQ,iBAAiB,QAAQ,sBAElF0+C,EAAiBj/C,EAAKO,gBAAgB,CAAC,QAAQ,iBAAiB,QAAQ,kBAAkBJ,EAAYkE,KAAKhB,QAC3GqsD,EAA6BzQ,GAAkBA,EAAenX,kBAAoBmX,EAAenX,kBAAkB3hC,QAAU,KAE7HquD,EAAex0D,EAAKO,gBAAgB,CAAC,QAAQ,YAC7Ck0D,EAAmBz0D,EAAKO,gBAAgB,CAAC,QAAQ,kBAAkBJ,EAAYkE,KAAKhB,QAE1F4uD,EAAQxoD,QAAS,SAAAiS,GACf,IAAIiS,EAAgBxtB,EAAY8C,SAC1ByxD,EAAYv0D,EAAYkE,KAAKhB,MAC7BsxD,EAAc1C,EAAQx2C,OAAO,SAAAm5C,GAAC,OAAIA,EAAEtoC,OAAS5Q,EAAG4Q,OAChDuoC,EAAeF,EAAYlyD,OAAO,GAAKkyD,EAAYl5C,OAAO,SAAAq5C,GAAG,OAAIA,EAAIlK,gBAAgB36C,gBAAkB9P,EAAYgG,QAAQ8J,gBAAexN,OAAO,EACjJmtD,EAA0C,IAAvB+E,EAAYlyD,QAAgBiZ,EAAGrM,KAAKY,gBAAkBjQ,EAAKJ,MAAMuB,QAAQ8O,eAAiByL,EAAGkvC,gBAAgB36C,gBAAkB9P,EAAYkE,KAAK8B,QAAQ8J,cAC3K4/C,EAA6C,IAAvB8E,EAAYlyD,QAAgBiZ,EAAGqzC,GAAG9+C,gBAAkBjQ,EAAKJ,MAAMuB,QAAQ8O,eAAiByL,EAAGkvC,gBAAgB36C,gBAAkB9P,EAAYkE,KAAK8B,QAAQ8J,cAC5K8kD,EAAqBrF,GAA8Bh0C,EAAGrM,KAAKY,gBAAkBy/C,EAA2Bz/C,eAAiByL,EAAGkvC,gBAAgB36C,gBAAkB9P,EAAYkE,KAAK8B,QAAQ8J,eAAiByL,EAAGqzC,GAAG9+C,gBAAkBjQ,EAAKJ,MAAMuB,QAAQ8O,cAEnP+kD,EAAsBH,GAAgBF,EAAYt9C,KAAM,SAAAy9C,GAAG,OAAIA,EAAIzlD,KAAKY,gBAAkBjQ,EAAKJ,MAAMuB,QAAQ8O,gBAAkB6kD,EAAI/F,GAAG9+C,gBAAkB9P,EAAYkE,KAAK8B,QAAQ8J,eAAkBs/C,GAA4BuF,EAAI/F,GAAG9+C,gBAAkBs/C,EAAyBppD,QAAQ8J,eAAiB0kD,EAAYl5C,OAAO,SAAAw5C,GAAI,OAAIA,EAAKrK,gBAAgB36C,gBAAkB9P,EAAYkE,KAAK8B,QAAQ8J,gBAAexN,OAAO,KAC3ZyyD,EAAqBL,GAAgBF,EAAYt9C,KAAM,SAAAy9C,GAAG,OAAIA,EAAIlK,gBAAgB36C,gBAAkB9P,EAAYgG,QAAQ8J,eAAiB0kD,EAAYl5C,OAAO,SAAAw5C,GAAI,OAAIA,EAAKrK,gBAAgB36C,gBAAkB9P,EAAYkE,KAAK8B,QAAQ8J,gBAAexN,QAAUqyD,EAAI/F,GAAG9+C,gBAAkBjQ,EAAKJ,MAAMuB,QAAQ8O,gBAEzS0/C,EAAgBoF,GAAuBvF,IAA0B9zC,EAAGrM,KAAKY,gBAAkBu/C,EAAsBv/C,eAAiBw/C,EAA0B50C,IAAI,SAAC5M,GAAQ,OAAOA,EAAEgC,gBAAkBskB,SAAS7Y,EAAGrM,KAAKY,iBAAoByL,EAAGkvC,gBAAgB36C,gBAAkB9P,EAAYkE,KAAK8B,QAAQ8J,cACvSklD,EAAiBZ,IAA6B74C,EAAGrM,KAAKY,gBAAkBskD,EAAyBpuD,QAAQ8J,eAAiBskD,EAAyB1U,aAAahlC,IAAI,SAAC5M,GAAQ,OAAOA,EAAEgC,gBAAkBskB,SAAS7Y,EAAGrM,KAAKY,iBAAmByL,EAAGqzC,GAAG9+C,gBAAkBjQ,EAAKJ,MAAMuB,QAAQ8O,eAAiByL,EAAGkvC,gBAAgB36C,gBAAkB9P,EAAYkE,KAAK8B,QAAQ8J,cACtW6/C,EAAc+E,IAAiBlF,GAAiBj0C,EAAGrM,KAAKY,gBAAkBjQ,EAAKJ,MAAMuB,QAAQ8O,gBAAkByL,EAAGqzC,GAAG9+C,gBAAkB9P,EAAYkE,KAAK8B,QAAQ8J,eAAkBs/C,GAA4B7zC,EAAGqzC,GAAG9+C,gBAAkBs/C,EAAyBppD,QAAQ8J,eAAiB0kD,EAAYl5C,OAAO,SAAAq5C,GAAG,OAAIA,EAAIlK,gBAAgB36C,gBAAkB9P,EAAYkE,KAAK8B,QAAQ8J,gBAAexN,OAAO,GACvYstD,EAAa8E,IAAiBlF,IAAkBqF,GAAuBt5C,EAAGkvC,gBAAgB36C,gBAAkB9P,EAAYgG,QAAQ8J,eAAiB0kD,EAAYl5C,OAAO,SAAAq5C,GAAG,OAAIA,EAAIlK,gBAAgB36C,gBAAkB9P,EAAYkE,KAAK8B,QAAQ8J,gBAAexN,QAAUiZ,EAAGqzC,GAAG9+C,gBAAkBjQ,EAAKJ,MAAMuB,QAAQ8O,cAC9SmlD,EAAeT,EAAYlyD,OAAO,GAAKkyD,EAAYl5C,OAAO,SAAAq5C,GAAG,OAAI30D,EAAYyP,UAAUiL,IAAI,SAAAnR,GAAC,OAAIA,EAAEvD,QAAQ8J,gBAAeskB,SAASugC,EAAIlK,gBAAgB36C,iBAAiBxN,OAAO,GAAKiZ,EAAGkvC,gBAAgB36C,gBAAkB9P,EAAYkE,KAAK8B,QAAQ8J,cAEjPolD,GAAezF,IAAqBwF,IAAiBF,IAAuBjpC,EAAavQ,EAAG4Q,OAAS5Q,EAAGrM,KAAKY,gBAAkBjQ,EAAKJ,MAAMuB,QAAQ8O,eAAiByL,EAAGkvC,gBAAgB36C,gBAAkB9P,EAAYkE,KAAK8B,QAAQ8J,cACjO+/C,GAAYH,IAAwBsF,IAAmBH,IAAwB/oC,EAAavQ,EAAG4Q,OAAS5Q,EAAGqzC,GAAG9+C,gBAAkBjQ,EAAKJ,MAAMuB,QAAQ8O,eAAiByL,EAAGkvC,gBAAgB36C,gBAAkB9P,EAAYkE,KAAK8B,QAAQ8J,cAGlOzK,EAAmBivD,GAAoBA,EAAiBtuD,QAAUsuD,EAAiBtuD,QAAUhG,EAAYkE,KAAK8B,QAG9GmvD,EAAUX,EAAYt9C,KAAM,SAAAqE,GAAE,OAAKA,EAAGkvC,gBAAgB36C,gBAAkBikD,EAAkB/tD,QAAQ8J,gBAAkByL,EAAGqzC,GAAG9+C,gBAAkBjQ,EAAKJ,MAAMuB,QAAQ8O,eAAiByL,EAAGrM,KAAKY,gBAAkBjQ,EAAKJ,MAAMuB,QAAQ8O,iBAC7NslD,EAAYf,QAA4B9xD,IAAZ4yD,EAE5BE,EAAmBD,GAAa75C,EAAGkvC,gBAAgB36C,gBAAkBzK,EAAiByK,eAAiByL,EAAGqzC,GAAG9+C,gBAAkBkkD,EAAkBhuD,QAAQ8J,eAAiByL,EAAGrM,KAAKY,gBAAkBjQ,EAAKJ,MAAMuB,QAAQ8O,eAAiBjQ,EAAKqB,MAAMqa,EAAG3N,OAAOsI,GAAG,GAChQo/C,EAAkBF,GAAa75C,EAAGkvC,gBAAgB36C,gBAAkBzK,EAAiByK,eAAiByL,EAAGqzC,GAAG9+C,gBAAkBjQ,EAAKJ,MAAMuB,QAAQ8O,eAAiByL,EAAGrM,KAAKY,gBAAkBkkD,EAAkBhuD,QAAQ8J,eAAiBjQ,EAAKqB,MAAMqa,EAAG3N,OAAOsI,GAAG,GAE/Pq/C,EAAmBH,GAAa75C,EAAGkvC,gBAAgB36C,gBAAkB9P,EAAYgG,QAAQ8J,eAAiByL,EAAGrM,KAAKY,gBAAkBjQ,EAAKJ,MAAMuB,QAAQ8O,eAAiByL,EAAGqzC,GAAG9+C,gBAAkBmkD,EAAqBjuD,QAAQ8J,eAAiBjQ,EAAKqB,MAAMqa,EAAG3N,OAAOsI,GAAG,GACtQs/C,EAAoBJ,GAAa75C,EAAGkvC,gBAAgB36C,gBAAkB9P,EAAYgG,QAAQ8J,eAAiByL,EAAGqzC,GAAG9+C,gBAAkBjQ,EAAKJ,MAAMuB,QAAQ8O,eAAiByL,EAAGrM,KAAKY,gBAAkBmkD,EAAqBjuD,QAAQ8J,eAAiBjQ,EAAKqB,MAAMqa,EAAG3N,OAAOsI,GAAG,GAEvQu/C,EAAeL,GAAa75C,EAAGkvC,gBAAgB36C,gBAAkBikD,EAAkB/tD,QAAQ8J,eAAiByL,EAAGqzC,GAAG9+C,gBAAkBjQ,EAAKJ,MAAMuB,QAAQ8O,eAAiByL,EAAGrM,KAAKY,gBAAkBgkD,EAAiB9tD,QAAQ8J,eAAiBjQ,EAAKqB,MAAMqa,EAAG3N,OAAOsI,GAAG,GACpQw/C,EAAgBN,GAAa75C,EAAGkvC,gBAAgB36C,gBAAkBikD,EAAkB/tD,QAAQ8J,eAAiByL,EAAGrM,KAAKY,gBAAkBjQ,EAAKJ,MAAMuB,QAAQ8O,eAAiByL,EAAGqzC,GAAG9+C,gBAAkBgkD,EAAiB9tD,QAAQ8J,eAAiBjQ,EAAKqB,MAAMqa,EAAG3N,OAAOsI,GAAG,GAErQy/C,EAAqBtB,GAAgB94C,EAAGkvC,gBAAgB36C,gBAAkBikD,EAAkB/tD,QAAQ8J,gBAAkB4lD,IAAkBJ,GAAmE/5C,EAAGrM,KAAKY,gBAAkBjQ,EAAKJ,MAAMuB,QAAQ8O,cACxP8lD,EAAoBvB,GAAgB94C,EAAGkvC,gBAAgB36C,gBAAkBikD,EAAkB/tD,QAAQ8J,gBAAkB2lD,IAAiBJ,GAAoE95C,EAAGqzC,GAAG9+C,gBAAkBjQ,EAAKJ,MAAMuB,QAAQ8O,cAM3P,GAAI2/C,GAAoBC,GAAuBF,GAAiBG,GAAeC,GAAcC,GAAYqF,GAAeD,GAAgBD,GAAkBK,GAAoBC,GAAmBG,GAAgBC,GAAiBC,GAAsBC,GAAqBL,GAAoBC,EAAkB,CAEjT,IAAI94D,EAAS,KACTo4B,EAAUvZ,EAAG4Q,KAEbwjC,EACFjzD,EAAS,UACAkzD,EACTlzD,EAAS,SACA8yD,GAAiBwF,EAC1Bt4D,EAAS,UACA+yD,EACT/yD,EAAS,OACAgzD,EACThzD,EAAS,UACAmzD,EACTnzD,EAAS,OACAw4D,EACTx4D,EAAS,UACAu4D,EACTv4D,EAAS,WACA24D,EACT34D,EAAS,UACA44D,EACT54D,EAAS,WACA+4D,EACT/4D,EAAS,aACAg5D,EACTh5D,EAAS,cACA64D,EACT74D,EAAS,iBACA84D,EACT94D,EAAS,kBACAk5D,EACTl5D,EAAS,kBACAi5D,IACTj5D,EAAS,oBAGX,IAAI8zD,EAAc,KAoBlB,GAnBI4E,IACFtgC,GAAW,IAAIvZ,EAAGyW,YAClBw+B,EAAc3wD,EAAKgD,iBAAiBsyD,EAAQvnD,MAAMmmD,EAAkBjxD,WAG/D8yD,GAAqBD,KACxB7gC,GAAS,IAAIp4B,IAMb6e,EAAGkvC,gBAAgB36C,gBAAkB9P,EAAYkE,KAAK8B,QAAQ8J,cAChE0d,EAAgB,GACP4nC,IACT5nC,EAAgBjiB,SAASgQ,EAAGs6C,eAI1B/pC,EAAagJ,GAEf,OAAQhJ,EAAagJ,GAASp4B,QAC5B,IAAK,UACCovB,EAAagJ,GAASp4B,SAAWA,GAAUkzD,IAC7C9jC,EAAagJ,GAASghC,WAAaj2D,EAAKgD,iBAAiB0Y,EAAG3N,MAAM4f,IAEtE,MACA,QACE,IAAK2nC,EAAQ,CACX,IAAMY,EAAWjqC,EAAagJ,GAASlnB,MAAMtG,KAAKzH,EAAKgD,iBAAiB0Y,EAAG3N,MAAM4f,IACjF1B,EAAagJ,GAASlnB,MAAQmoD,QAMpC,GAAIH,GAAqBD,EAClB9B,EAA0Bz/B,SAAS7Y,EAAG4Q,KAAKrc,iBAC9C0gD,EAAc3wD,EAAKgD,iBAAiB0Y,EAAG3N,MAAMmmD,EAAkBjxD,UAC/D8wD,EAAkB3jD,KAAlB7Q,OAAAsL,EAAA,EAAAtL,CAAA,GAA2Bmc,EAA3B,CAA+BuZ,UAAS5xB,QAAOqxD,YAAW/D,cAAa9zD,SAAQkR,MAAO/N,EAAKgD,iBAAiB0Y,EAAG3N,MAAM4f,YAWvH,OARA1B,EAAagJ,GAAb11B,OAAAsL,EAAA,EAAAtL,CAAA,GAA6Bmc,EAA7B,CAAiCuZ,UAAS5xB,QAAOqxD,YAAW/D,cAAa9zD,SAAQkR,MAAO/N,EAAKgD,iBAAiB0Y,EAAG3N,MAAM4f,KAGlHqmC,EAA0Bz/B,SAAS7Y,EAAG4Q,KAAKrc,gBAC9C+jD,EAA0B5jD,KAAKsL,EAAG4Q,KAAKrc,eAIjCpT,GACN,IAAK,WACH,IAAMs5D,EAAOxB,EAAYl5C,OAAO,SAAAq5C,GAAG,OAAKA,IAAQp5C,IAChD,GAAIy6C,EAAK1zD,OAAO,EAAE,CAChB,IAAMqyD,EAAMqB,EAAK,GACjBlqC,EAAagJ,GAASmhC,eAAiBp2D,EAAKgD,iBAAiB8xD,EAAI/mD,MAAM+mD,EAAIkB,cAC3E/pC,EAAagJ,GAAS9C,YAAc2iC,EAAI3iC,mBAYxD4hC,EAAkBtqD,QAAS,SAAAiS,GACpBs4C,EAA0Bz/B,SAAS7Y,EAAG4Q,KAAKrc,iBAC9Cgc,EAAavQ,EAAGuZ,SAAWvZ,MAI3B0Y,EAhMe,CAAAkgC,EAAArzD,KAAA,gBAAAqzD,EAAArzD,KAAA,GAiMIjB,EAAKq2D,6BAA6BpqC,EAAahD,GAjMnD,QAiMjBgD,EAjMiBqoC,EAAAlzD,KAAA,eAAAkzD,EAAA/yD,OAAA,SAoMZ0qB,GApMY,yBAAAqoC,EAAA9yD,SAAAsyD,EAAAn0D,SAlsBH,gBAAAyG,GAAA,OAAAkC,EAAApG,MAAAvC,KAAAwC,YAAA,GAAAxC,KAw4BlB22D,qBAAuB,SAACC,EAAM1kC,GAE5B,IAAM1wB,EAAUnB,EAAKJ,OAASI,EAAKJ,MAAMuB,QAAUnB,EAAKJ,MAAMuB,QAAU,KAClE6L,EAAgBhN,EAAKJ,OAASI,EAAKJ,MAAMoN,cAAgBhN,EAAKJ,MAAMoN,cAAgB,KAE1F,IAAK7L,IAAY6L,IAAkBhN,EAAKJ,MAAM2G,kBAAoBvG,EAAKJ,MAAM2G,gBAAgByG,GAC3F,OAAO,EAGT,IACMwpD,EADcx2D,EAAKJ,MAAM2G,gBAAgByG,GAClB3I,KAAKhB,MAE9BozD,EAAYz2D,EAAK02D,wBAChBD,EAAUt1D,KACbs1D,EAAUt1D,GAAW,IAGlBs1D,EAAUt1D,GAASq1D,KACtBC,EAAUt1D,GAASq1D,GAAY,IAGjCC,EAAUt1D,GAASq1D,GAAUD,GAAS1kC,EACtC7xB,EAAK22D,yBAAyBF,IA95Bd92D,KAg6BlBg3D,yBAA2B,SAAA/5D,GACzBoD,EAAKgkC,gBAAgB,eAAezkB,KAAKC,UAAU5iB,KAj6BnC+C,KAs6BlB+2D,sBAAwB,WAAmD,IAAlDv1D,EAAkDgB,UAAAM,OAAA,QAAAC,IAAAP,UAAA,GAAAA,UAAA,GAA1C,KAAKq0D,EAAqCr0D,UAAAM,OAAA,QAAAC,IAAAP,UAAA,GAAAA,UAAA,GAA5B,KAAK6K,EAAuB7K,UAAAM,OAAA,QAAAC,IAAAP,UAAA,GAAAA,UAAA,GAAT,KAC1Ds0D,EAAYz2D,EAAK42D,cAAc,gBAAe,EAAK,IACnDh6D,EAAeoD,EAAKJ,MAAMhD,aAAX2C,OAAAsL,EAAA,EAAAtL,CAAA,GAA+BS,EAAKJ,MAAMhD,cAAiB,GAC5EmL,EAAS0uD,EAsBb,OApBIt1D,IACEs1D,EAAUt1D,IACZ4G,EAAS0uD,EAAUt1D,GACfq1D,IACFzuD,EAASA,EAAOyuD,GAAYzuD,EAAOyuD,GAAY,GAE3CxpD,GACFzN,OAAOwH,KAAKnK,GAAc6M,QAAQ,SAAA8sD,GAChC,IAAM76C,EAAK9e,EAAa25D,IACnBxuD,EAAOwuD,IAAU76C,EAAGrY,OAASqY,EAAGrY,MAAMue,gBAAkB5U,EAAc4U,gBACzE7Z,EAAOwuD,GAAS35D,EAAa25D,QAMrCxuD,EAAS,IAINA,GA/7BSpI,KAi8BlB02D,6BAj8BkB,eAAAQ,EAAAt3D,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAi8Ba,SAAAm2D,EAAO7qC,GAAP,IAAAhD,EAAA8tC,EAAAN,EAAAO,EAAAC,EAAAC,EAAAjD,EAAAkD,EAAAh1D,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAs2D,GAAA,cAAAA,EAAAp2D,KAAAo2D,EAAAn2D,MAAA,cAAoBgoB,EAApBkuC,EAAA10D,OAAA,QAAAC,IAAAy0D,EAAA,GAAAA,EAAA,GAAkC,KAExCluC,EAAcxmB,SACnCwmB,EAAgB1pB,OAAOwH,KAAK/G,EAAKJ,MAAM2G,kBAGrCwwD,EAAa,GAI4B,kBAHzCN,EAAYz2D,EAAK02D,yBAGA12D,EAAKJ,MAAMuB,WAC9Bs1D,EAAUz2D,EAAKJ,MAAMuB,SAAW,IAI5B61D,EAAoB,GACpBC,EAAsB,GACtBC,EAAuBl3D,EAAKO,gBAAgB,CAAC,QAAQ,oBAC3DhB,OAAOwH,KAAKmwD,GAAsBztD,QAAS,SAAApG,GACzC,IAAMoxD,EAAmByC,EAAqB7zD,GACxC6oC,EAAkBlsC,EAAKO,gBAAgB,CAAC,QAAQ,SAASk0D,EAAiBhyC,YAC1E40C,EAAmBnrB,EAAgB/lC,QAAQ8J,cACjD+mD,EAAkBK,GAAoBnrB,EACtC8qB,EAAkBK,GAAkBh0D,MAAQoxD,EAAiBhyC,UAC7Dw0C,EAAoB7mD,KAAKinD,KAGrBpD,EAAmBj0D,EAAKO,gBAAgB,CAAC,QAAQ,gBA3B1B62D,EAAAn2D,KAAA,GAgCvBjB,EAAK8G,aAAamiB,EAAlB,eAAAquC,EAAA/3D,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAgC,SAAA42D,EAAOvqD,GAAP,IAAA7M,EAAAq2D,EAAA9B,EAAA8C,EAAAprC,EAAA,OAAA1rB,EAAAtB,EAAA0B,KAAA,SAAA22D,GAAA,cAAAA,EAAAz2D,KAAAy2D,EAAAx2D,MAAA,UAE9Bd,EAAcH,EAAKJ,MAAM2G,gBAAgByG,GACzCwpD,EAAWr2D,EAAYkE,KAAKhB,MAC5BqxD,EAAYv0D,EAAYkE,KAAKhB,MAGoB,kBAA5CozD,EAAUz2D,EAAKJ,MAAMuB,SAASq1D,KACvCC,EAAUz2D,EAAKJ,MAAMuB,SAASq1D,GAAY,IAGtCgB,EAX8Bj4D,OAAAsL,EAAA,EAAAtL,CAAA,GAWfk3D,EAAUz2D,EAAKJ,MAAMuB,SAASq1D,MAE7CpqC,EAAc7sB,OAAO0X,OAAOgV,GAAcxQ,OAAO,SAAAC,GAAE,OAAKA,EAAGrY,QAAU2J,OACxDof,EAAY3pB,OAdK,CAAAg1D,EAAAx2D,KAAA,eAAAw2D,EAAAx2D,KAAA,EAgB5BjB,EAAK8G,aAAaslB,EAAlB,eAAAsrC,EAAAn4D,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAA8B,SAAAg3D,EAAOj8C,EAAG2Q,GAAV,IAAAkqC,EAAAqB,EAAAhiD,EAAA8W,EAAAmrC,EAAAjH,EAAAkH,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA1D,EAAA2D,EAAA5yD,EAAA6yD,EAAA,OAAA33D,EAAAtB,EAAA0B,KAAA,SAAAw3D,GAAA,cAAAA,EAAAt3D,KAAAs3D,EAAAr3D,MAAA,UAC5Bs1D,EAD4B,KAAAnyD,OACfsX,EAAG6Q,UADY,OAE5BqrC,EAAWnB,EAAUz2D,EAAKJ,MAAMuB,SAASq1D,GAAUD,GAASE,EAAUz2D,EAAKJ,MAAMuB,SAASq1D,GAAUD,GAAS76C,EAE/G9F,EAAa,MAEbgiD,EAAShiD,YAAe5V,EAAKqB,MAAMu2D,EAAShiD,YAAYtU,QAN1B,CAAAg3D,EAAAr3D,KAAA,QAOhC2U,EAAa5V,EAAKqB,MAAMu2D,EAAShiD,YAPD0iD,EAAAr3D,KAAA,uBAAAq3D,EAAAr3D,KAAA,EASbjB,EAAK2pB,kBAAkBxpB,EAAYub,EAAGwZ,YAAYxZ,EAAG6Q,WATxC,OAShC3W,EATgC0iD,EAAAl3D,KAUhCw2D,EAAShiD,WAAaA,EAVU,QAa9B8W,EAAa1sB,EAAKqB,MAAMqa,EAAG3N,OAC3B8pD,EAAmBjiD,EAAW5Q,MAAM0nB,GAGnCkrC,EAASpwB,kBACZowB,EAASpwB,gBAAkB9rB,EAAG4Q,MAlBEgsC,EAAA1zD,GAsB1B8W,EAAG7e,OAtBuBy7D,EAAAr3D,KAuB3B,SAvB2Bq3D,EAAA1zD,GAAA,GAwB3B,YAxB2B0zD,EAAA1zD,GAAA,GAyB3B,SAzB2B0zD,EAAA1zD,GAAA,GA0B3B,YA1B2B0zD,EAAA1zD,GAAA,GA2B3B,YA3B2B0zD,EAAA1zD,GAAA,GAmC3B,YAnC2B0zD,EAAA1zD,GAAA,GAoC3B,WApC2B0zD,EAAA1zD,GAAA,GA2C3B,aA3C2B0zD,EAAA1zD,GAAA,GAkD3B,YAlD2B0zD,EAAA1zD,GAAA,GAmD3B,aAnD2B0zD,EAAA1zD,GAAA,GA2D3B,oBA3D2B0zD,EAAA1zD,GAAA,GA4D3B,qBA5D2B0zD,EAAA1zD,GAAA,GAqE3B,eArE2B0zD,EAAA1zD,GAAA,GAsE3B,gBAtE2B0zD,EAAA1zD,GAAA,GAkH3B,mBAlH2B0zD,EAAA1zD,GAAA,GAmH3B,oBAnH2B0zD,EAAA1zD,GAAA,2BA4BzBgzD,EAASprC,cACZorC,EAASlrC,WAAaA,EACtBkrC,EAAS7pD,MAAQ8pD,EACjBD,EAASprC,YAAcqrC,EACvBD,EAASzlC,YAAcnlB,GAhCKsrD,EAAA/2D,OAAA,2BAqCzBq2D,EAASprC,cACZorC,EAAS7pD,MAAQ2e,EACjBkrC,EAASprC,YAAcE,EACvBkrC,EAASlrC,WAAaA,EAAWznB,IAAI2Q,IAxCT0iD,EAAA/2D,OAAA,2BA4CzBq2D,EAASprC,cACZorC,EAASlrC,WAAaA,EACtBkrC,EAASprC,YAAcqrC,EACvBD,EAAS7pD,MAAQ6pD,EAASxB,gBA/CEkC,EAAA/2D,OAAA,uBAoDzBq2D,EAASprC,YApDgB,CAAA8rC,EAAAr3D,KAAA,gBAAAq3D,EAAAr3D,KAAA,GAqDEjB,EAAKu4D,mBAAmB78C,EAAGwZ,aArD7B,QAqDtB07B,EArDsB0H,EAAAl3D,KAsD5Bw2D,EAASlrC,WAAaA,EACtBkrC,EAASprC,YAAcqrC,EACvBD,EAAShH,gBAAkBA,EAxDC,eAAA0H,EAAA/2D,OAAA,uBA6DzBq2D,EAAShH,gBA7DgB,CAAA0H,EAAAr3D,KAAA,gBAAAq3D,EAAAr3D,KAAA,GA8DEjB,EAAKu4D,mBAAmB78C,EAAGwZ,aA9D7B,QA8DtB07B,EA9DsB0H,EAAAl3D,KA+D5Bw2D,EAAShH,gBAAkBA,EAC3BgH,EAASprC,YAAcxsB,EAAKqB,MAAMu2D,EAASjH,aAAa3rD,MAAM4yD,EAAShH,iBAhE3C,eAmE9BgH,EAASlrC,WAAa1sB,EAAKqB,MAAM,GAnEHi3D,EAAA/2D,OAAA,uBAuEzBq2D,EAAShH,gBAvEgB,CAAA0H,EAAAr3D,KAAA,gBAAAq3D,EAAAr3D,KAAA,GAwEEjB,EAAKu4D,mBAAmB78C,EAAGwZ,aAxE7B,QAwEtB07B,EAxEsB0H,EAAAl3D,KAyE5Bw2D,EAAShH,gBAAkBA,EAzEC,WA4EzBgH,EAASprC,YA5EgB,CAAA8rC,EAAAr3D,KAAA,YA8E5B22D,EAASprC,YAAcxsB,EAAKqB,MAAM,GAClCu2D,EAASlrC,WAAa1sB,EAAKqB,MAAM,IAEV01D,EAAWr7C,EAAGuZ,SAjFT,CAAAqjC,EAAAr3D,KAAA,SAAAq3D,EAAAzgD,GAiFoBk/C,EAAWr7C,EAAGuZ,SAjFlCqjC,EAAAr3D,KAAA,wBAAAq3D,EAAAr3D,KAAA,GAiFoD,IAAIqD,QAAJ,eAAAk0D,EAAAj5D,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAa,SAAA83D,EAAOz2B,EAASC,GAAhB,OAAAvhC,EAAAtB,EAAA0B,KAAA,SAAA43D,GAAA,cAAAA,EAAA13D,KAAA03D,EAAAz3D,MAAA,OAC3FjB,EAAKJ,MAAMuiC,KAAKC,IAAIu2B,sBAAsBj9C,EAAG4Q,KAAK,SAAC+V,EAAI3mB,GACjD2mB,GACFJ,EAAOI,GAETL,EAAQtmB,KALiF,wBAAAg9C,EAAAl3D,SAAAi3D,EAAA94D,SAAb,gBAAAi5D,EAAAC,GAAA,OAAAL,EAAAt2D,MAAAvC,KAAAwC,YAAA,IAjFpD,QAAAm2D,EAAAzgD,GAAAygD,EAAAl3D,KAAA,SAiFtB42D,EAjFsBM,EAAAzgD,MA6FrBk/C,EAAWr7C,EAAGuZ,WACjB8hC,EAAWr7C,EAAGuZ,SAAW+iC,GAGrBC,EAAeD,EAAelpB,KAAKrzB,OAAQ,SAAAq9C,GAAG,OAAK7B,EAAoB1iC,SAASukC,EAAI3yD,QAAQ8J,gBAAkB6oD,EAAIC,OAAOD,EAAIC,OAAOt2D,OAAO,GAAGwN,gBAAhC,4BAAA7L,OAA8E6vD,EAAiB9tD,QAAQkoD,QAAQ,IAAI,IAAIp+C,iBAE3OjQ,EAAKkiC,UAAU,eAAe+1B,GAE1BA,GAAgBA,EAAax1D,QAC/Bw1D,EAAaxuD,QAAS,SAAAqvD,GACpB,IAAItsC,EAAc9gB,SAASotD,EAAIjtD,KAAK,IAC9BmtD,EAAmBhC,EAAkB8B,EAAI3yD,QAAQ8J,eACjD0d,EAAgBqrC,EAAiB/1D,SACvCupB,EAAcxsB,EAAKgD,iBAAiBwpB,EAAYmB,GAChDiqC,EAASprC,YAAcorC,EAASprC,YAAY/kB,KAAK+kB,GACjDxsB,EAAKkiC,UAAU,oBAAoBxmB,EAAG4Q,KAAK,IAAI0sC,EAAiB31D,MAAMmpB,EAAYrc,QAAQ,GAAGynD,EAASprC,YAAYrc,QAAQ,OA5GpG,eAAAmoD,EAAA/2D,OAAA,uBAoHzBq2D,EAAShH,gBApHgB,CAAA0H,EAAAr3D,KAAA,gBAAAq3D,EAAAr3D,KAAA,GAqHEjB,EAAKu4D,mBAAmB78C,EAAGwZ,aArH7B,QAqHtB07B,EArHsB0H,EAAAl3D,KAsH5Bw2D,EAAShH,gBAAkBA,EAtHC,WAyH9BgH,EAASprC,YAAcxsB,EAAKqB,MAAMu2D,EAAS7pD,OAEtC6pD,EAASlrC,WA3HgB,CAAA4rC,EAAAr3D,KAAA,aA6HL81D,EAAWr7C,EAAGuZ,SA7HT,CAAAqjC,EAAAr3D,KAAA,SAAAq3D,EAAAW,GA6HoBlC,EAAWr7C,EAAGuZ,SA7HlCqjC,EAAAr3D,KAAA,wBAAAq3D,EAAAr3D,KAAA,GA6HoD,IAAIqD,QAAJ,eAAA40D,EAAA35D,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAa,SAAAw4D,EAAOn3B,EAASC,GAAhB,OAAAvhC,EAAAtB,EAAA0B,KAAA,SAAAs4D,GAAA,cAAAA,EAAAp4D,KAAAo4D,EAAAn4D,MAAA,OAC3FjB,EAAKJ,MAAMuiC,KAAKC,IAAIu2B,sBAAsBj9C,EAAG4Q,KAAK,SAAC+V,EAAI3mB,GACjD2mB,GACFJ,EAAOI,GAETL,EAAQtmB,KALiF,wBAAA09C,EAAA53D,SAAA23D,EAAAx5D,SAAb,gBAAA05D,EAAAC,GAAA,OAAAJ,EAAAh3D,MAAAvC,KAAAwC,YAAA,IA7HpD,QAAAm2D,EAAAW,GAAAX,EAAAl3D,KAAA,SA6HtB42D,EA7HsBM,EAAAW,MAuIpBxE,EAAmBz0D,EAAKO,gBAAgB,CAAC,QAAQ,kBAAkBm0D,IACnE0D,EAAoB3D,GAAoBA,EAAiBxxD,SAAWwxD,EAAiBxxD,SAAW,GAChGuC,EAAmBivD,GAAoBA,EAAiBtuD,QAAUsuD,EAAiBtuD,QAAUhG,EAAYkE,KAAK8B,QAG/G4wD,EAAWr7C,EAAGuZ,WACjB8hC,EAAWr7C,EAAGuZ,SAAW+iC,IAGrBC,EAAeD,EAAelpB,KAAKrzB,OAAQ,SAAAq9C,GAAG,OAAKA,EAAI3yD,QAAQ8J,gBAAgBzK,MACjEyyD,EAAax1D,SAC/BiqB,EAAahhB,SAASusD,EAAa,GAAGpsD,KAAK,IAC3C6gB,EAAa1sB,EAAKgD,iBAAiB0pB,EAAW0rC,GAC9CR,EAASlrC,WAAaA,IApJE,uBAAA4rC,EAAA/2D,OAAA,oBA8JlCq2D,EAASv0D,MAAQ2J,EAGjBif,EAAavQ,EAAGuZ,SAAW2iC,EAG3BnB,EAAUz2D,EAAKJ,MAAMuB,SAASq1D,GAAUD,GAASqB,SAG1CJ,EAASjB,GAvKkB,yBAAA+B,EAAA92D,SAAAm2D,EAAAh4D,SAA9B,gBAAA45D,EAAAC,GAAA,OAAA9B,EAAAx1D,MAAAvC,KAAAwC,YAAA,IAhB4B,cAAAs1D,EAAAx2D,KAAA,GA4LfjB,EAAKyzD,iBAAiBxnC,EAAa,CAACjf,GAAehN,EAAKJ,MAAMhD,cA5L/C,QA4LpCqvB,EA5LoCwrC,EAAAr2D,KAAA,yBAAAq2D,EAAAj2D,SAAA+1D,EAAA53D,SAAhC,gBAAA8I,GAAA,OAAA6uD,EAAAp1D,MAAAvC,KAAAwC,YAAA,IAhCuB,eAgOzBs0D,GACFz2D,EAAK22D,yBAAyBF,GAjOHW,EAAA71D,OAAA,SAoOtB0qB,GApOsB,yBAAAmrC,EAAA51D,SAAAs1D,EAAAn3D,SAj8Bb,gBAAA+H,GAAA,OAAAmvD,EAAA30D,MAAAvC,KAAAwC,YAAA,GAAAxC,KAuqClB8zD,iBAvqCkB,eAAAgG,EAAAl6D,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAuqCC,SAAA+4D,EAAOztC,GAAP,IAAAhD,EAAA0wC,EAAAlD,EAAAmD,EAAAz3D,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAA+4D,GAAA,cAAAA,EAAA74D,KAAA64D,EAAA54D,MAAA,cAAoBgoB,EAApB2wC,EAAAn3D,OAAA,QAAAC,IAAAk3D,EAAA,GAAAA,EAAA,GAAkC,GAAGD,EAArCC,EAAAn3D,OAAA,QAAAC,IAAAk3D,EAAA,GAAAA,EAAA,GAAkD,KAE9D3wC,GAAkBA,EAAcxmB,SACnCwmB,EAAgB1pB,OAAOwH,KAAK/G,EAAKJ,MAAM2G,mBAGrCkwD,EAAYz2D,EAAK42D,cAAc,gBAAe,EAAK,KAGxC52D,EAAKJ,MAAMuB,WACxBs1D,EAAUz2D,EAAKJ,MAAMuB,SAAW,IAVjB04D,EAAA54D,KAAA,EAeXjB,EAAK8G,aAAamiB,EAAlB,eAAA6wC,EAAAv6D,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAgC,SAAAo5D,EAAO/sD,GAAP,IAAA7M,EAAAq2D,EAAA,OAAA91D,EAAAtB,EAAA0B,KAAA,SAAAk5D,GAAA,cAAAA,EAAAh5D,KAAAg5D,EAAA/4D,MAAA,cAE9Bd,EAAcH,EAAKJ,MAAM2G,gBAAgByG,GACzCwpD,EAAWr2D,EAAYkE,KAAKhB,MAG7BozD,EAAUz2D,EAAKJ,MAAMuB,SAASq1D,KACjCC,EAAUz2D,EAAKJ,MAAMuB,SAASq1D,GAAY,IAG5CmD,EAAeA,GAAgBp6D,OAAO0X,OAAO0iD,GAAcl3D,OAASk3D,EAAe35D,EAAK02D,sBAAsB12D,EAAKJ,MAAMuB,QAAQq1D,EAASxpD,GAVtGgtD,EAAA/4D,KAAA,EA6B9BjB,EAAK8G,aAAavH,OAAOwH,KAAK4yD,GAA9B,eAAAM,EAAA16D,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAA4C,SAAAu5D,EAAO3D,EAAMzmD,GAAb,IAAA4L,EAAAy+C,EAAAC,EAAAC,EAAAjzB,EAAAkzB,EAAAC,EAAAhlC,EAAAilC,EAAA7K,EAAA1sD,EAAAw3D,EAAA7kD,EAAA8kD,EAAAC,EAAAC,EAAA/9D,EAAAg+D,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA3L,EAAA5E,EAAAwQ,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA96D,EAAAtB,EAAA0B,KAAA,SAAA26D,GAAA,cAAAA,EAAAz6D,KAAAy6D,EAAAx6D,MAAA,WAC1Cya,EAAKi+C,EAAapD,KAGZ76C,EAAGrY,OAASqY,EAAGrY,MAAMue,gBAAkB5U,EAAc4U,cAJjB,CAAA65C,EAAAx6D,KAAA,eAAAw6D,EAAAl6D,OAAA,UAKvC,GALuC,UAQ1C44D,EAAa1D,GAAaA,EAAUz2D,EAAKJ,MAAMuB,UAAYs1D,EAAUz2D,EAAKJ,MAAMuB,SAASq1D,IAAaC,EAAUz2D,EAAKJ,MAAMuB,SAASq1D,GAAUD,GAE9I6D,EAAiB,CACrBsB,cAAc,UACdC,gBAAgB,SAChBC,kBAAkB,UAClBC,oBAAoB,UACpBC,sBAAsB,UACtBC,uBAAuB,UACvBC,uBAAuB,UACvBC,yBAAyB,UACzBC,0BAA0B,WAEtB7B,EAAgB,CAAC,UAAU,WAE3BjzB,EAA4B,YAAd1rB,EAAGpe,OACjBg9D,EAAYD,EAAc9lC,SAAS7Y,EAAGpe,QACtCi9D,EAAyB,2BAAd7+C,EAAG6kB,OACdhL,EAAS7Z,EAAG8rB,gBAAkB9rB,EAAG8rB,gBAAkB,KACnDgzB,EAAkBj7D,OAAOwH,KAAKqzD,GAAgB7lC,SAAS7Y,EAAG6kB,UAG5DhL,GAAUtJ,EAAasJ,IAAWtJ,EAAasJ,GAAQ3f,YA9BX,CAAA6lD,EAAAx6D,KAAA,gBAAAw6D,EAAAl6D,OAAA,UA+BvC,GA/BuC,aAsC5C+4D,GAAaE,GAAmB9+C,EAAGwtB,OAAOzmC,QAtCE,CAAAg5D,EAAAx6D,KAAA,gBAwCxC0uD,EAA8C,YAA9ByK,EAAe1+C,EAAG6kB,QAClCt9B,EAAW0sD,EAAgB,GAAKxvD,EAAY8C,SAClDgpB,EAAY,IAAA7nB,OAAKsX,EAAGygD,UAAa,CAC/B7+D,OAAO,UACP+F,MAAM2J,EACNnQ,OAAOu9D,EAAe1+C,EAAG6kB,QACzBhU,UAAU7gB,SAASgQ,EAAGygD,QAAQ,KAC9B7vC,KAAKiJ,EAAS7Z,EAAG8rB,gBAAkB,KACnCrV,YAAYw9B,EAAgBxvD,EAAYkE,KAAKhB,MAAQ2J,EACrDe,MAAO2N,EAAG3N,MAAQ2N,EAAG3N,MAAQ/N,EAAKgD,iBAAiB0Y,EAAGwtB,OAAO,GAAGjmC,GAAUyS,YAjD9B+lD,EAAAl6D,OAAA,UAoDvC,GApDuC,WAwD3C6lC,GAAgB7R,GAAWilC,EAxDgB,CAAAiB,EAAAx6D,KAAA,gBAAAw6D,EAAAl6D,OAAA,UAyDvC,GAzDuC,WA4D5Ck5D,EAAS/+C,EAAG++C,OAAS/+C,EAAG++C,OAAS,KA5DW,CAAAgB,EAAAx6D,KAAA,gBAAAw6D,EAAAx6D,KAAA,GAgE9B,IAAIqD,QAAJ,eAAA83D,EAAA78D,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAa,SAAA07D,EAAOr6B,EAASC,GAAhB,OAAAvhC,EAAAtB,EAAA0B,KAAA,SAAAw7D,GAAA,cAAAA,EAAAt7D,KAAAs7D,EAAAr7D,MAAA,OAC3BjB,EAAKJ,MAAMuiC,KAAKC,IAAIL,eAAermB,EAAG8rB,gBAAgB,SAACnF,EAAIk6B,GACrDl6B,GACFJ,EAAOI,GAETL,EAAQu6B,KALiB,wBAAAD,EAAA96D,SAAA66D,EAAA18D,SAAb,gBAAA68D,EAAAC,GAAA,OAAAL,EAAAl6D,MAAAvC,KAAAwC,YAAA,IAhE8B,QAgE9Cs4D,EAhE8CgB,EAAAr6D,KAAA,WA6E3Cq5D,IAAYF,GAAYE,EAAOprD,KAAKY,gBAAkBjQ,EAAKJ,MAAMuB,QAAQ8O,eA7E9B,CAAAwrD,EAAAx6D,KAAA,gBAAAw6D,EAAAl6D,OAAA,UA8EvC,GA9EuC,eAAAk6D,EAAAx6D,KAAA,GAiFvBjB,EAAK2pB,kBAAkBxpB,EAAYs6D,EAAOvlC,YAAYulC,EAAOluC,WAjFtC,QAiF1C3W,EAjF0C6lD,EAAAr6D,KAmFhDq5D,EAAOn9D,OAAS,YAChBm9D,EAAO59D,OAASu9D,EAAe1+C,EAAG6kB,QAClCk6B,EAAO7P,gBAAkBzqD,EAAYgG,QACrCs0D,EAAOluC,UAAY7gB,SAASgQ,EAAGygD,QAAQ,KAEnCzB,EAAU,KAxFkCe,EAAA72D,GAyFxC8W,EAAG6kB,OAzFqCk7B,EAAAx6D,KA0FzC,kBA1FyCw6D,EAAA72D,GAAA,GA2FzC,wBA3FyC62D,EAAA72D,GAAA,GAqHzC,oBArHyC62D,EAAA72D,GAAA,GAoIzC,2BApIyC62D,EAAA72D,GAAA,GAuNzC,8BAvNyC62D,EAAA72D,GAAA,GAwNzC,6BAxNyC62D,EAAA72D,GAAA,GAyNzC,0BAzNyC62D,EAAA72D,GAAA,GA0NzC,2BA1NyC62D,EAAA72D,GAAA,GA2NzC,sBA3NyC62D,EAAA72D,GAAA,wBA4FvC8W,EAAGwtB,OA5FoC,CAAAuyB,EAAAx6D,KAAA,gBA6FtCk5D,IACF1D,EAAUz2D,EAAKJ,MAAMuB,SAASq1D,GAAUD,GAAS76C,GA9FT+/C,EAAAl6D,OAAA,UAgGnC,GAhGmC,WAmGxCk5D,EAAO1L,GAAG9+C,gBAAkB9P,EAAYkE,KAAK8B,QAAQ8J,cAnGb,CAAAwrD,EAAAx6D,KAAA,gBAqGtCk5D,UACK1D,EAAUz2D,EAAKJ,MAAMuB,SAASq1D,GAAUD,GAtGPkF,EAAAl6D,OAAA,UAyGnC,GAzGmC,WA4G5Cm5D,EAAUh/C,EAAGwtB,OAASlpC,EAAKgD,iBAAiB0Y,EAAGwtB,OAAO,GAAG/oC,EAAY8C,UAAUyS,WAAa,EA5GhD,CAAA+lD,EAAAx6D,KAAA,gBAAAw6D,EAAAl6D,OAAA,UA+GnC,GA/GmC,eAkH5Ck5D,EAAO1sD,MAAQ2sD,EACfD,EAAOjuC,YAAckuC,EAnHuBe,EAAAl6D,OAAA,wBAsHvCma,EAAGwtB,OAtHoC,CAAAuyB,EAAAx6D,KAAA,gBAuHtCk5D,IACF1D,EAAUz2D,EAAKJ,MAAMuB,SAASq1D,GAAUD,GAAS76C,GAxHT+/C,EAAAl6D,OAAA,UA0HnC,GA1HmC,eA6HvCk5D,EAAO7kD,aACJ+kD,EAAqB36D,EAAKgD,iBAAiB0Y,EAAGwtB,OAAO,GAAG,IAAIlkC,MAAM4Q,GACxE6kD,EAAO7kD,WAAaA,EACpB6kD,EAAO1sD,MAAQ4sD,EACfF,EAAOjuC,YAAcmuC,GAjIqBc,EAAAl6D,OAAA,wBAqIxCq5D,EAAgCl/C,EAAG6gD,UAAY7gD,EAAG6gD,UAAY,KArItB,CAAAd,EAAAx6D,KAAA,gBAAAw6D,EAAAx6D,KAAA,GAwIH,IAAIqD,QAAJ,eAAAo4D,EAAAn9D,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAa,SAAAg8D,EAAO36B,EAASC,GAAhB,OAAAvhC,EAAAtB,EAAA0B,KAAA,SAAA87D,GAAA,cAAAA,EAAA57D,KAAA47D,EAAA37D,MAAA,OAClDjB,EAAKJ,MAAMuiC,KAAKC,IAAIu2B,sBAAsBj9C,EAAG8rB,gBAAgB,SAACnF,EAAI3mB,GAC5D2mB,GACFJ,EAAOI,GAETL,EAAQtmB,KALwC,wBAAAkhD,EAAAp7D,SAAAm7D,EAAAh9D,SAAb,gBAAAk9D,EAAAC,GAAA,OAAAJ,EAAAx6D,MAAAvC,KAAAwC,YAAA,IAxIG,QAwI1Cy4D,EAxI0Ca,EAAAr6D,KAAA,WAkJvCw5D,EAlJuC,CAAAa,EAAAx6D,KAAA,gBAAAw6D,EAAAl6D,OAAA,UAmJnC,GAnJmC,WAuJvCma,EAAG6gD,YACN7gD,EAAG6gD,UAAY3B,EACXT,IACF1D,EAAUz2D,EAAKJ,MAAMuB,SAASq1D,GAAUD,GAAS76C,IAIjD7e,EAAS,KACTg+D,EAAqC,KACrCC,EAA0C,GACxCC,EAAsB/6D,EAAKO,gBAAgB,CAAC,WAAW,UAAU,kBAGnEJ,EAAY4W,WAAa5W,EAAY4W,UAAUC,cAC7C4jD,EAA8B9rB,MAChC+rB,EAAqC16D,EAAY4W,UAAUC,YAAY7Q,QAAQkoD,QAAQ,IAAI,IAAIp+C,cAC/F6qD,EAA0CF,EAA8B9rB,KAAKrzB,OAAO,SAACC,GAAS,OAAOA,EAAGvV,QAAQ8J,gBAAgB9P,EAAYgG,QAAQ8J,eAAiByL,EAAGq9C,OAAOr9C,EAAGq9C,OAAOt2D,OAAO,GAAGwN,gBAA9B,4BAAA7L,OAA4Ey2D,MACxOD,EAA8Br8B,SACvCu8B,EAA0Cv7D,OAAO0X,OAAO2jD,EAA8Br8B,QAAQ9iB,OAAO,SAACC,GAAS,OAAOA,EAAGvV,QAAQ8J,gBAAgB9P,EAAYgG,QAAQ8J,iBAGnK6qD,EAAwCr4D,SAC1C5F,EAAS,YAKRi+D,EAAwCr4D,SACvCm4D,EAA8B9rB,MAChC+rB,EAAqC16D,EAAYkE,KAAK8B,QAAQkoD,QAAQ,IAAI,IAAIp+C,gBAC9E6qD,EAA0CF,EAA8B9rB,KAAKrzB,OAAO,SAACC,GAAS,OAAOA,EAAGvV,QAAQ8J,gBAAgB9P,EAAYgG,QAAQ8J,eAAiByL,EAAGq9C,OAAOr9C,EAAGq9C,OAAOt2D,OAAO,GAAGwN,gBAA9B,4BAAA7L,OAA4Ey2D,MAGpMp4D,QAAUs4D,IACrDF,EAAqCE,EAAoB50D,QAAQkoD,QAAQ,IAAI,IAAIp+C,cACjF6qD,EAA0CF,EAA8B9rB,KAAKrzB,OAAO,SAACC,GAAS,OAAOA,EAAGvV,QAAQ8J,gBAAgB9P,EAAYgG,QAAQ8J,eAAiByL,EAAGq9C,OAAOr9C,EAAGq9C,OAAOt2D,OAAO,GAAGwN,gBAA9B,4BAAA7L,OAA4Ey2D,OAE1OD,EAA8Br8B,SACvCu8B,EAA0Cv7D,OAAO0X,OAAO2jD,EAA8Br8B,QAAQ9iB,OAAO,SAACC,GAAS,OAAOA,EAAGvV,QAAQ8J,gBAAgB9P,EAAYgG,QAAQ8J,iBAGnK6qD,EAAwCr4D,SAC1C5F,EAAS,YAIRi+D,EAAwCr4D,OArMD,CAAAg5D,EAAAx6D,KAAA,gBAAAw6D,EAAAl6D,OAAA,UAsMnC,GAtMmC,WAyMtCy5D,EAAmBF,EAAwC,GAE3DG,EAAcD,EAAiBnvD,KAAOH,SAASsvD,EAAiBnvD,KAAK,IAAOmvD,EAAiB+B,KAAO/B,EAAiB+B,IAAIlxD,KAAQH,SAASsvD,EAAiB+B,IAAIlxD,KAAK,IAAM,KA3MpI,CAAA4vD,EAAAx6D,KAAA,gBAAAw6D,EAAAl6D,OAAA,UA8MnC,GA9MmC,eAiNtC25D,EAAmBl7D,EAAKgD,iBAAiBi4D,EAAY96D,EAAY8C,UACvEw3D,EAAO59D,OAASA,EAChB49D,EAAO1sD,MAAQmtD,EACfT,EAAOjuC,YAAc0uC,EApNuBO,EAAAl6D,OAAA,wBA4NvCpB,EAAY4W,WAAc5W,EAAY4W,UAAUC,YA5NT,CAAAykD,EAAAx6D,KAAA,gBAAAw6D,EAAAl6D,OAAA,UA6NnC,GA7NmC,WAgOxC45D,EAAqBz/C,EAAG6gD,UAAY7gD,EAAG6gD,UAAY,KAhOX,CAAAd,EAAAx6D,KAAA,gBAAAw6D,EAAAx6D,KAAA,GAmOd,IAAIqD,QAAJ,eAAA04D,EAAAz9D,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAa,SAAAs8D,EAAOj7B,EAASC,GAAhB,OAAAvhC,EAAAtB,EAAA0B,KAAA,SAAAo8D,GAAA,cAAAA,EAAAl8D,KAAAk8D,EAAAj8D,MAAA,OACvCjB,EAAKJ,MAAMuiC,KAAKC,IAAIu2B,sBAAsBj9C,EAAG8rB,gBAAgB,SAACnF,EAAI3mB,GAC5D2mB,GACFJ,EAAOI,GAETL,EAAQtmB,KAL6B,wBAAAwhD,EAAA17D,SAAAy7D,EAAAt9D,SAAb,gBAAAw9D,EAAAC,GAAA,OAAAJ,EAAA96D,MAAAvC,KAAAwC,YAAA,IAnOc,QAmO1Cg5D,EAnO0CM,EAAAr6D,KAAA,WA6OvC+5D,EA7OuC,CAAAM,EAAAx6D,KAAA,gBAAAw6D,EAAAl6D,OAAA,UA8OnC,GA9OmC,WAkPvCma,EAAG6gD,YACN7gD,EAAG6gD,UAAYpB,EACXhB,IACF1D,EAAUz2D,EAAKJ,MAAMuB,SAASq1D,GAAUD,GAAS76C,IAI/C8zC,EAAwBrvD,EAAY4W,UAAU+wB,kBAAkB3hC,QAAQ8J,cAAco+C,QAAQ,IAAI,IAClGzD,EAAkBzqD,EAAYkE,KAAK8B,QAAQ8J,cAAco+C,QAAQ,IAAI,KACrE+M,EAA+BD,EAAmBrsB,KAAKrzB,OAAO,SAACC,GAAS,OAAOA,EAAGq9C,OAAOt2D,QAAQ,GAAKiZ,EAAGq9C,OAAOr9C,EAAGq9C,OAAOt2D,OAAO,GAAGwN,gBAA9B,4BAAA7L,OAA4EorD,IAA2B9zC,EAAGq9C,OAAOr9C,EAAGq9C,OAAOt2D,OAAO,GAAGwN,gBAA9B,4BAAA7L,OAA4EwmD,MAE7PnoD,OA7PU,CAAAg5D,EAAAx6D,KAAA,gBAAAw6D,EAAAl6D,OAAA,UA8PnC,GA9PmC,WAiQtC85D,EAA4BD,EAA6Bz3C,OAEzD23C,EAAct7D,EAAKJ,MAAMuiC,KAAKC,IAAIxd,IAAIy4C,UAAU,CACpD,CACEvS,aAAc,UACdx+C,KAAM,SACNvD,KAAM,YAERsyD,EAA0BxvD,KAAKwvD,EAA0BtC,UAEtCuC,EAAYgC,OA3QW,CAAA7B,EAAAx6D,KAAA,gBAAAw6D,EAAAl6D,OAAA,UA4QnC,GA5QmC,eA+QtCg6D,EAAiBD,EAAYgC,OAC7B9B,EAAsBx7D,EAAKgD,iBAAiBu4D,EAAep7D,EAAY8C,UAC7Ew3D,EAAO1sD,MAAQytD,EAAoB9lD,WAjRS+lD,EAAAl6D,OAAA,6BAAAk6D,EAAAl6D,OAAA,sBAuRhDk5D,EAAO7kD,WAAaA,EACpB6kD,EAAOp3D,MAAQ2J,EACfytD,EAAOtoC,YAAcnlB,EACrBytD,EAAO/tC,WAAa9W,EAAW5Q,MAAMhF,EAAKqB,MAAMo5D,EAAO1sD,QAGvDke,EAAasJ,GAAUklC,EAIlB/+C,EAAG++C,SACN/+C,EAAG++C,OAASA,EACZhE,EAAUz2D,EAAKJ,MAAMuB,SAASq1D,GAAUD,GAAS76C,GAnSH,0BAAA+/C,EAAAj6D,SAAA04D,EAAAv6D,SAA5C,gBAAA49D,EAAAC,GAAA,OAAAvD,EAAA/3D,MAAAvC,KAAAwC,YAAA,IA7B8B,wBAAA63D,EAAAx4D,SAAAu4D,EAAAp6D,SAAhC,gBAAA89D,GAAA,OAAA3D,EAAA53D,MAAAvC,KAAAwC,YAAA,IAfW,cAqVbs0D,GACFz2D,EAAK22D,yBAAyBF,GAtVfoD,EAAAt4D,OAAA,SAyVV0qB,GAzVU,wBAAA4tC,EAAAr4D,SAAAk4D,EAAA/5D,SAvqCD,gBAAA+9D,GAAA,OAAAjE,EAAAv3D,MAAAvC,KAAAwC,YAAA,GAAAxC,KAkgDlBszD,kBAAoB,SAAChjB,GAA8B,IAArB0tB,EAAqBx7D,UAAAM,OAAA,QAAAC,IAAAP,UAAA,IAAAA,UAAA,GAAT0J,EAAS1J,UAAAM,OAAA,EAAAN,UAAA,QAAAO,EAC3Cwa,EAAMygD,GAAgB1tB,EACxB2tB,EAAiB,GAMrB,GAJI/5B,cAAgBA,aAAaC,QAAQ,oBACvC85B,EAAiBr+C,KAAKwkB,MAAMF,aAAaC,QAAQ,oBAG/CD,aAAc,CAChB,IAAM1qB,EAAYzN,UAAS,IAAIgN,MAAOI,UAAU,KAKhD,OAJA8kD,EAAe1gD,GAAO,CACpBrR,OACAsN,aAEKnZ,EAAKgkC,gBAAgB,iBAAiBzkB,KAAKC,UAAUo+C,IAE9D,OAAO,GAlhDSj+D,KAohDlBkzD,iBAAmB,SAAC5iB,GAAyB,IAAhB0tB,EAAgBx7D,UAAAM,OAAA,QAAAC,IAAAP,UAAA,IAAAA,UAAA,GACrC+a,EAAMygD,GAAgB1tB,EACxB2tB,EAAiB,GAErB,OAAI/5B,cAAgBA,aAAaC,QAAQ,oBACvC85B,EAAiBr+C,KAAKwkB,MAAMF,aAAaC,QAAQ,qBAE3B85B,EAAe1gD,GAC5B0gD,EAAe1gD,GAAKrR,KAGxB,MA/hDSlM,KAiiDlB6mB,YAjiDkB,eAAAq3C,EAAAt+D,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAiiDJ,SAAAm9D,EAAM7tB,GAAN,IAAA8tB,EAAAC,EAAAnyD,EAAAoyD,EAAA97D,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAo9D,GAAA,cAAAA,EAAAl9D,KAAAk9D,EAAAj9D,MAAA,cAAe88D,EAAfE,EAAAx7D,OAAA,QAAAC,IAAAu7D,EAAA,IAAAA,EAAA,GAAoCD,EAApCC,EAAAx7D,OAAA,QAAAC,IAAAu7D,EAAA,GAAAA,EAAA,GAA2C,KAA3CC,EAAAj9D,KAAA,EACOuhC,IACJC,IAAIwN,EAAS+tB,GACbG,MAAM,SAAA97B,GACyB,oBAAnB07B,GACTA,EAAe17B,KALrB,cACNx2B,EADMqyD,EAAA98D,KAAA88D,EAAA38D,OAAA,SAQLsK,GARK,wBAAAqyD,EAAA18D,SAAAs8D,EAAAn+D,SAjiDI,gBAAAy+D,GAAA,OAAAP,EAAA37D,MAAAvC,KAAAwC,YAAA,GAAAxC,KA2iDlBozD,kBA3iDkB,eAAAsL,EAAA9+D,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA2iDE,SAAA29D,EAAOruB,GAAP,IAAA2E,EAAA2pB,EAAAZ,EAAAzgD,EAAA/D,EAAAykD,EAAA/xD,EAAA2yD,EAAAr8D,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAA29D,GAAA,cAAAA,EAAAz9D,KAAAy9D,EAAAx9D,MAAA,UAAgB2zC,EAAhB4pB,EAAA/7D,OAAA,QAAAC,IAAA87D,EAAA,GAAAA,EAAA,GAAoB,EAAED,EAAtBC,EAAA/7D,OAAA,QAAAC,IAAA87D,EAAA,IAAAA,EAAA,GAAwCb,EAAxCa,EAAA/7D,OAAA,QAAAC,IAAA87D,EAAA,IAAAA,EAAA,GACZthD,EAAMygD,GAAgB1tB,EACtB92B,EAAYzN,UAAS,IAAIgN,MAAOI,UAAU,KAC5C8kD,EAAiB,IAEjB/5B,eAAgBA,aAAaC,QAAQ,kBALvB,CAAA26B,EAAAx9D,KAAA,eAMhB28D,EAAiBr+C,KAAKwkB,MAAMF,aAAaC,QAAQ,qBAE3B85B,EAAe1gD,IAAQ0gD,EAAe1gD,GAAK/D,WAAaA,EAAUykD,EAAe1gD,GAAK/D,UAAUy7B,GARtG,CAAA6pB,EAAAx9D,KAAA,gBAAAw9D,EAAAl9D,OAAA,SASNq8D,EAAe1gD,GAAKrR,MAAQ0yD,EAAcX,EAAe1gD,GAAKrR,KAAKA,KAAO+xD,EAAe1gD,GAAKrR,MATxF,eAAA4yD,EAAAx9D,KAAA,GAaCuhC,IACEC,IAAIwN,GACJkuB,MAAM,SAAA97B,GACL4rB,QAAQ3sB,MAAM,2BAhBlB,eAaZz1B,EAbY4yD,EAAAr9D,KAkBdyiC,eACF+5B,EAAe1gD,GAAO,CACpBrR,OACAsN,aAEFnZ,EAAKgkC,gBAAgB,iBAAiBzkB,KAAKC,UAAUo+C,KAvBrCa,EAAAl9D,OAAA,SAyBVsK,GAAQ0yD,EAAc1yD,EAAKA,KAAOA,GAzBxB,yBAAA4yD,EAAAj9D,SAAA88D,EAAA3+D,SA3iDF,gBAAA++D,GAAA,OAAAL,EAAAn8D,MAAAvC,KAAAwC,YAAA,GAAAxC,KAskDlB4nC,oBAAsB,SAAAjG,GACpB,IAAIv5B,EAAS,QACb,GAAI2D,SAAS41B,EAAMq9B,MAAM,CACvB,IAAMC,EAAYlzD,SAAS41B,EAAMq9B,MACjC,OAAQC,GACN,KAAK,KACH72D,EAAS,SACX,MACA,QACEA,EAAM,SAAA3D,OAAYw6D,SAGbt9B,EAAMvlB,UACfhU,EAASu5B,EAAMvlB,QAAQ2H,MAAM,MAAM,IAGrC,OAAO3b,GAtlDSpI,KAwlDlBgjB,iBAAmB,WACjB,OAAOrS,IAzlDS3Q,KA2lDlBk/D,aAAe,SAAC3sB,EAAK4sB,GACnB,GAAI5sB,EAAKzvC,OAAO,EAAE,CAChB,IAAMs8D,EAAO7sB,EAAK8sB,QAClB,IAAK9sB,EAAKzvC,OACR,OAAOq8D,EAAMC,GAAQD,EAAMC,GAAQ,KAC9B,GAAID,EAAMC,GACf,OAAO/+D,EAAK6+D,aAAa3sB,EAAK4sB,EAAMC,IAGxC,OAAO,MApmDSp/D,KAsmDlBY,gBAAkB,SAAC2xC,GAAuB,IAAlB+sB,EAAkB98D,UAAAM,OAAA,QAAAC,IAAAP,UAAA,IAAAA,UAAA,GAExC,GADA88D,EAAUA,GAAoB3uD,GAC1B4hC,EAAKzvC,OAAO,EAAE,CAChB,IAAMs8D,EAAO7sB,EAAK8sB,QAClB,IAAK9sB,EAAKzvC,OACR,OAAOw8D,EAAQF,GAAQE,EAAQF,GAAQ,KAClC,GAAIE,EAAQF,GACjB,OAAO/+D,EAAKO,gBAAgB2xC,EAAK+sB,EAAQF,IAG7C,OAAO,MAhnDSp/D,KAknDlBu/D,eAAiB,WACf,OAAO70D,OAAOu0C,SAASC,OAAO5uC,cAAcskB,SAASjkB,GAAc09B,QAAQ/9B,gBAnnD3DtQ,KAqnDlBwjB,yBArnDkB,eAAAg8C,EAAA5/D,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAqnDS,SAAAy+D,EAAO/3B,GAAP,IAAAzlC,EAAAy9D,EAAAzuB,EAAA0uB,EAAAC,EAAAC,EAAAr9D,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAA2+D,GAAA,cAAAA,EAAAz+D,KAAAy+D,EAAAx+D,MAAA,UAAiBW,EAAjB49D,EAAA/8D,OAAA,QAAAC,IAAA88D,EAAA,GAAAA,EAAA,GAA0B,KAE7CH,EAAmB/uD,GAAc+tB,UAAUC,OAAOC,OAClDqS,EAAeyuB,EAAiBzuB,aAChC0uB,EAAWj1D,OAAOu0C,SAASC,OAAO5uC,cAAcskB,SAASjkB,GAAc09B,QAAQ/9B,gBAEjFovD,EAAiBl7D,UAAWkG,OAAOq1D,KAAQ9uB,IAAgB0uB,EANtC,CAAAG,EAAAx+D,KAAA,eASnBo+D,EAAiB1uB,uBAE2B,IAA1CrgC,GAAcosC,QAAQK,iBAClBwiB,EAAiBjvD,GAAcosC,QAAQC,kBAAkBrsC,GAAcosC,QAAQK,iBACrF1V,EAAUjkB,eAAV,IAAAhf,OAA+Bm7D,IAEtB3uB,IAAiB0uB,IAC1Bj4B,EAAUjkB,eAAiB,UAhBRq8C,EAAAx+D,KAAA,EAoBhB,IAAIqD,QAAJ,eAAAq7D,EAAApgE,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAa,SAAAi/D,EAAO59B,EAASC,GAAhB,OAAAvhC,EAAAtB,EAAA0B,KAAA,SAAA++D,GAAA,cAAAA,EAAA7+D,KAAA6+D,EAAA5+D,MAAA,OAClBomC,EAAUy4B,YAAc,WACtB99B,GAAQ,IAEVqF,EAAU04B,gBAAkB,WAC1B99B,KAGF53B,OAAOq1D,GAAG,OAAQ,QAASr4B,GART,wBAAAw4B,EAAAr+D,SAAAo+D,EAAAjgE,SAAb,gBAAAqgE,EAAAC,GAAA,OAAAN,EAAAz9D,MAAAvC,KAAAwC,YAAA,IApBgB,OA+BC,oBAAbP,GACTA,IAhCqB,aAoCD,oBAAbA,GACTA,IArCuB69D,EAAAl+D,OAAA,UAwClB,GAxCkB,yBAAAk+D,EAAAj+D,SAAA49D,EAAAz/D,SArnDT,gBAAAugE,GAAA,OAAAf,EAAAj9D,MAAAvC,KAAAwC,YAAA,GAAAxC,KA+pDlBwgE,eA/pDkB,eAAAC,EAAA7gE,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA+pDD,SAAA0/D,EAAO/zD,EAAMnG,EAASye,GAAtB,IAAAk3B,EAAA,OAAAp7C,EAAAtB,EAAA0B,KAAA,SAAAw/D,GAAA,cAAAA,EAAAt/D,KAAAs/D,EAAAr/D,MAAA,cAAAq/D,EAAAt/D,KAAA,EAEP86C,EAAW,IAAI97C,EAAKJ,MAAMuiC,KAAKC,IAAIm+B,SAAS37C,EAAKze,GAF1Cm6D,EAAA/+D,OAAA,SAGN,CAAC+K,OAAMwvC,aAHD,OAAAwkB,EAAAt/D,KAAA,EAAAs/D,EAAA17D,GAAA07D,EAAA,SAKbtgE,EAAK6tD,eAAe,6BAA6BvhD,EAAKnG,EAAtDm6D,EAAA17D,IALa,cAAA07D,EAAA/+D,OAAA,SAOR,MAPQ,wBAAA++D,EAAA9+D,SAAA6+D,EAAA1gE,KAAA,YA/pDC,gBAAA6gE,EAAAC,EAAAC,GAAA,OAAAN,EAAAl+D,MAAAvC,KAAAwC,YAAA,GAAAxC,KAwqDlBghE,kBAAoB,WAClB,OAAO3gE,EAAK42D,cAAc,kBAAiB,EAAM,OAzqDjCj3D,KA2qDlBihE,qBAAuB,SAACC,EAAStiB,GAU/B,OATKsiB,EAAS16D,SAAWnG,EAAKJ,MAAMuB,UAClC0/D,EAAS16D,QAAUnG,EAAKJ,MAAMuB,SAE3B0/D,EAASvjC,WACZujC,EAASvjC,SAAWt9B,EAAK2gE,qBAEG,qBAAnBE,EAASC,OAA0BD,EAASC,cAC9CD,EAASC,QAEbD,EAAS16D,aAGdo4C,EAAWA,IAAuBv+C,EAAKJ,MAAM2+C,SAAWv+C,EAAKJ,MAAM2+C,SAA+C,oBAA5Bv+C,EAAKJ,MAAMmhE,aAA8B/gE,EAAKJ,MAAMmhE,eAAiB,QAElJxiB,EAASyiB,aAAaH,KA1rDflhE,KA8rDlBshE,2BAA6B,SAACC,GAC5B,OAAOA,EAAa,2BAA2BA,EAAa,MA/rD5CvhE,KAisDlBwhE,uBAAyB,SAACh7D,GACxB,OAAOA,EAAU,gCAAgCA,EAAU,MAlsD3CxG,KAosDlBqJ,YAAc,SAACkpB,GAA6D,IAArDkvC,EAAqDj/D,UAAAM,OAAA,QAAAC,IAAAP,UAAA,GAAAA,UAAA,GAAtC,EAAGia,EAAmCja,UAAAM,OAAA,QAAAC,IAAAP,UAAA,GAAAA,UAAA,GAAzB,IAAKk/D,EAAoBl/D,UAAAM,OAAA,QAAAC,IAAAP,UAAA,GAAAA,UAAA,GAAR,IAClE,IACEi/D,EAAe/oD,KAAKipD,IAAIF,GACxBA,EAAe9/D,MAAM8/D,GAAgB,EAAIA,EAEzC,IAAMG,EAAervC,EAAS,EAAI,IAAM,GAEpCpiB,EAAIpE,SAASwmB,EAAS7Z,KAAKipD,IAAIE,OAAOtvC,IAAW,GAAG/hB,QAAQixD,IAAe1rD,WAC3E+N,EAAK3T,EAAErN,OAAS,EAAKqN,EAAErN,OAAS,EAAI,EAExC,OAAO8+D,GAAgB99C,EAAI3T,EAAEma,OAAO,EAAGxG,GAAK49C,EAAY,IAAMvxD,EAAEma,OAAOxG,GAAG4qC,QAAQ,iBAAkB,KAAOgT,IAAcD,EAAehlD,EAAU/D,KAAKipD,IAAIpvC,EAASpiB,GAAGK,QAAQixD,GAAcvwC,MAAM,GAAK,IACxM,MAAOljB,GACP,OAAO,OAhtDOhO,KAmtDlBuZ,gBAntDkB,eAAAuoD,EAAAliE,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAmtDA,SAAA+gE,EAAOv7D,GAAP,IAAAuL,EAAAqC,EAAAkhC,EAAA0sB,EAAA1wB,EAAA2wB,EAAAC,EAAAr+D,EAAAsC,EAAAg8D,EAAAC,EAAAC,EAAA/xB,EAAA/G,EAAAzsB,EAAA1U,EAAA8D,EAAAo2D,EAAA9/D,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAohE,GAAA,cAAAA,EAAAlhE,KAAAkhE,EAAAjhE,MAAA,UAAeyQ,EAAfuwD,EAAAx/D,OAAA,QAAAC,IAAAu/D,EAAA,GAAAA,EAAA,GAAsB,KAAKluD,EAA3BkuD,EAAAx/D,OAAA,QAAAC,IAAAu/D,EAAA,GAAAA,EAAA,GAA0C,KAAKhtB,EAA/CgtB,EAAAx/D,OAAA,QAAAC,IAAAu/D,EAAA,GAAAA,EAAA,GAA4D,KAAKN,EAAjEM,EAAAx/D,OAAA,QAAAC,IAAAu/D,EAAA,IAAAA,EAAA,GAA2FhxB,EAA3FgxB,EAAAx/D,OAAA,QAAAC,IAAAu/D,EAAA,GAAAA,EAAA,GAAqG,KAAKL,EAA1GK,EAAAx/D,OAAA,QAAAC,IAAAu/D,EAAA,GAAAA,EAAA,GAAgH,KAAKJ,EAArHI,EAAAx/D,OAAA,QAAAC,IAAAu/D,EAAA,GAAAA,EAAA,GAA2H,KAC/F,IAAxC3xD,GAAcosC,QAAQK,iBAAwBzsC,GAAcC,MAAMpM,QADtD,CAAA+9D,EAAAjhE,KAAA,eAAAihE,EAAA3gE,OAAA,SAEP,IAFO,UAMViC,EANU,gBAAAY,OAMsB+B,EANtB,KAAA/B,OAMiCsN,EANjC,KAAAtN,OAM2C6sC,EAN3C,KAAA7sC,OAMwDw9D,EANxD,KAAAx9D,OAMiEy9D,GAG9D,QAFf/7D,EAAa9F,EAAKkG,cAAc1C,IAPpB,CAAA0+D,EAAAjhE,KAAA,eAWR6gE,EAAqBh8D,EAAW2V,OAAQ,SAAA0yC,GAAC,OAA0B,OAAnBA,EAAEp6C,gBAA0BA,GAAkBo6C,EAAEp6C,gBAAgBA,KAAsC,OAAjBo6C,EAAElZ,cAAwBA,GAAgBkZ,EAAElZ,cAAcA,OAE3K6sB,EAAmBr/D,OAAO,GAbtC,CAAAy/D,EAAAjhE,KAAA,cAcN8gE,EAAeD,EAAmBn+C,MAAM9X,MAdlC,CAAAq2D,EAAAjhE,KAAA,gBAAAihE,EAAA3gE,OAAA,SAgBHwgE,EAAatmD,OAAQ,SAAAhO,GAAC,QAAOsG,GAAkBtG,EAAE0L,WAAWpF,MAAqBkhC,GAAgBxnC,EAAE0L,WAAW87B,MAhB3G,eAAAitB,EAAA3gE,OAAA,SAkBL,MAlBK,QAAA2gE,EAAAjhE,KAAA,iBAsBd6E,EAAa,GAtBC,eAyBVk8D,EAAU1xD,GAAcC,MAAM0hC,MAChChC,EA1BY,GAAA7rC,OA0BE49D,EAAQ/xB,UA1BV7rC,OA0BqB+B,IAEjC4N,GAAkBkhC,GAA2B,OAAXvjC,GAAiC,OAAdu/B,KACjD/H,EAAS,GAEXn1B,GAAkBrI,SAASqI,KACzB4tD,EACFz4B,EAAO94B,KAAP,SAAAhM,OAAqB2P,KAEf0I,EAAQ1I,EAAgB,OAC9Bm1B,EAAO94B,KAAP,SAAAhM,OAAqBqY,MAIrBw4B,GAAgBvpC,SAASupC,IAC3B/L,EAAO94B,KAAP,OAAAhM,OAAmB6wC,IAGN,OAAXvjC,GACFw3B,EAAO94B,KAAP,UAAAhM,OAAsBsN,IAGN,OAAdu/B,GAAsBvlC,SAASulC,IACjC/H,EAAO94B,KAAP,aAAAhM,OAAyB6sC,IAGb,OAAV2wB,GACF14B,EAAO94B,KAAP,SAAAhM,OAAqBw9D,IAGT,OAAVC,GAAkBn2D,SAASm2D,IAC7B34B,EAAO94B,KAAP,SAAAhM,OAAqBy9D,IAGnB34B,EAAOzmC,SACTwtC,GAAY,IAAI/G,EAAOz4B,KAAK,OA7DhByxD,EAAAjhE,KAAA,GAiEGjB,EAAKwmB,YAAYypB,GAjEpB,WAiEZloC,EAjEYm6D,EAAA9gE,KAAA,CAAA8gE,EAAAjhE,KAAA,gBAAAihE,EAAA3gE,OAAA,SAmEP,IAnEO,eAsEZsK,EAAO9D,EAAO8D,KACH,OAAX6F,IACF7F,EAAOA,EAAK4P,OAAQ,SAAAhO,GAAC,OAAMA,EAAEiE,SAAWA,KAG1C5L,EAAWsK,KAAK,CACdvE,OACA6F,SACAujC,eACAlhC,mBAGF/T,EAAKkF,cAAc1B,EAAcsC,GAlFjBo8D,EAAA3gE,OAAA,SAoFTsK,GApFS,yBAAAq2D,EAAA1gE,SAAAkgE,EAAA/hE,SAntDA,gBAAAwiE,GAAA,OAAAV,EAAAv/D,MAAAvC,KAAAwC,YAAA,GAAAxC,KAyyDlB2oC,iBAzyDkB,eAAA85B,EAAA7iE,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAyyDC,SAAA0hE,EAAOnU,GAAP,OAAAxtD,EAAAtB,EAAA0B,KAAA,SAAAwhE,GAAA,cAAAA,EAAAthE,KAAAshE,EAAArhE,MAAA,cACjBitD,EAAeA,GAA8BluD,EAAKJ,MAAMoN,cADvCs1D,EAAArhE,KAAA,EAEJjB,EAAK2C,oBAAoBurD,EAAa,YAFlC,cAAAoU,EAAA/gE,OAAA,SAAA+gE,EAAAlhE,MAAA,wBAAAkhE,EAAA9gE,SAAA6gE,EAAA1iE,SAzyDD,gBAAA4iE,GAAA,OAAAH,EAAAlgE,MAAAvC,KAAAwC,YAAA,GAAAxC,KA6yDlBkI,UAAY,SAAC26D,EAAKC,EAAYz6D,GAC5B,GAAIw6D,GAAQC,GAAez6D,EAAgB,CACzC,IAAI4vB,EAASr4B,OAAOwH,KAAKy7D,GAAME,OAAO,SAACC,EAAY3yD,GACjD,IAAM4yD,EAAa5iE,EAAKqB,MAAMohE,EAAYzyD,IACpC6yD,EAAM7iE,EAAKqB,MAAMmhE,EAAKxyD,IAC5B,OAAOhQ,EAAKqB,MAAMshE,GAAal7D,KAAKm7D,EAAW59D,MAAM69D,KACrD,GAEF,GAAIjrC,EACF,OAAO53B,EAAKqB,MAAMu2B,GAAQ3yB,IAAI+C,GAGlC,OAAO,MAzzDSrI,KA2zDlBsZ,oBAAsB,SAACg4B,GAAyB,IAAf6xB,EAAe3gE,UAAAM,OAAA,QAAAC,IAAAP,UAAA,GAAAA,UAAA,GAAN,EAMxC,MAL0B,CACxB4gE,KAAK,KACLC,IAAI,MACJC,KAAK,QAEkBhyB,GAAW6xB,GAj0DpBnjE,KAm0DlBujE,yBAA2B,SAACC,GAC1B,OAAOnjE,EAAKJ,MAAMO,YAAYyP,UAAUyH,KAAK,SAAA82C,GAAC,OAAIA,EAAEhoD,QAAQ8J,gBAAkBkzD,EAAKlzD,iBAp0DnEtQ,KAs0DlBkqC,aAAe,SAAA97B,GACb,OAAO/N,EAAKqB,MAAM0M,GAAO87B,aAAa0jB,IAAU6V,aAAajzD,WAv0D7CxQ,KAy0DlB0jE,uBAAyB,SAAA11C,GACvB,OAAO3tB,EAAKqB,MAAL,KAAA+C,OAAgBupB,KA10DPhuB,KA40DlBwnC,qBAAuB,SAAC1xB,EAAakY,KAA6BxrB,UAAAM,OAAA,QAAAC,IAAAP,UAAA,KAAAA,UAAA,OAC1DmhE,EAA0BtjE,EAAKqjE,uBAAuB11C,GAC5D,OAAO3tB,EAAKqB,MAAMoU,GAAczQ,MAAMs+D,GAAyBz5B,aAAa0jB,IAAU6V,aAAajzD,WA90DnFxQ,KAg1DlBqD,iBAAmB,SAACyS,EAAakY,EAAc41C,GAC7C,IAAMD,EAA0BtjE,EAAKqjE,uBAAuB11C,GACxD9sB,EAAUb,EAAKqB,MAAMoU,GAAcxQ,IAAIq+D,GAI3C,OAHIC,IAAiBA,EAAajiE,UAChCT,EAAUA,EAAQmE,MAAMu+D,IAEnB1iE,GAt1DSlB,KAw1DlB6jE,oBAx1DkBjkE,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAw1DI,SAAA8iE,IAAA,IAAAvV,EAAAwV,EAAAC,EAAAxhE,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAA8iE,GAAA,cAAAA,EAAA5iE,KAAA4iE,EAAA3iE,MAAA,cACpBitD,GAD2BA,EAAPyV,EAAAlhE,OAAA,QAAAC,IAAAihE,EAAA,GAAAA,EAAA,GAAoB,OACK3jE,EAAKJ,MAAMO,YAAYkE,KAAKhB,MADrDugE,EAAA3iE,KAAA,EAESjB,EAAK2C,oBAAoBurD,EAAc,SAAU,GAAI,IAAIiQ,MAAM,SAAA97B,GAC1FriC,EAAK6tD,eAAe,yBAA0BxrB,KAH5B,cAEdqhC,EAFcE,EAAAxiE,KAAAwiE,EAAAriE,OAAA,SAMbmiE,GANa,wBAAAE,EAAApiE,SAAAiiE,EAAA9jE,SAx1DJA,KAg2DlBi3D,cAAgB,SAAC15C,GAA4C,IAAxC2mD,IAAwC1hE,UAAAM,OAAA,QAAAC,IAAAP,UAAA,KAAAA,UAAA,GAAxB2hE,EAAwB3hE,UAAAM,OAAA,QAAAC,IAAAP,UAAA,GAAAA,UAAA,GAAT,KAC9C4F,EAAS+7D,EACb,GAAIz5D,OAAOw5B,aAAa,CACtB,IAAMhV,EAAOgV,aAAaC,QAAQ5mB,GAC9B2R,IACF9mB,EAAS8mB,EACLg1C,IACF97D,EAASwX,KAAKwkB,MAAMlV,KAI1B,OAAK9mB,GACI+7D,GA52DOnkE,KAg3DlBokE,gBAAkB,WAAoB,IAAnBC,EAAmB7hE,UAAAM,OAAA,QAAAC,IAAAP,UAAA,GAAAA,UAAA,GAAP,GAC7B,GAAIkI,OAAOw5B,aAAa,CAEtB,IAAKmgC,IAAgBA,EAAYvhE,OAC/B,OAAO4H,OAAOw5B,aAAaogC,QAI7B,IADA,IAAMC,EAAqB,GAClBp0D,EAAE,EAAEA,EAAEzF,OAAOw5B,aAAaphC,OAAOqN,IAAI,CAC5C,IAAMq0D,EAAY95D,OAAOw5B,aAAa3mB,IAAIpN,GACrCk0D,EAAYzvC,SAAS4vC,IACxBD,EAAmB9zD,KAAK+zD,GAG5BD,EAAmBz6D,QAAQ,SAAC06D,GAC1BnkE,EAAKokE,iBAAiBD,OA/3DVxkE,KAm4DlBykE,iBAAmB,SAAClnD,GAClB,QAAI7S,OAAOw5B,eACTx5B,OAAOw5B,aAAawgC,WAAWnnD,IACxB,IAt4DOvd,KA04DlBqkC,gBAAkB,SAAC9mB,EAAInP,GAA0B,IAApByR,EAAoBrd,UAAAM,OAAA,QAAAC,IAAAP,UAAA,IAAAA,UAAA,GAC/C,GAAIkI,OAAOw5B,aACT,IAGE,OAFA91B,EAAQyR,EAAYD,KAAKC,UAAUzR,GAASA,EAC5C1D,OAAOw5B,aAAaygC,QAAQpnD,EAAInP,IACzB,EACP,MAAOuzB,GAEPj3B,OAAOw5B,aAAawgC,WAAWnnD,GAGnC,OAAO,GAr5DSvd,KAu5DlB4kE,eAv5DkB,eAAAC,EAAAjlE,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAu5DD,SAAA8jE,EAAOtkE,GAAP,IAAAukE,EAAAC,EAAAC,EAAAC,EAAAr2C,EAAAs2C,EAAAC,EAAA3R,EAAA4R,EAAAC,EAAAC,EAAArhE,EAAAgJ,EAAA,OAAAnM,EAAAtB,EAAA0B,KAAA,SAAAqkE,GAAA,cAAAA,EAAAnkE,KAAAmkE,EAAAlkE,MAAA,WAEVd,GAAeH,EAAKJ,MAAMO,cAC7BA,EAAcH,EAAKJ,MAAMO,aAGtBmQ,GAAcwrC,SAASxb,QAAQkc,UAAUr4C,SAAYhE,EAN3C,CAAAglE,EAAAlkE,KAAA,eAAAkkE,EAAA5jE,OAAA,UAON,GAPM,cAAA4jE,EAAAlkE,KAAA,EAUUjB,EAAK2C,oBAAoBxC,EAAYkE,KAAKhB,MAAO,cAV3D,UAUTqhE,EAVSS,EAAA/jE,KAAA,CAAA+jE,EAAAlkE,KAAA,eAAAkkE,EAAA5jE,OAAA,UAaN,GAbM,cAAA4jE,EAAAlkE,KAAA,GAgBsBjB,EAAKmgE,eAAe,yBAAyBuE,EAAWp0D,GAAcwrC,SAASxb,QAAQkc,UAAU53B,KAhBvH,YAgBT+/C,EAhBSQ,EAAA/jE,OAmBiBujE,EAAuB7oB,SAnBxC,CAAAqpB,EAAAlkE,KAAA,gBAAAkkE,EAAA5jE,OAAA,UAoBN,GApBM,QA2Bf,IAHMqjE,EAAsB,GACtBC,EAA0B,GAzBjBr2C,EAAA,SA2BNs2C,GACP,IAAMM,EAAoB,IAAI9gE,QAAJ,eAAA+gE,EAAA9lE,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAa,SAAA2kE,EAAOtjC,EAASC,GAAhB,IAAA2gC,EAAA,OAAAliE,EAAAtB,EAAA0B,KAAA,SAAAykE,GAAA,cAAAA,EAAAvkE,KAAAukE,EAAAtkE,MAAA,cAAAskE,EAAAvkE,KAAA,EAAAukE,EAAAtkE,KAAA,EAEV0jE,EAAuB7oB,SAASxb,QAAQklC,YAAYV,GAAeW,OAFzD,OAE7B7C,EAF6B2C,EAAAnkE,KAGnC4gC,EAAQ,CACN4gC,aACAkC,kBALiCS,EAAAtkE,KAAA,gBAAAskE,EAAAvkE,KAAA,EAAAukE,EAAA3gE,GAAA2gE,EAAA,SAQnCvjC,EAAQ,MAR2B,yBAAAujC,EAAA/jE,SAAA8jE,EAAA3lE,KAAA,YAAb,gBAAA+lE,EAAAC,GAAA,OAAAN,EAAAnjE,MAAAvC,KAAAwC,YAAA,IAW1ByiE,EAAoBx0D,KAAKg1D,GAEzB,IAAMQ,EAAwB,IAAIthE,QAAJ,eAAAuhE,EAAAtmE,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAa,SAAAmlE,EAAO9jC,EAASC,GAAhB,IAAAjyB,EAAA,OAAAtP,EAAAtB,EAAA0B,KAAA,SAAAilE,GAAA,cAAAA,EAAA/kE,KAAA+kE,EAAA9kE,MAAA,cAAA8kE,EAAA/kE,KAAA,EAAA+kE,EAAA9kE,KAAA,EAEZjB,EAAK2C,oBAAoBxC,EAAYkE,KAAKhB,MAAO,qBAAsB,CAACyhE,IAF5D,OAEjC90D,EAFiC+1D,EAAA3kE,KAGvC4gC,EAAQ,CACNhyB,eACA80D,kBALqCiB,EAAA9kE,KAAA,gBAAA8kE,EAAA/kE,KAAA,EAAA+kE,EAAAnhE,GAAAmhE,EAAA,SAQvC/jC,EAAQ,MAR+B,yBAAA+jC,EAAAvkE,SAAAskE,EAAAnmE,KAAA,YAAb,gBAAAqmE,EAAAC,GAAA,OAAAJ,EAAA3jE,MAAAvC,KAAAwC,YAAA,IAW9B0iE,EAAwBz0D,KAAKw1D,IAzBtBd,EAAc,EAAEA,EAAc3kE,EAAYyP,UAAUnN,OAAOqiE,IAAgBt2C,EAA3Es2C,GA3BM,OAuDXC,EAAkB,KAClB3R,EAAqB,KAxDV+R,EAAAnkE,KAAA,GAAAmkE,EAAAlkE,KAAA,GA2DWqD,QAAQC,IAAIqgE,GA3DvB,eA2DbG,EA3DaI,EAAA/jE,KAAA+jE,EAAAlkE,KAAA,GA4DcqD,QAAQC,IAAIsgE,GA5D1B,QA4DbzR,EA5Da+R,EAAA/jE,KAAA+jE,EAAAlkE,KAAA,iBAAAkkE,EAAAnkE,KAAA,GAAAmkE,EAAAvgE,GAAAugE,EAAA,qBAiEfJ,EAAkBA,GAAmBA,EAAgBtiE,OAASsiE,EAAgBtpD,OAAO,SAAAxN,GAAC,OAAW,OAANA,IAAe,MAC1GmlD,EAAqBA,GAAsBA,EAAmB3wD,OAAS2wD,EAAmB33C,OAAO,SAAAxN,GAAC,OAAW,OAANA,IAAe,OAEzFmlD,EAAmB3wD,QAAasiE,GAAoBA,EAAgBtiE,OApElF,CAAA0iE,EAAAlkE,KAAA,gBAAAkkE,EAAA5jE,OAAA,UAqEN,GArEM,eAyEXyjE,EAAqBhlE,EAAKqB,MAAM,GAC9B4jE,EAA0B7R,EAAmBsP,OAAO,SAACwD,EAAYC,GACrE,GAAIA,EAAmBn2D,aAAa,CAClC,IAAMo2D,EAAiBrB,EAAgB1tD,KAAK,SAAApJ,GAAO,OAAOA,EAAE62D,gBAAkBqB,EAAmBrB,gBACjG,GAAIsB,EAAe,CACjB,IAAMxD,EAAa5iE,EAAKqB,MAAM+kE,EAAexD,YAC7CsD,EAAYC,EAAmBn2D,aAAaC,eAAiB2yD,EAC7DoC,EAAqBA,EAAmBv9D,KAAKm7D,IAGjD,OAAOsD,GACP,IAGEhB,GAAkB,EAvFPC,EAAAlkE,KAAA,GAyFejB,EAAKyE,mBAAmBtE,GAzFvC,eAyFT0D,EAzFSshE,EAAA/jE,KA4FyB,kBAFlCyL,EAA2BhJ,EAAkBA,EAAgBgJ,yBAA2B,OAG5FtN,OAAOwH,KAAK8F,GAA0BpD,QAAQ,SAACuG,GAG7C,IAAMq2D,EAAqBx5D,EAAyBmD,GAC9Cs2D,EAAyBn7D,WAAWk7D,GAAoBl2D,QAAQ,GAGhEo2D,EAAwBtB,EAAwBj1D,EAAaC,eAAiBg1D,EAAwBj1D,EAAaC,eAAiBjQ,EAAKqB,MAAM,GAKjJilE,KAJ8BC,EAAwBp7D,WAAWo7D,EAAsBthE,IAAI+/D,IAAqB70D,QAAQ,GAAKnQ,EAAKqB,MAAM,MAK1I6jE,GAAkB,KA1GTC,EAAA5jE,OAAA,SA+GR2jE,GA/GQ,yBAAAC,EAAA3jE,SAAAijE,EAAA9kE,KAAA,cAv5DC,gBAAA6mE,GAAA,OAAAhC,EAAAtiE,MAAAvC,KAAAwC,YAAA,GAAAxC,KAwgElBmW,eAxgEkB,eAAA2wD,EAAAlnE,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAwgED,SAAA+lE,EAAOvmE,EAAYgB,GAAnB,IAAA2kC,EAAAE,EAAAG,EAAAn0B,EAAA60B,EAAA7vB,EAAA8wB,EAAA,OAAApnC,EAAAtB,EAAA0B,KAAA,SAAA6lE,GAAA,cAAAA,EAAA3lE,KAAA2lE,EAAA1lE,MAAA,UAEVd,GAAgBgB,EAFN,CAAAwlE,EAAA1lE,KAAA,eAAA0lE,EAAAplE,OAAA,UAGN,GAHM,UAMXukC,GAAmB,EACnBE,EAAqB,KACrBG,EAA2B,KAE3Bn0B,EAA8B,MAG9B7R,EAAY4W,YAAa5W,EAAY4W,UAAU5S,QAbpC,CAAAwiE,EAAA1lE,KAAA,YAcP4lC,EAAkB1mC,EAAY4W,UAAUC,YAAY1K,KACpD0K,EAAchX,EAAK2kB,kBAAkBkiB,GACrCiB,EAAoB9nC,EAAK2kB,kBAAkBxkB,EAAY4W,UAAU+wB,kBAAkBx7B,OAIrF0K,IAAe8wB,EApBN,CAAA6+B,EAAA1lE,KAAA,gBAAA0lE,EAAA1lE,KAAA,GAsBsBjB,EAAKsoC,iBAAiBzB,GAtB5C,eAsBXV,EAtBWwgC,EAAAvlE,KAAAulE,EAAA1lE,KAAA,GAgCgBjB,EAAKuoC,mBAAmB1B,EAAgB1lC,GAhCxD,SAgCX6kC,EAhCW2gC,EAAAvlE,QAmCT4Q,EAA8BhS,EAAKgD,iBAAiBgjC,EAAmBG,GAEvEL,EAAmB9lC,EAAKqB,MAAM2kC,GAAoB3vB,GAAG,IArC5C,eAAAswD,EAAAplE,OAAA,SA6CR,CACLukC,mBACAE,qBACAG,2BACAn0B,gCAjDa,yBAAA20D,EAAAnlE,SAAAklE,EAAA/mE,SAxgEC,gBAAAinE,EAAAC,GAAA,OAAAJ,EAAAvkE,MAAAvC,KAAAwC,YAAA,GAAAxC,KA6jElBq8D,uBA7jEkB,eAAA8K,EAAAvnE,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA6jEO,SAAAomE,EAAOjrB,EAAUgM,EAAakf,EAAkBplE,EAAUqlE,GAA1D,IAAAC,EAAArkC,EAAA,OAAAniC,EAAAtB,EAAA0B,KAAA,SAAAqmE,GAAA,cAAAA,EAAAnmE,KAAAmmE,EAAAlmE,MAAA,cAAAkmE,EAAAnmE,KAAA,EAAAmmE,EAAAlmE,KAAA,EASEjB,EAAKJ,MAAMuiC,KAAKC,IAAIglC,cATtB,OASfvkC,EATeskC,EAAA/lE,MAWV8lE,EAAAprB,EAASxb,SACjB07B,uBADQ95D,MAAAglE,EAAA,CACepf,GADf1jD,OAAA7E,OAAAkhC,EAAA,EAAAlhC,CAC+BynE,KACvClqE,KAAK,CACJuS,KAAMy4C,EACNjlB,aAIDjY,GAAG,kBAAmB,SAAS0B,GAChC3sB,KAAKuiC,UAAL,yCAAA99B,OAAwDkoB,IACxD26C,MACCI,KAAK,eAAgB,SAASC,EAAoBC,GACnD5nE,KAAKuiC,UAAU,iCAAiCqlC,GAChDN,EAAiBM,KAxBEJ,EAAAlmE,KAAA,gBAAAkmE,EAAAnmE,KAAA,EAAAmmE,EAAAviE,GAAAuiE,EAAA,SA2BrBnnE,EAAKkiC,UAALilC,EAAAviE,IACAhD,EAAS,KAADulE,EAAAviE,IA5Ba,yBAAAuiE,EAAA3lE,SAAAulE,EAAApnE,KAAA,YA7jEP,gBAAA6nE,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAd,EAAA5kE,MAAAvC,KAAAwC,YAAA,GAAAxC,KA6lElBkoE,0BAA4B,SAAAC,GAC1B,IAAK9nE,EAAKJ,MAAMuiC,KAAK4qB,MAAMgb,YAAYD,GACrC,MAAM,IAAIE,MACR,gBAAgB5jE,OAAO0jE,EAAW,iCAGtC,IAAIlT,EAAIkT,EAAUj3C,MAAM,EAAG,IACvBy8B,EAAI,KAAKlpD,OAAO0jE,EAAUj3C,MAAM,GAAI,MACpC5iB,EAAI,KAAK7J,OAAO0jE,EAAUj3C,MAAM,IAAK,MAGzC,OAFA5iB,EAAIjO,EAAKJ,MAAMuiC,KAAK4qB,MAAMkb,YAAYh6D,GACjC,CAAC,GAAI,IAAIsmB,SAAStmB,KAAIA,GAAK,IACzB,CACL2mD,EAAGA,EACHtH,EAAGA,EACHr/C,EAAGA,IA3mEWtO,KA+mElBuoE,gCAAkC,SAACC,EAAOhe,EAASxgB,EAAmBihB,GACpE,OAAO8B,GAAc0b,aACnB,CAAC,UAAU,UAAU,UAAU,SAC/B,CAACD,EAAOvd,EAAiBT,EAASke,mBAAS1+B,MAlnE7BhqC,KAsnElB8oC,oBAtnEkB,eAAA6/B,EAAA/oE,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAsnEI,SAAA4nE,EAAOzgB,GAAP,IAAA0gB,EAAAC,EAAA,OAAA/nE,EAAAtB,EAAA0B,KAAA,SAAA4nE,GAAA,cAAAA,EAAA1nE,KAAA0nE,EAAAznE,MAAA,cACdunE,EAAexoE,EAAKO,gBAAgB,CAAC,UAAU,YAAY,aAD7CmoE,EAAAznE,KAAA,EAEFjB,EAAKwmB,YAAL,GAAApiB,OAAoBokE,EAAaprB,UAAUI,OAA3C,iBAAAp5C,OAAiE0jD,EAAjE,WAAA1jD,OAAsFokE,EAAat/B,OAAO4U,OAAQ,KAAK,CACvI6qB,QAAQ,CACNC,YAAYJ,EAAat/B,OAAOwU,UAJhB,YAEd+qB,EAFcC,EAAAtnE,QAQTqnE,EAAI58D,KARK,CAAA68D,EAAAznE,KAAA,eAAAynE,EAAAnnE,OAAA,SASXknE,EAAI58D,MATO,cAAA68D,EAAAnnE,OAAA,SAYb,MAZa,wBAAAmnE,EAAAlnE,SAAA+mE,EAAA5oE,SAtnEJ,gBAAAkpE,GAAA,OAAAP,EAAApmE,MAAAvC,KAAAwC,YAAA,GAAAxC,KAqoElBqqC,+BAroEkB,eAAA8+B,EAAAvpE,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAqoEe,SAAAooE,EAAO7a,EAAavkB,EAAkB/nC,EAASqlE,GAA/C,IAAAnrB,EAAAgM,EAAAqgB,EAAAhe,EAAA6e,EAAAlB,EAAAmB,EAAArU,EAAAtH,EAAAr/C,EAAA,OAAAvN,EAAAtB,EAAA0B,KAAA,SAAAooE,GAAA,cAAAA,EAAAloE,KAAAkoE,EAAAjoE,MAAA,UACzB66C,EAAW97C,EAAK2kB,kBAAkBupC,GADT,CAAAgb,EAAAjoE,KAAA,eAI7BW,EAAS,KAAK,sBAJesnE,EAAA3nE,OAAA,UAKtB,GALsB,cAAA2nE,EAAAloE,KAAA,EAUvB8mD,EAAc9nD,EAAKJ,MAAMuB,QAVF+nE,EAAAjoE,KAAA,EAWT66C,EAASxb,QAAQ6oC,SAASrhB,GAAa2d,OAX9B,cAWvB0C,EAXuBe,EAAA9nE,KAYvB+oD,EAAUnqD,EAAKO,gBAAgB,CAAC,UAAU,oBAC1CyoE,EAAgBhpE,EAAKkoE,gCAAgCC,EAAOhe,EAASxgB,EAAmBmS,EAASstB,UAb1EF,EAAAjoE,KAAA,GAeLjB,EAAKJ,MAAMuiC,KAAKC,IAAIinC,SAASC,KACnD,KAAON,EAActzD,SAAS,OAC9BoyC,GAjB2B,eAevBggB,EAfuBoB,EAAA9nE,KAAA6nE,EAoBTjpE,EAAK6nE,0BAA0BC,GAA3ClT,EApBqBqU,EAoBrBrU,EAAGtH,EApBkB2b,EAoBlB3b,EAAGr/C,EApBeg7D,EAoBfh7D,EAIdjO,EAAK+B,0BAA0BmsD,EAAc,yBAA0B,CAACpG,EAAane,EAAmBirB,EAAGtH,EAAGr/C,GAAIrM,EAAUqlE,GAxB/FiC,EAAA3nE,OAAA,UA0BtB,GA1BsB,eAAA2nE,EAAAloE,KAAA,GAAAkoE,EAAAtkE,GAAAskE,EAAA,SA4B7Bjb,QAAQ3sB,MAAR4nC,EAAAtkE,IACAhD,EAAS,KAADsnE,EAAAtkE,IA7BqBskE,EAAA3nE,OAAA,UA8BtB,GA9BsB,yBAAA2nE,EAAA1nE,SAAAunE,EAAAppE,KAAA,aAroEf,gBAAA4pE,EAAAC,EAAAC,EAAAC,GAAA,OAAAZ,EAAA5mE,MAAAvC,KAAAwC,YAAA,GAAAxC,KAuqElBgqE,eAvqEkB,eAAAC,EAAArqE,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAuqED,SAAAkpE,EAAO3b,EAAatD,EAAgBjhB,EAAkB/nC,EAASqlE,GAA/D,IAAA6C,EAAAC,EAAA5f,EAAA6f,EAAAluB,EAAAgM,EAAAqgB,EAAApsD,EAAAkuD,EAAA,OAAAvpE,EAAAtB,EAAA0B,KAAA,SAAAopE,GAAA,cAAAA,EAAAlpE,KAAAkpE,EAAAjpE,MAAA,cAET6oE,EAAe,CACnB,CAAEx9D,KAAM,OAAQvD,KAAM,UACtB,CAAEuD,KAAM,UAAWvD,KAAM,UACzB,CAAEuD,KAAM,UAAWvD,KAAM,WACzB,CAAEuD,KAAM,oBAAqBvD,KAAM,YAG/BghE,EAAkB,CACtB,CAAEz9D,KAAM,QAASvD,KAAM,WACvB,CAAEuD,KAAM,OAAQvD,KAAM,WACtB,CAAEuD,KAAM,oBAAqBvD,KAAM,UAZtBmhE,EAAAjpE,KAAA,EAeOjB,EAAKJ,MAAMuiC,KAAKC,IAAI+nC,aAf3B,UAeThgB,EAfS+f,EAAA9oE,KAiBT4oE,EAAa,CACjB7f,UACApc,QAAS,IACTzhC,KAAM4hD,EACNkc,kBAAmBxf,GAGf9O,EAAW97C,EAAK2kB,kBAAkBupC,GAxBzB,CAAAgc,EAAAjpE,KAAA,gBA2BbW,EAAS,KAAK,sBA3BDsoE,EAAA3oE,OAAA,UA4BN,GA5BM,eA+BXumD,EAAc9nD,EAAKJ,MAAMuB,QA/Bd+oE,EAAAjpE,KAAA,GAgCG66C,EAASxb,QAAQ6oC,SAASrhB,GAAa2d,OAhC1C,QAgCX0C,EAhCW+B,EAAA9oE,MAiCX2a,EAAU,IACNosD,MAAQA,EAChBpsD,EAAQ1M,KAAOy4C,EACf/rC,EAAQ4tB,kBAAoBA,EAEtBsgC,EAAa1qD,KAAKC,UAAU,CAChC6qD,MAAO,CACLP,eACAC,mBAEFO,OAAQN,EACRO,YAAa,kBACbxuD,YAKF/b,EAAKJ,MAAMuiC,KAAKqoC,gBAAgB1tE,KAC9B,CACE2tE,QAAS,MACTp6D,GAAI,aACJhB,KAAMy4C,EACNvnB,OAAQ,uBACR2I,OAAQ,CAAC4e,EAAamiB,IAExB,SAAC3oC,EAAOopC,GACN,GAAIppC,GAAUopC,GAAYA,EAASppC,MACjC,OAAO1/B,EAAS,KAAK0/B,GAChB,GAAIopC,GAAYA,EAAS5X,OAAQ,CACtC,IAAMkU,EAAmBhnE,EAAK6nE,0BAA0B6C,EAAS5X,QACzD8B,EAAYoS,EAAZpS,EAAGtH,EAAS0Z,EAAT1Z,EAAGr/C,EAAM+4D,EAAN/4D,EAEdjO,EAAK+B,0BAA0BmsD,EAAc,yBAA0B,CAACpG,EAAane,EAAmBirB,EAAGtH,EAAGr/C,GAAIrM,EAAUqlE,MAjEnH,yBAAAiD,EAAA1oE,SAAAqoE,EAAAlqE,SAvqEC,gBAAAgrE,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAnB,EAAA1nE,MAAAvC,KAAAwC,YAAA,GAAAxC,KA8uElBooC,mBA9uEkB,eAAAijC,EAAAzrE,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA8uEG,SAAAsqE,EAAO/c,EAAagd,EAAaC,GAAjC,IAAAp9D,EAAAq9D,EAAA,OAAA1qE,EAAAtB,EAAA0B,KAAA,SAAAuqE,GAAA,cAAAA,EAAArqE,KAAAqqE,EAAApqE,MAAA,cACb8M,EAAQ/N,EAAKJ,MAAMuiC,KAAK4qB,MAAMK,MAAM,IAAI,SAD3Bie,EAAApqE,KAAA,EAEKjB,EAAKsrE,aAAapd,EAAagd,EAAaC,GAFjD,cAEbC,EAFaC,EAAAjqE,KAAAiqE,EAAA9pE,OAAA,SAGZ6pE,GAAaprE,EAAKqB,MAAM+pE,GAAW/0D,GAAGrW,EAAKqB,MAAM0M,EAAM2H,cAH3C,wBAAA21D,EAAA7pE,SAAAypE,EAAAtrE,SA9uEH,gBAAA4rE,EAAAC,EAAAC,GAAA,OAAAT,EAAA9oE,MAAAvC,KAAAwC,YAAA,GAAAxC,KAmvElB2rE,aAnvEkB,eAAAI,EAAAnsE,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAmvEH,SAAAgrE,EAAOzd,EAAagd,EAAaC,GAAjC,OAAAzqE,EAAAtB,EAAA0B,KAAA,SAAA8qE,GAAA,cAAAA,EAAA5qE,KAAA4qE,EAAA3qE,MAAA,UACRitD,GAAiBgd,GAAiBC,EAD1B,CAAAS,EAAA3qE,KAAA,eAAA2qE,EAAArqE,OAAA,UAEJ,GAFI,cAIbvB,EAAKkiC,UAAU,eAAegsB,EAAagd,EAAaC,GAJ3CS,EAAA3qE,KAAA,EAKAjB,EAAK2C,oBAChBurD,EAAc,YAAa,CAACid,EAAYD,IAN7B,cAAAU,EAAArqE,OAAA,SAAAqqE,EAAAxqE,MAAA,wBAAAwqE,EAAApqE,SAAAmqE,EAAAhsE,SAnvEG,gBAAAksE,EAAAC,EAAAC,GAAA,OAAAL,EAAAxpE,MAAAvC,KAAAwC,YAAA,GAAAxC,KA4vElBoC,0BAA4B,SAACmsD,EAAa8d,EAAW9iC,EAAOtnC,EAASqlE,EAAiBgF,GACpFjsE,EAAKJ,MAAMmC,0BAA0BmsD,EAAc8d,EAAY9iC,EAAQ,KAAM,SAACxtB,GACpD,oBAAb9Z,GACTA,EAAS8Z,IAEV,SAACA,GAC8B,oBAArBurD,GACTA,EAAiBvrD,IAElB,KAAMuwD,IArwEOtsE,KAuwElBqpC,YAAc,SAACklB,EAAa/nD,EAAQvE,EAASqlE,GAG3CjnE,EAAKJ,MAAMmC,0BAA0BmsD,EAAc,UAAW,CAC5D/nD,EACAnG,EAAKJ,MAAMuiC,KAAK4qB,MAAMmf,iBAAiB,OACvC,KAAK,SAACxwD,GACkB,oBAAb9Z,GACTA,EAAS8Z,IAEV,SAACA,GAC8B,oBAArBurD,GACTA,EAAiBvrD,MAnxEL/b,KAuxElB6V,eAvxEkB,eAAA22D,EAAA5sE,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAuxED,SAAAyrE,EAAOC,EAAMhpE,EAAMlD,EAAYgB,GAA/B,IAAA0Q,EAAAy6D,EAAAvkE,EAAA+J,EAAAy6D,EAAAC,EAAAC,EAAAC,EAAAC,EAAAj1D,EAAAk1D,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAx6D,EAAAE,EAAAV,EAAAD,EAAAk7D,EAAAC,EAAAC,EAAAC,EAAAC,EAAA/b,EAAArkC,EAAAvpB,EAAA4pE,EAAA7gB,EAAA1sD,EAAA8c,EAAAjX,EAAA2nE,EAAAC,EAAAC,EAAArkD,EAAAskD,EAAAC,EAAAC,EAAAz2C,EAAA02C,EAAAC,EAAAC,EAAAC,GAAAC,GAAAv3D,GAAAw3D,GAAAp3C,GAAAq3C,GAAAxqE,GAAA2R,GAAAQ,GAAAs4D,GAAAC,GAAAC,GAAAv7D,GAAAZ,GAAAD,GAAAq8D,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAA34D,GAAA44D,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAv5D,GAAAw5D,GAAAC,GAAAttE,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAA4uE,GAAA,cAAAA,EAAA1uE,KAAA0uE,EAAAzuE,MAAA,OAAuC4Q,IAAvC49D,GAAAhtE,OAAA,QAAAC,IAAA+sE,GAAA,KAAAA,GAAA,GAAyDnD,EAAzDmD,GAAAhtE,OAAA,QAAAC,IAAA+sE,GAAA,IAAAA,GAAA,GAEX1nE,EAAS,KACP+J,EAAY9R,EAAKO,gBAAgB,CAAC,cAGlCgsE,EAAevsE,EAAKO,gBAAgB,CAAC,aAAaP,EAAKJ,MAAMgH,mBAC/DiL,GAAgB06D,GAAqD,qBAA9BA,EAAa16D,eACtDA,EAAe06D,EAAa16D,cAI1B26D,EAA0B,KAC1BxsE,EAAKJ,MAAMgH,kBAAoB5G,EAAKJ,MAAMoN,eACtCy/D,EAAiBzsE,EAAKJ,MAAMiH,oBAAoB7G,EAAKJ,MAAMgH,kBAAkB5G,EAAKJ,MAAMoN,mBAE5Fw/D,EAA0B,IACFC,EAAeppE,OAASopE,GAExCltE,OAAOwH,KAAK+K,GAAWyiB,SAASlxB,MAC1CmpE,EAA0B,IACFnpE,GAASlD,GArBpBuvE,EAAA9qE,GAwBPynE,EAxBOqD,EAAAzuE,KAyBR,oBAzBQyuE,EAAA9qE,GAAA,GA4CR,sBA5CQ8qE,EAAA9qE,GAAA,GAuDR,aAvDQ8qE,EAAA9qE,GAAA,GA0DR,qBA1DQ8qE,EAAA9qE,GAAA,GA6DR,2BA7DQ8qE,EAAA9qE,GAAA,GAiER,kCAjEQ8qE,EAAA9qE,GAAA,GAyFR,iBAzFQ8qE,EAAA9qE,GAAA,GAmGR,qBAnGQ8qE,EAAA9qE,GAAA,GA0GR,SA1GQ8qE,EAAA9qE,GAAA,GAoHR,0BApHQ8qE,EAAA9qE,GAAA,GAuIR,qBAvIQ8qE,EAAA9qE,GAAA,GAuKR,sBAvKQ8qE,EAAA9qE,GAAA,IA2LR,QA3LQ8qE,EAAA9qE,GAAA,IA4MR,QA5MQ8qE,EAAA9qE,GAAA,IA4NR,WA5NQ8qE,EAAA9qE,GAAA,IAsOR,qBAtOQ8qE,EAAA9qE,GAAA,IA4OR,eA5OQ8qE,EAAA9qE,GAAA,IAmPR,eAnPQ8qE,EAAA9qE,GAAA,IAmQR,QAnQQ8qE,EAAA9qE,GAAA,IAsQR,iBAtQQ8qE,EAAA9qE,GAAA,IAoRR,qBApRQ8qE,EAAA9qE,GAAA,IA0RR,6BA1RQ8qE,EAAA9qE,GAAA,IA+SR,sBA/SQ8qE,EAAA9qE,GAAA,IAyUR,kBAzUQ8qE,EAAA9qE,GAAA,IAyVR,aAzVQ8qE,EAAA9qE,GAAA,6BAAA8qE,EAAAzuE,KAAA,GA8BDqD,QAAQC,IAAI,CACpBvE,EAAKmwD,sBACLnwD,EAAKixD,oBAAoB,GAAG9vD,GAC5BnB,EAAK2vE,qBAAqBxuE,GAAQ,KAjCzB,eAAAurE,EAAAgD,EAAAtuE,KAAAurE,EAAAptE,OAAAmF,EAAA,EAAAnF,CAAAmtE,EAAA,GA2BTh1D,EA3BSi1D,EAAA,GA4BTC,EA5BSD,EAAA,GA6BTE,EA7BSF,EAAA,GAoCPC,GAAoBC,IACtB9kE,EAAS/H,EAAKqB,MAAMwrE,GAAmB7nE,MAAM4nE,GACzCl1D,IACF3P,EAASA,EAAOgT,MAAMhT,EAAO/C,MAAM0S,MAvC5Bg4D,EAAAnuE,OAAA,4BAAAmuE,EAAAzuE,KAAA,GA6C2CqD,QAAQC,IAAI,CAChEvE,EAAKwV,eAAe,kBAAkBnS,EAAMlD,EAAYgB,GACxDnB,EAAKwV,eAAe,yBAAyBnS,EAAMlD,EAAYgB,KA/CtD,eAAA2rE,EAAA4C,EAAAtuE,KAAA2rE,EAAAxtE,OAAAmF,EAAA,EAAAnF,CAAAutE,EAAA,GA6CNE,EA7CMD,EAAA,GA6CWE,EA7CXF,EAAA,GAkDPC,GAAoBC,GAA0BD,EAAiB32D,GAAG,IAAM42D,EAAuB52D,GAAG,KACpGtO,EAASklE,EAAuBhoE,IAAI+nE,GAAkBjyD,MAAM,GAAG/V,MAAM,MAnD5D0qE,EAAAnuE,OAAA,4BAAAmuE,EAAAzuE,KAAA,GAwDIjB,EAAKoW,cAxDT,eAwDXrO,EAxDW2nE,EAAAtuE,KAAAsuE,EAAAnuE,OAAA,4BAAAmuE,EAAAzuE,KAAA,GA2DIjB,EAAKmwD,sBA3DT,eA2DXpoD,EA3DW2nE,EAAAtuE,KAAAsuE,EAAAnuE,OAAA,4BAAAmuE,EAAAzuE,KAAA,GA8DIjB,EAAK4vE,6BAA6BzuE,GA9DtC,eA8DX4G,EA9DW2nE,EAAAtuE,KAAAsuE,EAAAnuE,OAAA,4BAAAmuE,EAAAzuE,KAAA,GAsEDqD,QAAQC,IAAI,CACpBvE,EAAKwV,eAAe,WAAWnS,EAAMlD,EAAYgB,GACjDnB,EAAKwV,eAAe,kBAAkBnS,EAAMlD,EAAYgB,GACxDnB,EAAKwV,eAAe,yBAAyBnS,EAAMlD,EAAYgB,KAzEtD,eAAA+rE,EAAAwC,EAAAtuE,KAAA+rE,EAAA5tE,OAAAmF,EAAA,EAAAnF,CAAA2tE,EAAA,GAmETv6D,EAnESw6D,EAAA,GAoETt6D,EApESs6D,EAAA,GAqETh7D,EArESg7D,EAAA,GA4EPj7D,EAA4B,KAE5BC,GAA+BQ,GAAYE,IACvCu6D,EAAiBv6D,EAAgB7N,MAAM2N,EAAS1N,IAAI,MAC1DiN,EAA4BC,EAA4B1K,KAAK2lE,IAI/DrlE,EAAS,CACPmK,4BACAC,+BAtFSu9D,EAAAnuE,OAAA,4BAAAmuE,EAAAzuE,KAAA,GA0FkCqD,QAAQC,IAAI,CACvDvE,EAAKwV,eAAe,aAAanS,EAAMlD,EAAYgB,GACnDnB,EAAKwV,eAAe,oBAAoBnS,EAAMlD,EAAYgB,KA5FjD,eAAAksE,EAAAqC,EAAAtuE,KAAAksE,EAAA/tE,OAAAmF,EAAA,EAAAnF,CAAA8tE,EAAA,GA0FNE,EA1FMD,EAAA,GA0FME,EA1FNF,EAAA,GA+FPC,GAAeC,GAAsBD,EAAYl3D,GAAG,KACtDtO,EAASylE,EAAmBvoE,IAAIsoE,GAAaxyD,MAAM,GAAG/V,MAAM,MAhGnD0qE,EAAAnuE,OAAA,4BAAAmuE,EAAAzuE,KAAA,GAoGoBjB,EAAKwV,eAAe,mBAAmBnS,EAAMlD,EAAYgB,GApG7E,eAoGLswD,EApGKie,EAAAtuE,QAsGHgsB,EAAgB1hB,UAAS,IAAIgN,MAAOI,UAAU,KACpD/Q,GAAUqlB,EAAcqkC,GAAkB,OAvGjCie,EAAAnuE,OAAA,yBA2GPhC,OAAOwH,KAAK+K,GAAWyiB,SAASlxB,GA3GzB,CAAAqsE,EAAAzuE,KAAA,gBAAAyuE,EAAAzuE,KAAA,GA4GMjB,EAAK6vE,gBAAgBxsE,EAAOmpE,GA5GlC,QA4GTzkE,EA5GS2nE,EAAAtuE,KAAAsuE,EAAAzuE,KAAA,wBAAAyuE,EAAAzuE,KAAA,GA8GqBjB,EAAKyE,mBAAmBtE,GAAY,EAAM0R,GA9G/D,SA8GHhO,EA9GG6rE,EAAAtuE,OA+GcyC,EAAgBkB,4BACrCgD,EAASlE,EAAgBkB,2BAhHlB,eAAA2qE,EAAAnuE,OAAA,qBAAAmuE,EAAA73D,GAqHHxU,EArHGqsE,EAAAzuE,KAsHJ,SAtHIyuE,EAAA73D,GAAA,GAyHJ,SAzHI63D,EAAA73D,GAAA,2BAAA63D,EAAAzuE,KAAA,GAuHQjB,EAAK8vE,wBAAwB3uE,EAAQqrE,GAvH7C,eAuHPzkE,EAvHO2nE,EAAAtuE,KAAAsuE,EAAAnuE,OAAA,2BA0HDqrD,EAAe5sD,EAAK+vE,kBA1HnBL,EAAAzuE,KAAA,GA2HQ2rD,EAAavmD,oBAAoBlF,EAAQqrE,GA3HjD,eA2HPzkE,EA3HO2nE,EAAAtuE,KAAAsuE,EAAAnuE,OAAA,2BAAAmuE,EAAAnuE,OAAA,2BAgIPwG,IAAW/H,EAAKqB,MAAM0G,GAAQzG,UAChCyG,EAAS/H,EAAKqB,MAAM0G,GAAQ9C,IAAI,SAE9B8C,EAAS/H,EAAK2H,qBAAqBI,EAAO5H,EAAYyH,wBAnI/C8nE,EAAAnuE,OAAA,4BAwILqrD,EAAe5sD,EAAK+vE,kBACpB7vE,EAAYF,EAAKO,gBAAgB,CAAC,aAAa,QAAQ,cACvDyc,EAAiBhd,EAAKO,gBAAgB,CAAC,YAAYL,IA1I9CwvE,EAAAzuE,KAAA,GA2II2rD,EAAavnD,SAASlF,EAAYkE,KAAK8B,SA3I3C,aA2IX4B,EA3IW2nE,EAAAtuE,MAAA,CAAAsuE,EAAAzuE,KAAA,UA+IT8G,EAAS/H,EAAKgD,iBAAiB+E,EAAOiV,EAAe/Z,UAE/C8C,EAAgB/F,EAAKqB,MAAMrB,EAAKO,gBAAgB,CAAC,UAAU,mBAjJxDmvE,EAAAzW,GAkJDj8C,EAAepV,sBAlJd8nE,EAAAzuE,KAmJF,QAnJEyuE,EAAAzW,GAAA,IAuJF,SAvJEyW,EAAAzW,GAAA,IA2JF,UA3JEyW,EAAAzW,GAAA,IA+JF,SA/JEyW,EAAAzW,GAAA,8BAoJCyU,EAAe3nE,EAAcd,IAAI,YACvC8C,EAASA,EAAO/C,MAAM0oE,GArJjBgC,EAAAnuE,OAAA,6BAwJCosE,EAAgB5nE,EAAcd,IAAI,SACxC8C,EAASA,EAAO/C,MAAM2oE,GAzJjB+B,EAAAnuE,OAAA,6BA4JCqsE,EAAiB7nE,EAAcd,IAAI,IACzC8C,EAASA,EAAO/C,MAAM4oE,GA7JjB8B,EAAAnuE,OAAA,6BAgKLwG,EAASA,EAAO/C,MAAMe,GAhKjB2pE,EAAAnuE,OAAA,6BAAAmuE,EAAAnuE,OAAA,6BAAAmuE,EAAAnuE,OAAA,sBAwKLgoB,EAAsBijD,EAAwBxsE,EAAKJ,MAAMoN,eAxKpD0iE,EAAAM,GAyKH3sE,EAzKGqsE,EAAAzuE,KA0KJ,SA1KIyuE,EAAAM,GAAA,IAgLJ,SAhLIN,EAAAM,GAAA,4BA2KDnC,EAAatkD,EAAoB3Z,UAAUyH,KAAM,SAAA3N,GAAC,MAAgB,aAAXA,EAAE4C,QA3KxD,CAAAojE,EAAAzuE,KAAA,iBAAAyuE,EAAAzuE,KAAA,IA6KUjB,EAAKiwE,aAAapC,EAAW1nE,SA7KvC,SA6KL4B,EA7KK2nE,EAAAtuE,KAAA,gBAAAsuE,EAAAnuE,OAAA,6BAiLDqrD,EAAe5sD,EAAK+vE,kBAjLnBL,EAAAzuE,KAAA,IAkLQ2rD,EAAavnD,SAASkkB,EAAoBllB,KAAK8B,SAlLvD,gBAkLP4B,EAlLO2nE,EAAAtuE,KAAAsuE,EAAAnuE,OAAA,6BAAAmuE,EAAAnuE,OAAA,6BAuLPwG,IAAW/H,EAAKqB,MAAM0G,GAAQzG,UAChCyG,EAAS/H,EAAKqB,MAAM0G,GAAQ9C,IAAI,OAxLvByqE,EAAAnuE,OAAA,sBAAAmuE,EAAAQ,GA4LH7sE,EA5LGqsE,EAAAzuE,KA6LJ,SA7LIyuE,EAAAQ,GAAA,IAgMJ,SAhMIR,EAAAQ,GAAA,8BAAAR,EAAAzuE,KAAA,IA8LQjB,EAAKmwE,cAAc3D,GA9L3B,gBA8LPzkE,EA9LO2nE,EAAAtuE,KAAAsuE,EAAAnuE,OAAA,6BAiMDqrD,EAAe5sD,EAAK+vE,kBAjMnBL,EAAAzuE,KAAA,IAkMQ2rD,EAAa/kD,UAAU2kE,GAlM/B,gBAkMPzkE,EAlMO2nE,EAAAtuE,KAAAsuE,EAAAnuE,OAAA,6BAAAmuE,EAAAzuE,KAAA,IAqMiBjB,EAAK23B,aAAax3B,GAAY,EAAM0R,GArMrD,gBAqMDylB,EArMCo4C,EAAAtuE,OAsM+B,OAArBk2B,EAAUM,SACzB7vB,EAASuvB,EAAUM,QAvMd83C,EAAAnuE,OAAA,6BAAAmuE,EAAAnuE,OAAA,6BAAAmuE,EAAAzuE,KAAA,IA6MajB,EAAK23B,aAAax3B,GAAY,EAAM0R,GA7MjD,cA6MLm8D,EA7MK0B,EAAAtuE,OAiN2B,OAArB4sE,EAAUn2C,OAjNhB,CAAA63C,EAAAzuE,KAAA,aAkNT8G,EAASimE,EAAUn2C,QAEfy0C,EApNK,CAAAoD,EAAAzuE,KAAA,iBAAAyuE,EAAAzuE,KAAA,IAqNgBjB,EAAKoW,cArNrB,UAqND63D,EArNCyB,EAAAtuE,QAuNL2G,EAASA,EAAON,KAAKwmE,IAvNhB,gBAAAyB,EAAAnuE,OAAA,6BAAAmuE,EAAAzuE,KAAA,IA6NmCqD,QAAQC,IAAI,CACxDvE,EAAKwV,eAAe,mBAAmBnS,EAAMlD,EAAYgB,GACzDnB,EAAKwV,eAAe,eAAenS,EAAMlD,EAAYgB,KA/N5C,gBAAA+sE,EAAAwB,EAAAtuE,KAAA+sE,GAAA5uE,OAAAmF,EAAA,EAAAnF,CAAA2uE,EAAA,GA6NJE,GA7NID,GAAA,GA6Nat3D,GA7Nbs3D,GAAA,GAkOPC,IAAoBv3D,KACtB9O,EAAS8O,GAAa7R,MAAM,KAAKC,IAAImpE,KAnO5BsB,EAAAnuE,OAAA,0BAuOeJ,EAvOf,CAAAuuE,EAAAzuE,KAAA,iBAAAyuE,EAAAzuE,KAAA,IAuO+BjB,EAAKsxD,oBAAoB,CAACjuD,GAAOlC,GAvOhE,SAAAuuE,EAAAU,GAAAV,EAAAtuE,KAAAsuE,EAAAzuE,KAAA,mBAAAyuE,EAAAU,IAuO2E,EAvO3E,gBAuOL/B,GAvOKqB,EAAAU,KAwOc/B,GAAkBhrE,KACzC0E,EAASsmE,GAAkBhrE,IAzOlBqsE,EAAAnuE,OAAA,0BA8OSJ,EA9OT,CAAAuuE,EAAAzuE,KAAA,iBAAAyuE,EAAAzuE,KAAA,IA8OyBjB,EAAKg3B,cAAc,CAAC3zB,GAAOlC,GA9OpD,SAAAuuE,EAAAW,GAAAX,EAAAtuE,KAAAsuE,EAAAzuE,KAAA,mBAAAyuE,EAAAW,IA8O+D,EA9O/D,gBA8OLp5C,GA9OKy4C,EAAAW,KA+OQp5C,GAAY5zB,KAC7B0E,EAASkvB,GAAY5zB,IAhPZqsE,EAAAnuE,OAAA,0BAoPPhC,OAAOwH,KAAK+K,GAAWyiB,SAASlxB,GApPzB,CAAAqsE,EAAAzuE,KAAA,iBAqPH+b,GAAiBlL,EAAUzO,GAC3BS,GAAiB9D,EAAKO,gBAAgB,CAAC,QAAQ,SAAS,QAtPrDmvE,EAAA1uE,KAAA,IAAA0uE,EAAAzuE,KAAA,IAwPQjB,EAAK2E,yBAAyBb,GAAekZ,IAxPrD,SAwPPjV,EAxPO2nE,EAAAtuE,KAAAsuE,EAAAzuE,KAAA,mBAAAyuE,EAAA1uE,KAAA,IAAA0uE,EAAAY,GAAAZ,EAAA,oBA4PJ3nE,IAAU/H,EAAKqB,MAAM0G,GAAQzG,UAChCyG,EAAS,KA7PF2nE,EAAAzuE,KAAA,0BAAAyuE,EAAAzuE,KAAA,IAgQMjB,EAAK2C,oBAAoBxC,EAAYkE,KAAKhB,MAAO,cAhQvD,SAgQT0E,EAhQS2nE,EAAAtuE,KAAA,gBAAAsuE,EAAAnuE,OAAA,6BAAAmuE,EAAAzuE,KAAA,IAoQIjB,EAAKuwE,iBAAiBpwE,EAAYgB,GApQtC,gBAoQX4G,EApQW2nE,EAAAtuE,KAAAsuE,EAAAnuE,OAAA,0BAuQPhC,OAAOwH,KAAK+K,GAAWyiB,SAASlxB,GAvQzB,CAAAqsE,EAAAzuE,KAAA,iBAAAyuE,EAAAzuE,KAAA,IAwQMjB,EAAKkB,gBAAgBmC,EAAMlC,GAxQjC,UAwQT4G,EAxQS2nE,EAAAtuE,QAyQM2G,EAAOzG,UACpByG,EAAS,KA1QF2nE,EAAAzuE,KAAA,uBA6QUE,EA7QV,CAAAuuE,EAAAzuE,KAAA,iBAAAyuE,EAAAzuE,KAAA,IA6Q0BjB,EAAKkB,gBAAgBf,EAAYkD,MAAMlC,GA7QjE,SAAAuuE,EAAAc,GAAAd,EAAAtuE,KAAAsuE,EAAAzuE,KAAA,mBAAAyuE,EAAAc,IA6Q4E,EA7Q5E,UA6QL/6D,GA7QKi6D,EAAAc,MA8QY/6D,GAAanU,UAChCmU,GAAe,KAEjB1N,EAAS0N,GAjRA,gBAAAi6D,EAAAnuE,OAAA,0BAqRcJ,EArRd,CAAAuuE,EAAAzuE,KAAA,iBAAAyuE,EAAAzuE,KAAA,IAqR8BjB,EAAKkB,gBAAgBf,EAAYkE,KAAKhB,MAAMlC,GArR1E,SAAAuuE,EAAAe,GAAAf,EAAAtuE,KAAAsuE,EAAAzuE,KAAA,mBAAAyuE,EAAAe,IAqRqF,EArRrF,gBAqRLx6D,GArRKy5D,EAAAe,MAuRT1oE,EAASkO,IAvRAy5D,EAAAnuE,OAAA,6BAAAmuE,EAAAzuE,KAAA,IA2RgDqD,QAAQC,IAAI,CACrEvE,EAAKwV,eAAe,MAAMnS,EAAMlD,EAAYgB,GAC5CnB,EAAKwV,eAAe,aAAanS,EAAMlD,EAAYgB,GACnDnB,EAAKwV,eAAe,oBAAoBnS,EAAMlD,EAAYgB,KA9RjD,gBAAAotE,GAAAmB,EAAAtuE,KAAAotE,GAAAjvE,OAAAmF,EAAA,EAAAnF,CAAAgvE,GAAA,GA2RNE,GA3RMD,GAAA,GA2RIt7D,GA3RJs7D,GAAA,GA2RgBl8D,GA3RhBk8D,GAAA,GAiSPn8D,GAAuB,KAEvBC,IAA0Bm8D,IAAav7D,KACnCk6D,GAAiBl6D,GAAYlO,MAAMypE,GAAUxpE,IAAI,MACvDoN,GAAuBC,GAAuB7K,KAAK2lE,KAKrDrlE,EAAS,CACPsK,wBACAC,2BA5SSo9D,EAAAnuE,OAAA,0BAgTPhC,OAAOwH,KAAK+K,GAAWyiB,SAASlxB,GAhTzB,CAAAqsE,EAAAzuE,KAAA,iBAiTH+b,GAAiBlL,EAAUzO,GAjTxBqsE,EAAAzuE,KAAA,IAkTMjB,EAAK0wE,uBAAuB1zD,GAAe7b,EAAQqrE,GAlTzD,SAkTTzkE,EAlTS2nE,EAAAtuE,KAAAsuE,EAAAzuE,KAAA,0BAAAyuE,EAAAzuE,KAAA,IAoTwDqD,QAAQC,IAAI,CAC3EvE,EAAK2pB,kBAAkBxpB,GACvBH,EAAKwV,eAAe,mBAAmBnS,EAAMlD,EAAYgB,GACzDnB,EAAKk6B,6BAA6B/4B,EAAQqrE,EAAwBnpE,KAvT3D,SAAAurE,GAAAc,EAAAtuE,KAAAytE,GAAAtvE,OAAAmF,EAAA,EAAAnF,CAAAqvE,GAAA,GAoTJE,GApTID,GAAA,GAoTYE,GApTZF,GAAA,GAoT8BG,GApT9BH,GAAA,GA0TLE,IAAqBD,KACjBr5D,GAAes5D,GAAkB/pE,MAAM8pE,IAEzCx4D,GAAoBb,GAEpBu5D,KAAqBhvE,EAAKqB,MAAM2tE,IAAkB1tE,UACpDgV,GAAoBA,GAAkB7O,KAAKzH,EAAKqB,MAAM2tE,MAGxDjnE,EAASuO,IAnUF,gBAAAo5D,EAAAnuE,OAAA,6BAAAmuE,EAAAzuE,KAAA,IA0U4CqD,QAAQC,IAAI,CACjEvE,EAAKwV,eAAe,kBAAkBnS,EAAMlD,EAAYgB,GACxDnB,EAAKwV,eAAe,yBAAyBnS,EAAMlD,EAAYgB,KA5UtD,gBAAA+tE,GAAAQ,EAAAtuE,KAAA+tE,GAAA5vE,OAAAmF,EAAA,EAAAnF,CAAA2vE,GAAA,GA0UNE,GA1UMD,GAAA,GA0UWE,GA1UXF,GAAA,GA+UNC,KACHA,GAAmBpvE,EAAKqB,MAAM,IAG3BguE,KACHA,GAA0BrvE,EAAKqB,MAAM,IAGvC0G,EAASsnE,GAAwBt0D,MAAMq0D,IAvV5BM,EAAAnuE,OAAA,6BAAAmuE,EAAAzuE,KAAA,IA0ViCqD,QAAQC,IAAI,CACtDvE,EAAKwV,eAAe,aAAanS,EAAMlD,EAAYgB,GACnDnB,EAAKwV,eAAe,oBAAoBnS,EAAMlD,EAAYgB,KA5VjD,gBAAAmuE,GAAAI,EAAAtuE,KAAAmuE,GAAAhwE,OAAAmF,EAAA,EAAAnF,CAAA+vE,GAAA,GA0VNt5D,GA1VMu5D,GAAA,GA0VKC,GA1VLD,GAAA,GA+VNv5D,KACHA,GAAahW,EAAKqB,MAAM,IAErBmuE,KACHA,GAAqBxvE,EAAKqB,MAAM,KAGlC0G,EAASynE,GAAmBz0D,MAAM/E,KAEvByW,GAAGzsB,EAAKqB,MAAM,MACvB0G,EAAS/H,EAAKqB,MAAM,IAzWXquE,EAAAnuE,OAAA,6BAAAmuE,EAAAnuE,OAAA,6BAAAmuE,EAAAnuE,OAAA,SAgXRwG,GAhXQ,0BAAA2nE,EAAAluE,SAAA4qE,EAAAzsE,KAAA,gBAvxEC,gBAAAgxE,EAAAC,EAAAC,EAAAC,GAAA,OAAA3E,EAAAjqE,MAAAvC,KAAAwC,YAAA,GAAAxC,KAyoFlBgqB,kBAzoFkB,eAAAonD,EAAAxxE,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAyoFE,SAAAqwE,EAAO7wE,GAAP,IAAA+0B,EAAA/b,EAAA3V,EAAAsC,EAAA7C,EAAA2S,EAAAlE,EAAAqC,EAAAkhC,EAAAg8B,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAzvE,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAA+wE,GAAA,cAAAA,EAAA7wE,KAAA6wE,EAAA5wE,MAAA,UAAmBi0B,EAAnB08C,EAAAnvE,OAAA,QAAAC,IAAAkvE,EAAA,GAAAA,EAAA,GAA+B,SAASz4D,EAAxCy4D,EAAAnvE,OAAA,QAAAC,IAAAkvE,EAAA,IAAAA,EAAA,GAEZpuE,EAFY,kBAAAY,OAEsBjE,EAAYkE,KAAKhB,MAFvC,KAAAe,OAEgD8wB,GAC9C,WAAhBA,EAHc,CAAA28C,EAAA5wE,KAAA,WAKG,QADb6E,EAAa9F,EAAKkG,cAAc1C,KACVxD,EAAKqB,MAAMyE,GAAYxE,QALnC,CAAAuwE,EAAA5wE,KAAA,eAAA4wE,EAAAtwE,OAAA,SAMPuE,GANO,cAUd7C,EAAW9C,EAAY8C,SAVT4uE,EAAA5wE,KAAA,GAYKjB,EAAK2C,oBAAoBxC,EAAYkE,KAAKhB,MAAM,aAAa,GAAG,GAAG6xB,GAZxE,YAYdtf,EAZci8D,EAAAzwE,QAeC+X,EAfD,CAAA04D,EAAA5wE,KAAA,gBAgBVyQ,EAAyC,SAAhC1R,EAAKJ,MAAMgH,iBACpBmN,EAAiBrI,SAASyN,GAAY,KACtC87B,EAAevpC,SAASyN,GAAY,KAlB1B04D,EAAA5wE,KAAA,GAmBQjB,EAAKkZ,gBAAgB/Y,EAAYgG,QAAQuL,EAAOqC,EAAekhC,GAAa,GAnBpF,QAmBVg8B,EAnBUY,EAAAzwE,KAqBZ8vE,EAAc,CAChBrlE,KAAK,KACL2lE,SAAS,MAGPL,EAAa,CACftlE,KAAK,KACL2lE,SAAS,MAGXP,EAAUxnE,QAAS,SAAAgE,GACjB,IAAM+jE,EAAWn5D,KAAKipD,IAAI51D,SAAS+B,EAAE0L,WAAWzN,SAASyN,IACrDzN,SAAS+B,EAAE0L,WAAWzN,SAASyN,MAAgB+3D,EAAYM,UAAYA,EAASN,EAAYM,YAC9FN,EAAYM,SAAWA,EACvBN,EAAYrlE,KAAO4B,GAGjB/B,SAAS+B,EAAE0L,WAAWzN,SAASyN,KAAeg4D,EAAWK,WAC3DL,EAAWK,SAAWA,EACtBL,EAAWtlE,KAAO4B,KAKlByjE,EAAYrlE,MAAQslE,EAAWtlE,OAC3BulE,EAAmBpxE,EAAKqB,MAAM6vE,EAAYrlE,KAAKiP,WAC/Cu2D,EAAkBrxE,EAAKqB,MAAM8vE,EAAWtlE,KAAKiP,WAC7Cw2D,EAAatxE,EAAKqB,MAAM6vE,EAAYrlE,KAAKsN,WACzCo4D,EAAYvxE,EAAKqB,MAAM8vE,EAAWtlE,KAAKsN,WACvCq4D,EAAWD,EAAUx2D,MAAMu2D,GAC3BG,EAAYJ,EAAgBt2D,MAAMq2D,GAClCM,EAAoBD,EAAUxsE,IAAIusE,GAClCG,EAA0B3xE,EAAKqB,MAAM8X,GAAW4B,MAAMu2D,GAC5D17D,EAAaw7D,EAAiB3pE,KAAKiqE,EAAkB1sE,MAAM2sE,KAtD7C,eA2Dd/7D,IAAe5V,EAAKqB,MAAMuU,GAAYtU,UACxCsU,EAAa5V,EAAKgD,iBAAiB4S,EAAW3S,MAI3C2S,GAAc5V,EAAKqB,MAAMuU,GAAYtU,SAAWtB,EAAKqB,MAAMuU,GAAY6W,GAAG,MAC7E7W,EAAa5V,EAAKqB,MAAM,IAGN,WAAhB6zB,GACFl1B,EAAKkF,cAAc1B,EAAcoS,GArEjBi8D,EAAAtwE,OAAA,SA0EXqU,GA1EW,yBAAAi8D,EAAArwE,SAAAwvE,EAAArxE,SAzoFF,gBAAAmyE,GAAA,OAAAf,EAAA7uE,MAAAvC,KAAAwC,YAAA,GAAAxC,KAqtFlBoyE,gBAAkB,WAOhB,OANI/xE,EAAKJ,MAAMmyE,iBAAyD,oBAA/B/xE,EAAKJ,MAAMmyE,iBAElD/xE,EAAKJ,MAAMmyE,mBAIN,GA5tFSpyE,KAiuFlBuF,cAAgB,SAACgY,EAAIrR,GAAiB,IAAZ+oC,EAAYzyC,UAAAM,OAAA,QAAAC,IAAAP,UAAA,GAAAA,UAAA,GAAR,IAK5B,OAJInC,EAAKJ,MAAMsF,eAAqD,oBAA7BlF,EAAKJ,MAAMsF,eAEhDlF,EAAKJ,MAAMsF,cAAcgY,EAAIrR,EAAK+oC,GAE7B/oC,GAtuFSlM,KAwuFlBuG,cAAgB,SAACgX,GAA0B,IAAtByC,EAAsBxd,UAAAM,OAAA,QAAAC,IAAAP,UAAA,GAAAA,UAAA,GAAT,KAChC,GAAInC,EAAKJ,MAAMkG,YAAc9F,EAAKJ,MAAMkG,WAAWoX,EAAIjN,eAAe,CACpE,IAAMnK,EAAa9F,EAAKJ,MAAMkG,WAAWoX,EAAIjN,eAC7C,IAAKnK,EAAWksE,gBAAkBlsE,EAAWksE,gBAAgBtmE,UAAS,IAAIgN,MAAOI,UAAU,KACzF,OAAOhT,EAAW+F,KAGtB,OAAO8T,GA/uFShgB,KAivFlB6H,iBAjvFkB,eAAAyqE,EAAA1yE,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAivFC,SAAAuxE,EAAO/G,EAAWhrE,GAAlB,IAAAgyE,EAAAC,EAAA/gB,EAAAghB,EAAAC,EAAA,OAAA5xE,EAAAtB,EAAA0B,KAAA,SAAAyxE,GAAA,cAAAA,EAAAvxE,KAAAuxE,EAAAtxE,MAAA,cAAAsxE,EAAAtxE,KAAA,EAIPqD,QAAQC,IAAI,CACpBvE,EAAKkB,gBAAgBf,EAAYkE,KAAKhB,MAAM8nE,GAAW,GACvDnrE,EAAK2C,oBAAoBxC,EAAYkE,KAAKhB,MAAM,iBANjC,cAAA8uE,EAAAI,EAAAnxE,KAAAgxE,EAAA7yE,OAAAmF,EAAA,EAAAnF,CAAA4yE,EAAA,GAEf9gB,EAFe+gB,EAAA,GAGfC,EAHeD,EAAA,GASbE,EAAYtyE,EAAKqB,MAAM,GACvBgwD,GAAqBghB,IACvBC,EAAYtyE,EAAKqB,MAAMgwD,GAAmBpsD,IAAIjF,EAAKqB,MAAMgxE,KAX1CE,EAAAhxE,OAAA,SAcV+wE,GAdU,wBAAAC,EAAA/wE,SAAA0wE,EAAAvyE,SAjvFD,gBAAA6yE,EAAAC,GAAA,OAAAR,EAAA/vE,MAAAvC,KAAAwC,YAAA,GAAAxC,KAiwFlBuB,gBAjwFkB,eAAAwxE,EAAAnzE,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAiwFA,SAAAgyE,EAAOzkB,EAAaid,GAApB,IAAAyH,EAAApvE,EAAAsC,EAAA+sE,EAAAC,EAAAnlD,EAAAlY,EAAAs9D,EAAA5wE,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAkyE,GAAA,cAAAA,EAAAhyE,KAAAgyE,EAAA/xE,MAAA,UAA+B2xE,IAA/BG,EAAAtwE,OAAA,QAAAC,IAAAqwE,EAAA,KAAAA,EAAA,GACX5H,EADW,CAAA6H,EAAA/xE,KAAA,eAAA+xE,EAAAzxE,OAAA,UAEP,GAFO,UAMViC,EANU,gBAAAY,OAMsB8pD,EANtB,KAAA9pD,OAMsC+mE,EANtC,KAAA/mE,OAMoDwuE,GAEjD,QADb9sE,EAAa9F,EAAKkG,cAAc1C,IAPtB,CAAAwvE,EAAA/xE,KAAA,eAAA+xE,EAAAzxE,OAAA,SASPuE,GATO,cAAAktE,EAAA/xE,KAAA,EAeNqD,QAAQC,IAAI,CACpBvE,EAAKsoC,iBAAiB4lB,GACtBluD,EAAKuoC,mBAAmB2lB,EAAaid,KAjBvB,UAAA0H,EAAAG,EAAA5xE,KAAA0xE,EAAAvzE,OAAAmF,EAAA,EAAAnF,CAAAszE,EAAA,GAadllD,EAbcmlD,EAAA,KAcdr9D,EAdcq9D,EAAA,KAAAE,EAAA/xE,KAAA,gBAqBV2xE,IACFn9D,EAAezV,EAAKgD,iBAAiByS,EAAakY,IAtBtCqlD,EAAAzxE,OAAA,SA0BPvB,EAAKkF,cAAc1B,EAAciS,IA1B1B,QA4BdzV,EAAK6tD,eAAe,gCAAgCK,GA5BtC,eAAA8kB,EAAAzxE,OAAA,SA8BT,MA9BS,yBAAAyxE,EAAAxxE,SAAAmxE,EAAAhzE,SAjwFA,gBAAAszE,EAAAC,GAAA,OAAAR,EAAAxwE,MAAAvC,KAAAwC,YAAA,GAAAxC,KAiyFlBwzE,gBAAkB,SAACC,GACjB,GAA+B,oBAApBA,EAASC,OAAsB,CACxCD,EAASC,SACTD,EAASE,kBAAkB,EAAG,OAC9B,IAAM7K,EAAMz9D,SAASuoE,YAAY,QAEjC,OADAH,EAASE,kBAAkB,EAAG,GACvB7K,EAET,OAAO,GAzyFS9oE,KA2yFlB6zE,WAAa,SAAChwD,EAAI5jB,EAAMgC,GACtB,IAAMiiB,EAAS7Y,SAAS3L,cAAc,UACtCwkB,EAAO3S,IAAMsS,EAGT5jB,GACFL,OAAOwH,KAAKnH,GAAO6J,QAAQ,SAACgqE,EAAK3jE,GAC/B+T,EAAO4vD,GAAQ7zE,EAAM6zE,KAID,oBAAb7xE,IACLiiB,EAAOG,WACTH,EAAOI,mBAAqB,WACC,WAAtBJ,EAAOG,YAAiD,aAAtBH,EAAOG,aAC5CH,EAAOI,mBAAqB,KAC5BriB,MAIJiiB,EAAOK,OAAStiB,GAIfiiB,EAAOxT,IAAOrF,SAASC,eAAe4Y,EAAOxT,KAChDrF,SAAS08C,KAAKrjC,YAAYR,IAp0FZlkB,KAu0FlB+zE,YAAc,SAAAplB,GACZ,IACE/uC,KAAKwkB,MAAMuqB,GACX,MAAO3gD,GACP,OAAO,EAET,OAAO,GA70FShO,KA+0FlBg0E,aAAe,SAACxtE,GACd,OAAmB,OAAZA,GAA4D,OAAzCA,EAAQsU,MAAM,wBAh1FxB9a,KAk1FlB4oC,mBAl1FkB,eAAAqrC,EAAAr0E,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAk1FG,SAAAkzE,EAAO3lB,EAAa/nD,GAApB,OAAAzF,EAAAtB,EAAA0B,KAAA,SAAAgzE,GAAA,cAAAA,EAAA9yE,KAAA8yE,EAAA7yE,MAAA,cAAA6yE,EAAA7yE,KAAA,EACNjB,EAAK+zE,mBAAmB7lB,EAAa/nD,GAD/B,cAAA2tE,EAAAvyE,OAAA,SAAAuyE,EAAA1yE,MAAA,wBAAA0yE,EAAAtyE,SAAAqyE,EAAAl0E,SAl1FH,gBAAAq0E,EAAAC,GAAA,OAAAL,EAAA1xE,MAAAvC,KAAAwC,YAAA,GAAAxC,KAq1FlBo0E,mBAr1FkB,eAAAG,EAAA30E,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAq1FG,SAAAwzE,EAAOjmB,EAAa/nD,GAApB,OAAAzF,EAAAtB,EAAA0B,KAAA,SAAAszE,GAAA,cAAAA,EAAApzE,KAAAozE,EAAAnzE,MAAA,cACnBkF,EAAUA,GAAoBnG,EAAKJ,MAAMO,YAAYkE,KAAK8B,QADvCiuE,EAAAnzE,KAAA,EAENjB,EAAK2C,oBAAoBurD,EAAc,YAAa,CAAC/nD,IAF/C,cAAAiuE,EAAA7yE,OAAA,SAAA6yE,EAAAhzE,MAAA,wBAAAgzE,EAAA5yE,SAAA2yE,EAAAx0E,SAr1FH,gBAAA00E,EAAAC,GAAA,OAAAJ,EAAAhyE,MAAAvC,KAAAwC,YAAA,GAAAxC,KAy1FlB40E,QAz1FkB,eAAAC,EAAAj1E,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAy1FR,SAAA8zE,EAAOvmB,GAAP,OAAAxtD,EAAAtB,EAAA0B,KAAA,SAAA4zE,GAAA,cAAAA,EAAA1zE,KAAA0zE,EAAAzzE,MAAA,cACRitD,EAAeA,GAA8BluD,EAAKJ,MAAMO,YAAYkE,KAAKhB,MADjEqxE,EAAAzzE,KAAA,EAEKjB,EAAK2C,oBAAoBurD,EAAc,WAF5C,cAAAwmB,EAAAnzE,OAAA,SAAAmzE,EAAAtzE,MAAA,wBAAAszE,EAAAlzE,SAAAizE,EAAA90E,SAz1FQ,gBAAAg1E,GAAA,OAAAH,EAAAtyE,MAAAvC,KAAAwC,YAAA,GAAAxC,KA61FlBi1E,gBA71FkB,eAAAC,EAAAt1E,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA61FA,SAAAm0E,EAAO9I,GAAP,IAAA9iC,EAAA6rC,EAAAC,EAAA7yE,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAm0E,GAAA,cAAAA,EAAAj0E,KAAAi0E,EAAAh0E,MAAA,cAAmBioC,EAAnB8rC,EAAAvyE,OAAA,QAAAC,IAAAsyE,EAAA,GAAAA,EAAA,GAA4B,GAAID,EAAhCC,EAAAvyE,OAAA,QAAAC,IAAAsyE,EAAA,GAAAA,EAAA,GAA6C,GAA7CC,EAAAh0E,KAAA,EACHjB,EAAK2C,oBAAoB3C,EAAKJ,MAAMO,YAAYkE,KAAKhB,MAAO2oE,EAAY9iC,EAAQ6rC,GAAY5W,MAAM,SAAA97B,GAC7GriC,EAAK6tD,eAAe,yBAA0BxrB,KAFhC,cAAA4yC,EAAA1zE,OAAA,SAAA0zE,EAAA7zE,MAAA,wBAAA6zE,EAAAzzE,SAAAszE,EAAAn1E,SA71FA,gBAAAu1E,GAAA,OAAAL,EAAA3yE,MAAAvC,KAAAwC,YAAA,GAAAxC,KAk2FlBw1E,YAl2FkB,eAAAC,EAAA71E,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAk2FJ,SAAA00E,EAAOnnB,EAAc8d,GAArB,IAAAsJ,EAAApsC,EAAA6rC,EAAAj5B,EAAAy5B,EAAApzE,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAA00E,GAAA,cAAAA,EAAAx0E,KAAAw0E,EAAAv0E,MAAA,UAAiCioC,EAAjCqsC,EAAA9yE,OAAA,QAAAC,IAAA6yE,EAAA,GAAAA,EAAA,GAA0C,GAAIR,EAA9CQ,EAAA9yE,OAAA,QAAAC,IAAA6yE,EAAA,GAAAA,EAAA,GAA2D,GACnEz5B,EAAW97C,EAAK2kB,kBAAkBupC,GAD1B,CAAAsnB,EAAAv0E,KAAA,eAIVjB,EAAK6tD,eAAe,sBAAuBK,GAJjCsnB,EAAAj0E,OAAA,SAKH,MALG,cAAAi0E,EAAAv0E,KAAA,GAQCq0E,EAAAx5B,EAASxb,SAAQ0rC,GAAjB9pE,MAAAozE,EAAA/1E,OAAAkhC,EAAA,EAAAlhC,CAAgC2pC,IAAQisC,YAAYJ,GARrD,cAAAS,EAAAj0E,OAAA,SAAAi0E,EAAAp0E,MAAA,wBAAAo0E,EAAAh0E,SAAA6zE,EAAA11E,SAl2FI,gBAAA81E,EAAAC,GAAA,OAAAN,EAAAlzE,MAAAvC,KAAAwC,YAAA,GAAAxC,KA42FlBg2E,iBA52FkB,eAAAC,EAAAr2E,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA42FC,SAAAk1E,EAAOn6D,EAAGo6D,EAAQC,EAAWne,GAA7B,IAAA2E,EAAAyZ,EAAA,OAAAt1E,EAAAtB,EAAA0B,KAAA,SAAAm1E,GAAA,cAAAA,EAAAj1E,KAAAi1E,EAAAh1E,MAAA,UAEbs7D,EAAY3E,GAAYA,EAAS2E,UAAY3E,EAAS2E,UAAY,KAFrD,CAAA0Z,EAAAh1E,KAAA,eAAAg1E,EAAAh1E,KAAA,EAKI,IAAIqD,QAAJ,eAAA4xE,EAAA32E,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAa,SAAAw1E,EAAOn0C,EAASC,GAAhB,OAAAvhC,EAAAtB,EAAA0B,KAAA,SAAAs1E,GAAA,cAAAA,EAAAp1E,KAAAo1E,EAAAn1E,MAAA,OAC9BjB,EAAKJ,MAAMuiC,KAAKC,IAAIu2B,sBAAsBj9C,EAAG4Q,KAAK,SAAC+V,EAAI3mB,GACjD2mB,GACFJ,EAAOI,GAETL,EAAQtmB,KALoB,wBAAA06D,EAAA50E,SAAA20E,EAAAx2E,SAAb,gBAAA02E,EAAAC,GAAA,OAAAJ,EAAAh0E,MAAAvC,KAAAwC,YAAA,IALJ,OAKfo6D,EALe0Z,EAAA70E,KAAA,UAgBZm7D,EAhBY,CAAA0Z,EAAAh1E,KAAA,eAAAg1E,EAAA10E,OAAA,SAiBR,MAjBQ,WAoBXy0E,EAAoBzZ,EAAUztB,KAAKrzB,OAAO,SAACC,GAAS,OAAOA,EAAGq9C,OAAOr9C,EAAGq9C,OAAOt2D,OAAO,GAAGwN,gBAA9B,4BAAA7L,OAA4E0xE,MAEtHrzE,OAtBN,CAAAwzE,EAAAh1E,KAAA,gBAAAg1E,EAAA10E,OAAA,SAuBR,MAvBQ,eAAA00E,EAAAj1E,KAAA,GAAAi1E,EAAA10E,OAAA,SA2BR,CACLg7D,EACAv8D,EAAKJ,MAAMuiC,KAAKC,IAAIxd,IAAIy4C,UAAU0Y,EAAWC,EAAkB,GAAGnqE,KAAKmqE,EAAkB,GAAGjd,UA7B/E,eAAAkd,EAAAj1E,KAAA,GAAAi1E,EAAArxE,GAAAqxE,EAAA,UAAAA,EAAA10E,OAAA,SAgCR,MAhCQ,yBAAA00E,EAAAz0E,SAAAq0E,EAAAl2E,KAAA,cA52FD,gBAAA42E,EAAAC,EAAAC,EAAAC,GAAA,OAAAd,EAAA1zE,MAAAvC,KAAAwC,YAAA,GAAAxC,KA+4FlBg3E,eA/4FkBp3E,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA+4FD,SAAAi2E,IAAA,OAAAl2E,EAAAtB,EAAA0B,KAAA,SAAA+1E,GAAA,cAAAA,EAAA71E,KAAA61E,EAAA51E,MAAA,cAAA41E,EAAA51E,KAAA,EACFjB,EAAKJ,MAAMuiC,KAAKC,IAAIu0C,iBADlB,cAAAE,EAAAt1E,OAAA,SAAAs1E,EAAAz1E,MAAA,wBAAAy1E,EAAAr1E,SAAAo1E,EAAAj3E,SA/4FCA,KAk5FlBm3E,sBAl5FkB,eAAAC,EAAAx3E,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAk5FM,SAAAq2E,EAAO9oB,EAAa8d,GAApB,IAAA9iC,EAAA4S,EAAAm7B,EAAA90E,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAo2E,GAAA,cAAAA,EAAAl2E,KAAAk2E,EAAAj2E,MAAA,UAA+BioC,EAA/B+tC,EAAAx0E,OAAA,QAAAC,IAAAu0E,EAAA,GAAAA,EAAA,GAAwC,GACzD/oB,EADiB,CAAAgpB,EAAAj2E,KAAA,eAAAi2E,EAAA31E,OAAA,SAEb,MAFa,UAKhBu6C,EAAW97C,EAAK2kB,kBAAkBupC,GALlB,CAAAgpB,EAAAj2E,KAAA,eAQpBjB,EAAK6tD,eAAe,sBAAuBK,GARvBgpB,EAAA31E,OAAA,SASb,MATa,cAAA21E,EAAAj2E,KAAA,EAYT66C,EAASq7B,cAAcnL,EAAY9iC,GAZ1B,cAAAguC,EAAA31E,OAAA,SAAA21E,EAAA91E,MAAA,yBAAA81E,EAAA11E,SAAAw1E,EAAAr3E,SAl5FN,gBAAAy3E,EAAAC,GAAA,OAAAN,EAAA70E,MAAAvC,KAAAwC,YAAA,GAAAxC,KAg6FlBgD,oBAh6FkB,eAAA20E,EAAA/3E,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAg6FI,SAAA42E,EAAOrpB,EAAc8d,GAArB,IAAA9iC,EAAA6rC,EAAA7/C,EAAA4mB,EAAA07B,EAAAzpE,EAAA0pE,EAAAt1E,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAA42E,GAAA,cAAAA,EAAA12E,KAAA02E,EAAAz2E,MAAA,UAAiCioC,EAAjCuuC,EAAAh1E,OAAA,QAAAC,IAAA+0E,EAAA,GAAAA,EAAA,GAA0C,GAAI1C,EAA9C0C,EAAAh1E,OAAA,QAAAC,IAAA+0E,EAAA,GAAAA,EAAA,GAA2D,GAAIviD,EAA/DuiD,EAAAh1E,OAAA,QAAAC,IAAA+0E,EAAA,GAAAA,EAAA,GAA6E,SAE5FvpB,EAFe,CAAAwpB,EAAAz2E,KAAA,eAAAy2E,EAAAn2E,OAAA,SAGX,MAHW,UAMdu6C,EAAW97C,EAAK2kB,kBAAkBupC,GANpB,CAAAwpB,EAAAz2E,KAAA,eASlBjB,EAAKkiC,UAAU,sBAAuBgsB,GATpBwpB,EAAAn2E,OAAA,SAUX,MAVW,UAafu6C,EAASxb,QAAQ0rC,GAbF,CAAA0L,EAAAz2E,KAAA,gBAclBjB,EAAKkiC,UAAU,oBAAqB8pC,GAdlB0L,EAAAn2E,OAAA,SAeX,MAfW,eAkBpB2zB,EAA8B,WAAhBA,GAA4BA,IAAgB5zB,MAAM4zB,GAAexpB,SAASwpB,GAAeA,EAlBnFwiD,EAAA12E,KAAA,GAqBlBhB,EAAKkiC,UAAL,yBAAA99B,OAAwC8pD,EAAxC,OAAA9pD,OAA0D4nE,IArBxC0L,EAAAz2E,KAAA,IAsBEu2E,EAAA17B,EAASxb,SAAQ0rC,GAAjB9pE,MAAAs1E,EAAAj4E,OAAAkhC,EAAA,EAAAlhC,CAAgC2pC,IAAQu8B,KAAKsP,EAAW7/C,GAAaipC,MAAM,SAAA78B,GAC7FthC,EAAKkiC,UAAL,GAAA99B,OAAkB8pD,EAAlB,qBAAA9pD,OAAkD4nE,EAAlD,YAAwE1qC,KAvBxD,eAsBZvzB,EAtBY2pE,EAAAt2E,KAyBlBpB,EAAKkiC,UAAL,yBAAA99B,OAAwC8pD,EAAxC,OAAA9pD,OAA0D4nE,EAA1D,OAAA5nE,OAA0E2J,IAzBxD2pE,EAAAn2E,OAAA,SA0BXwM,GA1BW,QAAA2pE,EAAA12E,KAAA,GAAA02E,EAAA9yE,GAAA8yE,EAAA,UA4BlB13E,EAAKkiC,UAAU,4BAAfw1C,EAAA9yE,IA5BkB,yBAAA8yE,EAAAl2E,SAAA+1E,EAAA53E,KAAA,cAh6FJ,gBAAAg4E,EAAAC,GAAA,OAAAN,EAAAp1E,MAAAvC,KAAAwC,YAAA,GAAAxC,KA+7FlBmH,aA/7FkB,eAAA+wE,EAAAt4E,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA+7FH,SAAAm3E,EAAOhZ,EAAOl9D,GAAd,IAAAyqB,EAAA0rD,EAAA51E,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAk3E,GAAA,cAAAA,EAAAh3E,KAAAg3E,EAAA/2E,MAAA,cAAA82E,EAAAt1E,OAAA,QAAAC,IAAAq1E,EAAA,KAAAA,EAAA,KAAAC,EAAA/2E,KAAA,eAAA+2E,EAAA/2E,KAAA,EAELqD,QAAQC,IAAIu6D,EAAMjkD,IAAK,SAACszC,EAAE9hC,GAC9B,OAAOzqB,EAASusD,EAAG9hC,EAAOyyC,MAHjB,OAAAkZ,EAAA/2E,KAAA,gBAMForB,EAAQ,EANN,YAMSA,EAAQyyC,EAAMr8D,QANvB,CAAAu1E,EAAA/2E,KAAA,gBAAA+2E,EAAA/2E,KAAA,GAOHW,EAASk9D,EAAMzyC,GAAQA,EAAOyyC,GAP3B,QAM+BzyC,IAN/B2rD,EAAA/2E,KAAA,iCAAA+2E,EAAAx2E,SAAAs2E,EAAAn4E,SA/7FG,gBAAAs4E,EAAAC,GAAA,OAAAL,EAAA31E,MAAAvC,KAAAwC,YAAA,GAAAxC,KA08FlBw4E,QAAU,SAACtV,GACT,OAAQ7iE,EAAKqB,MAAM,GAAGoG,KAAKzH,EAAKqB,MAAMwhE,GAAK59D,IAAI,KAAMsjD,IAAI,IAAIxtC,MAAM,IA38FnDpb,KA68FlBy4E,iBA78FkB,eAAAC,EAAA94E,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA68FC,SAAA23E,EAAOn4E,GAAP,IAAAo4E,EAAA,OAAA73E,EAAAtB,EAAA0B,KAAA,SAAA03E,GAAA,cAAAA,EAAAx3E,KAAAw3E,EAAAv3E,MAAA,cAAAu3E,EAAAv3E,KAAA,EACSjB,EAAK+zE,mBAAmB5zE,EAAYkD,MAAMlD,EAAYkE,KAAK8B,SADpE,cACboyE,EADaC,EAAAp3E,QAGfm3E,EAAgBv4E,EAAKgD,iBAAiBu1E,EAAcp4E,EAAY8C,WAHjDu1E,EAAAj3E,OAAA,SAKVg3E,GALU,wBAAAC,EAAAh3E,SAAA82E,EAAA34E,SA78FD,gBAAA84E,GAAA,OAAAJ,EAAAn2E,MAAAvC,KAAAwC,YAAA,GAAAxC,KAu9FlB8E,mBAv9FkB,eAAAi0E,EAAAn5E,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAu9FG,SAAAg4E,EAAOx4E,GAAP,IAAAy4E,EAAA/mE,EAAArO,EAAAsC,EAAAkC,EAAAnE,EAAAg1E,EAAAC,EAAAlsE,EAAAC,EAAA0rE,EAAAQ,EAAA9qD,EAAA+qD,EAAA72E,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAm4E,GAAA,cAAAA,EAAAj4E,KAAAi4E,EAAAh4E,MAAA,UAAmB23E,EAAnBI,EAAAv2E,OAAA,QAAAC,IAAAs2E,EAAA,IAAAA,EAAA,GAAuCnnE,IAAvCmnE,EAAAv2E,OAAA,QAAAC,IAAAs2E,EAAA,KAAAA,EAAA,GAEd74E,EAAYkE,KAFE,CAAA40E,EAAAh4E,KAAA,eAAAg4E,EAAA13E,OAAA,UAGV,GAHU,UAObiC,EAPa,mBAAAY,OAOsBjE,EAAYkE,KAAK8B,QAPvC,KAAA/B,OAOkDyN,GAElD,QADb/L,EAAa9F,EAAKkG,cAAc1C,IARnB,CAAAy1E,EAAAh4E,KAAA,eAAAg4E,EAAA13E,OAAA,SAUVuE,GAVU,cAafkC,EAAkBhI,EAAKqB,MAAM,GAE3BwC,EAAkB,CACtB+zB,OAAQ,KACR5vB,gBAAgB,KAChB4E,qBAAqB,KACrBC,yBAAyB,KACzB9H,0BAA0B,MAGtB8zE,EAAgB,GAChBC,EAAoB,GACpBlsE,EAAuB,GACvBC,EAA2B,GA1BdosE,EAAAh4E,KAAA,GA4BbjB,EAAK8G,aAAa3G,EAAYyP,UAA9B,eAAAspE,EAAA35E,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAwC,SAAAw4E,EAAOtpE,EAAaC,GAApB,IAAAo+C,EAAAl+C,EAAAopE,EAAAC,EAAA1rD,EAAA2rD,EAAA/V,EAAA8C,EAAA,OAAA3lE,EAAAtB,EAAA0B,KAAA,SAAAy4E,GAAA,cAAAA,EAAAv4E,KAAAu4E,EAAAt4E,MAAA,cACtCitD,EAAer+C,EAAaxM,MAC5B2M,EAAeH,EAAa1J,QAAQ8J,cAFEspE,EAAAt4E,KAAA,EAQlCqD,QAAQC,IAAI,CACpBvE,EAAKsoC,iBAAiB4lB,GACtBluD,EAAK+zE,mBAAmB7lB,EAAa/tD,EAAYkE,KAAK8B,SACpD0J,EAAaw7B,UAAUk4B,aAAevjE,EAAK2C,oBAAoBurD,EAAar+C,EAAaw7B,UAAUk4B,aAAaj3D,KAAKuD,EAAaw7B,UAAUk4B,aAAar6B,QAAU,OAX3H,UAAAkwC,EAAAG,EAAAn4E,KAAAi4E,EAAA95E,OAAAmF,EAAA,EAAAnF,CAAA65E,EAAA,GAK1CzrD,EAL0C0rD,EAAA,GAM1CC,EAN0CD,EAAA,GAO1C9V,EAP0C8V,EAAA,GAcvCC,EAduC,CAAAC,EAAAt4E,KAAA,gBAAAs4E,EAAAh4E,OAAA,kBAkBxCgiE,GAAgB1zD,EAAa5M,WAC/B41E,EAAc7oE,GAAgBuzD,EAC9BA,EAAevjE,EAAKgD,iBAAiBugE,EAAa1zD,EAAa5M,YAG7DojE,EAAqBrmE,EAAKgD,iBAAiBs2E,EAAgB3rD,EAAc41C,IAEtD92C,GAAGzsB,EAAKqB,MAAM,SACnCi4E,EAAkBt5E,EAAKqB,MAAM,GAC7BglE,EAAqBrmE,EAAKqB,MAAM,IAGlCy3E,EAAkB9oE,GAAgBspE,EAClC1sE,EAAqBoD,GAAgBq2D,EACrCr+D,EAAkBA,EAAgBP,KAAK4+D,GAhCK,yBAAAkT,EAAA/3E,SAAA23E,EAAAx5E,SAAxC,gBAAA65E,EAAAC,GAAA,OAAAP,EAAAh3E,MAAAvC,KAAAwC,YAAA,IA5Ba,eAiEnB0B,EAAgB00E,cAAgBv4E,EAAKqB,MAAM,GAC3CwC,EAAgBi1E,kBAAoBA,EACpCj1E,EAAgBkB,0BAA4B/E,EAAKqB,MAAM2G,GAnEpCixE,EAAAh4E,KAAA,GAsEOjB,EAAKo4E,iBAAiBj4E,GAtE7B,YAsEfo4E,EAtEeU,EAAA73E,QAwEjByC,EAAgB00E,cAAgBA,EAChC10E,EAAgBkB,0BAA4BlB,EAAgBkB,0BAA0B0C,KAAK8wE,IAK7Fh5E,OAAOwH,KAAK6F,GAAsBnD,QAAQ,SAACuG,EAAaF,GACtD,IACMw2D,EADqB15D,EAAqBoD,GACE/K,IAAI+C,GACtD6E,EAAyBmD,GAAgBs2D,IAG3CziE,EAAgBmE,gBAAkBA,EAClCnE,EAAgB+I,qBAAuBA,EACvC/I,EAAgBgJ,yBAA2BA,GAEvCgF,EAxFe,CAAAonE,EAAAh4E,KAAA,gBAAAg4E,EAAAh4E,KAAA,GAyFejB,EAAK05E,qBAAqBv5E,EAAYkE,KAAK8B,SAzF1D,aAyFX4yE,EAzFWE,EAAA73E,MA4FKu4E,MA5FL,CAAAV,EAAAh4E,KAAA,gBAAAg4E,EAAAh4E,KAAA,GA6FsBjB,EAAK45E,uBAAuBz5E,GAAY,GA7F9D,SA6FT8tB,EA7FSgrD,EAAA73E,QA+Fb23E,EAAkBY,MAAQZ,EAAkBY,MAAM10E,IAAIgpB,IAGxDpqB,EAAgBkB,0BAA4BlB,EAAgBkB,0BAA0B0C,KAAKsxE,EAAkBY,OAlG9F,eAwGff,IACF/0E,EAAgB+zB,OAAS53B,EAAK6H,UAAU+wE,EAAchsE,EAAqB5E,IAzG1DixE,EAAA13E,OAAA,SA4GZvB,EAAKkF,cAAc1B,EAAcK,IA5GrB,yBAAAo1E,EAAAz3E,SAAAm3E,EAAAh5E,SAv9FH,gBAAAk6E,GAAA,OAAAnB,EAAAx2E,MAAAvC,KAAAwC,YAAA,GAAAxC,KAqkGlBm6E,8BArkGkB,eAAAC,EAAAx6E,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAqkGc,SAAAq5E,EAAO9nC,GAAP,IAAAoM,EAAA27B,EAAA,OAAAv5E,EAAAtB,EAAA0B,KAAA,SAAAo5E,GAAA,cAAAA,EAAAl5E,KAAAk5E,EAAAj5E,MAAA,cACxBq9C,EAAMt+C,EAAKqjE,uBAAuB,IADV6W,EAAAj5E,KAAA,EAETjB,EAAK2C,oBAAoB,gBAAgB,eAAe,CAAC27C,EAAInuC,UAAU+hC,IAF9D,cAExB+nC,EAFwBC,EAAA94E,KAAA84E,EAAA34E,OAAA,SAGvB04E,GAHuB,wBAAAC,EAAA14E,SAAAw4E,EAAAr6E,SArkGd,gBAAAw6E,GAAA,OAAAJ,EAAA73E,MAAAvC,KAAAwC,YAAA,GAAAxC,KA0kGlBgF,yBA1kGkB,eAAAy1E,EAAA76E,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA0kGS,SAAA05E,EAAOC,EAAgBC,GAAvB,IAAAj8B,EAAA27B,EAAAppB,EAAA,OAAAnwD,EAAAtB,EAAA0B,KAAA,SAAA05E,GAAA,cAAAA,EAAAx5E,KAAAw5E,EAAAv5E,MAAA,cAAAu5E,EAAAx5E,KAAA,EAEN,6CACXs9C,EAAMt+C,EAAKqjE,uBAAuB,IAHjBmX,EAAAv5E,KAAA,EAIFjB,EAAK2C,oBAAoB,gBAAgB,eAAe,CAAC27C,EAAInuC,UAAU,CAACmqE,EAAgBn0E,QAF5F,6CAE+Go0E,EAAgBp0E,WAJzH,YAIjB8zE,EAJiBO,EAAAp5E,MAAA,CAAAo5E,EAAAv5E,KAAA,eAMf4vD,EAAQ7wD,EAAKqB,MAAM44E,EAAO,IAAIh1E,IAAIq5C,GANnBk8B,EAAAj5E,OAAA,SAQdsvD,GARc,cAAA2pB,EAAAj5E,OAAA,SAUhB,MAVgB,eAAAi5E,EAAAx5E,KAAA,GAAAw5E,EAAA51E,GAAA41E,EAAA,SAAAA,EAAAj5E,OAAA,SAYhB,MAZgB,yBAAAi5E,EAAAh5E,SAAA64E,EAAA16E,KAAA,aA1kGT,gBAAA86E,EAAAC,GAAA,OAAAN,EAAAl4E,MAAAvC,KAAAwC,YAAA,GAAAxC,KA+mGlBg7E,wBA/mGkB,eAAAC,EAAAr7E,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA+mGQ,SAAAk6E,EAAO15E,GAAP,IAAA8nB,EAAAqnC,EAAAwqB,EAAAC,EAAAC,EAAA74E,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAm6E,GAAA,cAAAA,EAAAj6E,KAAAi6E,EAAAh6E,MAAA,UAAegoB,EAAf+xD,EAAAv4E,OAAA,QAAAC,IAAAs4E,EAAA,GAAAA,EAAA,GAA6B,GACrD75E,EAAUA,GAAoBnB,EAAKJ,MAAMuB,QAEpC8nB,GAAkBA,EAAcxmB,SACnCwmB,EAAgB1pB,OAAOwH,KAAK/G,EAAKJ,MAAM2G,kBAGpCpF,GAAY8nB,GAAkBA,EAAcxmB,OAPzB,CAAAw4E,EAAAh6E,KAAA,eAAAg6E,EAAA15E,OAAA,SAQf,IARe,cAAA05E,EAAAh6E,KAAA,EAWDjB,EAAK0wD,YAAYvvD,EAAQ,EAAE,SAAS8nB,GAXnC,OAWlBqnC,EAXkB2qB,EAAA75E,KAalB05E,EAAqB,GACvBC,EAAuB/6E,EAAKqB,MAAM,GAItCivD,EAAS7mD,QAAS,SAAAiS,GAEhB,IAAMg5C,EAAYh5C,EAAGg5C,UACfhoC,EAAa1sB,EAAKqB,MAAMqa,EAAGgR,YAMjC,OAJKouD,EAAmBpmB,KACtBomB,EAAmBpmB,GAAa10D,EAAKqB,MAAM,IAGrCqa,EAAG7e,QACT,IAAK,UACL,IAAK,aACHi+E,EAAmBpmB,GAAaomB,EAAmBpmB,GAAWjtD,KAAKilB,GACrE,MACA,IAAK,WACL,IAAK,cACCA,EAAWrW,GAAGykE,EAAmBpmB,MACnCqmB,EAAuBA,EAAqBtzE,KAAKilB,EAAW3R,MAAM+/D,EAAmBpmB,MAEvFomB,EAAmBpmB,GAAaomB,EAAmBpmB,GAAW35C,MAAM2R,GAChEouD,EAAmBpmB,GAAWjoC,GAAG,KACnCquD,EAAmBpmB,GAAa10D,EAAKqB,MAAM,IAU7C05E,EAAqB1kE,GAAG,IAC1B9W,OAAOwH,KAAK+zE,GAAoBrxE,QAAS,SAAApG,GACvC,IAAMoS,EAAeqlE,EAAmBz3E,GACpCoS,GAAgBA,EAAaY,GAAG,KAC9BZ,EAAaY,GAAG0kE,GAClBD,EAAmBz3E,GAASy3E,EAAmBz3E,GAAO0X,MAAMggE,IAE5DA,EAAuBA,EAAqBhgE,MAAM+/D,EAAmBz3E,IACrEy3E,EAAmBz3E,GAAS,QAzDd,yBAAA43E,EAAAz5E,SAAAq5E,EAAAl7E,SA/mGR,gBAAAu7E,GAAA,OAAAN,EAAA14E,MAAAvC,KAAAwC,YAAA,GAAAxC,KAirGlBw7E,2BAjrGkB,eAAAC,EAAA77E,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAirGW,SAAA06E,EAAOC,EAAQC,GAAf,IAAApnB,EAAAqnB,EAAA,OAAA96E,EAAAtB,EAAA0B,KAAA,SAAA26E,GAAA,cAAAA,EAAAz6E,KAAAy6E,EAAAx6E,MAAA,cAAAw6E,EAAAx6E,KAAA,EACKjB,EAAK07E,uBADV,YACrBvnB,EADqBsnB,EAAAr6E,MAAA,CAAAq6E,EAAAx6E,KAAA,eAAAw6E,EAAAx6E,KAAA,EAGGjB,EAAK2C,oBAAoBwxD,EAAkB7nD,KAAM,6BAA8B,CAACgvE,EAASC,IAH5F,cAGnBC,EAHmBC,EAAAr6E,KAAAq6E,EAAAl6E,OAAA,SAKlBi6E,GALkB,cAAAC,EAAAl6E,OAAA,SAOpB,MAPoB,wBAAAk6E,EAAAj6E,SAAA65E,EAAA17E,SAjrGX,gBAAAg8E,EAAAC,GAAA,OAAAR,EAAAl5E,MAAAvC,KAAAwC,YAAA,GAAAxC,KA0rGlByW,YA1rGkB7W,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA0rGJ,SAAAk7E,IAAA,IAAAr4E,EAAAsC,EAAAg2E,EAAA7pB,EAAA/f,EAAAv/B,EAAA,OAAAjS,EAAAtB,EAAA0B,KAAA,SAAAi7E,GAAA,cAAAA,EAAA/6E,KAAA+6E,EAAA96E,MAAA,UAGNuC,EAHM,cAKO,QADbsC,EAAa9F,EAAKkG,cAAc1C,IAJ1B,CAAAu4E,EAAA96E,KAAA,eAAA86E,EAAAx6E,OAAA,SAMHuE,GANG,YASNg2E,EAAiB97E,EAAKO,gBAAgB,CAAC,QAAQ,WATzC,CAAAw7E,EAAA96E,KAAA,gBAAA86E,EAAA96E,KAAA,EAWYjB,EAAKwmB,YAAYs1D,EAAe7rC,UAX5C,YAWJgiB,EAXI8pB,EAAA36E,QAYK6wD,EAAQpmD,KAZb,CAAAkwE,EAAA96E,KAAA,YAaFixC,EAAO3yC,OAAO0X,OAAO6kE,EAAe5pC,QACtCv/B,EAAW3S,EAAK6+D,aAAa3sB,EAAK+f,EAAQpmD,OAdtC,CAAAkwE,EAAA96E,KAAA,gBAgBN0R,EAAW3S,EAAKqB,MAAMsR,GAAU3N,MAAM,KAhBhC+2E,EAAAx6E,OAAA,SAiBCvB,EAAKkF,cAAc1B,EAAcmP,IAjBlC,eAAAopE,EAAAx6E,OAAA,SAqBL,MArBK,yBAAAw6E,EAAAv6E,SAAAq6E,EAAAl8E,SA1rGIA,KAitGlB8wD,wBAA0B,WACxB,IAAKzwD,EAAKJ,MAAMiH,oBACd,OAAO,EAET,IAAM8pD,EAAc3wD,EAAKO,gBAAgB,CAAC,QAAQ,oBAC5Cy7E,EAAiBh8E,EAAKJ,MAAMiH,oBAAX,KASvB,OARwBtH,OAAOwH,KAAKi1E,GAAgBtZ,OAAQ,SAACn8D,EAAgBlD,GAC3E,IAAMlD,EAAc67E,EAAe34E,GAInC,OAHI9D,OAAOwH,KAAK4pD,GAAap8B,SAASp0B,EAAYkE,KAAKhB,QAAUstD,EAAYxwD,EAAYkE,KAAKhB,OAAOc,UACnGoC,EAAgBlD,GAASlD,GAEpBoG,GACP,KA7tGc5G,KAiuGlBs8E,oBAjuGkB18E,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAiuGI,SAAAu7E,IAAA,IAAA/nB,EAAAj/B,EAAAinD,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA/7E,EAAAtB,EAAA0B,KAAA,SAAA47E,GAAA,cAAAA,EAAA17E,KAAA07E,EAAAz7E,MAAA,cAAAy7E,EAAAz7E,KAAA,EACYjB,EAAK07E,uBADjB,YACdvnB,EADcuoB,EAAAt7E,MAAA,CAAAs7E,EAAAz7E,KAAA,gBAAAy7E,EAAAz7E,KAAA,EAGQjB,EAAK22E,iBAHb,YAGZzhD,EAHYwnD,EAAAt7E,MAAA,CAAAs7E,EAAAz7E,KAAA,gBAKVk7E,EAA0B,GALhBO,EAAAz7E,KAAA,GAMwBqD,QAAQC,IAAI,CAClDvE,EAAK2C,oBAAoBwxD,EAAkB7nD,KAAK,qBAChDtM,EAAK2C,oBAAoBwxD,EAAkB7nD,KAAK,oBAAoB,GAAG,GAAG4oB,EAAYinD,KARxE,WAAAC,EAAAM,EAAAt7E,KAAAi7E,EAAA98E,OAAAmF,EAAA,EAAAnF,CAAA68E,EAAA,GAMXxmE,EANWymE,EAAA,GAMAE,EANAF,EAAA,IAWZzmE,IAAc2mE,EAXF,CAAAG,EAAAz7E,KAAA,gBAaRu7E,EAAmBx8E,EAAKqB,MAAMrB,EAAKO,gBAAgB,CAAC,UAAU,mBAAmB0E,IAAIk3E,GACrFM,EAAWz8E,EAAKqB,MAAMuU,GAAY3Q,IAAIs3E,GAAgBxhE,MAAM,GAAG/V,MAAMw3E,GAd7DE,EAAAn7E,OAAA,SAePvB,EAAKm4E,QAAQsE,GAAUz3E,MAAM,MAftB,eAAA03E,EAAAn7E,OAAA,SAmBb,MAnBa,yBAAAm7E,EAAAl7E,SAAA06E,EAAAv8E,SAjuGJA,KAsvGlBg9E,oBAtvGkBp9E,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAsvGI,SAAAi8E,IAAA,IAAA1oB,EAAA,OAAAxzD,EAAAtB,EAAA0B,KAAA,SAAA+7E,GAAA,cAAAA,EAAA77E,KAAA67E,EAAA57E,MAAA,cAAA47E,EAAA57E,KAAA,EACYjB,EAAK88E,uBADjB,YACd5oB,EADc2oB,EAAAz7E,MAAA,CAAAy7E,EAAA57E,KAAA,eAAA47E,EAAA57E,KAAA,EAGLjB,EAAK2C,oBAAoBuxD,EAAkB5nD,KAAK,eAH3C,cAAAuwE,EAAAt7E,OAAA,SAAAs7E,EAAAz7E,MAAA,cAAAy7E,EAAAt7E,OAAA,SAKb,MALa,wBAAAs7E,EAAAr7E,SAAAo7E,EAAAj9E,SAtvGJA,KA6vGlBgwE,qBA7vGkBpwE,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA6vGK,SAAAo8E,IAAA,IAAA57E,EAAAyxE,EAAA1e,EAAA8oB,EAAA76E,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAm8E,GAAA,cAAAA,EAAAj8E,KAAAi8E,EAAAh8E,MAAA,cAAOE,EAAP67E,EAAAv6E,OAAA,QAAAC,IAAAs6E,EAAA,GAAAA,EAAA,GAAe,KAAKpK,IAApBoK,EAAAv6E,OAAA,QAAAC,IAAAs6E,EAAA,KAAAA,EAAA,GAAAC,EAAAh8E,KAAA,EACWjB,EAAK88E,uBADhB,YACf5oB,EADe+oB,EAAA77E,MAAA,CAAA67E,EAAAh8E,KAAA,gBAGnBE,EAAUA,GAAoBnB,EAAKJ,MAAMuB,QAHtB87E,EAAAh8E,KAAA,EAINjB,EAAKkB,gBAAgBgzD,EAAkB5nD,KAAKnL,EAAQyxE,GAJ9C,cAAAqK,EAAA17E,OAAA,SAAA07E,EAAA77E,MAAA,eAAA67E,EAAA17E,OAAA,SAMd,MANc,yBAAA07E,EAAAz7E,SAAAu7E,EAAAp9E,SA7vGLA,KAqwGlB44D,mBArwGkBh5D,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAqwGG,SAAAu8E,IAAA,IAAAhoD,EAAA09C,EAAA9qC,EAAA8oB,EAAAsD,EAAAipB,EAAAh7E,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAs8E,GAAA,cAAAA,EAAAp8E,KAAAo8E,EAAAn8E,MAAA,cAAOi0B,EAAPioD,EAAA16E,OAAA,QAAAC,IAAAy6E,EAAA,GAAAA,EAAA,GAAmB,SAASvK,IAA5BuK,EAAA16E,OAAA,QAAAC,IAAAy6E,EAAA,KAAAA,EAAA,GAAAC,EAAAn8E,KAAA,EACajB,EAAK07E,uBADlB,cACb5zC,EADas1C,EAAAh8E,KAAAg8E,EAAAn8E,KAAA,EAESjB,EAAK2C,oBAAoBmlC,EAAkBx7B,KAAK,oBAAoB,GAAG,GAAG4oB,GAFnF,YAEf07B,EAFewsB,EAAAh8E,MAAA,CAAAg8E,EAAAn8E,KAAA,gBAIjB2vD,EAAkB5wD,EAAKqB,MAAMuvD,GACzBgiB,IACI1e,EAAoBl0D,EAAKO,gBAAgB,CAAC,QAAQ,iBACxDqwD,EAAkB5wD,EAAKgD,iBAAiB4tD,EAAgBsD,EAAkBjxD,WAP3Dm6E,EAAA77E,OAAA,SASVqvD,GATU,eAAAwsB,EAAA77E,OAAA,SAWZ,MAXY,yBAAA67E,EAAA57E,SAAA07E,EAAAv9E,SArwGHA,KAkxGlBiwE,6BAlxGkB,eAAAyN,EAAA99E,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAkxGa,SAAA28E,EAAOn8E,GAAP,IAAAo8E,EAAAC,EAAA5sB,EAAAic,EAAA,OAAAnsE,EAAAtB,EAAA0B,KAAA,SAAA28E,GAAA,cAAAA,EAAAz8E,KAAAy8E,EAAAx8E,MAAA,cAAAw8E,EAAAx8E,KAAA,EACmBqD,QAAQC,IAAI,CAC1DvE,EAAKu4D,mBAAmB,UACxBv4D,EAAK2vE,qBAAqBxuE,KAHC,UAAAo8E,EAAAE,EAAAr8E,KAAAo8E,EAAAj+E,OAAAmF,EAAA,EAAAnF,CAAAg+E,EAAA,GACxB3sB,EADwB4sB,EAAA,KACR3Q,EADQ2Q,EAAA,MAKJ5sB,EALI,CAAA6sB,EAAAx8E,KAAA,eAAAw8E,EAAAl8E,OAAA,SAMpBvB,EAAKqB,MAAMwrE,GAAmB7nE,MAAM4rD,IANhB,cAAA6sB,EAAAl8E,OAAA,SAQtB,MARsB,wBAAAk8E,EAAAj8E,SAAA87E,EAAA39E,SAlxGb,gBAAA+9E,GAAA,OAAAL,EAAAn7E,MAAAvC,KAAAwC,YAAA,GAAAxC,KA4xGlBg+E,wBA5xGkBp+E,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA4xGQ,SAAAi9E,IAAA,IAAAC,EAAA,OAAAn9E,EAAAtB,EAAA0B,KAAA,SAAAg9E,GAAA,cAAAA,EAAA98E,KAAA88E,EAAA78E,MAAA,YAClB48E,EAAsB79E,EAAKO,gBAAgB,CAAC,QAAQ,qBADlC,CAAAu9E,EAAA78E,KAAA,WAGKjB,EAAK2kB,kBAAkBk5D,EAAoBvxE,QACzCuxE,EAAoBj5D,IAJ3B,CAAAk5D,EAAA78E,KAAA,eAAA68E,EAAA78E,KAAA,EAKSjB,EAAKJ,MAAMilB,aAAag5D,EAAoBvxE,KAAKuxE,EAAoB13E,QAAQ03E,EAAoBj5D,KAL1G,OAAAk5D,EAAA18E,KAAA,cAAA08E,EAAAv8E,OAAA,SAQjBs8E,GARiB,wBAAAC,EAAAt8E,SAAAo8E,EAAAj+E,SA5xGRA,KAsyGlBo+E,oBAtyGkBx+E,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAsyGI,SAAAq9E,IAAA,IAAAC,EAAA,OAAAv9E,EAAAtB,EAAA0B,KAAA,SAAAo9E,GAAA,cAAAA,EAAAl9E,KAAAk9E,EAAAj9E,MAAA,YACdg9E,EAAkBj+E,EAAKO,gBAAgB,CAAC,QAAQ,iBADlC,CAAA29E,EAAAj9E,KAAA,WAGKjB,EAAK2kB,kBAAkBs5D,EAAgB3xE,QACrC2xE,EAAgBr5D,IAJvB,CAAAs5D,EAAAj9E,KAAA,eAAAi9E,EAAAj9E,KAAA,EAKSjB,EAAKJ,MAAMilB,aAAao5D,EAAgB3xE,KAAK2xE,EAAgB93E,QAAQ83E,EAAgBr5D,KAL9F,OAAAs5D,EAAA98E,KAAA,cAAA88E,EAAA38E,OAAA,SAQb08E,GARa,wBAAAC,EAAA18E,SAAAw8E,EAAAr+E,SAtyGJA,KAgzGlBm9E,qBAhzGkBv9E,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAgzGK,SAAAw9E,IAAA,IAAAC,EAAA,OAAA19E,EAAAtB,EAAA0B,KAAA,SAAAu9E,GAAA,cAAAA,EAAAr9E,KAAAq9E,EAAAp9E,MAAA,YACfm9E,EAAmBp+E,EAAKO,gBAAgB,CAAC,QAAQ,kBADlC,CAAA89E,EAAAp9E,KAAA,WAGKjB,EAAK2kB,kBAAkBy5D,EAAiB9xE,QACtC8xE,EAAiBx5D,IAJxB,CAAAy5D,EAAAp9E,KAAA,eAAAo9E,EAAAp9E,KAAA,EAKSjB,EAAKJ,MAAMilB,aAAau5D,EAAiB9xE,KAAK8xE,EAAiBj4E,QAAQi4E,EAAiBx5D,KALjG,OAAAy5D,EAAAj9E,KAAA,cAAAi9E,EAAA98E,OAAA,SAQd68E,GARc,wBAAAC,EAAA78E,SAAA28E,EAAAx+E,SAhzGLA,KA0zGlB+7E,qBA1zGkBn8E,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA0zGK,SAAA29E,IAAA,IAAA32C,EAAA,OAAAjnC,EAAAtB,EAAA0B,KAAA,SAAAy9E,GAAA,cAAAA,EAAAv9E,KAAAu9E,EAAAt9E,MAAA,YACf0mC,EAAwB3nC,EAAKO,gBAAgB,CAAC,QAAQ,uBADvC,CAAAg+E,EAAAt9E,KAAA,WAGKjB,EAAK2kB,kBAAkBgjB,EAAsBr7B,QAC3Cq7B,EAAsB/iB,IAJ7B,CAAA25D,EAAAt9E,KAAA,eAAAs9E,EAAAt9E,KAAA,EAKSjB,EAAKJ,MAAMilB,aAAa8iB,EAAsBr7B,KAAKq7B,EAAsBxhC,QAAQwhC,EAAsB/iB,KALhH,OAAA25D,EAAAn9E,KAAA,cAAAm9E,EAAAh9E,OAAA,SAQdomC,GARc,wBAAA42C,EAAA/8E,SAAA88E,EAAA3+E,SA1zGLA,KAq0GlB6+E,0BAr0GkBj/E,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAq0GU,SAAA89E,IAAA,IAAAt9E,EAAA0rE,EAAA6R,EAAAnxD,EAAA4mC,EAAA+C,EAAAynB,EAAAC,EAAA7sC,EAAA8sC,EAAA18E,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAg+E,GAAA,cAAAA,EAAA99E,KAAA89E,EAAA79E,MAAA,UAAOE,EAAP09E,EAAAp8E,OAAA,QAAAC,IAAAm8E,EAAA,GAAAA,EAAA,GAAe,KAAKhS,EAApBgS,EAAAp8E,OAAA,QAAAC,IAAAm8E,EAAA,GAAAA,EAAA,GAAsC,KAAKH,EAA3CG,EAAAp8E,OAAA,QAAAC,IAAAm8E,EAAA,GAAAA,EAAA,GAAwD,MAC7E19E,GAAWnB,EAAKJ,MAAMuB,UACzBA,EAAUnB,EAAKJ,MAAMuB,SAGlBA,EALqB,CAAA29E,EAAA79E,KAAA,eAAA69E,EAAAv9E,OAAA,SAMjB,MANiB,cASpBgsB,EAAiB,GATGuxD,EAAA79E,KAAA,EAUMjB,EAAK07E,uBAVX,cAUpBvnB,EAVoB2qB,EAAA19E,KAWpB81D,EAAuBl3D,EAAKO,gBAAgB,CAAC,QAAQ,oBAXjCu+E,EAAA79E,KAAA,GAaKjB,EAAK28E,sBAbV,WAapBgC,EAboBG,EAAA19E,KAcrByrE,EAdqB,CAAAiS,EAAA79E,KAAA,gBAAA69E,EAAA79E,KAAA,GAeEjB,EAAK2vE,qBAAqBxuE,GAAQ,GAfpC,QAexB0rE,EAfwBiS,EAAA19E,KAAA,YAkBtByrE,IAAqB8R,EAlBC,CAAAG,EAAA79E,KAAA,gBAmBlB29E,EAAkB5+E,EAAKqB,MAAMwrE,GAAmB5nE,IAAIjF,EAAKqB,MAAMs9E,IAC/D5sC,EAAUxyC,OAAOwH,KAAKmwD,GAAsBz0D,OAE9Ci8E,IACFA,EAAe1+E,EAAKqB,MAAMq9E,GAAcz5E,IAAI8sC,IAvBtB+sC,EAAA79E,KAAA,GA4BlBjB,EAAK8G,aAAavH,OAAOwH,KAAKmwD,GAA9B,eAAA6nB,EAAAx/E,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAqD,SAAAq+E,EAAO37E,GAAP,IAAAoxD,EAAA9hB,EAAAssC,EAAAhpE,EAAA,OAAAvV,EAAAtB,EAAA0B,KAAA,SAAAo+E,GAAA,cAAAA,EAAAl+E,KAAAk+E,EAAAj+E,MAAA,cACnDwzD,EAAmByC,EAAqB7zD,GACxCsvC,EAAY8hB,EAAiBhrB,gBAAgBkJ,UAFMusC,EAAAj+E,KAAA,EAG3BjB,EAAK2C,oBAAoBwxD,EAAkB7nD,KAAK,WAAW,CAACqmC,IAHjC,QAGnDssC,EAHmDC,EAAA99E,QAKnD6U,EAAmBjW,EAAKqB,MAAM49E,GAAiBj6E,MAAM45E,GACrDF,IAEFzoE,EAAmBA,EAAiB8E,MAAM9E,EAAiBjR,MAAM05E,KAEnEnxD,EAAeolB,GAAa3yC,EAAK6pC,aAAa5zB,IAVS,wBAAAipE,EAAA19E,SAAAw9E,EAAAr/E,SAArD,gBAAAw/E,GAAA,OAAAJ,EAAA78E,MAAAvC,KAAAwC,YAAA,IA5BkB,eAAA28E,EAAAv9E,OAAA,SA2CnBhC,OAAO0X,OAAOsW,IA3CK,yBAAAuxD,EAAAt9E,SAAAi9E,EAAA9+E,SAr0GVA,KAo3GlBy/E,sBAp3GkB7/E,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAo3GM,SAAA0+E,IAAA,IAAAl+E,EAAA0rE,EAAA+F,EAAArlD,EAAAhnB,EAAA4tD,EAAA+C,EAAAynB,EAAAC,EAAAU,EAAAn9E,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAy+E,GAAA,cAAAA,EAAAv+E,KAAAu+E,EAAAt+E,MAAA,UAAOE,EAAPm+E,EAAA78E,OAAA,QAAAC,IAAA48E,EAAA,GAAAA,EAAA,GAAe,KAAKzS,EAApByS,EAAA78E,OAAA,QAAAC,IAAA48E,EAAA,GAAAA,EAAA,GAAsC,KAAK1M,EAA3C0M,EAAA78E,OAAA,QAAAC,IAAA48E,EAAA,IAAAA,EAAA,IAEjBn+E,GAAWnB,EAAKJ,MAAMuB,UACzBA,EAAUnB,EAAKJ,MAAMuB,SAGlBA,EANiB,CAAAo+E,EAAAt+E,KAAA,eAAAs+E,EAAAh+E,OAAA,SAOb,MAPa,cAUhBgsB,EAAiB,GACjBhnB,EAAkBvG,EAAKywD,0BAXP8uB,EAAAt+E,KAAA,GAYUjB,EAAK07E,uBAZf,eAYhBvnB,EAZgBorB,EAAAn+E,KAahB81D,EAAuBl3D,EAAKO,gBAAgB,CAAC,QAAQ,oBAbrCg/E,EAAAt+E,KAAA,GAeSjB,EAAK28E,sBAfd,WAehBgC,EAfgBY,EAAAn+E,KAgBjByrE,EAhBiB,CAAA0S,EAAAt+E,KAAA,gBAAAs+E,EAAAt+E,KAAA,GAiBMjB,EAAK2vE,qBAAqBxuE,GAAQ,GAjBxC,QAiBpB0rE,EAjBoB0S,EAAAn+E,KAAA,YAoBlByrE,IAAqB8R,EApBH,CAAAY,EAAAt+E,KAAA,gBAqBd29E,EAAkB5+E,EAAKqB,MAAMwrE,GAAmB5nE,IAAIjF,EAAKqB,MAAMs9E,IArBjDY,EAAAt+E,KAAA,GAuBdjB,EAAK8G,aAAavH,OAAOwH,KAAKmwD,GAA9B,eAAAsoB,EAAAjgF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAqD,SAAA8+E,EAAOp8E,GAAP,IAAAoxD,EAAA9hB,EAAAxyC,EAAAu/E,EAAAC,EAAAtoD,EAAAphB,EAAA2pE,EAAAnqE,EAAA,OAAA/U,EAAAtB,EAAA0B,KAAA,SAAA++E,GAAA,cAAAA,EAAA7+E,KAAA6+E,EAAA5+E,MAAA,cACnDwzD,EAAmByC,EAAqB7zD,GACxCsvC,EAAY8hB,EAAiBhrB,gBAAgBkJ,UAC7CxyC,EAAcoG,EAAgBkuD,EAAiBhyC,WAHIo9D,EAAA5+E,KAAA,EAO/CqD,QAAQC,IAAI,CACpBvE,EAAK2pB,kBAAkBxpB,GACvBH,EAAK2C,oBAAoBwxD,EAAkB7nD,KAAK,WAAW,CAACqmC,MATL,OAAA+sC,EAAAG,EAAAz+E,KAAAu+E,EAAApgF,OAAAmF,EAAA,EAAAnF,CAAAmgF,EAAA,GAKvDroD,EALuDsoD,EAAA,GAMvD1pE,EANuD0pE,EAAA,GAYnDC,EAAmB5/E,EAAKqB,MAAM4U,GAAkBjR,MAAMhF,EAAKqB,MAAMg2B,IACnE5hB,EAAemqE,EAAiB56E,MAAM45E,GACtChM,IACFn9D,EAAezV,EAAKgD,iBAAiByS,EAAatV,EAAY8C,WAGhEsqB,EAAeknC,EAAiBhyC,WAAahN,EAlBY,yBAAAoqE,EAAAr+E,SAAAi+E,EAAA9/E,SAArD,gBAAAmgF,GAAA,OAAAN,EAAAt9E,MAAAvC,KAAAwC,YAAA,IAvBc,eAAAo9E,EAAAh+E,OAAA,SA6CfgsB,GA7Ce,yBAAAgyD,EAAA/9E,SAAA69E,EAAA1/E,SAp3GNA,KAq6GlBogF,gBAr6GkB,eAAAC,EAAAzgF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAq6GA,SAAAs/E,EAAO58E,EAAM6uB,GAAb,IAAA11B,EAAA8+E,EAAA/0E,EAAA2wD,EAAAgpB,EAAA/9E,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAq/E,GAAA,cAAAA,EAAAn/E,KAAAm/E,EAAAl/E,MAAA,cAAoBzE,EAApB0jF,EAAAz9E,OAAA,QAAAC,IAAAw9E,EAAA,IAAAA,EAAA,GACV5E,EAAU,GACV/0E,EAAkBvG,EAAKywD,0BACvByG,EAAuBl3D,EAAKO,gBAAgB,CAAC,QAAQ,oBAH3C4/E,EAAAl/E,KAAA,EAKVjB,EAAK8G,aAAavH,OAAOwH,KAAKmwD,GAA9B,eAAAkpB,EAAA7gF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAqD,SAAA0/E,EAAO3rB,GAAP,IAAAD,EAAAhrB,EAAAkJ,EAAAxyC,EAAAk3B,EAAA,OAAA32B,EAAAtB,EAAA0B,KAAA,SAAAw/E,GAAA,cAAAA,EAAAt/E,KAAAs/E,EAAAr/E,MAAA,UACnDwzD,EAAmByC,EAAqBxC,GACxCjrB,EAAkBgrB,EAAiBhrB,gBACnCkJ,EAAYlJ,EAAgBkJ,YAC9B+hB,IAAcrxD,GAAS8H,WAAW+mB,GAAQ,GAJW,CAAAouD,EAAAr/E,KAAA,YAKjDd,EAAcoG,EAAgBkuD,EAAiBhyC,WACrDyP,EAASlyB,EAAKgD,iBAAiBkvB,EAAO,IACjC11B,EAPkD,CAAA8jF,EAAAr/E,KAAA,gBAAAq/E,EAAAr/E,KAAA,EAQxBjB,EAAK2pB,kBAAkBxpB,GARC,OAQ/Ck3B,EAR+CipD,EAAAl/E,KASrD8wB,EAASA,EAAOjtB,IAAIoyB,GATiC,QAWvDnF,EAASlyB,EAAKmnC,qBAAqBjV,EAAOuiC,EAAiBxxD,UAC3Dq4E,EAAQ3oC,GAAazgB,EAZkCouD,EAAAr/E,KAAA,iBAcvDq6E,EAAQ3oC,GAAa,EAdkC,yBAAA2tC,EAAA9+E,SAAA6+E,EAAA1gF,SAArD,gBAAA4gF,GAAA,OAAAH,EAAAl+E,MAAAvC,KAAAwC,YAAA,IALU,cAAAg+E,EAAA5+E,OAAA,SAuBThC,OAAO0X,OAAOqkE,IAvBL,wBAAA6E,EAAA3+E,SAAAy+E,EAAAtgF,SAr6GA,gBAAA6gF,EAAAC,GAAA,OAAAT,EAAA99E,MAAAvC,KAAAwC,YAAA,GAAAxC,KA87GlB+gF,oBA97GkB,eAAAC,EAAAphF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA87GI,SAAAigF,EAAOtF,GAAP,IAAA9+E,EAAAsrC,EAAA+4C,EAAA1+E,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAggF,GAAA,cAAAA,EAAA9/E,KAAA8/E,EAAA7/E,MAAA,cAAezE,IAAfqkF,EAAAp+E,OAAA,QAAAC,IAAAm+E,EAAA,KAAAA,EAAA,GAAAC,EAAA7/E,KAAA,EACYjB,EAAK07E,uBADjB,YACd5zC,EADcg5C,EAAA1/E,MAAA,CAAA0/E,EAAA7/E,KAAA,eAAA6/E,EAAA7/E,KAAA,EAGLjB,EAAK2C,oBAAoBmlC,EAAkBx7B,KAAK,oBAAoB,CAACgvE,EAAQ9+E,IAHxE,cAAAskF,EAAAv/E,OAAA,SAAAu/E,EAAA1/E,MAAA,cAAA0/E,EAAAv/E,OAAA,SAKb,MALa,wBAAAu/E,EAAAt/E,SAAAo/E,EAAAjhF,SA97GJ,gBAAAohF,GAAA,OAAAJ,EAAAz+E,MAAAvC,KAAAwC,YAAA,GAAAxC,KAq8GlBqhF,iBAr8GkB,eAAAC,EAAA1hF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAq8GC,SAAAugF,EAAO79E,EAAM6uB,GAAb,IAAA11B,EAAA2kF,EAAApwB,EAAAjpB,EAAAiK,EAAAupC,EAAA8F,EAAAC,EAAAC,EAAA90D,EAAA+0D,EAAAC,EAAAr/E,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAA2gF,GAAA,cAAAA,EAAAzgF,KAAAygF,EAAAxgF,MAAA,cAAoBzE,IAApBglF,EAAA/+E,OAAA,QAAAC,IAAA8+E,EAAA,KAAAA,EAAA,GAAiCL,EAAjCK,EAAA/+E,OAAA,QAAAC,IAAA8+E,EAAA,GAAAA,EAAA,GAAgD,KAC7DzwB,EAAW,KADE0wB,EAAAxgF,KAAA,EAEejB,EAAK07E,uBAFpB,YAEX5zC,EAFW25C,EAAArgF,MAAA,CAAAqgF,EAAAxgF,KAAA,YAKT8wC,EAAU/xC,EAAKO,gBAAgB,CAAC,QAAQ,SAAS,aAEvD2xB,EAASlyB,EAAKqB,MAAM6wB,MACLA,EAAO5wB,UAAW4wB,EAAOrtB,IAAI,GAR7B,CAAA48E,EAAAxgF,KAAA,gBAAAwgF,EAAAlgF,OAAA,SASN,MATM,YAYX+5E,EAAU6F,IACE7F,EAAQ74E,SAAWsvC,EAbpB,CAAA0vC,EAAAxgF,KAAA,gBAAAwgF,EAAAxgF,KAAA,GAcGjB,EAAK+/E,gBAAgB18E,EAAM6uB,GAd9B,QAcbopD,EAdamG,EAAArgF,KAAA,eAAAqgF,EAAAxgF,KAAA,GAiBwBqD,QAAQC,IAAI,CACjDvE,EAAK2C,oBAAoBmlC,EAAkBx7B,KAAK,qBAChDtM,EAAK2C,oBAAoBmlC,EAAkBx7B,KAAK,oBAAoB,CAACgvE,EAAQ9+E,MAnBhE,WAAA4kF,EAAAK,EAAArgF,KAAAigF,EAAA9hF,OAAAmF,EAAA,EAAAnF,CAAA6hF,EAAA,GAiBVE,EAjBUD,EAAA,GAiBG70D,EAjBH60D,EAAA,IAsBXC,IAAgB90D,EAtBL,CAAAi1D,EAAAxgF,KAAA,gBAuBbixB,EAASlyB,EAAKgD,iBAAiBkvB,EAAO,IACtCovD,EAAethF,EAAKgD,iBAAiBs+E,EAAa,IAClD90D,EAAcxsB,EAAKgD,iBAAiBwpB,EAAY,IAC1C+0D,EAAK/0D,EAAYxnB,MAAMs8E,GAGzBH,IAAmB3kF,IACrB01B,EAASA,EAAOltB,MAAMs8E,IAItBvwB,EADEv0D,EACS+kF,EAAGt8E,IAAIitB,GAAQnX,MAAM,GAAG/V,OAAO,GAE/BktB,EAAOjtB,IAAIs8E,GAAIxmE,MAAM,GAAG/V,OAAO,GApC/By8E,EAAAlgF,OAAA,SAyCNwvD,GAzCM,eAAA0wB,EAAAlgF,OAAA,SA4CV,MA5CU,yBAAAkgF,EAAAjgF,SAAA0/E,EAAAvhF,SAr8GD,gBAAA+hF,EAAAC,GAAA,OAAAV,EAAA/+E,MAAAvC,KAAAwC,YAAA,GAAAxC,KAm/GlBiiF,WAn/GkB,eAAAC,EAAAtiF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAm/GL,SAAAmhF,EAAOz+E,EAAMlD,GAAb,IAAA4hF,EAAAC,EAAAC,EAAAz+E,EAAAsC,EAAAo8E,EAAAC,EAAAtU,EAAA/pE,EAAAs+E,EAAAC,EAAAC,EAAAC,EAAA50D,EAAA41C,EAAAif,EAAArgF,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAA2hF,GAAA,cAAAA,EAAAzhF,KAAAyhF,EAAAxhF,MAAA,UAAyB8gF,EAAzBS,EAAA//E,OAAA,QAAAC,IAAA8/E,EAAA,GAAAA,EAAA,GAA0C,KAAKR,EAA/CQ,EAAA//E,OAAA,QAAAC,IAAA8/E,EAAA,GAAAA,EAAA,GAAkE,MACvEP,EAAkBjiF,EAAKO,gBAAgB,CAAC,YAAY,UACrC4D,QAFV,CAAAs+E,EAAAxhF,KAAA,eAAAwhF,EAAAlhF,OAAA,UAGF,GAHE,UAMLiC,EANK,cAAAY,OAMyBjE,EAAYkE,KAAKhB,MAN1C,KAAAe,OAMmD29E,EANnD,KAAA39E,OAMuE49E,GAE/D,QADbl8E,EAAa9F,EAAKkG,cAAc1C,KACVxD,EAAKqB,MAAMyE,GAAYxE,QARxC,CAAAmhF,EAAAxhF,KAAA,eAAAwhF,EAAAlhF,OAAA,SASFuE,GATE,cAYPo8E,EAAUliF,EAAKqB,MAAM,GAZdohF,EAAAxhF,KAAA,GAcoBjB,EAAK0iF,oBAAoBviF,EAAY4hF,GAdzD,aAcLI,EAdKM,EAAArhF,MAAA,CAAAqhF,EAAAxhF,KAAA,YAiBH4sE,EAAa1tE,EAAYyP,UAAUyH,KAAM,SAAA3N,GAAC,MAAgB,aAAXA,EAAE4C,OAEjDxI,EAAiB9D,EAAKO,gBAAgB,CAAC,QAAQ,SAAS,QAGzDyhF,EAtBI,CAAAS,EAAAxhF,KAAA,gBAAAwhF,EAAAzhF,KAAA,GAAAyhF,EAAAxhF,KAAA,GAwBsBjB,EAAK2E,yBAAyBb,EAAem+E,GAxBnE,QAwBLD,EAxBKS,EAAArhF,KAAAqhF,EAAAxhF,KAAA,iBAAAwhF,EAAAzhF,KAAA,GAAAyhF,EAAA79E,GAAA69E,EAAA,kBA4BFT,IAAsBA,EAAmB1gF,UAC5C0gF,EAAqBhiF,EAAKqB,MAAM,IA7B3B,eAiCH+gF,EAAYpiF,EAAKqB,MAAM2gF,GAAoBh9E,MAAMm9E,GAEnDE,EAAqB,KAnChBI,EAAAxhF,KAAA,GAqCgBjB,EAAK2C,oBAAoBkrE,EAAWxqE,MAAM,eArC1D,aAqCT0+E,EArCSU,EAAArhF,MAAA,CAAAqhF,EAAAxhF,KAAA,gBAAAwhF,EAAAxhF,KAAA,GA0CkCqD,QAAQC,IAAI,CACnDvE,EAAKsoC,iBAAiBulC,EAAWxqE,OACjCrD,EAAK2C,oBAAoBkrE,EAAWxqE,MAAMwqE,EAAWxiC,UAAUk4B,aAAaj3D,KAAKuhE,EAAWxiC,UAAUk4B,aAAar6B,UA5C9G,QAAAo5C,EAAAG,EAAArhF,KAAAmhF,EAAAhjF,OAAAmF,EAAA,EAAAnF,CAAA+iF,EAAA,GA0CF30D,EA1CE40D,EAAA,IA0CYhf,EA1CZgf,EAAA,MAgDLhf,EAAevjE,EAAKgD,iBAAiBugE,EAAasK,EAAW5qE,UAC7Do/E,EAAqBriF,EAAKgD,iBAAiB++E,EAAiBp0D,EAAc41C,IAjDrE,YAsDL8e,EAtDK,CAAAI,EAAAxhF,KAAA,gBAAAwhF,EAAAxhF,KAAA,GAuDoBjB,EAAK8E,oBAAoBu9E,EAAmBh/E,EAAMlD,GAAY,GAvDlF,QAuDPkiF,EAvDOI,EAAArhF,KAwDP8gF,EAAUE,EAAUn9E,IAAIo9E,GAAoBr9E,MAAM,KAIlDhF,EAAKkF,cAAc1B,EAAc0+E,GA5D1B,eAAAO,EAAAlhF,OAAA,SAgEJ2gF,GAhEI,yBAAAO,EAAAjhF,SAAAsgF,EAAAniF,KAAA,cAn/GK,gBAAAgjF,EAAAC,GAAA,OAAAf,EAAA3/E,MAAAvC,KAAAwC,YAAA,GAAAxC,KAqjHlBswE,aArjHkB,eAAA4S,EAAAtjF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAqjHH,SAAAmiF,EAAOC,GAAP,IAAAC,EAAA,OAAAtiF,EAAAtB,EAAA0B,KAAA,SAAAmiF,GAAA,cAAAA,EAAAjiF,KAAAiiF,EAAAhiF,MAAA,cAAAgiF,EAAAhiF,KAAA,EACSjB,EAAK2C,oBAAoB,cAAc,aAAa,CAACogF,IAD9D,YACTC,EADSC,EAAA7hF,MAAA,CAAA6hF,EAAAhiF,KAAA,eAAAgiF,EAAA1hF,OAAA,SAGJvB,EAAKqB,MAAM2hF,IAHP,cAAAC,EAAA1hF,OAAA,SAKN,MALM,wBAAA0hF,EAAAzhF,SAAAshF,EAAAnjF,SArjHG,gBAAAujF,GAAA,OAAAL,EAAA3gF,MAAAvC,KAAAwC,YAAA,GAAAxC,KA4jHlB+iF,oBA5jHkB,eAAAS,EAAA5jF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA4jHI,SAAAyiF,EAAOjjF,GAAP,IAAA4hF,EAAAv+E,EAAAsC,EAAA+nE,EAAAhqE,EAAAw/E,EAAAC,EAAAC,EAAAP,EAAAQ,EAAAz9E,EAAAo8E,EAAAsB,EAAAthF,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAA4iF,GAAA,cAAAA,EAAA1iF,KAAA0iF,EAAAziF,MAAA,UAAmB8gF,EAAnB0B,EAAAhhF,OAAA,QAAAC,IAAA+gF,EAAA,GAAAA,EAAA,GAAoC,KAElDjgF,EAFc,uBAAAY,OAEyBjE,EAAYkE,KAAKhB,MAF1C,KAAAe,OAEmD29E,GAEpD,QADbj8E,EAAa9F,EAAKkG,cAAc1C,KACVxD,EAAKqB,MAAMyE,GAAYxE,QAJ/B,CAAAoiF,EAAAziF,KAAA,eAAAyiF,EAAAniF,OAAA,SAKXuE,GALW,YAQd+nE,EAAa1tE,EAAYyP,UAAUyH,KAAM,SAAA3N,GAAC,MAAgB,aAAXA,EAAE4C,QARnC,CAAAo3E,EAAAziF,KAAA,gBAAAyiF,EAAAziF,KAAA,EAYYjB,EAAKyE,mBAAmBtE,GAAY,GAAM,GAZtD,UAYZ0D,EAZY6/E,EAAAtiF,OAaZiiF,EAAyBx/E,EAAgBgJ,yBAAyBghE,EAAW1nE,QAAQ8J,kBAG7DozE,EAAuBxqD,IAAI,MAhBvC,CAAA6qD,EAAAziF,KAAA,gBAAAyiF,EAAAziF,KAAA,GAsBNqD,QAAQC,IAAI,CACpBvE,EAAKiwE,aAAapC,EAAW1nE,SAC7BnG,EAAK2C,oBAAoBkrE,EAAWxqE,MAAM,iBAxB5B,WAAAigF,EAAAI,EAAAtiF,KAAAmiF,EAAAhkF,OAAAmF,EAAA,EAAAnF,CAAA+jF,EAAA,GAoBdN,EApBcO,EAAA,GAqBdC,EArBcD,EAAA,IA2BZP,IAAaQ,EA3BD,CAAAE,EAAAziF,KAAA,YA8BT8gF,EA9BS,CAAA2B,EAAAziF,KAAA,gBAAAyiF,EAAAziF,KAAA,GA+BajB,EAAK2C,oBAAoBkrE,EAAWxqE,MAAM,YAAY,CAAClD,EAAYkE,KAAK8B,UA/BrF,QA+BZ47E,EA/BY2B,EAAAtiF,KAAA,YAkCV2gF,EAlCU,CAAA2B,EAAAziF,KAAA,gBAqCN8E,EAAgB/F,EAAKO,gBAAgB,CAAC,UAAU,kBAGhD4hF,EAAmBniF,EAAKqB,MAAM2hF,GAAWh+E,MAAMhF,EAAKqB,MAAM0E,IAAgBd,IAAI,MAEpFjF,EAAKkF,cAAc1B,EAAc2+E,GA1CrBuB,EAAAniF,OAAA,SA4CL4gF,GA5CK,eAAAuB,EAAAniF,OAAA,SAkDb,MAlDa,yBAAAmiF,EAAAliF,SAAA4hF,EAAAzjF,SA5jHJ,gBAAAgkF,GAAA,OAAAR,EAAAjhF,MAAAvC,KAAAwC,YAAA,GAAAxC,KAgnHlBmwE,wBAhnHkBvwE,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAgnHQ,SAAAijF,IAAA,IAAAziF,EAAAoF,EAAAwB,EAAA87E,EAAA1hF,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAgjF,GAAA,cAAAA,EAAA9iF,KAAA8iF,EAAA7iF,MAAA,UAAOE,EAAP0iF,EAAAphF,OAAA,QAAAC,IAAAmhF,EAAA,GAAAA,EAAA,GAAe,KAAKt9E,EAApBs9E,EAAAphF,OAAA,QAAAC,IAAAmhF,EAAA,GAAAA,EAAA,GAAoC,KACvD1iF,IACHA,EAAUnB,EAAKJ,MAAMuB,UAElBoF,GAAmBvG,EAAKJ,MAAMgH,mBACjCL,EAAkBvG,EAAKJ,MAAMiH,oBAAoB7G,EAAKJ,MAAMgH,mBAGzDzF,GAAYoF,EARO,CAAAu9E,EAAA7iF,KAAA,eAAA6iF,EAAAviF,OAAA,UASf,GATe,cAYpBwG,EAAS/H,EAAKqB,MAAM,GAZAyiF,EAAA7iF,KAAA,EAalBjB,EAAK8G,aAAavH,OAAOwH,KAAKR,GAA9B,eAAAw9E,EAAAxkF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAA+C,SAAAqjF,EAAO3gF,GAAP,IAAAlD,EAAA0tE,EAAAoW,EAAAC,EAAAlB,EAAA37E,EAAA,OAAA3G,EAAAtB,EAAA0B,KAAA,SAAAqjF,GAAA,cAAAA,EAAAnjF,KAAAmjF,EAAAljF,MAAA,UAC7Cd,EAAcoG,EAAgBlD,KAC9BwqE,EAAa1tE,EAAYyP,UAAUyH,KAAM,SAAA3N,GAAC,MAAgB,aAAXA,EAAE4C,QAFJ,CAAA63E,EAAAljF,KAAA,gBAAAkjF,EAAAljF,KAAA,EAOvCqD,QAAQC,IAAI,CACpBvE,EAAKiwE,aAAapC,EAAW1nE,SAC7BnG,EAAKwH,iBAAiBrG,EAAQhB,KATiB,OAAA8jF,EAAAE,EAAA/iF,KAAA8iF,EAAA3kF,OAAAmF,EAAA,EAAAnF,CAAA0kF,EAAA,GAK/CjB,EAL+CkB,EAAA,GAM/C78E,EAN+C68E,EAAA,GAY7ClB,GAAa37E,IACfU,EAASA,EAAON,KAAKu7E,EAAUh+E,MAAMqC,KAbU,yBAAA88E,EAAA3iF,SAAAwiF,EAAArkF,SAA/C,gBAAAykF,GAAA,OAAAL,EAAA7hF,MAAAvC,KAAAwC,YAAA,IAbkB,cAAA2hF,EAAAviF,OAAA,SA+BjBwG,GA/BiB,yBAAA+7E,EAAAtiF,SAAAoiF,EAAAjkF,SAhnHRA,KAipHlBwwE,cAjpHkB5wE,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAipHF,SAAA0jF,IAAA,IAAA99E,EAAAwB,EAAAC,EAAAs8E,EAAAniF,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAyjF,GAAA,cAAAA,EAAAvjF,KAAAujF,EAAAtjF,MAAA,eAAOsF,EAAP+9E,EAAA7hF,OAAA,QAAAC,IAAA4hF,EAAA,GAAAA,EAAA,GAAuB,OACbtkF,EAAKJ,MAAMgH,mBACjCL,EAAkBvG,EAAKJ,MAAMiH,oBAAoB7G,EAAKJ,MAAMgH,mBAE1DmB,EAAS/H,EAAKqB,MAAM,GACpB2G,EAAkBhI,EAAKqB,MAAM,GALnBkjF,EAAAtjF,KAAA,EAMRjB,EAAK8G,aAAavH,OAAOwH,KAAKR,GAA9B,eAAAi+E,EAAAjlF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAA+C,SAAA8jF,EAAOphF,GAAP,IAAAlD,EAAAukF,EAAAC,EAAAC,EAAA/gF,EAAA,OAAAnD,EAAAtB,EAAA0B,KAAA,SAAA+jF,GAAA,cAAAA,EAAA7jF,KAAA6jF,EAAA5jF,MAAA,cAC7Cd,EAAcoG,EAAgBlD,GADewhF,EAAA5jF,KAAA,EAEXqD,QAAQC,IAAI,CAClDvE,EAAK4hF,WAAWv+E,EAAMlD,GACtBH,EAAKyE,mBAAmBtE,GAAY,GAAM,KAJO,OAAAukF,EAAAG,EAAAzjF,KAAAujF,EAAAplF,OAAAmF,EAAA,EAAAnF,CAAAmlF,EAAA,GAE5CE,EAF4CD,EAAA,GAEpC9gF,EAFoC8gF,EAAA,GAO/CC,GAAW/gF,IACbkE,EAASA,EAAON,KAAKm9E,EAAQ5/E,MAAMnB,EAAgBmE,kBACnDA,EAAkBA,EAAgBP,KAAK5D,EAAgBmE,kBATN,wBAAA68E,EAAArjF,SAAAijF,EAAA9kF,SAA/C,gBAAAmlF,GAAA,OAAAN,EAAAtiF,MAAAvC,KAAAwC,YAAA,IANQ,cAoBd4F,EAASA,EAAO9C,IAAI+C,GApBNu8E,EAAAhjF,OAAA,SAsBPwG,GAtBO,wBAAAw8E,EAAA/iF,SAAA6iF,EAAA1kF,SAjpHEA,KAyqHlBolF,aAzqHkBxlF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAyqHH,SAAAqkF,IAAA,IAAAC,EAAAp+E,EAAA,OAAAnG,EAAAtB,EAAA0B,KAAA,SAAAokF,GAAA,cAAAA,EAAAlkF,KAAAkkF,EAAAjkF,MAAA,cAGbysD,MAAMy3B,UAAUC,IAAM,WACpB,OAAOzlF,KAAK+iE,OAAO,SAAS2iB,EAAIC,GAAM,OAAOD,EAAKC,GAAO,IAG3D53B,MAAMy3B,UAAU3sE,IAAM,WACpB,OAAOH,KAAKG,IAAItW,MAAM,KAAMvC,OAG9B+tD,MAAMy3B,UAAUI,IAAM,WACpB,OAAO5lF,KAAKylF,MAAMzlF,KAAK8C,QAGnBwiF,EAAM,GACNp+E,EAAsB7G,EAAKJ,MAAMiH,oBAhB1Bq+E,EAAAjkF,KAAA,EAiBPjB,EAAK8G,aAAavH,OAAOwH,KAAKF,GAA9B,eAAA2+E,EAAAjmF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAoD,SAAA8kF,EAAOx5C,GAAP,IAAA1lC,EAAAmL,EAAA,OAAAhR,EAAAtB,EAAA0B,KAAA,SAAA4kF,GAAA,cAAAA,EAAA1kF,KAAA0kF,EAAAzkF,MAAA,cAClDsF,EAAkBM,EAAoBolC,GACtCv6B,EAAsB,SAAbu6B,EAFyCy5C,EAAAzkF,KAAA,EAGlDjB,EAAK8G,aAAavH,OAAOwH,KAAKR,GAA9B,eAAAo/E,EAAApmF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAgD,SAAAilF,EAAOviF,GAAP,IAAAlD,EAAA8xC,EAAA4zC,EAAAj2E,EAAAk2E,EAAAC,EAAAC,EAAAC,EAAA,OAAAvlF,EAAAtB,EAAA0B,KAAA,SAAAolF,GAAA,cAAAA,EAAAllF,KAAAklF,EAAAjlF,MAAA,cAC9Cd,EAAcoG,EAAgBlD,GADgB6iF,EAAAjlF,KAAA,EAEhCjB,EAAKkZ,gBAAgB/Y,EAAYgG,QAAQuL,EAAO,KAAK,MAAK,EAAM,KAAK,OAFrC,OAE9CugC,EAF8Ci0C,EAAA9kF,KAG9CykF,EAAS,GACXj2E,EAAY,KACVk2E,EAAO,GACPC,EAAS,GACTC,EAAW,GAEXC,EAAUh0C,EAAMA,EAAMxvC,OAAO,GAEnCwvC,EAAMxoC,QAAS,SAAAmrD,GACRhlD,IACHi2E,EAAOz1E,KAAK,SACZy1E,EAAOz1E,KAAK,QAGZR,EAAY,GACZq2E,EAAQE,cAAc18E,QAAS,SAAA28E,GAC7B,IAAMhvE,EAAgBjX,EAAYyP,UAAUyH,KAAM,SAAAgvE,GAAE,OAAMA,EAAGlgF,QAAQ8J,gBAAkBm2E,EAAGp2E,aAAaC,gBACnGmH,GACFxH,EAAUQ,KAAKgH,KAKnByuE,EAAOz1E,KAAK,YACZy1E,EAAOz1E,KAAK,cAEZ21E,EAAM,KAAW,GACjBC,EAAQ,KAAW,GAEnBp2E,EAAUnG,QAAS,SAAAC,GACjBm8E,EAAOz1E,KAAK,OAAO1G,EAAE4C,MACrBu5E,EAAOz1E,KAAK,SAAS1G,EAAE4C,MAEvBy5E,EAAOr8E,EAAE4C,MAAQ,GACjB05E,EAASt8E,EAAE4C,MAAQ,KAGrBw5E,EAAK11E,KAAKy1E,EAAOp1E,KAAK,OAGxB,IAAMie,EAAOk/B,IAAmB,IAAZgH,EAAEz7C,WAAgBR,OAAO,cACvC2tE,EAAOtmF,EAAKqB,MAAMuzD,EAAEx7C,UAAUnU,IAAI,MAAMkL,QAAQ,GAChDqG,EAAQrL,WAAWypD,EAAE2xB,WAErBC,EAAM,GACZA,EAAIp2E,KAAJ,GAAAhM,OAAYf,EAAZ,KAAAe,OAAqB6nC,IACrBu6C,EAAIp2E,KAAKse,GACT83D,EAAIp2E,KAAKk2E,GACTE,EAAIp2E,KAAKoG,GAELkY,GAAM,eACRq3D,EAAM,KAAS31E,KAAKjF,WAAWm7E,IAC/BN,EAAQ,KAAS51E,KAAKjF,WAAWqL,KAGnC5G,EAAUnG,QAAS,SAAAg9E,GACjB,IAAMC,EAAQ9xB,EAAEuxB,cAAc9uE,KAAM,SAAA3N,GAAC,OAAKA,EAAEsG,aAAaC,gBAAkBw2E,EAAMtgF,QAAQ8J,gBACrF02E,EAAQ,GACRC,EAAS,GACb,GAAIF,EAAM,CAGR,GAFAE,EAAU5mF,EAAKqB,MAAMqlF,EAAMG,WAAWvlF,QAAwC,UAA9B6J,WAAWu7E,EAAMG,WACjEF,EAAS3mF,EAAKqB,MAAMqlF,EAAMJ,MAAMhlF,QAA6C,UAAnCtB,EAAKqB,MAAMqlF,EAAMJ,MAAMrhF,IAAI,MAClB,qBAAxCyhF,EAAK,GAAAtiF,OAAIqiF,EAAMn6E,KAAV,kBAA+C,CAC7D,IAAMw6E,EAAiB9mF,EAAKqB,MAAMqlF,EAAK,GAAAtiF,OAAIqiF,EAAMn6E,KAAV,mBAAgCrH,IAAI,MACtE6hF,EAAexlF,UAClBqlF,EAAQA,EAAMl/E,KAAKq/E,IAInBp4D,GAAM,eACHptB,MAAM6J,WAAWw7E,KACpBZ,EAAOU,EAAMn6E,MAAM8D,KAAKjF,WAAWw7E,IAEhCrlF,MAAM6J,WAAWy7E,KACpBZ,EAASS,EAAMn6E,MAAM8D,KAAKjF,WAAWy7E,KAK3CJ,EAAIp2E,KAAKu2E,GACTH,EAAIp2E,KAAKw2E,KAGXd,EAAK11E,KAAKo2E,EAAI/1E,KAAK,QAGrBlR,OAAOwH,KAAKg/E,GAAQt8E,QAAS,SAAAC,GAC3B,IAAMq9E,EAAUhB,EAAOr8E,GAAG07E,MAAMW,EAAOr8E,GAAGjH,OAC1CzC,EAAKkiC,UAAL,GAAA99B,OAAkBf,EAAlB,KAAAe,OAA2B6nC,EAA3B,KAAA7nC,OAAuCsF,EAAvC,iBAAAtF,OAAwD2iF,MAG1DxnF,OAAOwH,KAAKi/E,GAAUv8E,QAAS,SAAAC,GAC7B,IAAMiwB,EAAWqsD,EAASt8E,GAAG07E,MAAMY,EAASt8E,GAAGjH,OAC/CzC,EAAKkiC,UAAL,GAAA99B,OAAkBf,EAAlB,KAAAe,OAA2B6nC,EAA3B,KAAA7nC,OAAuCsF,EAAvC,kBAAAtF,OAAyDu1B,MAO3DsrD,EAAI70E,KAAK01E,EAAKr1E,KAAK,OAvGiC,yBAAAy1E,EAAA1kF,SAAAokF,EAAAjmF,SAAhD,gBAAAqnF,GAAA,OAAArB,EAAAzjF,MAAAvC,KAAAwC,YAAA,IAHkD,wBAAAujF,EAAAlkF,SAAAikF,EAAA9lF,SAApD,gBAAAsnF,GAAA,OAAAzB,EAAAtjF,MAAAvC,KAAAwC,YAAA,IAjBO,OA+HbnC,EAAKkiC,UAAU+iD,EAAIx0E,KAAK,OA/HX,wBAAAy0E,EAAA1jF,SAAAwjF,EAAArlF,SAzqHGA,KA0yHlBkwE,gBA1yHkBtwE,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA0yHA,SAAAumF,IAAA,IAAAtpE,EAAArX,EAAAukB,EAAA/iB,EAAAo/E,EAAAhlF,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAsmF,GAAA,cAAAA,EAAApmF,KAAAomF,EAAAnmF,MAAA,cAAO2c,EAAPupE,EAAA1kF,OAAA,QAAAC,IAAAykF,EAAA,GAAAA,EAAA,GAAgB,KAAK5gF,EAArB4gF,EAAA1kF,OAAA,QAAAC,IAAAykF,EAAA,GAAAA,EAAA,GAAqC,KAAKr8D,EAA1Cq8D,EAAA1kF,OAAA,QAAAC,IAAAykF,EAAA,GAAAA,EAAA,GAAuD,KACnEp/E,EAAS/H,EAAKqB,MAAM,GAEnBkF,IACHA,EAAkBvG,EAAKJ,MAAMiH,oBAAoB7G,EAAKJ,MAAMgH,mBAJ9CwgF,EAAAnmF,KAAA,EAOVjB,EAAK8G,aAAavH,OAAOwH,KAAKR,GAA9B,eAAA8gF,EAAA9nF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAA+C,SAAA2mF,EAAOjkF,GAAP,IAAAlD,EAAA8oB,EAAAs+D,EAAA,OAAA7mF,EAAAtB,EAAA0B,KAAA,SAAA0mF,GAAA,cAAAA,EAAAxmF,KAAAwmF,EAAAvmF,MAAA,cAC7Cd,EAAcoG,EAAgBlD,GAC9B4lB,EAAgBrL,EAAW,CAACA,GAAY,KAFK4pE,EAAAvmF,KAAA,EAGpBjB,EAAK05E,qBAAqBv5E,EAAYkE,KAAK8B,QAAQ2kB,EAAa7B,GAH5C,QAG7Cs+D,EAH6CC,EAAApmF,OAI3BmmF,EAAiB5N,QACvC5xE,EAASA,EAAON,KAAK8/E,EAAiB5N,QALW,wBAAA6N,EAAAhmF,SAAA8lF,EAAA3nF,SAA/C,gBAAA8nF,GAAA,OAAAJ,EAAAnlF,MAAAvC,KAAAwC,YAAA,IAPU,cAAAilF,EAAA7lF,OAAA,SAeTwG,GAfS,wBAAAq/E,EAAA5lF,SAAA0lF,EAAAvnF,SA1yHAA,KA2zHlBowE,gBAAkB,WAIhB,OAHK/vE,EAAK4sD,eACR5sD,EAAK4sD,aAAe,IAAI7sD,EAAaC,EAAKJ,QAErCI,EAAK4sD,cA/zHIjtD,KAi0HlBgW,kBAAoB,SAACxV,GACnB,IAAM4H,EAAS,GACT+J,EAAY9R,EAAKO,gBAAgB,CAAC,cAexC,OAdAhB,OAAOwH,KAAK+K,GAAWrI,QAAS,SAAAmU,GAC9B,IAAMZ,EAAiBlL,EAAU8L,GAC5BZ,EAAe7Y,UAGY,SAA5B6Y,EAAeg2B,SACjBjrC,EAAO6V,GAAYZ,EAEG7c,EAAYyP,UAAUyH,KAAM,SAAA3N,GAAC,OAAKA,EAAEvF,SAAWuF,EAAE4C,KAAK2D,gBAAkB+M,EAAeg2B,SAAS/iC,kBAEpHlI,EAAO6V,GAAYZ,MAIlBjV,GAl1HSpI,KAo1HlBgI,qBAAuB,SAAC+/E,EAAM79E,GAC5B,IAAM9D,EAAgB/F,EAAKqB,MAAMrB,EAAKO,gBAAgB,CAAC,UAAU,mBAEjE,IADAmnF,EAAQ1nF,EAAKqB,MAAMqmF,MACLA,EAAMpmF,QAAQ,CAC1B,OAAQuI,GACN,IAAK,MACH,IAAM6jE,EAAe3nE,EAAcd,IAAI,YACvCyiF,EAAQA,EAAM1iF,MAAM0oE,GACtB,MACA,IAAK,OACH,IAAMC,EAAgB5nE,EAAcd,IAAI,SACxCyiF,EAAQA,EAAM1iF,MAAM2oE,GACtB,MACA,IAAK,QACH,IAAMC,EAAiB7nE,EAAcd,IAAI,IACzCyiF,EAAQA,EAAM1iF,MAAM4oE,GACtB,MACA,IAAK,OACH8Z,EAAQA,EAAM1iF,MAAMe,GAKxB,OAAO2hF,EAET,OAAO,MA72HS/nF,KA+2HlBgoF,kCA/2HkB,eAAAC,EAAAroF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA+2HkB,SAAAknF,EAAO1mF,GAAP,IAAAhB,EAAA8oB,EAAA6+D,EAAAh2E,EAAAi2E,EAAA5lF,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAknF,GAAA,cAAAA,EAAAhnF,KAAAgnF,EAAA/mF,MAAA,cAAed,EAAf4nF,EAAAtlF,OAAA,QAAAC,IAAAqlF,EAAA,GAAAA,EAAA,GAA2B,KAAK9+D,EAAhC8+D,EAAAtlF,OAAA,QAAAC,IAAAqlF,EAAA,GAAAA,EAAA,GAA8C,KAC1ED,EAA4B,GAC5Bh2E,EAAY9R,EAAKO,gBAAgB,CAAC,cAFNynF,EAAA/mF,KAAA,EAI5BjB,EAAK8G,aAAavH,OAAOwH,KAAK+K,GAA9B,eAAAm2E,EAAA1oF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAyC,SAAAunF,EAAOtqE,GAAP,IAAAZ,EAAAzW,EAAAwB,EAAA6kD,EAAA,OAAAlsD,EAAAtB,EAAA0B,KAAA,SAAAqnF,GAAA,cAAAA,EAAAnnF,KAAAmnF,EAAAlnF,MAAA,WACzCgoB,GAAkBA,EAAcsL,SAAS3W,GADA,CAAAuqE,EAAAlnF,KAAA,eAAAknF,EAAA5mF,OAAA,qBAKvCyb,EAAiBlL,EAAU8L,IAEbzZ,QAPyB,CAAAgkF,EAAAlnF,KAAA,eAAAknF,EAAA5mF,OAAA,kBAWvCgF,EAAkB,IACRpG,EAAYkD,OAASlD,EAEjC4H,EAAS,KAdgCogF,EAAAvjF,GAerCgZ,EAfqCuqE,EAAAlnF,KAgBtC,SAhBsCknF,EAAAvjF,GAAA,GAmBtC,SAnBsCujF,EAAAvjF,GAAA,2BAAAujF,EAAAlnF,KAAA,GAiB1BjB,EAAK8vE,wBAAwB3uE,EAAQoF,GAjBX,eAiBzCwB,EAjByCogF,EAAA/mF,KAAA+mF,EAAA5mF,OAAA,2BAoBnCqrD,EAAe5sD,EAAK+vE,kBApBeoY,EAAAlnF,KAAA,GAqB1B2rD,EAAavmD,oBAAoBlF,EAAQoF,GArBf,eAqBzCwB,EArByCogF,EAAA/mF,KAAA+mF,EAAA5mF,OAAA,2BAAA4mF,EAAA5mF,OAAA,oBA2BzCwG,IACFA,EAASA,EAAO9C,IAAI,MAChB+X,EAAepV,wBACjBG,EAAS/H,EAAK2H,qBAAqBI,EAAOiV,EAAepV,wBAE3DkgF,EAA0BlqE,GAAY7V,GAhCK,yBAAAogF,EAAA3mF,SAAA0mF,EAAAvoF,SAAzC,gBAAAyoF,GAAA,OAAAH,EAAA/lF,MAAAvC,KAAAwC,YAAA,IAJ4B,cAAA6lF,EAAAzmF,OAAA,SAwC3BumF,GAxC2B,wBAAAE,EAAAxmF,SAAAqmF,EAAAloF,SA/2HlB,gBAAA0oF,GAAA,OAAAT,EAAA1lF,MAAAvC,KAAAwC,YAAA,GAAAxC,KAy5HlBoS,8BAz5HkB,eAAAu2E,EAAA/oF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAy5Hc,SAAA4nF,EAAOpoF,GAAP,IAAA8oB,EAAAu/D,EAAA12E,EAAA22E,EAAAtmF,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAA4nF,GAAA,cAAAA,EAAA1nF,KAAA0nF,EAAAznF,MAAA,cAAmBgoB,EAAnBw/D,EAAAhmF,OAAA,QAAAC,IAAA+lF,EAAA,GAAAA,EAAA,GAAiC,KACzDD,EAAwB,GACxB12E,EAAY9R,EAAKO,gBAAgB,CAAC,cAFVmoF,EAAAznF,KAAA,EAIxBjB,EAAK8G,aAAavH,OAAOwH,KAAK+K,GAA9B,eAAA62E,EAAAppF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAyC,SAAAioF,EAAOhrE,GAAP,IAAAZ,EAAA6rE,EAAAhb,EAAAjhB,EAAA,OAAAlsD,EAAAtB,EAAA0B,KAAA,SAAAgoF,GAAA,cAAAA,EAAA9nF,KAAA8nF,EAAA7nF,MAAA,WACzCgoB,GAAkBA,EAAcsL,SAAS3W,GADA,CAAAkrE,EAAA7nF,KAAA,eAAA6nF,EAAAvnF,OAAA,qBAKvCyb,EAAiBlL,EAAU8L,IAEbzZ,QAPyB,CAAA2kF,EAAA7nF,KAAA,eAAA6nF,EAAAvnF,OAAA,iBAWzCsnF,EAAW,KAX8BC,EAAAlkF,GAYrCgZ,EAZqCkrE,EAAA7nF,KAatC,SAbsC6nF,EAAAlkF,GAAA,EAmBtC,SAnBsCkkF,EAAAlkF,GAAA,wBAcnCipE,EAAa1tE,EAAYyP,UAAUyH,KAAM,SAAA3N,GAAC,MAAgB,aAAXA,EAAE4C,QAdd,CAAAw8E,EAAA7nF,KAAA,gBAAA6nF,EAAA7nF,KAAA,GAgBtBjB,EAAKiwE,aAAapC,EAAW1nE,SAhBP,QAgBvC0iF,EAhBuCC,EAAA1nF,KAAA,eAAA0nF,EAAAvnF,OAAA,2BAoBnCqrD,EAAe5sD,EAAK+vE,kBApBe+Y,EAAA7nF,KAAA,GAqBxB2rD,EAAavnD,SAASlF,EAAYkE,KAAK8B,SArBf,eAqBzC0iF,EArByCC,EAAA1nF,KAAA0nF,EAAAvnF,OAAA,2BAAAunF,EAAAvnF,OAAA,oBA2BzCsnF,IACFA,EAAWA,EAAS5jF,IAAI,MACpB+X,EAAepV,wBACjBihF,EAAW7oF,EAAK2H,qBAAqBkhF,EAAS7rE,EAAepV,wBAE/D4gF,EAAsB5qE,GAAYirE,GAhCS,yBAAAC,EAAAtnF,SAAAonF,EAAAjpF,SAAzC,gBAAAopF,GAAA,OAAAJ,EAAAzmF,MAAAvC,KAAAwC,YAAA,IAJwB,cAAAumF,EAAAnnF,OAAA,SAwCvBinF,GAxCuB,wBAAAE,EAAAlnF,SAAA+mF,EAAA5oF,SAz5Hd,gBAAAqpF,GAAA,OAAAV,EAAApmF,MAAAvC,KAAAwC,YAAA,GAAAxC,KAm8HlBiY,iBAn8HkB,eAAAqxE,EAAA1pF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAm8HC,SAAAuoF,EAAO7lF,EAAMlD,GAAb,IAAA8oB,EAAAnX,EAAA0B,EAAA21E,EAAAhnF,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAsoF,GAAA,cAAAA,EAAApoF,KAAAooF,EAAAnoF,MAAA,cAAyBgoB,EAAzBkgE,EAAA1mF,OAAA,QAAAC,IAAAymF,EAAA,GAAAA,EAAA,GAAuC,KAClDr3E,EAAY9R,EAAKO,gBAAgB,CAAC,cAClCiT,EAAgB,GAFL41E,EAAAnoF,KAAA,EAIXjB,EAAK8G,aAAavH,OAAOwH,KAAK+K,GAA9B,eAAAu3E,EAAA9pF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAyC,SAAA2oF,EAAO1rE,GAAP,IAAAZ,EAAAjV,EAAAlE,EAAA0lF,EAAAC,EAAAC,EAAApG,EAAAz2B,EAAA,OAAAlsD,EAAAtB,EAAA0B,KAAA,SAAA4oF,GAAA,cAAAA,EAAA1oF,KAAA0oF,EAAAzoF,MAAA,WAEzCgoB,GAAkBA,EAAcsL,SAAS3W,GAFA,CAAA8rE,EAAAzoF,KAAA,eAAAyoF,EAAAnoF,OAAA,qBAMvCyb,EAAiBlL,EAAU8L,IAEbzZ,UAA6C,IAAlC6Y,EAAei2B,eARD,CAAAy2C,EAAAzoF,KAAA,eAAAyoF,EAAAnoF,OAAA,iBAYzCwG,EAAS,KACTlE,EAAkB,KAbuB6lF,EAAA9kF,GAerCgZ,EAfqC8rE,EAAAzoF,KAgBtC,SAhBsCyoF,EAAA9kF,GAAA,GAsCtC,SAtCsC8kF,EAAA9kF,GAAA,oBAAA8kF,EAAA7xE,GAiBjCmF,EAAei2B,eAjBkBy2C,EAAAzoF,MAAAyoF,EAAA7xE,GAAA,yBAAA6xE,EAAAzoF,KAAA,GAoBJqD,QAAQC,IAAI,CAC3CvE,EAAK4hF,WAAWv+E,EAAMlD,GACtBH,EAAKyE,mBAAmBtE,GAAY,GAAM,KAtBP,eAAAopF,EAAAG,EAAAtoF,KAAAooF,EAAAjqF,OAAAmF,EAAA,EAAAnF,CAAAgqF,EAAA,GAoBpCxhF,EApBoCyhF,EAAA,IAoB7B3lF,EApB6B2lF,EAAA,MA2B7BC,EAAetpF,EAAYyP,UAAUyH,KAAM,SAAA3N,GAAC,MAAgB,aAAXA,EAAE4C,SAEnDzI,EAAgBgJ,yBAAyB48E,EAAatjF,QAAQ8J,iBAC1DozE,EAAyBx/E,EAAgBgJ,yBAAyB48E,EAAatjF,QAAQ8J,eAC7FlI,EAASA,EAAO/C,MAAMq+E,IA/BSqG,EAAAnoF,OAAA,2BAAAmoF,EAAAnoF,OAAA,oBAuCnCqrD,EAAe5sD,EAAK+vE,kBAvCe2Z,EAAAzwB,GAwCjCj8C,EAAei2B,eAxCkBy2C,EAAAzoF,KAyClC,QAzCkCyoF,EAAAzwB,GAAA,GA4ClC,iBA5CkCywB,EAAAzwB,GAAA,GAmDlC,qBAnDkCywB,EAAAzwB,GAAA,2BAAAywB,EAAAzoF,KAAA,GA0CtB2rD,EAAa1pD,OAAOG,EAAMlD,GA1CJ,eA0CrC4H,EA1CqC2hF,EAAAtoF,KAAAsoF,EAAAnoF,OAAA,2BAAAmoF,EAAAzoF,KAAA,GA6CtB2rD,EAAavnD,SAASlF,EAAYkE,KAAK8B,SA7CjB,eA6CrC4B,EA7CqC2hF,EAAAtoF,QA+CnC2G,EAAS/H,EAAKgD,iBAAiB+E,EAAO,IACtCA,EAAS/H,EAAK2H,qBAAqBI,EAAOiV,EAAepV,wBAhDtB8hF,EAAAnoF,OAAA,2BAAAmoF,EAAAzoF,KAAA,GAoDtB2rD,EAAavmD,oBAAoBlG,GApDX,eAoDrC4H,EApDqC2hF,EAAAtoF,KAAAsoF,EAAAnoF,OAAA,2BAAAmoF,EAAAnoF,OAAA,mCAAAmoF,EAAAnoF,OAAA,oBA8D9B,OAAXwG,GAAmB/H,EAAKqB,MAAM0G,GAAQsO,GAAG,KAC3C7C,EAAcoK,GAAY7V,GA/DiB,yBAAA2hF,EAAAloF,SAAA8nF,EAAA3pF,SAAzC,gBAAAgqF,GAAA,OAAAN,EAAAnnF,MAAAvC,KAAAwC,YAAA,IAJW,cAAAinF,EAAA7nF,OAAA,SAuEViS,GAvEU,wBAAA41E,EAAA5nF,SAAA0nF,EAAAvpF,SAn8HD,gBAAAiqF,EAAAC,GAAA,OAAAZ,EAAA/mF,MAAAvC,KAAAwC,YAAA,GAAAxC,KA4gIlB+5E,qBA5gIkBn6E,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA4gIK,SAAAmpF,IAAA,IAAA3jF,EAAA2kB,EAAA7B,EAAAnX,EAAAinE,EAAAgR,EAAA5nF,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAkpF,GAAA,cAAAA,EAAAhpF,KAAAgpF,EAAA/oF,MAAA,cAAOkF,EAAP4jF,EAAAtnF,OAAA,QAAAC,IAAAqnF,EAAA,GAAAA,EAAA,GAAe,KAAKj/D,EAApBi/D,EAAAtnF,OAAA,QAAAC,IAAAqnF,EAAA,GAAAA,EAAA,GAAiC,MAAM9gE,EAAvC8gE,EAAAtnF,OAAA,QAAAC,IAAAqnF,EAAA,GAAAA,EAAA,GAAqD,KACrE5jF,IACHA,EAAUnG,EAAKJ,MAAMO,YAAYkE,KAAK8B,SAElC2L,EAAY9R,EAAKO,gBAAgB,CAAC,cAClCw4E,EAAoB,GALLiR,EAAA/oF,KAAA,EAOfjB,EAAK8G,aAAavH,OAAOwH,KAAK+K,GAA9B,eAAAm4E,EAAA1qF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAyC,SAAAupF,EAAO7mF,GAAP,IAAA2Z,EAAA8M,EAAAqgE,EAAAC,EAAA,OAAA1pF,EAAAtB,EAAA0B,KAAA,SAAAupF,GAAA,cAAAA,EAAArpF,KAAAqpF,EAAAppF,MAAA,WAEzCgoB,GAAkBA,EAAcsL,SAASlxB,GAFA,CAAAgnF,EAAAppF,KAAA,eAAAopF,EAAA9oF,OAAA,qBAMvCyb,EAAiBlL,EAAUzO,IAEbc,QARyB,CAAAkmF,EAAAppF,KAAA,eAAAopF,EAAA9oF,OAAA,wBAAA8oF,EAAAppF,KAAA,EAajBjB,EAAK+zE,mBAAmB1wE,EAAM8C,GAbb,YAazC2jB,EAbyCugE,EAAAjpF,MAAA,CAAAipF,EAAAppF,KAAA,YAiBvCkpF,EAAsB,MACtBr/D,EAlBuC,CAAAu/D,EAAAppF,KAAA,gBAmBnCmpF,EAAkBpqF,EAAKO,gBAAgB,CAAC,QAAQ,SAASuqB,IAnBtBu/D,EAAArpF,KAAA,GAAAqpF,EAAAppF,KAAA,GAqBXjB,EAAK2E,yBAAyBylF,EAAgBptE,GArBnC,QAqBvCmtE,EArBuCE,EAAAjpF,KAAAipF,EAAAppF,KAAA,iBAAAopF,EAAArpF,KAAA,GAAAqpF,EAAAzlF,GAAAylF,EAAA,kBA4B3CtR,EAAkB11E,GAASrD,EAAKgD,iBAAiB8mB,EAAgBhY,EAAUzO,GAAOJ,SAASknF,GAGtFpR,EAAkBY,QACrBZ,EAAkBY,MAAQ35E,EAAKqB,MAAM,IAIvC03E,EAAkBY,MAAQZ,EAAkBY,MAAMlyE,KAAKsxE,EAAkB11E,IApC9B,yBAAAgnF,EAAA7oF,SAAA0oF,EAAAvqF,KAAA,cAAzC,gBAAA2qF,GAAA,OAAAL,EAAA/nF,MAAAvC,KAAAwC,YAAA,IAPe,cAAA6nF,EAAAzoF,OAAA,SA+Cdw3E,GA/Cc,wBAAAiR,EAAAxoF,SAAAsoF,EAAAnqF,SA5gILA,KA6jIlB4qF,2BAA6B,SAACpkF,GAC5B,IAAKA,EACH,OAAO,EAET,IAAM2L,EAAY9R,EAAKO,gBAAgB,CAAC,cACxC,OAAOhB,OAAO0X,OAAOnF,GAAWuF,KAAM,SAAAlX,GAAW,OAAKA,EAAYgE,SAAWhE,EAAYgG,QAAQ8J,gBAAkB9J,EAAQ8J,iBAlkI3GtQ,KAokIlBu6B,6BApkIkB36B,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAokIa,SAAA6pF,IAAA,IAAArpF,EAAAoF,EAAAukB,EAAA2/D,EAAA5gE,EAAA6gE,EAAAC,EAAAxoF,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAA8pF,GAAA,cAAAA,EAAA5pF,KAAA4pF,EAAA3pF,MAAA,cAAOE,EAAPwpF,EAAAloF,OAAA,QAAAC,IAAAioF,EAAA,GAAAA,EAAA,GAAe,KAAKpkF,EAApBokF,EAAAloF,OAAA,QAAAC,IAAAioF,EAAA,GAAAA,EAAA,GAAoC,KAAK7/D,EAAzC6/D,EAAAloF,OAAA,QAAAC,IAAAioF,EAAA,GAAAA,EAAA,GAAsD,KAAKF,IAA3DE,EAAAloF,OAAA,QAAAC,IAAAioF,EAAA,KAAAA,EAAA,GAAAC,EAAA3pF,KAAA,EACOjB,EAAK4pB,yBAAyBzoB,EAAQoF,EAAgBukB,EAAa,KAAK2/D,GAD/E,YACvB5gE,EADuB+gE,EAAAxpF,MAAA,CAAAwpF,EAAA3pF,KAAA,gBAGrBypF,EAAoBnrF,OAAO0X,OAAO4S,GAAuB64C,OAAQ,SAACmoB,EAAKC,GAE3E,OADAD,EAAMA,EAAIpjF,KAAKzH,EAAKqB,MAAMypF,KAEzB9qF,EAAKqB,MAAM,IANaupF,EAAArpF,OAAA,SAQpBmpF,GARoB,eAAAE,EAAArpF,OAAA,SAUtBvB,EAAKqB,MAAM,IAVW,yBAAAupF,EAAAppF,SAAAgpF,EAAA7qF,SApkIbA,KAglIlBiqB,yBAhlIkBrqB,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAglIS,SAAAoqF,IAAA,IAAA5pF,EAAAoF,EAAAukB,EAAAkgE,EAAAP,EAAA1iF,EAAAkjF,EAAA9oF,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAoqF,GAAA,cAAAA,EAAAlqF,KAAAkqF,EAAAjqF,MAAA,cAAOE,EAAP8pF,EAAAxoF,OAAA,QAAAC,IAAAuoF,EAAA,GAAAA,EAAA,GAAe,KAAK1kF,EAApB0kF,EAAAxoF,OAAA,QAAAC,IAAAuoF,EAAA,GAAAA,EAAA,GAAoC,KAAKngE,EAAzCmgE,EAAAxoF,OAAA,QAAAC,IAAAuoF,EAAA,GAAAA,EAAA,GAAsD,KAAKD,EAA3DC,EAAAxoF,OAAA,QAAAC,IAAAuoF,EAAA,GAAAA,EAAA,GAAgF,KAAKR,EAArFQ,EAAAxoF,OAAA,QAAAC,IAAAuoF,EAAA,IAAAA,EAAA,GACpB9pF,IACHA,EAAUnB,EAAKJ,MAAMuB,UAElBoF,GAAmBvG,EAAKJ,MAAMiH,qBAAuB7G,EAAKJ,MAAMgH,mBACnEL,EAAkBvG,EAAKJ,MAAMiH,oBAAoB7G,EAAKJ,MAAMgH,mBAGxDmB,EAAS,GARUmjF,EAAAjqF,KAAA,GAUnBjB,EAAK8G,aAAavH,OAAOwH,KAAKR,GAA9B,eAAA4kF,EAAA5rF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAA+C,SAAAyqF,EAAO/nF,GAAP,IAAAma,EAAA6tE,EAAA,OAAA3qF,EAAAtB,EAAA0B,KAAA,SAAAwqF,GAAA,cAAAA,EAAAtqF,KAAAsqF,EAAArqF,MAAA,cAC7Cuc,EAAkBjX,EAAgBlD,GAAOgB,KADIinF,EAAArqF,KAAA,EAIpBjB,EAAK2C,oBAAoB6a,EAAgBna,MAAM,sBAAsB,CAAClC,IAJlD,YAI7CkqF,EAJ6CC,EAAAlqF,MAAA,CAAAkqF,EAAArqF,KAAA,eAAAqqF,EAAArqF,KAAA,EAO3CjB,EAAK8G,aAAaukF,EAAlB,eAAAE,EAAAhsF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAoC,SAAA6qF,EAAOV,EAAe7tE,GAAtB,IAAAwuE,EAAAzuE,EAAAmtE,EAAAC,EAAA,OAAA1pF,EAAAtB,EAAA0B,KAAA,SAAA4qF,GAAA,cAAAA,EAAA1qF,KAAA0qF,EAAAzqF,MAAA,cACxC6pF,EAAiB9qF,EAAKqB,MAAMypF,GADYY,EAAAzqF,KAAA,EAGVjB,EAAK2C,oBAAoB6a,EAAgBna,MAAM,YAAY,CAAC4Z,IAHlD,YAGlCwuE,EAHkCC,EAAAtqF,MAAA,CAAAsqF,EAAAzqF,KAAA,cAOhC+b,EAAiBguE,GAA8ChrF,EAAKuqF,2BAA2BkB,KAE7EhB,IAAoBztE,EAAegF,cAAgBhF,EAAe7W,SAAW6W,EAAe7W,QAAQ8J,gBAAkBw7E,EAAgBx7E,cATxH,CAAAy7E,EAAAzqF,KAAA,YAYhCkpF,EAAsB,MACtBr/D,EAbgC,CAAA4gE,EAAAzqF,KAAA,cAc5BmpF,EAAkBpqF,EAAKO,gBAAgB,CAAC,QAAQ,SAASuqB,KAd7B,CAAA4gE,EAAAzqF,KAAA,gBAAAyqF,EAAA1qF,KAAA,GAAA0qF,EAAAzqF,KAAA,GAiBFjB,EAAK2E,yBAAyBylF,EAAgBptE,GAjB5C,QAiB9BmtE,EAjB8BuB,EAAAtqF,KAAAsqF,EAAAzqF,KAAA,iBAAAyqF,EAAA1qF,KAAA,GAAA0qF,EAAA9mF,GAAA8mF,EAAA,kBAwBpCZ,EAAiB9qF,EAAKgD,iBAAiB8nF,EAAe9tE,EAAe/Z,SAASknF,GAGzEpiF,EAAOiV,EAAe3Z,SACzB0E,EAAOiV,EAAe3Z,OAASrD,EAAKqB,MAAM,IAI5C0G,EAAOiV,EAAe3Z,OAAS0E,EAAOiV,EAAe3Z,OAAOoE,KAAKqjF,GAhC7B,yBAAAY,EAAAlqF,SAAAgqF,EAAA7rF,KAAA,cAApC,gBAAAgsF,EAAAC,GAAA,OAAAL,EAAArpF,MAAAvC,KAAAwC,YAAA,IAP2C,wBAAAmpF,EAAA9pF,SAAA4pF,EAAAzrF,SAA/C,gBAAAksF,GAAA,OAAAV,EAAAjpF,MAAAvC,KAAAwC,YAAA,IAVmB,eAAA+oF,EAAA3pF,OAAA,SAwDlBwG,GAxDkB,yBAAAmjF,EAAA1pF,SAAAupF,EAAAprF,SAhlITA,KA0oIlBwW,aA1oIkB5W,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA0oIH,SAAAmrF,IAAA,IAAA3rF,EAAA0V,EAAAk2E,EAAA5pF,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAkrF,GAAA,cAAAA,EAAAhrF,KAAAgrF,EAAA/qF,MAAA,eAAOd,EAAP4rF,EAAAtpF,OAAA,QAAAC,IAAAqpF,EAAA,GAAAA,EAAA,GAAmB,OACZ/rF,EAAKJ,MAAMO,cAC7BA,EAAcH,EAAKJ,MAAMO,aAFd6rF,EAAA/qF,KAAA,EAIKjB,EAAK2C,oBAAoBxC,EAAYkE,KAAKhB,MAAO,OAJtD,YAIPwS,EAJOm2E,EAAA5qF,MAAA,CAAA4qF,EAAA/qF,KAAA,eAAA+qF,EAAAzqF,OAAA,SAMJvB,EAAKqB,MAAMwU,GAAK5Q,IAAIjF,EAAKqB,MAAM,OAN3B,cAAA2qF,EAAAzqF,OAAA,SAQN,MARM,wBAAAyqF,EAAAxqF,SAAAsqF,EAAAnsF,SA1oIGA,KAopIlB4wE,iBAppIkBhxE,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAopIC,SAAAsrF,IAAA,IAAA9rF,EAAAgB,EAAA+qF,EAAAC,EAAA35E,EAAAwD,EAAAM,EAAA81E,EAAAC,EAAAC,EAAAnqF,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAyrF,GAAA,cAAAA,EAAAvrF,KAAAurF,EAAAtrF,MAAA,UAAOd,EAAPmsF,EAAA7pF,OAAA,QAAAC,IAAA4pF,EAAA,GAAAA,EAAA,GAAmB,KAAKnrF,EAAxBmrF,EAAA7pF,OAAA,QAAAC,IAAA4pF,EAAA,GAAAA,EAAA,GAAgC,MAC5CnsF,GAAeH,EAAKJ,MAAMO,cAC7BA,EAAcH,EAAKJ,MAAMO,cAEtBgB,GAAWnB,EAAKJ,MAAMuB,UACzBA,EAAUnB,EAAKJ,MAAMuB,SAGlBA,GAAYhB,EARA,CAAAosF,EAAAtrF,KAAA,eAAAsrF,EAAAhrF,OAAA,SASR,MATQ,cAAAgrF,EAAAtrF,KAAA,EAgBPqD,QAAQC,IAAI,CACpBvE,EAAKmW,aAAahW,GAClBH,EAAKwV,eAAe,aAAarV,EAAYkD,MAAMlD,EAAYgB,GAC/DnB,EAAKwV,eAAe,oBAAoBrV,EAAYkD,MAAMlD,EAAYgB,KAnBvD,UAAA+qF,EAAAK,EAAAnrF,KAAA+qF,EAAA5sF,OAAAmF,EAAA,EAAAnF,CAAA2sF,EAAA,GAaf15E,EAbe25E,EAAA,GAcfn2E,EAdem2E,EAAA,GAef71E,EAfe61E,EAAA,KAsBb35E,GAAiBwD,GAAcM,GAtBlB,CAAAi2E,EAAAtrF,KAAA,gBAuBTmrF,EAAO91E,EAAkByE,MAAM/E,GAC/Bq2E,EAAOD,EAAKpnF,MAAMwN,GAxBT+5E,EAAAhrF,OAAA,SA4BR8qF,GA5BQ,eAAAE,EAAAhrF,OAAA,SA+BV,MA/BU,yBAAAgrF,EAAA/qF,SAAAyqF,EAAAtsF,SAppIDA,KAqrIlB+wE,uBArrIkB,eAAA8b,EAAAjtF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAqrIO,SAAA8rF,EAAOzvE,GAAP,IAAA7b,EAAAoF,EAAAukB,EAAAjB,EAAA6iE,EAAAvqF,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAA6rF,GAAA,cAAAA,EAAA3rF,KAAA2rF,EAAA1rF,MAAA,cAAsBE,EAAtBurF,EAAAjqF,OAAA,QAAAC,IAAAgqF,EAAA,GAAAA,EAAA,GAA8B,KAAKnmF,EAAnCmmF,EAAAjqF,OAAA,QAAAC,IAAAgqF,EAAA,GAAAA,EAAA,GAAmD,KAAK5hE,EAAxD4hE,EAAAjqF,OAAA,QAAAC,IAAAgqF,EAAA,GAAAA,EAAA,GAAqE,KAArEC,EAAA1rF,KAAA,EACajB,EAAK4pB,yBAAyBzoB,EAAQoF,EAAgBukB,EAAa9N,GADhF,cACjB6M,EADiB8iE,EAAAvrF,KAAAurF,EAAAprF,OAAA,SAEhBsoB,GAAyBA,EAAsB7M,EAAe3Z,OAASwmB,EAAsB7M,EAAe3Z,OAASrD,EAAKqB,MAAM,IAFhH,wBAAAsrF,EAAAnrF,SAAAirF,EAAA9sF,SArrIP,gBAAAitF,GAAA,OAAAJ,EAAAtqF,MAAAvC,KAAAwC,YAAA,GAAAxC,KAyrIlBktF,mBAzrIkBttF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAyrIG,SAAAmsF,IAAA,IAAAj7E,EAAAk7E,EAAArzD,EAAAszD,EAAAlpF,EAAAmpF,EAAA9qF,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAosF,GAAA,cAAAA,EAAAlsF,KAAAksF,EAAAjsF,MAAA,cAAO4Q,IAAPo7E,EAAAxqF,OAAA,QAAAC,IAAAuqF,EAAA,KAAAA,EAAA,GACfF,EAAS/sF,EAAKqB,MAAM,GACpBq4B,EAAS15B,EAAKqB,MAAM,GACpB2rF,EAAWhtF,EAAKqB,MAAM,GACpByC,EAAiB9D,EAAKO,gBAAgB,CAAC,QAAQ,SAAS,QAJ3C2sF,EAAAjsF,KAAA,EAKbjB,EAAK8G,aAAavH,OAAOwH,KAAK/G,EAAKJ,MAAMiH,qBAAzC,eAAAsmF,EAAA5tF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAA8D,SAAAysF,EAAOnhD,GAAP,IAAAv6B,EAAAnL,EAAA,OAAA7F,EAAAtB,EAAA0B,KAAA,SAAAusF,GAAA,cAAAA,EAAArsF,KAAAqsF,EAAApsF,MAAA,cAC5DyQ,EAAsB,SAAbu6B,EACT1lC,EAAkBvG,EAAKJ,MAAMiH,oBAAoBolC,GAFWohD,EAAApsF,KAAA,EAG5DjB,EAAK8G,aAAavH,OAAOwH,KAAKR,GAA9B,eAAA+mF,EAAA/tF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAA+C,SAAA4sF,EAAOlqF,GAAP,IAAAlD,EAAA0D,EAAAyzB,EAAAtvB,EAAA8J,EAAAwB,EAAAk6E,EAAAC,EAAA,OAAA/sF,EAAAtB,EAAA0B,KAAA,SAAA4sF,GAAA,cAAAA,EAAA1sF,KAAA0sF,EAAAzsF,MAAA,cAC7Cd,EAAcoG,EAAgBlD,GADeqqF,EAAAzsF,KAAA,EAErBjB,EAAKyE,mBAAmBtE,GAAY,EAAM0R,GAFrB,cAE7ChO,EAF6C6pF,EAAAtsF,KAAAssF,EAAAzsF,KAAA,EAG3BjB,EAAK23B,aAAax3B,EAAY0D,EAAgBgO,GAHnB,UAG7CylB,EAH6Co2D,EAAAtsF,MAI/CyC,IAAmBA,EAAgBkB,2BAA8BlB,EAAgBkB,0BAA0BzD,QAJ5D,CAAAosF,EAAAzsF,KAAA,gBAAAysF,EAAAzsF,KAAA,GAKnBjB,EAAK8E,oBAAoBjB,EAAgBkB,0BAA0B1B,EAAMlD,EAAYuR,GALlE,QAK3C1J,EAL2C0lF,EAAAtsF,KAMjD4rF,EAAWA,EAASvlF,KAAKO,GAErBsvB,GAAaA,EAAUM,SAAWN,EAAUM,OAAOt2B,UACrDyrF,EAASA,EAAOtlF,KAAKO,EAAgBhD,MAAMsyB,EAAUM,SACrD8B,EAASA,EAAOjyB,KAAKO,EAAgBhD,MAAMsyB,EAAUO,UAVN,aAe7C/lB,EAAY9R,EAAK2V,kBAAkBxV,IAfU,CAAAutF,EAAAzsF,KAAA,gBAAAysF,EAAAzsF,KAAA,GAiB3CjB,EAAK8G,aAAavH,OAAOwH,KAAK+K,GAAW2J,OAAQ,SAAAmC,GAAQ,OAAK9L,EAAU8L,GAAUm1B,UAAlF,eAAA46C,EAAApuF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAA8F,SAAAitF,EAAOhwE,GAAP,IAAAZ,EAAA6wE,EAAAC,EAAAr4E,EAAA00E,EAAA4D,EAAA,OAAArtF,EAAAtB,EAAA0B,KAAA,SAAAktF,GAAA,cAAAA,EAAAhtF,KAAAgtF,EAAA/sF,MAAA,cAC5F+b,EAAiBlL,EAAU8L,GADiEowE,EAAA/sF,KAAA,EAKxFqD,QAAQC,IAAI,CACpBvE,EAAK+zE,mBAAmBn2D,EAASzd,EAAYkE,KAAK8B,SAClDnG,EAAK2E,yBAAyBb,EAAekZ,KAPmD,OAAA6wE,EAAAG,EAAA5sF,KAAA0sF,EAAAvuF,OAAAmF,EAAA,EAAAnF,CAAAsuF,EAAA,GAGhGp4E,EAHgGq4E,EAAA,GAIhG3D,EAJgG2D,EAAA,GAU9Fr4E,GAAgB00E,IACZ4D,EAAwB/tF,EAAKgD,iBAAiByS,EAAauH,EAAe/Z,UAAU+B,MAAMhF,EAAKqB,MAAM8oF,OAC7E4D,EAAsBzsF,UAClD0rF,EAAWA,EAASvlF,KAAKsmF,IAbqE,wBAAAC,EAAAxsF,SAAAosF,EAAAjuF,SAA9F,gBAAAsuF,GAAA,OAAAN,EAAAzrF,MAAAvC,KAAAwC,YAAA,IAjB2C,YAqC/ChC,EAAY4W,YAAa5W,EAAY4W,UAAUC,YArCA,CAAA02E,EAAAzsF,KAAA,gBAsC3CqS,EAAiB/T,OAAOC,OAAO,GAAGW,IACzByP,UAAYrQ,OAAO0X,OAAO9W,EAAYyP,WACrD0D,EAAejP,KAAO9E,OAAOC,OAAO,GAAGW,EAAY4W,UAAUC,aAGzD1D,EAAeyD,UAAUG,cAC3B5D,EAAeyD,UAAUG,aAAazN,QAAS,SAAA0N,GAC7C,IAAMC,EAAgB9D,EAAe1D,UAAUyH,KAAM,SAAA3N,GAAC,OAAKA,EAAE4C,OAAS6K,EAAY7K,OAClF,GAAI8K,EAAc,CAChB,IAAME,EAAchE,EAAe1D,UAAU2H,QAAQH,GACrD9D,EAAe1D,UAAU0H,GAAeH,KAhDGu2E,EAAAzsF,KAAA,GAqDhBjB,EAAKyE,mBAAmB6O,GAAe,GAAM,GArD7B,aAqD3Ck6E,EArD2CE,EAAAtsF,QAsDvBosF,EAAmBxlF,iBAAoBwlF,EAAmBxlF,gBAAgB1G,QAtDnD,CAAAosF,EAAAzsF,KAAA,gBAAAysF,EAAAzsF,KAAA,GAuDTjB,EAAK8E,oBAAoB0oF,EAAmBxlF,gBAAgB3E,EAAMiQ,EAAe5B,GAvDxE,QAuDzC+7E,EAvDyCC,EAAAtsF,KAwD/C4rF,EAAWA,EAASvlF,KAAKgmF,GAxDsB,yBAAAC,EAAAlsF,SAAA+rF,EAAA5tF,SAA/C,gBAAAuuF,GAAA,OAAAZ,EAAAprF,MAAAvC,KAAAwC,YAAA,IAH4D,wBAAAkrF,EAAA7rF,SAAA4rF,EAAAztF,SAA9D,gBAAAwuF,GAAA,OAAAhB,EAAAjrF,MAAAvC,KAAAwC,YAAA,IALa,cAyEnB4qF,EAASA,EAAO9nF,IAAI+nF,GACpBtzD,EAASA,EAAOz0B,IAAI+nF,GA1EDE,EAAA3rF,OAAA,SA4EZ,CACLwrF,SACArzD,SACAszD,aA/EiB,yBAAAE,EAAA1rF,SAAAsrF,EAAAntF,SAzrIHA,KA2wIlByuF,YA3wIkB,eAAAC,EAAA9uF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA2wIJ,SAAA2tF,EAAOnuF,GAAP,IAAAm3B,EAAA,OAAA52B,EAAAtB,EAAA0B,KAAA,SAAAytF,GAAA,cAAAA,EAAAvtF,KAAAutF,EAAAttF,MAAA,cAAAstF,EAAAttF,KAAA,EACYjB,EAAK23B,aAAax3B,GAD9B,YACNm3B,EADMi3D,EAAAntF,OAE0B,OAArBk2B,EAAUO,OAFf,CAAA02D,EAAAttF,KAAA,eAAAstF,EAAAhtF,OAAA,SAGH+1B,EAAUO,QAHP,cAAA02D,EAAAhtF,OAAA,SAKL,MALK,wBAAAgtF,EAAA/sF,SAAA8sF,EAAA3uF,SA3wII,gBAAA6uF,GAAA,OAAAH,EAAAnsF,MAAAvC,KAAAwC,YAAA,GAAAxC,KAkxIlB26B,mBAlxIkB/6B,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAkxIG,SAAA8tF,IAAA,IAAA7nF,EAAAqyB,EAAAy1D,EAAAvsF,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAA6tF,GAAA,cAAAA,EAAA3tF,KAAA2tF,EAAA1tF,MAAA,UAAO2F,EAAP8nF,EAAAjsF,OAAA,QAAAC,IAAAgsF,EAAA,GAAAA,EAAA,GAAwB,KAEtC1uF,EAAKJ,MAAMiH,qBAAwB7G,EAAKJ,MAAMuB,QAFhC,CAAAwtF,EAAA1tF,KAAA,eAAA0tF,EAAAptF,OAAA,UAGV,GAHU,cAMb03B,EAAkB,GANL01D,EAAA1tF,KAAA,EAQbjB,EAAK8G,aAAavH,OAAOwH,KAAK/G,EAAKJ,MAAMiH,qBAAzC,eAAA+nF,EAAArvF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAA8D,SAAAkuF,EAAO5iD,GAAP,IAAA1lC,EAAA,OAAA7F,EAAAtB,EAAA0B,KAAA,SAAAguF,GAAA,cAAAA,EAAA9tF,KAAA8tF,EAAA7tF,MAAA,WAC9D2F,GAAoBA,IAAqBqlC,EADqB,CAAA6iD,EAAA7tF,KAAA,eAAA6tF,EAAAvtF,OAAA,wBAI5DgF,EAAkBvG,EAAKJ,MAAMiH,oBAAoBolC,GAJW6iD,EAAA7tF,KAAA,EAK5DjB,EAAK8G,aAAavH,OAAOwH,KAAKR,GAA9B,eAAAwoF,EAAAxvF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAA+C,SAAAquF,EAAO3rF,GAAP,IAAAlD,EAAA8uF,EAAAnpD,EAAA9zB,EAAAwkD,EAAA,OAAA91D,EAAAtB,EAAA0B,KAAA,SAAAouF,GAAA,cAAAA,EAAAluF,KAAAkuF,EAAAjuF,MAAA,cAC7Cd,EAAcoG,EAAgBlD,GADe6rF,EAAAjuF,KAAA,EAKzCjB,EAAK8V,eAAe3V,EAAYH,EAAKJ,MAAMuB,SALF,OAAA8tF,EAAAC,EAAA9tF,KAGjD0kC,EAHiDmpD,EAGjDnpD,iBACA9zB,EAJiDi9E,EAIjDj9E,4BAGE8zB,IACI0wB,EAAW5vD,EAAmBvD,EAAQlD,EAAYkE,KAAKhB,MAC7D41B,EAAgBu9B,GAAY,CAC1BnzD,QACA4oC,WACA9rC,cACA6R,gCAb+C,wBAAAk9E,EAAA1tF,SAAAwtF,EAAArvF,SAA/C,gBAAAwvF,GAAA,OAAAJ,EAAA7sF,MAAAvC,KAAAwC,YAAA,IAL4D,wBAAA2sF,EAAAttF,SAAAqtF,EAAAlvF,SAA9D,gBAAAyvF,GAAA,OAAAR,EAAA1sF,MAAAvC,KAAAwC,YAAA,IARa,cAAAwsF,EAAAptF,OAAA,SAgCZ03B,GAhCY,wBAAA01D,EAAAntF,SAAAitF,EAAA9uF,SAlxIHA,KAuzIlB0vF,2BAvzIkB9vF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAuzIW,SAAA2uF,IAAA,IAAAt8C,EAAAu8C,EAAAC,EAAAC,EAAAC,EAAAvtF,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAA6uF,GAAA,cAAAA,EAAA3uF,KAAA2uF,EAAA1uF,MAAA,UAAO+xC,EAAP08C,EAAAjtF,OAAA,QAAAC,IAAAgtF,EAAA,GAAAA,EAAA,GAAgB,KACtC1vF,EAAKJ,MAAMuB,QADW,CAAAwuF,EAAA1uF,KAAA,eAAA0uF,EAAApuF,OAAA,UAElB,GAFkB,UAIrBguF,EAAgB,GAChBC,EAAkBxvF,EAAKqB,MAAM,GAAG4D,IAAI,OACpCwqF,EAAkBzvF,EAAKO,gBAAgB,CAAC,QAAQ,iBAAiB,QAAQ,qBANpD,CAAAovF,EAAA1uF,KAAA,eAAA0uF,EAAA1uF,KAAA,EAQnBjB,EAAK8G,aAAavH,OAAOwH,KAAK0oF,GAA9B,eAAAG,EAAArwF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAA+C,SAAAkvF,EAAOxsF,GAAP,IAAAlD,EAAA2vF,EAAAr6E,EAAA,OAAA/U,EAAAtB,EAAA0B,KAAA,SAAAivF,GAAA,cAAAA,EAAA/uF,KAAA+uF,EAAA9uF,MAAA,UAC7Cd,EAAcsvF,EAAgBpsF,GACnB,OAAb2vC,GAAqB7yC,EAAY6yC,SAAS/iC,gBAAkB+iC,EAAS/iC,cAFtB,CAAA8/E,EAAA9uF,KAAA,eAAA8uF,EAAAxuF,OAAA,qBAK/CuuF,EAAgB9vF,EAAK2kB,kBAAkBxkB,EAAYkD,UACjClD,EAAYykB,IANiB,CAAAmrE,EAAA9uF,KAAA,eAAA8uF,EAAA9uF,KAAA,EAO3BjB,EAAKJ,MAAMilB,aAAa1kB,EAAYkD,MAAMlD,EAAYgG,QAAQhG,EAAYykB,KAP/C,OAOjDkrE,EAPiDC,EAAA3uF,KAAA,WAS/C0uF,EAT+C,CAAAC,EAAA9uF,KAAA,gBAAA8uF,EAAA9uF,KAAA,GAUtBjB,EAAKkB,gBAAgBf,EAAYkD,MAAMrD,EAAKJ,MAAMuB,SAV5B,SAU3CsU,EAV2Cs6E,EAAA3uF,OAW7BqU,EAAaojB,IAAI22D,KACnCD,EAAclsF,GAAS,CACrBlD,cACAU,QAAQ4U,IAdqC,yBAAAs6E,EAAAvuF,SAAAquF,EAAAlwF,SAA/C,gBAAAqwF,GAAA,OAAAJ,EAAA1tF,MAAAvC,KAAAwC,YAAA,IARmB,cAAAwtF,EAAApuF,OAAA,SA6BpBguF,GA7BoB,yBAAAI,EAAAnuF,SAAA8tF,EAAA3vF,SAvzIXA,KAy1IlBmF,oBAz1IkB,eAAAmrF,EAAA1wF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAy1II,SAAAuvF,EAAOz6E,EAAapS,EAAMlD,GAA1B,IAAAuR,EAAAuc,EAAAkiE,EAAAhuF,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAsvF,GAAA,cAAAA,EAAApvF,KAAAovF,EAAAnvF,MAAA,UAAsCyQ,EAAtCy+E,EAAA1tF,OAAA,QAAAC,IAAAytF,EAAA,IAAAA,EAAA,KAEpB16E,EAAezV,EAAKqB,MAAMoU,IACTY,GAAG,GAHA,CAAA+5E,EAAAnvF,KAAA,eAAAmvF,EAAAnvF,KAAA,EAImBjB,EAAK45E,uBAAuBz5E,EAAYuR,GAJ3D,QAIZuc,EAJYmiE,EAAAhvF,QAMhBqU,EAAeA,EAAazQ,MAAMipB,IANlB,cAAAmiE,EAAA7uF,OAAA,SASbkU,GATa,wBAAA26E,EAAA5uF,SAAA0uF,EAAAvwF,SAz1IJ,gBAAA0wF,EAAAC,EAAAC,GAAA,OAAAN,EAAA/tF,MAAAvC,KAAAwC,YAAA,GAAAxC,KAu2IlBi6E,uBAv2IkB,eAAA4W,EAAAjxF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAu2IO,SAAA8vF,EAAOtwF,EAAYuR,GAAnB,IAAAwc,EAAA1qB,EAAAsC,EAAAmrE,EAAA3tE,EAAAotF,EAAAvuF,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAA6vF,GAAA,cAAAA,EAAA3vF,KAAA2vF,EAAA1vF,MAAA,UAA0BitB,EAA1BwiE,EAAAjuF,OAAA,QAAAC,IAAAguF,EAAA,GAAAA,EAAA,GAA8C,KAA9C,CAAAC,EAAA1vF,KAAA,WAGrBitB,EAAsBluB,EAAKO,gBAAgB,CAAC,QAAQ,SAASJ,EAAYkD,MAAM,wBAH1D,CAAAstF,EAAA1vF,KAAA,eAAA0vF,EAAApvF,OAAA,SAKZ,MALY,UAUjBiC,EAViB,uBAAAY,OAUsBjE,EAAYgG,QAVlC,KAAA/B,OAU6CsN,EAV7C,KAAAtN,OAUuD8pB,GAE3D,QADbpoB,EAAa9F,EAAKkG,cAAc1C,IAXf,CAAAmtF,EAAA1vF,KAAA,eAAA0vF,EAAApvF,OAAA,SAaduE,GAbc,cAAA6qF,EAAA1vF,KAAA,GAgBDjB,EAAKkZ,gBAAgB/Y,EAAYgG,QAAQuL,EAAO,KAAK,MAAK,EAAM,KAAK,OAAO,GAhB3E,aAgBnBu/D,EAhBmB0f,EAAAvvF,QAkBN6vE,EAAUxuE,OAlBJ,CAAAkuF,EAAA1vF,KAAA,cAmBrBgwE,EAAYA,EAAUttD,SACLstD,EAAU/iD,GApBN,CAAAyiE,EAAA1vF,KAAA,gBAqBbqC,EAAiBtD,EAAKgD,iBAAiBiuE,EAAU/iD,GAAqB,IArBzDyiE,EAAApvF,OAAA,SAsBZvB,EAAKkF,cAAc1B,EAAcF,IAtBrB,eAAAqtF,EAAApvF,OAAA,SA0BhB,MA1BgB,yBAAAovF,EAAAnvF,SAAAivF,EAAA9wF,SAv2IP,gBAAAixF,EAAAC,GAAA,OAAAL,EAAAtuF,MAAAvC,KAAAwC,YAAA,GAAAxC,KAo4IlB4W,cAp4IkB,eAAAu6E,EAAAvxF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAo4IF,SAAAowF,EAAO5wF,EAAYuR,GAAnB,IAAAlO,EAAAsC,EAAAk8D,EAAA/xB,EAAA+gD,EAAAC,EAAAhgB,EAAAptE,EAAAuP,EAAA,OAAA1S,EAAAtB,EAAA0B,KAAA,SAAAowF,GAAA,cAAAA,EAAAlwF,KAAAkwF,EAAAjwF,MAAA,UAERuC,EAFQ,cAAAY,OAEsBjE,EAAYgG,QAFlC,KAAA/B,OAE6CsN,GAExC,QADb5L,EAAa9F,EAAKkG,cAAc1C,IAHxB,CAAA0tF,EAAAjwF,KAAA,eAAAiwF,EAAA3vF,OAAA,SAKLuE,GALK,cAQRk8D,EAAU1xD,GAAcC,MAAM0hC,MAC9BhC,EATQ,GAAA7rC,OASM49D,EAAQ/xB,UATd7rC,OASyBjE,EAAYgG,QATrC,YAAA/B,OASuDsN,EATvD,uBAAAw/E,EAAAjwF,KAAA,EAaJqD,QAAQC,IAAI,CACpBvE,EAAK+yD,kBAAkB9iB,EAAS+xB,EAAQptB,KAAI,GAC5C50C,EAAKyE,mBAAmBtE,GAAY,GAAM,KAf9B,cAAA6wF,EAAAE,EAAA9vF,KAAA6vF,EAAA1xF,OAAAmF,EAAA,EAAAnF,CAAAyxF,EAAA,GAWZ/f,EAXYggB,EAAA,GAYZptF,EAZYotF,EAAA,GAkBV79E,EAAapT,EAAKqB,MAAM,GAExB4vE,GAAaptE,GACftE,OAAOwH,KAAKlD,EAAgBgJ,0BAA0BpD,QAAS,SAAAuG,GAC7D,IAAMs2D,EAAyBtmE,EAAKqB,MAAMwC,EAAgBgJ,yBAAyBmD,IACnF,GAAIs2D,EAAuBjwD,GAAG,OAAU46D,EAAUxuE,OAAO,EAAE,CACzD,IAAMoN,EAAeohE,EAAU,GAAGkV,cAAc9uE,KAAM,SAAA3N,GAAC,OAAKA,EAAEsG,aAAaC,gBAAkBD,EAAaC,gBAC1G,GAAIJ,EAAa,CACf,IAAMshF,EAAgBnxF,EAAKqB,MAAMwO,EAAag3E,WACzCsK,EAAc7vF,UACjB8R,EAAaA,EAAW3L,KAAK0pF,EAAcnsF,MAAMshE,WAStDlzD,GAAcA,EAAW9R,SAAW8R,EAAWvO,IAAI,MACtDuO,EAAapT,EAAKoxF,iBAAiBjxF,EAAYuR,IAtCnCw/E,EAAA3vF,OAAA,SAyCPvB,EAAKkF,cAAc1B,EAAc4P,IAzC1B,yBAAA89E,EAAA1vF,SAAAuvF,EAAApxF,SAp4IE,gBAAA0xF,EAAAC,GAAA,OAAAR,EAAA5uF,MAAAvC,KAAAwC,YAAA,GAAAxC,KAm7IlByxF,iBAn7IkB,eAAAG,EAAAhyF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAm7IC,SAAA6wF,EAAOrxF,EAAYuR,GAAnB,IAAAlO,EAAAsC,EAAAk8D,EAAA/xB,EAAAghC,EAAA79D,EAAA+F,EAAApF,EAAA2Z,EAAA,OAAAhtB,EAAAtB,EAAA0B,KAAA,SAAA2wF,GAAA,cAAAA,EAAAzwF,KAAAywF,EAAAxwF,MAAA,UAEXuC,EAFW,iBAAAY,OAEsBjE,EAAYgG,QAFlC,KAAA/B,OAE6CsN,GAE3C,QADb5L,EAAa9F,EAAKkG,cAAc1C,IAHrB,CAAAiuF,EAAAxwF,KAAA,eAAAwwF,EAAAlwF,OAAA,SAKRuE,GALQ,cAQXk8D,EAAU1xD,GAAcC,MAAMskC,OAC9B5E,EATW,GAAA7rC,OASG49D,EAAQ/xB,UATX7rC,OASsBjE,EAAYgG,QATlC,YAAA/B,OASoDsN,GATpD+/E,EAAAxwF,KAAA,EAUKjB,EAAK+yD,kBAAkB9iB,EAAS+xB,EAAQptB,KAAI,GAVjD,YAUbq8B,EAVawgB,EAAArwF,MAAA,CAAAqwF,EAAAxwF,KAAA,cAaXmS,EAAapT,EAAKqB,MAAM4vE,EAAU,GAAGsV,cACvBnzE,EAAWiD,GAAG,GAdjB,CAAAo7E,EAAAxwF,KAAA,gBAAAwwF,EAAAlwF,OAAA,SAgBNvB,EAAKkF,cAAc1B,EAAc4P,IAhB3B,eAmBP+F,EAAYzN,UAAS,IAAIgN,MAAOI,UAAU,KAC1C/E,EAAiBrI,SAASyN,GAAY,MApB/Bs4E,EAAAxwF,KAAA,GAqBKjB,EAAKkZ,gBAAgB/Y,EAAYgG,QAAQuL,EAAOqC,EAAe,MAAK,EAAK,KAAK,QArBnF,WAqBbk9D,EArBawgB,EAAArwF,OAuBPssB,EAAoBujD,EAAUx1D,OAAQ,SAAAhO,GAAC,OAAKzN,EAAKqB,MAAMoM,EAAE84E,WAAWlwE,GAAG,MACvD5T,OAxBT,CAAAgvF,EAAAxwF,KAAA,gBAyBXmS,EAAapT,EAAKqB,MAAMqsB,EAAkB,GAAG64D,WAzBlCkL,EAAAlwF,OAAA,SA0BJvB,EAAKkF,cAAc1B,EAAc4P,IA1B7B,eAAAq+E,EAAAlwF,OAAA,SA+BV,MA/BU,yBAAAkwF,EAAAjwF,SAAAgwF,EAAA7xF,SAn7ID,gBAAA+xF,EAAAC,GAAA,OAAAJ,EAAArvF,MAAAvC,KAAAwC,YAAA,GAAAxC,KAu9IlBg4B,aAv9IkB,eAAAi6D,EAAAryF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAu9IH,SAAAkxF,EAAO1xF,GAAP,IAAA0D,EAAAgO,EAAArO,EAAAsC,EAAAgsF,EAAAC,EAAAvvB,EAAAoW,EAAAoZ,EAAA16D,EAAA26D,EAAArlC,EAAAslC,EAAAC,EAAAhwF,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAsxF,GAAA,cAAAA,EAAApxF,KAAAoxF,EAAAnxF,MAAA,UAAmB4C,EAAnBsuF,EAAA1vF,OAAA,QAAAC,IAAAyvF,EAAA,IAAAA,EAAA,GAAyCtgF,IAAzCsgF,EAAA1vF,OAAA,QAAAC,IAAAyvF,EAAA,KAAAA,EAAA,GAERhyF,EAAYkE,KAFJ,CAAA+tF,EAAAnxF,KAAA,eAAAmxF,EAAA7wF,OAAA,UAGJ,GAHI,UAOPiC,EAPO,aAAAY,OAOsBjE,EAAYkE,KAAK8B,QAPvC,KAAA/B,OAOkDyN,GAE5C,QADb/L,EAAa9F,EAAKkG,cAAc1C,IARzB,CAAA4uF,EAAAnxF,KAAA,eAAAmxF,EAAA7wF,OAAA,SAUJuE,GAVI,cAAAssF,EAAAnxF,KAAA,GAaMjB,EAAKu0E,QAAQp0E,EAAYkE,KAAKhB,OAbpC,WAaPyuF,EAbOM,EAAAhxF,KAAA,CAAAgxF,EAAAnxF,KAAA,gBAAAmxF,EAAA7wF,OAAA,UAgBJ,GAhBI,WAmBRsC,EAnBQ,CAAAuuF,EAAAnxF,KAAA,gBAAAmxF,EAAAnxF,KAAA,GAoBajB,EAAKyE,mBAAmBtE,GApBrC,QAoBX0D,EApBWuuF,EAAAhxF,KAAA,WAuBRyC,EAvBQ,CAAAuuF,EAAAnxF,KAAA,gBAAAmxF,EAAA7wF,OAAA,UAwBJ,GAxBI,eA2BPwwF,EAAYD,EAAKC,UAAUl3E,IAAI,SAACsoD,EAAKrzD,GAAQ,OAAOqzD,EAAKztD,WAAWzF,gBACpEuyD,EAAOsvB,EAAKtvB,KAEZoW,EAAgB,GAChBoZ,EAAgB,GA/BTI,EAAAnxF,KAAA,GAiCPjB,EAAK8G,aAAa3G,EAAYyP,UAA9B,eAAAyiF,EAAA9yF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAwC,SAAA2xF,EAAOziF,EAAaC,GAApB,IAAAE,EAAAuiF,EAAAC,EAAAC,EAAAvQ,EAAA,OAAAxhF,EAAAtB,EAAA0B,KAAA,SAAA4xF,GAAA,cAAAA,EAAA1xF,KAAA0xF,EAAAzxF,MAAA,UACtC+O,EAAeH,EAAa1J,QAAQuP,WAAWzF,eAEjC,KADdsiF,EAAYR,EAAUx6E,QAAQvH,IAFQ,CAAA0iF,EAAAzxF,KAAA,YAItCuxF,EAAcxyF,EAAKqB,OAAOrB,EAAKitD,MAAMuV,EAAK+vB,KAC1CE,EAAczyF,EAAKm4E,QAAQqa,EAAYvtF,IAAI,MAAMD,MAAM,MAEvD6M,GAAsC,aAAtBhC,EAAavD,KAPS,CAAAomF,EAAAzxF,KAAA,gBAAAyxF,EAAAzxF,KAAA,EAQlBjB,EAAK4hF,WAAWzhF,EAAYkD,MAAMlD,GARhB,QAQlC+hF,EARkCwQ,EAAAtxF,QAWtCoxF,EAAcA,EAAY/qF,KAAKy6E,GAC/BuQ,EAAcA,EAAYhrF,KAAKy6E,IAZO,QAgB1C8P,EAAchiF,GAAgByiF,EAC9B7Z,EAAc5oE,GAAgBwiF,EAjBY,yBAAAE,EAAAlxF,SAAA8wF,EAAA3yF,SAAxC,gBAAAgzF,EAAAC,GAAA,OAAAP,EAAAnwF,MAAAvC,KAAAwC,YAAA,IAjCO,WAsDPm1B,EAAY,CAChBM,OAAQ,KACRC,OAAQ,KACR+gD,gBACAoZ,kBAGEnuF,EA7DS,CAAAuuF,EAAAnxF,KAAA,YA8DXq2B,EAAUM,OAAS53B,EAAK6H,UAAU+wE,EAAc/0E,EAAgB+I,qBAAqB/I,EAAgBmE,iBACrGsvB,EAAUO,OAAS73B,EAAK6H,UAAUmqF,EAAcnuF,EAAgB+I,qBAAqB/I,EAAgBmE,iBAG/FiqF,EAAsBjyF,EAAKO,gBAAgB,CAAC,YAAY,OAAO,aACzCP,EAAKO,gBAAgB,CAAC,YAAY,OAAO,cAC1C0xF,EApEhB,CAAAG,EAAAnxF,KAAA,gBAqEH2rD,EAAe5sD,EAAK+vE,kBArEjBqiB,EAAAnxF,KAAA,GAsEa2rD,EAAa1pD,OAAO/C,EAAYkD,MAAMlD,GAtEnD,SAsEH+xF,EAtEGE,EAAAhxF,QAwEPk2B,EAAUM,OAASN,EAAUM,OAAOnwB,KAAKyqF,GACzC56D,EAAUO,OAASP,EAAUO,OAAOpwB,KAAKyqF,IAzElC,eAAAE,EAAA7wF,OAAA,SA8ENvB,EAAKkF,cAAc1B,EAAc8zB,IA9E3B,yBAAA86D,EAAA5wF,SAAAqwF,EAAAlyF,SAv9IG,gBAAAkzF,GAAA,OAAAjB,EAAA1vF,MAAAvC,KAAAwC,YAAA,GAChBxC,KAAKU,SAAST,gEAsiJCmO,GAMf,IAN8D,IAAzC9K,EAAyCd,UAAAM,OAAA,QAAAC,IAAAP,UAAA,GAAAA,UAAA,GAAhC,EAAEgH,EAA8BhH,UAAAM,OAAA,QAAAC,IAAAP,UAAA,GAAAA,UAAA,GAAjB,EAAEiH,EAAejH,UAAAM,OAAA,QAAAC,IAAAP,UAAA,GAAAA,UAAA,GAAF,EAEtD2wF,EAAa3nF,WAAW4C,GAAO,EACjCmoD,EAAWv2D,KAAK0B,MAAM0M,GAAOuzD,MAE7ByxB,EAAY,EACT78B,EAASr9B,IAAI,MAClBq9B,EAAWA,EAASjxD,IAAI,KACxB8tF,IAMF,GAHA5pF,EAAekP,KAAKG,IAAI,EAAErP,GAGtB4E,GAAO,IAAK,CACd,IAAMilF,EAAc/vF,EAAWizD,EAAS+8B,IAAI,GAAG9iF,QAAQhH,GAAc8gB,OAAO,EAAEhnB,GAAY,KAC1FizD,EAAWxqD,SAASwqD,GAAUxgD,YAAas9E,EAAc,IAAIA,EAAc,SAE3E98B,EAAWA,EAAS/lD,QAAQlN,GAI9B,GAAIizD,GAAU,GAAMA,EAASzzD,OAAO,EAAG0G,EACrC+sD,EAAW/qD,WAAW+qD,GAAUg9B,YAAY/pF,QACvC,GAAK+sD,EAASzzD,OAAO,EAAG2G,EAAc,CAC3C,IAAM+pF,EAAa/pF,GAAc8sD,EAASzzD,OAAO,GAEjDyzD,GADev2D,KAAK0B,MAAM0M,GAAOuzD,MAAM5rD,WAAW24C,QAAQ,IAAI,IAAIpkC,OAAQisC,EAASzzD,OAAO,EAAG0wF,GAW/F,OANIL,IACF58B,EAAW,IAAIA,GAGjBA,GA/BiB,CAAC,GAAI,IAAK,IAAK,IAAI,KA+Bf68B,+CAIHlyF,EAAQ6P,EAAMzN,EAASmwF,EAAOC,GAEhDpwF,EAAY3B,MAAM2B,GAAuB,EAAXA,EAC9BmwF,EAAU9xF,MAAM8xF,GAAmB,GAATA,EAC1BC,EAAuB/xF,MAAM+xF,GAA6C,EAAtBA,EAGpD,IAAMC,GAFNzyF,EAAUsK,WAAWxL,KAAK0B,MAAMR,IAAUsP,QAAQlN,IAE3ByS,WAAW24C,QAAQ,IAAI,IAAI5rD,OAC9C6wF,EAAOF,IACTnwF,EAAWoV,KAAKG,IAAI,EAAEvV,GAAUqwF,EAAOF,IACvCvyF,EAAUsK,WAAWxL,KAAK0B,MAAMR,IAAUsP,QAAQlN,IAGpD,IAAMswF,EAAUl7E,KAAKyW,MAAMjuB,GACvB2yF,GAAW3yF,EAAQ,GAAGqyF,YAAYjwF,GAAUgnB,OAAO,EAAEhnB,GAGzD,GAFAuwF,GAAWA,EAAS,IAAIC,OAAOxwF,IAAYgnB,OAAO,EAAEhnB,GAEhDowF,EAAoB,CACtB,IAAMK,EAAiBF,EAAQvpE,OAAO,EAAEopE,GACxCG,EAAUA,EAAQvpE,OAAOopE,GACzB,IAAMM,EAAsBx0F,EAAAC,EAAAC,cAACC,EAAA,EAAKwlC,KAAN,CAAWnmC,SAAU,OAAQb,MAAO,OAAQyQ,WAAY,WAAYglF,EAApE,IAA8EG,GAC1G,OAAQpyF,MAAM3B,KAAKktD,QAAQhsD,IApBR,IAoBsB1B,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2rB,SAAA,KAAG4oE,EAAmBx0F,EAAAC,EAAAC,cAAA,SAAOwd,MAAO,CAACle,SAAS,QAAS60F,GAAvD,IAAwEr0F,EAAAC,EAAAC,cAACC,EAAA,EAAKwlC,KAAN,CAAWnmC,SAAU,CAAC,EAAE,IAAK+R,IAE9I,OAAQpP,MAAM3B,KAAKktD,QAAQhsD,IAtBR,IAsBsB1B,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2rB,SAAA,KAAGwoE,EAAQp0F,EAAAC,EAAAC,cAAA,iBAASm0F,GAA4B,MAAV9iF,EAAgB,IAAM,KAAQA,EAAQvR,EAAAC,EAAAC,cAACC,EAAA,EAAKwlC,KAAN,CAAWnmC,SAAU,CAAC,EAAE,IAAK+R,GAAqB,eCz7I9JsrB,8MAnLb57B,cAAgB,gFAEVT,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,4JAK9CD,KAAKgJ,+IAIL,IAAMirF,GAAW,IAAIl7E,MAAOm7E,cACtBC,EAAoBn0F,KAAKS,cAAcG,gBAAgB,CAAC,aAAa,YACrEwzF,EAAcD,EAAoB,IAAM,EAAE,EAChD,OACE30F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEw5B,GAAI,EACJzoB,GAAI,SACJ/G,WAAY,SACZC,cAAe,SACfoV,UAAWC,IAAOo1E,OAClBj2F,gBAAiB,QACjByL,eAAgB,cAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACP6mB,GAAI,CAAC,EAAE,GACPtX,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACP2E,OAAQ,CAAC,OAAO,QAChB0K,WAAY,aACZwoB,SAAU,CAAC,OAAO,QAClBtoB,eAAgB,aAChBD,cAAe,CAAC,SAAS,QAEzBpK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMrF,MAAO,CAAC,EAAE85F,GAAcxqF,cAAe,SAAU3K,OAAQ,CAAC,OAAO,SACrEO,EAAAC,EAAAC,cAACC,EAAA,EAAQs2B,GAAT,CAAY5kB,UAAW,CAAC,SAAS,QAASxC,WAAY,YAAa7P,SAAU,CAAC,EAAE,GAAIwmB,GAAI,EAAGrnB,MAAO,aAAlG,aAGAqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMrF,MAAO,EAAGsP,cAAe,UAC7BpK,EAAAC,EAAAC,cAAC40F,EAAD,CAASnrE,GAAI,CAAC,EAAE,GAAItE,KAAM,kCAAmCxT,UAAW,CAAC,SAAS,QAASxC,WAAY,YAAa7P,SAAU,CAAC,EAAE,GAAIb,MAAO,OAAQ8oB,WAAY,QAAhK,cACAznB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMwpB,GAAI,CAAC,EAAE,GAAI7uB,MAAO,EAAGuP,eAAgB,CAAC,SAAS,eACnDrK,EAAAC,EAAAC,cAAC60F,EAAA,EAAD,CACEp2F,MAAO,OACPixD,GAAG,oBACHpwC,UAAWC,IAAOu1E,MAElBh1F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM0R,UAAW,CAAC,SAAS,QAASxC,WAAY,YAAa7P,SAAU,CAAC,EAAE,GAAI4P,WAAY,EAAGzQ,MAAO,OAAQ8oB,WAAY,QAAxH,sBAGJznB,EAAAC,EAAAC,cAAC40F,EAAD,CAASnrE,GAAI,CAAC,EAAE,GAAItE,KAAM,kDAAmDxT,UAAW,CAAC,SAAS,QAASxC,WAAY,YAAa7P,SAAU,CAAC,EAAE,GAAIb,MAAO,OAAQ8oB,WAAY,QAAhL,kBACAznB,EAAAC,EAAAC,cAAC40F,EAAD,CAASnrE,GAAI,CAAC,EAAE,GAAItE,KAAM,gEAAiExT,UAAW,CAAC,SAAS,QAASxC,WAAY,YAAa7P,SAAU,CAAC,EAAE,GAAIb,MAAO,OAAQ8oB,WAAY,QAA9L,iBACAznB,EAAAC,EAAAC,cAAC40F,EAAD,CAASnrE,GAAI,CAAC,EAAE,GAAItE,KAAM,4FAA6FxT,UAAW,CAAC,SAAS,QAASxC,WAAY,YAAa7P,SAAU,CAAC,EAAE,GAAIb,MAAO,OAAQ8oB,WAAY,QAA1N,kBAIFktE,GACE30F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMrF,MAAO,CAAC,EAAE85F,GAAcxqF,cAAe,SAAU3K,OAAQ,CAAC,OAAO,SACrEO,EAAAC,EAAAC,cAACC,EAAA,EAAQs2B,GAAT,CAAY5kB,UAAW,CAAC,SAAS,QAASxC,WAAY,YAAa7P,SAAU,CAAC,EAAE,GAAIwmB,GAAI,EAAGrnB,MAAO,aAAlG,cAGAqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMrF,MAAO,EAAGsP,cAAe,UAC7BpK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMwpB,GAAI,CAAC,EAAE,GAAI7uB,MAAO,EAAGuP,eAAgB,CAAC,SAAS,eACnDrK,EAAAC,EAAAC,cAAC60F,EAAA,EAAD,CACEp2F,MAAO,OACPixD,GAAI,cACJpwC,UAAWC,IAAOu1E,MAElBh1F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM0R,UAAW,CAAC,SAAS,QAASxC,WAAY,YAAa7P,SAAU,CAAC,EAAE,GAAI4P,WAAY,EAAGzQ,MAAO,OAAQ8oB,WAAY,QAAxH,cAGJznB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMwpB,GAAI,CAAC,EAAE,GAAI7uB,MAAO,EAAGuP,eAAgB,CAAC,SAAS,eACnDrK,EAAAC,EAAAC,cAAC60F,EAAA,EAAD,CACEp2F,MAAO,OACP6gB,UAAWC,IAAOu1E,KAClBplC,GAAI,yBAEJ5vD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM0R,UAAW,CAAC,SAAS,QAASxC,WAAY,YAAa7P,SAAU,CAAC,EAAE,GAAI4P,WAAY,EAAGzQ,MAAO,OAAQ8oB,WAAY,QAAxH,eAGJznB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMwpB,GAAI,CAAC,EAAE,GAAI7uB,MAAO,EAAGuP,eAAgB,CAAC,SAAS,eACnDrK,EAAAC,EAAAC,cAAC60F,EAAA,EAAD,CACEp2F,MAAO,OACP6gB,UAAWC,IAAOu1E,KAClBplC,GAAI,2BAEJ5vD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM0R,UAAW,CAAC,SAAS,QAASxC,WAAY,YAAa7P,SAAU,CAAC,EAAE,GAAI4P,WAAY,EAAGzQ,MAAO,OAAQ8oB,WAAY,QAAxH,iBAGJznB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMwpB,GAAI,CAAC,EAAE,GAAI7uB,MAAO,EAAGuP,eAAgB,CAAC,SAAS,eACnDrK,EAAAC,EAAAC,cAAC40F,EAAD,CAASzvE,KAAK,6BACZrlB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM0R,UAAW,CAAC,SAAS,QAASxC,WAAY,YAAa7P,SAAU,CAAC,EAAE,GAAI4P,WAAY,EAAGzQ,MAAO,OAAQ8oB,WAAY,QAAxH,aAMZznB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMrF,MAAO,CAAC,EAAE85F,GAAcxqF,cAAe,SAAU3K,OAAQ,CAAC,OAAO,SACrEO,EAAAC,EAAAC,cAACC,EAAA,EAAQs2B,GAAT,CAAY5kB,UAAW,CAAC,SAAS,QAASxC,WAAY,YAAa7P,SAAU,CAAC,EAAE,GAAIwmB,GAAI,EAAGrnB,MAAO,aAAlG,wBAGAqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM0R,UAAW,CAAC,SAAS,QAASxC,WAAY,YAAa7P,SAAU,CAAC,EAAE,GAAIb,MAAO,OAAQ8oB,WAAY,QAAzG,sBAEFznB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMrF,MAAO,CAAC,EAAE85F,GAAcxqF,cAAe,UAC3CpK,EAAAC,EAAAC,cAACC,EAAA,EAAQs2B,GAAT,CAAY5kB,UAAW,CAAC,SAAS,QAASxC,WAAY,YAAa7P,SAAU,CAAC,EAAE,GAAIwmB,GAAI,EAAGrnB,MAAO,aAAlG,WAGAqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMiK,cAAe,MAAOC,eAAgB,CAAC,eAAe,eAC1DrK,EAAAC,EAAAC,cAAC40F,EAAD,CAASzvE,KAAK,mCACZrlB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAO4R,IAAI,4BAA4BtS,OAAQ,QAASkjB,GAAI,CAAC,OAAO,GAAIqD,GAAI,CAAC,EAAE,GAAIhI,UAAW,EAAGle,aAAc,SAEjHE,EAAAC,EAAAC,cAAC40F,EAAD,CAASzvE,KAAK,4BACZrlB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAO4R,IAAI,6BAA6BtS,OAAQ,QAASkjB,GAAI,CAAC,OAAO,GAAIqD,GAAI,CAAC,EAAE,GAAIhI,UAAW,EAAGle,aAAc,SAElHE,EAAAC,EAAAC,cAAC40F,EAAD,CAASzvE,KAAK,8BACZrlB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAO4R,IAAI,4BAA4BtS,OAAQ,QAASkjB,GAAI,CAAC,OAAO,GAAIqD,GAAI,CAAC,EAAE,GAAIhI,UAAW,EAAGle,aAAc,SAEjHE,EAAAC,EAAAC,cAAC40F,EAAD,CAASzvE,KAAK,mCACZrlB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAO4R,IAAI,2BAA2BtS,OAAQ,QAASkjB,GAAI,CAAC,OAAO,GAAIqD,GAAI,CAAC,EAAE,GAAIhI,UAAW,EAAGle,aAAc,SAEhHE,EAAAC,EAAAC,cAAC40F,EAAD,CAASzvE,KAAK,iCACZrlB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAO4R,IAAI,2BAA2BtS,OAAQ,QAASkjB,GAAI,CAAC,OAAO,GAAIqD,GAAI,CAAC,EAAE,GAAIhI,UAAW,EAAGle,aAAc,SAEhHE,EAAAC,EAAAC,cAAC40F,EAAD,CAASzvE,KAAK,gDACZrlB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAO4R,IAAI,6BAA6BtS,OAAQ,QAASkjB,GAAI,CAAC,OAAO,GAAIqD,GAAI,CAAC,EAAE,GAAIhI,UAAW,EAAGle,aAAc,SAElHE,EAAAC,EAAAC,cAAC40F,EAAD,CAASzvE,KAAK,mCACZrlB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAO4R,IAAI,+BAA+BtS,OAAQ,QAASkjB,GAAI,CAAC,OAAO,GAAIqD,GAAI,CAAC,EAAE,GAAIhI,UAAW,EAAGle,aAAc,aAM5HE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACP2E,OAAQ,CAAC,OAAO,QAChB2K,cAAe,SACfD,WAAY,CAAC,SAAS,YACtBE,eAAgB,CAAC,SAAS,aAE1BrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,EAAG,EACHzP,MAAO,EACPqP,WAAY,SACZE,eAAgB,SAChBzL,gBAAiB,YACjBwL,cAAe,CAAC,SAAS,QAEzBpK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACExB,MAAO,QACPkT,UAAW,CAAC,SAAS,aAFvB,QAIU4iF,EAJV,qBAMAz0F,EAAAC,EAAAC,cAAC60F,EAAA,EAAD,CACEp2F,MAAO,OACPixD,GAAI,oBACJlyC,MAAO,CAAC8J,eAAe,SAEvBxnB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEw5B,GAAI,EACJh7B,MAAO,OACPkT,UAAW,CAAC,SAAS,aAHvB,+BAvKOlR,kCCwVNs0F,8MA3VbjqF,MAAQ,2EAGN,OACEhL,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKqf,UAAWC,KAAOpoB,gBAAiBsyB,GAAI,CAAC,EAAE,GAAIhI,GAAI,CAAC,EAAE,GAAIuU,GAAI,CAAC,MAAO,QACxEl2B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKqf,UAAWC,KAAOnoB,iBACvB0I,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKwR,SAAU,WAAYC,OAAQ,IACjC5R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMiK,cAAe,SAAUD,WAAY,SAAUwoB,SAAU,CAAC,OAAQ,QAAS1M,GAAI,OAAQ0D,GAAI,EAAG9X,UAAW,SAAUqkB,GAAI,CAAC,MAAO,QACnIl2B,EAAAC,EAAAC,cAACC,EAAA,EAAQkoB,GAAT,CAAYhZ,WAAY,YAAawQ,WAAY,QAAS/N,GAAI,QAAStS,SAAU,CAAC,QAAQ,GAAIqS,UAAW,SAAUlT,MAAO,SAA1H,oBAGAqB,EAAAC,EAAAC,cAACC,EAAA,EAAQ+0F,GAAT,CAAY9lF,WAAY,MAAOyQ,WAAY,CAAC,QAAS,OAAQrgB,SAAU,CAAC,EAAE,GAAIqS,UAAW,SAAUlT,MAAO,SAA1G,+BAIFqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMiK,cAAe,SAAUD,WAAY,SAAUwoB,SAAU,CAAC,OAAQ,QAAS1M,GAAI,OAAQpU,UAAW,UACtG7R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKqf,UAAWC,KAAOhoB,cAAe0S,WAAY,SAAUrP,MAAO,OAAQ8R,UAAW,CAAC,OAAO,QAAShO,gBAAiB,QAASD,MAAO,YAAa4L,EAAG,CAAC,EAAE,GAAIyT,UAAW,wCAAyCle,aAAc,OAAQ4d,MAAO,CAAC/L,SAAS,aACxP3R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK+Q,GAAI,kBAAmByY,GAAI,GAC9B3pB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMwpB,GAAI,GAAV,wZAGA3pB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMwpB,GAAI,GAAV,sgBAGA3pB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMwpB,GAAI,GAAV,ikBAGA3pB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMwpB,GAAI,GAAV,iuBAGA3pB,EAAAC,EAAAC,cAACC,EAAA,EAAD,+mCAKFH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK+Q,GAAI,kBAAmB0Q,GAAI,CAAC,EAAE,IACjC5hB,EAAAC,EAAAC,cAACC,EAAA,EAAQs2B,GAAT,CAAY93B,MAAO,YAAakT,UAAW,OAAQzC,WAAY,EAAGyQ,WAAY,UAAWrgB,SAAU,CAAC,EAAE,IAAtG,sBAIAQ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMyhB,GAAI,GAAV,sGAIA5hB,EAAAC,EAAAC,cAAA,MAAIsf,UAAWC,KAAOjoB,MACpBwI,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,4CADF,yKAGAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,iDADF,mjBAGAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,wCADF,sLAGAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,mDADF,4IAGAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,sDADF,mHAGAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,yDADF,6JAGAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,yCADF,mOAGAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,2CADF,wJAGAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,wCADF,iFAGAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,4CADF,4CAGAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,0DADF,sJAMJF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK+Q,GAAI,sBAAuB0Q,GAAI,CAAC,EAAE,IACrC5hB,EAAAC,EAAAC,cAACC,EAAA,EAAQs2B,GAAT,CAAY93B,MAAO,YAAakT,UAAW,OAAQzC,WAAY,EAAGyQ,WAAY,UAAWrgB,SAAU,CAAC,EAAE,IAAtG,mCAIAQ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMyhB,GAAI,GAAV,mjBAKF5hB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK+Q,GAAI,WAAY0Q,GAAI,CAAC,EAAE,IAC1B5hB,EAAAC,EAAAC,cAACC,EAAA,EAAQs2B,GAAT,CAAY93B,MAAO,YAAakT,UAAW,OAAQzC,WAAY,EAAGyQ,WAAY,UAAWrgB,SAAU,CAAC,EAAE,IAAtG,gBAKFQ,EAAAC,EAAAC,cAAA,MAAIsf,UAAWC,KAAOjoB,MACpBwI,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,+BAA8BF,EAAAC,EAAAC,cAAA,WADhC,qTAIAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,2BAA0BF,EAAAC,EAAAC,cAAA,WAD5B,kGAIAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,2CAA0CF,EAAAC,EAAAC,cAAA,WAD5C,qzBAIAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,kDAAiDF,EAAAC,EAAAC,cAAA,WADnD,uMAIAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,iEAAgEF,EAAAC,EAAAC,cAAA,WADlE,oWAIAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,4CAA2CF,EAAAC,EAAAC,cAAA,WAD7C,8EAGEF,EAAAC,EAAAC,cAAA,MAAIsf,UAAWC,KAAOjoB,KAAMkmB,MAAO,CAACy3E,UAAU,gBAC5Cn1F,EAAAC,EAAAC,cAAA,0GACAF,EAAAC,EAAAC,cAAA,kMACAF,EAAAC,EAAAC,cAAA,4KAGJF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,kDAAiDF,EAAAC,EAAAC,cAAA,WADnD,iFAGEF,EAAAC,EAAAC,cAAA,MAAIsf,UAAWC,KAAOjoB,KAAMkmB,MAAO,CAACy3E,UAAU,gBAC5Cn1F,EAAAC,EAAAC,cAAA,mNACAF,EAAAC,EAAAC,cAAA,oKACAF,EAAAC,EAAAC,cAAA,gQACAF,EAAAC,EAAAC,cAAA,wOACAF,EAAAC,EAAAC,cAAA,0LACAF,EAAAC,EAAAC,cAAA,2JACAF,EAAAC,EAAAC,cAAA,qLACAF,EAAAC,EAAAC,cAAA,mEACAF,EAAAC,EAAAC,cAAA,uVACAF,EAAAC,EAAAC,cAAA,qNACAF,EAAAC,EAAAC,cAAA,0OACAF,EAAAC,EAAAC,cAAA,yHAIJF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,+CAA8CF,EAAAC,EAAAC,cAAA,WADhD,sCAGEF,EAAAC,EAAAC,cAAA,MAAIsf,UAAWC,KAAOjoB,KAAMkmB,MAAO,CAACy3E,UAAU,gBAC5Cn1F,EAAAC,EAAAC,cAAA,0LACAF,EAAAC,EAAAC,cAAA,+PACAF,EAAAC,EAAAC,cAAA,mUACAF,EAAAC,EAAAC,cAAA,yIACAF,EAAAC,EAAAC,cAAA,6QARJ,uXAYAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,iDAAgDF,EAAAC,EAAAC,cAAA,WADlD,sCAGEF,EAAAC,EAAAC,cAAA,MAAIsf,UAAWC,KAAOjoB,KAAMkmB,MAAO,CAACy3E,UAAU,gBAC5Cn1F,EAAAC,EAAAC,cAAA,0HACAF,EAAAC,EAAAC,cAAA,4GAGJF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,oCAAmCF,EAAAC,EAAAC,cAAA,WADrC,80BAMFF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK+Q,GAAI,iBAAkB0Q,GAAI,CAAC,EAAE,IAChC5hB,EAAAC,EAAAC,cAACC,EAAA,EAAQs2B,GAAT,CAAY93B,MAAO,YAAakT,UAAW,OAAQzC,WAAY,EAAGyQ,WAAY,UAAWrgB,SAAU,CAAC,EAAE,IAAtG,qBAGAQ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMyhB,GAAI,GAAV,sLAKF5hB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK+Q,GAAI,qBAAsB0Q,GAAI,CAAC,EAAE,IACpC5hB,EAAAC,EAAAC,cAACC,EAAA,EAAQs2B,GAAT,CAAY93B,MAAO,YAAakT,UAAW,OAAQzC,WAAY,EAAGyQ,WAAY,UAAWrgB,SAAU,CAAC,EAAE,IAAtG,yBAGAQ,EAAAC,EAAAC,cAAA,MAAIsf,UAAWC,KAAOjoB,MACpBwI,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,iEAAgEF,EAAAC,EAAAC,cAAA,WADlE,sjBAIAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,8EAA6EF,EAAAC,EAAAC,cAAA,WAD/E,snCAIAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,iCAAgCF,EAAAC,EAAAC,cAAA,WADlC,wVAOJF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK+Q,GAAI,iCAAkC0Q,GAAI,CAAC,EAAE,IAChD5hB,EAAAC,EAAAC,cAACC,EAAA,EAAQs2B,GAAT,CAAY93B,MAAO,YAAakT,UAAW,OAAQzC,WAAY,EAAGyQ,WAAY,UAAWrgB,SAAU,CAAC,EAAE,IAAtG,uCAGAQ,EAAAC,EAAAC,cAAA,MAAIsf,UAAWC,KAAOjoB,MACpBwI,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,0CAAyCF,EAAAC,EAAAC,cAAA,WAD3C,uRAIAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,mCAAkCF,EAAAC,EAAAC,cAAA,WADpC,mOAIAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,+BAA8BF,EAAAC,EAAAC,cAAA,WADhC,sRAOJF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK+Q,GAAI,qBAAsB0Q,GAAI,CAAC,EAAE,IACpC5hB,EAAAC,EAAAC,cAACC,EAAA,EAAQs2B,GAAT,CAAY93B,MAAO,YAAakT,UAAW,OAAQzC,WAAY,EAAGyQ,WAAY,UAAWrgB,SAAU,CAAC,EAAE,IAAtG,yBAGAQ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMyhB,GAAI,GAAV,sqBAKF5hB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK+Q,GAAI,kBAAmB0Q,GAAI,CAAC,EAAE,IACjC5hB,EAAAC,EAAAC,cAACC,EAAA,EAAQs2B,GAAT,CAAY93B,MAAO,YAAakT,UAAW,OAAQzC,WAAY,EAAGyQ,WAAY,UAAWrgB,SAAU,CAAC,EAAE,IAAtG,sBAGAQ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMyhB,GAAI,GAAV,klCAKF5hB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK+Q,GAAI,0BAA2B0Q,GAAI,CAAC,EAAE,IACzC5hB,EAAAC,EAAAC,cAACC,EAAA,EAAQs2B,GAAT,CAAY93B,MAAO,YAAakT,UAAW,OAAQzC,WAAY,EAAGyQ,WAAY,UAAWrgB,SAAU,CAAC,EAAE,IAAtG,+BAGAQ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMyhB,GAAI,GAAV,4rBAGA5hB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMyhB,GAAI,GAAV,+lBAGA5hB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMyhB,GAAI,GAAV,2ZAGA5hB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMyhB,GAAI,GAAV,weAGA5hB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMyhB,GAAI,GAAV,sWAGA5hB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMyhB,GAAI,GAAV,gjCAGA5hB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMyhB,GAAI,GAAV,8mBAGA5hB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMyhB,GAAI,GAAV,6MAKF5hB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK+Q,GAAI,0CAA2C0Q,GAAI,CAAC,EAAE,IACzD5hB,EAAAC,EAAAC,cAACC,EAAA,EAAQs2B,GAAT,CAAY93B,MAAO,YAAakT,UAAW,OAAQzC,WAAY,EAAGyQ,WAAY,UAAWrgB,SAAU,CAAC,EAAE,IAAtG,sDAGAQ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMyhB,GAAI,GAAV,wwCAKF5hB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK+Q,GAAI,0CAA2C0Q,GAAI,CAAC,EAAE,IACzD5hB,EAAAC,EAAAC,cAACC,EAAA,EAAQs2B,GAAT,CAAY93B,MAAO,YAAakT,UAAW,OAAQzC,WAAY,EAAGyQ,WAAY,UAAWrgB,SAAU,CAAC,EAAE,IAAtG,+BAGAQ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMyhB,GAAI,GAAV,yyBAKF5hB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK+Q,GAAI,iCAAkC0Q,GAAI,CAAC,EAAE,IAChD5hB,EAAAC,EAAAC,cAACC,EAAA,EAAQs2B,GAAT,CAAY93B,MAAO,YAAakT,UAAW,OAAQzC,WAAY,EAAGyQ,WAAY,UAAWrgB,SAAU,CAAC,EAAE,IAAtG,0CAGAQ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMyhB,GAAI,GAAV,woBAIA5hB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMyhB,GAAI,GAAV,62DAGA5hB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMyhB,GAAI,GAAV,40BAGA5hB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMyhB,GAAI,GAAV,2xBAGA5hB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMyhB,GAAI,GAAV,4bAGA5hB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMyhB,GAAI,GAAV,mPAGA5hB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMyhB,GAAI,GAAV,2aAGA5hB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMyhB,GAAI,GAAV,giCAKF5hB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK+Q,GAAI,gBAAiB0Q,GAAI,CAAC,EAAE,IAC/B5hB,EAAAC,EAAAC,cAACC,EAAA,EAAQs2B,GAAT,CAAY93B,MAAO,YAAakT,UAAW,OAAQzC,WAAY,EAAGyQ,WAAY,UAAWrgB,SAAU,CAAC,EAAE,IAAtG,qBAGAQ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMyhB,GAAI,GAAV,mzBAKF5hB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK+Q,GAAI,gBAAiB0Q,GAAI,CAAC,EAAE,IAC/B5hB,EAAAC,EAAAC,cAACC,EAAA,EAAQs2B,GAAT,CAAY93B,MAAO,YAAakT,UAAW,OAAQzC,WAAY,EAAGyQ,WAAY,UAAWrgB,SAAU,CAAC,EAAE,IAAtG,qBAGAQ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMyhB,GAAI,GAAV,62DASV5hB,EAAAC,EAAAC,cAACk1F,GAAD,cAtVUz0F,0LCHG00F,eAEnB,SAAAA,EAAYC,GAAQ,IAAAz0F,EAAAT,OAAAU,EAAA,EAAAV,CAAAI,KAAA60F,GAAA,IACLE,EAA+BD,EAApCE,IAAY3xE,EAAwByxE,EAAxBzxE,WAAe4xE,EADjBr1F,OAAA+7B,GAAA,EAAA/7B,CAC0Bk1F,EAD1B,6BAElBz0F,EAAAT,OAAAs1F,EAAA,EAAAt1F,CAAAI,KAAAJ,OAAAu1F,EAAA,EAAAv1F,CAAAi1F,GAAA/uB,KAAA9lE,KAAMi1F,KAED/kD,MAAQ,KACb7vC,EAAK00F,MAAQA,EACb10F,EAAKgjB,WAAaA,EANAhjB,6LAUbL,KAAKkwC,QACRlwC,KAAKkwC,MAAQ,IAAIlwC,KAAK+0F,MAAM,CAC1BK,eAAgB,2BAGdp1F,KAAKkwC,MAAMmlD,8BACXr1F,KAAKkwC,MAAMolD,4RAIV,IAAI3wF,QAAJ,eAAAolB,EAAAnqB,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAa,SAAAgB,EAAOqgC,EAASC,GAAhB,OAAAvhC,EAAAtB,EAAA0B,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,OAClB+gC,EAAQp5B,EAAKinC,MAAMvS,UADD,wBAAAx7B,EAAAN,SAAAG,EAAAhC,SAAb,gBAAAqC,EAAAC,GAAA,OAAAynB,EAAAxnB,MAAAvC,KAAAwC,YAAA,kLAKQm7B,yFACQ39B,KAAKkwC,MAAMqlD,0BAA5Br0B,0CAESlhE,KAAKkwC,MAAMslD,iBAAiB,CACvCC,SAASv0B,EAASu0B,SAClBC,WAAWx0B,EAASw0B,qFAGjB,0QAID11F,KAAKkwC,MAAMylD,iJAGL54C,GACZn9C,OAAAkjC,GAAA,EAAAljC,QAAAu1F,EAAA,EAAAv1F,CAAAi1F,EAAArP,WAAA,0BAAAxlF,MAAA8lE,KAAA9lE,KAA8B,CAAE41F,iBAAiB,WA3CTC,MCAvBC,eAEnB,SAAAA,EAAYhB,GAAQ,IAAAz0F,EAAAT,OAAAU,EAAA,EAAAV,CAAAI,KAAA81F,GAAA,IACLC,EAAgCjB,EAArCE,IAAgBj4C,EAAqB+3C,EAArB/3C,QAAYk4C,EADlBr1F,OAAA+7B,GAAA,EAAA/7B,CAC2Bk1F,EAD3B,0BAElBz0F,EAAAT,OAAAs1F,EAAA,EAAAt1F,CAAAI,KAAAJ,OAAAu1F,EAAA,EAAAv1F,CAAAk2F,GAAAhwB,KAAA9lE,KAAMi1F,KAEDhlD,UAAY,KACjB5vC,EAAK01F,UAAYA,EACjB11F,EAAK08C,QAAUA,EANG18C,mMAUbL,KAAKiwC,YACRjwC,KAAKiwC,UAAY,IAAIjwC,KAAK+1F,UAAU/1F,KAAK+8C,mBAEpB/8C,KAAKg2F,0BAAtBr4D,0CAEEA,EAASs4D,yCACRt4D,uRAKF,IAAIh5B,QAAJ,eAAAolB,EAAAnqB,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAa,SAAAgB,EAAOqgC,EAASC,GAAhB,OAAAvhC,EAAAtB,EAAA0B,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,OAClB+gC,EAAQp5B,EAAKgnC,UAAU+lD,eADL,wBAAA7zF,EAAAN,SAAAG,EAAAhC,SAAb,gBAAAqC,EAAAC,GAAA,OAAAynB,EAAAxnB,MAAAvC,KAAAwC,YAAA,kLAKQm7B,6EACXA,kCACqBA,EAASu4D,0BAA1BC,YACUA,EAASrzF,gDAChBqzF,EAAS,oCAGb,yQAIgBn2F,KAAKg2F,0BAAtBr4D,0CAEEA,EAASy4D,0CACRz4D,2IAIGof,GACZ/8C,KAAKq2F,YAAY,CACfrB,IAAKh1F,KAAK+1F,UACVh5C,YAEFn9C,OAAAkjC,GAAA,EAAAljC,QAAAu1F,EAAA,EAAAv1F,CAAAk2F,EAAAtQ,WAAA,0BAAAxlF,MAAA8lE,KAAA9lE,KAA8B,CAAE41F,iBAAiB,WAnDLC,4BCA3BS,eAEnB,SAAAA,EAAYxB,GAAQ,IAAAz0F,EAAAT,OAAAU,EAAA,EAAAV,CAAAI,KAAAs2F,GAAA,IACLC,EAAiEzB,EAAtEE,IAAiB7mD,EAAqD2mD,EAArD3mD,QAASqoD,EAA4C1B,EAA5C0B,UAAWhsC,EAAiCsqC,EAAjCtqC,QAASisC,EAAwB3B,EAAxB2B,WAAexB,EADnDr1F,OAAA+7B,GAAA,EAAA/7B,CAC4Dk1F,EAD5D,6DAElBz0F,EAAAT,OAAAs1F,EAAA,EAAAt1F,CAAAI,KAAAJ,OAAAu1F,EAAA,EAAAv1F,CAAA02F,GAAAxwB,KAAA9lE,KAAMi1F,KAEDt3D,SAAW,KAChBt9B,EAAKq2F,WAAa,KAClBr2F,EAAK8tC,QAAUA,EACf9tC,EAAKmqD,QAAUA,EACfnqD,EAAKm2F,UAAYA,EACjBn2F,EAAKo2F,WAAaA,EAClBp2F,EAAKk2F,WAAaA,EAVAl2F,+LAcbL,KAAK02F,aACR12F,KAAK02F,WAAa,IAAI12F,KAAKu2F,WAAW,CACpCI,UAAU,EACVxoD,QAASnuC,KAAKmuC,QACdqoD,UAAWx2F,KAAKw2F,UAChBC,WAAYz2F,KAAKy2F,gBAIf94D,EAAW39B,KAAKg2F,+CAEdr4D,EAASs4D,yCACRt4D,2IAQT,OAHK39B,KAAK29B,WACR39B,KAAK29B,SAAW39B,KAAK02F,WAAWE,iBAAiB52F,KAAKw2F,UAAWx2F,KAAKwqD,UAEjExqD,KAAK29B,oFAGGA,6EACXA,kCAEqBA,EAASxgC,KAAK,mCAA/Bg5F,YACUA,EAASrzF,gDAChBqzF,EAAS,oCAGb,8PAIDx4D,EAAW39B,KAAKg2F,+CAEdr4D,EAASk5D,wCACRl5D,2IAIGof,GACZ/8C,KAAKq2F,YAAY,CACft5C,UACAi4C,IAAKh1F,KAAKu2F,WACVpoD,QAASnuC,KAAKmuC,QACdqc,QAASxqD,KAAKwqD,QACdgsC,UAAWx2F,KAAKw2F,UAChBC,WAAYz2F,KAAKy2F,aAEnB72F,OAAAkjC,GAAA,EAAAljC,QAAAu1F,EAAA,EAAAv1F,CAAA02F,EAAA9Q,WAAA,0BAAAxlF,MAAA8lE,KAAA9lE,KAA8B,CAAE41F,iBAAiB,WAnEJC,MCA5BiB,eAEnB,SAAAA,EAAYhC,GAAQ,IAAAz0F,EAAAT,OAAAU,EAAA,EAAAV,CAAAI,KAAA82F,GAAA,IACLC,EAA6DjC,EAAlEE,IAA4CgC,GAAsBlC,EAAtCmC,eAAsCnC,EAAtBkC,UAAa/B,EAD/Cr1F,OAAA+7B,GAAA,EAAA/7B,CACwDk1F,EADxD,4CAElBz0F,EAAAT,OAAAs1F,EAAA,EAAAt1F,CAAAI,KAAAJ,OAAAu1F,EAAA,EAAAv1F,CAAAk3F,GAAAhxB,KAAA9lE,KAAMi1F,KAEDt3D,SAAW,KAChBt9B,EAAK02F,sBAAwBA,EAC7B12F,EAAK22F,SAAWA,EANE32F,yLAUbL,KAAK29B,WACR39B,KAAK29B,SAAW,IAAI39B,KAAK+2F,sBAAsB,CAC7CC,SAASh3F,KAAKg3F,aAMdh3F,KAAK29B,yCAED39B,KAAK29B,SAASs4D,yCA6Bbj2F,KAAK29B,mRAKP39B,KAAK29B,0PAIR39B,KAAK29B,gCACP39B,KAAK29B,SAASk5D,0BACP72F,KAAK29B,mHA9DkCk4D,MCalDqB,GAMEC,cANFD,kBACAE,GAKED,cALFC,qBACAC,GAIEF,cAJFE,gBACAC,GAGEH,cAHFG,gBACAC,GAEEJ,cAFFI,mBACAC,GACEL,cADFK,gBAGIvpD,GAAMC,qoCAENupD,GAAgBxpD,GAAIypD,gCACpBC,GAAiB1pD,GAAI2pD,8BACrBX,GAAiBtmF,GAAcosC,QAAQK,gBACvCy6C,GAAkB5pD,GAAI6pD,gCACtBC,GAAe9pD,GAAI+pD,yBACnBC,GAAgBhqD,GAAIiqD,yBAEpBC,GAAuB,GAE7Bv4F,OAAOwH,KAAKuJ,GAAcosC,QAAQte,UAAU8e,QAAQzzC,QAAQ,SAACg1C,EAAUpyB,GACrEyrE,GAAqBr5C,GAAanuC,GAAcosC,QAAQte,UAAU8e,OAAOuB,GAAW7Q,GAAImqD,uBAG1F,IAAMC,GAAW,IAAInB,GAAkB,CACrCv5C,kBAAmB,CAACs5C,MAGhBqB,GAAS,IAAIlB,GAAqB,CACtCmB,YAAa5nF,GAAcosC,QAAQte,UAAU8e,OAAO05C,IAAgBhpD,GAAImqD,uBAIpEI,GAAS,IAAInB,GAAgB,CACjCrC,IAAKyD,KACLN,wBACAlB,kBACAQ,iBACAE,oBAGIe,GAAS,IAAIpB,GAAgB,CACjCa,wBACAlB,oBAGI0B,GAAgB,IAAI7B,GAAuB,CAC/CG,kBACAkB,wBACAnD,IAAK+B,KACLC,SAAS/oD,GAAImqD,qBACbQ,OAAQ,qCAGJC,GAAY,IAAItB,GAAmB,CACvCvC,IAAK8D,KACL/6C,OAAQ85C,GACRkB,sBAAsB,IAGlBC,GAAS,IAAIxB,GAAgB,CACjCxC,IAAKiE,KACLC,OAAQnB,GACRh7C,QAASk7C,KAGLlC,GAAY,IAAID,GAAmB,CACvCd,IAAKmE,KACLp8C,QAASpsC,GAAcosC,QAAQC,kBAAkBi6C,IAAgB3mF,gBA0BpDg/B,GAAA,CACb+oD,YACAC,UACAK,iBACAjC,WA3BiB,IAAIJ,GAAoB,CACzCtB,IAAKuB,KACLI,UAAU,EACVnsC,QAASysC,GACT9oD,QAASx9B,GAAcw9B,QACvBqoD,UAAW2B,GAAqBlB,IAChCR,WAAY,8CAsBZoC,aACAG,UACAjD,aACAhB,MAtBY,IAAIF,GAAe,CAC/BG,IAAKoE,KACL/1E,WAAW,CACTg2E,SAAU,aACVC,eAAe,EACfv8C,QAAS,CACPw8C,KAAM5oF,GAAcosC,QAAQC,kBAAkBi6C,IAAgB3mF,cAC9Dk6C,QAASysC,GACTl4C,YAAapuC,GAAcosC,QAAQC,kBAAkBi6C,IAAgB3mF,eAEvEkpF,iBAAiB,KAanBhB,UACAE,WChEae,8MAjDbjvF,MAAQ,CACNkvF,iBAAiB,+EAEN1rF,GACXA,EAAEinB,iBACFj1B,KAAK6L,SAAS,SAAArB,GAAK,OAAA5K,OAAAsL,EAAA,EAAAtL,CAAA,GAAS4K,EAAT,CAAgBkvF,iBAAkBlvF,EAAMkvF,qDAG3D,OACEl6F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE6lB,GAAI,CAAC,EAAE,GACPpE,GAAI,CAAC,EAAE,GACPD,GAAI,CAAC,EAAE,GACPvX,cAAe,SACfD,WAAY,WACZE,eAAgB,SAChBzL,gBAAiB,QACjBkB,aAAeU,KAAKC,MAAM0yB,SAAW,OAAS,OAC9CnV,UAAW,GAEXhe,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMiK,cAAe,MAAOD,WAAY,SAAUrP,MAAO,EAAG8jB,QAASpe,KAAKC,MAAMoe,YAAanB,MAAO,CAACoD,OAAQ,YAC3G9gB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKrF,MAAO,IACVkF,EAAAC,EAAAC,cAACC,EAAA,EAAQyf,GAAT,CACEpgB,SAAU,CAAC,EAAE,GACb6P,WAAY,YACZD,WAAY,EACZzQ,MAAO6B,KAAKC,MAAM0yB,SAAW,OAAS,YACtCnN,GAAI,GACDxlB,KAAKC,MAAM05F,WAGlBn6F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMrF,MAAO,GAAKuP,eAAgB,YAChCrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgN,KAAM3M,KAAKC,MAAM0yB,SAAW,kBAAoB,oBAChDx0B,MAAO6B,KAAKC,MAAM0yB,SAAW,OAAS,YACtCtmB,KAAM,YAIZ7M,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMrF,MAAO,GACV0F,KAAKC,MAAM0yB,UACVnzB,EAAAC,EAAAC,cAACC,EAAA,EAAKoK,EAAN,CAAQsH,UAAW,UAAWrS,SAAU,CAAC,EAAE,GAAI4sB,wBAAyB,CAAEC,OAAQ7rB,KAAKC,MAAM25F,mBA1ChFz5F,aC8IV05F,8MA5IbrvF,MAAQ,CACNsvF,aAAa,KACbC,gBAAiB,UACjBC,iBAAkB,CAChB,CACEC,EAAG,gBACHx6F,EAAC,0VAEH,CACEw6F,EAAG,2DACHx6F,EAAC,ihBAEH,CACEw6F,EAAG,sCACHx6F,EAAC,gRAGLy6F,oBAAqB,CACnB,CACED,EAAG,6BACHx6F,EAAC,4LAEH,CACEw6F,EAAG,yCACHx6F,EAAC,+SAEH,CACEw6F,EAAG,uBACHx6F,EAAC,uQAGL06F,eAAgB,CACd,CACEF,EAAG,iCACHx6F,EAAC,0ZAEH,CACEw6F,EAAG,oCACHx6F,EAAC,6eAEH,CACEw6F,EAAG,uDACHx6F,EAAC,2aAII26F,GACTp6F,KAAK6L,SAAS,SAAArB,GAAK,OAAA5K,OAAAsL,EAAA,EAAAtL,CAAA,GAAS4K,EAAT,CAAgBuvF,gBAAiBK,EAASN,aAAc,8CAGhE9rF,EAAEmC,GACbnC,EAAEinB,iBACFj1B,KAAK6L,SAAS,SAAArB,GAAK,OAAA5K,OAAAsL,EAAA,EAAAtL,CAAA,GAAS4K,EAAT,CAAgBsvF,aAActvF,EAAMsvF,eAAe3pF,EAAI,KAAOA,uCAG1E,IAAAlH,EAAAjJ,KAAAq6F,EAC0Er6F,KAAKwK,MAA/EwvF,EADAK,EACAL,iBAAkBD,EADlBM,EACkBN,gBAAiBG,EADnCG,EACmCH,oBAAqBC,EADxDE,EACwDF,eACzDG,EAAcN,EAAiB9+E,IAAI,SAACy+E,EAAUxpF,GAAX,OACvC3Q,EAAAC,EAAAC,cAAC66F,GAAD,CAAYl8E,YAAc,SAAArQ,GAAC,OAAI/E,EAAKuxF,aAAaxsF,EAAEmC,IAAKwiB,SAAU1pB,EAAKuB,MAAMsvF,eAAiB3pF,EAAGoN,IAAG,WAAA9Y,OAAa0L,GAAKwpF,SAAUA,EAASM,EAAGL,OAAQD,EAASl6F,EAAGi2B,GAAU,IAANvlB,EAAU,EAAI,OAE9KsqF,EAAiBP,EAAoBh/E,IAAI,SAACy+E,EAAUxpF,GAAX,OAC7C3Q,EAAAC,EAAAC,cAAC66F,GAAD,CAAYl8E,YAAc,SAAArQ,GAAC,OAAI/E,EAAKuxF,aAAaxsF,EAAEmC,IAAKwiB,SAAU1pB,EAAKuB,MAAMsvF,eAAiB3pF,EAAGoN,IAAG,cAAA9Y,OAAgB0L,GAAKwpF,SAAUA,EAASM,EAAGL,OAAQD,EAASl6F,EAAGi2B,GAAU,IAANvlB,EAAU,EAAI,OAEjLuqF,EAAYP,EAAej/E,IAAI,SAACy+E,EAAUxpF,GAAX,OACnC3Q,EAAAC,EAAAC,cAAC66F,GAAD,CAAYl8E,YAAc,SAAArQ,GAAC,OAAI/E,EAAKuxF,aAAaxsF,EAAEmC,IAAKwiB,SAAU1pB,EAAKuB,MAAMsvF,eAAiB3pF,EAAGoN,IAAG,SAAA9Y,OAAW0L,GAAKwpF,SAAUA,EAASM,EAAGL,OAAQD,EAASl6F,EAAGi2B,GAAU,IAANvlB,EAAU,EAAI,OAE5KwqF,EAAwC,YAApBZ,EACpBa,EAA2C,eAApBb,EACvBc,EAAsC,UAApBd,EACxB,OACEv6F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEiK,cAAe,UAEfpK,EAAAC,EAAAC,cAACq7B,GAAD,CACEzpB,GAAI,EACJ4N,GAAI,CAAC,EAAE,GACPtQ,WAAY,EACZ5P,SAAU,CAAC,EAAE,GACb2oB,UAAWC,IAAQxI,IALrB,8BAUA5f,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEiK,cAAe,SACfC,eAAgB,SAChBF,WAAY,UAEZnK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMrF,MAAO,CAAC,EAAE,IAAM6mB,GAAI,CAAC,EAAE,GAAIvX,cAAe,MAAOC,eAAgB,iBACrErK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMrF,MAAO,EAAE,EAAG+W,UAAW,SAAUxH,eAAgB,SAAUuxB,aAAeu/D,EAAoB,oBAAsB,QACxHn7F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,EACJ1C,WAAY,EACZ5P,SAAU,CAAC,EAAG,GACdqS,UAAW,SACX+M,QAAS,kBAAMnV,EAAK6xF,WAAW,YAC/B38F,MAAOw8F,EAAoB,OAAS,YACpC37E,UAAW,CAAC,UAAW27E,EAAoB,WAAa,KAP1D,YAYFn7F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMrF,MAAO,EAAE,EAAG+W,UAAW,SAAUxH,eAAgB,SAAUuxB,aAAew/D,EAAuB,oBAAsB,QAC3Hp7F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,EACJ1C,WAAY,EACZ5P,SAAU,CAAC,EAAG,GACdqS,UAAW,SACX+M,QAAS,kBAAMnV,EAAK6xF,WAAW,eAC/B38F,MAAOy8F,EAAuB,OAAS,YACvC57E,UAAW,CAAC,UAAW47E,EAAuB,WAAa,KAP7D,wBAYFp7F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMrF,MAAO,EAAE,EAAG+W,UAAW,SAAUxH,eAAgB,SAAUuxB,aAAey/D,EAAkB,oBAAsB,QACtHr7F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,EACJ1C,WAAY,EACZ5P,SAAU,CAAC,EAAG,GACdqS,UAAW,SACX+M,QAAS,kBAAMnV,EAAK6xF,WAAW,UAC/B38F,MAAO08F,EAAkB,OAAS,YAClC77E,UAAW,CAAC,UAAW67E,EAAkB,WAAa,KAPxD,cAaJr7F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKrF,MAAO,EAAG4kB,GAAI,CAAC,EAAG,GAAI5N,GAAI,CAAC,EAAG,IAChCqpF,GAAqBL,EACrBM,GAAwBH,EACxBI,GAAmBH,YArIdv6F,kCCiGH46F,8MA9Fbt6F,cAAgB,gFAGVT,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,4JAK9CD,KAAKgJ,iMAGkB+B,EAAUqC,mEACjCpN,KAAKgJ,kJAGE,IAAAC,EAAAjJ,KAEDg7F,EAAWh7F,KAAKC,MAAMg7F,YAAcviF,KAAKyW,MAAM,IAAInvB,KAAKC,MAAMg7F,aAAa,EAAIviF,KAAKyW,MAAM,IAAInvB,KAAKC,MAAMi7F,MAAMp4F,QAAQ,EACvH+G,EAAiB7J,KAAKC,MAAM4J,eAAiB7J,KAAKC,MAAM4J,eAAiB,gBAE/E,OACErK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACP6mB,GAAI,CAAC,EAAE,GACPjE,MAAO,CACL+jB,SAAS,QAEXt3B,WAAY,aACZE,eAAgBA,EAChBD,cAAe,CAAC,SAAS,QAGvB5J,KAAKC,MAAMi7F,MAAMhgF,IAAK,SAACnR,EAAE2iB,GAAH,OACpBltB,EAAAC,EAAAC,cAAC8gB,GAAD,CACE/F,eAAe,EACf8C,IAAG,QAAA9Y,OAAUioB,GACb5N,UAAW,CACT/U,EAAE,EACFuH,GAAG,CAAC,EAAE,GACN5C,QAAQ,OACR/E,WAAW,SACX1K,OAAO,CAAC,OAAO,QACf4K,eAAe,SACf4b,GAAuB,kBAAnB5b,EAAqC,CAAC,EAAE,GAAK,EACjDqT,MAAM,CACJ7L,UAAU,SACViR,KAAKrZ,EAAKhJ,MAAM+K,SAAW,KAAtB,KAAAvG,OAAkCu2F,EAAlC,QAKPjxF,EAAEyqF,KACAh1F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwhB,GAAI,CAAC,EAAE,GACPjE,MAAO,CACL5iB,MAAM,OACN2E,OAAO,OACPyP,QAAQ,OACR/E,WAAW,SACXE,eAAe,UAEjBgb,KAAM9a,EAAEyqF,KACR10F,OAAQ,SACRuR,UAAW,SACXtR,IAAK,gCAELP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE4R,IAAKxH,EAAE0yB,MACPniC,MAAO,OACP2E,OAAQ,OACRyzB,UAAW,UAIflzB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE4R,IAAKxH,EAAE0yB,MACPniC,MAAO,OACP2E,OAAQ,OACRyzB,UAAW,CAAC,OAAO,qBApFfvyB,aC4ETg7F,8MAzEb16F,cAAgB,gFAGVT,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,4JAK9CD,KAAKgJ,iMAGkB+B,EAAUqC,mEACjCpN,KAAKgJ,kJAGE,IAAAC,EAAAjJ,KACP,OACER,EAAAC,EAAAC,cAAC8gB,GAAD,CACE1B,UAAW,CACT/U,EAAE,EACFyb,GAAG,CAAC,EAAE,GACNC,GAAG,CAAC,EAAE,GACNnrB,MAAM,CAAC,EAAE,SAEXmgB,gBAAeza,KAAKC,MAAMu0F,KAC1Bn2E,YAAare,KAAKC,MAAMu0F,KAAO,SAAAxmF,GAAC,OAAItD,OAAOorB,KAAK7sB,EAAKhJ,MAAMu0F,OAAQ,MAEnEh1F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEiK,cAAe,UAEfpK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,EACJnT,MAAO,OACPa,SAAU,CAAC,EAAE,IAEZgB,KAAKC,MAAM8uB,MAEdvvB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,EACJtS,SAAU,EACV4P,WAAY,KAEX5O,KAAKC,MAAMnG,OAEd0F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEsnB,WAAY,OACZ/J,MAAO,CACLxO,QAAQ,OACRpP,aAAa,MACbsK,cAAc,MACdD,WAAW,WANf,cAUEnK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2M,GAAI,EACJD,KAAM,QACNlO,MAAO,OACP+e,MAAO,CACLk+E,UAAU,kBAEZzuF,KAAM,gCAnEIxM,kCCiJTk7F,sdA3IYtwF,EAAUqC,kMAKjC,OACE5N,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,EAAG,CAAC,EAAE,GACN2G,GAAI,gBAEJlR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMiK,cAAe,CAAC,SAAS,UAAWD,WAAY,SAAUE,eAAgB,UAC9ErK,EAAAC,EAAAC,cAACq7B,GAAD,CACE7b,GAAI,CAAC,EAAE,GACP5N,GAAI,CAAC,EAAE,GACP1C,WAAY,EACZ5P,SAAU,CAAC,EAAE,GACb2oB,UAAWC,IAAQxI,IALrB,gBASA5f,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPqP,WAAY,SACZwoB,SAAU,CAAC,OAAO,QAClBvoB,cAAe,CAAC,SAAS,QAEzBpK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,EAAG,CAAC,EAAE,GACN0b,GAAI,CAAC,EAAE,GACPD,GAAI,CAAC,EAAE,GACPlrB,MAAO,CAAC,EAAE,KACV6W,SAAU,WACVvH,cAAe,SACfoV,UAAWC,KAAOq8E,YAElB97F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,EACJhX,MAAO,EACPqP,WAAY,SACZE,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOrF,MAAO,CAAC,QAAQ,SAAUiX,IAAK,6CAExC/R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKrF,MAAO,GACVkF,EAAAC,EAAAC,cAACC,EAAA,EAAQs2B,GAAT,CAAY5kB,UAAW,SAAUxC,WAAY,YAAa7P,SAAU,CAAC,EAAE,GAAIsS,GAAI,CAAC,EAAE,GAAInT,MAAO,QAA7F,wBAGAqB,EAAAC,EAAAC,cAACC,EAAA,EAAQyf,GAAT,CAAYpgB,SAAU,EAAGmiB,GAAI,CAAC,EAAE,GAAI9P,UAAW,SAAUzC,WAAY,EAAGyQ,WAAY,KAApF,2IAMJ7f,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,EAAG,CAAC,EAAE,GACN0b,GAAI,CAAC,EAAE,GACPD,GAAI,CAAC,EAAE,GACPlrB,MAAO,CAAC,EAAE,KACV6W,SAAU,WACVvH,cAAe,SACfoV,UAAWC,KAAOq8E,YAElB97F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,EACJhX,MAAO,EACPqP,WAAY,SACZE,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOrF,MAAO,CAAC,QAAQ,SAAUiX,IAAK,iDAExC/R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKrF,MAAO,GACVkF,EAAAC,EAAAC,cAACC,EAAA,EAAQs2B,GAAT,CAAY5kB,UAAW,SAAUxC,WAAY,YAAa7P,SAAU,CAAC,EAAE,GAAIsS,GAAI,CAAC,EAAE,GAAInT,MAAO,QAA7F,8BAGAqB,EAAAC,EAAAC,cAACC,EAAA,EAAQyf,GAAT,CAAYpgB,SAAU,EAAGmiB,GAAI,CAAC,EAAE,GAAI9P,UAAW,SAAUzC,WAAY,EAAGyQ,WAAY,KAApF,8IAMJ7f,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,EAAG,CAAC,EAAE,GACN0b,GAAI,CAAC,EAAE,GACPD,GAAI,CAAC,EAAE,GACPlrB,MAAO,CAAC,EAAE,KACV6W,SAAU,WACVvH,cAAe,SACfoV,UAAWC,KAAOq8E,YAElB97F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,EACJhX,MAAO,EACPqP,WAAY,SACZE,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOrF,MAAO,CAAC,QAAQ,SAAUiX,IAAK,uCAExC/R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKrF,MAAO,GACVkF,EAAAC,EAAAC,cAACC,EAAA,EAAQs2B,GAAT,CAAY5kB,UAAW,SAAUxC,WAAY,YAAa7P,SAAU,CAAC,EAAE,GAAIsS,GAAI,CAAC,EAAE,GAAInT,MAAO,QAA7F,yBAGAqB,EAAAC,EAAAC,cAACC,EAAA,EAAQyf,GAAT,CAAYpgB,SAAU,EAAGmiB,GAAI,CAAC,EAAE,GAAI9P,UAAW,SAAUzC,WAAY,EAAGyQ,WAAY,KAApF,4IAKJ7f,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,EAAG,CAAC,EAAE,GACN0b,GAAI,CAAC,EAAE,GACPD,GAAI,CAAC,EAAE,GACPlrB,MAAO,CAAC,EAAE,KACV6W,SAAU,WACVvH,cAAe,SACfoV,UAAWC,KAAOq8E,YAElB97F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,EACJhX,MAAO,EACPqP,WAAY,SACZE,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOrF,MAAO,CAAC,QAAQ,SAAUiX,IAAK,6CAExC/R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKrF,MAAO,GACVkF,EAAAC,EAAAC,cAACC,EAAA,EAAQs2B,GAAT,CAAY5kB,UAAW,SAAUxC,WAAY,YAAa7P,SAAU,CAAC,EAAE,GAAIsS,GAAI,CAAC,EAAE,GAAInT,MAAO,QAA7F,4BAGAqB,EAAAC,EAAAC,cAACC,EAAA,EAAQyf,GAAT,CAAYpgB,SAAU,EAAGmiB,GAAI,CAAC,EAAE,GAAI9P,UAAW,SAAUzC,WAAY,EAAGyQ,WAAY,KAApF,qJArISlf,aCyXVo7F,8MArXb/wF,MAAQ,CACN6C,cAAc,QAIhB5M,cAAgB,OA2BhB+6F,wCAAqB,SAAAx5F,IAAA,IAAA4qE,EAAAv/D,EAAAouF,EAAAC,EAAA90F,EAAA,OAAA7F,EAAAtB,EAAA0B,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,UAEbsrE,EAAevsE,EAAKI,cAAcG,gBAAgB,CAAC,aAAaP,EAAKJ,MAAMqsC,WAE5EjsC,EAAKJ,MAAM2b,uBAAwBgxD,EAAap4B,WAJlC,CAAAryC,EAAAb,KAAA,eAAAa,EAAAP,OAAA,UAKV,GALU,cAQfyL,EAAgB,KAChBouF,EAAe,KACbC,EAAa,GACb90F,EAAkBvG,EAAKJ,MAAMiH,oBAAoB7G,EAAKJ,MAAMqsC,UAX/CnqC,EAAAb,KAAA,EAYbjB,EAAKI,cAAc0G,aAAavH,OAAOwH,KAAKR,GAA5C,eAAA7E,EAAAnC,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAA6D,SAAAC,EAAOyC,GAAP,IAAAlD,EAAAkT,EAAAD,EAAA,OAAA1S,EAAAtB,EAAA0B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAC3Dd,EAAcoG,EAAgBlD,GAD6BtC,EAAA6D,GAEzD5E,EAAKJ,MAAMqsC,SAF8ClrC,EAAAE,KAG1D,SAH0DF,EAAA6D,GAAA,EAc1D,SAd0D7D,EAAA6D,GAAA,wBAAA7D,EAAAE,KAAA,EAKtCjB,EAAKI,cAAcu3B,aAAax3B,GALM,cAKvDkT,EALuDtS,EAAAK,OAMzB,OAApBiS,EAASukB,SACvByjE,EAAWh4F,GAASgQ,EAASukB,OACxBwjE,IAAgBA,EAAa3uE,GAAGpZ,EAASukB,UAC5CwjE,EAAe/nF,EAASukB,OACxB5qB,EAAgB3J,IAVyCtC,EAAAQ,OAAA,0BAAAR,EAAAE,KAAA,GAetCjB,EAAKI,cAAcmW,cAAcpW,GAAY,GAfP,eAezDiT,EAfyDrS,EAAAK,KAgBxDg6F,IAAgBA,EAAa3uE,GAAGrZ,KACnCgoF,EAAehoF,EACfpG,EAAgB3J,GAlB2CtC,EAAAQ,OAAA,qCAAAR,EAAAS,SAAAZ,EAAAjB,SAA7D,gBAAAqC,GAAA,OAAAN,EAAAQ,MAAAvC,KAAAwC,YAAA,IAZa,OAoCnBnC,EAAKwL,SAAS,CACZwB,kBArCiB,yBAAAlL,EAAAN,SAAAG,EAAAhC,oFAxBfA,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,4JAK9CD,KAAKgJ,0JAILhJ,KAAKw7F,wGAGkBzwF,EAAUqC,mEACjCpN,KAAKgJ,YAEwB+B,EAAU6Q,uBAAyB5b,KAAKC,MAAM2b,sBAAwB5b,KAAKC,MAAM2b,sBAE5G5b,KAAKw7F,2JA8CP,IAAM5uB,EAAe5sE,KAAKS,cAAcG,gBAAgB,CAAC,aAAaZ,KAAKC,MAAMqsC,WAC3EqvD,EAAc,KAAK37F,KAAKS,cAAcG,gBAAgB,CAAC,YAAY,cAAc,IAAIZ,KAAKC,MAAMqsC,SAEhG9rC,EAAcR,KAAKwK,MAAM6C,cAAgBrN,KAAKC,MAAMiH,oBAAoBlH,KAAKC,MAAMqsC,UAAUtsC,KAAKwK,MAAM6C,eAAiB,KAE/H,OACE7N,EAAAC,EAAAC,cAAC8gB,GAAD,CACE1B,UAAW,CACT4W,GAAG,CAAC,EAAE,GACNxW,GAAG,CAAC,EAAE,GACN5S,GAAG,CAAC,SAAS,GACbhS,MAAM,CAAC,EAAE,QACT6nB,GAAG,CAAC,SAAS,OACbxY,WAAW,SACXC,cAAc,SACdC,eAAe,aACf5K,OAAO,CAAC,cAAc,UAExB2f,UAA4C,qBAAzB5e,KAAKC,MAAM2e,WAA4B5e,KAAKC,MAAM2e,WAErEpf,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,EACJzH,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE4R,IAAKq7D,EAAa17D,KAClBjS,OAAQ,CAAC,QAAQ,YAGrBO,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE6lB,GAAI,EACJ7b,WAAY,SACZE,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACq7B,GAAD,CACEnsB,WAAY,EACZ5P,SAAU,CAAC,EAAE,UAEZ4tE,EAAa9yE,QAGlB0F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,EACJ5N,GAAI,CAAC,EAAE,GACPlF,UAAW,OACXzC,WAAY,aACZE,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwhB,GAAI,CAAC,EAAE,GACPvS,WAAY,IACZyC,UAAW,UAEVu7D,EAAa5jD,OAIhB4jD,EAAap4B,WACXh1C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,EACJ5N,GAAI,CAAC,EAAE,GACPrS,OAAQ,QACR2K,cAAe,MACfC,eAAgB,SAChBF,WAAY,CAAC,WAAW,QAExBnK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPiX,IAAK,sCAIT/R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE6lB,GAAI,CAAC,EAAE,GACP5b,cAAe,MACfD,WAAY,aACZE,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,GACPqP,WAAY,SACZC,cAAe,SACfC,eAAgB,SAChBmvB,YAAW,aAAAv0B,OAAezE,KAAKC,MAAM1G,MAAMR,OAAO4D,UAElD6C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPqP,WAAY,SACZE,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACV4P,WAAY,EACZzQ,MAAO,WACPkT,UAAW,UAJb,OAQA7R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwc,UAAW,SACXC,QAASpc,KAAKS,cAAcG,gBAAgB,CAAC,WAAW,aAExDpB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2M,GAAI,EACJK,KAAM,OACNN,KAAM,MACNlO,MAAO,gBAIbqB,EAAAC,EAAAC,cAACwiB,GAADtiB,OAAAC,OAAA,CACEmS,UAAW,CACTrF,KAAK,MACLqL,aAAY,EACZ/X,MAAM,CACJqD,SAAS,EACTsL,WAAW,EACXzQ,MAAM,YACNkT,UAAU,SACVrS,SAAS,CAAC,EAAE,SACZ0K,UAAU,CACRG,eAAe,aAIjB7J,KAAKC,MAfX,CAgBEO,YAAcA,EACdkD,MAAO1D,KAAKwK,MAAM6C,cAClBpG,iBAAkBjH,KAAKC,MAAMqsC,YAE/B9sC,EAAAC,EAAAC,cAACwiB,GAADtiB,OAAAC,OAAA,CACEmS,UAAW,CACTrF,KAAK,mBACL1M,MAAM,CACJqD,SAAS,EACTsL,WAAW,EACX5P,SAAS,CAAC,EAAE,GACZb,MAAM,WACNkT,UAAU,SACV3H,UAAU,CACRG,eAAe,aAIjB7J,KAAKC,MAdX,CAeEO,YAAcA,EACdkD,MAAO1D,KAAKwK,MAAM6C,cAClBpG,iBAAkBjH,KAAKC,MAAMqsC,aAGjC9sC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,GACPqP,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPqP,WAAY,SACZE,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACV4P,WAAY,EACZzQ,MAAO,WACPkT,UAAW,UAJb,SAQA7R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwc,UAAW,SACXC,QAASpc,KAAKS,cAAcG,gBAAgB,CAAC,WAAW,gBAExDpB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2M,GAAI,EACJK,KAAM,OACNN,KAAM,MACNlO,MAAO,gBAIbqB,EAAAC,EAAAC,cAACwiB,GAADtiB,OAAAC,OAAA,CACEmS,UAAW,CACTrF,KAAK,QACL1M,MAAM,CACJ2O,WAAW,EACXzQ,MAAM,YACNkT,UAAU,SACVrS,SAAS,CAAC,EAAE,SACZ0K,UAAU,CACRG,eAAe,aAIjB7J,KAAKC,MAbX,CAcEO,YAAcA,EACdkD,MAAO1D,KAAKwK,MAAM6C,cAClBpG,iBAAkBjH,KAAKC,MAAMqsC,eAOpCsgC,EAAap4B,YACZh1C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,EACJ5kB,MAAO,EACP2E,OAAQ,OACR2K,cAAe,MACfD,WAAY,SACZE,eAAgB,SAChB6G,GAAE,GAAAjM,OAAKzE,KAAKC,MAAMqsC,SAAhB,uBAEF9sC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACP2E,OAAQ,OACRsS,IAAG,sBAAA9M,OAAwBzE,KAAKC,MAAMqsC,SAAnC,iBAoBX9sC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACP2E,OAAQ,OACRkS,SAAU,WACVqM,UAAW,qCAGTovD,EAAap4B,WACXh1C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPqP,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwiB,GAAI,EACJnjB,SAAU,EACV4P,WAAY,IACZzQ,MAAO,YACP+e,MAAO,CACL0+E,UAAU,UAEZ30E,WAAY,aARd,gBAcFznB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEklB,KAAM82E,EACNz+E,MAAO,CAACxO,QAAQ,OAAOpU,MAAM,SAE3BkF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPqP,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwiB,GAAI,EACJnjB,SAAU,EACV4P,WAAY,EACZzQ,MAAO,YACP8oB,WAAY,aALd,cAOc2lD,EAAa9yE,OAE3B0F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE0M,KAAM,QACNlO,MAAO,YACPwO,KAAM,4BA3WFxM,mCC8FX07F,eAvFb,SAAAA,EAAY57F,GAAO,IAAAI,EAAA,OAAAT,OAAAU,EAAA,EAAAV,CAAAI,KAAA67F,IACjBx7F,EAAAT,OAAAs1F,EAAA,EAAAt1F,CAAAI,KAAAJ,OAAAu1F,EAAA,EAAAv1F,CAAAi8F,GAAA/1B,KAAA9lE,KAAMC,KARRuK,MAAQ,CACNsxF,WAAW,EACXC,SAAS,EACT56B,MAAO,KACP/kD,QAAS,IAKT/b,EAAKmK,MAAQ,CAAEsxF,WAAW,GAC1Bz7F,EAAK27F,aAAe37F,EAAK27F,aAAanxF,KAAlBjL,OAAAgZ,EAAA,EAAAhZ,QAAAgZ,EAAA,EAAAhZ,CAAAS,KACpBA,EAAK47F,iBAAmB57F,EAAK47F,iBAAiBpxF,KAAtBjL,OAAAgZ,EAAA,EAAAhZ,QAAAgZ,EAAA,EAAAhZ,CAAAS,KAJPA,4EAON2N,GAAG,IAAA/E,EAAAjJ,KAGd,GAFAgO,EAAEinB,kBAEGj1B,KAAKwK,MAAMuxF,QAEd,OADA/7F,KAAK6L,SAAS,CAACuQ,QAAQ,kDAAmD8/E,aAAa,SAChF,EAGTl8F,KAAK6L,SAAS,CAACiwF,WAAU,IAEzBj5D,IAAMs5D,KAAKxrF,GAAc0/B,uBAAuBC,SAAU,CACxD6wB,MAASnhE,KAAKwK,MAAM22D,QACnBi7B,KAAK,SAAAnnC,GACgB,YAAlBA,EAAE/oD,KAAKvO,OACTsL,EAAK4C,SAAS,CAACuQ,QAAQ,0DAA2D8/E,aAAa,UAE/FjzF,EAAK4C,SAAS,CAACuQ,QAAQ,4DAA6D8/E,aAAa,UAGpG19B,MAAM,SAAA97B,GACLz5B,EAAK4C,SAAS,CAACuQ,QAAQ,4DAA6D8/E,aAAa,iDAItFluF,GACbhO,KAAK6L,SAAS,CAAEkwF,QAAS/tF,EAAElO,OAAO+zB,mDAGnB7lB,GACXA,GAAKA,EAAElO,SACTE,KAAK6L,SAAS,CAAEs1D,MAAOnzD,EAAElO,OAAOsO,QAChCJ,EAAElO,OAAOu8F,WAAWC,UAAUljF,IAAI,mDAI7B,IAAAnL,EAAAjO,KAEP,OACIR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKuf,GAAI,CAAC,EAAE,GAAIiT,SAAU,OAAQ73B,MAAO,GACvCkF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM48F,SAAUv8F,KAAKg8F,cACnBx8F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMiK,cAAe,CAAC,SAAS,OAAQD,WAAY,CAAC,SAAS,cAAeE,eAAgB,UAC1FrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKrF,MAAO,CAAC,EAAE,KACbkF,EAAAC,EAAAC,cAACC,EAAA,EAAK68F,MAAN,CAAYliG,MAAO,EAAGyW,MAAO,IAC3BvR,EAAAC,EAAAC,cAACC,EAAA,EAAKkiB,MAAN,CACEzY,KAAK,QACLuD,KAAK,QACLya,UAAQ,EACR9sB,MAAO,EACPmiG,QAAS,OACTp1E,OAAQ,EACRroB,SAAU,CAAC,EAAE,GACbM,aAAc,EACd65B,GAAI,EACJhQ,GAAI,EACJ9X,UAAW,CAAC,SAAS,QACrBiW,YAAa,oBACb9J,UAAW,kBACX4d,aAAc,oBACd5Z,SAAUxhB,KAAKi8F,oBAGnBz8F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM2R,GAAI,CAAC,EAAE,GAAI1H,cAAe,MAAOD,WAAY,UACjDnK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUye,QAAU,SAAApQ,GAAC,OAAIC,EAAKyuF,eAAe1uF,IAAK+C,MAAO,6BAA+BqW,UAAQ,IAChG5nB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMxB,MAAO,OAAQ8oB,WAAY,OAAQnnB,OAAQ,SAAUC,IAAI,+BAA+B8kB,KAAM,mDAApG,mBAED7kB,KAAKwK,MAAM4R,SAAWpc,KAAKwK,MAAM4R,QAAQtZ,QACxCtD,EAAAC,EAAAC,cAACC,EAAA,EAAKoK,EAAN,CAAQqX,GAAI,EAAGlC,GAAI,CAAC,EAAE,GAAI5N,GAAI,EAAGD,UAAW,CAAC,SAAS,QAASlT,MAAO6B,KAAKwK,MAAM0xF,cAAel8F,KAAKwK,MAAM4R,UAG/G5c,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKrF,MAAO,CAAC,EAAE,IAAOkrB,GAAI,CAAC,EAAE,SAC3BhmB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQqf,UAAWC,KAAO/nB,eAAgBkS,KAAK,SAAS9O,MAAO,GAA/D,0BArFa6F,aC2Bdw8F,oLA3BX,IAAM92E,EAAcjmB,OAAOC,OAAO,CAChCkK,EAAE,EACFyT,UAAU,EACVljB,MAAM,OACN2E,OAAO,OACPymB,UAAU,QACVpmB,aAAa,MACblH,SAAS4H,KAAKC,MAAM7H,UACpB4H,KAAKC,MAAM4lB,aAIb,OAFAA,EAAY3mB,SAAW2mB,EAAYvrB,MAGhCkF,EAAAC,EAAAC,cAACmsC,GAAD,CACEhmB,YAAaA,EACbxH,YAAare,KAAKC,MAAMoe,aAExB7e,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACExB,MAAO,YACPwO,KAAM3M,KAAKC,MAAM28B,SACjBvwB,KAAOrM,KAAKC,MAAM2M,SAAW5M,KAAKC,MAAM2M,SAAW,kBAtBhCzM,aC2Cfy8F,8MA3CbpyF,MAAQ,2EAGN,IAAIqyF,EAAiB,KAErB,OAAQ78F,KAAKC,MAAMq+B,SACjB,IAAK,UACHu+D,EAAiBC,IAAaC,QAChC,MACA,IAAK,aACHF,EAAiBC,IAAaE,WAChC,MACA,IAAK,UACHH,EAAiBC,IAAaG,QAMlC,OAAIJ,EAEAr9F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMrF,MAAS0F,KAAKC,MAAM+K,SAAoB,QAAT,QAAmBmG,SAAU,QAASC,OAAQ,OAAQrH,EAAK/J,KAAKC,MAAM+K,SAAmB,EAAR,MAAY8E,MAAO,IAAKC,OAAQ,KACpJvQ,EAAAC,EAAAC,cAACm9F,EAAD,CACE3/E,MAAO,CAAC5iB,MAAM,QACd8hB,QAASpc,KAAKC,MAAMmc,QACpB8hB,iBAAkBl+B,KAAKC,MAAMi+B,iBAC7Bg/D,WAAW,IAEb19F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMye,QAASpe,KAAKC,MAAMk9F,YAAajgF,MAAQld,KAAKC,MAAM+K,SAAW,CAACmG,SAAS,WAAWtB,IAAI,OAAOC,MAAM,OAAOxV,MAAM,OAAO2E,OAAO,QAAU,CAACkS,SAAS,WAAWtB,IAAI,OAAOC,MAAM,OAAOxV,MAAM,OAAO2E,OAAO,SAC/MO,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgN,KAAM,QACNxO,MAAO,YACPkO,KAAOrM,KAAKC,MAAM+K,SAAW,KAAO,SAOvC,YAxCwB7K,aC2GpBi9F,8MAtGb5yF,MAAQ,CACN6iF,SAAS,KACTgQ,kBAAkB,QAIpB58F,cAAgB,gFAGVT,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,4JAK9CD,KAAKgJ,YACLhJ,KAAKs9F,oMAGkBvyF,EAAUqC,yEACjCpN,KAAKgJ,YACC4S,EAAuB7Q,EAAU6Q,uBAAyB5b,KAAKC,MAAM2b,sBACxCgE,KAAKC,UAAU9U,EAAU7D,uBAAyB0Y,KAAKC,UAAU7f,KAAKC,MAAMiH,sBAC7E0U,IAChC5b,KAAKs9F,kRAMFt9F,KAAKC,MAAMiH,qBAAwBlH,KAAKC,MAAM2b,+DAC1C,0BAMC5b,KAAKS,cAAcysF,qCAF3BnzD,WACAszD,aAGIgQ,EAAoBhQ,EAASvlF,KAAKulF,EAAShoF,MAAM00B,EAAOz0B,IAAI,OAElEtF,KAAK6L,SAAS,CACZwhF,WACAgQ,yJAIK,IAAAp0F,EAAAjJ,KACP,OAAOA,KAAKwK,MAAM6iF,SAChB7tF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,GAEPkF,EAAAC,EAAAC,cAAC6c,EAAA9c,EAAD,CACE+c,MAAO,EACPlZ,SAAU,EACVmZ,QAAS,IACTC,UAAW,GACXC,WAAW,EACXC,SAAU,QACVE,MAAOtR,WAAWxL,KAAKwK,MAAM6iF,UAC7BxwE,IAAKrR,WAAWxL,KAAKwK,MAAM6yF,mBAC3BtgF,aAAe,SAAAC,GAAC,MAAI,KAAK/T,EAAKxI,cAAc4I,YAAY2T,EAAE,KAEzD,SAAAjb,GAAA,IAAGkb,EAAHlb,EAAGkb,WAAHlb,EAAe+a,MAAf,OACCtd,EAAAC,EAAAC,cAAA,QACEwd,MAAQjU,EAAKhJ,MAAMs9F,aAAet0F,EAAKhJ,MAAMs9F,aAAe,CAC1D7uF,QAAQ,QACRvQ,MAAM,YACN4qB,WAAW,SACXla,WAAW5F,EAAKhJ,MAAM1G,MAAMS,MAAMG,QAClCyU,WAAW3F,EAAKhJ,MAAM1G,MAAMG,YAAY,GACxC2X,UAAWpI,EAAKhJ,MAAM+K,SAAW,SAAW,QAC5ChM,SAAUiK,EAAKhJ,MAAM+K,SAAW,QAAU/B,EAAKhJ,MAAM1G,MAAME,UAAU,IAEvE0jB,IAAKF,OAKuB,qBAAxBjd,KAAKC,MAAMg8B,UAA4Bj8B,KAAKC,MAAMg8B,WACxDz8B,EAAAC,EAAAC,cAACq7B,GAADn7B,OAAAC,OAAA,CACE+O,WAAY,EACZ5P,SAAU,CAAC,EAAE,GACbb,MAAO,YACPkT,UAAW,CAAC,SAAS,UACjBrR,KAAKC,MAAMi8B,eAGbl8B,KAAKC,MAAMg8B,SAAWj8B,KAAKC,MAAMg8B,SAC/Bz8B,EAAAC,EAAAC,cAACC,EAAA,EAAKwlC,KAAN,CAAWv2B,WAAY,UAAWzQ,MAAO,UAAWa,SAAU,WAA9D,2BAAiGQ,EAAAC,EAAAC,cAACC,EAAA,EAAKwlC,KAAN,CAAWhnC,MAAO,YAAayQ,WAAY,EAAG5P,SAAU,OAAxD,gBAO3G,YApG4BmB,aCchCq9F,IAAY,EA04BDC,8MAv4BbjzF,MAAQ,CACNytB,OAAO,KACPylE,YAAY,EACZC,cAAc,EACdC,eAAe,EACfC,aAAY,EACZC,aAAa,KACb7kB,cAAc,KACd8kB,eAAc,EACd11F,gBAAgB,KAChB21F,mBAAmB,EACnBC,kBAAkB,KAClBC,mBAAmB,KACnBjxF,qBAAqB,KACrBkxF,yBAAwB,KAS1B19F,cAAgB,OAchBw9F,kBAAoB,SAACL,GACnBA,EAAiBA,GAAgB,EAAIA,EAAiB,EACtDv9F,EAAKwL,SAAS,CAAC+xF,sBAcjBQ,eAAiB,SAAAlhG,GACf,IAAIygG,EAAgBt9F,EAAKmK,MAAMmzF,cAClB,SAATzgG,GAAmBygG,EAAct9F,EAAKmK,MAAMkzF,YAC9CC,IACkB,SAATzgG,GAAmBygG,EAAc,GAC1CA,IAGF,IAAMU,EAAah+F,EAAKJ,MAAM+K,SAAW,EAAI,IACvCszF,EAAW5zF,OAAO4N,OAAP,6BAAA7T,OAA2Ck5F,EAA3C,MACXK,GAAsBxyF,WAAW8yF,EAASntF,WAAWnB,KAAKquF,GAAY,KAE5Eh+F,EAAKwL,SAAS,CACZ8xF,gBACAK,0BAmBJO,iBAAmB,WACjB,GAAIf,GAAU,CAKZ,IAHA,IAAMgB,EAAcnzF,SAASozF,uBAAuB,cAChDX,EAAe,EAEV3tF,EAAE,EAAEA,EAAEquF,EAAY17F,OAAOqN,IAAI,CACpC,IAAMmrF,EAAakD,EAAYruF,GAC/B,GAAImrF,GAAcA,EAAWoD,aAAa,CACxC,IAAMC,EAAUrD,EAAWsD,UAAYtD,EAAWsD,UAAYtD,EAAWoD,aAAaE,UAClFl0F,OAAO2kD,SAAWsvC,EAAQ,MAC5Bb,EAAe3tF,EAAE,IAIvBqtF,IAAY,EAERzxF,SAAS+xF,KAAkB/xF,SAAS1L,EAAKmK,MAAMszF,eACjDz9F,EAAKwL,SAAS,CAACiyF,qBAKrBe,oCAAiB,SAAA78F,IAAA,IAAAqG,EAAA4C,EAAAiuE,EAAAC,EAAAlsE,EAAAC,EAAA4xF,EAAAC,EAAA,OAAAh+F,EAAAtB,EAAA0B,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,cAEX+G,EAAkBhI,EAAKI,cAAciB,MAAM,GAEzCuJ,EAAW,CACfgtB,OAAQ,KACR5vB,gBAAgB,KAChB4E,qBAAqB,KACrBC,yBAAyB,MAGrBgsE,EAAgB,GAChBC,EAAoB,GACpBlsE,EAAuB,GACvBC,EAA2B,GAdlB/K,EAAAb,KAAA,EAgBTjB,EAAKI,cAAc0G,aAAa9G,EAAKJ,MAAMO,YAAYyP,UAAvD,eAAAlO,EAAAnC,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAiE,SAAAC,EAAOiP,EAAaC,GAApB,IAAAo+C,EAAAl+C,EAAAiC,EAAAG,EAAAknE,EAAA3rD,EAAA41C,EAAA8C,EAAA,OAAA3lE,EAAAtB,EAAA0B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAC/DitD,EAAer+C,EAAaxM,MAC5B2M,EAAeH,EAAa1J,QAAQ8J,cAF2BlP,EAAAE,KAAA,EAIVqD,QAAQC,IAAI,CACrEvE,EAAKI,cAAc2zE,mBAAmB7lB,GACtCluD,EAAKI,cAAckoC,iBAAiB4lB,GAClCr+C,EAAaw7B,UAAUk4B,aAAevjE,EAAKI,cAAcuC,oBAAoBurD,EAAar+C,EAAaw7B,UAAUk4B,aAAaj3D,KAAKuD,EAAaw7B,UAAUk4B,aAAar6B,QAAU,OAPhH,UAAAj3B,EAAAlR,EAAAK,KAAAgR,EAAA7S,OAAAmF,EAAA,EAAAnF,CAAA0S,EAAA,GAIhEqnE,EAJgElnE,EAAA,GAI/Cub,EAJ+Cvb,EAAA,GAIhCmxD,EAJgCnxD,EAAA,GAUhEknE,EAVgE,CAAAv4E,EAAAE,KAAA,gBAAAF,EAAAQ,OAAA,kBAejEgiE,GAAgB1zD,EAAa5M,WAC/B41E,EAAc7oE,GAAgBuzD,EAC9BA,EAAevjE,EAAKI,cAAc4C,iBAAiBugE,EAAa1zD,EAAa5M,WAGzEojE,EAAqBrmE,EAAKI,cAAc4C,iBAAiBs2E,EAAgB3rD,EAAc41C,GAE7Fv7D,EAAkBA,EAAgBP,KAAK4+D,GAEvCyS,EAAkB9oE,GAAgBspE,EAClC1sE,EAAqBoD,GAAgBq2D,EAzBgC,yBAAAtlE,EAAAS,SAAAZ,EAAAjB,SAAjE,gBAAAqC,EAAAC,GAAA,OAAAP,EAAAQ,MAAAvC,KAAAwC,YAAA,IAhBS,cA4CXnC,EAAKmK,MAAM2zF,0BACTW,EAAsBtzF,WAAWnD,EAAgB0N,YAC/CgpF,EAAen/F,OAAOwH,KAAK6F,GAAsBnK,OACvDlD,OAAOwH,KAAK6F,GAAsBnD,QAAQ,SAACuG,EAAaF,GACtD,IAAI6uF,EAAQxzF,WAAWyB,EAAqBoD,GAAc0F,YACtD5F,IAAM4uF,EAAa,EACrBC,EAAQF,GAERE,EAAQxzF,WAAWkN,KAAKW,UAAUylF,EAAqBA,EAAoB,GAAKA,EAAoB,GACpGA,GAAuBE,GAEzB/xF,EAAqBoD,GAAgBhQ,EAAKI,cAAciB,MAAMs9F,MAIlEp/F,OAAOwH,KAAK6F,GAAsBnD,QAAQ,SAACuG,EAAaF,GACtD,IACMw2D,EADqB15D,EAAqBoD,GACE/K,IAAI+C,GACtD6E,EAAyBmD,GAAgBs2D,IAG3C17D,EAAS5C,gBAAkBA,EAC3B4C,EAASgC,qBAAuBA,EAChChC,EAASiC,yBAA2BA,EAEhC7M,EAAKmK,MAAMyuE,gBACbhuE,EAASgtB,OAAS53B,EAAKI,cAAcyH,UAAU7H,EAAKmK,MAAMyuE,cAAchsE,EAAqB5E,IAG/FhI,EAAKwL,SAASZ,GAzEC9I,EAAAP,OAAA,SA2ERqJ,GA3EQ,yBAAA9I,EAAAN,SAAAG,EAAAhC,WA8EjB40E,6BAAU,SAAAlyE,IAAA,IAAAyvF,EAAAC,EAAAvvB,EAAAoW,EAAAhuE,EAAA,OAAAlK,EAAAtB,EAAA0B,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,cAAAuB,EAAAvB,KAAA,EACWjB,EAAKI,cAAcw0E,gBAAgB,WAD9C,UACFkd,EADEtvF,EAAApB,KAAA,CAAAoB,EAAAvB,KAAA,eAAAuB,EAAAjB,OAAA,UAIC,GAJD,cAOFwwF,EAAYD,EAAKC,UAAUl3E,IAAI,SAACsoD,EAAKrzD,GAAQ,OAAOqzD,EAAKztD,WAAWzF,gBACpEuyD,EAAOsvB,EAAKtvB,KACZoW,EAAgB,GAEtB54E,EAAKJ,MAAMO,YAAYyP,UAAUnG,QAAQ,SAACrL,EAAK0R,GAE7C,IAAME,EAAe5R,EAAK+H,QAAQuP,WAAWzF,cACvCsiF,EAAYR,EAAUx6E,QAAQvH,GACpC,IAAoB,IAAfuiF,EAAmB,CACtB,IAAMC,EAAchwB,EAAK+vB,GACzB3Z,EAAc5oE,GAAgBhQ,EAAKI,cAAciB,OAAOrB,EAAKI,cAAc6sD,MAAMulC,OAI/E5nF,EAAW,CACfgtB,OAAQ,KACRghD,iBAGE54E,EAAKmK,MAAMyC,sBAAwB5M,EAAKmK,MAAMnC,kBAChD4C,EAASgtB,OAAS53B,EAAKI,cAAcyH,UAAU+wE,EAAc54E,EAAKmK,MAAMyC,qBAAqB5M,EAAKmK,MAAMnC,kBAG1GhI,EAAKwL,SAASZ,GA9BNpI,EAAAjB,OAAA,SA+BDqJ,GA/BC,yBAAApI,EAAAhB,SAAAa,EAAA1C,WAkCVi/F,mDAAe,SAAA/7F,EAAM8K,GAAN,OAAAjN,EAAAtB,EAAA0B,KAAA,SAAAiC,GAAA,cAAAA,EAAA/B,KAAA+B,EAAA9B,MAAA,OACbjB,EAAKJ,MAAMi/F,kBAAkBlxF,EAAG,KAChCtD,OAAOu0C,SAASp6B,KAAO,UAFV,wBAAAzhB,EAAAvB,SAAAqB,EAAAlD,iEAKfm/F,YAAc,SAACtB,GACbx9F,EAAKwL,SAAS,CACZgyF,mBAIJuB,oBAAsB,SAACh0D,GAErB,IAAMi0D,EAAe,WACnB30F,OAAOu0C,SAAW,KAAK7T,GAGrB/qC,EAAKJ,MAAMuB,QACb69F,IAEAh/F,EAAKJ,MAAM6sC,0BAA0BuyD,iUAvNnCr/F,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,oDAK9CD,KAAKgJ,gKASLhJ,KAAKC,MAAMq/F,mBAAmBt/F,KAAKC,OAE/BD,KAAKC,MAAM2b,0MA0BQ7Q,EAAWqC,mEAElCpN,KAAKgJ,YACLhJ,KAAKC,MAAMq/F,mBAAmBt/F,KAAKC,MAAM8K,GAEZ/K,KAAKC,MAAM2b,sBAAwB7Q,EAAU6Q,uBAAyB5b,KAAKC,MAAM2b,2JAyKvG,IAAA3S,EAAAjJ,KACC+8C,EAAY/8C,KAAKC,MAAjB88C,QACFn2C,EAAkB,GAQxB,OAPAhH,OAAO0X,OAAOtX,KAAKC,MAAMiH,qBAAqB4C,QAAS,SAAAgqC,GACrDl0C,OAAOwH,KAAK0sC,GAAQhqC,QAAS,SAAApG,IACa,IAApCkD,EAAgBgR,QAAQlU,IAC1BkD,EAAgB6J,KAAK/M,OAKzBlE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEV,OAAQ,QACR+f,UAAWC,KAAOsgF,aAClBriF,MAAO,CACLsiF,cAAgBziD,EAAQ0iD,iBAA2B,IAAR,QAG7CjgG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEw5B,GAAI,CAAC,EAAE,GACPzN,GAAI,CAAC,EAAE,GACPgK,GAAI,CAAC,QAAS,OACd1W,UAAWC,KAAOpoB,gBAClBuV,UAAYsM,KAAKG,IAAK7Y,KAAKC,MAAMwY,YAAmC,KAAvBzY,KAAKC,MAAMwY,YAAmB,MAE3EjZ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKwR,SAAU,WAAYC,OAAQ,IACjC5R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgpB,SAAU,SACVhf,WAAY,aACZC,cAAe,CAAC,SAAS,OACzBsV,GAAI,CAAC,MAAMxG,KAAKG,IAAuB,KAAnBnO,OAAO+N,YAAkB,KAAK,OAElDjZ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,CAAC,EAAE,EAAE,GACZuP,eAAgB,CAAC,SAAS,aAE1BrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwpB,GAAI,EACJ7uB,MAAO,EACP+W,UAAW,SACXzH,cAAe,SACfuoB,SAAU,CAAC,OAAQ,QACnBxoB,WAAY,CAAC,SAAS,eAEtBnK,EAAAC,EAAAC,cAACC,EAAA,EAAQkoB,GAAT,CACEjZ,WAAY,EACZzQ,MAAO,QACP0Q,WAAY,YACZ7P,SAAU,CAAC,QAAQ,UACnBqS,UAAW,CAAC,SAAS,QACrBgO,WAAY,CAAC,UAAU,UACvBnC,MAAO,CACL5iB,MAAM,OACNolG,cAAe1/F,KAAKC,MAAM+K,SAAW,SAAW,YATpD,kBAcAxL,EAAAC,EAAAC,cAACC,EAAA,EAAQkoB,GAAT,CACEvW,GAAI,CAAC,EAAE,GACPnT,MAAO,QACPyQ,WAAY,IACZyQ,WAAY,UACZxQ,WAAY,YACZ7P,SAAU,CAAC,QAAQ,UACnBqS,UAAW,CAAC,SAAS,QACrB6L,MAAO,CACL5iB,MAAM,OACNolG,cAAe1/F,KAAKC,MAAM+K,SAAW,SAAW,YAVpD,kBAeAxL,EAAAC,EAAAC,cAACC,EAAA,EAAQ+0F,GAAT,CACEx3E,MAAO,CACL5iB,MAAM,QAER6D,MAAO,QACPyQ,WAAY,IACZ5P,SAAU,CAAC,EAAE,SACbqS,UAAW,CAAC,SAAS,YAPvB,sJAYGrR,KAAKC,MAAM+K,UACVxL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,GAEJ1f,EAAAC,EAAAC,cAACmsC,GAAD,CACExtB,YAAc,SAACrQ,GACbtD,OAAOu0C,SAAStyB,KAAO1jB,EAAKxI,cAAcG,gBAAgB,CAAC,YAAY,cAAc,IAAIhB,OAAOwH,KAAK6B,EAAKxI,cAAcG,gBAAgB,CAAC,gBAAgB,KAF7J,sBAWVpB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwiB,GAAI,CAAC,OAAO,GACZ7nB,MAAO,CAAC,EAAE,EAAE,GACZgS,GAAI,CAAC,EAAE,SACP+E,UAAW,SACXF,SAAU,WACVvH,cAAe,SACf3K,OAAQ,CAAC,QAAQ,SACjB4K,eAAgB,CAAC,aAAa,aAE9BrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqQ,KAAM,EACNF,MAAO,EACPxV,MAAO,OACP2E,OAAQ,QACR4Q,IAAK,CAAC,UAAU,KAChBsB,SAAU,WACVpB,OAAQ,CAAC,IAAI,WACb4Y,SAAuC,IAA7B3oB,KAAKwK,MAAMmzF,cAAsB,UAAY,UAEvDn+F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEkQ,IAAK,CAAC,UAAU,GAChBjG,cAAe,MACfuH,SAAU,WACVT,GAAI,kBACJpW,MAAO,CAA8C,IAA7CsF,OAAOwH,KAAKuJ,GAAc2jC,YAAYxxC,OAAW,IAAI,QAC7D7D,OAAQ,CAAC,OAAO,SAChB8Q,OAAQ,CAAC,MAAM,WACflG,eAAgB,aAChBmG,KAAMhQ,KAAKwK,MAAMwzF,mBACjB9gF,MAAO,CACLyiF,UAAU,UACVtsE,WAAW,0BAIXzzB,OAAOwH,KAAKuJ,GAAc2jC,YAAYp5B,IAAI,SAACoxB,EAASszD,GAAV,OACxCpgG,EAAAC,EAAAC,cAACmgG,GAADjgG,OAAAC,OAAA,GACMoJ,EAAKhJ,MADX,CAEEqsC,SAAUA,EACV/uB,IAAG,YAAA9Y,OAAc6nC,UAM3B9sC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACP4kB,GAAI,CAAC,EAAE,QACPxO,GAAI,qBACJ7G,eAAgB,CAAC,SAAS,eAE1BrK,EAAAC,EAAAC,cAACogG,GAAD,CACEj6E,YAAa,CACX1D,GAAG,CAAC,EAAE,IAERya,SAAU,YACVxkC,SAAuC,IAA7B4H,KAAKwK,MAAMmzF,cACrBt/E,YAAc,SAAArQ,GAAC,OAAI/E,EAAKm1F,eAAe,WAEzC5+F,EAAAC,EAAAC,cAACogG,GAAD,CACEljE,SAAU,eACVve,YAAc,SAAArQ,GAAC,OAAI/E,EAAKm1F,eAAe,SACvChmG,SAAU4H,KAAKwK,MAAMmzF,gBAAkB39F,KAAKwK,MAAMkzF,mBAQ9Dl+F,EAAAC,EAAAC,cAACqgG,GAAD,MAEAvgG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,CAAC,EAAE,GACPokB,GAAI,CAAC,EAAE,GACPvM,GAAI,CAAC,EAAE,GACPzY,GAAI,YAEJlR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8lB,GAAI,OACJ0M,SAAU,CAAC,OAAO,SAElB3yB,EAAAC,EAAAC,cAACq7B,GAAD,CACEzpB,GAAI,EACJ4N,GAAI,CAAC,EAAE,GACPtQ,WAAY,EACZ5P,SAAU,CAAC,EAAE,GACb2oB,UAAWC,IAAQxI,IALrB,6BASA5f,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,CAAC,EAAE,GACb4P,WAAY,IACZzQ,MAAO,YACPkT,UAAW,UAJb,wGAQA7R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACP6mB,GAAI,CAAC,EAAE,GACPxX,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACsgG,GAADpgG,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEEs9F,aAAc,CACZ7uF,QAAQ,QACRvQ,MAAM,YACNwqB,SAAU,SACVtX,UAAW,SACX0X,WAAY,SACZqJ,aAAc,WACdvjB,WAAW7O,KAAKC,MAAM1G,MAAMS,MAAMG,QAClCyU,WAAW5O,KAAKC,MAAM1G,MAAMG,YAAY,GACxCsF,SAAUgB,KAAKC,MAAM+K,SAAWhL,KAAKC,MAAM1G,MAAME,UAAU,GAAKuG,KAAKC,MAAM1G,MAAME,UAAU,IAE7FwiC,SAAU,KACVC,cAAe,CACb7qB,UAAU,aAGd7R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,EACJxR,OAAQ,SACRuR,UAAW,SACXtR,IAAK,+BACL8kB,KAAM,wDAENrlB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,OACPiX,IAAK,iCAGT/R,EAAAC,EAAAC,cAACq7B,GAAD,CACEvV,GAAI,CAAC,EAAE,GACPtG,GAAI,CAAC,EAAE,GACPtQ,WAAY,EACZ5P,SAAU,CAAC,EAAE,GACbb,MAAO,YACPwpB,UAAWC,IAAQxI,IANrB,sBAUA5f,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgK,WAAY,SACZE,eAAgB,SAChBD,cAAe,CAAC,SAAS,QAEzBpK,EAAAC,EAAAC,cAACugG,GAAD,CACEnmG,MAAO,eACPi1B,KAAM,8CACNylE,KAAM,yDAERh1F,EAAAC,EAAAC,cAACugG,GAAD,CACEnmG,MAAO,iBACPi1B,KAAM,gDACNylE,KAAM,+DAMhBh1F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,CAAC,EAAE,GACPiC,GAAI,CAAC,EAAE,GACPC,GAAI,CAAC,EAAE,GACP1Q,GAAI,cACJsO,UAAWC,KAAOihF,oBAElB1gG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8lB,GAAI,OACJ0M,SAAU,CAAC,OAAO,SAElB3yB,EAAAC,EAAAC,cAACq7B,GAAD,CACEzpB,GAAI,EACJ1C,WAAY,EACZ5P,SAAU,CAAC,EAAE,GACb2oB,UAAWC,IAAQxI,IAJrB,mBAQA5f,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,EACJtS,SAAU,CAAC,EAAE,GACb4P,WAAY,IACZzQ,MAAO,YACPkT,UAAW,UALb,wEASA7R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,EACJ5kB,MAAO,EACPqP,WAAY,SACZC,cAAe,SACfC,eAAgB,CAAC,SAAS,kBAoC1BrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,EACJ5kB,MAAO,EACPsP,cAAe,CAAC,SAAS,OACzBD,WAAY,CAAC,SAAS,cACtBE,eAAgB,CAAC,SAAS,eAE1BrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,CAAC,EAAE,GACPhX,MAAO,CAAC,EAAE,IACVsP,cAAe,SACfD,WAAY,CAAC,SAAS,cACtBE,eAAgB,CAAC,SAAS,eAE1BrK,EAAAC,EAAAC,cAACq7B,GAAD,CACEzpB,GAAI,EACJ1C,WAAY,EACZ+Y,UAAWC,IAAQu4E,GACnBnhG,SAAU,CAAC,EAAE,WAJf,2BASAQ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,EACJoa,GAAI,CAAC,EAAE,GACPra,UAAW,CAAC,SAAS,YAHvB,iNAKgN7R,EAAAC,EAAAC,cAAA,WALhN,qCAOAF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,EACJ1C,WAAY,KAFd,qBAMApP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,EACJ1H,cAAe,OAGbhD,EAAgBsU,IAAK,SAAAxX,GAAK,OACxBlE,EAAAC,EAAAC,cAACwiB,GAAD,CACExe,MAAOA,EACPsO,UAAW,CACTrF,KAAK,OACL1M,MAAM,CACJkiB,GAAG,EACH7nB,MAAM,QACN2E,OAAO,UAGXse,IAAG,SAAA9Y,OAAWf,QAKtBlE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,EACJ5kB,MAAO,EACPqP,WAAY,SACZC,cAAe,CAAC,SAAS,OACzBC,eAAgB,CAAC,SAAS,eAE1BrK,EAAAC,EAAAC,cAACmsC,GAAD,CACEhmB,YAAa,CACXvrB,MAAM,CAAC,EAAE,SAEX+jB,YAAc,SAACrQ,GACbtD,OAAOorB,KAAK,qCAGdt2B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPqP,WAAY,WACZE,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACV4P,WAAY,EACZzQ,MAAO,SAHT,iBAOAqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2M,GAAI,EACJD,KAAM,QACNlO,MAAO,QACPwO,KAAM,yBAIZnN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,CAAC,EAAE,GACP5S,GAAI,CAAC,EAAE,IAFT,MAMA9M,EAAAC,EAAAC,cAAC40F,EAAD,CACEp1E,GAAI,CAAC,EAAE,GACP5S,GAAI,CAAC,EAAE,GACPtN,SAAU,EACVioB,WAAY,UACZpC,KAAM,8CALR,gBA6CJrlB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,CAAC,EAAE,KAEVkF,EAAAC,EAAAC,cAAA,UACET,OAAQ,MACRnF,MAAO,YACPojB,MAAO,CACLmK,OAAO,IACP/sB,MAAO,OACP2E,OAAQ,QACR0pB,SAAS,SACTyyE,UAAW,YAEbgF,QAAS,kCACT7uF,IAAK,wqCASjB/R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+1B,GAAI,CAAC,EAAE,GACPvM,GAAI,CAAC,EAAE,GACPzY,GAAI,aAEJlR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8lB,GAAI,OACJ0M,SAAU,CAAC,OAAO,SAElB3yB,EAAAC,EAAAC,cAACq7B,GAAD,CACEzpB,GAAI,EACJ4N,GAAI,CAAC,EAAE,GACPtQ,WAAY,EACZ5P,SAAU,CAAC,EAAE,GACb2oB,UAAWC,IAAQxI,IALrB,aASA5f,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,EACJtS,SAAU,CAAC,EAAE,GACb4P,WAAY,IACZzQ,MAAO,YACPkT,UAAW,UALb,4CASA7R,EAAAC,EAAAC,cAAC2gG,GAADzgG,OAAAC,OAAA,CACEgK,eAAgB,SAChBoxF,YAAa,EACbC,MAAO,CACL,CACE1G,KAAK,wBACL/3D,MAAM,kCAER,CACE+3D,KAAK,+BACL/3D,MAAM,6BAER,CACE+3D,KAAK,6BACL/3D,MAAM,mCAQR,CACE+3D,KAAK,uBACL/3D,MAAM,kCAER,CACE+3D,KAAK,wBACL/3D,MAAM,gCAER,CACE+3D,KAAK,qBACL/3D,MAAM,mCAER,CACE+3D,KAAK,mCACL/3D,MAAM,sCAGNz8B,KAAKC,UAKfT,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+1B,GAAI,CAAC,EAAE,GACPvM,GAAI,CAAC,EAAE,GACPzY,GAAI,aAEJlR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8lB,GAAI,OACJ0M,SAAU,CAAC,OAAO,SAElB3yB,EAAAC,EAAAC,cAACq7B,GAAD,CACEzpB,GAAI,EACJ4N,GAAI,CAAC,EAAE,GACPtQ,WAAY,EACZ5P,SAAU,CAAC,EAAE,GACb2oB,UAAWC,IAAQxI,IALrB,uBASA5f,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,EACJtS,SAAU,CAAC,EAAE,GACb4P,WAAY,IACZzQ,MAAO,YACPkT,UAAW,UALb,gEASA7R,EAAAC,EAAAC,cAAC2gG,GAADzgG,OAAAC,OAAA,CACEq7F,MAAO,CACL,CACE1G,KAAK,+BACL/3D,MAAM,gCAQR,CACE+3D,KAAK,mBACL/3D,MAAM,4BAER,CACE+3D,KAAK,wBACL/3D,MAAM,4BAER,CACE+3D,KAAK,qBACL/3D,MAAM,+BAGNz8B,KAAKC,UAKfT,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK+Q,GAAG,MAAMglB,GAAI,CAAC,EAAE,GAAIvM,GAAI,CAAC,EAAE,IAC9B3pB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKwyB,SAAU,CAAC,OAAO,QAAS1M,GAAI,OAAQtE,GAAI,CAAC,EAAE,IACjD3hB,EAAAC,EAAAC,cAAC4gG,GAAD,CAAKjzF,cAAerN,KAAKC,MAAMoN,cAAe7M,YAAaR,KAAKC,MAAMO,gBAI1EhB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM+Q,GAAG,WAAW9G,cAAe,SAAUuH,SAAU,WAAYtH,eAAgB,SAAUF,WAAY,SAAUwf,GAAI,CAAC,EAAE,GAAIhI,GAAI,CAAC,EAAE,IACnI3hB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMiK,cAAe,SAAUC,eAAgB,CAAC,SAAS,cAAeF,WAAY,CAAC,SAAS,cAAerP,MAAO,EAAG63B,SAAU,CAAC,OAAO,SACvI3yB,EAAAC,EAAAC,cAACC,EAAA,EAAQs2B,GAAT,CAAY93B,MAAO,OAAQkT,UAAW,CAAC,SAAS,QAASzC,WAAY,EAAGyQ,WAAY,UAAWrgB,SAAU,CAAC,EAAE,IAA5G,6BAGAQ,EAAAC,EAAAC,cAACC,EAAA,EAAQs2B,GAAT,CAAY93B,MAAO,YAAakT,UAAW,CAAC,SAAS,QAASzC,WAAY,EAAGyQ,WAAY,UAAWrgB,SAAU,CAAC,EAAE,IAAjH,yCAGAQ,EAAAC,EAAAC,cAAC6gG,GAAD,QAIJ/gG,EAAAC,EAAAC,cAACk1F,GAAD,CAAQp0F,YAAaR,KAAKC,MAAMO,cAG9BR,KAAKC,MAAMugG,mBACThhG,EAAAC,EAAAC,cAAC+gG,GAAD7gG,OAAAC,OAAA,CAAsBmL,SAAUhL,KAAKC,MAAM+K,UAAchL,KAAKC,MAAMugG,kBAApE,CAAuFrD,YAAan9F,KAAKC,MAAMygG,6BAj4BrGvgG,aCoMPwgG,8MAnNbn2F,MAAQ,CACNo2F,gBAAe,KAIjBngG,cAAgB,gFAGVT,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,iDAI9B2gG,GAChB5gG,KAAK6L,SAAS,CACZ+0F,wKAKF5gG,KAAKgJ,iMAGkB+B,EAAWqC,mEAClCpN,KAAKgJ,kJAGE,IAAAC,EAAAjJ,KACP,IAAKA,KAAKC,MAAM4gG,KAAK/9F,OACnB,OAAO,KAGT,IAAMg+F,EAAe9gG,KAAKC,MAAM4gG,KAAK/kF,OAAO,SAAAilF,GAC1C,IAAMC,OAAiCj+F,IAApBg+F,EAASx4E,QAAwBw4E,EAASx4E,OAC7D,OAAQtf,EAAKhJ,MAAM+K,UAAYg2F,IAGjC,OAAKF,EAAah+F,OAKhBtD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,EAAG,EACHH,cAAe,CAAC,MAAM,YAGnB5J,KAAKC,MAAM+K,UACVxL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,EAAG,EACHuH,GAAI,EACJ1H,cAAe,MACfD,WAAY,SACZE,eAAgB,UAEhBrK,EAAAC,EAAAC,cAAC60F,EAAA,EAAD,CAAYnlC,GAAG,KACb5vD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwR,SAAU,WACVlS,OAAQ,CAAC,OAAO,QAChBsS,IAAI,+BAMZuvF,EAAa5lF,IAAI,SAAC6lF,EAASE,GACzB,IACMC,EADiBH,EAASI,eACO5hG,EAAU6hG,IACjD,OACE5hG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE6lB,GAAI,CAAC,EAAE,GACPjI,IAAG,QAAA9Y,OAAUw8F,GACb3mG,MAAO,CAAC,EAAEwmG,EAAah+F,OAAO,SAE9BtD,EAAAC,EAAAC,cAACwhG,EAAD,CACE9xC,GAAI2xC,EAAS31D,MACbvmB,KAAMk8E,EAAS31D,MACfluB,MAAO,CAAC8J,eAAe,SAEvBxnB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,EAAG,CAAC,EAAE,GACNzK,aAAc,CAAC,EAAE,GACjBsK,cAAe,MACfD,WAAY,SACZvL,gBAAkB2iG,EAASM,SAAW,UAAY,cAClD7jF,UAAWujF,EAASM,SAAW,qCAAuC,MAEtE7hG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPqP,WAAY,SACZC,cAAe,CAAC,SAAS,OACzBC,eAAgB,CAAC,SAAS,eAEzBk3F,EAAStkE,OACRj9B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwiB,GAAI,CAAC,EAAE,GACP7V,GAAI,CAAC,EAAE,GACPgF,GAAI,CAAC,EAAE,GACP+gB,MAAO,SACP9gB,IAAMwvF,EAASM,SAAWN,EAAStkE,MAASskE,EAAS1uD,cAAgB0uD,EAAS1uD,cAAgB0uD,EAAStkE,MACvGx9B,OAAQ,CAAC,QAAQ,WAGpB8hG,EAAS7vF,MACR1R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwiB,GAAI,CAAC,EAAE,GACP7V,GAAI,CAAC,EAAE,GACPgF,GAAI,CAAC,EAAE,GACP+gB,MAAO,SACP1lB,KAAMo0F,EAAS7vF,KACf7E,KAAOpD,EAAKhJ,MAAM+K,SAAW,QAAU,QACvC7M,MAAQ4iG,EAASM,SAAWN,EAAS9uE,QAAU,cAGnDzyB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEiP,WAAY,EACZzQ,MAAO,YACPkT,UAAW,SACXrS,SAAU,CAAC,OAAO,GAClBke,MAAO,CACL6L,WAAW,WAGZg4E,EAAShwF,cArFrB,YAzCe5Q,uBCw5DbmhG,8MAl5Db92F,MAAQ,CACNwB,WAAW,GACXu1F,UAAU,KACVx0F,UAAU,KACVxB,WAAW,QAuBb9K,cAAgB,OAShB+gG,SAAW,SAAApzF,GACT,OAAQrC,SAASqC,IAAQ,IAAO5C,WAAW4C,EAAM,KAAMoC,QAAQ,GAAG,IAAMhF,WAAW4C,IAAS,IAAI/N,EAAKJ,MAAMoN,iBAG7Go0F,iCAAc,SAAA/+F,IAAA,IAAAg/F,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA9xF,EAAA+xF,EAAA56F,EAAA66F,EAAA5yE,EAAAJ,EAAAliB,EAAAf,EAAAu1F,EAAAjyE,EAAAjC,EAAA60E,EAAAC,EAAAntF,EAAAotF,EAAAhuF,EAAAkhC,EAAA97B,EAAAuV,EAAAu3D,EAAA+b,EAAAlyF,EAAAmyF,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA5qE,EAAA6qE,EAAAhuF,EAAAiuF,EAAA,OAAAjiG,EAAAtB,EAAA0B,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,UAEPjB,EAAKJ,MAAMO,aAAgBH,EAAKJ,MAAMoN,eAAkBhN,EAAKJ,MAAMgjG,WAAc5iG,EAAKJ,MAAM4hG,WAFrF,CAAAh/F,EAAAvB,KAAA,eAAAuB,EAAAjB,OAAA,UAGH,GAHG,OAMN8/F,EAAmB,SAAAzhG,GAAK,OAC5BT,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,EACJhX,MAAO,EACPqP,WAAY,SACZC,cAAe,OAEfpK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+rB,GAAI,EACJxO,MAAO,CACL6J,UAAU,IACVzE,KAAK,WAEP3Y,WAAY,SACZE,eAAgB,cAGd5J,EAAM9B,OACNqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwiB,GAAI,EACJ7nB,MAAO,OACP2E,OAAQ,OACRK,aAAc,MACdlB,gBAAiB6B,EAAM9B,QAI3BqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACV4P,WAAY,EACZyC,UAAW,OACXlT,MAAO,YACP+e,MAAO,CACLyO,cAAc,eAGf1rB,EAAM8Q,QAGXvR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEud,MAAO,CACL6J,UAAU,IACVzE,KAAK,WAEP3Y,WAAY,SACZE,eAAgB,YAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACV4P,WAAY,EACZzQ,MAAO,WACPkT,UAAW,QACX6L,MAAO,CACL6L,WAAW,UAEb6C,wBAAyB,CACvBC,OAAQ5rB,EAAMmO,YAQlBuzF,EAAgB,SAAA1hG,GACpB,OACET,EAAAC,EAAAC,cAAC8gB,GAAD,CACEjD,IAAKtd,EAAMqrB,MAAM5a,GACjBoO,UAAW,CACTsC,GAAG,EACHD,GAAG,EACH7mB,MAAM,EACN0V,KAAM/P,EAAMqrB,MAAMpf,KAAKqf,QAAQ,GAAK,QAAU,MAGhD/rB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPsP,cAAe,UAGb3J,EAAMqrB,MAAMpf,KAAKsf,YACfhsB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,EACJtS,SAAU,EACV4P,WAAY,EACZzQ,MAAO,WACPkT,UAAW,QAEVpR,EAAMqrB,MAAMpf,KAAKsf,YAGvBvrB,EAAMC,YAMT0hG,EAAe,EACfC,EAAaxhG,EAAKJ,MAAM4hG,WACxBC,EAAwBzhG,EAAKJ,MAAM6hG,sBACnCC,EAAaF,EAAW/+F,OACxBmN,EAAYrQ,OAAOC,OAAO,GAAGQ,EAAKJ,MAAMO,YAAYyP,WAGpD+xF,EAAcrxF,GAAcC,MAAMukC,SAAS90C,EAAKJ,MAAMijG,aAExD97F,EAAO,GACP66F,EAAW,GACX5yE,EAAY,EACZJ,EAAY,EACZliB,EAAY,GACZf,EAAa,GACbu1F,EAAY3nF,IACZ0V,EAAc,GACdjC,EAAgB,EAChB60E,EAAkB,EAClBC,EAAgB,KAChBntF,EAAiB,KA3HTnS,EAAAoC,GA6HJ5E,EAAKJ,MAAMgjG,UA7HPpgG,EAAAvB,KA8HL,QA9HKuB,EAAAoC,GAAA,GA4aL,QA5aKpC,EAAAoC,GAAA,GAypBL,QAzpBKpC,EAAAoC,GAAA,GA8yBL,aA9yBKpC,EAAAoC,GAAA,GAq4BL,QAr4BKpC,EAAAoC,GAAA,GAojCL,UApjCKpC,EAAAoC,GAAA,GAquCL,aAruCKpC,EAAAoC,GAAA,GA8hDL,UA9hDKpC,EAAAoC,GAAA,sBAoIR,IALIm9F,EAAgB,GAEdhuF,EAAiBrI,SAAS+1F,EAAsB,GAAGtoF,WACnD87B,EAAevpC,SAASkiD,MAAS/0C,GAAGC,UAAU,KAE3CK,EAAUpF,EAAeoF,GAAW87B,EAAa97B,GAAW,MAC7DuV,EAAOk/B,IAAiB,IAAVz0C,GAAgBR,OAAO,cACtCopF,EAAcrzE,KACjBqzE,EAAcrzE,GAAQ,CACpBA,OACAvV,YACAo4C,SAAU,EACVuxC,QAAS,IAwDf,IAnDI7c,EAAU,KACdwb,EAAsBh4F,QAAQ,SAAA+8E,GAC5B,IAAM93D,EAAOk/B,IAAqB,IAAd44B,EAAIrtE,WAAgBR,OAAO,cACzC+T,EAAa1sB,EAAKI,cAAc4C,iBAAiBwjF,EAAIuc,WAAW,IAWtE,GATKhB,EAAcrzE,KACjBqzE,EAAcrzE,GAAQ,CACpBA,OACAvV,UAAUqtE,EAAIrtE,UACdo4C,SAAU,EACVuxC,QAAS,IAIT7c,EAAQ,CACV,IAAM+c,EAAiBhjG,EAAKI,cAAc4C,iBAAiBijF,EAAQ8c,WAAW,IAE9E,IADwBr2E,EAAWu2E,GAAGD,GACnB,CACjB,IAAME,EAAOx2E,EAAW3R,MAAMioF,GAE1BE,EAAKrqE,IAAI,IACXkpE,EAAcrzE,GAAM6iC,UAAUpmD,WAAW+3F,GACzCl2E,EAAgB3U,KAAKG,IAAIwU,EAAc+0E,EAAcrzE,GAAM6iC,YAE3DwwC,EAAcrzE,GAAMo0E,SAAS33F,WAAW+3F,GACxCl2E,EAAgB3U,KAAKG,IAAIwU,EAAc3U,KAAKipD,IAAIygC,EAAcrzE,GAAM6iC,kBAKxEwwC,EAAcrzE,GAAM6iC,UAAUpmD,WAAWuhB,GAG3Cu5D,EAAUO,IAGZ95E,EAAYnN,OAAO0X,OAAO8qF,GAAetmF,OAAO,SAAAxN,GAC9C,QAASjO,EAAKJ,MAAMmU,gBAAkB9F,EAAEkL,WAAWnZ,EAAKJ,MAAMmU,mBAAqB/T,EAAKJ,MAAMq1C,cAAgBhnC,EAAEkL,WAAWnZ,EAAKJ,MAAMq1C,gBAGpI+sD,EAAW,EACft1F,EAAUjD,QAAQ,SAAAwE,GAChB+zF,EAAW3pF,KAAKG,IAAIwpF,EAAS3pF,KAAKipD,IAAIrzD,EAAEsjD,UAAUl5C,KAAKipD,IAAIrzD,EAAE60F,YAG/D5B,EAAYiC,KAEZtB,EAAkB,EAElB7yE,EAAY7jB,WAAW6hB,EAAcu0E,GACrCtyE,EAAc,CAAC,GACNnf,EAAE,EAAEA,GAAG,EAAEA,IAChBmf,EAAY7e,KAAKN,EAAEkf,GApMb,OAuMRrjB,EAAa,CACXy3F,QAAS,OACTC,aAAa,EACbC,UAAUtB,EACVuB,SAASvB,EACTtxF,MAAO,SAAAjD,GACL,OAAO4K,KAAKipD,IAAI7zD,EAAEM,QAEpB8L,WAAY7Z,EAAKJ,MAAM+K,SAAW,KAAO,CACvCglB,SAAU,EACVjzB,OAAQ,GACRic,OAAQ,SAAC5K,GACP,GAAI8zF,IAAoB,IAAM,EAC5B,OAAOj0C,IAAO7/C,EAAM,oBAAoB4K,OAAO,WAGnDiX,YAAa,GACbC,OAAQ,SACRC,aAAc,EACdC,eAAgB,SAChBC,WAAY,gBAEdrW,SAAU,KACV6pF,UAAW,CACT9mG,OAAQ,GACRizB,SAAU,EACVE,OAAQ,OACRD,YAAa,GACbK,aAAc,EACdH,cAAe,GACfE,WAAW,EACXD,eAAgB,SAChBpX,OAAQ,SAAA1K,GAAC,OAAIjO,EAAKI,cAAc8I,iBAAiBmP,KAAKipD,IAAIrzD,GAAG,KAE/Dw1F,QAAS,CACP,CACEpzE,KAAM,IACNtiB,MAAO,EACP21F,UAAW,CAAEC,cAAe,GAC5BC,UAAW,CAAEppF,KAAMthB,EAAMR,OAAOkE,aAAaC,OAAOL,SACpDE,OAAQ,WACRqzB,eAAgB,WAChB8zE,kBAAmB,WAEnBC,eAAgB,IAElB,CACEzzE,KAAM,IACNtiB,MAAO,EACP21F,UAAW,CAAEjzE,OAAQv3B,EAAMR,OAAO,aAAcg4B,gBAAiB,OACjEkzE,UAAW,CAAEppF,KAAMthB,EAAMR,OAAOkE,aAAaC,OAAON,QACpDG,OAAQ,UACRqzB,eAAgB,cAChB8zE,kBAAmB,WAEnBC,eAAgB,KAGpB/8F,KAAK,CAAC,WAAW,WACjBjI,QAAQ,GACRpG,OAAO,CAACQ,EAAMR,OAAOkE,aAAaC,OAAOL,QAAStD,EAAMR,OAAOkE,aAAaC,OAAON,QACnFwnG,eAAgB,sBAChBC,eAAgB,GAChBC,gBAAiB,GACjBzqF,UAAU,EACVE,SAAQ,EACRvM,SAAQ,EACR+iB,WAAW,IACXtW,MAAM,SACNE,YAAW,EACXK,aAAa,IACbH,aAAY,EACZC,aAAY,EACZC,iBAAiB,EACjBe,mBAAmB,GACnBxM,QAAQ,CACN,CACEy1F,SAAS,OACT95E,UAAWpqB,EAAKJ,MAAM+K,SAAW,GAAK,IACtC0f,WAAY,GACZ85E,WAAY,EACZ75E,WAAYtqB,EAAKJ,MAAM+K,SAAW,GAAK,GACvC4f,WAAY,GACZ65E,aAAc,EACd/3F,UAAW,MACXme,OAAQ,cACRE,YAAa,SACbD,cAAevxB,EAAMR,OAAOgE,OAC5BiuB,QAAS,CACP,CACEC,GAAI,QACJ/N,MAAO,CACL4N,cAAe,YAMzBvxB,MAAM,CACJm3B,KAAM,CACJC,MAAO,CACL13B,KAAM,CACJ+F,SAAUqB,EAAKJ,MAAM+K,SAAW,GAAI,GACpC4D,WAAW,IACXiM,KAAKthB,EAAMR,OAAOgE,OAClB8R,WAAYtV,EAAMS,MAAME,aAI9B02B,KAAM,CACJC,KAAM,CACJC,OAAQv3B,EAAMR,OAAOsD,gBAAiB00B,gBAAiB,SAG3DjiB,QAAQ,CACN7V,KAAK,CACH+F,SAAUqB,EAAKJ,MAAM+K,SAAW,GAAI,GACpC4D,WAAW,IACXC,WAAYtV,EAAMS,MAAME,YAG5B9C,QAAQ,CACNoX,UAAU,CACRgP,UAAU,KACVuB,WAAW,QAIjB0R,WAAW,CAAE/gB,KAAM,QAASC,UAAW,IACvCC,OAAQvP,EAAKJ,MAAM+K,SAAW,CAAE6E,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IAAO,CAAEH,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IACrH5Y,QAAQ,SAAC8U,GACP,IAAMsf,EAAanrB,EAAKI,cAAcqY,YAAY5M,EAAKw4F,YAAY1rF,OAAO,UACpEsS,EAAQ,CACZ5a,GAAGxE,EAAKwE,GACRxE,KAAK,CACHsf,eAGEm5E,EAAmBtkG,EAAKI,cAAc8I,iBAAiB2C,EAAKA,KAAK0lD,SAAS,GAAG,IAAIvxD,EAAKJ,MAAMoN,cAC5Fu3F,EAAkBvkG,EAAKI,cAAc8I,iBAAiB2C,EAAKA,KAAKi3F,QAAQ,GAAG,IAAI9iG,EAAKJ,MAAMoN,cAChG,OACE7N,EAAAC,EAAAC,cAACiiG,EAAD,CACEr2E,MAAOA,GAEP9rB,EAAAC,EAAAC,cAACgiG,EAAD,CACE3wF,MAAO,WACP5S,MAAO5E,EAAMR,OAAO8D,QACpBuR,MAAOu2F,IAETnlG,EAAAC,EAAAC,cAACgiG,EAAD,CACE3wF,MAAO,SACP5S,MAAO5E,EAAMR,OAAO6D,OACpBwR,MAAOw2F,OA/VT/hG,EAAAjB,OAAA,qBAmeR,IArDAyrB,EAAgB,EAEhBtgB,EAAU0D,KAAK,CACbC,GAAG,MACHvS,MAAO,OAAOwS,GAAcC,MAAMkjC,OAAOzzC,EAAKJ,MAAMoN,eAAelP,MAAM0S,IAAIC,KAAK,KAAK,IACvF5E,KAAM21F,EAAW3mF,IAAI,SAACpN,EAAEqC,GACtB,IAAM4c,EAAa1sB,EAAKI,cAAc4C,iBAAiByK,EAAEs1F,WAAW,IAC9DjoF,EAAY9a,EAAKI,cAAc4C,iBAAiByK,EAAEqN,UAAU9a,EAAKJ,MAAMO,YAAY8C,UACnFuhG,EAAM93E,EAAW1nB,MAAM8V,GACvB5G,EAAI05C,IAAmB,IAAZngD,EAAE0L,WAAgBR,OAAO,oBACpC3E,EAAI7I,WAAWq5F,EAAI9uF,YAIzB,OAFAsX,EAAgB3U,KAAKG,IAAIwU,EAAchZ,GAEhC,CAAEE,IAAEF,SAKfhU,EAAKJ,MAAMO,YAAYyP,UAAUnG,QAAQ,SAACC,EAAE+Z,GAC1C+9E,EAAW3mF,IAAI,SAACpN,EAAEqC,GAChB,OAAOrC,EAAE04E,cAAc1qE,OAAO,SAAC4qD,EAAmBnyD,GAC9C,OAAOmyD,EAAmBr2D,aAAaC,gBAAkBvG,EAAEvD,QAAQ8J,gBAEtE4K,IAAI,SAACwrD,EAAmBo+B,GAEvB,IADuBzkG,EAAKI,cAAciB,MAAMglE,EAAmBigB,MAAM2c,GAAG,GACxD,CAClB,IAAM/uF,EAAI05C,IAAmB,IAAZngD,EAAE0L,WAAgBR,OAAO,oBACtC3E,EAAI7I,WAAWnL,EAAKI,cAAc4C,iBAAiBqjE,EAAmBzD,WAAW5iE,EAAKJ,MAAMO,YAAY8C,WAE5G+pB,EAAgB3U,KAAKG,IAAIwU,EAAchZ,GAEvC,IAAI0wF,EAAYh4F,EAAU,GAAGb,KAAK4P,OAAO,SAAAoT,GAAU,OAAOA,EAAK3a,IAAMA,IACrE,GAAIwwF,EAAU,CACZA,EAAYA,EAAU,GACtB,IAAMC,EAAMj4F,EAAU,GAAGb,KAAK0L,QAAQmtF,GACjCA,EAAUjiC,cACbiiC,EAAUjiC,YAAc,IAE1BiiC,EAAUjiC,YAAY/4D,EAAE4C,MAAQ0H,EAChCtH,EAAU,GAAGb,KAAK84F,GAAOD,MAI5B,KACFjpF,OAAO,SAACxN,GAAQ,YAAavL,IAANuL,MAI5BizF,EAAY3nF,IAEZyV,EAAY7jB,WAAW6hB,EAAcu0E,GACrCtyE,EAAc,CAAC,GACNnf,EAAE,EAAEA,GAAG,EAAEA,IAChBmf,EAAY7e,KAAKN,EAAEkf,GApeb,OAueRrjB,EAAa,CACX2jB,OAAO,CACLvmB,KAAM,OACN4P,OAAQ,kBAGV8W,QAAQ,mBACRC,QAAQ,SAAAzhB,GAAC,OAAIjO,EAAKI,cAAc4I,YAAYiF,EAAEA,EAAE,EAAI,EAAG,IACvDshB,OAAO,CACLxmB,KAAM,SACNymB,SAAS,GAEX7V,SAAS,CACPjd,OAAQ,GACRizB,SAAU,EACVE,OAAQ,OACRD,YAAa,GACbK,aAAc,EACdH,cAAe,GACfE,WAAWf,EACXc,eAAgB,SAChBpX,OAAQ,SAAA1K,GAAC,OAAIjO,EAAKI,cAAc8I,iBAAiB+E,EAAEA,EAAE,EAAI,EAAG,KAE9D4L,WAAY7Z,EAAKJ,MAAM+K,SAAW,KAAO,CACvCglB,SAAU,EACVhX,OAAQ,QACRiX,YAAa,GACbI,WAAYhwB,EAAKJ,MAAM+K,SAAW,eAAmB3K,EAAKJ,MAAMglG,aAAe,eAAiB,eAChG/0E,OAAQ,SACRnzB,OAAQ,GACRozB,aAAc,EACdC,eAAgB,UAElBd,cACAzV,UAAU,EACVE,SAAQ,EACRvM,SAAQ,EACR+iB,WAAW,IACXtW,MAAM,SACNE,YAAW,EACXK,aAAa,IACbH,aAAY,EACZC,aAAY,EACZC,iBAAiB,EACjBxhB,OAAO,SAAA+U,GAAC,OAAIA,EAAE3P,OACdmd,mBAAmB,GACnBxM,QAAQ,CACN,CACE2b,UAAWpqB,EAAKJ,MAAM+K,SAAW,GAAK,GACtC0f,WAAY,GACZ85E,WAAYnkG,EAAKJ,MAAM+K,UAAY,GAAK,EACxC2f,WAAYtqB,EAAKJ,MAAM+K,SAAW,GAAK,GACvC4f,WAAY,GACZ65E,aAAc,EACd/3F,UAAW,MACXme,OAAQ,cACRE,YAAa,SACbD,cAAevxB,EAAMR,OAAOgE,OAC5BiuB,QAAS,CACP,CACEC,GAAI,QACJ/N,MAAO,CACL4N,cAAe,YAMzBvxB,MAAM,CACJm3B,KAAM,CACJC,MAAO,CACL13B,KAAM,CACJ+F,SAAUqB,EAAKJ,MAAM+K,SAAW,GAAI,GACpC4D,WAAW,IACXiM,KAAKthB,EAAMR,OAAOgE,OAClB8R,WAAYtV,EAAMS,MAAME,aAI9B02B,KAAM,CACJC,KAAM,CACJC,OAAQv3B,EAAMR,OAAOsD,gBAAiB00B,gBAAiB,SAG3DjiB,QAAQ,CACN7V,KAAK,CACH+F,SAAUqB,EAAKJ,MAAM+K,SAAW,GAAI,GACpC4D,WAAW,IACXC,WAAYtV,EAAMS,MAAME,aAI9Bu2B,WAAW,CAAE/gB,KAAM,QAASC,UAAW,IACvCC,OAAQvP,EAAKJ,MAAM+K,SAAW,CAAE6E,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IAAO,CAAEH,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IACrHghB,aAAa,SAACC,GAAc,IAEpB3F,EADY2F,EAAVC,MACYC,OAAO,GAC3B,MAAqB,kBAAV7F,GAA4C,kBAAfA,EAAMpf,KAE1C1M,EAAAC,EAAAC,cAACiiG,EAAD,CACEr2E,MAAOA,GAEP9rB,EAAAC,EAAAC,cAACgiG,EAAD,CACE3wF,MAAOua,EAAMgG,QACbnzB,MAAOmtB,EAAM45E,WACb92F,MAAOkd,EAAMpf,KAAKqlB,aAGlBjG,EAAMpf,KAAK42D,aAAiD,kBAA3Bx3C,EAAMpf,KAAK42D,aAC1CljE,OAAOwH,KAAKkkB,EAAMpf,KAAK42D,aAAa5nD,IAAI,SAAA9K,GACtC,IAAM+0F,EAAgB,OAAOx0F,GAAcC,MAAMX,UAAUG,GAAcjS,MAAM0S,IAAIC,KAAK,KAAK,IACvF41D,EAAqBp7C,EAAMpf,KAAK42D,YAAY1yD,GAC5Cg1F,EAA8B/kG,EAAKI,cAAc4I,YAAYq9D,EAAmBA,EAAmB,EAAI,EAAI,GAC3GC,EAAyBtmE,EAAKI,cAAciB,MAAM4pB,EAAMpf,KAAK42D,YAAY1yD,IAAe9K,IAAIjF,EAAKI,cAAciB,MAAM4pB,EAAMpf,KAAKmI,IAAIhP,MAAM,KAAKmL,QAAQ,GAAG,IAChK,OACEhR,EAAAC,EAAAC,cAACgiG,EAAD,CACE3wF,MAAOX,EACPjS,MAAOgnG,EACP5nF,IAAG,GAAA9Y,OAAK6mB,EAAM5a,GAAX,KAAAjM,OAAiB2L,GACpBhC,MAAK,GAAA3J,OAAK2gG,EAAL,MAAA3gG,OAAqCkiE,EAArC,UAuDd,OArpBH9jE,EAAAjB,OAAA,qBAmsBR,IAzCAwF,EAAO,GACP66F,EAAW,GAEXJ,EAAW/3F,QAAQ,SAACgE,EAAEqC,GACpB,IAAM4e,EAAOk/B,IAAmB,IAAZngD,EAAE0L,WAAgBR,OAAO,cAEzC6tE,EAAM,CACR93D,QAGFjhB,EAAE04E,cAAc18E,QAAQ,SAACu7F,GACvB,IAAMC,EAAiBjlG,EAAKI,cAAciB,MAAM2jG,EAAa1e,MAAM2c,GAAG,GAChE7rF,EAAgBpX,EAAKJ,MAAMO,YAAYyP,UAAUyH,KAAK,SAAC3N,GAAQ,OAAOA,EAAEvD,QAAQ8J,gBAAkB+0F,EAAah1F,aAAaC,gBAClI,GAAImH,EAAc,CAChB,IAAMrH,EAAe/P,EAAKI,cAAcuQ,WAAWyG,EAAc9K,MACjE,GAAK24F,EAQHze,EAAIz2E,GAAgB,MARF,CAClB,IAAI6yD,EAAaz3D,WAAWnL,EAAKI,cAAc4C,iBAAiBgiG,EAAapiC,WAAW5iE,EAAKJ,MAAMO,YAAY8C,WAC/G8D,EAAKgJ,GAAgB,EACrBy2E,EAAIz2E,GAAgB6yD,EACpB4jB,EAAG,GAAApiF,OAAI2L,EAAJ,UAA2B,OAAOO,GAAcC,MAAMX,UAAUG,EAAaE,eAAenS,MAAM0S,IAAIC,KAAK,KAAK,IAEnHuc,EAAgB3U,KAAKG,IAAIwU,EAAc41C,OAQ7Cg/B,EAASlzE,GAAQ83D,IAGnB95E,EAAYnN,OAAO0X,OAAO2qF,GAG1BV,EAAYiC,KAEZtB,EAAkB,EAElB7yE,EAAY7jB,WAAW6hB,EAAcu0E,GACrCtyE,EAAc,CAAC,GACNnf,EAAE,EAAEA,GAAG,EAAEA,IAChBmf,EAAY7e,KAAKN,EAAEkf,GApsBb,OAusBRrjB,EAAa,CACX7M,QAAS,GACTqO,SAAS,EACTi2F,QAAS,OACTC,aAAa,EACbW,eAAgB,GAChBC,gBAAiB,GACjBl9F,KAAMxH,OAAOwH,KAAKA,GAClBg9F,eAAgB,sBAChBrrG,OAAQ,SAAAgJ,GAAA,IAAG2O,EAAH3O,EAAG2O,GAAH,OAAA3O,EAAOmK,KAAe,GAAAzH,OAAIiM,EAAJ,WAC9BsJ,SAAS,CACPhB,OAAQ,SAAA1K,GAAC,OAAIjO,EAAKI,cAAc8I,iBAAiB+E,EAAEA,EAAE,EAAI,EAAG,IAC5D4hB,OAAQ,OACRF,SAAU,EACVC,YAAa,GACbK,aAAc,EACdvzB,OAAQ,GACRozB,cAAe,GACfE,WAAWf,EACXc,eAAgB,UAElBd,cACApV,WAAY7Z,EAAKJ,MAAM+K,SAAW,KAAO,CACvCjO,OAAQ,GACRic,OAAQ,SAAC5K,GACP,GAAI8zF,IAAoB,IAAM,EAC5B,OAAOj0C,IAAO7/C,EAAM,oBAAoB4K,OAAO,WAGnDgX,SAAU,EACVC,YAAa,GACbC,OAAQ,cACRC,aAAc,GACdC,eAAgB,SAChBC,WAAY,gBAEdvhB,QAAQ,CACN,CACEy1F,SAAS,OACT95E,UAAWpqB,EAAKJ,MAAM+K,SAAW,GAAK,GACtC0f,WAAY,GACZ85E,WAAYnkG,EAAKJ,MAAM+K,UAAY,GAAK,EACxC2f,WAAYtqB,EAAKJ,MAAM+K,SAAW,GAAK,GACvC4f,WAAY,GACZ65E,aAAc,EACd/3F,UAAW,MACXme,OAAQ,cACRE,YAAa,SACbD,cAAevxB,EAAMR,OAAOgE,OAC5BiuB,QAAS,CACP,CACEC,GAAI,QACJ/N,MAAO,CACL4N,cAAe,YAMzBvxB,MAAM,CACJm3B,KAAM,CACJC,MAAO,CACL13B,KAAM,CACJ+F,SAASqB,EAAKJ,MAAM+K,SAAW,GAAK,GACpC4D,WAAW,IACXiM,KAAKthB,EAAMR,OAAOgE,OAClB8R,WAAYtV,EAAMS,MAAME,aAI9B02B,KAAM,CACJC,KAAM,CACJC,OAAQv3B,EAAMR,OAAOsD,gBAAiB00B,gBAAiB,SAG3DjiB,QAAQ,CACN7V,KAAK,CACH+F,SAASqB,EAAKJ,MAAM+K,SAAW,GAAK,GACpC4D,WAAW,IACXC,WAAYtV,EAAMS,MAAME,aAI9Bu2B,WAAW,CAAE/gB,KAAM,QAASC,UAAW,IACvCC,OAAQvP,EAAKJ,MAAM+K,SAAW,CAAE6E,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IAAO,CAAEH,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IACrH5Y,QAAQ,SAAAkb,GAA0B,IAAvB5B,EAAuB4B,EAAvB5B,GAAItC,EAAmBkE,EAAnBlE,MAAOjQ,EAAYmU,EAAZnU,MACd8kE,EAAa5iE,EAAKI,cAAc4I,YAAY+E,EAAM,GACxD,OACE5O,EAAAC,EAAAC,cAAA,SAAOwd,MAAO,CAAC5iB,MAAM,OAAOirG,eAAe,aACzC/lG,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIwd,MAAO,CAAC/d,QAAQ,YAClBK,EAAAC,EAAAC,cAAA,QAAMwd,MAAO,CAACxO,QAAQ,QAASpU,MAAO,OAAQ2E,OAAQ,OAAQ8f,WAAY5gB,MAE5EqB,EAAAC,EAAAC,cAAA,MAAIwd,MAAO,CAAC/d,QAAQ,UAAUwsB,cAAc,eAAgBjb,GAC5DlR,EAAAC,EAAAC,cAAA,MAAIwd,MAAO,CAAC/d,QAAQ,YAAYK,EAAAC,EAAAC,cAAA,cAASujE,EAAT,IAAsB5iE,EAAKJ,MAAMoN,qBAtyBrExK,EAAAjB,OAAA,4BA+yBRwF,EAAO,GACP66F,EAAW,GAEXJ,EAAW/3F,QAAQ,SAACgE,EAAEqC,GACpB,IAAM4e,EAAOk/B,IAAmB,IAAZngD,EAAE0L,WAAgBR,OAAO,cACzC6tE,EAAM,CACR93D,KAAKk/B,IAAmB,IAAZngD,EAAE0L,WAAgBR,OAAO,qBAEnCipF,EAASlzE,KACX83D,EAAMob,EAASlzE,IAGjB,IAAM1mB,EAAkByF,EAAE04E,cAAczjB,OAAO,SAACwD,EAAYG,GAC1D,IAAMzD,EAAa5iE,EAAKI,cAAc4C,iBAAiBqjE,EAAmBzD,WAAW5iE,EAAKJ,MAAMO,YAAY8C,UAC5G,OAAOjD,EAAKI,cAAciB,MAAM6kE,GAAaz+D,KAAKm7D,IAClD,GAEFn1D,EAAE04E,cAAc18E,QAAQ,SAACu7F,GACvB,IAAMC,EAAiBjlG,EAAKI,cAAciB,MAAM2jG,EAAa1e,MAAM2c,GAAG,GAChElzF,EAAe/P,EAAKJ,MAAMO,YAAYyP,UAAU6L,OAAO,SAAC/R,GAAQ,OAAOA,EAAEvD,QAAQ8J,gBAAkB+0F,EAAah1F,aAAaC,gBAAiB,GAAG3D,KACvJ,GAAK24F,OAMmCviG,WAAtB8jF,EAAIz2E,KACpBy2E,EAAIz2E,GAAgB,OAPF,CAClB,IAAM6yD,EAAa5iE,EAAKI,cAAc4C,iBAAiBgiG,EAAapiC,WAAW5iE,EAAKJ,MAAMO,YAAY8C,UAChGkiG,EAAiBh6F,WAAWy3D,EAAW39D,IAAI+C,GAAiBhD,MAAM,MACxE+B,EAAKgJ,GAAgB,EACrBy2E,EAAIz2E,GAAgBo1F,EACpB3e,EAAG,GAAApiF,OAAI2L,EAAJ,UAA2B,OAAOO,GAAcC,MAAMX,UAAUG,GAAcjS,MAAM0S,IAAIC,KAAK,KAAK,OAMzGmxF,EAASlzE,GAAQ83D,IAGnB95E,EAAYnN,OAAO0X,OAAO2qF,GAG1BV,EAAYiC,KAEZtB,EAAkB,EAElBl2F,EAAa,CACX7M,QAAS,GACTqO,SAAS,EACTi2F,QAAS,OACTv3F,KAAMa,EACN22F,aAAa,EACbW,eAAgB,GAChBC,gBAAiB,GACjBl9F,KAAMxH,OAAOwH,KAAKA,GAClBg9F,eAAgB,sBAChBx0F,OAAQvP,EAAKJ,MAAM+K,SAAW,CAAE6E,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IAAO,CAAEH,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IACrHjX,OAAQ,SAAA0Z,GAAA,IAAG/B,EAAH+B,EAAG/B,GAAH,OAAA+B,EAAOvG,KAAe,GAAAzH,OAAIiM,EAAJ,WAC9BsJ,SAAS,CACPhB,OAAQ,SAAA1K,GAAC,OAAIvC,SAASuC,GAAG,MAE3B4L,WAAY7Z,EAAKJ,MAAM+K,SAAW,KAAO,CACvCjO,OAAQ,GACRic,OAAQ,SAAC5K,GACP,GAAI8zF,IAAoB,IAAM,EAC5B,OAAOj0C,IAAO7/C,EAAM,oBAAoB4K,OAAO,WAGnDkX,OAAQ,SACRC,aAAc,GACdC,eAAgB,SAChBC,WAAY,gBAEdj5B,QAAQ,SAAAoM,GAA0B,IAAvBkN,EAAuBlN,EAAvBkN,GAAItC,EAAmB5K,EAAnB4K,MAAOjQ,EAAYqF,EAAZrF,MACd8kE,EAA+B,MAAlBl3D,SAASqC,GAAe/N,EAAKI,cAAc4I,YAAY+E,EAAM,GAAK/N,EAAKI,cAAc4I,YAAY+E,EAAM,GAC1H,OACE5O,EAAAC,EAAAC,cAAA,SAAOwd,MAAO,CAAC5iB,MAAM,OAAOirG,eAAe,aACzC/lG,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIwd,MAAO,CAAC/d,QAAQ,YAClBK,EAAAC,EAAAC,cAAA,QAAMwd,MAAO,CAACxO,QAAQ,QAASpU,MAAO,OAAQ2E,OAAQ,OAAQ8f,WAAY5gB,MAE5EqB,EAAAC,EAAAC,cAAA,MAAIwd,MAAO,CAAC/d,QAAQ,UAAUwsB,cAAc,eAAgBjb,GAC5DlR,EAAAC,EAAAC,cAAA,MAAIwd,MAAO,CAAC/d,QAAQ,YAAYK,EAAAC,EAAAC,cAAA,cAASujE,EAAT,WA73BpCpgE,EAAAjB,OAAA,qBAs7BR,IA/CAyrB,EAAgB,EAEhBhtB,EAAKJ,MAAMO,YAAYyP,UAAUnG,QAAQ,SAACC,EAAE+Z,GACtC/W,EAAU+O,OAAO,SAAAhO,GAAO,OAAOA,EAAEnB,OAAS5C,EAAE4C,OAAS7J,QAGzDiK,EAAU0D,KAAK,CACbC,GAAG3G,EAAE4C,KACLxO,MAAM,OAAOwS,GAAcC,MAAMX,UAAUlG,EAAE4C,MAAMxO,MAAM0S,IAAIC,KAAK,KAAK,IACvE5E,KAAK21F,EAAW3mF,IAAI,SAACpN,EAAEqC,GACrB,OAAOrC,EAAE04E,cAAc1qE,OAAO,SAAC4qD,EAAmBnyD,GAC9C,OAAOmyD,EAAmBr2D,aAAaC,gBAAkBvG,EAAEvD,QAAQ8J,gBAEtE4K,IAAI,SAACwrD,EAAmBo+B,GAEvB,IADuBzkG,EAAKI,cAAciB,MAAMglE,EAAmBigB,MAAM2c,GAAG,GACxD,CAClB,IAAM/uF,EAAI05C,IAAmB,IAAZngD,EAAE0L,WAAgBR,OAAO,oBACpC3E,EAAI7I,WAAWnL,EAAKI,cAAc4C,iBAAiBqjE,EAAmBigB,KAAK,KAIjF,OAFAt5D,EAAgB3U,KAAKG,IAAIwU,EAAchZ,GAEhC,CAAEE,IAAGF,QAGb,KACFyH,OAAO,SAACxN,GAAQ,YAAavL,IAANuL,QAI9BvB,EAAU0D,KAAK,CACbC,GAAG,OACHvS,MAAO,OAAOwS,GAAcC,MAAMX,UAAUvL,KAAKvG,MAAM0S,IAAIC,KAAK,KAAK,IACrE5E,KAAM21F,EAAW3mF,IAAI,SAACpN,EAAEqC,GACtB,IAAMoE,EAAI05C,IAAmB,IAAZngD,EAAE0L,WAAgBR,OAAO,oBACpC3E,EAAI7I,WAAWnL,EAAKI,cAAc4C,iBAAiByK,EAAE2L,SAAS,KAIpE,OAFA4T,EAAgB3U,KAAKG,IAAIwU,EAAchZ,GAEhC,CAAEE,IAAGF,SAKhBktF,EAAY3nF,IAEZyV,EAAY7jB,WAAW6hB,EAAcu0E,GACrCtyE,EAAc,CAAC,GACNnf,EAAE,EAAEA,GAAG,EAAEA,IAChBmf,EAAY7e,KAAKN,EAAEkf,GAv7Bb,OA07BRrjB,EAAa,CACX2jB,OAAO,CACLvmB,KAAM,OACN4P,OAAQ,kBAGV8W,QAAQ,mBACRC,QAAQ,SAAA3hB,GAAK,OAAI5C,WAAW4C,GAAOoC,QAAQ,GAAG,KAC9Cof,OAAO,CACLxmB,KAAM,SACNymB,SAAS,GAEX7V,SAAS,CACPjd,OAAQ,GACRizB,SAAU,EACVE,OAAQ,OACRD,YAAa,GACbK,aAAc,EACdH,cAAe,GACfE,WAAWf,EACXc,eAAgB,SAChBpX,OAAO,SAAA5K,GAAK,OAAI5C,WAAW4C,GAAOoC,QAAQ,GAAG,MAE/C0J,WAAY7Z,EAAKJ,MAAM+K,SAAW,KAAO,CACvCglB,SAAU,EACVhX,OAAQ,QACRiX,YAAa,GACbI,WAAYhwB,EAAKJ,MAAM+K,SAAW,eAAmB3K,EAAKJ,MAAMglG,aAAe,eAAiB,eAChG/0E,OAAQ,SACRnzB,OAAQ,GACRozB,aAAc,EACdC,eAAgB,UAElBd,cACAzV,UAAU,EACVE,SAAQ,EACRvM,SAAQ,EACR+iB,WAAW,IACXtW,MAAM,SACNE,YAAW,EACXK,aAAa,IACbH,aAAY,EACZC,aAAY,EACZC,iBAAiB,EACjBxhB,OAAO,SAAA+U,GAAC,OAAIA,EAAE3P,OACdmd,mBAAmB,GACnBxM,QAAQ,CACN,CACE2b,UAAWpqB,EAAKJ,MAAM+K,SAAW,GAAK,GACtC0f,WAAY,GACZ85E,WAAYnkG,EAAKJ,MAAM+K,UAAY,GAAK,EACxC2f,WAAYtqB,EAAKJ,MAAM+K,SAAW,GAAK,GACvC4f,WAAY,GACZ65E,aAAc,EACd/3F,UAAW,MACXme,OAAQ,cACRE,YAAa,SACbD,cAAevxB,EAAMR,OAAOgE,OAC5BiuB,QAAS,CACP,CACEC,GAAI,QACJ/N,MAAO,CACL4N,cAAe,YAMzBvxB,MAAM,CACJm3B,KAAM,CACJC,MAAO,CACL13B,KAAM,CACJ+F,SAAUqB,EAAKJ,MAAM+K,SAAW,GAAI,GACpC4D,WAAW,IACXiM,KAAKthB,EAAMR,OAAOgE,OAClB8R,WAAYtV,EAAMS,MAAME,aAI9B02B,KAAM,CACJC,KAAM,CACJC,OAAQv3B,EAAMR,OAAOsD,gBAAiB00B,gBAAiB,SAG3DjiB,QAAQ,CACN7V,KAAK,CACH+F,SAAUqB,EAAKJ,MAAM+K,SAAW,GAAI,GACpC4D,WAAW,IACXC,WAAYtV,EAAMS,MAAME,aAI9Bu2B,WAAW,CAAE/gB,KAAM,QAASC,UAAW,IACvCC,OAAQvP,EAAKJ,MAAM+K,SAAW,CAAE6E,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IAAO,CAAEH,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IACrHghB,aAAa,SAACC,GAAc,IAClBC,EAAUD,EAAVC,MACF5F,EAAQ4F,EAAMC,OAAO,GAC3B,OACE3xB,EAAAC,EAAAC,cAACiiG,EAAD,CACEr2E,MAAOA,GAGiB,kBAAjB4F,EAAMC,QAAuBD,EAAMC,OAAOruB,QAC/CouB,EAAMC,OAAOjW,IAAI,SAAAoQ,GACf,IAAMlb,EAAekb,EAAMgG,QACrBm0E,EAAkBn6E,EAAMpf,KAAKqlB,WAEnC,OACE/xB,EAAAC,EAAAC,cAACgiG,EAAD,CACEnkF,IAAK+N,EAAM5a,GACXvS,MAAOmtB,EAAMntB,MACb4S,MAAOX,EACPhC,MAAOq3F,SA1iCf5iG,EAAAjB,OAAA,qBAwmCR,IAlDI6gG,EAAY,EAChBp1E,EAAgB,EAEhBhtB,EAAKJ,MAAMO,YAAYyP,UAAUnG,QAAQ,SAACC,EAAE+Z,GACtC/W,EAAU+O,OAAO,SAAAhO,GAAO,OAAOA,EAAEnB,OAAS5C,EAAE4C,OAAS7J,QAIzDiK,EAAU0D,KAAK,CACbC,GAAG3G,EAAE4C,KACLxO,MAAM,OAAOwS,GAAcC,MAAMX,UAAUlG,EAAE4C,MAAMxO,MAAM0S,IAAIC,KAAK,KAAK,IACvE5E,KAAK21F,EAAW3mF,IAAI,SAACpN,EAAEqC,GACrB,OAAOrC,EAAE04E,cAAc1qE,OAAO,SAAC4qD,EAAmBnyD,GAC9C,OAAOmyD,EAAmBr2D,aAAaC,gBAAkBvG,EAAEvD,QAAQ8J,gBAEtE4K,IAAI,SAACwrD,EAAmBo+B,GACvB,IAAMvwF,EAAI05C,IAAmB,IAAZngD,EAAE0L,WAAgBR,OAAO,oBACtC3E,EAAI7I,WAAWk7D,EAAmBwgB,WAMtC,OAJA7yE,EAAI1S,MAAM0S,KAAOA,EAAIouF,EAAYpuF,EACjCouF,EAAYpuF,EACZgZ,EAAgB3U,KAAKG,IAAIwU,EAAchZ,GAEhC,CAAEE,IAAGF,OACX,KACFyH,OAAO,SAACxN,GAAQ,YAAavL,IAANuL,QAI9BvB,EAAU0D,KAAK,CACbC,GAAG,OACHvS,MAAO,OAAOwS,GAAcC,MAAMX,UAAUvL,KAAKvG,MAAM0S,IAAIC,KAAK,KAAK,IACrE5E,KAAM21F,EAAW3mF,IAAI,SAACpN,EAAEqC,GACtB,IAAMoE,EAAI05C,IAAmB,IAAZngD,EAAE0L,WAAgBR,OAAO,oBACtC3E,EAAI7I,WAAWsC,EAAE84E,WAKrB,OAJAvyE,EAAI1S,MAAM0S,KAAOA,EAAIouF,EAAYpuF,EACjCouF,EAAYpuF,EACZgZ,EAAgB3U,KAAKG,IAAIwU,EAAchZ,GAEhC,CAAEE,IAAGF,SAOhBktF,EAAY3nF,IAEZyV,EAAY7jB,WAAW6hB,EAAcu0E,GACrCtyE,EAAc,CAAC,GACNnf,EAAE,EAAEA,GAAG,EAAEA,IAChBmf,EAAY7e,KAAKN,EAAEkf,GAzmCb,OA4mCRrjB,EAAa,CACX2jB,OAAO,CACLvmB,KAAM,OACN4P,OAAQ,kBAGV8W,QAAQ,mBACRC,QAAQ,SAAA3hB,GAAK,OAAI5C,WAAW4C,GAAOoC,QAAQ,IAC3Cof,OAAO,CACLxmB,KAAM,SACNymB,SAAS,GAEX7V,SAAS,CACPjd,OAAQ,GACRizB,SAAU,EACVE,OAAQ,OACRD,YAAa,GACbK,aAAc,EACdH,cAAe,GACfE,WAAWf,EACXc,eAAgB,SAChBpX,OAAO,SAAA5K,GAAK,OAAI5C,WAAW4C,GAAOoC,QAAQ,KAE5C0J,WAAY7Z,EAAKJ,MAAM+K,SAAW,KAAO,CACvCglB,SAAU,EACVhX,OAAQ,QACRiX,YAAa,GACbI,WAAYhwB,EAAKJ,MAAM+K,SAAW,eAAmB3K,EAAKJ,MAAMglG,aAAe,eAAiB,eAChG/0E,OAAQ,SACRnzB,OAAQ,GACRozB,aAAc,EACdC,eAAgB,UAElBd,cACAzV,UAAU,EACVE,SAAQ,EACRvM,SAAQ,EACR+iB,WAAW,IACXtW,MAAM,SACNE,YAAW,EACXK,aAAa,IACbH,aAAY,EACZC,aAAY,EACZC,iBAAiB,EACjBxhB,OAAO,SAAA+U,GAAC,OAAIA,EAAE3P,OACdmd,mBAAmB,GACnBxM,QAAQ,CACN,CACE2b,UAAWpqB,EAAKJ,MAAM+K,SAAW,GAAK,GACtC0f,WAAY,GACZ85E,WAAYnkG,EAAKJ,MAAM+K,UAAY,GAAK,EACxC2f,WAAYtqB,EAAKJ,MAAM+K,SAAW,GAAK,GACvC4f,WAAY,GACZ65E,aAAc,EACd/3F,UAAW,MACXme,OAAQ,cACRE,YAAa,SACbD,cAAevxB,EAAMR,OAAOgE,OAC5BiuB,QAAS,CACP,CACEC,GAAI,QACJ/N,MAAO,CACL4N,cAAe,YAMzBvxB,MAAM,CACJm3B,KAAM,CACJC,MAAO,CACL13B,KAAM,CACJ+F,SAAUqB,EAAKJ,MAAM+K,SAAW,GAAI,GACpC4D,WAAW,IACXiM,KAAKthB,EAAMR,OAAOgE,OAClB8R,WAAYtV,EAAMS,MAAME,aAI9B02B,KAAM,CACJC,KAAM,CACJC,OAAQv3B,EAAMR,OAAOsD,gBAAiB00B,gBAAiB,SAG3DjiB,QAAQ,CACN7V,KAAK,CACH+F,SAAUqB,EAAKJ,MAAM+K,SAAW,GAAI,GACpC4D,WAAW,IACXC,WAAYtV,EAAMS,MAAME,aAI9Bu2B,WAAW,CAAE/gB,KAAM,QAASC,UAAW,IACvCC,OAAQvP,EAAKJ,MAAM+K,SAAW,CAAE6E,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IAAO,CAAEH,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IACrHghB,aAAa,SAACC,GAAc,IAClBC,EAAUD,EAAVC,MACF5F,EAAQ4F,EAAMC,OAAO,GAC3B,OACE3xB,EAAAC,EAAAC,cAACiiG,EAAD,CACEr2E,MAAOA,GAGiB,kBAAjB4F,EAAMC,QAAuBD,EAAMC,OAAOruB,QAC/CouB,EAAMC,OAAOjW,IAAI,SAAAoQ,GACf,IAAMlb,EAAekb,EAAMgG,QACrBm0E,EAAkBn6E,EAAMpf,KAAKqlB,WACnC,OACE/xB,EAAAC,EAAAC,cAACgiG,EAAD,CACEnkF,IAAK+N,EAAM5a,GACXvS,MAAOmtB,EAAMntB,MACb4S,MAAOX,EACPhC,MAAOq3F,SA3tCf5iG,EAAAjB,OAAA,qBAs5CR,IA/KAqtB,EAAY,EACZ5B,EAAgB,EAEZs1E,EAAU,KACVC,EAAW,KACXC,EAAexiG,EAAKI,cAAciB,MAAM,GACxCohG,EAAiBziG,EAAKI,cAAciB,MAAM,GAC1Cw2B,EAAS73B,EAAKI,cAAciB,MAAM,GAItCygG,EAAgBN,EAAW3mF,IAAI,SAACpN,EAAEqC,GAEhC,IAAIkE,EAAI,EACJqxF,EAAM,EACJnxF,EAAI05C,IAAmB,IAAZngD,EAAE0L,WAAgBR,OAAO,oBACpCkqD,EAAM7iE,EAAKI,cAAc4C,iBAAiByK,EAAE2L,SAAS,IAAInU,IAAI,KAKnE,GAFA4yB,EAASA,EAAOpwB,KAAKo7D,EAAI79D,MAAM,MAE3Bs9F,EAAQ,CACV,IAAM11E,GAAQnf,EAAE0L,UAAUopF,EAASppF,WAAW,MAGxCjD,EAAWusF,EAAez9F,MAAMs9F,EAAQt9F,MAAM4nB,GAAM3nB,IAAI,MAGxDqgG,GAFN7C,EAAiBA,EAAeh7F,KAAKyO,IAENjR,IAAIu9F,GAAcznF,MAAM,GAAG/V,MAAM,KAChEgP,EAAI7I,WAAWm6F,GAGfD,EAAMxtE,EAAO5yB,IAAI6K,EAAE,GAAGK,QAAQ,GAGhCoyF,EAAW90F,EAEX60F,EAAUz/B,EAEa,OAAnBluD,IACFA,EAAiBjJ,SAAS+B,EAAEuN,cAG9BgS,EAAgB3U,KAAKG,IAAIwU,EAAchZ,GAEvC,IAAMkX,EAAU7S,KAAKyW,MAAMF,EAAU8yE,EAAW,KAC1C1mF,EAAcvN,EAAEuN,YAItB,OAFA4T,IAEO,CAAE1a,IAAGF,IAAGqxF,MAAKrqF,cAAakQ,aAI/By2E,EAAY3sD,qBAAuB2sD,EAAY3sD,oBAAoBvyC,OAAO,GAC5Ek/F,EAAY3sD,oBAAoBvrC,QAAS,SAAA87F,GACvC,IAAM11F,EAAe7P,EAAKJ,MAAMO,YAAYyP,UAAUyH,KAAM,SAAA3N,GAAC,OAAKA,EAAE4C,OAASi5F,EAAmBvyD,WAC5FnjC,IACF01F,EAAmBphG,SAAU,EAC7BohG,EAAmBp/F,QAAU0J,EAAa1J,QAC1CyJ,EAAU41F,QAAQD,MAKxB31F,EAAUnG,QAAS,SAAAC,GAEjB,IAAMmG,EAAeS,GAAcC,MAAMX,UAAUlG,EAAE4C,MAC/C6pC,EAAYtmC,EAAasmC,UAAYtmC,EAAasmC,UAAY,OAE9DsvD,EAAW,CACfp1F,GAAGR,EAAaa,MAChB5S,MAAO,OAAO+R,EAAa/R,MAAM0S,IAAIC,KAAK,KAAK,IAC/C5E,KAAM,IAGR+iB,EAAY,EAEZ0zE,EAAU,KACVC,EAAW,KACX,IAAImD,EAAa,EACbC,EAAoB,KACpBC,EAAqB,KACzB/tE,EAAS73B,EAAKI,cAAciB,MAAM,GAClCmhG,EAAexiG,EAAKI,cAAciB,MAAM,GACxCohG,EAAiBziG,EAAKI,cAAciB,MAAM,GAE1CmgG,EAAW/3F,QAAS,SAACgE,EAAEqC,GAErB,IAAMk1F,EAAev3F,EAAE04E,cAAc9uE,KAAK,SAACqvE,EAAMxyE,GAC/C,OAAOwyE,EAAM12E,aAAaC,gBAAkBvG,EAAEvD,QAAQ8J,gBAGxD,GAAI+0F,EAAa,CAEVW,IACHA,EAAoBX,GAGtB,IAAMa,EAAoC,kBAAd1vD,GAA0BA,EAAU1zC,OAAS0zC,EAAUusB,OAAO,SAACmoB,EAAIxe,GAC7F,OAAI24B,EAAa34B,GACRrsE,EAAKI,cAAciB,MAAMwpF,GAAKpjF,KAAKzH,EAAKI,cAAciB,MAAM2jG,EAAa34B,KAE3ErsE,EAAKI,cAAciB,MAAMwpF,IAChC,GAAK7qF,EAAKI,cAAciB,MAAM2jG,EAAa7uD,IAG7C,IADuB0vD,EAAa5C,GAAG,GACnB,CAGlB,GAA2B,OAAvB2C,IACFA,EAAqBl6F,SAAS+B,EAAEuN,cACTrG,EAAe,CACpC,IAAMmxF,EAAkBhE,EAAczqF,KAAK,SAAA0uF,GAAE,OAAKA,EAAG/qF,aAAa4qF,IAC9DE,IACFJ,EAAaI,EAAgB9xF,GAKnC,IAAIgyF,EAEAhyF,EAAI,EACJqxF,EAAM,EACJnxF,EAAI05C,IAAmB,IAAZngD,EAAE0L,WAAgBR,OAAO,oBACpCkqD,EAAM7iE,EAAKI,cAAc4C,iBAAiB6iG,EAAa,IAAI5gG,IAAI,KAKrE,GAHA4yB,EAASA,EAAOpwB,KAAKo7D,EAAI79D,MAAM,MAG3Bu9F,EAAS,CACX,IAAM31E,GAAQnf,EAAE0L,UAAUopF,EAASppF,WAAW,MAGxCjD,EAAWusF,EAAez9F,MAAMs9F,EAAQt9F,MAAM4nB,GAAM3nB,IAAI,MAGxDqgG,GAFN7C,EAAiBA,EAAeh7F,KAAKyO,IAENjR,IAAIu9F,GAAcznF,MAAM,GAAG/V,MAAM,KAChEgP,EAAI7I,WAAWm6F,GAASI,EAExBL,EAAMxtE,EAAO5yB,IAAI6K,EAAE,GAAGK,QAAQ,GAGhCoyF,EAAW90F,EACX60F,EAAUz/B,EAEa,OAAnBluD,IACFA,EAAiBjJ,SAAS+B,EAAEuN,cAG9BgS,EAAgB3U,KAAKG,IAAIwU,EAAchZ,GAEvC,IAAMkX,EAAU7S,KAAKyW,MAAMF,EAAU8yE,EAAW,KAGhD9yE,IAEAo3E,EAAU,CACR9xF,IACAF,IACAqxF,MACAn6E,WAGF0D,IACA62E,EAAS55F,KAAKuE,KAAK41F,OAKzBt5F,EAAU0D,KAAKq1F,KAGjBz2E,EAAY7jB,WAAW6hB,EAAcu0E,GACrCtyE,EAAc,CAAC,GACNnf,EAAE,EAAEA,GAAG,EAAEA,IAChBmf,EAAY7e,KAAKN,EAAEkf,GAv5Cb,OA05CRtiB,EAAU0D,KAAK,CACbC,GAAG,OACHvS,MAAO,OAAOwS,GAAcC,MAAMX,UAAUvL,KAAKvG,MAAM0S,IAAIC,KAAK,KAAK,IACrE5E,KAAMi2F,IAIRZ,EAAY3nF,IAEZ5N,EAAa,CACX2jB,OAAO,CACLvmB,KAAM,OACN4P,OAAQ,kBAGV8W,QAAQ,mBACRC,QAAQ,SAAA3hB,GAAK,OAAI5C,WAAW4C,GAAOoC,QAAQ,GAAG,KAC9Cof,OAAO,CACLxmB,KAAM,SACNymB,SAAS,GAGX7V,SAAS,CACPjd,OAAQ,GACRizB,SAAU,EACVE,OAAQ,OACRD,YAAa,GACbK,aAAc,EACdH,cAAe,GACfE,WAAWf,EACXc,eAAgB,SAChBpX,OAAQ,SAAA5K,GAAK,OAAI5C,WAAW4C,GAAOoC,QAAQ,GAAG,MAEhD0J,WAAY7Z,EAAKJ,MAAM+K,SAAW,KAAO,CACvCjO,OAAQ,GACRizB,SAAU,EACVhX,OAAQ,QACRiX,YAAa,GACbE,aAAc,EACdD,OAAQ,SACRE,eAAgB,SAChBC,WAAYhwB,EAAKJ,MAAM+K,SAAW,eAAmB3K,EAAKJ,MAAMglG,aAAe,eAAiB,gBAElG31E,cACAzV,UAAU,EACVE,SAAQ,EACRvM,SAAQ,EACR+iB,WAAW,IACXtW,MAAM,YACNE,YAAW,EACXK,aAAa,IACbH,aAAY,EACZC,aAAY,EACZC,iBAAiB,EACjBxhB,OAAO,SAAA+U,GAAC,OAAIA,EAAE3P,OACdmd,mBAAmB,GACnBxM,QAAQ,CACN,CACE4b,WAAY,GACZD,UAAWpqB,EAAKJ,MAAM+K,SAAW,GAAK,IACtCw5F,WAAYnkG,EAAKJ,MAAM+K,UAAY,GAAK,EACxC2f,WAAYtqB,EAAKJ,MAAM+K,SAAW,GAAK,GACvC4f,WAAY,GACZ65E,aAAc,EACd/3F,UAAW,MACXme,OAAQ,cACRE,YAAa,SACbD,cAAevxB,EAAMR,OAAOgE,OAC5BiuB,QAAS,CACP,CACEC,GAAI,QACJ/N,MAAO,CACL4N,cAAe,YAMzBvxB,MAAM,CACJm3B,KAAM,CACJC,MAAO,CACL13B,KAAM,CACJ+F,SAAUqB,EAAKJ,MAAM+K,SAAW,GAAI,GACpC4D,WAAW,IACXiM,KAAKthB,EAAMR,OAAOgE,OAClB8R,WAAYtV,EAAMS,MAAME,aAI9B02B,KAAM,CACJC,KAAM,CACJC,OAAQv3B,EAAMR,OAAOsD,gBAAiB00B,gBAAiB,SAG3DjiB,QAAQ,CACN7V,KAAK,CACH+F,SAAUqB,EAAKJ,MAAM+K,SAAW,GAAI,GACpC4D,WAAW,IACXC,WAAYtV,EAAMS,MAAME,aAI9Bu2B,WAAW,CAAE/gB,KAAM,QAASC,UAAW,IACvCC,OAAQvP,EAAKJ,MAAM+K,SAAW,CAAE6E,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IAAO,CAAEH,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IACrHghB,aAAa,SAACC,GAAc,IAClBC,EAAUD,EAAVC,MACF5F,EAAQ4F,EAAMC,OAAO,GAC3B,OACE3xB,EAAAC,EAAAC,cAACiiG,EAAD,CACEr2E,MAAOA,GAGiB,kBAAjB4F,EAAMC,QAAuBD,EAAMC,OAAOruB,QAC/CouB,EAAMC,OAAOjW,IAAI,SAAAoQ,GACf,IAAMlb,EAAekb,EAAMgG,QACrBm0E,EAAkBn6E,EAAMpf,KAAKqlB,WAC7BuhE,EAAcxnE,EAAMpf,KAAKw5F,IAC/B,OACElmG,EAAAC,EAAAC,cAACgiG,EAAD,CACEnkF,IAAK+N,EAAM5a,GACXK,MAAOX,EACPjS,MAAOmtB,EAAMntB,MACbiQ,MAAK,GAAA3J,OAAKghG,EAAL,aAAAhhG,OAAgCquF,EAAhC,yBAphDbjwF,EAAAjB,OAAA,6BAgiDRyrB,EAAgB,EACZtY,EAAkB,KAEtBotF,EAAgBN,EAAW3mF,IAAI,SAACpN,EAAEqC,GAEhC,IAAIkE,EAAI,EACJqxF,EAAM,EACNz4E,EAAO,EACL1Y,EAAI05C,IAAmB,IAAZngD,EAAE0L,WAAgBR,OAAO,oBACpC/C,EAAa5V,EAAKI,cAAc4C,iBAAiByK,EAAEqN,UAAU9a,EAAKJ,MAAMO,YAAY8C,UAErFyR,GAGHV,EAAI7I,WAAWyK,EAAW3Q,IAAIyP,GAAiBqG,MAAM,GAAG/V,MAAM,MAE9D4nB,GAAQnf,EAAE0L,UAAUqoF,EAAW,GAAGroF,WAAW,MAE7CksF,EADgBzvF,EAAW3Q,IAAIyP,GAAiBqG,MAAM,GAAG/V,MAAM,KACjDA,MAAM,KAAKC,IAAI2nB,GAAMzc,QAAQ,IAN3CuE,EAAkBkB,EAWG,OAAnBjB,IACFA,EAAiBjJ,SAAS+B,EAAEuN,cAG9BgS,EAAgB3U,KAAKG,IAAIwU,EAAchZ,GAEvC,IAAMkX,EAAU7S,KAAKyW,MAAMF,EAAU8yE,EAAW,KAC1C1mF,EAAcvN,EAAEuN,YAItB,OAFA4T,IAEO,CAAE1a,IAAGF,IAAGqxF,MAAKrqF,cAAakQ,aAI/By2E,EAAY3sD,qBAAuB2sD,EAAY3sD,oBAAoBvyC,OAAO,GAC5Ek/F,EAAY3sD,oBAAoBvrC,QAAS,SAAA87F,GACvC,IAAM11F,EAAe7P,EAAKJ,MAAMO,YAAYyP,UAAUyH,KAAM,SAAA3N,GAAC,OAAKA,EAAE4C,OAASi5F,EAAmBvyD,WAC5FnjC,IACF01F,EAAmBphG,SAAU,EAC7BohG,EAAmBp/F,QAAU0J,EAAa1J,QAC1CyJ,EAAU41F,QAAQD,MA5kDhB/iG,EAAAvB,KAAA,IAilDFjB,EAAKI,cAAc0G,aAAa8I,EAAhC,eAAAlM,EAAAnE,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAA0C,SAAAgB,EAAO+H,GAAP,IAAAmG,EAAAsmC,EAAAsvD,EAAAC,EAAAO,EAAAC,EAAAP,EAAAC,EAAA,OAAAllG,EAAAtB,EAAA0B,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,cAExC4O,EAAeS,GAAcC,MAAMX,UAAUlG,EAAE4C,MAC/C6pC,EAAYtmC,EAAasmC,UAAYtmC,EAAasmC,UAAY,OAE9DsvD,EAAW,CACfp1F,GAAGR,EAAaa,MAChB5S,MAAO,OAAO+R,EAAa/R,MAAM0S,IAAIC,KAAK,KAAK,IAC/C5E,KAAM,IAGR+iB,EAAY,EACR82E,EAAa,EACjBhxF,EAAkB,KACduxF,EAAc,KACdC,EAAiB,KACjBP,EAAoB,KACpBC,EAAqB,KAjBqB9jG,EAAAb,KAAA,GAmBxCjB,EAAKI,cAAc0G,aAAa06F,EAAhC,eAAA79F,EAAApE,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAA2C,SAAAC,EAAO6M,GAAP,IAAAu3F,EAAAc,EAAAE,EAAAG,EAAAC,EAAAlyF,EAAAF,EAAAqxF,EAAAgB,EAAAz5E,EAAA04E,EAAAp6E,EAAA,OAAAxqB,EAAAtB,EAAA0B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,QAEzC+jG,EAAev3F,EAAE04E,cAAc9uE,KAAK,SAACqvE,EAAMxyE,GAC/C,OAAOwyE,EAAM12E,aAAaC,gBAAkBvG,EAAEvD,QAAQ8J,kBAGpC+0F,EAAa7uD,KAE1BwvD,IACHA,EAAoBX,GAGChlG,EAAKI,cAAciB,MAAM2jG,EAAa7uD,IAAY8sD,GAAG,KAI/C,OAAvB2C,IACFA,EAAqBl6F,SAAS+B,EAAEuN,cACTrG,IACfmxF,EAAkBhE,EAAczqF,KAAK,SAAA0uF,GACzC,OAAOA,EAAG/qF,aAAa4qF,OAGvBF,EAAaI,EAAgB9xF,GAKrB,GACVmyF,EAAoBnB,EAAan0C,MACjCu1C,EAAkBpmG,EAAKI,cAAc4C,iBAAiBmjG,EAAkBz8F,EAAEzG,UACxEiR,EAAI05C,IAAmB,IAAZngD,EAAE0L,WAAgBR,OAAO,oBAGtC9I,GAAgBA,EAAahE,MAAQgE,EAAahE,KAAKnC,EAAEvD,QAAQ8J,gBAAkBJ,EAAahE,KAAKnC,EAAEvD,QAAQ8J,eAAexC,EAAEuN,eAClImrF,EAAoBnmG,EAAKI,cAAciB,MAAMiP,GAAcC,MAAMX,UAAUlG,EAAE4C,MAAMT,KAAKnC,EAAEvD,QAAQ8J,eAAexC,EAAEuN,cACnHorF,EAAkBpmG,EAAKI,cAAc4C,iBAAiBmjG,EAAkBz8F,EAAEzG,WAiBxE+Q,EAAI0xF,EACJL,EAAM,EAEL3wF,GAGC0xF,EAAgB35E,GAAGy5E,IACrBxxF,EAAkB0xF,EACZC,EAAYZ,EAAS55F,KAAK45F,EAAS55F,KAAKpJ,OAAO,GAAGuR,EAAEyxF,EAAS55F,KAAK45F,EAAS55F,KAAKpJ,OAAO,GAAGuR,EAChGA,EAAIiyF,EAAYjyF,EAAEqyF,EAClBX,EAAa1xF,GAEbA,GAAK7I,WAAWi7F,EAAgBnhG,IAAIyP,GAAiBqG,MAAM,GAAG/V,MAAM,MAGhE4nB,GAAQnf,EAAE0L,UAAUqoF,EAAW,GAAGroF,WAAW,MAC7CmsF,EAAUc,EAAgBnhG,IAAIyP,GAAiBqG,MAAM,GAAG/V,MAAM,KACpEqgG,EAAMC,EAAQtgG,MAAM,KAAKC,IAAI2nB,GAAMzc,QAAQ,IAb3CuE,EAAkB0xF,EAgBpBpyF,EAAIqE,KAAKG,IAAI,EAAExE,GACfgZ,EAAgB3U,KAAKG,IAAIwU,EAAchZ,GAEjCkX,EAAU7S,KAAKyW,MAAMF,EAAU8yE,EAAW,KAShD9yE,IACAq3E,EARAD,EAAU,CACR9xF,IACAF,IACAqxF,MACAn6E,WAKFu6E,EAAS55F,KAAKuE,KAAK41F,GACnBE,EAAiBE,IAxF0B,wBAAArlG,EAAAS,SAAAZ,EAAAjB,SAA3C,gBAAAsC,GAAA,OAAA0B,EAAAzB,MAAAvC,KAAAwC,YAAA,IAnBwC,QAgH9CuK,EAAU0D,KAAKq1F,GAhH+B,yBAAA3jG,EAAAN,SAAAG,EAAAhC,SAA1C,gBAAAqC,GAAA,OAAA0B,EAAAxB,MAAAvC,KAAAwC,YAAA,IAjlDE,SAssDR,IAFA6sB,EAAY7jB,WAAW6hB,EAAcu0E,GACrCtyE,EAAc,CAAC,GACNnf,EAAE,EAAEA,GAAG,EAAEA,IAChBmf,EAAY7e,KAAKN,EAAEkf,GAvsDb,OA0sDRtiB,EAAU0D,KAAK,CACbC,GAAG,OACHvS,MAAO,OAAOwS,GAAcC,MAAMX,UAAUvL,KAAKvG,MAAM0S,IAAIC,KAAK,KAAK,IACrE5E,KAAMi2F,IAIRZ,EAAY3nF,IAEZ5N,EAAa,CACX2jB,OAAO,CACLvmB,KAAM,OACN4P,OAAQ,kBAGV8W,QAAQ,mBACRC,QAAQ,SAAA3hB,GAAK,OAAI5C,WAAW4C,GAAOoC,QAAQ,GAAG,KAC9Cof,OAAO,CACLxmB,KAAM,SACNymB,SAAS,GAGX7V,SAAS,CACPjd,OAAQ,GACRizB,SAAU,EACVE,OAAQ,OACRD,YAAa,GACbK,aAAc,EACdH,cAAe,GACfE,WAAWf,EACXc,eAAgB,SAChBpX,OAAQ,SAAA5K,GAAK,OAAI5C,WAAW4C,GAAOoC,QAAQ,GAAG,MAEhD0J,WAAY7Z,EAAKJ,MAAM+K,SAAW,KAAO,CACvCjO,OAAQ,GACRizB,SAAU,EACVhX,OAAQ,QACRiX,YAAa,GACbE,aAAc,EACdD,OAAQ,SACRE,eAAgB,SAChBC,WAAYhwB,EAAKJ,MAAM+K,SAAW,eAAmB3K,EAAKJ,MAAMglG,aAAe,eAAiB,gBAElG31E,cACAzV,UAAU,EACVE,SAAQ,EACRvM,SAAQ,EACR+iB,WAAW,IACXtW,MAAM,YACNE,YAAW,EACXK,aAAa,IACbH,aAAY,EACZC,aAAY,EACZC,iBAAiB,EACjBxhB,OAAO,SAAA+U,GAAC,OAAIA,EAAE3P,OACdmd,mBAAmB,GACnBxM,QAAQ,CACN,CACE4b,WAAY,GACZD,UAAWpqB,EAAKJ,MAAM+K,SAAW,GAAK,IACtCw5F,WAAYnkG,EAAKJ,MAAM+K,UAAY,GAAK,EACxC2f,WAAYtqB,EAAKJ,MAAM+K,SAAW,GAAK,GACvC4f,WAAY,GACZ65E,aAAc,EACd/3F,UAAW,MACXme,OAAQ,cACRE,YAAa,SACbD,cAAevxB,EAAMR,OAAOgE,OAC5BiuB,QAAS,CACP,CACEC,GAAI,QACJ/N,MAAO,CACL4N,cAAe,YAMzBvxB,MAAM,CACJm3B,KAAM,CACJC,MAAO,CACL13B,KAAM,CACJ+F,SAAUqB,EAAKJ,MAAM+K,SAAW,GAAI,GACpC4D,WAAW,IACXiM,KAAKthB,EAAMR,OAAOgE,OAClB8R,WAAYtV,EAAMS,MAAME,aAI9B02B,KAAM,CACJC,KAAM,CACJC,OAAQv3B,EAAMR,OAAOsD,gBAAiB00B,gBAAiB,SAG3DjiB,QAAQ,CACN7V,KAAK,CACH+F,SAAUqB,EAAKJ,MAAM+K,SAAW,GAAI,GACpC4D,WAAW,IACXC,WAAYtV,EAAMS,MAAME,aAI9Bu2B,WAAW,CAAE/gB,KAAM,QAASC,UAAW,IACvCC,OAAQvP,EAAKJ,MAAM+K,SAAW,CAAE6E,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IAAO,CAAEH,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IACrHghB,aAAa,SAACC,GAAc,IAClBC,EAAUD,EAAVC,MACF5F,EAAQ4F,EAAMC,OAAO,GAC3B,OACE3xB,EAAAC,EAAAC,cAACiiG,EAAD,CACEr2E,MAAOA,GAGiB,kBAAjB4F,EAAMC,QAAuBD,EAAMC,OAAOruB,QAC/CouB,EAAMC,OAAOjW,IAAI,SAAAoQ,GACf,IAAMlb,EAAekb,EAAMgG,QACrBm0E,EAAkBn6E,EAAMpf,KAAKqlB,WAC7BuhE,EAAcxnE,EAAMpf,KAAKw5F,IAC/B,OACElmG,EAAAC,EAAAC,cAACgiG,EAAD,CACEnkF,IAAK+N,EAAM5a,GACXK,MAAOX,EACPjS,MAAOmtB,EAAMntB,MACbiQ,MAAK,GAAA3J,OAAKghG,EAAL,aAAAhhG,OAAgCquF,EAAhC,yBAp0DbjwF,EAAAjB,OAAA,6BAAAiB,EAAAjB,OAAA,sBAk1DZvB,EAAKwL,SAAS,CACZ01F,YACAv1F,aACAe,cAr1DU,0BAAAlK,EAAAhB,SAAAa,EAAA1C,oMAhCZA,KAAK6L,SAAS,CACZkB,UAAU,KACVw0F,UAAU,KACVv1F,WAAW,OAEbhM,KAAKgJ,YACLhJ,KAAKyhG,mMAGkB12F,6EACjB47F,EAAsB57F,EAAUk6F,eAAiBjlG,KAAKC,MAAMglG,aAC5D2B,EAAoB77F,EAAU82F,aAAe7hG,KAAKC,MAAM4hG,WACxDrmF,EAAezQ,EAAUsC,gBAAkBrN,KAAKC,MAAMoN,eAAiBuS,KAAKC,UAAU9U,EAAUvK,eAAiBof,KAAKC,UAAU7f,KAAKC,MAAMO,cAC7IomG,GAAqBD,GAAuBnrF,IAC9Cxb,KAAKosB,2JAOHpsB,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,wCAk2D9C,OACET,EAAAC,EAAAC,cAAC+R,GAAD7R,OAAAC,OAAA,CACEoM,YAAY,GACRjM,KAAKwK,MAAMwB,WAFjB,CAGE/M,OAAQe,KAAKC,MAAMhB,OACnBmK,KAAMpJ,KAAKwK,MAAM+2F,UACjBr1F,KAAMlM,KAAKwK,MAAMuC,UACjBzS,MAAO0F,KAAKwK,MAAMe,WAClBP,SAAUhL,KAAKC,MAAM+K,SACrBG,SAAUnL,KAAKC,MAAMkL,SACrBO,eAAgB1L,KAAKC,MAAMyL,yBA74DVvL,aC6LV0mG,8MA/Lbr8F,MAAQ,CACN+b,SAAQ,EACRub,WAAW,CACT+a,UAAU,CACRjnB,OAAO,KACPrP,SAAQ,IAGZg/C,gBAAgB,QAIlB9kE,cAAgB,OAyBhBmkE,oCAAiB,SAAA3jE,IAAA,IAAAskE,EAAA,OAAAxkE,EAAAtB,EAAA0B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACfjB,EAAKwL,SAAS,CACZ0a,SAAQ,IAFKnlB,EAAAE,KAAA,EAKejB,EAAKI,cAAcmkE,eAAevkE,EAAKJ,MAAMO,aAL5D,OAKT+kE,EALSnkE,EAAAK,KAOfpB,EAAKwL,SAAS,CACZ0a,SAAQ,EACRg/C,oBATa,wBAAAnkE,EAAAS,SAAAZ,EAAAjB,WAajB68C,gDAAY,SAAA76C,EAAOgM,GAAP,IAAA/L,EAAAqlE,EAAA,OAAAvmE,EAAAtB,EAAA0B,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,OACV0M,EAAEinB,iBAEIhzB,EAAW,SAAC8Z,EAAG4lB,GAGnB,IAAM+F,EAAY,CAChBjkB,cAAe,YACfC,YAAarjB,EAAKJ,MAAMoN,cACxBsW,WAAY5H,EAAGpe,QAKbgkC,IACF+F,EAAU/jB,WAAatjB,EAAKI,cAAcmnC,oBAAoBjG,KAI5DA,GAA8B,UAArB+F,EAAU/pC,SACrB0C,EAAKI,cAAc+iB,yBAAyBkkB,GAG5B,YAAd3rB,EAAGpe,OAEL+M,OAAOszB,cAAcC,WAArB,sBAAuD,CACrDC,iBAAgB,4BAChBC,WAAY,QACZC,WAAY,GACZC,WAAY,GACZC,QAAS,YAIX5zB,OAAOszB,cAAcC,WAArB,kBAAmD,CACjDC,iBAAgB,yCAChBC,WAAY,QACZC,WAAY,GACZC,WAAY,GACZC,QAAS,YAIbj+B,EAAKwL,SAAS,SAACuB,GAAD,MAAgB,CAC5B00B,WAAWliC,OAAAsL,EAAA,EAAAtL,CAAA,GACNwN,EAAU00B,WADL,CAER+a,UAAU,CACRjnB,OAAO,KACPrP,SAAQ,QAKdlmB,EAAKukE,kBAGD0C,EAAmB,SAACvrD,GACxB,IAAM6Z,EAAS7Z,EAAG8rB,gBAClBxnC,EAAKwL,SAAS,SAACuB,GAAD,MAAgB,CAC1B00B,WAAWliC,OAAAsL,EAAA,EAAAtL,CAAA,GACNwN,EAAU00B,WADL,CAER+a,UAAUj9C,OAAAsL,EAAA,EAAAtL,CAAA,GACLwN,EAAU00B,WAAW+a,UADjB,CAEPjnB,iBAOVv1B,EAAKJ,MAAMmC,0BAA0B/B,EAAKJ,MAAMO,YAAYkE,KAAKhB,MAAO,YAAa,GAAI,KAAOzB,EAAUqlE,GAE1GjnE,EAAKwL,SAAS,CACZi2B,WAAW,CACT+a,UAAU,CACRjnB,OAAO,KACPrP,SAAQ,MA5EJ,wBAAApkB,EAAAN,SAAAG,EAAAhC,0IAnCNA,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,4JAK9CD,KAAKgJ,YACLhJ,KAAK4kE,sMAGkB75D,EAAUqC,yEACjCpN,KAAKgJ,YAECyS,EAAiB1Q,EAAUvJ,UAAYxB,KAAKC,MAAMuB,SACnCuJ,EAAUsC,gBAAkBrN,KAAKC,MAAMoN,eACxCoO,IAClBzb,KAAK4kE,uJAmGA,IAAA37D,EAAAjJ,KACP,OACER,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwhB,GAAI,EACJ7mB,MAAO,EACP8R,UAAW,QACXzC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGhB7J,KAAKwK,MAAM+b,QACT/mB,EAAAC,EAAAC,cAACyM,GAAD,CACEzC,UAAW,CACTE,cAAc,OAEhBS,YAAa,CACXgC,KAAK,QAEP/B,UAAW,CACTgC,GAAG,GAELrT,KAAM,0BAGR+G,KAAKwK,MAAMs3B,WAAW+a,UAAUt2B,QAC9B/mB,EAAAC,EAAAC,cAAC2rC,GAAD,CAAe7I,KAAMxiC,KAAKC,MAAMuiC,KAAM0C,SAAQ,yBAA4BD,WAAU,kCAAqCtY,KAAM3sB,KAAKwK,MAAMs3B,WAAW+a,UAAUjnB,SAE/Jp2B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPqP,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,EACJ5N,GAAI,EACJD,UAAW,UAEVrR,KAAKwK,MAAM+6D,gBAAkB,uDAAyD,iCAEzF/lE,EAAAC,EAAAC,cAACmsC,GAAD,CACEhmB,YAAa,CACXvrB,MAAM,OACNlC,UAAU4H,KAAKwK,MAAM+6D,iBAEvBlnD,YAAa,SAAArQ,GAAC,OAAI/E,EAAK4zC,UAAU7uC,KALnC,sBA/KU7N,aCuGT2mG,8MAtGbrmG,cAAgB,gFAGVT,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,4JAK9CD,KAAKgJ,iMAGkB+B,EAAUqC,mEACjCpN,KAAKgJ,kJAIL,OACExJ,EAAAC,EAAAC,cAAC8gB,GAAD,CACE1B,UAAW,CACT/U,EAAE,EACFqC,UAAUpM,KAAKC,MAAMmM,UAAYpM,KAAKC,MAAMmM,UAAY,CAAC,QAAQ,WAGnE5M,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPqP,WAAY,aACZC,cAAe,SACfC,eAAgB,cAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgK,WAAY,aACZyC,UAAYpM,KAAKC,MAAM8mG,eAAiB/mG,KAAKC,MAAM8mG,eAAiB,CAAC,OAAO,SAE5EvnG,EAAAC,EAAAC,cAACC,EAAA,EAAQyf,GAAT,CACE9N,GAAI,CAAC,EAAE,GACP1C,WAAY,EACZ5P,SAAU,CAAC,EAAE,GACbqS,UAAW,OACXlT,MAAO,YACPkhB,WAAY,WAEXrf,KAAKC,MAAMnG,QAIe,qBAArBkG,KAAKC,MAAMmO,OAA8C,OAArBpO,KAAKC,MAAMmO,OAAkBpO,KAAKC,MAAMmO,MAAM2H,WAAWjT,OAAO,GAC1GtD,EAAAC,EAAAC,cAACC,EAAA,EAADC,OAAAC,OAAA,CACEwf,WAAY,EACZrgB,SAAU,CAAC,EAAE,GACb4P,WAAY,CAAC,EAAE,GACfzQ,MAAO,aACH6B,KAAKC,MAAM+mG,YAEdhnG,KAAKC,MAAMmO,OAIhBpO,KAAKC,MAAMC,SACTF,KAAKC,MAAMC,SACX,KAG2B,qBAArBF,KAAKC,MAAM8Q,OAA8C,OAArB/Q,KAAKC,MAAM8Q,OAAkB/Q,KAAKC,MAAM8Q,MAAMgF,WAAWjT,OAAO,GAC1GtD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,CAAC,EAAE,GACPvV,WAAY,SACZC,cAAe,OAEfpK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACV4P,WAAY,EACZzQ,MAAO,UAEN6B,KAAKC,MAAM8Q,OAGX/Q,KAAKC,MAAMgnG,cAAgBjnG,KAAKC,MAAMgnG,aAAankG,OAAO,GACzDtD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwc,UAAW,MACXC,QAASpc,KAAKC,MAAMgnG,cAEpBznG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2M,GAAI,EACJK,KAAM,OACNN,KAAM,MACNlO,MAAO,yBA3FPgC,aCqET+mG,oLApEJ,IAAA7mG,EAAAL,KAEDmnG,IAAmBnnG,KAAKC,MAAMknG,eAEpC,OACE3nG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPoW,GAAI,aACJ/G,WAAY,UAGV3J,KAAKC,MAAMoe,aACV7e,EAAAC,EAAAC,cAACogG,GAAD,CACEj6E,YAAa,CACXvrB,MAAM,OACN2E,OAAO,QAET2N,SAAU,QACVgwB,SAAU,YACVve,YAAare,KAAKC,MAAMoe,cAI3Bre,KAAKC,MAAMhH,MAAQ+G,KAAKC,MAAMhH,KAAK6J,OAAO,GACzCtD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2M,GAAI,CAAC,EAAE,GACPtN,SAAU,CAAC,EAAE,GACb4P,WAAY,EACZzQ,MAAO,WACP8oB,WAAY,YACZ7I,QAASpe,KAAKC,MAAMoe,aAEpBre,KAAKC,MAAMhH,QAIZ+G,KAAKC,MAAM+K,UAAYm8F,IAAmBnnG,KAAKC,MAAMsyC,MAAQvyC,KAAKC,MAAMsyC,KAAKzvC,OAAO,GACpF9C,KAAKC,MAAMsyC,KAAKr3B,IAAI,SAACq3B,EAAK7lB,GACxB,IAAM8nE,EAAOn0F,EAAKJ,MAAMmnG,UAAY/mG,EAAKJ,MAAMmnG,SAAS16E,IAAkB,KACpEvsB,EAAYq0F,EAAO6S,IAAOvzE,IAChC,OACEt0B,EAAAC,EAAAC,cAACS,EAAD,CACEg5B,GAAI,CAAC,EAAE,GACP7sB,GAAI,CAAC,EAAE,GACPsC,WAAY,EACZ5P,SAAU,CAAC,EAAE,GACbioB,WAAY,YACZ/J,MAAS7c,EAAKJ,MAAM+K,SAMhB,KAN2B,CAC7BmnB,SAAS,MACTxJ,SAAU,SACVI,WAAY,SACZqJ,aAAc,WACdk1E,WAAU,aAAA7iG,OAAelL,EAAMR,OAAO4D,UAExC4gB,IAAG,mBAAA9Y,OAAqBioB,GACxBvuB,MAAOq2F,EAAO,WAAa,YAC3Bp2E,QAASo2E,EAAO,SAAAxmF,GAAC,OAAI3N,EAAKJ,MAAMmsC,YAAYooD,IAAQ,MAEnDjiD,aA3DMpyC,kCCwJVonG,uNA7Ib/8F,MAAQ,CACNg9F,eAAe,GACfC,OAAO,CACL17E,UAAW1rB,EAAKJ,MAAM8rB,UAAY1rB,EAAKJ,MAAM8rB,UAAY,IAAIhT,KAC7D2uF,QAASrnG,EAAKJ,MAAMynG,QAAUrnG,EAAKJ,MAAMynG,QAAU,IAAI3uF,KACvDwE,IAAK,gBAsDToqF,mBAAqB,SAAC58F,GAChBA,EAAUghB,YAAc1rB,EAAKJ,MAAM8rB,WAAahhB,EAAU28F,UAAYrnG,EAAKJ,MAAMynG,SACnFrnG,EAAKwL,SAAS,CACZ47F,OAAO,CACL17E,UAAW1rB,EAAKJ,MAAM8rB,UAAY1rB,EAAKJ,MAAM8rB,UAAY,IAAIhT,KAC7D2uF,QAASrnG,EAAKJ,MAAMynG,QAAUrnG,EAAKJ,MAAMynG,QAAU,IAAI3uF,KACvDwE,IAAK,4FAxDAkqF,GACXznG,KAAK6L,SAAS,CACZ27F,eAAe,GACfC,OAAOA,EAAOG,sDAIA55F,GAAE,IAAA/E,EAAAjJ,KACd+rB,EAAY,KACZ27E,EAAUz5C,IAAO,IAAIl1C,MACnByuF,EAAiBx5F,EAAElO,OAAOsO,MAEhC,OAAQo5F,GACN,IAAK,MACHz7E,EAAY27E,EAAQzsF,QAAQhC,SAAS,EAAE,OACzC,MACA,IAAK,OACH8S,EAAY27E,EAAQzsF,QAAQhC,SAAS,EAAE,QACzC,MACA,IAAK,QACH8S,EAAY27E,EAAQzsF,QAAQhC,SAAS,EAAE,QACzC,MACA,IAAK,QACH8S,EAAY27E,EAAQzsF,QAAQhC,SAAS,EAAE,SACzC,MACA,QACE8S,EAAY,KACZ27E,EAAU,KAId,GAAI37E,GAAa27E,EAAQ,CAIvB,IAAMD,EAAS,CACb17E,UAJFA,EAAYA,EAAU7S,GAKpBwuF,QAJFA,EAAUA,EAAQxuF,GAKhBqE,IAAI,aAGNvd,KAAK6L,SAAS,CACZ47F,SACAD,kBACC,WACDv+F,EAAK41B,qDAkBT,IAAM5zB,EAAWjL,KAAKC,MAAM4nG,aAAa7nG,KAAKwK,MAAMi9F,OAAOznG,KAAKwK,MAAMg9F,gBAChEC,EAAS,CACb17E,UAAU9gB,EAAS68F,kBAAoB78F,EAAS68F,kBAAkB5uF,GAAK,IAAIH,KAC3E2uF,QAAQz8F,EAAS88F,gBAAkB98F,EAAS88F,gBAAgB7uF,GAAK,IAAIH,KACrEwE,IAAK,aAEPvd,KAAK6L,SAAS,CACZ47F,WAEFznG,KAAKC,MAAM4+B,8CAGJ,IAAA5wB,EAAAjO,KACP,OACER,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAO4hC,OAAQvhC,KAAKC,MAAMshC,QACxB/hC,EAAAC,EAAAC,cAAC8hC,GAAD,CAAW9F,UAAW17B,KAAKC,MAAM4+B,YAC/Br/B,EAAAC,EAAAC,cAAC8hC,GAAUzF,OAAX,CAAkBjiC,MAAO,sBAEzB0F,EAAAC,EAAAC,cAAC8hC,GAAUpF,KAAX,KACE58B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMrF,MAAO,EAAGsP,cAAe,SAAUD,WAAY,UACnDnK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOoR,MAAM,uBAAuBmM,MAAO,CAACxO,QAAQ,OAAOpU,MAAM,OAAOqP,WAAW,UAAUE,eAAe,WAC1GrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEud,MAAO,CACL/e,MAAM,UACNa,SAAS,OACTC,OAAO,QACPue,UAAU,QAEZljB,MAAO,OACP8sB,UAAU,EACV5F,SAAUxhB,KAAKgoG,kBAAkBn9F,KAAK7K,MACtCoO,MAAOpO,KAAKwK,MAAMg9F,eAClB1nF,QAAS,CACP,CAAE1R,MAAO,GAAI2C,MAAO,oBACpB,CAAE3C,MAAO,MAAO2C,MAAO,YACvB,CAAE3C,MAAO,OAAQ2C,MAAO,aACxB,CAAE3C,MAAO,QAAS2C,MAAO,gBACzB,CAAE3C,MAAO,QAAS2C,MAAO,kBAI/BvR,EAAAC,EAAAC,cAACuoG,GAAA,UAAD,CACER,OAAQ,CAACznG,KAAKwK,MAAMi9F,QACpBS,QAASloG,KAAKC,MAAMioG,QACpBC,QAASnoG,KAAKC,MAAMkoG,QACpB3mF,SAAUxhB,KAAK6nG,aAAah9F,KAAK7K,UAIvCR,EAAAC,EAAAC,cAAC8hC,GAAUnF,OAAX,KACE78B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMwhB,GAAI,CAAC,EAAE,GAAIvX,cAAe,CAAC,SAAU,OAAQtP,MAAO,EAAGuP,eAAgB,UAC3ErK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEL,aAAc,EACdkmB,GAAI,EACJC,GAAI,CAAC,EAAG,GACRpZ,KAAMrM,KAAKC,MAAM+K,SAAW,QAAU,SACtCoT,QAAU,SAAApQ,GAAC,OAAIC,EAAK4wB,WAAW7wB,KALjC,oBA7He8jB,IAAM3xB,YC41CpBioG,8MAn1Cb59F,MAAQ,CACNq6F,IAAI,KACJ3hC,IAAI,KACJj2C,KAAK,IACLo7E,MAAM,KACN1C,QAAQ,KACRuC,QAAQ,KACRC,QAAQ,KACRzK,YAAY,EACZ4K,WAAW,IACXC,aAAa,GACb1G,WAAW,KACXlE,cAAc,EACduF,YAAY,KACZsF,cAAc,GACdC,aAAa,KACbnzD,aAAa,KACb2vD,cAAa,EACbyD,cAAc,KACd9vB,cAAc,KACd4uB,eAAe,KACfpzF,eAAe,KACf2zF,gBAAgB,KAChBxiC,gBAAgB,KAChBy4B,mBAAmB,EACnB8J,kBAAkB,KAClBhG,sBAAsB,KACtB6G,sBAAqB,KAGvBC,gBAAkB,CAChBvlC,IAAI,WACJC,KAAK,YACLulC,MAAM,eACNC,MAAM,gBAIRroG,cAAgB,OAChBgK,mBAAqB,OA+HrBs+F,aAAe,SAACtB,GAA+B,IAAxBD,EAAwBhlG,UAAAM,OAAA,QAAAC,IAAAP,UAAA,GAAAA,UAAA,GAAT,KAE9BimG,EAAex6C,IAAOt9C,GAAcC,MAAMkjC,OAAOzzC,EAAKJ,MAAMoN,eAAe+G,gBAE7E0zF,EAAoB75C,IAAOw5C,EAAO17E,WAAW2C,cAAc+5E,GAAgBx6C,IAAOw5C,EAAO17E,WAAa08E,EACtGV,EAAkB95C,IAAOw5C,EAAOC,SAEhCI,EAAkBkB,OAAOjB,IAC3BA,EAAgB3uF,IAAI,EAAE,OAGxB2uF,EAAkB95C,IAAO85C,EAAgB/uF,OAAO,oBAAoB,oBAEhE8uF,EAAkBmB,SAAS5oG,EAAKmK,MAAMi+F,gBACxCX,EAAoBznG,EAAKmK,MAAMi+F,cAG7BV,EAAgBp5E,QAAQtuB,EAAKmK,MAAM0+F,cACrCnB,EAAkB1nG,EAAKmK,MAAM0+F,YAG/B,IAAM90F,EAAiBrI,SAAS+7F,EAAkB5uF,GAAGC,UAAU,KAGzDlO,EAAW,CACfw9F,eACAnzD,aAJmBvpC,SAASg8F,EAAgB7uF,GAAGC,UAAU,KAKzDquF,iBACApzF,iBACA2zF,kBACAD,qBAKF,OAFAznG,EAAKiN,aAAarC,GAEXA,KAGTk+F,qBAAuB,SAACn7F,GACtBA,EAAEinB,iBACF50B,EAAKiN,aAAa,CAChB23F,cAAc5kG,EAAKmK,MAAMy6F,kBAI7BmE,kBAAoB,SAACT,GACfA,IAAyBtoG,EAAKmK,MAAMm+F,sBACtCtoG,EAAKiN,aAAa,CAChBq7F,4BAsDNU,gBAAkB,SAACxH,GACjB,OAAOA,EAAW/lF,OAAO,SAACm5C,EAAE9kD,GAC1B,QAAS9P,EAAKmK,MAAM4J,gBAAkB6gD,EAAEz7C,WAAanZ,EAAKmK,MAAM4J,mBAAqB/T,EAAKmK,MAAM8qC,cAAgB2f,EAAEz7C,WAAanZ,EAAKmK,MAAM8qC,mBAI9Ig0D,eAAiB,SAAApG,GACf7iG,EAAKiN,aAAa,CAChB41F,mBAIJzB,iCAAc,SAAAxgG,IAAA,IAAAmT,EAAAkhC,EAAAvjC,EAAA+vF,EAAAD,EAAA0H,EAAAC,EAAAv8E,EAAAi2C,EAAAmlC,EAAAt7E,EAAA08E,EAAAC,EAAA7E,EAAA/a,EAAA6f,EAAAC,EAAAC,EAAArzD,EAAAszD,EAAAnE,EAAAoE,EAAAC,EAAAC,EAAA3B,EAAAI,EAAA9vB,EAAA,OAAA73E,EAAAtB,EAAA0B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAEPjB,EAAKJ,MAAMoN,eAAkBhN,EAAKJ,MAAMO,YAFjC,CAAAY,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,UAGH,GAHG,cAUNwS,EAAiB/T,EAAKmK,MAAM09F,QAAUn8F,SAAS1L,EAAKI,cAAcqY,YAAYzY,EAAKI,cAAcqY,YAAYzY,EAAKmK,MAAM09F,SAASlvF,OAAO,uBAAuB,uBAAuBE,GAAGC,UAAU,KAAQ,KAC3Mm8B,EAAej1C,EAAKmK,MAAM29F,QAAUp8F,SAAS1L,EAAKI,cAAcqY,YAAYzY,EAAKI,cAAcqY,YAAYzY,EAAKmK,MAAM29F,SAASnvF,OAAO,uBAAuB,uBAAuBE,GAAGC,UAAU,KAAQ,KAEzMpH,EAAS,CAAC,KAAK,MAAM6iB,SAASv0B,EAAKmK,MAAM04F,cAAgD,SAAhC7iG,EAAKJ,MAAMgH,iBAb9D7F,EAAAE,KAAA,EAcsBjB,EAAKI,cAAc8Y,gBAAgBlZ,EAAKJ,MAAMO,YAAYgG,QAAQuL,EAAOqC,EAAekhC,GAAa,EAAK,MAdhI,UAcRwsD,EAdQ1gG,EAAAK,MAgBNogG,EAAaxhG,EAAKgpG,gBAAgBvH,KAIpBA,GAA0BD,EAAW/+F,QAAWg/F,EAAsBh/F,OApB9E,CAAA1B,EAAAE,KAAA,gBAAAF,EAAAQ,OAAA,UAqBH,GArBG,eAwBN2nG,EAAc1H,EAAW,GACzB2H,EAAa5pG,OAAO0X,OAAOuqF,GAAY79E,MAE7CtZ,OAAOujD,OAASA,IAGH,KADThhC,GAAQu8E,EAAWhwF,UAAU+vF,EAAY/vF,WAAW,SAEtDyT,EAAO,GAGLi2C,EAAM,KACNmlC,EAAQ,MAENt7E,EAAa1sB,EAAKI,cAAc4C,iBAAiBmmG,EAAWpG,WAAW,IACvEqG,EAAiBppG,EAAKI,cAAc4C,iBAAiBkmG,EAAYpuF,UAAU9a,EAAKJ,MAAMO,YAAY8C,UAClGomG,EAAgBrpG,EAAKI,cAAc4C,iBAAiBmmG,EAAWruF,UAAU9a,EAAKJ,MAAMO,YAAY8C,UAGlGuhG,EAAM93E,EAAW1nB,MAAMqkG,GA1CftoG,EAAAE,KAAA,GA4CAjB,EAAKI,cAAc0E,oBAAoB0/F,EAAIxkG,EAAKJ,MAAMoN,cAAchN,EAAKJ,MAAMO,YAAYuR,GA5C3F,eA4CZ8yF,EA5CYzjG,EAAAK,KA8CNqoF,EAAezpF,EAAKJ,MAAMO,YAAYyP,UAAU6L,OAAO,SAAC/R,GAAQ,MAAkB,aAAXA,EAAE4C,OAAuB,GAChGg9F,EAAoB7f,EAAeyf,EAAY/iB,cAAc1qE,OAAO,SAAC/R,GAAQ,OAAOA,EAAEsG,aAAaC,gBAAkBw5E,EAAatjF,QAAQ8J,gBAAiB,GAAK,KAChKs5F,EAAmB9f,EAAe0f,EAAWhjB,cAAc1qE,OAAO,SAAC/R,GAAQ,OAAOA,EAAEsG,aAAaC,gBAAkBw5E,EAAatjF,QAAQ8J,gBAAiB,GAAK,KAErI,OAA3BjQ,EAAKmK,MAAM04F,aAQbhgC,GANAA,EAAM2+B,EAAW9+B,OAAQ,SAAC0iB,EAAIxwB,GAC5B,IAAMx7C,EAAWpZ,EAAKI,cAAc4C,iBAAiB4xD,EAAEx7C,SAAS,IAChE,OAAOpZ,EAAKI,cAAciB,MAAM+jF,GAAK39E,KAAK2R,IAC1C,IAGQnU,IAAIu8F,EAAW/+F,QAErBgnF,IACI+f,EAAuBl5F,GAAcC,MAAMX,UAAUsmC,iBACrDC,EAAYqzD,EAAqBrzD,UAAYqzD,EAAqBrzD,UAAY,OAqBpFszD,GAnBIA,EAAiBjI,EAAW9+B,OAAQ,SAAC0iB,EAAIxwB,GAE3C,IAAMi1C,EAAej1C,EAAEuxB,cAAc9uE,KAAK,SAACqvE,EAAMxyE,GAC/C,OAAOwyE,EAAM12E,aAAaC,gBAAkBw5E,EAAatjF,QAAQ8J,gBAG/D65F,EAAoC,kBAAd3zD,GAA0BA,EAAU1zC,OAAS0zC,EAAUusB,OAAO,SAACmoB,EAAIxe,GAC3F,OAAIw9B,EAAax9B,GACRrsE,EAAKI,cAAciB,MAAMwpF,GAAKpjF,KAAKzH,EAAKI,cAAciB,MAAMwoG,EAAax9B,KAE3ErsE,EAAKI,cAAciB,MAAMwpF,IAChC,GAAK7qF,EAAKI,cAAciB,MAAMwoG,EAAa1zD,IAI7C,OAFA2zD,EAAe9pG,EAAKI,cAAc4C,iBAAiB8mG,EAAa,IAEzD9pG,EAAKI,cAAciB,MAAM+jF,GAAK39E,KAAKqiG,IAC1C,IAG8B7kG,IAAIu8F,EAAW/+F,QAK/CulG,EAAQnlC,EAAI9nD,MAAM0uF,GACdt+F,WAAW68F,GAAO,IACpBA,EAAQ,GAEVA,EAAQA,EAAM73F,QAAQ,IAGxB0yD,EAAMA,EAAI1yD,QAAQ,KAGZm1F,EAAU+D,EAAcpkG,IAAImkG,GAAgBruF,MAAM,GAAG/V,MAAM,KACjE69D,EAAMyiC,EAAQtgG,MAAM,KAAKC,IAAI2nB,GAAMzc,QAAQ,GACvCm5F,GAAqBC,IACjBG,EAAqB1pG,EAAKI,cAAc4C,iBAAiBsmG,EAAkBz4C,MAAM7wD,EAAKJ,MAAMO,YAAY8C,UACxG0mG,EAAoB3pG,EAAKI,cAAc4C,iBAAiBumG,EAAiB14C,MAAM7wD,EAAKJ,MAAMO,YAAY8C,UACtG2mG,EAAcD,EAAkB1kG,IAAIykG,GAAoB3uF,MAAM,GAAG/V,MAAM,KAC7EgjG,EAAQ1C,EAAQvqF,MAAM6uF,GAAa5kG,MAAM,KAAKC,IAAI2nB,GAC9CzhB,WAAW68F,GAAO,IACpBA,EAAQ,GAEVA,EAAQA,EAAM73F,QAAQ,KAKtB83F,EAAa,EACjBzG,EAAW/3F,QAAQ,SAAC+8E,EAAIn6D,GACtB,GAAIA,EAAM,CACR,IAAM09E,EAAUvI,EAAWn1E,EAAM,GAE3BrkB,EAAkBw+E,EAAIL,cAAczjB,OAAO,SAACwD,EAAYG,GAC5D,IAAMzD,EAAa5iE,EAAKI,cAAc4C,iBAAiBqjE,EAAmBzD,WAAW5iE,EAAKJ,MAAMO,YAAY8C,UAC5G,OAAOjD,EAAKI,cAAciB,MAAM6kE,GAAaz+D,KAAKm7D,IAClD,GAEIonC,EAAsBD,EAAQ5jB,cAAczjB,OAAO,SAACwD,EAAYG,GACpE,IAAMzD,EAAa5iE,EAAKI,cAAc4C,iBAAiBqjE,EAAmBzD,WAAW5iE,EAAKJ,MAAMO,YAAY8C,UAC5G,OAAOjD,EAAKI,cAAciB,MAAM6kE,GAAaz+D,KAAKm7D,IAClD,GAEEqnC,GAAgB,EACpBzjB,EAAIL,cAAc18E,QAAS,SAAAC,GACzB,IAAIugG,EAAJ,CAGA,IAAMC,EAAQH,EAAQ5jB,cAAc9uE,KAAM,SAAA6yF,GAAK,OAAKA,EAAMl6F,aAAaC,gBAAkBvG,EAAEsG,aAAaC,gBAClG2yD,EAAa5iE,EAAKI,cAAc4C,iBAAiB0G,EAAEk5D,WAAW5iE,EAAKJ,MAAMO,YAAY8C,UACrFknG,EAAiBnqG,EAAKI,cAAc4C,iBAAiBknG,EAAMtnC,WAAW5iE,EAAKJ,MAAMO,YAAY8C,UAC5EyI,SAASP,WAAWy3D,EAAW39D,IAAI+C,GAAiBhD,MAAM,SACtD0G,SAASP,WAAWg/F,EAAellG,IAAI+kG,GAAqBhlG,MAAM,SAE3FijG,IACAgC,GAAgB,SA5IZlpG,EAAAE,KAAA,GAmJgBjB,EAAKI,cAAcyvE,gBAAgB,KAAK,KAAK,OAnJ7D,eAmJNw4B,EAnJMtnG,EAAAK,QAqJVojG,EAAMA,EAAI/8F,KAAK4gG,IAIjB7D,EAAMxkG,EAAKI,cAAc4I,YAAYmC,WAAWq5F,IAzJpCzjG,EAAAE,KAAA,GA2JcjB,EAAKI,cAAcg4E,iBAAiBp4E,EAAKJ,MAAMO,aA3J7D,SA2JRo4E,EA3JQx3E,EAAAK,QA6JVm3E,EAAgBv4E,EAAKI,cAAc4I,YAAYmC,WAAWotE,KAG5Dv4E,EAAKiN,aAAa,CAChBu3F,MACA3hC,MACAj2C,OACAo7E,QACAxG,aACAyG,aACAI,gBACA9vB,gBACAkpB,0BAzKU,yBAAA1gG,EAAAS,SAAAZ,EAAAjB,WA6KdmgC,kDAAc,SAAAn+B,EAAOsqC,EAAS5oC,GAAhB,OAAA3C,EAAAtB,EAAA0B,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,cAAAa,EAAAb,KAAA,EACNjB,EAAKJ,MAAMysC,iBAAiBJ,EAAS5oC,GAD/B,OAEZrD,EAAKJ,MAAMuiB,YAAY9e,GAFX,wBAAAvB,EAAAN,SAAAG,EAAAhC,mEAKdo+F,eAAiB,SAAAlhG,GACf,IAAIygG,EAAgBt9F,EAAKmK,MAAMmzF,cAClB,SAATzgG,GAAmBygG,EAAct9F,EAAKmK,MAAMkzF,YAC9CC,IACkB,SAATzgG,GAAmBygG,EAAc,GAC1CA,IAGF,IAAMW,EAAW5zF,OAAO4N,OAAP,6BAAA7T,OAA2Ck5F,EAA3C,MACXK,GAAsBxyF,WAAW8yF,EAASntF,WAAWnB,MAAM,KAEjE3P,EAAKiN,aAAa,CAChBqwF,gBACAK,mGA9aEh+F,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,mKAK9CD,KAAKgJ,qBACChJ,KAAKyqG,8JAIXzqG,KAAKyK,oBAAqB,+EAGTQ,wFAAShJ,iCAAS,KAC9BjC,KAAKyK,4DACDzK,KAAK6L,SAASZ,EAAShJ,oCAEzB,6JAGkB,IAAAgH,EAAAjJ,KACnBwoG,EAAgB73F,GAAcC,MAAMukC,SACtCu1D,EAAgB,KAQpB,OAPA9qG,OAAOwH,KAAKohG,GAAe1+F,QAAS,SAAAskC,GACdo6D,EAAcp6D,GAClBqH,kBAAkB7gB,SAAS3rB,EAAKhJ,MAAMgH,oBACpDyjG,EAAgBt8D,KAIbs8D,yCAGMt8D,GAKb,GAJKA,IACHA,EAAUpuC,KAAKwK,MAAM04F,cAGlBvyF,GAAcC,MAAMukC,SAAS/G,GAChC,OAAO,KAGT,IAAM4zD,EAAcpiG,OAAOC,OAAO,GAAG8Q,GAAcC,MAAMukC,SAAS/G,IAElE,GAAI4zD,EAAYxsD,kBAAoBwsD,EAAYxsD,iBAAiBx1C,KAAKC,MAAMgH,kBAAkB,CAC5F,IAAM0jG,EAAmB3I,EAAYxsD,iBAAiBx1C,KAAKC,MAAMgH,kBACjErH,OAAOwH,KAAKujG,GAAkB7gG,QAAS,SAAA8gG,GACrC5I,EAAY4I,GAASD,EAAiBC,KAI1C,OAAO5I,kKAKFhiG,KAAKC,MAAMoN,eAAkBrN,KAAKC,MAAMO,sDACpC,aAGHyK,EAAW,GACAs+B,EAAavpC,KAAKC,MAA3B6a,MAASyuB,OAEXshE,EAAgCjrG,OAAOwH,KAAKpH,KAAKC,MAAM2G,iBAEvD2iC,EAAOuhE,cAA4F,IAA7ED,EAA8BjzF,QAAQ2xB,EAAOuhE,YAAY7oF,eACnFhX,EAASoC,cAAgBk8B,EAAOuhE,YAAY7oF,cAE5ChX,EAASoC,cAAgBrN,KAAKC,MAAMoN,cAAc4U,cAGpDhX,EAASzK,YAAcR,KAAKC,MAAM2G,gBAAgBqE,EAASoC,eAC3DpC,EAASw9F,aAAex6C,IAAOt9C,GAAcC,MAAMkjC,OAAO9zC,KAAKC,MAAMoN,eAAe+G,eAAe,cACnGnJ,EAASi+F,WAAaj7C,MAEtBhjD,EAAS88F,gBAAkB95C,IAAOA,MAASj1C,OAAO,oBAAoB,oBAEtE/N,EAASy/F,cAAgB1qG,KAAK+qG,4BAC9B9/F,EAASi4F,YAAyC,OAA3BljG,KAAKwK,MAAM04F,YAAuBj4F,EAASy/F,cAAgB1qG,KAAKwK,MAAM04F,YAEvFlB,EAAchiG,KAAKgrG,eAAe//F,EAASi4F,aAI7Cj4F,EAASi4F,aAAelB,EAAY1sD,eAChC21D,EAAqBh9C,IAAOA,IAAgC,IAAzB+zC,EAAY1sD,cAAmBt8B,OAAO,oBAAoB,oBAC/F/N,EAAS88F,gBAAgBp5E,QAAQs8E,KACnChgG,EAAS88F,gBAAkBkD,EAC3BhgG,EAASqqC,aAAevpC,SAASd,EAAS88F,gBAAgB7uF,GAAGC,UAAU,MAGpElO,EAASi+F,aAAcj+F,EAASi+F,WAAWv6E,QAAQs8E,KACtDhgG,EAASi+F,WAAa+B,IAI1BhgG,EAASqqC,aAAevpC,SAASd,EAAS88F,gBAAgB7uF,GAAGC,UAAU,KAGvElO,EAAS68F,kBAAoB78F,EAAS88F,gBAAgB9sF,QAAQhC,SAAS,EAAE,SACzEhO,EAASmJ,eAAiBrI,SAASd,EAAS68F,kBAAkB5uF,GAAGC,UAAU,KAEvElO,EAASi4F,aAAelB,EAAY5tF,iBAChC82F,EAAuBj9C,IAAOA,IAAkC,IAA3B+zC,EAAY5tF,gBAAqB4E,OAAO,oBAAoB,oBACnG/N,EAAS68F,kBAAkBmB,SAASiC,KACtCjgG,EAAS68F,kBAAoBoD,EAC7BjgG,EAASmJ,eAAiBrI,SAASd,EAAS68F,kBAAkB5uF,GAAGC,UAAU,MAGzElO,EAASw9F,aAAaQ,SAASiC,KACjCjgG,EAASw9F,aAAeyC,IAI5BjgG,EAASi9F,QAAUj9F,EAASw9F,aAAavvF,GACzCjO,EAASk9F,QAAUl9F,EAASi+F,WAAWhwF,GAEnCjO,IAAajL,KAAKwK,wCACdxK,KAAKsN,aAAarC,mQA2DrBjL,KAAKC,MAAMuiC,4BACdxiC,KAAKC,MAAMkrG,8BACJ,iBAGHjuF,EAAQ7R,SAAS3L,cAAc,UAC/BgR,GAAK,qBACXwM,EAAM9T,KAAO,WACb8T,EAAM4qC,UAAN,8DAIAz8C,SAAS08C,KAAKrjC,YAAYxH,GAE1Bld,KAAKgJ,sBACChJ,KAAKyqG,qBACXzqG,KAAKyhG,cACLzhG,KAAKorG,yJAIL,IAAM1N,EAAc19F,KAAKC,MAAM+K,SAAW,EAAI,EAC9ChL,KAAKsN,aAAa,CAChBowF,mGAIqB3yF,EAAUqC,oFAC3BwO,EAAuB7Q,EAAU6Q,uBAAyB5b,KAAKC,MAAM2b,qBACrEyvF,EAAkBtgG,EAAU9D,mBAAqBjH,KAAKC,MAAMgH,iBAC5DuU,EAAezQ,EAAUsC,gBAAkBrN,KAAKC,MAAMoN,eAAiBuS,KAAKC,UAAU9U,EAAUvK,eAAiBof,KAAKC,UAAU7f,KAAKC,MAAMO,aAC3I8qG,EAAcl+F,EAAUgH,iBAAmBpU,KAAKwK,MAAM4J,gBAAkBhH,EAAUkoC,eAAiBt1C,KAAKwK,MAAM8qC,aAC9Gi2D,EAAiBn+F,EAAU81F,cAAgBljG,KAAKwK,MAAM04F,YACtCn4F,EAAUC,WAAahL,KAAKC,MAAM+K,UAGtDhL,KAAKorG,iBAGHxvF,GAAwBJ,GAAgB6vF,GAAmBE,qCAEvDvrG,KAAKosB,oDACFk/E,GACTtrG,KAAKyhG,qJAmNA,IAAAxzF,EAAAjO,KAGDwrG,EADmBxrG,KAAKS,cAAcG,gBAAgB,CAAC,YAAY,OAAO,aAClCZ,KAAKS,cAAcG,gBAAgB,CAAC,YAAY,OAAO,YAC/Fg6B,EAAU56B,KAAKS,cAAcG,gBAAgB,CAAC,WAAW,YAE/D,IAAKZ,KAAKC,MAAMiH,oBACd,OACE1H,EAAAC,EAAAC,cAACyM,GAAD,CACE7B,UAAW,CACTkxB,SAAS,EACT5sB,WAAW,GAEbvE,YAAa,CACXiH,GAAG,EACHjF,KAAK,QAEP3C,UAAW,CACT0C,UAAU,OACVxC,cAAc,UAEhB3Q,KAAM,sBAKZ,GAAK+G,KAAKC,MAAMoN,cAyOT,CACL,IAAMo+F,EAAkB7rG,OAAOwH,KAAKuJ,GAAcC,MAAMukC,UAAUr5B,OAAQ,SAAAsyB,GACxE,IAAM4zD,EAAc/zF,EAAK+8F,eAAe58D,GACxC,OAAO4zD,EAAY14E,cAAcsL,SAAS3mB,EAAKhO,MAAMoN,gBAAkB20F,EAAYvsD,kBAAkB7gB,SAAS3mB,EAAKhO,MAAMgH,oBACxHiU,IAAK,SAAAkzB,GAEN,MAAO,CACLhgC,MAAMggC,EACNr9B,MAHkB9C,EAAK+8F,eAAe58D,GAGpBr9B,SAIhBixF,EAAchiG,KAAKgrG,eAAehrG,KAAKwK,MAAM04F,aAE/CntD,EAAqB,KACzB,GAAI/1C,KAAKwK,MAAM04F,aAAelB,EAE5BjsD,EAD+B/1C,KAAKS,cAAcG,gBAAgB,CAAC,QAAQ,WAAWZ,KAAKwK,MAAM04F,YAAY,2BAC/DljG,KAAKS,cAAcG,gBAAgB,CAAC,QAAQ,SAASZ,KAAKC,MAAMoN,cAAc,uBAAyB,KAGvJ,IAAMq+F,EAAsBD,EAAgB/zF,KAAM,SAAApJ,GAAC,OAAKA,EAAEF,QAAUH,EAAKzD,MAAM04F,cAE/E,OACE1jG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,EAAG,EACHzP,MAAO,EACPsP,cAAe,UAuCfpK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,CAAC,EAAE,IAEP9R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEiK,cAAe,CAAC,SAAS,QAEzBpK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,CAAC,EAAE,KAEVkF,EAAAC,EAAAC,cAACisG,GAAD,CACExE,gBAAgB,EAChBluG,KAAM,kBACN+R,SAAUhL,KAAKC,MAAM+K,SACrBqT,YAAc,SAAArQ,GAAC,OAAIC,EAAKhO,MAAMmsC,YAAY,UAC1CmG,KAAM,CAACvyC,KAAKS,cAAcG,gBAAgB,CAAC,aAAaZ,KAAKC,MAAMgH,iBAAiB,cAGxFzH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,CAAC,EAAE,GACP5kB,MAAO,CAAC,EAAE,IACVsP,cAAe,CAAC,SAAS,OACzBC,eAAgB,CAAC,SAAS,kBAE1BrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,CAAC,EAAE,KACVsP,cAAe,UAEfpK,EAAAC,EAAAC,cAAC6iB,GAAD,CACElC,WAAY,CACVtW,EAAE,EACF9K,OAAO,CAAC,OAAO,SAEjB0N,KAAM,eACNmT,QAAS2rF,EACTzrF,aAAc0rF,EACdlqF,SAAW,SAAAlT,GAAC,OAAIL,EAAKq7F,eAAeh7F,OAGxC9O,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,CAAC,EAAE,GACP5kB,MAAO,CAAC,EAAE,IACVsP,cAAe,UAEfpK,EAAAC,EAAAC,cAAC6lB,GAAD3lB,OAAAC,OAAA,CACEwgB,WAAY,CACVtW,EAAE,IAEA/J,KAAKC,SAGbT,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,CAAC,EAAE,GACP5kB,MAAO,CAAC,EAAE,KACVsP,cAAe,UAEfpK,EAAAC,EAAAC,cAAC8gB,GAAD,CACE1B,UAAW,CACT/U,EAAE,EACF2E,QAAQ,OACR/E,WAAW,SACX1K,OAAO,CAAC,OAAO,QACf4K,eAAe,UAEjB4Q,eAAe,EACf4D,YAAc,SAAArQ,GAAC,OAAIC,EAAKm7F,mBAAkB,KAE1C5pG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEiP,WAAY,EACZzQ,MAAO,aAGP6B,KAAKwK,MAAMg9F,eAETxnG,KAAK4oG,gBAAgB5oG,KAAKwK,MAAMg9F,gBAChCxnG,KAAKwK,MAAMs9F,mBAAqB9nG,KAAKwK,MAAMu9F,iBAA3C,GAAAtjG,OACGzE,KAAKwK,MAAMs9F,kBAAkB9uF,OAAO,YADvC,OAAAvU,OACwDzE,KAAKwK,MAAMu9F,gBAAgB/uF,OAAO,mBAUtGhZ,KAAKwK,MAAM04F,aAAgBlB,EAAY5tF,eAAerI,UAAS,IAAIgN,MAAOI,UAAU,KAClF3Z,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPqP,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBrK,EAAAC,EAAAC,cAAC8gB,GAAD,CACE1B,UAAW,CACT/U,EAAE,EACFzP,MAAM,CAAC,EAAE,MAGXkF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgK,WAAY,SACZC,cAAe,UAEfpK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE0M,KAAM,QACNlO,MAAO,WACPwO,KAAM,eAERnN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,EACJlgB,SAAU,EACVb,MAAO,WACPkT,UAAW,UAJb,cAMcrR,KAAKwK,MAAM04F,YANzB,kCAYN1jG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,GAEPkF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,CAAC,EAAE,GACP5N,GAAI,CAAC,EAAE,IAEP9R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPqP,WAAY,SACZE,eAAgB,SAChBD,cAAe,CAAC,SAAS,QAEzBpK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,CAAC,EAAE,GACPoa,GAAI,CAAC,EAAE,GACPpxB,MAAO,CAAC,EAAE,KACVsP,cAAe,UAEfpK,EAAAC,EAAAC,cAACksG,GAAD,CACEx9F,MAAOpO,KAAKwK,MAAMq6F,IAClB/qG,MAAO,yBACPiX,MAAQ/Q,KAAKwK,MAAMouE,cAAX,iBAAAn0E,OAA4CzE,KAAKwK,MAAMouE,cAAvD,KAAAn0E,OAAwEzE,KAAKC,MAAMoN,eAAkBrN,KAAKC,MAAMoN,cACxH45F,aAAejnG,KAAKwK,MAAMouE,cAAgB54E,KAAKS,cAAcG,gBAAgB,CAAC,WAAW,gBAAkB,QAG/GpB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,CAAC,EAAE,GACPoa,GAAI,CAAC,EAAE,GACPpxB,MAAO,CAAC,EAAE,KACVsP,cAAe,UAEfpK,EAAAC,EAAAC,cAACksG,GAAD,CACE9xG,MAAO,UACPiX,MAAO,cAEPvR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPqP,WAAY,SACZC,cAAe,CAAC,SAAS,QAEzBpK,EAAAC,EAAAC,cAACge,GAAD,CACEhR,UAAW,KACXG,QAAS,QACTD,SAAU,QACV/C,eAAgB,aAChBvP,MAAO,GAEPkF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE0f,WAAY,EACZzQ,WAAY,CAAC,EAAE,GACfzQ,MAAO,YACPa,SAAU,CAAC,EAAE,IAEZgB,KAAKwK,MAAM04D,IACZ1jE,EAAAC,EAAAC,cAACC,EAAA,EAAKwlC,KAAN,CAAWhnC,MAAO,YAAayQ,WAAY,EAAG5P,SAAU,CAAC,MAAM,QAA/D,UAMVQ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,CAAC,EAAE,GACPoa,GAAI,CAAC,EAAE,GACPpxB,MAAO,CAAC,EAAE,KACVsP,cAAe,UAEfpK,EAAAC,EAAAC,cAACksG,GAAD,CACE9xG,MAAO,8BACPiX,MAAO,cAGL/Q,KAAKwK,MAAM69F,QAAU1mG,MAAM3B,KAAKwK,MAAM69F,OACpC7oG,EAAAC,EAAAC,cAACge,GAAD,CACEhR,UAAW,KACXG,QAAS,QACTD,SAAU,QACV/C,eAAgB,cAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE0f,WAAY,EACZrgB,SAAU,CAAC,EAAE,GACb4P,WAAY,CAAC,EAAE,GACfzQ,MAAO,aAEN6B,KAAKwK,MAAM69F,MACZ7oG,EAAAC,EAAAC,cAACC,EAAA,EAAKwlC,KAAN,CAAWhnC,MAAO,YAAayQ,WAAY,EAAG5P,SAAU,CAAC,MAAM,QAA/D,OAIJQ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE0f,WAAY,EACZrgB,SAAU,CAAC,EAAE,GACb4P,WAAY,CAAC,EAAE,GACfzQ,MAAO,aAEN6B,KAAKwK,MAAM69F,SAMtB7oG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,CAAC,EAAE,GACPoa,GAAI,CAAC,EAAE,GACPpxB,MAAO,CAAC,EAAE,KACVsP,cAAe,UAEfpK,EAAAC,EAAAC,cAACksG,GAAD,CACE76F,MAAO,IACPjX,MAAO,aACPsU,MAAOpO,KAAKwK,MAAM89F,WAAWvyF,gBA+BrCvW,EAAAC,EAAAC,cAAC8gB,GAAD,CACE1mB,MAAO,yBACPylB,YAAaw2B,EACbj3B,UAAW,CACTxN,GAAG,CAAC,EAAE,KAGR9R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM+Q,GAAG,cAAcpW,MAAO,EAAGgX,GAAI,GACnC9R,EAAAC,EAAAC,cAACmsG,GAADjsG,OAAAC,OAAA,CACEZ,OAAS,KACLe,KAAKwK,MAFX,CAGEW,SAAU,cACVH,SAAUhL,KAAKC,MAAM+K,SACrBknC,UAAWlyC,KAAKC,MAAMiyC,UACtB2vD,WAAY7hG,KAAKwK,MAAMq3F,WACvBqB,YAAaljG,KAAKwK,MAAM04F,YACxBpB,sBAAuB9hG,KAAKwK,MAAMs3F,sBAClCmB,UAAWjjG,KAAKwK,MAAM04F,cAAgBljG,KAAKwK,MAAMkgG,cAAgB,WAAa,aAKpFlrG,EAAAC,EAAAC,cAAC8gB,GAAD,CACE1B,UAAW,CACTqK,GAAG,EACH7X,GAAG,CAAC,EAAE,KAGR9R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEiK,cAAe,CAAC,SAAS,OACzBC,eAAgB,iBAGd7J,KAAKwK,MAAM04F,cAAgBljG,KAAKwK,MAAMkgG,eACtClrG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+1B,GAAI,EACJp7B,MAAO,CAAC,EAAE,EAAE,GACZoW,GAAI,mBACJ9G,cAAe,SACfD,WAAY,aACZE,eAAgB,cAEhBrK,EAAAC,EAAAC,cAAC4e,GAAD1e,OAAAC,OAAA,CACEZ,OAAQ,KACJe,KAAKC,MAFX,CAGEkL,SAAU,sBAEZ3L,EAAAC,EAAAC,cAACosG,GACK9rG,KAAKC,QAIfT,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,CAAC,EAAE,GACPZ,GAAI,YACJyoB,GAAI,CAAC,EAAEn5B,KAAKwK,MAAM04F,cAAgBljG,KAAKwK,MAAMkgG,cAAgB,EAAI,GACjEpwG,MAAO,CAAC,EAAG0F,KAAKwK,MAAM04F,cAAgBljG,KAAKwK,MAAMkgG,cAAgB,EAAE,EAAI,IAEvElrG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMgK,WAAY,aAAcE,eAAgB,aAAcD,cAAe,SAAUtP,MAAO,GAC5FkF,EAAAC,EAAAC,cAACC,EAAA,EAAQyf,GAAT,CACE9N,GAAI,EACJhF,GAAI,EACJ4S,GAAI,CAAC,EAAE,GACPtQ,WAAY,EACZ5P,SAAU,CAAC,EAAE,GACbqS,UAAW,OACXlT,MAAO,YACPkhB,WAAY,WARd,yBAYA7f,EAAAC,EAAAC,cAACmsG,GAADjsG,OAAAC,OAAA,CACEZ,OAAQ,KACJe,KAAKwK,MAFX,CAGEy4F,UAAW,MACX93F,SAAU,YACVH,SAAUhL,KAAKC,MAAM+K,SACrBknC,UAAWlyC,KAAKC,MAAMiyC,UACtB2vD,WAAY7hG,KAAKwK,MAAMq3F,WACvBqB,YAAaljG,KAAKwK,MAAM04F,YACxBpB,sBAAuB9hG,KAAKwK,MAAMs3F,6BAO5CtiG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwR,SAAU,YAEV3R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPoW,GAAI,qBACJ7G,eAAgB,YAEhBrK,EAAAC,EAAAC,cAACogG,GAAD,CACEj6E,YAAa,CACX1D,GAAG,GAELya,SAAU,YACVxkC,SAAuC,IAA7B4H,KAAKwK,MAAMmzF,cACrBt/E,YAAc,SAAArQ,GAAC,OAAIC,EAAKmwF,eAAe,WAEzC5+F,EAAAC,EAAAC,cAACogG,GAAD,CACEljE,SAAU,eACVve,YAAc,SAAArQ,GAAC,OAAIC,EAAKmwF,eAAe,SACvChmG,SAAU4H,KAAKwK,MAAMmzF,gBAAkB39F,KAAKwK,MAAMkzF,eAGtDl+F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,EACJjgB,OAAQ,QACRkS,SAAU,WACVT,GAAI,kBACJpW,MAAO,CAAC,OAAO,QACfuP,eAAgB,aAChBmG,KAAMhQ,KAAKwK,MAAMwzF,mBACjB9gF,MAAO,CACLmW,WAAW,0BAGb7zB,EAAAC,EAAAC,cAAC8gB,GAAD,CACE1B,UAAW,CACTqD,GAAG,EACHljB,OAAO,cACPie,MAAMld,KAAKC,MAAM+K,SAAW,CAAC1Q,MAAM,QAAU,CAACA,MAAM,UAGtDkF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPoW,GAAG,aAEHlR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,EACJhX,MAAO,EACPsP,cAAe,SACfD,WAAY,aACZE,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAQyf,GAAT,CACE9S,GAAI,EACJ4S,GAAI,EACJ5N,GAAI,EACJ1C,WAAY,EACZ5P,SAAU,CAAC,EAAE,GACbqS,UAAW,OACXlT,MAAO,YACPkhB,WAAY,WARd,0BAYA7f,EAAAC,EAAAC,cAACmsG,GAADjsG,OAAAC,OAAA,CACEZ,OAAQ,KACJe,KAAKwK,MAFX,CAGEy4F,UAAW,MACX93F,SAAU,YACVH,SAAUhL,KAAKC,MAAM+K,SACrBknC,UAAWlyC,KAAKC,MAAMiyC,UACtB2vD,WAAY7hG,KAAKwK,MAAMq3F,WACvBqB,YAAaljG,KAAKwK,MAAM04F,YACxBpB,sBAAuB9hG,KAAKwK,MAAMs3F,4BAK1CtiG,EAAAC,EAAAC,cAAC8gB,GAAD,CACE1B,UAAW,CACTqD,GAAG,EACHljB,OAAO,cACPie,MAAMld,KAAKC,MAAM+K,SAAW,CAAC1Q,MAAM,QAAU,CAACA,MAAM,UAGtDkF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM+Q,GAAG,YAAYpW,MAAO,GAC1BkF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,EACJhX,MAAO,EACPsP,cAAe,SACfD,WAAY,aACZE,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAQyf,GAAT,CACE9N,GAAI,EACJhF,GAAI,EACJ4S,GAAI,EACJtQ,WAAY,EACZ5P,SAAU,CAAC,EAAE,GACbqS,UAAW,OACXlT,MAAO,YACPkhB,WAAY,WARd,QAYA7f,EAAAC,EAAAC,cAACmsG,GAADjsG,OAAAC,OAAA,CACEZ,OAAQ,KACJe,KAAKwK,MAFX,CAGEy4F,UAAW,MACX93F,SAAU,YACVH,SAAUhL,KAAKC,MAAM+K,SACrBknC,UAAWlyC,KAAKC,MAAMiyC,UACtB2vD,WAAY7hG,KAAKwK,MAAMq3F,WACvBqB,YAAaljG,KAAKwK,MAAM04F,YACxBpB,sBAAuB9hG,KAAKwK,MAAMs3F,4BAK1CtiG,EAAAC,EAAAC,cAAC8gB,GAAD,CACE1B,UAAW,CACTqD,GAAG,EACHljB,OAAO,cACPie,MAAMld,KAAKC,MAAM+K,SAAW,CAAC1Q,MAAM,QAAU,CAACA,MAAM,SAEtDR,MAAO,aACPylB,YAAa,iGACbJ,iBAAkB,CAChB7S,GAAG,GACH4S,GAAG,KAGL1f,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM+Q,GAAG,cAAcpW,MAAO,GAC5BkF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,EACJhX,MAAO,EACPsP,cAAe,SACfD,WAAY,aACZE,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACmsG,GAADjsG,OAAAC,OAAA,CACEZ,OAAQ,KACJe,KAAKwK,MAFX,CAGEy4F,UAAW,QACX93F,SAAU,cACVH,SAAUhL,KAAKC,MAAM+K,SACrBknC,UAAWlyC,KAAKC,MAAMiyC,UACtB2vD,WAAY7hG,KAAKwK,MAAMq3F,WACvBqB,YAAaljG,KAAKwK,MAAM04F,YACxBpB,sBAAuB9hG,KAAKwK,MAAMs3F,4BAK1CtiG,EAAAC,EAAAC,cAAC8gB,GAAD,CACE1B,UAAW,CACTqD,GAAG,EACHljB,OAAO,cACPie,MAAMld,KAAKC,MAAM+K,SAAW,CAAC1Q,MAAM,QAAU,CAACA,MAAM,UAGtDkF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM+Q,GAAG,YAAYpW,MAAO,GAC1BkF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,EACJhX,MAAO,EACPsP,cAAe,SACfD,WAAY,aACZE,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAQyf,GAAT,CACE9N,GAAI,EACJhF,GAAI,EACJ4S,GAAI,EACJtQ,WAAY,EACZ5P,SAAU,CAAC,EAAE,GACbqS,UAAW,OACXlT,MAAO,YACPkhB,WAAY,WARd,UAYA7f,EAAAC,EAAAC,cAACmsG,GAADjsG,OAAAC,OAAA,CACEZ,OAAQ,KACJe,KAAKwK,MAFX,CAGEy4F,UAAW,MACX93F,SAAU,YACVH,SAAUhL,KAAKC,MAAM+K,SACrBknC,UAAWlyC,KAAKC,MAAMiyC,UACtB2vD,WAAY7hG,KAAKwK,MAAMq3F,WACvBqB,YAAaljG,KAAKwK,MAAM04F,YACxBpB,sBAAuB9hG,KAAKwK,MAAMs3F,+BAWpDtiG,EAAAC,EAAAC,cAACqsG,GAAD,CACE7D,QAASloG,KAAKwK,MAAM09F,QACpBC,QAASnoG,KAAKwK,MAAM29F,QACpBN,aAAc7nG,KAAK+oG,aACnBxnE,OAAQvhC,KAAKwK,MAAMm+F,qBACnB9pE,WAAY,SAAA7wB,GAAC,OAAIC,EAAKm7F,mBAAkB,IACxCr9E,UAAW/rB,KAAKwK,MAAMs9F,kBAAoB9nG,KAAKwK,MAAMs9F,kBAAkB5uF,GAAK,KAC5EwuF,QAAS1nG,KAAKwK,MAAMu9F,gBAAkB/nG,KAAKwK,MAAMu9F,gBAAgB7uF,GAAK,QAr1B5E,IAAMo7B,EAAat0C,KAAKS,cAAcG,gBAAgB,CAAC,eACjD0oB,EAAgB,GAChB0iF,EAAchsG,KAAKS,cAAcG,gBAAgB,CAAC,QAAQ,WAC1DqrG,EAAiBjsG,KAAKS,cAAcG,gBAAgB,CAAC,QAAQ,cAOnE,OANAhB,OAAOwH,KAAK4kG,GAAaliG,QAAQ,SAAApG,GACbsoG,EAAYtoG,GAChBc,SACZ8kB,EAAc7Y,KAAK/M,KAIrBlE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,EACJhX,MAAO,EACPsP,cAAe,UAEfpK,EAAAC,EAAAC,cAACsgG,GACKhgG,KAAKC,OAGTL,OAAOwH,KAAKktC,GAAYp5B,IAAI,SAAAoxB,GAC1B,IAAMsgC,EAAet4B,EAAWhI,GAC1B1lC,EAAkBqH,EAAKhO,MAAMiH,oBAAoBolC,GACvD,QAAK1lC,GAIHpH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,EACJhX,MAAO,EACPsP,cAAe,SACfC,eAAgB,SAChB0T,IAAG,sBAAA9Y,OAAwB6nC,IAE3B9sC,EAAAC,EAAAC,cAACq7B,GAAD,CACE7b,GAAI,EACJ5N,GAAI,CAAC,EAAE,IAEP9R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEiK,cAAe,MACfD,WAAY,WACZE,eAAgB,UAEf+iE,EAAa9yE,MAEZ8yE,EAAan4B,cACXj1C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2M,GAAI,EACJsC,WAAY,EACZ5P,SAAU,CAAC,EAAE,GACbb,MAAO,aAENyuE,EAAan4B,gBAKxBj1C,EAAAC,EAAAC,cAAC27B,GAADz7B,OAAAC,OAAA,CACEypB,cAAeA,EACfjL,YAAa,SAACpe,GAAD,OAAWgO,EAAKkyB,YAAYmM,EAASrsC,EAAMyD,QACxDykB,KAAM,CACJ,CACEruB,MAAM,WACNmG,MAAM,CACJ3F,MAAM,CAAC,IAAK,MAEdmuB,OAAO,CACL,CACE9b,KAAK,OACL1M,MAAM,CACJkiB,GAAG,EACHljB,OAAO,CAAC,QAAQ,WAGpB,CACE0N,KAAK,eAIX,CACE7S,MAAM,OACNmG,MAAM,CACJ3F,MAAM,CAAC,IAAK,MAEdmuB,OAAO,CACL,CACE9b,KAAK,kBACL4b,QAAO,EACPC,YAAY,CACVluB,MAAM,IAER4iB,MAAM,CACJyL,SAAS,WAEX1c,YAAW,GAEb,CACEU,KAAK,OACL1M,MAAM,CACJqM,GAAG,GAELkc,YAAY,CACVluB,MAAM,CAAC,EAAE,QAKjB,CACER,MAAM,MACNkvB,KAAKwiF,EAAoB5wE,EAAU,KACnC36B,MAAM,CACJ3F,MAAO,CAAC,IAAK,MAEfkuB,YAAY,CACV5e,cAAc,SACdD,WAAW,cAEb8e,OAAO,CACL,CACE9b,KAAK,MACLqL,aAAY,GAEd,CACErL,KAAK,mBACL1M,MAAM,CACJqD,SAAS2K,EAAKhO,MAAM+K,SAAW,EAAI,EACnChM,SAASiP,EAAKhO,MAAM+K,SAAW,MAAQ,MAK/C,CACElR,MAAM,aACNkvB,KAAK/a,EAAKxN,cAAcG,gBAAgB,CAAC,WAAW,cACpD2nB,QAAO,EACPtoB,MAAM,CACJ3F,MAAM,CAAC,IAAK,MAEdmuB,OAAO,CACL,CACE9b,KAAK,WAIX,CACE7S,MAAM,gBACNyuB,QAAO,EACPtoB,MAAM,CACJ3F,MAAO,KAETkuB,YAAY,CACVluB,MAAM,EACNoxB,GAAG,CAAC,EAAE,IAERjD,OAAO,CACL,CACE9b,KAAK,cAIX,CACE7S,MAAM,GACNmG,MAAM,CACJ3F,MAAM,CAAC,IAAK,MAEdkuB,YAAY,CACVluB,MAAM,GAERmuB,OAAO,CACL,CACE9b,KAAK,SACLoE,MAAM9C,EAAKhO,MAAM+K,SAAW,OAAS,aACrC/K,MAAM,CACJ3F,MAAM,EACN0E,SAAS,EACT4P,WAAW,EACX3P,OAAO,OACPK,aAAa,EACbke,UAAU,KACVkI,UAAU,SACVrZ,KAAM4B,EAAKhO,MAAM+K,SAAW,QAAU,SACtCqT,YAAY,SAACpe,GAAD,OAAWgO,EAAKkyB,YAAYmM,EAASrsC,EAAMyD,cAM7DuK,EAAKhO,MAlIX,CAmIEgH,iBAAkBqlC,EAClB1lC,gBAAiBA,MAGhBqH,EAAKhO,MAAM+K,UACVxL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,EACJvV,WAAY,SACZC,cAAe,MACfC,eAAgB,YAGdjK,OAAO0X,OAAO20F,GAAgBnwF,OAAQ,SAAA/R,GAAC,OAAKA,EAAEhN,SAAUme,IAAK,SAACnR,EAAE2iB,GAAH,OAC3DltB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwiB,GAAI,EACJxY,WAAY,SACZC,cAAe,MACf2T,IAAG,UAAA9Y,OAAYioB,IAEfltB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwiB,GAAI,EACJ7nB,MAAO,OACP2E,OAAQ,OACRK,aAAc,MACdlB,gBAAe,OAAAqG,OAASsF,EAAE5L,MAAMw3C,IAAI7kC,KAAK,KAA1B,OAGjBtR,EAAAC,EAAAC,cAACC,EAAA,EAAKwlC,KAAN,CACEnmC,SAAU,EACVb,MAAO,YAEN4L,EAAEgH,sBAltBf5Q,aC2HL+rG,8MAxIb1hG,MAAQ,KAKR/J,cAAgB,gFAGVT,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,4JAK9CD,KAAKgJ,iMAGkB+B,EAAUqC,mEACjCpN,KAAKgJ,kJAGE,IAAAC,EAAAjJ,KACDmsG,EAAensG,KAAKC,MAAMmsG,oBAAsBpsG,KAAKC,MAAMmsG,mBAAmB5sD,aAAex/C,KAAKC,MAAMmsG,mBAAmB5sD,aAAe,KAChJ,OACEhgD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPsP,cAAe,UAGb5J,KAAKC,MAAMmsG,mBACT5sG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,GAEPkF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,GAEPkF,EAAAC,EAAAC,cAACisG,GAAD,CACExE,gBAAgB,EAChBn8F,SAAUhL,KAAKC,MAAM+K,SACrBunC,KAAM,CAACvyC,KAAKC,MAAMmsG,mBAAmBr7F,OACrC9X,KAAM+G,KAAKC,MAAM85F,gBAAgBhpF,MAAMkR,cACvC5D,YAAc,SAAArQ,GAAC,OAAI/E,EAAKhJ,MAAMmsC,YAAYnjC,EAAKhJ,MAAM85F,gBAAgB3uD,WAGzE5rC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE6lB,GAAI,CAAC,EAAE,GACP5b,cAAe,SACfC,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACq7B,GAAD,CACEzpB,GAAI,GAEHtR,KAAKC,MAAMmsG,mBAAmBr7F,OAEjCvR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE0R,UAAW,UAEVrR,KAAKC,MAAMmsG,mBAAmBpjF,OAGnCxpB,EAAAC,EAAAC,cAACysG,EAADvsG,OAAAC,OAAA,GACMG,KAAKC,MACLD,KAAKC,MAAMmsG,mBAAmBrqD,YAFpC,CAGEh9B,UAAW/kB,KAAKC,MAAMmsG,mBAAmBnsG,UAI7CT,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE6lB,GAAI,CAAC,EAAE,GACP5b,cAAe,SACfC,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACq7B,GAAD,CACEzpB,GAAI,GADN,SAKA9R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACP4iB,MAAO,CACL+jB,SAAS,SAIXjhC,KAAKC,MAAM85F,gBAAgBsS,QAAQnxF,IAAK,SAACoxF,EAAKC,GAAN,OACtC/sG,EAAAC,EAAAC,cAAC8gB,GAAD,CACE/F,eAAe,EACf8C,IAAG,QAAA9Y,OAAU8nG,GACbztF,UAAW,CACT/U,EAAE,CAAC,EAAE,GACLuH,GAAG,CAAC,EAAE,GACN6Q,GAAG,CAAC,EAAE,MACNjF,MAAM,CACJoF,KAAMrZ,EAAKhJ,MAAM+K,SAAW,WAAa,WAE3CrB,WAAW,SACXC,cAAc,SACdC,eAAe,UAEjBwU,YAAc,SAAArQ,GAAC,OAAI/E,EAAKhJ,MAAMmsC,YAAYnjC,EAAKhJ,MAAM85F,gBAAgB3uD,MAAM,IAAIkhE,EAAKlhE,SAEpF5rC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,CAAC,EAAE,GACbqS,UAAW,UAEVi7F,EAAKv7F,OAERvR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEkK,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE6lB,GAAI,CAAC,EAAE,GACPnZ,KAAM,MACNM,KAAM2/F,EAAKp7F,QAGf1R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,CAAC,EAAE,GACbqS,UAAW,UAEVi7F,EAAKtjF,mBA5HR7oB,aCwnBLqsG,8MApnBbhiG,MAAQ,CACNqJ,cAAc,KACd0lB,iBAAiB,GACjBkzE,kBAAkB,KAClBhyE,qBAAqB,KACrBouD,sBAAsB,KACtBruD,sBAAsB,KACtBkyE,yBAAyB,KACzBC,0BAA0B,KAC1BC,6BAA6B,KAC7BlyE,6BAA6B,QAI/Bj6B,cAAgB,OAChBwsD,aAAe,gFAGTjtD,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,OAG9CD,KAAKitD,aAAejtD,KAAKS,cAAc2vE,uKAIvCpwE,KAAKgJ,8SAKC6jE,EAA0B,IACR7sE,KAAKC,MAAMoN,eAAiBrN,KAAKC,MAAMO,qBAQrDmE,QAAQC,IAAI,CACpB5E,KAAKS,cAAcwX,iBAAiBjY,KAAKC,MAAMoN,cAAcrN,KAAKC,MAAMO,aACxER,KAAKitD,aAAavmD,oBAAoB1G,KAAKC,MAAMuB,QAAQqrE,GAAwB,GACjF7sE,KAAKS,cAAcwpB,yBAAyBjqB,KAAKC,MAAMuB,QAAQqrE,EAAwB,MACvF7sE,KAAKS,cAAcoV,eAAe,SAAS7V,KAAKC,MAAMoN,cAAcrN,KAAKC,MAAMO,YAAYR,KAAKC,MAAMuB,SACtGxB,KAAKS,cAAcoV,eAAe,mBAAmB7V,KAAKC,MAAMoN,cAAcrN,KAAKC,MAAMO,YAAYR,KAAKC,MAAMuB,8CAVhHqS,OACA84F,OACAlyE,OACAV,OACA9M,OASIuN,EAAwBC,EAAuB76B,OAAO0X,OAAOmjB,GAAsBsoC,OAAQ,SAAC8pC,EAAW1iF,GAC3G,OAAO0iF,EAAW/kG,KAAKmB,EAAKxI,cAAciB,MAAMyoB,KAChDnqB,KAAKS,cAAciB,MAAM,IAAM,KAE3Bg5B,EAA+BD,EAAuB76B,OAAOwH,KAAKqzB,GAAsBvf,IAAK,SAAA+C,GACjG,IAAM/c,EAAUu5B,EAAqBxc,GACrC,OAAI/c,EAAQwV,GAAG,GACb,IAAAjS,OAAWvD,EAAQsP,QAAQ,GAA3B,KAAA/L,OAAiCwZ,GAE1B,OAERnC,OAAO,SAAAxN,GAAC,OAAW,OAANA,IAAe,KAIzBm+F,EAAoB54F,EAAgBjU,OAAO0X,OAAOzD,GAAekvD,OAAQ,SAAC+pC,EAAOj8D,GACrF,OAAOi8D,EAAOhlG,KAAKmB,EAAKxI,cAAciB,MAAMmvC,KAC5C7wC,KAAKS,cAAciB,MAAM,IAAM,KAE3BgrG,EAA2B74F,EAAgBjU,OAAOwH,KAAKyM,GAAeqH,IAAK,SAAA+C,GAC/E,IAAMilD,EAAMrvD,EAAcoK,GAC1B,OAAIilD,EAAIxsD,GAAG,GACT,GAAAjS,OAAUwZ,EAAV,MAAAxZ,OAAuBy+D,EAAI1yD,QAAQ,GAAnC,KAEK,OACNsL,OAAO,SAAAxN,GAAC,OAAW,OAANA,IAAe,KAazBirB,EAAmB,CACvB,CACE7vB,UAAU,CACRpP,MAAM,CAAC,EAAE,MAEX2F,MAAM,CACJnG,MAAM,UACNoG,SACEV,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPqP,WAAY,SACZ1K,OAAQ,CAAC,OAAO,QAChB2K,cAAe,SACfC,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE0f,WAAY,EACZzQ,WAAY,CAAC,EAAE,GACfzQ,MAAO,YACP0Q,WAAY,UACZ7P,SAAU,CAAC,QAAQ,SACnB4sB,wBAAyB,CAAEC,OAASkO,EAASA,EAAOvpB,QAAQ,GAAG,IAAM,UAM/E,CACE9G,UAAU,CACRpP,MAAM,CAAC,EAAE,MAEX2F,MAAM,CACJnG,MAAM,qBACNoG,SACEV,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPoW,GAAI,kBACJzR,OAAQ,CAAC,OAAO,QAChB2K,cAAe,UAEfpK,EAAAC,EAAAC,cAACwiB,GAADtiB,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEEgM,YAAY,EACZ+F,UAAW,CACTrF,KAAK,mBAEPxB,SAAU,kBACVzH,MAAO1D,KAAKC,MAAMoN,cAClB7M,YAAaR,KAAKC,MAAMO,gBAI9BuQ,MAAM,KAGV,CACErH,UAAU,CACRpP,MAAM,CAAC,EAAE,MAEX2F,MAAM,CACJnG,MAAM,2BACNoG,SACEV,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPqP,WAAY,SACZ1K,OAAQ,CAAC,OAAO,QAChB2K,cAAe,SACfC,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE0f,WAAY,EACZzQ,WAAY,CAAC,EAAE,GACfzQ,MAAO,YACP0Q,WAAY,UACZ7P,SAAU,CAAC,QAAQ,SACnB4sB,wBAAyB,CAAEC,OAASoB,EAAOlhB,SAASkhB,GAAQ,WAQxEjtB,KAAK6L,SAAS,CACZgI,gBACA0lB,mBACAkzE,oBACAhyE,uBACAD,wBACAkyE,2BACAC,4BACAjyE,uNAIqB3vB,EAAUqC,mEACjCpN,KAAKgJ,kJAKL,OACExJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPsP,cAAe,UAGb5J,KAAKwK,MAAM+uB,iBAAiBz2B,OAAO,GACjCtD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPgX,GAAI,CAAC,EAAE,GACP4N,GAAI,CAAC,EAAE,GACPvV,WAAY,SACZC,cAAe,CAAC,SAAS,OACzBC,eAAgB,iBAGd7J,KAAKwK,MAAM+uB,iBAAiBre,IAAI,SAAC5M,EAAE6B,GAAH,OAC9B3Q,EAAAC,EAAAC,cAACC,EAAA,EAADC,OAAAC,OAAA,GACMyO,EAAE5E,UADR,CAEEE,cAAe,SACf2T,IAAG,mBAAA9Y,OAAqB0L,KAExB3Q,EAAAC,EAAAC,cAAC8gB,GAAD,CACE1B,UAAW,CACTsC,GAAG,CAAC,EAAE,GACN9P,GAAG,CAAC,EAAE,KAGR9R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPqP,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGdyE,EAAErO,MAAMC,SAAWoO,EAAErO,MAAMC,SACzBV,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE0f,WAAY,EACZzQ,WAAY,CAAC,EAAE,GACfzQ,MAAO,YACP0Q,WAAY,UACZ7P,SAAU,CAAC,EAAE,SACb4sB,wBAAyB,CAAEC,OAAQvd,EAAErO,MAAMmO,SAKjD5O,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,EACJtQ,WAAY,EACZ5P,SAAU,CAAC,EAAE,GACbb,MAAO,YAENmQ,EAAErO,MAAMnG,aAS3B0F,EAAAC,EAAAC,cAAC8gB,GAAD,CACE1B,UAAW,CACTqC,GAAG,EACHC,GAAG,IAGL5hB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPgS,GAAI,CAAC,EAAE,GACPoE,GAAI,kBAEJlR,EAAAC,EAAAC,cAACy7B,GAADv7B,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEE2L,YAAa,IACbT,SAAU,iBACVqjB,WAAYxuB,KAAKC,MAAMoN,cACvBic,cAAe,CAACtpB,KAAKC,MAAMoN,eAC3BmH,iBAAkBxU,KAAKS,cAAc6Y,oBAAoB,MAAM,OAGnE9Z,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPsP,cAAe,CAAC,SAAS,QAEzBpK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,CAAC,EAAE,GACPhX,MAAO,CAAC,EAAE,EAAE,GACZqP,WAAY,SACZC,cAAe,SACfC,eAAgB,cAEhBrK,EAAAC,EAAAC,cAACq7B,GAAD,CACEzpB,GAAI,EACJtS,SAAU,CAAC,EAAE,GACb2oB,UAAWC,IAAQqO,IAHrB,aAOAz2B,EAAAC,EAAAC,cAACwiB,GAADtiB,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEEyD,MAAO1D,KAAKC,MAAMoN,cAClB2E,UAAW,CACTrF,KAAK,aACL1M,MAAM,CACJqD,SAAS,EACTkG,aAAa,EACboF,WAAW,IACX5P,SAAS,CAAC,QAAQ,SAClBb,MAAM5E,EAAMR,OAAOoB,QACnBuP,UAAU,CACRG,eAAe,gBAMzBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,CAAC,EAAE,GACPhX,MAAO,CAAC,EAAE,EAAE,GACZqP,WAAY,SACZC,cAAe,SACfC,eAAgB,cAEhBrK,EAAAC,EAAAC,cAACq7B,GAAD,CACEzpB,GAAI,EACJtS,SAAU,CAAC,EAAE,GACb2oB,UAAWC,IAAQqO,IAHrB,cAOAz2B,EAAAC,EAAAC,cAACwiB,GAADtiB,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEEyD,MAAO1D,KAAKC,MAAMoN,cAClB2E,UAAW,CACTrF,KAAK,2BACL1M,MAAM,CACJqD,SAAS,EACTkG,aAAa,EACb0T,MAAM,CACJtO,WAAW,IACXzQ,MAAM5E,EAAMR,OAAOoB,QACnB6E,SAAUgB,KAAKC,MAAM+K,SAAW,QAAU,SAE5CtB,UAAU,CACRG,eAAe,eAKvBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACP4kB,GAAI,QAEJ1f,EAAAC,EAAAC,cAACwiB,GAADtiB,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEEyD,MAAO1D,KAAKC,MAAMoN,cAClB2E,UAAW,CACTrF,KAAK,eACL1M,MAAM,CACJjB,SAAS,EACT4P,WAAW,EACXzQ,MAAM,WACNuL,UAAU,CACRG,eAAe,iBAO3BrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,CAAC,EAAE,GACPhX,MAAO,CAAC,EAAE,EAAE,GACZqP,WAAY,SACZC,cAAe,SACfC,eAAgB,cAEhBrK,EAAAC,EAAAC,cAACq7B,GAAD,CACEzpB,GAAI,EACJtS,SAAU,CAAC,EAAE,GACb2oB,UAAWC,IAAQqO,IAHrB,YAOAz2B,EAAAC,EAAAC,cAACwiB,GAADtiB,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEEyD,MAAO1D,KAAKC,MAAMoN,cAClB2E,UAAW,CACTrF,KAAK,kBACL1M,MAAM,CACJqD,SAAS,EACTkG,aAAa,EACb0T,MAAM,CACJtO,WAAW,IACX5P,SAASgB,KAAKC,MAAM+K,SAAW,QAAU,QACzC7M,MAAM5E,EAAMR,OAAOoB,SAErBuP,UAAU,CACRG,eAAe,eAMrB7J,KAAKwK,MAAMkwB,8BAAgC16B,KAAKwK,MAAMkwB,6BAA6B53B,OAAO,GACxFtD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPqP,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGd7J,KAAKwK,MAAMkwB,6BAA6Bxf,IAAI,SAACiP,EAAgB7M,GAAjB,OAC1C9d,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACVqgB,WAAY,EACZzQ,WAAY,EACZzQ,MAAO,WACPkT,UAAW,SACX6N,GAAI5B,EAAgB,EAAI,EACxBC,IAAG,YAAA9Y,OAAc6Y,IAEhB6M,OAqCf3qB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,CAAC,EAAE,GACPhX,MAAO,CAAC,EAAE,EAAE,GACZqP,WAAY,SACZC,cAAe,SACfC,eAAgB,cAEhBrK,EAAAC,EAAAC,cAACq7B,GAAD,CACEzpB,GAAI,EACJtS,SAAU,CAAC,EAAE,GACb2oB,UAAWC,IAAQqO,IAHrB,QAOAz2B,EAAAC,EAAAC,cAACwiB,GAADtiB,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEEyD,MAAO1D,KAAKC,MAAMoN,cAClB2E,UAAW,CACTrF,KAAK,cACL1M,MAAM,CACJqD,SAAS,EACTkG,aAAa,EACb0T,MAAM,CACJtO,WAAW,IACX5P,SAASgB,KAAKC,MAAM+K,SAAW,QAAU,QACzC7M,MAAM5E,EAAMR,OAAOoB,SAErBuP,UAAU,CACRG,eAAe,gBAMzBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,CAAC,EAAE,GACPhX,MAAO,CAAC,EAAE,EAAE,GACZqP,WAAY,SACZC,cAAe,SACfC,eAAgB,cAEhBrK,EAAAC,EAAAC,cAACq7B,GAAD,CACEzpB,GAAI,EACJtS,SAAU,CAAC,EAAE,GACb2oB,UAAWC,IAAQqO,IAHrB,eAOAz2B,EAAAC,EAAAC,cAACwiB,GAADtiB,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEEyD,MAAO1D,KAAKC,MAAMoN,cAClB2E,UAAW,CACTrF,KAAK,MACL1M,MAAM,CACJqD,SAAS,EACTsL,WAAW,IACX5P,SAAS,CAAC,QAAQ,SAClBb,MAAM5E,EAAMR,OAAOoB,QACnBuP,UAAU,CACRG,eAAe,eAMrB7J,KAAKwK,MAAMmiG,2BACTntG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPqP,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,EACJlgB,SAAU,EACVqgB,WAAY,EACZzQ,WAAY,EACZzQ,MAAO,WACPkT,UAAW,UAEVrR,KAAKwK,MAAMmiG,0BAA0Bn8F,QAAQ,GARhD,IAQqDxQ,KAAKitD,aAAa1sD,UARvE,IAQmFP,KAAKitD,aAAazsD,YAAYyH,yBA4DzHzI,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,CAAC,EAAE,GACPhX,MAAO,CAAC,EAAE,EAAE,GACZqP,WAAY,SACZC,cAAe,SACfC,eAAgB,cAEhBrK,EAAAC,EAAAC,cAACq7B,GAAD,CACEzpB,GAAI,EACJtS,SAAU,CAAC,EAAE,GACb2oB,UAAWC,IAAQqO,IAHrB,cAOAz2B,EAAAC,EAAAC,cAACwiB,GAADtiB,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEEyD,MAAO1D,KAAKC,MAAMoN,cAClB2E,UAAW,CACTrF,KAAK,QACL1M,MAAM,CACJqD,SAAS,EACTsL,WAAW,IACX5P,SAAS,CAAC,QAAQ,SAClBb,MAAM5E,EAAMR,OAAOoB,QACnBuP,UAAU,CACRG,eAAe,0BAzmBT1J,aC0Db4sG,8MA1DbtsG,cAAgB,gFAGVT,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,4JAK9CD,KAAKgJ,iMAGkB+B,EAAUqC,mEACjCpN,KAAKgJ,kJAIL,OACExJ,EAAAC,EAAAC,cAAC8gB,GAAD,CACE1B,UAAW,CACT/U,EAAE,EACFmV,GAAG,IAGL1f,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgK,WAAY,SACZC,cAAe,UAEfpK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE0M,KAAM,QACNM,KAAM,QACNxO,MAAO,aAETqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,EACJlgB,SAAU,EACVb,MAAO,WACPkT,UAAW,UAJb,uDAQA7R,EAAAC,EAAAC,cAACmsC,GAAD,CACEhmB,YAAa,CACX3G,GAAG,EACH5kB,MAAM,CAAC,EAAE,KAEX+jB,YAAare,KAAKC,MAAM6sC,2BAL1B,oBA9Ce3sC,aCyuBV6sG,8MAjuBbxiG,MAAQ,CACNs3B,WAAW,CACTlM,OAAO,KACPrP,SAAQ,GAEV+a,WAAW,KACX2rE,YAAY,GACZzsG,YAAY,KACZq7E,cAAc,KACdxuE,cAAc,KACdzG,gBAAgB,KAChBs/B,gBAAe,EACfgnE,iBAAgB,EAChBp4C,iBAAiB,KACjBP,kBAAkB,KAClBC,kBAAkB,KAClB0Y,kBAAkB,KAClBigC,mBAAmB,KACnB/mE,oBAAoB,KACpBgnE,qBAAoB,EACpBC,0BAA0B,QAI5B5sG,cAAgB,OAehBysG,gBAAkB,WAChB7sG,EAAKwL,SAAS,CACZqhG,iBAAgB,OAIpBI,oBAAsB,SAACF,GACrB/sG,EAAKwL,SAAS,CACZuhG,2BA4DJvmE,oBAAsB,WAAiB,IAAhBtU,EAAgB/vB,UAAAM,OAAA,QAAAC,IAAAP,UAAA,GAAAA,UAAA,GAAT,KAEvB+vB,IACHA,EAASlyB,EAAKmK,MAAM82B,YAGtB,IAAI4E,GAAiB,EAGnBA,EADE7lC,EAAKmK,MAAM4iG,qBACK76E,GAAUA,EAAO7b,GAAGrW,EAAKmK,MAAM0iE,oBAE/B36C,GAAUA,EAAO7b,GAAGrW,EAAKmK,MAAMmM,mBAGnDtW,EAAKwL,SAAS,CACZq6B,sBAIJY,cAAgB,WACd,GAAuC,OAAnCzmC,EAAKmK,MAAM47B,oBACb,OAAO,EAGT,IAAMW,EAAqB1mC,EAAKI,cAAciB,MAAMrB,EAAKmK,MAAM47B,qBAAqB9gC,IAAI,KACpFg8B,EAAa,KAGfA,EADEjhC,EAAKmK,MAAM4iG,oBACA/sG,EAAKmK,MAAM0iE,kBAAoB7sE,EAAKI,cAAciB,MAAMrB,EAAKmK,MAAM0iE,mBAAmB7nE,MAAM0hC,GAAsB,KAElH1mC,EAAKmK,MAAMmM,kBAAoBtW,EAAKI,cAAciB,MAAMrB,EAAKmK,MAAMmM,mBAAmBtR,MAAM0hC,GAAsB,KAGjI1mC,EAAKwmC,oBAAoBvF,GAEzBjhC,EAAKwL,SAAS,CACZy1B,kBAIJ9e,YAAc,SAAAnV,GACZ,IAAM7M,EAAcH,EAAKmK,MAAM5D,gBAAgByG,GAC/ChN,EAAKwL,SAAS,CACZrL,cACA6M,qBAIJkgG,+BAAY,SAAAtsG,IAAA,IAAAusG,EAAA14C,EAAA/yD,EAAAuQ,EAAAiiD,EAAAC,EAAA/hD,EAAAjP,EAAAytD,EAAAic,EAAAmgC,EAAA12F,EAAAklE,EAAAr7E,EAAA6M,EAAAzG,EAAA,OAAA7F,EAAAtB,EAAA0B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACJksG,EAAcntG,EAAKI,cAAcG,gBAAgB,CAAC,UAClDk0D,EAAmB04C,EAAY5mG,gBAAgBvG,EAAKJ,MAAMO,YAAYkE,KAAKhB,OAFvEtC,EAAAE,KAAA,EAI0CqD,QAAQC,IAAI,CAC9DvE,EAAKI,cAAc08E,uBACnB98E,EAAKI,cAAcs7E,yBANX,cAAAh6E,EAAAX,EAAAK,KAAA6Q,EAAA1S,OAAAmF,EAAA,EAAAnF,CAAAmC,EAAA,GAIHwyD,EAJGjiD,EAAA,GAIekiD,EAJfliD,EAAA,GAAAlR,EAAAE,KAAA,GAaAqD,QAAQC,IAAI,CACpBvE,EAAKI,cAAcm4D,qBACnBv4D,EAAKI,cAAcuvE,qBAAqB3vE,EAAKJ,MAAMuB,SACnDnB,EAAKI,cAAcwvE,6BAA6B5vE,EAAKJ,MAAMuB,WAhBnD,QAAAiR,EAAArR,EAAAK,KAAA+B,EAAA5D,OAAAmF,EAAA,EAAAnF,CAAA6S,EAAA,GAURw+C,EAVQztD,EAAA,GAWR0pE,EAXQ1pE,EAAA,GAYR6pG,EAZQ7pG,EAAA,GAmBJmT,EAAoBu2D,EAAoBA,EAAkB7nE,MAAM4rD,GAAmB5wD,EAAKI,cAAciB,MAAM,GAM5Gm6E,EAAgB,GAElBr7E,EAAcH,EAAKJ,MAAMO,YAAcH,EAAKJ,MAAMO,YAAcH,EAAKmK,MAAMhK,YAC3E6M,EAAgBhN,EAAKJ,MAAMoN,cAAgBhN,EAAKJ,MAAMoN,cAAgBhN,EAAKmK,MAAM6C,eACjFzG,EAAkBvG,EAAKmK,MAAM5D,mBAG/BA,EAAkBvG,EAAKI,cAAcqwD,0BAChCzjD,IACHA,EAAgBzN,OAAOwH,KAAKR,GAAiB,GAC7CpG,EAAcoG,EAAgByG,KAIlChN,EAAKwL,SAAS,CACZrL,cACA6M,gBACAwuE,gBACA5qB,kBACArqD,kBACAkuD,mBACAP,oBACAC,oBACA0Y,oBACAv2D,oBACA02F,8BAlDQ,yBAAAjsG,EAAAS,SAAAZ,EAAAjB,WAsDZpD,4BAAS,SAAAoF,IAAA,IAAAslC,EAAAC,EAAAgnB,EAAAk/C,EAAA1uB,EAAAz9C,EAAAosE,EAAAxgC,EAAAygC,EAAAC,EAAAjyB,EAAAkyB,EAAAC,EAAA,OAAA/sG,EAAAtB,EAAA0B,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,UAEFjB,EAAKmK,MAAM0iE,kBAFT,CAAA/qE,EAAAb,KAAA,eAAAa,EAAAP,OAAA,UAGE,GAHF,cAMD0lC,EAAiB,SAACvrB,EAAG4lB,GACzB,IAAM8F,EAA4B,YAAd1rB,EAAGpe,OAGjB+pC,EAAY,CAChB/jB,WAAY5H,EAAGpe,OACf8lB,cAAa,cACbC,YAAarjB,EAAKJ,MAAMoN,cACxBs6B,WAAYtnC,EAAKmK,MAAM0iE,kBAAkB18D,WAGvCmxB,IACF+F,EAAU/jB,WAAatjB,EAAKI,cAAcmnC,oBAAoBjG,KAI5DA,GAA8B,UAArB+F,EAAU/pC,SACrB0C,EAAKI,cAAc+iB,yBAAyBkkB,GAG9CrnC,EAAKwL,SAAS,SAACuB,GAAD,MAAgB,CAC5B00B,WAAY,CACVlM,OAAO,KACPrP,SAAQ,MAI6B,oBAA9BlmB,EAAKJ,MAAMqnC,gBAAiCG,GACrDpnC,EAAKJ,MAAMqnC,eAAevrB,IAIxBwrB,EAAwB,SAACxrB,GAC7B,IAAM6Z,EAAS7Z,EAAG8rB,gBAClBxnC,EAAKwL,SAAS,SAACuB,GAAD,MAAgB,CAC5B00B,WAAWliC,OAAAsL,EAAA,EAAAtL,CAAA,GACNwN,EAAU00B,WADL,CAERlM,eAKA24B,EAAeluD,EAAKmK,MAAMgqD,kBAAkB7nD,KAhD3CxK,EAAAb,KAAA,EAiDwBjB,EAAK0tG,kBAAkB1tG,EAAKmK,MAAMyiG,aAjD1D,UAiDDQ,EAjDCtrG,EAAAV,KAkDDs9E,EAAe1+E,EAAKI,cAAciB,MAAMrB,EAAKmK,MAAMyiG,aAAa3nG,IAAI,KACpEg8B,EAAajhC,EAAKmK,MAAM82B,WAAajhC,EAAKI,cAAciB,MAAMrB,EAAKmK,MAAM82B,YAAc,KACvFosE,EAAUrtG,EAAKI,cAAc+mC,qBAAqBlG,EAAWjhC,EAAKmK,MAAM+pD,kBAAkBjxD,UAC1F4pE,EAAoB7sE,EAAKI,cAAc+mC,qBAAqBnnC,EAAKmK,MAAM0iE,kBAAkB7sE,EAAKmK,MAAM+pD,kBAAkBjxD,WAExHjD,EAAKmK,MAAM4iG,oBAvDR,CAAAjrG,EAAAb,KAAA,gBAAAa,EAAAb,KAAA,GAwDqBjB,EAAKI,cAAco+E,0BAA0Bx+E,EAAKJ,MAAMuB,QAAQksG,EAAQ3uB,GAxD7F,QAwDC4uB,EAxDDxrG,EAAAV,KAyDL6sD,QAAQ6K,IAAI,mBAAmBu0C,EAAQ33F,WAAW43F,GAClDttG,EAAKJ,MAAMmC,0BAA0BmsD,EAAc,mBAAoB,CAACm/C,EAASC,GAAc,KAAMrmE,EAAgBC,GA1DhHplC,EAAAb,KAAA,wBA4DCssG,EAAavtG,EAAKmK,MAAMsqD,iBAAiBhrB,gBAAgBkJ,UA5D1D7wC,EAAAb,KAAA,GA6DiBjB,EAAKI,cAAc2/E,gBAAgB//E,EAAKJ,MAAMO,YAAYkE,KAAKhB,MAAMgqG,GAAQ,GA7D9F,eA6DC/xB,EA7DDx5E,EAAAV,KA8DCosG,EAAaxtG,EAAKI,cAAc+mC,qBAAqBlG,EAAWlmB,MAAMkmB,EAAWj8B,MAAMooG,EAAiBnoG,IAAI,OAAOjF,EAAKmK,MAAMsqD,iBAAiBxxD,UA9DhJnB,EAAAb,KAAA,GA+DqBjB,EAAKI,cAAcsgF,oBAAoBpF,GAAQ,GA/DpE,QA+DDmyB,EA/DC3rG,EAAAV,KAgELqsG,EAAgBztG,EAAKI,cAAciB,MAAMosG,GAAeE,cAAc9gC,GAAqBA,EAAoB7sE,EAAKI,cAAciB,MAAMosG,GAExIx/C,QAAQ6K,IAAI,4BAA4Bu0C,EAAQ/xB,EAAQiyB,EAAWE,EAAct9F,UAAUq9F,GAG3FxtG,EAAKJ,MAAMmC,0BAA0BmsD,EAAc,4BAA6B,CAACu/C,EAAeF,EAAYC,GAAa,KAAMvmE,EAAgBC,GArE1I,QAwEPlnC,EAAKwL,SAAS,SAACuB,GAAD,MAAgB,CAC5B00B,WAAWliC,OAAAsL,EAAA,EAAAtL,CAAA,GACNwN,EAAU00B,WADL,CAERvb,SAAQ,OA3EL,yBAAApkB,EAAAN,SAAAG,EAAAhC,WAgFTulC,uCAAoB,SAAA7iC,IAAA,OAAA3B,EAAAtB,EAAA0B,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,OAClBjB,EAAKwL,SAAS,CACZi2B,WAAY,CACVlM,OAAO,KACPrP,SAAQ,KAJM,wBAAA1jB,EAAAhB,SAAAa,EAAA1C,WASpB4mC,iBAAmB,SAAC54B,GAClB,IAAMszB,EAAatzB,EAAElO,OAAOsO,MAAMtL,SAAWnB,MAAMqM,EAAElO,OAAOsO,OAAS/N,EAAKI,cAAciB,MAAMsM,EAAElO,OAAOsO,OAAS/N,EAAKI,cAAciB,MAAM,GACzIrB,EAAKwmC,oBAAoBvF,GAIzBjhC,EAAKwL,SAAS,SAACuB,GAAD,MAAgB,CAC5Bk0B,aACA8E,oBAJ0B,WAQ9B6nE,uBAAyB,WACvB,OAAuC,OAAnC5tG,EAAKmK,MAAM47B,qBAGR/lC,EAAKI,cAAciB,MAAMrB,EAAKmK,MAAM47B,qBAAqB9gC,IAAI,QAGtE4oG,eAAiB,SAACjB,GAChB5sG,EAAKwL,SAAS,CACZohG,mBAIJjmE,uBAAyB,SAACZ,GACxB/lC,EAAKwL,SAAS,CACZu6B,oGA1SEpmC,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,mKAK9CD,KAAKgJ,qBACChJ,KAAKutG,uSAeWxuB,iCAAa,MAC7Bz9C,EAAathC,KAAKwK,MAAM82B,WAAathC,KAAKS,cAAciB,MAAM1B,KAAKwK,MAAM82B,YAAc,QAE1EA,EAAWp8B,IAAI,6CACzB,iBAGHipG,EAAmBnuG,KAAKS,cAAc+mC,qBAAqBlG,EAAWthC,KAAKwK,MAAM+pD,kBAAkBjxD,mBAC/CqB,QAAQC,IAAI,CACpE5E,KAAKS,cAAcg/E,sBAAsBz/E,KAAKC,MAAMuB,QAAQ2sG,GAAiB,GAC7EnuG,KAAKS,cAAco+E,0BAA0B7+E,KAAKC,MAAMuB,QAAQ2sG,+CAF3DhB,OAAmBiB,OAKpBzyB,EAAU37E,KAAKwK,MAAM4iG,oBAAsBgB,EAAyB,eAE7CpuG,KAAKS,cAAc4gF,iBAAiBrhF,KAAKwK,MAAMhK,YAAYkE,KAAKhB,MAAMyqG,GAAiB,EAAMxyB,kBAAtH8xB,YAEFA,EAAmBA,EAAiBpoG,MAAM,MAG5CrF,KAAK6L,SAAS,CACZ4hG,mBACAN,qBACAiB,2BAIEX,GAAoB1uB,IACtB0uB,EAAmBA,EAAiB3lG,KAAKi3E,sBAGpC0uB,yLAGgB1iG,EAAUqC,kFACjCpN,KAAKgJ,cAEgB+B,EAAUvK,YAAYkE,KAAKhB,QAAU1D,KAAKC,MAAMO,YAAYkE,KAAKhB,uCAE9E1D,KAAKutG,mBAGPc,EAA6BjhG,EAAUggG,sBAAwBptG,KAAKwK,MAAM4iG,qBAC7CptG,KAAKwK,MAAM47B,sBAAwBh5B,EAAUg5B,qBAC9CioE,IAChCruG,KAAK8mC,gBAGDwnE,EAAelhG,EAAUk0B,aAAethC,KAAKwK,MAAM82B,WACnD5hB,EAAuBtS,EAAUC,gBAAkBrN,KAAKwK,MAAM6C,cAC9DkhG,EAAqB/iG,WAAW4B,EAAU6/F,eAAiBzhG,WAAWxL,KAAKwK,MAAMyiG,cACnFqB,GAAgB5uF,GAAwB6uF,IAC1CvuG,KAAK+tG,2JAkOA,IAAA9kG,EAAAjJ,KAEDwuG,GAAgBxuG,KAAKwK,MAAM07B,gBAAkBlmC,KAAKwK,MAAMijG,iBACxDgB,EAAiBzuG,KAAKS,cAAcG,gBAAgB,CAAC,QAAQ,eAAe,UAElF,OACEpB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPqP,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,CAAC,EAAE,KACVqP,WAAY,UACZC,cAAe,SACfC,eAAgB,UAGb7J,KAAKwK,MAAM0iE,kBA0BRltE,KAAKwK,MAAMs3B,WAAWvb,QACxB/mB,EAAAC,EAAAC,cAAC8gB,GAAD,CACE1B,UAAW,CACT/U,EAAE,EACFmV,GAAG,IAGL1f,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEiK,cAAe,UAEfpK,EAAAC,EAAAC,cAAC2rC,GAAD,CACE7I,KAAMxiC,KAAKC,MAAMuiC,KACjB7V,KAAM3sB,KAAKwK,MAAMs3B,WAAWlM,OAC5BqP,WAAU,+BACVM,kBAAmBvlC,KAAKulC,kBAAkB16B,KAAK7K,MAC/CklC,SAAWllC,KAAKC,MAAMilC,SAAWllC,KAAKC,MAAMilC,SAAW,0BAK7D1lC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPsP,cAAe,UAEfpK,EAAAC,EAAAC,cAAC8gB,GAAD,CACE1B,UAAW,CACT/U,EAAE,EACFuH,GAAG,IAGL9R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgK,WAAY,SACZC,cAAe,UAEfpK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE0M,KAAM,QACNlO,MAAO,WACPwO,KAAM,eAERnN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,EACJlgB,SAAU,EACVb,MAAO,WACPkT,UAAW,UAJb,uGAQA7R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,EACJvV,WAAY,SACZC,cAAe,OAEfpK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEynB,UAAU,EACVrW,MAAK,0BACL8iB,QAAS7zB,KAAKwK,MAAM4iG,oBACpB5rF,SAAW,SAAAxT,GAAC,OAAI/E,EAAKqkG,oBAAoBt/F,EAAElO,OAAO+zB,YAEpDr0B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwc,UAAW,MACXC,QAAO,yCAAA3X,OAA2C7E,OAAOwH,KAAKpH,KAAKwK,MAAM5D,iBAAiBkK,KAAK,MAAxF,kEAEPtR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE0M,KAAM,MACNlO,MAAO,YACPwO,KAAM,qBAOb3M,KAAKwK,MAAM4iG,uBAAyBptG,KAAKC,MAAMoN,eAAkBrN,KAAKwK,MAAM0iG,iBAAmBsB,GAC9FhvG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,EACJhX,MAAO,IAGJ0F,KAAKC,MAAMoN,eACV7N,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,GAEPkF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,GADN,6BAKA9R,EAAAC,EAAAC,cAAC6lB,GAAD3lB,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEEyQ,GAAI,aACJ2R,aAAa,EACbb,SAAUxhB,KAAKwiB,YACfhiB,YAAaR,KAAKwK,MAAMhK,YACxB6M,cAAerN,KAAKwK,MAAM6C,cAC1BzG,gBAAiB5G,KAAKwK,MAAM5D,oBAKlC5G,KAAKwK,MAAM0iG,iBAAmBsB,GAC5BhvG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACP4kB,GAAMlf,KAAKC,MAAMoN,cAAoB,EAAJ,GAEjC7N,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgK,WAAY,SACZC,cAAe,OAEfpK,EAAAC,EAAAC,cAACC,EAAA,EAAD,6BAGAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwc,UAAW,MACXC,QAAO,yDAEP5c,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2M,GAAI,EACJD,KAAM,MACNlO,MAAO,YACPwO,KAAM,kBAIZnN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,EACJvV,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAGd,CAAC,GAAI,GAAI,EAAE,GAAGqR,IAAK,SAAAk2C,GAAQ,OACzB5xD,EAAAC,EAAAC,cAACqsC,GAAD,CACEjtB,UAAW,CACT/U,EAAE,GAEJO,UAAW,CACTtL,SAAS,GAEX6iC,WAAYuvB,EACZ7zC,IAAG,YAAA9Y,OAAc2sD,GACjBzrB,YAAa,kBAAI18B,EAAKilG,eAAe98C,IACrCzyC,SAAU1V,EAAKuB,MAAMyiG,cAAgBzhG,WAAW4lD,UAS9DpxD,KAAKwK,MAAM4iG,qBAAuBptG,KAAKwK,MAAM2iG,qBAAuBntG,KAAKwK,MAAM07B,gBACjF1mC,EAAAC,EAAAC,cAAC8gB,GAAD,CACE1B,UAAW,CACTI,GAAG,EACH5N,GAAG,EACH8P,GAAG,EACHD,GAAG,IAGL3hB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgK,WAAY,SACZC,cAAe,UAEfpK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,EACJlgB,SAAU,EACVb,MAAO,WACPkT,UAAW,UAJb,qBAQA7R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,EACJ5kB,MAAO,EACPkjB,UAAW,EACXN,MAAO,CACL+jB,SAAS,QAEXt3B,WAAY,SACZE,eAAgB,UAGZjK,OAAOwH,KAAKpH,KAAKwK,MAAM2iG,oBAAoBjyF,IAAK,SAAAxX,GAC9C,IAAMxC,EAAU+H,EAAKuB,MAAM2iG,mBAAmBzpG,GAC9C,OACElE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,EACJmU,GAAI,EACJvmB,SAAU,MACV0K,cAAe,MACf2T,IAAG,gBAAA9Y,OAAkBf,GACrBmG,eAAgB,cAEhBrK,EAAAC,EAAAC,cAACwiB,GAAD,CACExe,MAAOA,EACPlD,YAAa,CACXkD,MAAMA,GAERsO,UAAW,CACTrF,KAAK,OACL1M,MAAM,CACJkiB,GAAG,EACH7nB,MAAM,CAAC,QAAQ,SACf2E,OAAO,CAAC,QAAQ,aAItBO,EAAAC,EAAAC,cAAC8R,EAAD,CACExS,SAAU,CAAC,EAAE,GACb4P,WAAY,IACZpF,aAAc,EACdrL,MAAO,WACPgL,OAAQjI,EAAQ6U,mBAWtCvW,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,EACJhX,MAAO,EACPsP,cAAe,UAEfpK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,EACJ3H,WAAY,SACZC,cAAe,MACfC,eAAgB,YAGd2kG,GACEhvG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACP63B,SAAU,MACVxoB,WAAY,SACZC,cAAe,OAEfpK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACV4P,WAAY,EACZyC,UAAW,QACX6L,MAAO,CACL6L,WAAW,UAEb5qB,MAAQ6B,KAAKwK,MAAMijG,iBAAiB/2F,GAAG,GAAK1W,KAAKC,MAAM1G,MAAMR,OAAOkE,aAAaU,OAAOG,OAASkC,KAAKC,MAAM1G,MAAMR,OAAOkE,aAAaU,OAAOC,WAGpF,IAAvD4N,WAAWxL,KAAKwK,MAAMijG,iBAAiBj9F,QAAQ,IAC7C,cADF,GAAA/L,OAEMzE,KAAKwK,MAAMijG,iBAAiB/2F,GAAG,GAAK,aAAe,UAFzD,KAAAjS,OAEuEzE,KAAKwK,MAAMijG,iBAAiB9rC,MAAMnxD,QAAQ,GAFjH,MAKJhR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwc,UAAW,MACXC,QAAUpc,KAAKwK,MAAM4iG,oBAAX,yCAAA3oG,OAA0E7E,OAAOwH,KAAKpH,KAAKwK,MAAM5D,iBAAiBkK,KAAK,MAAvH,iEAA8L9Q,KAAKwK,MAAMijG,iBAAiB/2F,GAAG,GAAK,uHAAyH,kHAErWlX,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2M,GAAI,EACJD,KAAM,MACNlO,MAAO,YACPwO,KAAM,kBAIP3M,KAAKwK,MAAM4iG,qBACV5tG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2M,GAAI,EACJnO,MAAO,YACP8oB,WAAY,UACZ7I,QAASpe,KAAKktG,iBAJhB,WAYV1tG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACP63B,SAAU,MACVxoB,WAAY,SACZC,cAAe,MACfC,eAAgB,YAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACV4P,WAAY,EACZzQ,MAAO,YACPkT,UAAW,QACX4V,WAAY,YACZ7I,QAAU,SAACpQ,GAAD,OAAO/E,EAAK+9B,uBAAuB,MAC7C9pB,MAAO,CACLiV,SAAS,OACTxJ,SAAS,SACTI,WAAW,SACXqJ,aAAa,aAIbpyB,KAAKwK,MAAM4iG,oBAAX,GAAA3oG,OAAoCzE,KAAKwK,MAAM0iE,kBAAkB18D,QAAQxQ,KAAKC,MAAM+K,SAAW,EAAI,GAAnG,KAAAvG,OAAyGgqG,GAAzG,GAAAhqG,OAA+HzE,KAAKwK,MAAMmM,kBAAkBnG,QAAQxQ,KAAKC,MAAM+K,SAAW,EAAI,GAA9L,KAAAvG,OAAoMzE,KAAKwK,MAAM6C,kBAKvN7N,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgZ,IAAK,EACLvP,KAAM,SACNge,UAAU,EACVnoB,OAAQ,QACRK,aAAc,EACdsP,WAAY,IACZ4O,UAAW,kBACX8J,YAAW,gBACX9F,SAAUxhB,KAAK4mC,iBAAiB/7B,KAAK7K,MACrCqnB,OAAM,aAAA5iB,OAAezE,KAAKC,MAAM1G,MAAMR,OAAO4D,SAC7CyR,MAAiC,OAA1BpO,KAAKwK,MAAM82B,WAAsBthC,KAAKS,cAAciB,MAAM1B,KAAKwK,MAAM82B,YAAY9wB,UAAY,KAEtGhR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,EACJvV,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAGd,CAAC,GAAG,GAAG,GAAG,KAAKqR,IAAK,SAAA2mB,GAAU,OAC5BriC,EAAAC,EAAAC,cAACqsC,GAAD,CACElK,WAAYA,EACZtkB,IAAG,YAAA9Y,OAAco9B,GACjB8D,YAAa,kBAAI18B,EAAK+9B,uBAAuBnF,IAC7CljB,SAAU1V,EAAKuB,MAAM47B,sBAAwBr6B,SAAS81B,SAMhEriC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEkK,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACmsC,GAAD,CACEhmB,YAAa,CACX3G,GAAG,EACH5kB,MAAM,CAAC,EAAE,IACTlC,SAAS4H,KAAKwK,MAAM07B,gBAEtB7nB,YAAare,KAAKpD,QANpB,YAhXJ4C,EAAAC,EAAAC,cAAC8gB,GAAD,CACE1B,UAAW,CACT/U,EAAE,EACFmV,GAAG,EACH9S,UAAU,QACV8Q,MAAM,CACJxO,QAAQ,OACR/E,WAAW,SACXE,eAAe,YAInBrK,EAAAC,EAAAC,cAACyM,GAAD,CACEzC,UAAW,CACTE,cAAc,OAEhBS,YAAa,CACXgC,KAAK,QAEP/B,UAAW,CACTgC,GAAG,GAELrT,KAAM,qCArXEkH,mCCsDXuuG,8MArDbjuG,cAAgB,OAqBhBkuG,MAAQ,WAENtuG,EAAKI,cAAc+iB,yBAAyB,CAC1CC,cAAe,QACfC,YAAa,UACbC,WAAYtjB,EAAKJ,MAAM2uG,SAGzB,IAAMC,EAAIn2F,KAAKC,IAAIjO,OAAO6N,WAAW,KAE/BhE,GAAK7J,OAAO6N,WAAWs2F,GAAG,EAEhCnkG,OAAOorB,KAAP,yCAAArxB,OAAqDpE,EAAKJ,MAAM6uG,OAAQ,SAAxE,8CAAArqG,OADU,IACV,UAAAA,OAAyI8P,EAAzI,WAAA9P,OAAoJoqG,EAApJ,YAAApqG,OAHU,kFA5BNzE,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,oDAK9CD,KAAKgJ,wDAILhJ,KAAKgJ,yDAILhJ,KAAKgJ,6CAkBE,IAAAC,EAAAjJ,KACP,OACIR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEL,aAAc,EACdomB,UAAW,UACXoX,cAAe,QACf1e,QAAU,SAAApQ,GAAO/E,EAAK0lG,UAEtBnvG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMiK,cAAe,MAAOD,WAAY,SAAUE,eAAgB,UAChErK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKqf,UAAWC,KAAO1nB,cACvBiI,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMxB,MAAO,QAASyQ,WAAY,EAAGtC,GAAI,GAAKtM,KAAKC,MAAMhH,KAAO+G,KAAKC,MAAMhH,KAAO,kBAjD7DkH,mCCyElB4uG,8MApEbtuG,cAAgB,OAqBhBo+B,iDAAa,SAAA59B,EAAO/D,GAAP,OAAA6D,EAAAtB,EAAA0B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WACWjB,EAAKI,cAAcuiB,mBAEvB0b,UAAUC,OAAOC,OAAOp6B,QAH/B,CAAApD,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAIHjB,EAAKI,cAAc+iB,yBAAyB,CAChDC,cAAe,QACfC,YAAaxmB,EACbymB,WAAY,eAPL,OASTtjB,EAAKJ,MAAM4+B,aATFz9B,EAAAE,KAAA,eAWTjB,EAAKJ,MAAM4+B,aAXF,wBAAAz9B,EAAAS,SAAAZ,EAAAjB,0IAnBPA,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,oDAK9CD,KAAKgJ,wDAILhJ,KAAKgJ,yDAILhJ,KAAKgJ,6CAkBE,IAAAC,EAAAjJ,KACD8uG,EAAQpkG,OAAOskG,OAAOhvG,KAAKC,MAAM6uG,OACjCG,EAAa,CAACpjF,OAAQ7rB,KAAKC,MAAMhH,MACvC,OACEuG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAO4hC,OAAQvhC,KAAKC,MAAMshC,QACxB/hC,EAAAC,EAAAC,cAAC8hC,GAAD,CAAW9F,UAAW17B,KAAKC,MAAM4+B,YAE7B7+B,KAAKC,MAAMivG,iBACX1vG,EAAAC,EAAAC,cAACyvG,GAAA1vG,EAAD,CACEyd,MAAO,CAAE/L,SAAU,QAAQC,OAAS,MACpC07C,KAAK,EACLsiD,SAAS,EACT90G,MAAOoQ,OAAO6N,WACdtZ,OAAQyL,OAAO+N,cAGnBjZ,EAAAC,EAAAC,cAAC8hC,GAAUzF,OAAX,CAAkBjiC,MAAOkG,KAAKC,MAAMnG,MAAOoX,KAAMlR,KAAKC,MAAMiR,OAC5D1R,EAAAC,EAAAC,cAAC8hC,GAAUpF,KAAX,KACE58B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM6lB,GAAI,EAAGlrB,MAAO,EAAGsP,cAAe,SAAU6b,GAAI,QAClDjmB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMxB,MAAO,YAAakT,UAAW,SAAUrS,SAAU,EAAGsS,GAAI,EAAGsa,wBAAyBqjF,KAE9FzvG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM2R,GAAI,EAAG1H,cAAe,SAAUD,WAAY,SAAUE,eAAgB,UAC1ErK,EAAAC,EAAAC,cAAC2vG,GAAD,CAAoBP,MAAOA,EAAO71G,KAAM,YAAa21G,OAAQ,eAC7DpvG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMuf,GAAI,EAAGd,QAAU,SAAApQ,GAAC,OAAI/E,EAAK41B,WAAW,6BAA8B5X,WAAY,QAAtF,uCA9DW6K,IAAM3xB,WC+8DhBmvG,8MAx8Db9kG,MAAQ,CACN+kG,QAAQ,GACR37F,SAAS,IACT0tB,WAAW,GACXQ,WAAW,GACXwsC,SAAS,KACTkhC,WAAU,EACVvC,YAAY,GACZ//D,YAAW,EACXhwC,OAAO,UACP0zC,YAAW,EACX6+D,YAAY,KACZC,aAAY,EACZ92B,cAAc,KACd1wC,eAAc,EACdjC,eAAc,EACd0pE,gBAAe,EACf5rC,gBAAe,EACf79B,gBAAe,EACf0pE,gBAAe,EACf1C,iBAAgB,EAChBtwD,iBAAgB,EAChBizD,iBAAgB,EAChBzpE,oBAAoB,GACpB0pE,oBAAoB,GACpB3pE,kBAAiB,EACjB4pE,kBAAiB,EACjB7iC,kBAAkB,KAClB8iC,oBAAmB,EACnBC,oBAAoB,KACpBC,qBAAoB,EACpBC,qBAAoB,EACpBC,qBAAqB,KACrB7pE,yBAAwB,KAI1B9lC,cAAgB,OAmBhB4vG,kBAAoB,SAACV,GACnBtvG,EAAKwL,SAAS,CACZ8jG,sBAIJW,eAAiB,SAACZ,GAChBrvG,EAAKwL,SAAS,CACZ6jG,mBAIJa,0BAA4B,SAAAJ,GAC1B9vG,EAAKwL,SAAS,SAACuB,GAAD,MAAgB,CAC5B+iG,qBAAqB/iG,EAAU+iG,0BAInCxpE,oBAAsB,SAAAV,GACpB5lC,EAAKwL,SAAS,CACZo6B,qBAIJuqE,kBAAoB,SAAAR,GAClB3vG,EAAKwL,SAAS,CACZmkG,0BAIJS,mBAAqB,SAAAP,GACnB7vG,EAAKwL,SAAS,CACZqkG,2BAIJQ,eAAiB,SAAC9/D,GAChBvwC,EAAKwL,SAAS,CACZ+kC,kBAIJ+/D,sBAAwB,SAAC/zD,GACvBv8C,EAAKwL,SAAS,CACZ+wC,uBAIJ9U,8BAAgC,SAACvB,GAC/BlmC,EAAKwL,SAAS,CACZ06B,+BAwBJxH,WAAa,WACX1+B,EAAKwL,SAAS,CACZ4jG,YAAa,UAIjBmB,eAAiB,SAAAnB,GACfpvG,EAAKwL,SAAS,CACZ4jG,mBAgGJoB,sDAAkB,SAAA5vG,EAAOkoC,EAAgBC,GAAvB,IAAAqrB,EAAAjY,EAAA,OAAAz7C,EAAAtB,EAAA0B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACZjB,EAAKmK,MAAM0lG,qBACPz7C,EAAuBp0D,EAAKI,cAAcG,gBAAgB,CAAC,QAAQ,oBACzEP,EAAKI,cAAc4oC,YAAYhpC,EAAKJ,MAAMoN,cAAconD,EAAqBjuD,QAAQ2iC,EAAgBC,KAE/FoT,EAAgBn8C,EAAKmK,MAAMslG,oBAAoBzvG,EAAKmK,MAAMtN,UAC3CmD,EAAKmK,MAAM+7B,yBAA2BlmC,EAAKJ,MAAM4oC,SACpExoC,EAAKI,cAAc4oC,YAAYhpC,EAAKJ,MAAMoN,cAAcmvC,EAAch2C,QAAQ2iC,EAAgBC,GAE9F/oC,EAAKI,cAAc4oC,YAAYhpC,EAAKJ,MAAMoN,cAAchN,EAAKJ,MAAMO,YAAYkE,KAAK8B,QAAQ2iC,EAAgBC,GAThG,wBAAAhoC,EAAAS,SAAAZ,EAAAjB,mEAclBooC,wCAAqB,SAAApmC,IAAA,IAAAkmC,EAAAusB,EAAAjY,EAAA,OAAAz7C,EAAAtB,EAAA0B,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,UAEf4mC,GAAgB,GAEhB7nC,EAAKmK,MAAM0lG,oBAJI,CAAA/tG,EAAAb,KAAA,eAKXmzD,EAAuBp0D,EAAKI,cAAcG,gBAAgB,CAAC,QAAQ,oBALxDuB,EAAAb,KAAA,EAMKjB,EAAKI,cAAc2nC,mBAAmB/nC,EAAKJ,MAAMoN,cAAconD,EAAqBjuD,QAAQnG,EAAKJ,MAAMuB,SAN5G,OAMjB0mC,EANiB/lC,EAAAV,KAAAU,EAAAb,KAAA,sBAQXk7C,EAAgBn8C,EAAKmK,MAAMslG,oBAAoBzvG,EAAKmK,MAAMtN,UAC3CmD,EAAKmK,MAAM+7B,yBAA2BlmC,EAAKJ,MAAM4oC,UATrD,CAAA1mC,EAAAb,KAAA,gBAAAa,EAAAb,KAAA,GAUOjB,EAAKI,cAAc2nC,mBAAmB/nC,EAAKJ,MAAMoN,cAAcmvC,EAAch2C,QAAQnG,EAAKJ,MAAMuB,SAVvG,QAUf0mC,EAVe/lC,EAAAV,KAAAU,EAAAb,KAAA,wBAAAa,EAAAb,KAAA,GAYOjB,EAAKI,cAAc2nC,mBAAmB/nC,EAAKJ,MAAMoN,cAAchN,EAAKJ,MAAMO,YAAYkE,KAAK8B,QAAQnG,EAAKJ,MAAMuB,SAZrH,QAYf0mC,EAZe/lC,EAAAV,KAAA,eAAAU,EAAAP,OAAA,SAeZsmC,GAfY,yBAAA/lC,EAAAN,SAAAG,EAAAhC,WAkBrB8wG,kCAAe,SAAApuG,IAAA,IAAAwlC,EAAAiB,EAAAC,EAAA,OAAAroC,EAAAtB,EAAA0B,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,cAAAuB,EAAAvB,KAAA,EAGejB,EAAK+nC,qBAHpB,YAGPF,EAHOrlC,EAAApB,MAAA,CAAAoB,EAAAvB,KAAA,eAAAuB,EAAAjB,OAAA,SAMJvB,EAAKwL,SAAS,SAACuB,GAAD,MAAgB,CACnC86B,gBACApG,WAAWliC,OAAAsL,EAAA,EAAAtL,CAAA,GACNwN,EAAU00B,WADL,CAERgE,QAAQ,CACNlQ,OAAO,KACPrP,SAAQ,SAZH,OAkBP4iB,EAAkB,SAACptB,EAAG4lB,GAE1B,IAAM+F,EAAY,CAChBjkB,cAAe,UACfC,YAAarjB,EAAKJ,MAAMoN,cACxBsW,WAAY5H,EAAGpe,QAGbgkC,IACF+F,EAAU/jB,WAAatjB,EAAKI,cAAcmnC,oBAAoBjG,KAI5DA,GAA8B,UAArB+F,EAAU/pC,SACrB0C,EAAKI,cAAc+iB,yBAAyBkkB,GAG9CrnC,EAAKwL,SAAS,SAACuB,GAAD,MAAgB,CAC5B86B,cAA8B,YAAdnsB,EAAGpe,OACnBmkC,WAAWliC,OAAAsL,EAAA,EAAAtL,CAAA,GACNwN,EAAU00B,WADL,CAERgE,QAAQ,CACNlQ,OAAO,KACPrP,SAAQ,SAMV6iB,EAAyB,SAACrtB,GAC9B,IAAM6Z,EAAS7Z,EAAG8rB,gBAClBxnC,EAAKwL,SAAS,SAACuB,GAAD,MAAgB,CAC5B00B,WAAWliC,OAAAsL,EAAA,EAAAtL,CAAA,GACNwN,EAAU00B,WADL,CAERgE,QAAQlmC,OAAAsL,EAAA,EAAAtL,CAAA,GACHwN,EAAU00B,WAAV,QADE,CAELlM,iBAMRv1B,EAAKwwG,gBAAgB1nE,EAAgBC,GAErC/oC,EAAKwL,SAAS,SAACuB,GAAD,MAAgB,CAC5B00B,WAAWliC,OAAAsL,EAAA,EAAAtL,CAAA,GACNwN,EAAU00B,WADL,CAERgE,QAAQ,CACNlQ,OAAO,KACPrP,SAAQ,QAnED,wBAAA1jB,EAAAhB,SAAAa,EAAA1C,WAyEf+wG,mCAAgB,SAAA7tG,IAAA,IAAAsqG,EAAA14C,EAAAk8C,EAAAxtG,EAAAO,EAAAmkC,EAAA67B,EAAAvP,EAAAC,EAAAmkB,EAAAzyC,EAAA+mC,EAAAhgC,EAAAsiE,EAAAK,EAAAK,EAAAN,EAAAI,EAAA/kG,EAAA,OAAAlK,EAAAtB,EAAA0B,KAAA,SAAAiC,GAAA,cAAAA,EAAA/B,KAAA+B,EAAA9B,MAAA,cAEVjB,EAAKmK,MAAMulG,kBACb1vG,EAAKwL,SAAS,CACZkkG,kBAAiB,IAIfvC,EAAcntG,EAAKI,cAAcG,gBAAgB,CAAC,UAClDk0D,EAAmBz0D,EAAKI,cAAcG,gBAAgB,CAAC,QAAQ,kBAAkBP,EAAKJ,MAAMO,YAAYkE,KAAKhB,QAC7GstG,EAAoBxD,EAAYhpG,SAAWswD,GAAoBA,EAAiBtwD,QAVxEpB,EAAA9B,KAAA,EAoBJqD,QAAQC,IAAI,CACpBvE,EAAK+nC,qBACL/nC,EAAKI,cAAcojE,sBACnBxjE,EAAKI,cAAcs7E,uBACnB17E,EAAKI,cAAcu9E,0BACnB39E,EAAKI,cAAcg4E,iBAAiBp4E,EAAKJ,MAAMO,aAC/CH,EAAKI,cAAc0V,eAAe9V,EAAKJ,MAAMO,YAAYH,EAAKJ,MAAMuB,SACpEwvG,EAAoB3wG,EAAKI,cAAcuvE,qBAAqB3vE,EAAKJ,MAAMuB,SAAW,OA3BtE,OAAAgC,EAAAJ,EAAA3B,KAAAsC,EAAAnE,OAAAmF,EAAA,EAAAnF,CAAA4D,EAAA,GAaZ0kC,EAbYnkC,EAAA,GAcZggE,EAdYhgE,EAAA,GAeZywD,EAfYzwD,EAAA,GAgBZ0wD,EAhBY1wD,EAAA,GAiBZ60E,EAjBY70E,EAAA,GAkBXoiC,EAlBWpiC,EAAA,GAkBXoiC,iBACD+mC,EAnBYnpE,EAAA,GA8BRmpC,EAAa7sC,EAAKJ,MAAM6V,cAAgBzV,EAAKI,cAAciB,MAAMrB,EAAKJ,MAAM6V,cAAcY,GAAG,GAC7F84F,EAAYnvG,EAAKJ,MAAMqW,kBAAoBjW,EAAKI,cAAciB,MAAMrB,EAAKJ,MAAMqW,kBAAkBI,GAAG,GAGpGw5F,EADAL,EAAkBmB,GAAqB9jE,EAGvC0iE,EAAiBoB,GAAqB9jC,GAAqBA,EAAkBx2D,GAAG,GAChFs5F,EAAqBJ,GAErB3kG,EAvCQrL,OAAAsL,EAAA,EAAAtL,CAAA,GAuCOS,EAAKmK,QAGb0lG,sBAAwBc,IACnC/lG,EAASilG,qBAAsB,GAGjCjlG,EAASukG,UAAYA,EACrBvkG,EAASiiC,WAAaA,EACtBjiC,EAAS2tE,cAAgBA,EACzB3tE,EAASi9B,cAAgBA,EACzBj9B,EAAS84D,eAAiBA,EAC1B94D,EAAS2kG,eAAiBA,EAC1B3kG,EAAS4kG,gBAAkBA,EAC3B5kG,EAASk7B,iBAAmBA,EAC5Bl7B,EAASiiE,kBAAoBA,EAC7BjiE,EAASupD,kBAAoBA,EAC7BvpD,EAAS+kG,mBAAqBA,EAC9B/kG,EAASilG,oBAAsBA,EAC/BjlG,EAASwpD,qBAAuBA,EAEhCxpD,EAASskG,QAAU,CACjB3yG,QAAO,EACPC,SAAQ,GAEVoO,EAAS62B,WAAa,CACpBllC,OAAO,CACLg5B,OAAO,KACPrP,SAAQ,GAEV1pB,QAAQ,CACN+4B,OAAO,KACPrP,SAAQ,GAEVuf,QAAQ,CACNlQ,OAAO,KACPrP,SAAQ,GAEVjpB,MAAM,CACJs4B,OAAO,KACPrP,SAAQ,IAGZtb,EAASq2B,WAAa,CACpBhkC,MAAM,KACNV,OAAO,KACPC,QAAQ,MAEVoO,EAASm7B,oBAAsB,CAC7B9oC,MAAM,KACNV,OAAO,KACPC,QAAQ,MAGVoO,EAAS8kG,kBAAmB,EAE5B1vG,EAAKwL,SAASZ,EAAS,WACrB5K,EAAK4wG,cACL5wG,EAAK6wG,YAjGO,yBAAA9tG,EAAAvB,SAAAqB,EAAAlD,WAqGhBulC,uCAAoB,SAAA9hC,IAAA,OAAA1C,EAAAtB,EAAA0B,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,OAClBjB,EAAKwL,SAAS,SAACuB,GAAD,MAAgB,CAC5B00B,WAAWliC,OAAAsL,EAAA,EAAAtL,CAAA,GACNwN,EAAU00B,WADLliC,OAAA2b,EAAA,EAAA3b,CAAA,CAERkmC,QAAQ,CACNlQ,OAAO,KACPrP,SAAQ,IAETlmB,EAAKmK,MAAMtN,OAAQ,CAClB04B,OAAO,KACPrP,SAAQ,QAVI,wBAAAhiB,EAAA1C,SAAA4B,EAAAzD,WAgBpBinC,mCAAgB,SAAArhC,IAAA,IAAAurG,EAAAv0D,EAAAtb,EAAAyF,EAAAxgB,EAAA6qF,EAAAC,EAAA7D,EAAA8D,EAAAC,EAAA51B,EAAA61B,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA/nE,EAAAgoE,EAAA/rG,EAAAmN,EAAA6+F,EAAA5kB,EAAA6kB,EAAA5qE,EAAAC,EAAA+kC,EAAAnlC,EAAAzP,EAAAy6E,EAAAC,EAAAC,EAAA,OAAAtxG,EAAAtB,EAAA0B,KAAA,SAAA4E,GAAA,cAAAA,EAAA1E,KAAA0E,EAAAzE,MAAA,OAEV6vG,EAAqB,KACnBv0D,EAAkBv8C,EAAKmK,MAAMoyC,gBAC7Btb,EAAajhC,EAAKmK,MAAM82B,WAAWjhC,EAAKmK,MAAMtN,QAC9C6pC,EAAqB1mC,EAAK4tG,yBAE5B1nF,GAAU,EAPAxgB,EAAAd,GASN5E,EAAKmK,MAAMtN,OATL6I,EAAAzE,KAUP,YAVOyE,EAAAd,GAAA,EAsKP,WAtKOc,EAAAd,GAAA,uBAYN5E,EAAKmK,MAAM07B,gBAAmB5E,IAAcjhC,EAAKI,cAAciB,MAAM4/B,GAAYp8B,IAAI,GAZ/E,CAAAa,EAAAzE,KAAA,gBAAAyE,EAAAnE,OAAA,UAaD,GAbC,WAgBLvB,EAAKmK,MAAM09B,cAhBN,CAAAniC,EAAAzE,KAAA,gBAAAyE,EAAAnE,OAAA,SAiBDvB,EAAKywG,gBAjBJ,WAoBN5sE,cACF7jC,EAAKI,cAAc4jC,gBAAgB,6BAA6B,GAGlEhkC,EAAKwL,SAAS,CACZymG,kBAAmBjyG,EAAKJ,MAAMuB,QAC9B+wG,WAAY,GACZC,aAAc,KAGVpB,EAAkB,SAACr1F,EAAG4lB,IAErB5lB,GAAM4lB,IACT5lB,EAAK,CACHpe,OAAO,UAIX,IAAM4xG,EAAwB,UAAdxzF,EAAGpe,OACb8pC,EAA4B,YAAd1rB,EAAGpe,OAEjB+pC,EAAY,CAChBjkB,cAAe,UACfC,YAAarjB,EAAKJ,MAAMoN,cACxBsW,WAAY5H,EAAGpe,OACfgqC,WAAY57B,SAASu1B,IAGnBK,IACF+F,EAAU/jB,WAAatjB,EAAKI,cAAcmnC,oBAAoBjG,KAI5DA,GAA8B,UAArB+F,EAAU/pC,SACrB0C,EAAKI,cAAc+iB,yBAAyBkkB,GAG9CrnC,EAAKwL,SAAS,SAACuB,GAAD,MAAgB,CAC5B00B,WAAWliC,OAAAsL,EAAA,EAAAtL,CAAA,GACNwN,EAAU00B,WADLliC,OAAA2b,EAAA,EAAA3b,CAAA,GAEPS,EAAKmK,MAAMtN,OAAQ,CAClB04B,OAAO,KACPrP,SAAQ,QAKVkhB,EACFpnC,EAAKwL,SAAS,SAACuB,GAAD,MAAgB,CAC5BqiG,YAAY,QACZnuE,WAAW1hC,OAAAsL,EAAA,EAAAtL,CAAA,GACNwN,EAAUk0B,WADL1hC,OAAA2b,EAAA,EAAA3b,CAAA,GAEPS,EAAKmK,MAAMtN,OAASmD,EAAKI,cAAciB,MAAM,QAGzCrB,EAAKmK,MAAM+7B,yBAA2BgpE,GAC/ClvG,EAAKwL,SAAS,CACZ0jG,QAAQ3vG,OAAA2b,EAAA,EAAA3b,CAAA,GACLS,EAAKmK,MAAMtN,QAAS,MAMvBm0G,EAAyB,SAACt1F,GAC9B,IAAM6Z,EAAS7Z,EAAG8rB,gBAClBxnC,EAAKwL,SAAS,SAACuB,GAAD,MAAgB,CAC5B00B,WAAWliC,OAAAsL,EAAA,EAAAtL,CAAA,GACNwN,EAAU00B,WADLliC,OAAA2b,EAAA,EAAA3b,CAAA,GAEPS,EAAKmK,MAAMtN,OAFJ0C,OAAAsL,EAAA,EAAAtL,CAAA,GAGHwN,EAAU00B,WAAWzhC,EAAKmK,MAAMtN,QAH7B,CAIN04B,iBAMF43E,EAAcntG,EAAKI,cAAcG,gBAAgB,CAAC,YAC9B4sG,EAAYhpG,SAAWnE,EAAKI,cAAcG,gBAAgB,CAAC,QAAQ,kBAAkBP,EAAKJ,MAAMO,YAAYkE,KAAKhB,MAAM,eAGxHrD,EAAKmK,MAAM0lG,oBArG1B,CAAAnqG,EAAAzE,KAAA,gBAuGFgwG,EAAwBjxG,EAAKI,cAAcG,gBAAgB,CAAC,QAAQ,iBACpE2wG,EAAkBlxG,EAAKI,cAAc+mC,qBAAqBlG,EAAWgwE,EAAsBhuG,UAxGzFyC,EAAAzE,KAAA,GA0GcjB,EAAKI,cAAc2/E,gBAAgB//E,EAAKJ,MAAMO,YAAYkE,KAAKhB,MAAM6tG,GA1GnF,eA0GF51B,EA1GE51E,EAAAtE,KAAAsE,EAAAzE,KAAA,GA2GkBjB,EAAKI,cAAcsgF,oBAAoBpF,GA3GzD,eA2GJ61B,EA3GIzrG,EAAAtE,KA4GJpB,EAAKmK,MAAMyiG,cAEbuE,GADAA,EAAgBnxG,EAAKI,cAAciB,MAAM8vG,IACXp2F,MAAMo2F,EAAcnsG,MAAMhF,EAAKI,cAAciB,MAAMrB,EAAKmK,MAAMyiG,aAAa3nG,IAAI,OAC7GksG,EAAgBnxG,EAAKI,cAAcypC,aAAasnE,IAG5CC,EAAgB,CAAC91B,EAAQ61B,GAlHvBzrG,EAAAzE,KAAA,GAoHmBjB,EAAKI,cAAc2B,0BAA0B/B,EAAKmK,MAAMiqD,qBAAqB9nD,KAAM,gBAAiB8kG,EAAeL,EAAiBC,GApHvJ,QAoHRF,EApHQprG,EAAAtE,KAAAsE,EAAAzE,KAAA,oBAsHFiwG,EAAkBlxG,EAAKI,cAAc+mC,qBAAqBlG,EAAWjhC,EAAKJ,MAAMO,YAAY8C,UAE5FquG,EAAiCtxG,EAAKI,cAAcG,gBAAgB,CAAC,WAAW,UAAU,UAAU,4BAEtG6wG,EAAgB,GAGdI,EAAwBxxG,EAAKmK,MAAMslG,oBAAoBzvG,EAAKmK,MAAMtN,UACpEy0G,GAAkCE,GAAyBxxG,EAAKJ,MAAM4oC,UAAYxoC,EAAKmK,MAAM+7B,yBA9HzF,CAAAxgC,EAAAzE,KAAA,YA+HAwwG,EAAoBzxG,EAAKmK,MAAMslG,oBAAoBzvG,EAAKmK,MAAMtN,QAAQi/C,SAC5Es1D,EAAgB,CAACF,EAAiBlxG,EAAKJ,MAAMO,YAAYkE,KAAK8B,UAE1DnG,EAAKmK,MAAM+7B,wBAlIT,CAAAxgC,EAAAzE,KAAA,gBAmIE0oC,GAAoB+nE,EAAAD,EAAkBnxE,SAAQkxE,EAAsBn1D,UAAhDn6C,MAAAwvG,EAAAnyG,OAAAkhC,EAAA,EAAAlhC,CAA6D6xG,IAAernE,YAnIlGrkC,EAAAzE,KAAA,GAoIuBjB,EAAKI,cAAc4pC,+BAA+BwnE,EAAsBllG,KAAMq9B,EAAmBonE,EAAiBC,GApIzI,QAoIJF,EApIIprG,EAAAtE,KAAAsE,EAAAzE,KAAA,wBAAAyE,EAAAzE,KAAA,GAsIuBjB,EAAKI,cAAc2B,0BAA0ByvG,EAAsBllG,KAAMklG,EAAsBn1D,SAAU+0D,EAAeL,EAAiBC,GAtIhK,QAsIJF,EAtIIprG,EAAAtE,KAAA,QAAAsE,EAAAzE,KAAA,oBA0IF0wG,GAAa3xG,EAAKmK,MAAMomC,YAAcvwC,EAAKI,cAAcG,gBAAgB,CAAC,WAAW,UAAU,UAAU,eAC7GoxG,EAAiE,qBAA9C3xG,EAAKJ,MAAMO,YAAY2pC,mBAAqC9pC,EAAKJ,MAAMO,YAAY2pC,mBAAqB6nE,GA3IrH,CAAAjsG,EAAAzE,KAAA,gBAAAyE,EAAAzE,KAAA,GAkJMqD,QAAQC,IAAI,CACpBvE,EAAKI,cAAcuC,oBAAoB,eAAgB,iBACvD3C,EAAKI,cAAcoV,eAAe,OAAOxV,EAAKJ,MAAMoN,cAAchN,EAAKJ,MAAMO,YAAYH,EAAKJ,MAAMuB,WApJlG,QAAAyE,EAAAF,EAAAtE,KAAA2R,EAAAxT,OAAAmF,EAAA,EAAAnF,CAAAqG,EAAA,GAgJFgsG,EAhJE7+F,EAAA,GAiJFi6E,EAjJEj6E,EAAA,GAuJA6+F,GAAiB5kB,IACb6kB,EAAc5wE,EAAWh8B,IAAI+nF,GAAUhoF,MAAM,KACnD4sG,EAAgB5xG,EAAKI,cAAciB,MAAMuwG,GAAe3sG,IAAI,KACxD4sG,EAAYh5E,IAAI+4E,EAAc5sG,MAAM,MACtC2sG,GAAY,IA3JZ,eAiKNP,EAAgB,CAACF,EAAiBS,EAAW,8CAjKvCjsG,EAAAzE,KAAA,GAkKqBjB,EAAKI,cAAc2B,0BAA0B/B,EAAKJ,MAAMO,YAAYkE,KAAKhB,MAAO,gBAAiB+tG,EAAeL,EAAiBC,GAlKtJ,QAkKNF,EAlKMprG,EAAAtE,KAAA,eAAAsE,EAAAnE,OAAA,yBAwKNg7C,EAxKM,CAAA72C,EAAAzE,KAAA,gBAyKFgmC,EAAiB,SAACvrB,EAAG4lB,GACzB,IAAM8F,EAA4B,YAAd1rB,EAAGpe,OAGjB+pC,EAAY,CAChBjkB,cAAa,aACbC,YAAarjB,EAAKJ,MAAMoN,cACxBsW,WAAY5H,EAAGpe,OACfgqC,WAAY,GAGVhG,IACF+F,EAAU/jB,WAAatjB,EAAKI,cAAcmnC,oBAAoBjG,KAI5DA,GAA8B,UAArB+F,EAAU/pC,SACrB0C,EAAKI,cAAc+iB,yBAAyBkkB,GAG9CrnC,EAAKwL,SAAS,SAACuB,GAAD,MAAgB,CAC5B00B,WAAWliC,OAAAsL,EAAA,EAAAtL,CAAA,GACNwN,EAAU00B,WADLliC,OAAA2b,EAAA,EAAA3b,CAAA,GAEPS,EAAKmK,MAAMtN,OAAQ,CAClB04B,OAAO,KACPrP,SAAQ,QAKVkhB,GACFpnC,EAAKwL,SAAS,SAACuB,GAAD,MAAgB,CAC5Bk0B,WAAW1hC,OAAAsL,EAAA,EAAAtL,CAAA,GACNwN,EAAUk0B,WADL1hC,OAAA2b,EAAA,EAAA3b,CAAA,GAEPS,EAAKmK,MAAMtN,OAASmD,EAAKI,cAAciB,MAAM,SAMhD6lC,EAAwB,SAACxrB,GAC7B,IAAM6Z,EAAS7Z,EAAG8rB,gBAClBxnC,EAAKwL,SAAS,SAACuB,GAAD,MAAgB,CAC5B00B,WAAWliC,OAAAsL,EAAA,EAAAtL,CAAA,GACNwN,EAAU00B,WADLliC,OAAA2b,EAAA,EAAA3b,CAAA,GAEPS,EAAKmK,MAAMtN,OAFJ0C,OAAAsL,EAAA,EAAAtL,CAAA,GAGHwN,EAAU00B,WAAWzhC,EAAKmK,MAAMtN,QAH7B,CAIN04B,iBAxNA7vB,EAAAzE,KAAA,GA8NmBjB,EAAKI,cAAc2B,0BAA0B/B,EAAKJ,MAAMO,YAAYkE,KAAKhB,MAAO,kBAAmB,CAAC,GAAI4jC,EAAgBC,GA9N3I,QA8NR4pE,EA9NQprG,EAAAtE,KAAAsE,EAAAzE,KAAA,qBAkOJjB,EAAKmK,MAAM07B,gBAAmB5E,IAAcjhC,EAAKI,cAAciB,MAAM4/B,GAAYp8B,IAAI,GAlOjF,CAAAa,EAAAzE,KAAA,gBAAAyE,EAAAnE,OAAA,UAmOC,GAnOD,WAsOF0qE,EAAS,CACbl+D,MAAM/N,EAAKI,cAAciB,MAAM4/B,IAG7B6F,EAAoB,MACpBJ,EA3OI,CAAAhhC,EAAAzE,KAAA,SA4ON6lC,EAAoB9mC,EAAKI,cAAciB,MAAMrB,EAAKJ,MAAMqW,kBAAkBjR,MAAM0hC,GA5O1EhhC,EAAAzE,KAAA,wBAAAyE,EAAAzE,KAAA,GA8OuBjB,EAAKI,cAAcuC,oBAAoB3C,EAAKJ,MAAMO,YAAYkE,KAAKhB,MAAO,cA9OjG,QA8OAg0B,EA9OA3xB,EAAAtE,KA+ON0lC,EAAoB9mC,EAAKI,cAAciB,MAAMrB,EAAKI,cAAc+mC,qBAAqBlG,EAAWjhC,EAAKJ,MAAMO,YAAY8C,WAAWgC,IAAIoyB,GA/OhI,WAmPRyP,EAAoB9mC,EAAKI,cAAc+mC,qBAAqBL,EAAkB,IAnPtE,CAAAphC,EAAAzE,KAAA,gBAAAyE,EAAAnE,OAAA,UAsPC,GAtPD,eAyPF0lC,EAAiB,SAACvrB,EAAG4lB,GACzB,IAAM8F,EAA4B,YAAd1rB,EAAGpe,OAGjB+pC,EAAY,CAChBjkB,cAAa,iBACbC,YAAarjB,EAAKJ,MAAMoN,cACxBsW,WAAY5H,EAAGpe,OACfgqC,WAAY57B,SAASu1B,IAGnBK,IACF+F,EAAU/jB,WAAatjB,EAAKI,cAAcmnC,oBAAoBjG,KAI5DA,GAA8B,UAArB+F,EAAU/pC,SACrB0C,EAAKI,cAAc+iB,yBAAyBkkB,GAG9CrnC,EAAKwL,SAAS,SAACuB,GAAD,MAAgB,CAC5B00B,WAAWliC,OAAAsL,EAAA,EAAAtL,CAAA,GACNwN,EAAU00B,WADLliC,OAAA2b,EAAA,EAAA3b,CAAA,GAEPS,EAAKmK,MAAMtN,OAAQ,CAClB04B,OAAO,KACPrP,SAAQ,QAKVkhB,GACFpnC,EAAKwL,SAAS,SAACuB,GAAD,MAAgB,CAC5Bk0B,WAAW1hC,OAAAsL,EAAA,EAAAtL,CAAA,GACNwN,EAAUk0B,WADL1hC,OAAA2b,EAAA,EAAA3b,CAAA,GAEPS,EAAKmK,MAAMtN,OAASmD,EAAKI,cAAciB,MAAM,SAMhD6lC,EAAwB,SAACxrB,GAC7B,IAAM6Z,EAAS7Z,EAAG8rB,gBAClBxnC,EAAKwL,SAAS,SAACuB,GAAD,MAAgB,CAC5B00B,WAAWliC,OAAAsL,EAAA,EAAAtL,CAAA,GACNwN,EAAU00B,WADLliC,OAAA2b,EAAA,EAAA3b,CAAA,GAEPS,EAAKmK,MAAMtN,OAFJ0C,OAAAsL,EAAA,EAAAtL,CAAA,GAGHwN,EAAU00B,WAAWzhC,EAAKmK,MAAMtN,QAH7B,CAIN04B,iBAMJy8E,EAAe,CAAClrE,GA9SZphC,EAAAzE,KAAA,GAiTmBjB,EAAKI,cAAc2B,0BAA0B/B,EAAKJ,MAAMO,YAAYkE,KAAKhB,MAAO,kBAAmB2uG,EAAc/qE,EAAgBC,EAAuB+kC,GAjT3K,QAiTR6kC,EAjTQprG,EAAAtE,KAAA,eAAAsE,EAAAnE,OAAA,4BAqTV2kB,GAAU,EArTAxgB,EAAAnE,OAAA,uBAyTa,IAAvBuvG,GACF9wG,EAAKwL,SAAS,SAACuB,GAAD,MAAgB,CAC5B00B,WAAWliC,OAAAsL,EAAA,EAAAtL,CAAA,GACNwN,EAAU00B,WADLliC,OAAA2b,EAAA,EAAA3b,CAAA,GAEPS,EAAKmK,MAAMtN,OAFJ0C,OAAAsL,EAAA,EAAAtL,CAAA,GAGHwN,EAAU00B,WAAWzhC,EAAKmK,MAAMtN,QAH7B,CAINqpB,iBA/TM,0BAAAxgB,EAAAlE,SAAA+D,EAAA5F,WAsUhBkuG,eAAiB,SAACjB,GAChB5sG,EAAKwL,SAAS,CACZohG,mBAIJC,gBAAkB,WAChB7sG,EAAKwL,SAAS,CACZqhG,iBAAgB,OAIpB+D,YAAc,WACZ,IAAI/zG,EAASmD,EAAKmK,MAAMtN,OAExB,OAAOA,GACL,IAAK,SACEmD,EAAKmK,MAAMglG,YACdtyG,EAAS,WAOXA,IAAWmD,EAAKmK,MAAMtN,OACxBmD,EAAKwL,SAAS,CACZ3O,UACA,WACAmD,EAAKwmC,wBAGPxmC,EAAKwmC,yBAITA,oBAAsB,WAAiB,IAAhBtU,EAAgB/vB,UAAAM,OAAA,QAAAC,IAAAP,UAAA,GAAAA,UAAA,GAAT,KAE5B,IAAKnC,EAAKmK,MAAMtN,OACd,OAAO,EAGJq1B,IACHA,EAASlyB,EAAKmK,MAAM82B,WAAWjhC,EAAKmK,MAAMtN,SAG5C,IAAIgpC,GAAiB,EAErB,OAAQ7lC,EAAKmK,MAAMtN,QACjB,IAAK,UACHgpC,EAAiBA,GAAmB3T,GAAUA,EAAO7b,GAAGrW,EAAKJ,MAAM6V,cACrE,MACA,IAAK,SACHowB,GAAkB7lC,EAAKmK,MAAMolG,iBAAmBvvG,EAAKmK,MAAMoyC,kBAAqB1W,GAAmB3T,GAAUA,EAAO7b,GAAGrW,EAAKJ,MAAM0W,oBAMtItW,EAAKwL,SAAS,CACZq6B,sBAIJY,cAAgB,WACd,IAAKzmC,EAAKmK,MAAMtN,QAAgE,OAAtDmD,EAAKmK,MAAM47B,oBAAoB/lC,EAAKmK,MAAMtN,QAClE,OAAO,EAGT,IAAM6pC,EAAqB1mC,EAAKI,cAAciB,MAAMrB,EAAKmK,MAAM47B,oBAAoB/lC,EAAKmK,MAAMtN,SAASoI,IAAI,KACvGitB,EAAS,KAEb,OAAOlyB,EAAKmK,MAAMtN,QAChB,IAAK,UACHq1B,EAASlyB,EAAKJ,MAAM6V,aAAezV,EAAKI,cAAciB,MAAMrB,EAAKJ,MAAM6V,cAAczQ,MAAM0hC,GAAsB,KACnH,MACA,IAAK,SACHxU,EAASlyB,EAAKJ,MAAM0W,kBAAoBtW,EAAKI,cAAciB,MAAMrB,EAAKJ,MAAM0W,mBAAmBtR,MAAM0hC,GAAsB,KAM/H1mC,EAAKwmC,oBAAoBtU,GAEzBlyB,EAAKwL,SAAS,SAACuB,GAAD,MAAgB,CAC5Bk0B,WAAW1hC,OAAAsL,EAAA,EAAAtL,CAAA,GACNwN,EAAUk0B,WADL1hC,OAAA2b,EAAA,EAAA3b,CAAA,GAEPS,EAAKmK,MAAMtN,OAASq1B,UAK3B07E,uBAAyB,WACvB,OAA0D,OAAtD5tG,EAAKmK,MAAM47B,oBAAoB/lC,EAAKmK,MAAMtN,SAIvCmD,EAAKI,cAAciB,MAAMrB,EAAKmK,MAAM47B,oBAAoB/lC,EAAKmK,MAAMtN,SAASoI,IAAI,QAGzF0hC,uBAAyB,SAACnF,GACxB,IAAKxhC,EAAKmK,MAAMtN,OACd,OAAO,EAETmD,EAAKwL,SAAS,SAACuB,GAAD,MAAgB,CAC5Bg5B,oBAAoBxmC,OAAAsL,EAAA,EAAAtL,CAAA,GACfwN,EAAUg5B,oBADIxmC,OAAA2b,EAAA,EAAA3b,CAAA,GAEhBS,EAAKmK,MAAMtN,OAAS2kC,UAK3B+E,iBAAmB,SAAC54B,GAClB,IAAK3N,EAAKmK,MAAMtN,OACd,OAAO,EAET,IAAMq1B,EAASvkB,EAAElO,OAAOsO,MAAMtL,SAAWnB,MAAMqM,EAAElO,OAAOsO,OAAS/N,EAAKI,cAAciB,MAAMsM,EAAElO,OAAOsO,OAAS/N,EAAKI,cAAciB,MAAM,GACrIrB,EAAKwmC,oBAAoBtU,GACzBlyB,EAAKwL,SAAS,SAACuB,GAAD,MAAgB,CAC5Bg5B,oBAAoBxmC,OAAAsL,EAAA,EAAAtL,CAAA,GACfwN,EAAUg5B,oBADIxmC,OAAA2b,EAAA,EAAA3b,CAAA,GAEhBS,EAAKmK,MAAMtN,OAAS,OAEvBokC,WAAW1hC,OAAAsL,EAAA,EAAAtL,CAAA,GACNwN,EAAUk0B,WADL1hC,OAAA2b,EAAA,EAAA3b,CAAA,GAEPS,EAAKmK,MAAMtN,OAASq1B,UAK3BmU,UAAY,SAACxpC,GACX,OAAQA,EAAOoT,eACb,IAAK,UAEL,MACA,IAAK,SACEjQ,EAAKmK,MAAMglG,WAAcnvG,EAAKmK,MAAMolG,iBACvC1yG,EAAS,MAEb,MACA,QACEA,EAAS,KAIE,OAAXA,GACFmD,EAAKwL,SAAS,CACZ3O,uFA13BA8C,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,mKAK9CD,KAAKgJ,qBACChJ,KAAKyyG,ihBA8DL3/E,EAAU,CAAC,UAAU,UACrB7nB,EAAW,CACf6kG,oBAAoB,aAGhB9vG,KAAKS,cAAc0G,aAAa2rB,EAAhC,eAAAzrB,EAAAzH,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAwC,SAAA2F,EAAOzJ,GAAP,IAAA20G,EAAAa,EAAAl2D,EAAA,OAAAz7C,EAAAtB,EAAA0B,KAAA,SAAA6F,GAAA,cAAAA,EAAA3F,KAAA2F,EAAA1F,MAAA,UACtCuwG,EAAwB5oG,EAAKxI,cAAcG,gBAAgB,CAAC,WAAW,UAAU1D,EAAO,kBACxFw1G,EAAmBb,GAAyBA,EAAsBrtG,QACxEyG,EAAS6kG,oBAAoB5yG,GAAUw1G,EAAmBb,EAAwB,MAC9Ea,EAJwC,CAAA1rG,EAAA1F,KAAA,gBAAA0F,EAAA1F,KAAA,EAKd2H,EAAKhJ,MAAMilB,aAAa2sF,EAAsBllG,KAAKklG,EAAsBrrG,QAAQqrG,EAAsB5sF,KALzF,cAKpCu3B,EALoCx1C,EAAAvF,KAM1CwJ,EAAS6kG,oBAAoB5yG,GAAQi/C,SAAWK,EAAcL,SANpBn1C,EAAA1F,KAAA,GAOY2H,EAAKxI,cAAc2nC,mBAAmBn/B,EAAKhJ,MAAMoN,cAAcwkG,EAAsBrrG,QAAQyC,EAAKhJ,MAAMuB,SAPpH,QAO1CyJ,EAAS6kG,oBAAoB5yG,GAAQy1G,SAPK3rG,EAAAvF,KAAA,yBAAAuF,EAAAnF,SAAA8E,EAAA3G,SAAxC,gBAAAwF,GAAA,OAAA6B,EAAA9E,MAAAvC,KAAAwC,YAAA,WAWNxC,KAAK6L,SAASZ,yQAgBUjL,KAAKS,cAAcu3B,aAAah4B,KAAKC,MAAMO,yBAA7Dm3B,WACgC,OAArBA,EAAUO,2BACnBtkB,EAAW5T,KAAKS,cAAciB,MAAMi2B,EAAUO,QAAQ1nB,QAAQ,GAEhE89D,EAAW,MACXtuE,KAAKwK,MAAMqlG,iDACI7vG,KAAKS,cAAcgW,sBAApC63D,YAGEA,EAAWA,EAASxmE,KAAK8L,YAG7B5T,KAAK6L,SAAS,CACZ+H,WACA06D,mMAKmBvjE,EAAUqC,sFACjCpN,KAAKgJ,YAE2B,OAA5BhJ,KAAKC,MAAM6V,uDACN,aAGH0F,EAAezQ,EAAUsC,gBAAkBrN,KAAKC,MAAMoN,cACtDulG,EAAsB7nG,EAAU+K,eAAiB9V,KAAKC,MAAM6V,cAA4C,OAA5B9V,KAAKC,MAAM6V,cAEzF0F,IAAgBo3F,mCACZ5yG,KAAKyyG,mCACXzyG,KAAK+wG,mCACE,cAGHxmE,EAAgBvqC,KAAKwK,MAAMtN,SAAWkQ,EAAUlQ,OAChDstC,EAA6BxqC,KAAKwK,MAAM47B,oBAAoBpmC,KAAKwK,MAAMtN,UAAYkQ,EAAUg5B,oBAAoBpmC,KAAKwK,MAAMtN,SAE9HqtC,GAAiBC,IACnBxqC,KAAK8mC,iBAGwB15B,EAAUwvC,kBAAoB58C,KAAKwK,MAAMoyC,iBAC1CrS,IAC5BvqC,KAAK6mC,sBAGDgsE,EAAsBzlG,EAAU8iG,sBAAwBlwG,KAAKwK,MAAM0lG,sBACzC9iG,EAAUm5B,0BAA4BvmC,KAAKwK,MAAM+7B,2BAClDssE,oCACD7yG,KAAKooC,6BAA3BF,SACNloC,KAAK6L,SAAS,CACZq8B,0BAIiB96B,EAAUk0B,WAAWthC,KAAKwK,MAAMtN,UAAY8C,KAAKwK,MAAM82B,WAAWthC,KAAKwK,MAAMtN,SAEhG8C,KAAK8yG,wSAKDvgF,EAASvyB,KAAKwK,MAAM82B,WAAWthC,KAAKwK,MAAMtN,QAAU8C,KAAKS,cAAciB,MAAM1B,KAAKwK,MAAM82B,WAAWthC,KAAKwK,MAAMtN,SAAW,QAEhHq1B,EAAOrtB,IAAI,6CACjB,UAGHosG,EAAwBtxG,KAAKS,cAAcG,gBAAgB,CAAC,QAAQ,iBAEpEutG,EAAmBnuG,KAAKS,cAAc+mC,qBAAqBjV,EAAO++E,EAAsBhuG,UACxF2H,EAAW,QAETjL,KAAKwK,MAAMtN,cACZ,mBAIA,0CAHH+N,EAASglG,oBAAsB19E,YACOvyB,KAAKS,cAAc4gF,iBAAiBrhF,KAAKC,MAAMO,YAAYkE,KAAKhB,MAAMyqG,GAAiB,kBAA7HljG,EAASmlG,qGAWbpwG,KAAK6L,SAASZ,uIAgsBR,IAAAgD,EAAAjO,KAEN,IAAKA,KAAKC,MAAMoN,gBAAkBrN,KAAKC,MAAMO,YAC3C,OAAO,KAGT,IAAMuyG,EAAoB/yG,KAAKC,MAAMO,YAAYuyG,kBAC3Cr+D,EAAmB10C,KAAKS,cAAcG,gBAAgB,CAAC,aAAaZ,KAAKC,MAAMgH,iBAAiB,qBAChG+rG,EAAiF,qBAA9ChzG,KAAKC,MAAMO,YAAY2pC,oBAAqCnqC,KAAKC,MAAMO,YAAY2pC,mBACtHoS,EAA0Bv8C,KAAKS,cAAcG,gBAAgB,CAAC,WAAW,UAAU,UAAU,6BAA+BoyG,EAE5HC,EAAwBjzG,KAAKS,cAAcG,gBAAgB,CAAC,WAAW,UAAU,kBAAkB,cAAgBmyG,GAAqBr+D,EACxIkI,EAAkBq2D,GAAyBjzG,KAAKwK,MAAMoyC,iBAAyC,WAAtB58C,KAAKwK,MAAMtN,OAEpFg2G,EAA4BlzG,KAAKC,MAAM4oC,UAAY7oC,KAAKwK,MAAMslG,oBAAoB9vG,KAAKwK,MAAMtN,QAC7FwsC,EAAYwpE,GAA6BlzG,KAAKwK,MAAM+7B,wBACpDjM,EAAqC,YAAtBt6B,KAAKwK,MAAMtN,OAAuB8C,KAAKC,MAAM6V,aAAe9V,KAAKC,MAAM0W,kBACtFs0B,EAAcjrC,KAAKwK,MAAM27B,uBAAiEpjC,IAA7C/C,KAAKC,MAAMO,YAAY4W,UAAUgF,QAAwBpc,KAAKC,MAAMO,YAAY4W,UAAUgF,QAAU,KAEjJoxF,EAAcxtG,KAAKS,cAAcG,gBAAgB,CAAC,UAClDowG,EAAoBxD,EAAYhpG,SAAWxE,KAAKS,cAAcG,gBAAgB,CAAC,QAAQ,kBAAkBZ,KAAKC,MAAMO,YAAYkE,KAAKhB,MAAM,YAE3IyvG,EAAenC,GAAqBhxG,KAAKwK,MAAM0lG,qBAA6C,YAAtBlwG,KAAKwK,MAAMtN,OAEjFk2G,EAA2C,YAAtBpzG,KAAKwK,MAAMtN,SAAyB8C,KAAKwK,MAAMu5D,iBAAmBitC,GAAqBhxG,KAAKwK,MAAM09B,eAEvHmrE,EAAkG,YAAtBrzG,KAAKwK,MAAMtN,QAAwB8C,KAAKwK,MAAM0iC,YAAsC,WAAtBltC,KAAKwK,MAAMtN,QAAuB8C,KAAKwK,MAAMglG,WAAc5yD,EACrM02D,EAAmBF,GAAsBpC,GAAqBhxG,KAAKwK,MAAMulG,oBAAsB/vG,KAAKwK,MAAM27B,kBAAoBnmC,KAAKwK,MAAMy7B,gBAAkBjmC,KAAKwK,MAAMqlG,iBAAyC,YAAtB7vG,KAAKwK,MAAMtN,OACpMq2G,EAAkBvC,GAAqBhxG,KAAKwK,MAAMulG,oBAAsB/vG,KAAKwK,MAAM27B,kBAAoBnmC,KAAKwK,MAAMy7B,gBAAkBjmC,KAAKwK,MAAMolG,gBAAwC,WAAtB5vG,KAAKwK,MAAMtN,OAE5Ks2G,GAAkB52D,GAAmBy2D,EACrC3D,EAAc1vG,KAAKwK,MAAMulG,oBAAsBuD,GAAoBtzG,KAAKwK,MAAMklG,eAAiB1vG,KAAKwK,MAAM0lG,qBAAuBlwG,KAAKwK,MAAM09B,gBAAkBloC,KAAKwK,MAAMu5D,kBAAoB/jE,KAAKwK,MAAM27B,kBAAoBnmC,KAAKwK,MAAMy7B,gBAAwC,YAAtBjmC,KAAKwK,MAAMtN,SAAyB8C,KAAKwK,MAAM0iC,WACxSyiE,EAAiB3vG,KAAKwK,MAAMglG,aAAexvG,KAAKwK,MAAMwlG,oBAAsBhwG,KAAKwK,MAAMmlG,gBAEvF8D,EAAoBN,GAAgBnzG,KAAKwK,MAAM4lG,sBAAwBpwG,KAAKwK,MAAMylG,sBAAwBjwG,KAAKwK,MAAM07B,eAErHwtE,EAAsBN,GAAsBpzG,KAAKwK,MAAM0iC,YAAcqP,GAAiD,YAAtBv8C,KAAKwK,MAAMtN,OAC3Gy2G,EAA6BL,GAAoBI,EAEvD,OACEl0G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPqP,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,CAAC,EAAE,KACVqP,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,GAEPkF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM2R,GAAI,GAAV,sBAGA9R,EAAAC,EAAAC,cAAC6lB,GACKvlB,KAAKC,QAGbT,EAAAC,EAAAC,cAACmtC,GAADjtC,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEE+qC,kBAAmBC,EACnBA,YAA6B,OAAhBA,EAAuB,GAAK,KACzCtE,oBAAqB3mC,KAAK2mC,oBAAoB97B,KAAK7K,QAGhDA,KAAKC,MAAMuB,QAKZxB,KAAKwK,MAAMulG,iBACT/vG,KAAKwK,MAAMtN,OACTsC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKrF,MAAO,GACVkF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,EACJtV,cAAe,UAEfpK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM2R,GAAI,GAAV,sBAGA9R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgK,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBrK,EAAAC,EAAAC,cAAC8gB,GAAD,CACE1B,UAAW,CACT/U,EAAE,EACFzP,MAAM,IACNqrC,YAAY,WACV13B,EAAKy4B,UAAU,aAGnBjsB,eAAe,EACfkE,SAAiC,YAAtB3e,KAAKwK,MAAMtN,QAEtBsC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE6lB,GAAI,EACJ7b,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACyrC,GAAD,CACEjZ,YAAa,CACXh1B,OAAO,WAET8U,UAAW,CACTrF,KAAK,OACL1M,MAAM,CACJkiB,GAAG,MAIT3iB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACV4P,WAAY,GAFd,aAQJpP,EAAAC,EAAAC,cAAC8gB,GAAD,CACE1B,UAAW,CACT/U,EAAE,EACFzP,MAAM,IACNqrC,YAAY,WACV13B,EAAKy4B,UAAU,YAGnBjsB,eAAe,EACfkE,SAAiC,WAAtB3e,KAAKwK,MAAMtN,OACtBwhB,YAAc1e,KAAKwK,MAAMglG,YAAcxvG,KAAKwK,MAAMolG,gBAElDpwG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE6lB,GAAI,EACJ7b,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACyrC,GAAD,CACEjZ,YAAa,CACXh1B,OAAO,UAET8U,UAAW,CACTrF,KAAK,OACL1M,MAAM,CACJkiB,GAAG,MAIT3iB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACV4P,WAAY,GAFd,cAWN+kG,EACEn0G,EAAAC,EAAAC,cAAC8gB,GAAD,CACE1B,UAAW,CACT4W,GAAG,EACHvU,GAAG,EACHjC,GAAG,EACHxQ,QAAQ,OACR/E,WAAW,SACXC,cAAc,SACdC,eAAe,SACfsf,GAAGnpB,KAAKwK,MAAM2lG,oBAAsB,EAAI,IAG1C3wG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPqP,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2M,GAAI,EACJoZ,UAAW,UACXuB,WAAY,UACZ7I,QAASpe,KAAKuwG,2BAEZvwG,KAAKwK,MAAM2lG,oBAAsB,OAAS,OAN9C,qBAQA3wG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE0M,KAAM,QACNlO,MAAO,WACPwO,KAAM3M,KAAKwK,MAAM2lG,oBAAsB,cAAgB,mBAIzDnwG,KAAKwK,MAAM2lG,qBACT3wG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,EACJtV,cAAe,UAGb0pG,GACE9zG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgK,WAAY,SACZE,eAAgB,OAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEynB,UAAU,EACVhvB,SAAU4H,KAAKwK,MAAMomC,WACrB7/B,MAAK,4BACL8iB,QAAS7zB,KAAKwK,MAAM0lG,oBACpB1uF,SAAW,SAAAxT,GAAC,OAAIC,EAAKwiG,mBAAmBziG,EAAElO,OAAO+zB,YAEnDr0B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+lB,UAAW,UACXuB,WAAY,UACZ7I,QAAU,SAAApQ,GAAC,OAAIC,EAAKhO,MAAMgpB,iBAAiB,kBAAkBhb,EAAKxN,cAAcG,gBAAgB,CAAC,WAAW,yBAH9G,gBAUJ8yG,GACEl0G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgK,WAAY,SACZE,eAAgB,OAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEynB,UAAU,EACVrW,MAAK,qBACL8iB,QAAS7zB,KAAKwK,MAAMomC,WACpBx4C,SAAU4H,KAAKwK,MAAM0lG,oBACrB1uF,SAAW,SAAAxT,GAAC,OAAIC,EAAKyiG,eAAe1iG,EAAElO,OAAO+zB,YAE/Cr0B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwc,UAAW,SACXC,QAASpc,KAAKS,cAAcG,gBAAgB,CAAC,WAAW,gBAExDpB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE0M,KAAM,MACNlO,MAAO,YACPwO,KAAM,oBASxBnN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPsP,cAAe,UAGb0pG,GACE9zG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPsP,cAAe,SACfC,eAAgB,UAEhBrK,EAAAC,EAAAC,cAAC8gB,GAAD,CACE3B,WAAW,EACXC,UAAW,CACTsC,GAAG,EACHD,GAAG,EACHjC,GAAG,EACHxQ,QAAQ,OACR/E,WAAW,SACXC,cAAc,SACdC,eAAe,WAGjBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPqP,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEV,OAAQ,QACRsS,IAAKi8F,EAAYjkE,OAAO9M,QAE1Bj9B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,EACJiC,GAAI,EACJniB,SAAU,EACVb,MAAO,YACPkT,UAAW,UALb,kEAOkErR,KAAKwK,MAAM8jE,SAAWtuE,KAAKwK,MAAM8jE,SAAS99D,QAAQ,GAAK,IAPzH,KAQEhR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2M,GAAI,EACJoZ,UAAW,UACXuB,WAAY,UACZ7I,QAAU,SAAApQ,GAAC,OAAIC,EAAKhO,MAAMgpB,iBAAiB,kBAAkBhb,EAAKxN,cAAcG,gBAAgB,CAAC,WAAW,yBAJ9G,cASFpB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,EACJkI,UAAU,EACVrW,MAAK,mBACL8iB,QAAS7zB,KAAKwK,MAAM0lG,oBACpB1uF,SAAW,SAAAxT,GAAC,OAAIC,EAAKwiG,mBAAmBziG,EAAElO,OAAO+zB,eAKnD7zB,KAAKwK,MAAMklG,cAAgB1vG,KAAKwK,MAAM0lG,sBAAwBlwG,KAAKwK,MAAM0iC,YACzE1tC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE0R,UAAW,SACX4V,WAAY,UACZ7I,QAAU,SAAApQ,GAAC,OAAIC,EAAKqiG,gBAAe,KAHrC,+BAK+BtwG,KAAKC,MAAMoN,gBAOlDqmG,GACEl0G,EAAAC,EAAAC,cAAC8gB,GAAD,CACE1B,UAAW,CACTsC,GAAG,EACHD,GAAG,EACHjC,GAAG,EACHxQ,QAAQ,OACR/E,WAAW,SACXC,cAAc,SACdC,eAAe,WAGjBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPqP,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE0M,KAAM,QACNlO,MAAO,WACPwO,KAAM,gBAERnN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,EACJiC,GAAI,EACJniB,SAAU,EACVb,MAAO,WACPkT,UAAW,UALb,+FAUF7R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,EACJkI,UAAU,EACVrW,MAAK,qBACL8iB,QAAS7zB,KAAKwK,MAAMomC,WACpBpvB,SAAW,SAAAxT,GAAC,OAAIC,EAAKyiG,eAAe1iG,EAAElO,OAAO+zB,cASxDq/E,IAA8BxD,IAAgB1vG,KAAKwK,MAAMu5D,gBAC1DvkE,EAAAC,EAAAC,cAAC8gB,GAAD,CACE1B,UAAW,CACTsC,GAAG,EACHD,GAAG,EACHqE,GAAG,EACH9W,QAAQ,OACR/E,WAAW,SACXC,cAAc,SACdC,eAAe,WAIf7J,KAAKwK,MAAM+7B,yBAA2BvmC,KAAKwK,MAAM+kG,QAAQvvG,KAAKwK,MAAMtN,SAAW8C,KAAKwK,MAAMslG,oBAAoB9vG,KAAKwK,MAAMtN,QAAQy1G,SAC/HnzG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPqP,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE0M,KAAM,QACNM,KAAM,UACNxO,MAAO,aAETqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,EACJlgB,SAAU,EACVb,MAAO,WACPkT,UAAW,UAJb,6HAS2C,kBAA3CrR,KAAKS,cAAcugE,qBAA2ChhE,KAAKwK,MAAM+7B,wBAC3E/mC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPqP,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE0M,KAAM,QACNM,KAAM,UACNxO,MAAO,aAETqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,EACJlgB,SAAU,EACVb,MAAO,WACPkT,UAAW,UAJb,kGAUF7R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,EACJlgB,SAAU,EACVb,MAAO,WACPkT,UAAW,UAJb,yBAMyBrR,KAAKwK,MAAM+7B,wBAA0B,YAAc,WAN5E,QAM6FvmC,KAAKwK,MAAMtN,OANxG,KAMiHsC,EAAAC,EAAAC,cAAA,WAE7GM,KAAKwK,MAAM+7B,0BAA4BvmC,KAAKwK,MAAMslG,oBAAoB9vG,KAAKwK,MAAMtN,QAAQy1G,UAAzF,6DAAAluG,OAAkKzE,KAAKwK,MAAMtN,OAA7K,8BAKRsC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,EACJkI,UAAU,EACVyM,QAAS7zB,KAAKwK,MAAM+7B,wBACpB/kB,SAAW,SAAAxT,GAAC,OAAIC,EAAK65B,8BAA8B95B,EAAElO,OAAO+zB,UAC5D9iB,MAAK,GAAAtM,OAAKzE,KAAKS,cAAcuQ,WAAWhR,KAAKwK,MAAMtN,QAA9C,6BAKTq2G,GAAmBvzG,KAAKwK,MAAMglG,WAC5BhwG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPsP,cAAe,SACfC,eAAgB,UAEhBrK,EAAAC,EAAAC,cAAC8gB,GAAD,CACE3B,WAAW,EACXC,UAAW,CACTsC,GAAG,EACHD,GAAG,EACHjC,GAAG,EACHxQ,QAAQ,OACR/E,WAAW,SACXC,cAAc,SACdC,eAAe,WAGjBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPqP,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEV,OAAQ,QACRsS,IAAKi8F,EAAYjkE,OAAO9M,QAE1Bj9B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,EACJiC,GAAI,EACJniB,SAAU,EACVb,MAAO,YACPkT,UAAW,UALb,0CAQE7R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2M,GAAI,EACJoZ,UAAW,UACXuB,WAAY,UACZ7I,QAAU,SAAApQ,GAAC,OAAIC,EAAKhO,MAAMgpB,iBAAiB,kBAAkBhb,EAAKxN,cAAcG,gBAAgB,CAAC,WAAW,yBAJ9G,cAUAZ,KAAKwK,MAAMglG,WACThwG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,EACJkI,UAAU,EACVrW,MAAK,oBACL8iB,QAAS7zB,KAAKwK,MAAMwlG,mBACpBxuF,SAAW,SAAAxT,GAAC,OAAIC,EAAKuiG,kBAAkBxiG,EAAElO,OAAO+zB,cAMxD7zB,KAAKwvG,WACHhwG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE0R,UAAW,SACX4V,WAAY,UACZ7I,QAAU,SAAApQ,GAAC,OAAIC,EAAKoiG,mBAAkB,KAHxC,4BAK4BrwG,KAAKC,MAAMoN,gBAOxB,WAAtBrN,KAAKwK,MAAMtN,QAAuB8C,KAAKwK,MAAMouE,eAAiB+2B,GAC7DnwG,EAAAC,EAAAC,cAAC8gB,GAAD,CACE1B,UAAW,CACTsC,GAAG,EACHD,GAAG,EACHjC,GAAG,EACHxQ,QAAQ,OACR/E,WAAW,SACXC,cAAc,SACdC,eAAe,WAGjBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPqP,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE0M,KAAM,QACNlO,MAAO,WACPwO,KAAM,oBAERnN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwhB,GAAI,EACJniB,SAAU,EACVb,MAAO,WACPkT,UAAW,UAJb,sCAQA7R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgK,WAAY,SACZC,cAAe,OAEfpK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACV4P,WAAY,EACZzQ,MAAO,YACPkT,UAAW,SACX4V,WAAY,aAEXjnB,KAAKwK,MAAMouE,cAAcpoE,QAAQ,GAPpC,IAOyCxQ,KAAKC,MAAMoN,eAEpD7N,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwc,UAAW,MACXC,QAASpc,KAAKS,cAAcG,gBAAgB,CAAC,WAAW,iBAExDpB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2M,GAAI,EACJD,KAAM,MACNlO,MAAO,YACPwO,KAAM,oBAQK,WAAtB3M,KAAKwK,MAAMtN,QAAuB+1G,GAAyBtD,GAC1DnwG,EAAAC,EAAAC,cAAC8gB,GAAD,CACE1B,UAAW,CACTsC,GAAG,EACHD,GAAG,EACHjC,GAAG,EACHxQ,QAAQ,OACR/E,WAAW,SACXC,cAAc,SACdC,eAAe,WAGjBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPqP,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE0M,KAAM,QACNlO,MAAO,WACPwO,KAAM,gBAERnN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,EACJiC,GAAI,EACJniB,SAAU,EACVb,MAAO,WACPkT,UAAW,UALb,qBAOqBrR,KAAKC,MAAMoN,cAPhC,wFAOqIrN,KAAKC,MAAMovE,kBAAoBrvE,KAAKC,MAAMovE,iBAAiB34D,GAAG,GAA9D,QAAAjS,OAA2EzE,KAAKC,MAAMovE,iBAAiB7+D,QAAQ,GAA/G,KAAuH,KAP5P,MAUFhR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,EACJkI,UAAU,EACVyM,QAAS7zB,KAAKwK,MAAMoyC,gBACpB7rC,MAAK,gCACLyQ,SAAW,SAAAxT,GAAC,OAAIC,EAAK0iG,sBAAsB3iG,EAAElO,OAAO+zB,aAMzD7zB,KAAKwK,MAAMu5D,gBAAwC,YAAtB/jE,KAAKwK,MAAMtN,OACvCsC,EAAAC,EAAAC,cAAC8gB,GAAD,CACE1B,UAAW,CACT/U,EAAE,EACFmV,GAAG,IAGL1f,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgK,WAAY,SACZC,cAAe,UAEfpK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE0M,KAAM,QACNM,KAAM,UACNxO,MAAO,aAETqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,EACJlgB,SAAU,EACVb,MAAO,WACPkT,UAAW,UAJb,gBAMgBrR,KAAKC,MAAMoN,cAN3B,mGAUArN,KAAKwK,MAAM09B,eAAuC,YAAtBloC,KAAKwK,MAAMtN,QA0DvCwyG,GAAe2D,IAClBrzG,KAAKwK,MAAMs3B,WAAW9hC,KAAKwK,MAAMtN,QAAQqpB,QA0PxC/mB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,EACJtV,cAAe,UAEfpK,EAAAC,EAAAC,cAAC2rC,GAAD,CACE7I,KAAMxiC,KAAKC,MAAMuiC,KACjB+C,kBAAmBvlC,KAAKulC,kBAAkB16B,KAAK7K,MAC/C2sB,KAAM3sB,KAAKwK,MAAMs3B,WAAW9hC,KAAKwK,MAAMtN,QAAQ04B,OAC/CqP,WAAU,cAAAxgC,OAAgBzE,KAAKwK,MAAMtN,OAA3B,eACVgoC,SAAQ,GAAAzgC,OAAKzE,KAAKS,cAAcuQ,WAAWhR,KAAKwK,MAAMtN,QAA9C,oBAlQZsC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,EACJtV,cAAe,UAGb4pG,GACEh0G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,EACJhX,MAAO,EACPsP,cAAe,WAiCZ0wB,GAAgBt6B,KAAKC,MAAM2zG,sBAC1Bp0G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,EACJhX,MAAO,GAGL0F,KAAKwK,MAAM0iG,iBAAmBuG,GAC5Bj0G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,EACJhX,MAAO,GAEPkF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgK,WAAY,SACZC,cAAe,OAEfpK,EAAAC,EAAAC,cAACC,EAAA,EAAD,6BAGAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwc,UAAW,MACXC,QAAO,yDAEP5c,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2M,GAAI,EACJD,KAAM,MACNlO,MAAO,YACPwO,KAAM,kBAIZnN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,EACJvV,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAGd,CAAC,GAAI,GAAI,EAAE,GAAGqR,IAAK,SAAAk2C,GAAQ,OACzB5xD,EAAAC,EAAAC,cAACqsC,GAAD,CACEjtB,UAAW,CACT/U,EAAE,GAEJO,UAAW,CACTtL,SAAS,GAEX6iC,WAAYuvB,EACZ7zC,IAAG,YAAA9Y,OAAc2sD,GACjBzrB,YAAa,kBAAI13B,EAAKigG,eAAe98C,IACrCzyC,SAAU1Q,EAAKzD,MAAMyiG,cAAgBzhG,WAAW4lD,SAQ9D5xD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPqP,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAGhB4pG,EACEj0G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACP63B,SAAU,MACVxoB,WAAY,SACZC,cAAe,OAEfpK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACV4P,WAAY,EACZyC,UAAW,QACX6L,MAAO,CACL6L,WAAW,UAEb5qB,MAAQ6B,KAAKwK,MAAM4lG,qBAAqB15F,GAAG,GAAK1W,KAAKC,MAAM1G,MAAMR,OAAOkE,aAAaU,OAAOG,OAASkC,KAAKC,MAAM1G,MAAMR,OAAOkE,aAAaU,OAAOC,WAGzE,IAAtE4N,WAAWxL,KAAKwK,MAAM4lG,qBAAqB/qG,MAAM,KAAKmL,QAAQ,IAC5D,cADF,GAAA/L,OAEMzE,KAAKwK,MAAM4lG,qBAAqB15F,GAAG,GAAK,aAAe,UAF7D,KAAAjS,OAE2EzE,KAAKwK,MAAM4lG,qBAAqB/qG,MAAM,KAAKs8D,MAAMnxD,QAAQ,GAFpI,MAKJhR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwc,UAAW,MACXC,QAASpc,KAAKS,cAAcG,gBAAgB,CAAC,WAAW,wBAExDpB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2M,GAAI,EACJD,KAAM,MACNlO,MAAO,YACPwO,KAAM,iBAGVnN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2M,GAAI,EACJnO,MAAO,YACP8oB,WAAY,UACZ7I,QAASpe,KAAKktG,iBAJhB,WASAltG,KAAKC,MAAM2zG,qBACbp0G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgK,WAAY,SACZC,cAAe,OAEfpK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACV4P,WAAY,EACZzQ,MAAO,YACPkT,UAAW,QACX4V,WAAY,aALd,oBAOoBjnB,KAAKC,MAAM2zG,oBAAoBvuG,MAAM,KAAKmL,QAAQ,GAPtE,KASAhR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwc,UAAW,MACXC,QAAO,6DAEP5c,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2M,GAAI,EACJD,KAAM,MACNlO,MAAO,YACPwO,KAAM,kBAOd2tB,GACE96B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACV4P,WAAY,EACZzQ,MAAO,YACPkT,UAAW,QACX4V,WAAY,YACZ7I,QAAU,SAACpQ,GAAD,OAAOC,EAAK+4B,uBAAuB,OAE5C1M,EAAa9pB,QAAQ,GARxB,IAQ6BxQ,KAAKC,MAAMoN,iBAQlD7N,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgZ,IAAK,EACLvP,KAAM,SACNge,UAAU,EACVnoB,OAAQ,QACRK,aAAc,EACdsP,WAAY,IACZ4O,UAAW,kBACX8J,YAAW,gBACX9F,SAAUxhB,KAAK4mC,iBAAiB/7B,KAAK7K,MACrCqnB,OAAM,aAAA5iB,OAAelL,EAAMR,OAAO4D,SAClCyR,MAAoD,OAA7CpO,KAAKwK,MAAM82B,WAAWthC,KAAKwK,MAAMtN,QAAmB8C,KAAKS,cAAciB,MAAM1B,KAAKwK,MAAM82B,WAAWthC,KAAKwK,MAAMtN,SAASsT,UAAY,KAE5IhR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,EACJvV,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAGd,CAAC,GAAG,GAAG,GAAG,KAAKqR,IAAK,SAAA2mB,GAAU,OAC5BriC,EAAAC,EAAAC,cAACqsC,GAAD,CACElK,WAAYA,EACZtkB,IAAG,YAAA9Y,OAAco9B,GACjB8D,YAAa,kBAAI13B,EAAK+4B,uBAAuBnF,IAC7CljB,SAAU1Q,EAAKzD,MAAM47B,oBAAoBn4B,EAAKzD,MAAMtN,UAAY6O,SAAS81B,SASrFwxE,GACE7zG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEkK,eAAgB,SAChBqV,GAAK09B,EAAkB,EAAI,GAE3Bp9C,EAAAC,EAAAC,cAACmsC,GAAD,CACEhmB,YAAa,CACXvrB,MAAM,OACN4E,SAAS,CAAC,EAAE,IACZge,MAAM,CACJyO,cAAc,cAEhBvzB,SAAS4H,KAAKwK,MAAM07B,gBAEtB7nB,YAAare,KAAKwK,MAAM07B,eAAiB,KAAOlmC,KAAKinC,cAAcp8B,KAAK7K,OAEvEA,KAAKwK,MAAMtN,OAAS0/C,EAAkB,cAAgB,OA9SnEp9C,EAAAC,EAAAC,cAAC8gB,GAAD,CACE1B,UAAW,CACT/U,EAAE,EACFmV,GAAG,IAIHlf,KAAKwK,MAAMs3B,WAAX,SAAoC9hC,KAAKwK,MAAMs3B,WAAX,QAAiCvb,QACnE/mB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEiK,cAAe,UAEfpK,EAAAC,EAAAC,cAAC2rC,GAAD,CACE7I,KAAMxiC,KAAKC,MAAMuiC,KACjB0C,SAAQ,uBACRD,WAAU,gCACVtY,KAAM3sB,KAAKwK,MAAMs3B,WAAX,QAAiClM,OACvC2P,kBAAmBvlC,KAAKulC,kBAAkB16B,KAAK7K,SAInDR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgK,WAAY,SACZC,cAAe,UAEfpK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE0M,KAAM,QACNM,KAAM,WACNxO,MAAO,aAETqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,EACJlgB,SAAU,EACVb,MAAO,WACPkT,UAAW,UAGTrR,KAAKwK,MAAM0lG,oBAAX,MAAAzrG,OACQzE,KAAKS,cAAcuQ,WAAWhR,KAAKwK,MAAMtN,QADjD,UAAAuH,OACiEzE,KAAKC,MAAMoN,cAD5E,oEAEEq8B,EAAS,MAAAjlC,OACHzE,KAAKS,cAAcuQ,WAAWhR,KAAKwK,MAAMtN,QADtC,UAAAuH,OACsDzE,KAAKC,MAAMoN,cADjE,yFAAA5I,OAGHzE,KAAKS,cAAcuQ,WAAWhR,KAAKwK,MAAMtN,QAHtC,UAAAuH,OAGsDzE,KAAKC,MAAMoN,cAHjE,6DAMf7N,EAAAC,EAAAC,cAACmsC,GAAD,CACEhmB,YAAa,CACX3G,GAAG,EACH5kB,MAAM,CAAC,EAAE,KAEX+jB,YAAare,KAAK8wG,aAAajmG,KAAK7K,OALtC,cAwRZ,KAEJR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,EACJtV,cAAe,UAEfpK,EAAAC,EAAAC,cAACyM,GAAD,CACEzC,UAAW,CACTE,cAAc,OAEhBS,YAAa,CACXgC,KAAK,QAEP/B,UAAW,CACTgC,GAAG,GAELrT,KAAM,2BA95BVuG,EAAAC,EAAAC,cAACm0G,GACK7zG,KAAKC,SA46BjBszG,GAAmBvzG,KAAKwK,MAAMwlG,oBAC5BxwG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,EACJ5kB,MAAO,GAEPkF,EAAAC,EAAAC,cAACo0G,GACK9zG,KAAKC,QAMfyvG,GACElwG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,EACJ5kB,MAAO,CAAC,EAAE,IACVqP,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACq0G,GAADn0G,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEEg/B,YAAY,EACZ5B,iBAAkB,GAClBI,SAAUz9B,KAAKC,MAAMoN,kBAK7B7N,EAAAC,EAAAC,cAACs0G,GAAD,CACE9E,iBAAiB,EACjBh+F,KAAI,mBACJpX,MAAK,mBACL0H,QAASxB,KAAKC,MAAMuB,QACpBq9B,WAAY7+B,KAAK++B,WACjBx+B,UAAWP,KAAKC,MAAMoN,cACtBk0B,OAAmC,UAA3BvhC,KAAKwK,MAAMilG,YACnBx2G,KAAI,+DAAAwL,OAAiEzE,KAAKwK,MAAMoJ,SAA5E,mCAAAnP,OAAsHzE,KAAKC,MAAMoN,cAAjI,cACJyhG,MAAK,eAAArqG,OAAiBzE,KAAKwK,MAAMoJ,SAA5B,gBAAAnP,OAAmDzE,KAAKC,MAAMoN,cAA9D,8BAAA5I,OAAwGzE,KAAKS,cAAcG,gBAAgB,CAAC,YAA5I,2DAl8DaT,aCkCb8zG,oLA7CX,IAAMn1F,EAAYlf,OAAOC,OAAO,CAC9BuhB,GAAG,EACH9mB,MAAM,OACN6mB,GAAG,CAAC,OAAO,IACXnhB,KAAKC,MAAM6e,WAEb,OACGtf,EAAAC,EAAAC,cAAC8gB,GAAD,CACE1B,UAAWA,EACXrE,eAAe,EACf4D,YAAare,KAAKC,MAAMoe,aAExB7e,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE6lB,GAAI,EACJ7b,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwiB,GAAI,EACJpY,EAAG,CAAC,MAAM,OACVzK,aAAc,MACdqK,WAAY,SACZE,eAAgB,SAChBzL,gBAAkB4B,KAAKC,MAAM1G,MAAMR,OAAOkE,aAAaS,SAASd,QAEhE4C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE0yB,MAAO,SACPl0B,MAAO,SACPwO,KAAM3M,KAAKC,MAAMiR,KACjB7E,KAAOrM,KAAKC,MAAM+K,SAAW,QAAU,WAG3CxL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEiP,WAAY,EACZ5P,SAAU,CAAC,EAAE,IAEZgB,KAAKC,MAAMhH,eAvCIkH,aC+Wd+zG,8MAvWb1pG,MAAQ,CACN2pG,SAAS,KACTpnG,UAAU,KACVf,WAAW,KACXs1B,WAAW,IACX8yE,cAAc,mBAIhB3zG,cAAgB,gFAGVT,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,4JAK9CD,KAAKgJ,+RAIkBhJ,KAAKS,cAAcguF,YAAYzuF,KAAKC,MAAMO,qBAA3D2zG,YACWA,EAASxyG,SACxB3B,KAAK6L,SAAS,CACZsoG,YACA,WACAlrG,EAAKorG,mMAKctpG,EAAUqC,mEACjCpN,KAAKgJ,YAEgB+B,EAAUsC,gBAAkBrN,KAAKC,MAAMoN,eAE1DrN,KAAKosB,6JAsDP,IAlDS,IAAAne,EAAAjO,KAGHw3B,EADSx3B,KAAKS,cAAciB,MAAM1B,KAAKwK,MAAM82B,YACvBj8B,MAAMrF,KAAKwK,MAAM2pG,SAAS7uG,IAAI,MAEpDgvG,EAAc9oG,WAAWgsB,EAAalyB,IAAI,KAC1CivG,EAAgB/oG,WAAWgsB,EAAalyB,IAAI,IAC5CkvG,EAAgBhpG,WAAWgsB,EAAalyB,IAAI,IAC5CmvG,EAAajpG,WAAWgsB,EAAalyB,IAAI,IAEzCyH,EAAY,CAChB,CACE2pB,KAAK,EAAE,GACP3lB,MAAM,QACN3C,MAAMkmG,EACNxL,MAAMwL,EACNn2G,MAAM6B,KAAKS,cAAcG,gBAAgB,CAAC,QAAQ,SAASZ,KAAKC,MAAMoN,cAAc,QAAQ,QAAQyD,KAAK,KACzG4jG,WAAW,OAAO10G,KAAKS,cAAcG,gBAAgB,CAAC,QAAQ,SAASZ,KAAKC,MAAMoN,cAAc,QAAQ,QAAQyD,KAAK,KAAK,KAE5H,CACE4lB,KAAK,IACL3lB,MAAM,WACN3C,MAAMmmG,EACNI,OAAOJ,EACPp2G,MAAM6B,KAAKS,cAAcG,gBAAgB,CAAC,QAAQ,SAASZ,KAAKC,MAAMoN,cAAc,QAAQ,QAAQyD,KAAK,KACzG8jG,YAAY,OAAO50G,KAAKS,cAAcG,gBAAgB,CAAC,QAAQ,SAASZ,KAAKC,MAAMoN,cAAc,QAAQ,QAAQyD,KAAK,KAAK,KAE7H,CACE4lB,KAAK,GACL3lB,MAAM,WACN3C,MAAMomG,EACNK,OAAOL,EACPr2G,MAAM6B,KAAKS,cAAcG,gBAAgB,CAAC,QAAQ,SAASZ,KAAKC,MAAMoN,cAAc,QAAQ,QAAQyD,KAAK,KACzGgkG,YAAY,OAAO90G,KAAKS,cAAcG,gBAAgB,CAAC,QAAQ,SAASZ,KAAKC,MAAMoN,cAAc,QAAQ,QAAQyD,KAAK,KAAK,KAE7H,CACE4lB,KAAK,EACL3lB,MAAM,OACNgkG,KAAKN,EACLrmG,MAAMqmG,EACNt2G,MAAM6B,KAAKS,cAAcG,gBAAgB,CAAC,QAAQ,SAASZ,KAAKC,MAAMoN,cAAc,QAAQ,QAAQyD,KAAK,KACzGkkG,UAAU,OAAOh1G,KAAKS,cAAcG,gBAAgB,CAAC,QAAQ,SAASZ,KAAKC,MAAMoN,cAAc,QAAQ,QAAQyD,KAAK,KAAK,MAIzHglC,EAA0B91C,KAAKS,cAAcG,gBAAgB,CAAC,QAAQ,SAASZ,KAAKC,MAAMoN,cAAc,QAAQ,4BAG9GgiB,EAAYolF,EADG,EAEfnlF,EAAc,CAAC,GACZnf,EAAE,EAAEA,GAHQ,EAGQA,IAAI,CAC/B,IAAMof,EAAapf,EAAEkf,EACrBC,EAAY7e,KAAK8e,GAGnB,IAAMvjB,EAAa,CACjB7M,QAAS,GACTqO,SAAS,EACTi2F,QAAS,QAETY,eAAgB,GAChBC,gBAAiB,GACjBl9F,KAAM,CAAC,QAAQ,SAAS,SAAS,QACjCrO,OAAQ,SAAAgxB,GAAA,IAAGrZ,EAAHqZ,EAAGrZ,GAAH,OAAAqZ,EAAO7d,KAAe,GAAAzH,OAAIiM,EAAJ,WAC9BK,MAAO,SAAAjD,GAAC,OAAIG,EAAKxN,cAAc8I,iBAAiBuE,EAAEM,MAAM,EAAE,GAAG,IAAIH,EAAKhO,MAAMoN,eAC5E+2F,eAAgBtuD,EAA0B,CAAEpmC,KAAM,QAASC,UAAW,CAAEmmC,IAA8B,KACtGr7B,eAAc,EACdkpF,SAAS,EACTr0E,cAEAtV,SAAS,CACPhB,OAAQ,SAAA1K,GAAC,OAAIL,EAAKxN,cAAc8I,iBAAiB+E,EAAE,EAAE,IACrD+hB,WAAWf,EACXY,OAAQ,OACRF,SAAU,EACVC,YAAa,EACbK,aAAc,EACdvzB,OAAQ,GACRqzB,eAAgB,UAElBlW,WAAW,CACTnd,OAAQ,GACRizB,SAAS,EACTC,YAAa,GACbC,OAAQ,UAEV32B,MAAM,CACJoV,OAAO,CACL1V,KAAK,CACH+F,SAAS,GACT4P,WAAW,IACXiM,KAAKthB,EAAMR,OAAOoB,QAClB0U,WAAYtV,EAAMS,MAAME,YAG5Bw2B,KAAM,CACJC,MAAO,CACL13B,KAAM,CACJ+F,SAAS,GACT4P,WAAW,IACXiM,KAAKthB,EAAMR,OAAOgE,OAClB8R,WAAYtV,EAAMS,MAAME,aAI9B02B,KAAM,CACJC,KAAM,CACJC,OAAQ,UAAWC,gBAAiB,SAI1CnhB,OAAQ5P,KAAKC,MAAM+K,SAAW,CAAE6E,IAAK,EAAGC,MAAO,EAAGC,OAAQ,GAAIC,KAAM,GAAM,CAAEH,IAAK,GAAIC,MAAO,EAAGC,OAAQ,GAAIC,KAAM,KAGnHhQ,KAAK6L,SAAS,CACZkB,YACAf,wDAIagC,GACf,IAAIszB,EAAatzB,EAAElO,OAAOsO,MAAMtL,SAAWnB,MAAMqM,EAAElO,OAAOsO,OAASsK,KAAKC,IAAI3Y,KAAKwK,MAAM4pG,cAAc5oG,WAAWwC,EAAElO,OAAOsO,QAAU,EACnIkzB,EAAathC,KAAKS,cAAciB,MAAM4/B,GACtCthC,KAAK6L,SAAS,CACZy1B,gDAIK,IAAAhc,EAAAtlB,KAEP,IAAKA,KAAKC,MAAMoN,gBAAkBrN,KAAKC,MAAMO,YAC3C,OAAO,KAGT,IACMgrG,EADmBxrG,KAAKS,cAAcG,gBAAgB,CAAC,YAAY,OAAO,aAClCZ,KAAKS,cAAcG,gBAAgB,CAAC,YAAY,OAAO,YAErG,OACEpB,EAAAC,EAAAC,cAAC8gB,GAAD,CACE1B,UAAW,CACT/U,EAAE,CAAC,EAAE,KAGPvK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPsP,cAAe,CAAC,SAAS,QAEzBpK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,CAAC,EAAE,IACVsP,cAAe,SACfC,eAAgB,cAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgK,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACwiB,GAAD,CACExe,MAAO1D,KAAKC,MAAMoN,cAClB2E,UAAW,CACTrF,KAAK,OACL1M,MAAM,CACJqR,GAAG,EACHrS,OAAO,YAIbO,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACVb,MAAO,WACPkT,UAAW,UAHb,oFAKqFrR,KAAKwK,MAAM2pG,SAAX,GAAA1vG,OAAyBzE,KAAKwK,MAAM2pG,SAAS3jG,QAAQ,GAArD,KAA6D,KAE9Ig7F,GACEhsG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEud,MAAO,CACLxO,QAAQ,cACRumG,cAAc,WAGhBz1G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwc,UAAW,MACXC,QAASpc,KAAKS,cAAcG,gBAAgB,CAAC,WAAW,aAExDpB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2M,GAAI,EACJK,KAAM,OACNN,KAAM,MACNlO,MAAO,kBAOrBqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,EACJtV,cAAe,UAEfpK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgZ,IAAK,EACLE,IAAK7Y,KAAKwK,MAAM4pG,cAChBhrG,KAAM,SACNge,UAAU,EACVnoB,OAAQ,CAAC,MAAM,SACfK,aAAc,EACdsP,WAAY,IACZyC,UAAW,SACXmM,UAAW,kBACXgE,SAAUxhB,KAAK4mC,iBAAiB/7B,KAAK7K,MACrCqnB,OAAM,aAAA5iB,OAAelL,EAAMR,OAAO4D,SAClC2qB,YAAW,UAAA7iB,OAAYzE,KAAKC,MAAMoN,cAAc4U,cAArC,WACX7T,MAAOpO,KAAKwK,MAAM82B,aAAe3/B,MAAM3B,KAAKwK,MAAM82B,YAActhC,KAAKwK,MAAM82B,WAAa,MAG5F9hC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,EACJrV,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACmsC,GAAD,CACEhmB,YAAa,CACXvrB,MAAM,CAAC,EAAE,KAEX+jB,YAAare,KAAKq0G,UAAUxpG,KAAK7K,OAJnC,eAUJR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,CAAC,EAAE,GACP5kB,MAAO,CAAC,EAAE,IACVoW,GAAI,4BAGF1Q,KAAKC,MAAM+K,SACTxL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPsP,cAAe,UAGY,OAAzB5J,KAAKwK,MAAMuC,WAAsB/M,KAAKwK,MAAMuC,UAAUmO,IAAI,SAAC5M,EAAEoe,GAAH,OACxDltB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEyhB,GAAI,EACJoE,GAAI,EACJlrB,MAAO,EACPsP,cAAe,MACf2T,IAAG,YAAA9Y,OAAcioB,IAEjBltB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,IACPqP,WAAY,SACZE,eAAgB,cAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACV4P,WAAY,EACZzQ,MAAO,UAENmQ,EAAEyC,QAGPvR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,IACP6W,SAAU,WACVxH,WAAY,SACZyC,UAAW,CAAC,OAAO,QACnBvC,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEyR,OAAQ,EACRD,SAAU,WACVxH,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACV4P,WAAY,EACZzQ,MAAO,WAENmnB,EAAK7kB,cAAc8I,iBAAiB+E,EAAEF,MAAM,EAAE,GALjD,IAKsDkX,EAAKrlB,MAAMoN,gBAGnE7N,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEmQ,MAAO,EACPxV,MAAOgU,EAAEooB,KACTvlB,SAAU,WACVlS,OAAQ,CAAC,OAAO,QAChBK,aAAc,CAAC,gBAAgB,iBAC/B4d,MAAO,CAAC6B,WAAU,gCAAAta,OAAiC6J,EAAEnQ,MAAnC,iBAAAsG,OAAwD6J,EAAEnQ,MAA1D,qBAQ9BqB,EAAAC,EAAAC,cAAC+R,GAAD7R,OAAAC,OAAA,CACEuJ,KAAMo6F,KACNvkG,OAAQ,IACRgN,YAAY,GACRjM,KAAKwK,MAAMwB,WAJjB,CAKEE,KAAMlM,KAAKwK,MAAMuC,UACjB5B,SAAU,wCA9VIhL,aCyajB+0G,8MApab1qG,MAAQ,CACN2qG,UAAU,GACVr/F,aAAa,GACboyB,cAAc,GACdunE,YAAY,KACZpgC,iBAAiB,GACjB/4D,iBAAiB,GACjBK,kBAAkB,GAClBo8F,kBAAkB,GAClBp5E,mBAAmB,GACnBi6E,oBAAoB,GACpB7D,kBAAiB,KAInBtvG,cAAgB,OAUhBs+B,WAAa,WACX1+B,EAAKwL,SAAS,CACZ4jG,YAAa,UAIjBmB,eAAiB,SAAAnB,GACfpvG,EAAKwL,SAAS,CACZ4jG,4FAfEzvG,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,yKAiB1CD,KAAKC,MAAMuB,+BACPyJ,iBAAejL,KAAKwK,gBACpBxK,KAAKS,cAAc0G,aAAavH,OAAOwH,KAAKpH,KAAKC,MAAM2G,iBAAvD,eAAAmjB,EAAAnqB,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAwE,SAAAC,EAAOyC,GAAP,IAAAlD,EAAAqsE,EAAA9qE,EAAAuQ,EAAAshG,EAAA99F,EAAAq/F,EAAAz9E,EAAAphB,EAAA4xB,EAAAmnC,EAAA,OAAAtuE,EAAAtB,EAAA0B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACtEd,EAAcyI,EAAKhJ,MAAM2G,gBAAgBlD,IACzCmpE,EAA0B,IACRnpE,GAASlD,EAH2CY,EAAAE,KAAA,EAalEqD,QAAQC,IAAI,CACpBqE,EAAKxI,cAAc+V,aAAahW,GAChCyI,EAAKxI,cAAcc,gBAAgBmC,EAAMuF,EAAKhJ,MAAMuB,SACpDyH,EAAKxI,cAAcmwE,iBAAiBpwE,EAAYyI,EAAKhJ,MAAMuB,SAC3DyH,EAAKxI,cAAcuC,oBAAoBxC,EAAYkE,KAAKhB,MAAO,cAC/DuF,EAAKxI,cAAcc,gBAAgBf,EAAYkE,KAAKhB,MAAMuF,EAAKhJ,MAAMuB,SACrEyH,EAAKxI,cAAc2nC,mBAAmB1kC,EAAMlD,EAAYkE,KAAK8B,QAAQyC,EAAKhJ,MAAMuB,SAChFyH,EAAKxI,cAAc85B,6BAA6BtxB,EAAKhJ,MAAMuB,QAAQqrE,EAAwB,SApBjB,OAAA9qE,EAAAX,EAAAK,KAAA6Q,EAAA1S,OAAAmF,EAAA,EAAAnF,CAAAmC,EAAA,GAM1E6xG,EAN0EthG,EAAA,GAO1EwD,EAP0ExD,EAAA,GAQ1E6iG,EAR0E7iG,EAAA,GAS1EolB,EAT0EplB,EAAA,GAU1EgE,EAV0EhE,EAAA,GAW1E41B,EAX0E51B,EAAA,GAY1E+8D,EAZ0E/8D,EAAA,GAuB5ErH,EAASkqG,UAAUzxG,GAASyxG,EAC5BlqG,EAAS6K,aAAapS,GAASoS,EAC/B7K,EAASi9B,cAAcxkC,GAASwkC,EAChCj9B,EAASqL,iBAAiB5S,GAAS4S,EACnCrL,EAASokE,iBAAiB3rE,GAAS2rE,EACnCpkE,EAAS2oG,oBAAoBlwG,GAASkwG,EACtC3oG,EAAS8nG,kBAAkBrvG,GAASlD,EAAYuyG,kBAChD9nG,EAAS0L,kBAAkBjT,GAAS4S,EAAmBrN,EAAKxI,cAAc4C,iBAAiBiT,EAAiBjR,MAAMqyB,GAAgBl3B,EAAY8C,UAAY2F,EAAKxI,cAAciB,MAAM,GA9BvG,yBAAAN,EAAAS,SAAAZ,EAAAjB,SAAxE,gBAAAqC,GAAA,OAAA0nB,EAAAxnB,MAAAvC,KAAAwC,YAAA,WAiCNyI,EAAS0uB,mBAAqB35B,KAAKS,cAAcuV,kBAAkBhW,KAAKC,MAAMO,aAE9EyK,EAAS8kG,kBAAmB,EAC5B/vG,KAAK6L,SAASZ,iQAKhBjL,KAAKgJ,qBACChJ,KAAKo1G,sMAGYrqG,EAAWqC,yEAClCpN,KAAKgJ,YACC6S,EAAsB9Q,EAAU9N,cAAgB+C,KAAKC,MAAMhD,cAAgB2C,OAAO0X,OAAOvM,EAAU9N,cAAc6e,OAAO,SAAAC,GAAE,MAAiB,YAAZA,EAAGpe,SAAqBmF,SAAWlD,OAAO0X,OAAOtX,KAAKC,MAAMhD,cAAc6e,OAAO,SAAAC,GAAE,MAAiB,YAAZA,EAAGpe,SAAqBmF,QAC9NiI,EAAUvJ,UAAYxB,KAAKC,MAAMuB,SAClCqa,IACpB7b,KAAKo1G,uJAIA,IAAAnnG,EAAAjO,KAEDq1G,EAAer1G,KAAKC,MAAMuB,SAAWxB,KAAKwK,MAAM8L,iBAAiBtW,KAAKC,MAAMoN,gBAAkBrN,KAAKS,cAAciB,MAAM1B,KAAKwK,MAAM8L,iBAAiBtW,KAAKC,MAAMoN,gBAAgBqJ,GAAG,GAEvL,OACElX,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,GAEPkF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPgX,GAAI,CAAC,EAAE,GACP3H,WAAY,SACZC,cAAe,MACfC,eAAgB,cAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,IAEPkF,EAAAC,EAAAC,cAACisG,GAAD,CACE3gG,SAAUhL,KAAKC,MAAM+K,SACrBunC,KAAM,CAACvyC,KAAKC,MAAMoN,eAClBgR,YAAc,SAAArQ,GAAC,OAAIC,EAAKhO,MAAMmsC,YAAYn+B,EAAKhO,MAAMgH,mBACrDhO,KAAM+G,KAAKS,cAAcG,gBAAgB,CAAC,aAAaZ,KAAKC,MAAMgH,iBAAiB,aAGvFzH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,GACPuP,eAAgB,YAEhBrK,EAAAC,EAAAC,cAAC41G,GAAD11G,OAAAC,OAAA,CACEqR,KAAM,OACFlR,KAAKC,MAFX,CAGEhH,KAAM,YACNolB,YAAc,SAAArQ,GAAC,OAAIC,EAAK2iG,eAAe,aAI7CpxG,EAAAC,EAAAC,cAACq7B,GAAD,CACEzpB,GAAI,CAAC,EAAE,IADT,oBAKA9R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,GAEPkF,EAAAC,EAAAC,cAAC61G,GAAD31G,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEEk1G,UAAWn1G,KAAKwK,MAAM2qG,UAAUn1G,KAAKC,MAAMoN,eAC3CyI,aAAc9V,KAAKwK,MAAMsL,aAAa9V,KAAKC,MAAMoN,eACjD66B,cAAeloC,KAAKwK,MAAM09B,cAAcloC,KAAKC,MAAMoN,eACnDgiE,iBAAkBrvE,KAAKwK,MAAM6kE,iBAAiBrvE,KAAKC,MAAMoN,eACzDiJ,iBAAkBtW,KAAKwK,MAAM8L,iBAAiBtW,KAAKC,MAAMoN,eACzDsJ,kBAAmB3W,KAAKwK,MAAMmM,kBAAkB3W,KAAKC,MAAMoN,eAC3DumG,oBAAqB5zG,KAAKwK,MAAMopG,oBAAoB5zG,KAAKC,MAAMoN,mBAIjEgoG,GACE71G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,CAAC,EAAE,GACPhX,MAAO,EACPsP,cAAe,SACf8G,GAAI,4BAEJlR,EAAAC,EAAAC,cAACq7B,GAAD,CAAOvV,GAAI,CAAC,EAAE,IAAd,kBACAhmB,EAAAC,EAAAC,cAAC81G,GAAD51G,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEEk1G,UAAWn1G,KAAKwK,MAAM2qG,UAAUn1G,KAAKC,MAAMoN,mBAKjDgoG,GAAgBr1G,KAAKC,MAAMuB,UAAYxB,KAAKwK,MAAMuoG,kBAAkB/yG,KAAKC,MAAMoN,gBAAkBzN,OAAOwH,KAAKpH,KAAKwK,MAAMmvB,oBAAoB72B,OAAO,GACjJtD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPoW,GAAI,gBACJ9G,cAAe,UAEfpK,EAAAC,EAAAC,cAACq7B,GAAD,CAAOvV,GAAI,CAAC,EAAE,IAAd,iBACAhmB,EAAAC,EAAAC,cAAC27B,GAADz7B,OAAAC,OAAA,CACEypB,cAAe1pB,OAAOwH,KAAKpH,KAAKwK,MAAMmvB,oBACtCxR,KAAM,CACJ,CACEruB,MAAM,QACNmG,MAAM,CACJ3F,MAAM,CAAC,IAAK,MAEdmuB,OAAO,CACL,CACE9b,KAAK,OACL1M,MAAM,CACJkiB,GAAG,EACHljB,OAAO,CAAC,QAAQ,WAGpB,CACE0N,KAAK,eAIX,CACE4b,QAAO,EACPzuB,MAAM,UACNmG,MAAM,CACJ3F,MAAM,CAAC,IAAM,MAEfmuB,OAAO,CACL,CACE9b,KAAK,eACL1M,MAAM,CACJqD,SAAUtD,KAAKC,MAAM+K,SAAW,EAAI,MAK5C,CACElR,MAAM,aACNkvB,KAAKhpB,KAAKS,cAAcG,gBAAgB,CAAC,WAAW,8BACpDX,MAAM,CACJ3F,MAAM,CAAC,IAAK,KACZuP,eAAe,CAAC,SAAS,eAE3B4e,OAAO,CACL,CACE9b,KAAK,oBACL1M,MAAM,CACJqD,SAAUtD,KAAKC,MAAM+K,SAAW,EAAI,MAK5C,CACEud,QAAO,EACPzuB,MAAM,eACNkvB,KAAKhpB,KAAKS,cAAcG,gBAAgB,CAAC,WAAW,0BACpDX,MAAM,CACJ3F,MAAM,CAAC,GAAK,MAEdmuB,OAAO,CACL,CACE9b,KAAK,wBACL1M,MAAM,CACJqD,SAAS,MAKjB,CACExJ,MAAM,MACNkvB,KAAKhpB,KAAKS,cAAcG,gBAAgB,CAAC,WAAW,gBACpDX,MAAM,CACJ3F,MAAM,CAAC,GAAI,MAEbmuB,OAAO,CACL,CACE9b,KAAK,SAIX,CACE7S,MAAM,cACNkvB,KAAKhpB,KAAKS,cAAcG,gBAAgB,CAAC,WAAW,eACpD2nB,QAAO,EACPtoB,MAAM,CACJ3F,MAAO,KAETkuB,YAAY,CACVluB,MAAM,EACNoxB,GAAG,CAAC,EAAE,IAERjD,OAAO,CACL,CACE9b,KAAK,aACL1M,MAAM,CACJiK,KAAK,IACLD,QAAQ,OACRE,UAAU,CACRgY,GAAG,EACHvT,WAAW,EACX5P,SAAS,CAAC,EAAE,GACZb,MAAM,kBAOd6B,KAAKC,MA5GX,CA6GE2G,gBAAiB5G,KAAKwK,MAAMmvB,uBAKpC35B,KAAKC,MAAMuB,SACThC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,CAAC,EAAE,GACPhX,MAAO,EACPsP,cAAe,SACf8G,GAAI,gCAEJlR,EAAAC,EAAAC,cAACq7B,GAAD,CAAOvV,GAAI,CAAC,EAAE,IAAd,sBACAhmB,EAAAC,EAAAC,cAAC+1G,GACKz1G,KAAKC,QAKfD,KAAKC,MAAMuB,SACThC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,CAAC,EAAE,GACPhX,MAAO,EACPsP,cAAe,SACf8G,GAAI,0BAEJlR,EAAAC,EAAAC,cAACq7B,GAAD,CAAOvV,GAAI,CAAC,EAAE,IAAd,gBACAhmB,EAAAC,EAAAC,cAAC67B,GAAD37B,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEEqpB,cAAe,CAACtpB,KAAKC,MAAMoN,eAC3B8a,KAAM,CACJ,CACEruB,MAAOkG,KAAKC,MAAM+K,SAAW,GAAK,OAClC/K,MAAM,CACJ3F,MAAM,CAAC,IAAK,MAEdmuB,OAAO,CACL,CACE9b,KAAK,OACL1M,MAAM,CACJkiB,GAAG,CAAC,EAAE,KAGV,CACExV,KAAK,OACL4b,QAAO,KAIb,CACEzuB,MAAM,SACNyuB,QAAO,EACPtoB,MAAM,CACJ3F,MAAM,KAERmuB,OAAO,CACL,CACE9b,KAAK,YAIX,CACE7S,MAAM,OACNmG,MAAM,CACJ3F,MAAM,CAAC,IAAK,MAEdmuB,OAAO,CACL,CACE9b,KAAK,UAIX,CACE7S,MAAM,SACNmG,MAAM,CACJ3F,MAAM,CAAC,IAAK,KACZuP,eAAe,CAAC,SAAS,eAE3B4e,OAAO,CACL,CACE9b,KAAK,aACL1M,MAAM,CACJkiB,GAAG,CAAC,EAAE,KAGV,CACEoG,QAAO,EACP5b,KAAK,YAIX,CACE7S,MAAM,SACNmG,MAAM,CACJ3F,MAAM,KAERmuB,OAAO,CACL,CACE9b,KAAK,YAIX,CACE7S,MAAM,QACNmG,MAAM,CACJ3F,MAAM,CAAC,IAAK,IACZuP,eAAe,CAAC,SAAS,eAE3B4e,OAAO,CACL,CACE9b,KAAK,YACL1M,MAAM,CACJkiB,GAAG,CAAC,EAAE,GACNljB,OAAO,CAAC,QAAQ,WAGpB,CACEspB,QAAO,EACP5b,KAAK,oBASnBnN,EAAAC,EAAAC,cAACq0G,GAADn0G,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEE4+B,WAAY7+B,KAAK++B,WACjBtB,SAAUz9B,KAAKC,MAAMoN,cACrBk0B,OAAmC,QAA3BvhC,KAAKwK,MAAMilG,uBA/ZLtvG,aCyXTwyC,8MA5XbnoC,MAAQ,CACNyiG,YAAY,GACZzsG,YAAY,KACZk1G,gBAAgB,KAChB/+F,kBAAkB,KAClB+5C,mBAAmB,KACnBzkB,oBAAmB,EACnBxF,2BAA0B,KAI5BhmC,cAAgB,OAehBytG,eAAiB,SAACjB,GAChB5sG,EAAKwL,SAAS,CACZohG,mBA0FJ0I,gBAAkB,WAChBt1G,EAAKktG,eAGPtjE,kBAAoB,WAClB5pC,EAAKwL,SAAS,CACZogC,oBAAmB,gFA9GjBjsC,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,mKAK9CD,KAAKgJ,qBACChJ,KAAKutG,iMASY5jE,kFACjBG,EAAkB,GAClBgrB,EAAmB90D,KAAKS,cAAcG,gBAAgB,CAAC,QAAQ,kBAAkBZ,KAAKC,MAAMO,YAAYkE,KAAKhB,kDAG1G,cAGuBoxD,EAAiBhrB,gBACrBsI,yCACJpyC,KAAKS,cAAc2/E,gBAAgBpgF,KAAKwK,MAAMhK,YAAYkE,KAAKhB,MAAMimC,GAAU,iBAA/FgyC,mBACoB37E,KAAKS,cAAcsgF,oBAAoBpF,WAA7D61B,SACAxxG,KAAKwK,MAAMyiG,cAEbuE,GADAA,EAAgBxxG,KAAKS,cAAciB,MAAM8vG,IACXp2F,MAAMo2F,EAAcnsG,MAAMrF,KAAKS,cAAciB,MAAM1B,KAAKwK,MAAMyiG,aAAa3nG,IAAI,OAC7GksG,EAAgBxxG,KAAKS,cAAcypC,aAAasnE,IAGlD1nE,EAAgBr5B,KAAKkrE,GACrB7xC,EAAgBr5B,KAAK+gG,oCAKhB1nE,8QAKHrD,GAA4B,WAGAzmC,KAAKS,cAAcs7E,mCAA7C5zC,0CAG8BnoC,KAAKS,cAAc2nC,mBAAmBpoC,KAAKC,MAAMO,YAAYkE,KAAKhB,MAAMykC,EAAkB3hC,QAAQxG,KAAKC,MAAMuB,gBAA/IilC,qBAGE9vB,EAAoB3W,KAAKS,cAAciB,MAAM1B,KAAKC,MAAMqW,qDAE7BtW,KAAKS,cAAcupB,kBAAkBhqB,KAAKC,MAAMO,sBAAvEk3B,YAEJ/gB,EAAoBA,EAAkBtR,MAAMqyB,4BAG9C/gB,EAAoB3W,KAAKS,cAAciB,MAAM,kBAGzCk0G,EAA4B51G,KAAKS,cAAc+mC,qBAAqB7wB,EAAkB,cAC9D3W,KAAKS,cAAc4gF,iBAAiBrhF,KAAKC,MAAMO,YAAYkE,KAAKhB,MAAMkyG,WAA9FF,SAGAl1G,EAAcZ,OAAOC,OAAO,GAAGG,KAAKC,MAAMO,aAG1C6W,EAAc,CAClB4N,IAAIjlB,KAAKC,MAAMO,YAAYkE,KAAKugB,IAChCtY,KAAK3M,KAAKC,MAAMO,YAAYkE,KAAKhB,MACjCA,MAAM1D,KAAKC,MAAMO,YAAYkE,KAAKhB,MAClC8C,QAAQxG,KAAKC,MAAMO,YAAYkE,KAAK8B,SAGtChG,EAAY4W,UAAY,CACtB5S,SAAQ,EACR6S,cACA8wB,qBAGFnoC,KAAK6L,SAAS,CACZrL,cACAk1G,kBACA/+F,oBACA8vB,oNAIqB17B,EAAUqC,8EACjCpN,KAAKgJ,YAECyS,EAAiB1Q,EAAUvJ,UAAYxB,KAAKC,MAAMuB,QAClDq0G,EAA0B9qG,EAAUuL,mBAAqBtW,KAAKC,MAAMqW,kBACtEmF,IAAkBo6F,kCACd71G,KAAKutG,kJAcN,IAAAtkG,EAAAjJ,KAEP,IAAKA,KAAKwK,MAAMhK,YACd,OAAO,KAGT,IAAMgtG,EAAcxtG,KAAKS,cAAcG,gBAAgB,CAAC,UAClDk1G,EAAiB91G,KAAKwK,MAAMkmD,oBAAsB1wD,KAAKwK,MAAMkmD,mBAAmBh6C,GAAG,GAEzF,OACElX,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPqP,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,CAAC,EAAE,KACVqP,WAAY,UACZC,cAAe,SACfC,eAAgB,UAGZ7J,KAAKC,MAAMqW,kBAAoBtW,KAAKC,MAAMqW,iBAAiBI,GAAG,IAC5DlX,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,GAEPkF,EAAAC,EAAAC,cAAC8gB,GAAD,CACE1B,UAAW,CACT/U,EAAE,EACFoX,GAAG,CAAC,EAAE,KAGR3hB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgK,WAAY,SACZC,cAAe,UAEfpK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPqP,WAAY,SACZC,cAAe,OAEfpK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE0M,KAAM,QACNM,KAAO3M,KAAKwK,MAAMi8B,0BAA4B,WAAa,WAC3DtoC,MAAQ6B,KAAKwK,MAAMi8B,0BAA4BzmC,KAAKC,MAAM1G,MAAMR,OAAOkE,aAAaU,OAAOC,UAAY,aAEzG4B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2M,GAAI,EACJtN,SAAU,EACVb,MAAO,WACPkT,UAAW,QAJb,+BASF7R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,EACJ5kB,MAAO,EACPqP,WAAY,SACZC,cAAe,OAEfpK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE0M,KAAM,QACNM,KAAOmpG,EAAiB,WAAa,WACrC33G,MAAQ23G,EAAiB91G,KAAKC,MAAM1G,MAAMR,OAAOkE,aAAaU,OAAOC,UAAY,aAEnF4B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2M,GAAI,EACJtN,SAAU,EACVb,MAAO,WACPkT,UAAW,QAJb,gBAMgBrR,KAAKC,MAAMO,YAAYkE,KAAKhB,UAMhD1D,KAAKwK,MAAMi8B,2BACTjnC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,EACJ5kB,MAAO,GAEPkF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgK,WAAY,SACZC,cAAe,OAEfpK,EAAAC,EAAAC,cAACC,EAAA,EAAD,6BAGAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwc,UAAW,MACXC,QAAO,yDAEP5c,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2M,GAAI,EACJD,KAAM,MACNlO,MAAO,YACPwO,KAAM,kBAIZnN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,EACJvV,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAGd,CAAC,GAAI,GAAI,EAAE,GAAGqR,IAAK,SAAAk2C,GAAQ,OACzB5xD,EAAAC,EAAAC,cAACqsC,GAAD,CACEjtB,UAAW,CACT/U,EAAE,GAEJO,UAAW,CACTtL,SAAS,GAEX6iC,WAAYuvB,EACZ7zC,IAAG,YAAA9Y,OAAc2sD,GACjBzrB,YAAa,kBAAI18B,EAAKilG,eAAe98C,IACrCzyC,SAAU1V,EAAKuB,MAAMyiG,cAAgBzhG,WAAW4lD,UAYpEpxD,KAAKwK,MAAMhK,YACThB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKrF,MAAO,GACVkF,EAAAC,EAAAC,cAACmtC,GAADjtC,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEEirC,aAAa,EACb3C,eAAe,EACfkD,mBAAoB,CAClB78B,WAAW,KAEb08B,eAAgB,CACdh6B,GAAG,EACHrS,OAAO,QACPsS,IAAIi8F,EAAYjkE,OAAO9M,OAEzBsO,iBAAiB,EACjB7F,SAAU,uBACV1kC,YAAaR,KAAKwK,MAAMhK,YACxB2oC,gBAAiBnpC,KAAK21G,gBAAgB9qG,KAAK7K,MAC3C8pC,gBAAiB9pC,KAAK+1G,mBAAmBlrG,KAAK7K,MAC9CiqC,kBAAmBjqC,KAAKiqC,kBAAkBp/B,KAAK7K,MAC/C8rC,YAAW,mBAAArnC,OAAqBzE,KAAKC,MAAMO,YAAYkE,KAAKhB,MAAjD,oDACX8nC,cAAa,mBAAA/mC,OAAqBzE,KAAKwK,MAAMmM,kBAAkBnG,QAAQ,GAA1D,KAAA/L,OAAgEzE,KAAKC,MAAMO,YAAYkE,KAAKhB,MAA5F,uBAAAe,OAAwHzE,KAAKwK,MAAMkrG,gBAAmB11G,KAAKwK,MAAMkrG,gBAAgBx8E,IAAI,GAA/B,4BAAAz0B,OAAgEzE,KAAKC,MAAM1G,MAAMR,OAAOkE,aAAaU,OAAOG,OAA5G,MAAA2G,OAAuHzE,KAAKwK,MAAMkrG,gBAAgBrwG,MAAM,KAAKmL,QAAQ,GAArK,oDAAA/L,OAA4NzE,KAAKC,MAAM1G,MAAMR,OAAOkE,aAAaU,OAAOC,UAAxQ,MAAA6G,OAAsRiU,KAAKipD,IAAIn2D,WAAWxL,KAAKwK,MAAMkrG,gBAAgBrwG,MAAM,KAAKmL,QAAQ,KAAxV,qBAAmX,GAAzgB,OAGVxQ,KAAKC,MAAMuB,QAoCVhC,EAAAC,EAAAC,cAAC8gB,GAAD,CACE1B,UAAW,CACT/U,EAAE,IAIF/J,KAAKwK,MAAMyhC,mBACTzsC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgK,WAAY,SACZC,cAAe,UAEfpK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE0M,KAAM,QACNM,KAAM,UACNxO,MAAO6B,KAAKC,MAAM1G,MAAMR,OAAOkE,aAAaU,OAAOC,YAErD4B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,EACJlgB,SAAU,EACVb,MAAO,WACPkT,UAAW,UAJb,wCAMwCrR,KAAKC,MAAMO,YAAYkE,KAAKhB,MANpE,wBAUFlE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgK,WAAY,SACZC,cAAe,UAEfpK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE0M,KAAM,QACNM,KAAM,WACNxO,MAAO,aAETqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,EACJlgB,SAAU,EACVb,MAAO,WACPkT,UAAW,UAJb,sBAMsBrR,KAAKC,MAAMO,YAAYkE,KAAKhB,MANlD,sBAtERlE,EAAAC,EAAAC,cAAC8gB,GAAD,CACE1B,UAAW,CACT/U,EAAE,EACFmV,GAAG,IAGL1f,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgK,WAAY,SACZC,cAAe,UAEfpK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE0M,KAAM,QACNM,KAAM,QACNxO,MAAO,aAETqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,EACJlgB,SAAU,EACVb,MAAO,WACPkT,UAAW,UAJb,uDAQA7R,EAAAC,EAAAC,cAACmsC,GAAD,CACEhmB,YAAa,CACX3G,GAAG,EACH5kB,MAAM,CAAC,EAAE,KAEX+jB,YAAare,KAAKC,MAAM6sC,2BAL1B,eA+DV,cAtXW3sC,aCgbZ61G,8MA9abxrG,MAAQ,CACNuhB,UAAU,KACVhf,UAAU,KACVf,WAAW,KACXggB,WAAW,KACXpgB,YAAY,QAIdnL,cAAgB,gFAGVT,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,2JAK9CD,KAAKgJ,YACLhJ,KAAKisB,qMAGkBlhB,EAAWqC,gFAClCpN,KAAKgJ,YAECkjB,EAA4BnhB,EAAUohB,qBAAuBnsB,KAAKC,MAAMksB,oBACzDvM,KAAKC,UAAU9U,EAAUue,iBAAmB1J,KAAKC,UAAU7f,KAAKC,MAAMqpB,gBACvE4C,IAClBlsB,KAAK6L,SAAS,CACZkB,UAAU,MACV,WACA9D,EAAKmjB,sBAIarhB,EAAUC,WAAahL,KAAKC,MAAM+K,UAEtDhL,KAAKisB,uVAMH3C,EAAgBtpB,KAAKC,MAAMqpB,gBACRA,EAAcxmB,SACnCwmB,EAAgB1pB,OAAOwH,KAAKpH,KAAKC,MAAM2G,2BAGlB5G,KAAKS,cAAcswD,YAAY/wD,KAAKC,MAAMuB,QAAQ,EAAE,SAAS8nB,UAA9EqnC,SAEA5jD,EAAY,GACdwf,EAAgB,GACdgI,EAAe,GACjB/H,EAAmB,KACnB8N,EAAet6B,KAAKS,cAAciB,MAAM,GACtC6yD,EAAoBv0D,KAAKS,cAAcG,gBAAgB,CAAC,QAAQ,iBAElE+vD,GAAYA,EAAS7tD,QAEvB6tD,EAAS7mD,QAAQ,SAACiS,EAAG2Q,GAMnB,GAJK6H,EAAaxY,EAAG4Q,QACnB4H,EAAaxY,EAAG4Q,MAAQ,KAGtB4H,EAAaxY,EAAG4Q,MAAMiI,SAAS7Y,EAAG7e,QAAtC,CAIAsvB,EAAmBA,EAAmB9T,KAAKC,IAAI6T,EAAiBzgB,SAASgQ,EAAG6Q,YAAc7gB,SAASgQ,EAAG6Q,WAEtG,IAAMokC,EAAc/iD,EAAKxN,cAAciB,MAAMqa,EAAGi1C,aAEhD,OAAQj1C,EAAG7e,QACT,IAAK,UACL,IAAK,aACL,IAAK,iBACL,IAAK,kBACHo9B,EAAeA,EAAaxyB,KAAKkpD,GACnC,MACA,IAAK,WACL,IAAK,cACL,IAAK,kBACL,IAAK,mBACH12B,EAAeA,EAAalf,MAAM41C,GAOlC12B,EAAaxN,GAAG,KAClBwN,EAAersB,EAAKxN,cAAciB,MAAM,IAG1C,IAAMxE,EAAS6e,EAAG7e,OACZgE,EAAUo5B,EACV1N,EAAY7gB,SAASgQ,EAAG6Q,WACxBqkC,EAAkBhjD,EAAKxN,cAAc4C,iBAAiB0Y,EAAGk1C,gBAAgBsD,EAAkBjxD,UAI5F2tD,EAAgBtvD,SAAYsvD,EAAgBtvD,UAC/C4qB,EAAc9b,KAAK,CACjBvT,SACAgE,UACA0rB,YACAokC,cACAC,oBAGF18B,EAAaxY,EAAG4Q,MAAMlc,KAAKvT,OAM7B6uB,EAAY,KACViB,EAAchtB,KAAKS,cAAcqY,YAAY,IAAIC,WAE/C/Y,KAAKC,MAAMksB,0BACZ,iBAGA,kBAGA,mBAGA,2CARHJ,EAAYiB,EAAY/R,QAAQhC,SAAS,EAAE,4CAG3C8S,EAAYiB,EAAY/R,QAAQhC,SAAS,EAAE,6CAG3C8S,EAAYiB,EAAY/R,QAAQhC,SAAS,EAAE,6CAG3C8S,EAAYiB,EAAY/R,QAAQhC,SAAS,EAAE,6CAG3C8S,EAAY,yCAIVkB,EAAO,GACTC,EAAe,GACfC,EAAgB,KAChBC,EAAgB,KAChBC,EAAgB,KACdE,EAAyB,GACzBC,EAAwB,GAC1BF,EAAoBttB,KAAKS,cAAciB,MAAM,GAE3C+rB,EAAgB1hB,UAAS,IAAIgN,MAAOI,UAAU,KAAM,gBAEjCnZ,KAAKS,cAAc8Y,gBAAgB3Z,OAAO0X,OAAOtX,KAAKC,MAAM2G,iBAAiB,GAAGJ,SAAQ,EAAMgmB,EAAiB,MAAK,EAAM,cAA7IkB,mIAIAC,EAAgB,GAChBC,EAAiB,GACrBhB,EAAYlU,KAAKC,IAAI8U,EAAcb,GAC/B6B,EAAaxgB,EAAKxN,cAAcqY,YAAsB,IAAV8T,GAG1CmB,EAAoBL,EAAW5R,OAAO,SAAAC,GAAE,OAAKA,EAAGvC,WAAW2T,GAAiBpR,EAAGvC,WAAWoT,KAG5FqB,EAAmB1B,EAAczQ,OAAO,SAAAC,GAAE,OAAKA,EAAG6Q,WAAWA,KAAeO,GAAiBpR,EAAG6Q,UAAUO,MAExFrqB,4BAChBoqB,sBACFe,EAAmBf,EACbgB,EAAiBtuB,OAAO0X,OAAO2W,GAAkBjK,MACjD8+E,EAAiBt3F,WAAW0iB,EAAehtB,SAE3C2sB,EAAgBjuB,OAAO0X,OAAOyW,GAAmB/J,MACnDitC,EAAkB,MAClBpjC,oCACsB5f,EAAKxN,cAAcm4D,mBAAmB/qC,EAAcxS,qBAA5E41C,iBAIE6xC,EAAe,GAAKl2E,EAAUJ,GAAoBykC,IAEpD/iC,EAAe+iC,gBAAkBA,EACjChjC,EAAmB,CAACC,4BAGtBD,EAAmB,CAAC,CAClB/sB,QAAQ+M,EAAKxN,cAAciB,MAAM,GACjCuvD,gBAAgBhjD,EAAKxN,cAAciB,MAAM,aAKzC0sB,EAASxuB,OAAOC,OAAO,GAAGouB,GAAkBjK,MAC9CqK,EAAgBpgB,EAAKxN,cAAciB,MAAM0sB,EAAOltB,SAASmE,MAAM+oB,EAAO6iC,iBAE1ErjC,EAAe2mC,EAAkB7wD,OAASuK,EAAKxN,cAAciB,MAAM0sB,EAAOltB,SAC1EosB,EAAoBe,EAEpBV,EAAgBM,GAIE,OAAdlC,GAAsB0C,EAAWC,cAAc3C,MAE7C0C,EAAWE,QAAQ,IAAI5V,KAAO,SAChC0V,EAAaxgB,EAAKxN,cAAcqY,YAAY,IAAIC,OAI5C6V,EAAgBH,EAAWzV,OAAO,oBAGxCiU,EAAKwB,EAAWzV,OAAO,eAAiB,EAElCi9F,EAA0BzqG,WAAWA,WAAW8hB,EAAkB9c,QAAQ,KAEhF+c,EAAuBqB,GAAiBqnF,EACxCzoF,EAAsBoB,GAAiBhB,EAIvCR,EAAkC,OAAlBA,EAAyB6oF,EAA0Bv9F,KAAKC,IAAIyU,EAAc6oF,GAC1F5oF,EAAkC,OAAlBA,EAAyB4oF,EAA0Bv9F,KAAKG,IAAIwU,EAAc4oF,IAG5F9oF,EAAgBP,EAChBM,EAAeS,oDAzERf,EAAUJ,eAAiBI,GAAWa,6CAAtCb,oBAAoDA,GAAW5sB,KAAKC,MAAMuU,yCAiInF,IArDMsa,EAAqBlvB,OAAOwH,KAAKmmB,GAAwBrS,IAAI,SAAA6T,GAAI,MAAK,CAC1Exa,EAAEwa,EACF1a,EAAEkZ,EAAuBwB,GACzBC,SAASxB,EAAsBuB,MAG7BE,EAAY,EAChBH,EAAmBhlB,QAAS,SAAColB,EAAKxC,GAChC,IAAMnB,EAAU7S,KAAKyW,MAAMF,EAAUH,EAAmBhsB,OAAO,KAC/DgsB,EAAmBpC,GAAOnB,QAAUA,EACpC0D,MAyBFliB,EAAU0D,KAAK,CACbC,GAAG,MACHvS,MAAO,OAAQ6B,KAAKS,cAAcG,gBAAgB,CAAC,QAAQ,SAAS,MAAM,QAAQ,QAAQkQ,KAAK,KAAK,IACpG5E,KAAK4iB,IAGHM,EAAkB,EAClB/B,EAAcD,EAAc,IAC9BgC,EAAkB,GAGhB/B,IAAkBD,IACpBA,EAAgB1U,KAAKG,IAAI,EAAEwU,EAAc,IAGtB,EACfgC,GAAahC,EAAcD,GADZ,EAEfkC,EAAc,GACXnf,EAAE,EAAEA,GAHQ,EAGQA,IACrBof,EAAa/jB,WAAWA,WAAW4hB,EAAejd,EAAEkf,GAAY7e,QAAQ,IAC9E8e,EAAY7e,KAAK8e,GAGS,GACtBC,EAAY5vB,OAAO0X,OAAO2V,GAAMnqB,OAChC2sB,EAAgB/W,KAAKG,IAAI,EAAEH,KAAKgX,KAAKF,EAFf,KAItBxjB,EAAa,CACjB2jB,OAAO,CACLvmB,KAAM,OACN4P,OAAQ,kBAEV4W,OAAO,CACLxmB,KAAM,SACNymB,SAAS,EACTlX,IAAKyU,EACLvU,IAAKwU,GAEPyC,QAAQ,gBACRC,QAAQ,SAAA3hB,GAAK,OAAIH,EAAKxN,cAAc4I,YAAY+E,EAAMghB,IACtDlV,WAAYla,KAAKC,MAAM+K,SAAW,KAAO,CACvCjO,OAAQ,GACRizB,SAAS,EACThX,OAAQ,QACRiX,YAAa,GACbC,OAAQ,SACRC,aAAc,GACdC,eAAgB,SAChBC,WAAW,SAASZ,EAAc,SAEpCH,cACAzV,UAAU,EACVE,SAAQ,EACRC,SAAUha,KAAKC,MAAM+K,SAAW,KAAO,CACrCjO,OAAQ,GACRizB,SAAU,EACVE,OAAQ,OACRD,YAAa,GACbK,aAAc,EACdH,cAAe,GACfE,WAAWf,EACXc,eAAgB,SAChBpX,OAAQ,SAAA1K,GAAC,OAAIL,EAAKxN,cAAc8I,iBAAiB+E,EAAE,KAErDd,SAAQ,EACR+iB,WAAW,IACXnW,YAAY,GACZD,YAAW,EACXK,aAAa,IACbF,aAAY,EACZL,MAAM,YACNI,aAAY,EACZE,iBAAiB,EACjBxhB,OAAO,SAAA+U,GAAC,OAAIA,EAAE3P,OACdmd,mBAAmB,GACnBkV,kBAAkBpD,EAClBqD,WAAW,CAAE/gB,KAAM,QAASC,UAAW,IACvCpW,MAAM,CACJm3B,KAAM,CACJC,MAAO,CACL13B,KAAM,CACJ+F,SAAS,GACT4P,WAAW,IACXiM,KAAKthB,EAAMR,OAAOgE,OAClB8R,WAAYtV,EAAMS,MAAME,aAI9B02B,KAAM,CACJC,KAAM,CACJC,OAAQ,UAAWC,gBAAiB,SAa1CnhB,OAAQ5P,KAAKC,MAAM+K,SAAW,CAAE6E,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IAAO,CAAEH,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IACrHghB,aAAa,SAACC,GAAc,IAEpB3F,EADY2F,EAAVC,MACYC,OAAO,GAC3B,OACE3xB,EAAAC,EAAAC,cAAC0xB,GAAD,CACE9F,MAAOA,GAEP9rB,EAAAC,EAAAC,cAAC2xB,GAAD,CACElzB,MAAOmtB,EAAMntB,MACb4S,MAAOua,EAAMgG,QACbljB,MAAK,KAAA3J,OAAO6mB,EAAMpf,KAAKqlB,cAGM,kBAAxBjG,EAAMpf,KAAK8iB,UAAyBpvB,OAAOwH,KAAKkkB,EAAMpf,KAAK8iB,UAAUlsB,OAAO,GACjFlD,OAAOwH,KAAKkkB,EAAMpf,KAAK8iB,UAAU9T,IAAI,SAAAxX,GACnC,GAAIA,IAAU4nB,EAAMgG,QAClB,OAAO,KAET,IAAM+a,EAAYp+B,EAAKxN,cAAcG,gBAAgB,CAAC,QAAQ,SAAS8C,IACjEnD,EAAY8rC,EAAU1/B,KAAO0/B,EAAU1/B,KAAOjJ,EAC9CvF,EAAQkuC,EAAUluC,MAAMy3C,IACxB10C,EAAUoqB,EAAMpf,KAAK8iB,SAAStrB,GAChC8tB,EAAmBvjB,EAAKxN,cAAc4I,YAAYnI,EAAQ,GAC9D,OAAIsK,WAAWtK,IAAU,IAErB1B,EAAAC,EAAAC,cAAC2xB,GAAD,CACEtgB,MAAOxQ,EACPpC,MAAOA,EACPof,IAAG,OAAA9Y,OAASf,GACZ0K,MAAK,GAAA3J,OAAK+sB,KAIT,UAQnBxxB,KAAK6L,SAAS,CACZkB,YACAf,mJAKF,OACExM,EAAAC,EAAAC,cAAC+R,GAAD7R,OAAAC,OAAA,CACEuJ,KAAMwQ,IACN3N,YAAY,GACRjM,KAAKwK,MAAMwB,WAHjB,CAIEE,KAAMlM,KAAKwK,MAAMuC,UACjB5B,SAAUnL,KAAKC,MAAMkL,SACrBlM,OAAQe,KAAKC,MAAM2L,YACnBF,eAAgB1L,KAAKC,MAAMyL,yBAzaAvL,aCgdpB+1G,8MA9cb1rG,MAAQ,CACN+3E,QAAQ,KACRhpD,iBAAiB,GACjBkB,qBAAqB,QAIvBh6B,cAAgB,gFAGVT,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,4JAK9CD,KAAKgJ,kRAKChJ,KAAKS,cAAc6wD,6CAInBtxD,KAAKS,cAAc+vD,2MAuHFzlD,EAAUqC,mEACjCpN,KAAKgJ,kJAIL,OACExJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPsP,cAAe,UAGb5J,KAAKwK,MAAM+uB,iBAAiBz2B,OAAO,GACjCtD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPgX,GAAI,CAAC,EAAE,GACP4N,GAAI,CAAC,EAAE,GACPvV,WAAY,SACZC,cAAe,CAAC,SAAS,OACzBC,eAAgB,iBAGd7J,KAAKwK,MAAM+uB,iBAAiBre,IAAI,SAAC5M,EAAE6B,GAAH,OAC9B3Q,EAAAC,EAAAC,cAACC,EAAA,EAADC,OAAAC,OAAA,GACMyO,EAAE5E,UADR,CAEEE,cAAe,SACf2T,IAAG,mBAAA9Y,OAAqB0L,KAExB3Q,EAAAC,EAAAC,cAAC8gB,GAAD,CACE1B,UAAW,CACTsC,GAAG,CAAC,EAAE,GACN9P,GAAG,CAAC,EAAE,KAGR9R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPqP,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGdyE,EAAErO,MAAMC,SAAWoO,EAAErO,MAAMC,SACzBV,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE0f,WAAY,EACZzQ,WAAY,CAAC,EAAE,GACfzQ,MAAO,YACP0Q,WAAY,UACZ7P,SAAU,CAAC,EAAE,SACb4sB,wBAAyB,CAAEC,OAAQvd,EAAErO,MAAMmO,SAKjD5O,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,EACJtQ,WAAY,EACZ5P,SAAU,CAAC,EAAE,GACbb,MAAO,YAENmQ,EAAErO,MAAMnG,aAS3B0F,EAAAC,EAAAC,cAAC8gB,GAAD,CACE1B,UAAW,CACTqC,GAAG,EACHC,GAAG,IAGL5hB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPgS,GAAI,CAAC,EAAE,GACPoE,GAAI,kBAEJlR,EAAAC,EAAAC,cAACy2G,GAADv2G,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEE2L,YAAa,IACbT,SAAU,iBACVqJ,iBAAkBxU,KAAKS,cAAc6Y,oBAAoB,MAAM,OAGnE9Z,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPsP,cAAe,CAAC,SAAS,QAEzBpK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,CAAC,EAAE,GACPhX,MAAO,CAAC,EAAE,IACVqP,WAAY,SACZC,cAAe,SACfC,eAAgB,cAEhBrK,EAAAC,EAAAC,cAACq7B,GAAD,CACEzpB,GAAI,EACJtS,SAAU,CAAC,EAAE,GACb2oB,UAAWC,IAAQqO,IAHrB,aAOAz2B,EAAAC,EAAAC,cAACwiB,GAADtiB,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEEyD,MAAO1D,KAAKC,MAAMoN,cAClB2E,UAAW,CACTrF,KAAK,kBACL1M,MAAM,CACJqD,SAAS,EACTkG,aAAa,EACboF,WAAW,IACX5P,SAAS,CAAC,QAAQ,SAClBb,MAAM5E,EAAMR,OAAOoB,QACnBuP,UAAU,CACRG,eAAe,gBAMzBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,CAAC,EAAE,GACPhX,MAAO,CAAC,EAAE,IACVqP,WAAY,SACZC,cAAe,SACfC,eAAgB,cAEhBrK,EAAAC,EAAAC,cAACq7B,GAAD,CACEzpB,GAAI,EACJtS,SAAU,CAAC,EAAE,GACb2oB,UAAWC,IAAQqO,IAHrB,cAOAz2B,EAAAC,EAAAC,cAACwiB,GAADtiB,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEEyD,MAAO1D,KAAKC,MAAMoN,cAClB2E,UAAW,CACTrF,KAAK,gCACL1M,MAAM,CACJqD,SAAS,EACTkG,aAAa,EACb0T,MAAM,CACJtO,WAAW,IACXzQ,MAAM5E,EAAMR,OAAOoB,QACnB6E,SAAUgB,KAAKC,MAAM+K,SAAW,QAAU,SAE5CtB,UAAU,CACRG,eAAe,eAKvBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACP4kB,GAAI,QAEJ1f,EAAAC,EAAAC,cAACwiB,GAADtiB,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEEyD,MAAO1D,KAAKC,MAAMoN,cAClB2E,UAAW,CACTrF,KAAK,oBACL1M,MAAM,CACJjB,SAAS,EACT4P,WAAW,EACXzQ,MAAM,WACNuL,UAAU,CACRG,eAAe,iBAO3BrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,CAAC,EAAE,GACPhX,MAAO,CAAC,EAAE,IACVqP,WAAY,SACZC,cAAe,SACfC,eAAgB,cAEhBrK,EAAAC,EAAAC,cAACq7B,GAAD,CACEzpB,GAAI,EACJtS,SAAU,CAAC,EAAE,GACb2oB,UAAWC,IAAQqO,IAHrB,YAOAz2B,EAAAC,EAAAC,cAACwiB,GAADtiB,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEEyD,MAAO1D,KAAKC,MAAMoN,cAClB2E,UAAW,CACTrF,KAAK,uBACL1M,MAAM,CACJqD,SAAS,EACTkG,aAAa,EACb0T,MAAM,CACJtO,WAAW,IACX5P,SAASgB,KAAKC,MAAM+K,SAAW,QAAU,QACzC7M,MAAM5E,EAAMR,OAAOoB,SAErBuP,UAAU,CACRG,eAAe,gBA4CzBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,CAAC,EAAE,GACPhX,MAAO,CAAC,EAAE,IACVqP,WAAY,SACZC,cAAe,SACfC,eAAgB,cAEhBrK,EAAAC,EAAAC,cAACq7B,GAAD,CACEzpB,GAAI,EACJtS,SAAU,CAAC,EAAE,GACb2oB,UAAWC,IAAQqO,IAHrB,eAOAz2B,EAAAC,EAAAC,cAACwiB,GAADtiB,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEEyD,MAAO1D,KAAKC,MAAMoN,cAClB2E,UAAW,CACTrF,KAAK,WACL1M,MAAM,CACJqD,SAAS,EACTsL,WAAW,IACX5P,SAAS,CAAC,QAAQ,SAClBb,MAAM5E,EAAMR,OAAOoB,QACnBuP,UAAU,CACRG,eAAe,gBAMzBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,CAAC,EAAE,GACPhX,MAAO,CAAC,EAAE,IACVqP,WAAY,SACZC,cAAe,SACfC,eAAgB,cAEhBrK,EAAAC,EAAAC,cAACq7B,GAAD,CACEzpB,GAAI,EACJtS,SAAU,CAAC,EAAE,GACb2oB,UAAWC,IAAQqO,IAHrB,gBAOAz2B,EAAAC,EAAAC,cAACwiB,GAADtiB,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEEyD,MAAO1D,KAAKC,MAAMoN,cAClB2E,UAAW,CACTrF,KAAK,mBACL1M,MAAM,CACJqD,SAAS,EACTsL,WAAW,IACX5P,SAAS,CAAC,QAAQ,SAClBb,MAAM5E,EAAMR,OAAOoB,QACnBuP,UAAU,CACRG,eAAe,0BAncJ1J,aCuoClB+0G,8MAhoCb1qG,MAAQ,CACN82B,WAAW,GACXQ,WAAW,GACXqzE,UAAU,KACV3F,UAAU,KACVtiE,WAAW,KACXhwC,OAAO,UACPuyG,YAAY,KACZjvG,YAAY,KACZsV,aAAa,KACboyB,cAAc,KACd76B,cAAc,KACdzG,gBAAgB,GAChBwvG,cAAc,KACdC,eAAe,KACfnwE,gBAAe,EACf+qB,gBAAgB,KAChBykD,gBAAgB,KAChBp/F,iBAAiB,KACjBm3F,iBAAiB,KACjBp+B,iBAAiB,KACjB/a,iBAAiB,KACjBQ,iBAAiB,KACjBq4C,mBAAmB,GACnB4F,kBAAkB,KAClBhD,kBAAiB,EACjBx7C,kBAAkB,KAClBC,kBAAkB,KAClB0Y,kBAAkB,KAClBv2D,kBAAkB,KAClByvB,oBAAoB,GACpBmxB,qBAAqB,GACrBq8C,oBAAoB,KACpBxG,qBAAoB,EACpB34C,qBAAqB,QAIvBh0D,cAAgB,OAUhBs+B,WAAa,WACX1+B,EAAKwL,SAAS,CACZ4jG,YAAa,UAIjBmB,eAAiB,SAAAnB,GACfpvG,EAAKwL,SAAS,CACZ4jG,mBAIJnC,oBAAsB,SAACF,GACrB/sG,EAAKwL,SAAS,CACZuhG,2BAIJlhE,gBAAkB,SAAC7+B,GACjB,IAAMmgG,EAAcntG,EAAKI,cAAcG,gBAAgB,CAAC,UACxDP,EAAKJ,MAAMmsC,YAAX,GAAA3nC,OAA0B+oG,EAAYjkE,OAAO6B,MAA7C,KAAA3mC,OAAsD4I,OAQxDipG,uDAAmB,SAAAr1G,EAAOoM,GAAP,IAAAzG,EAAA2wD,EAAAzC,EAAAt0D,EAAA,OAAAO,EAAAtB,EAAA0B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACXsF,EAAkBvG,EAAKI,cAAcqwD,0BACrCyG,EAAuBl3D,EAAKI,cAAcG,gBAAgB,CAAC,QAAQ,oBACnEk0D,EAAmByC,EAAqBlqD,GACxC7M,EAAcoG,EAAgBkuD,EAAiBhyC,WACrDziB,EAAKwL,SAAS,CACZrL,cACA6M,gBACAzG,kBACAkuD,qBATe,wBAAA1zD,EAAAS,SAAAZ,EAAAjB,iEAanBo1G,oCAAiB,SAAApzG,IAAA,IAAAu1D,EAAAlqD,EAAApC,EAAArE,EAAAkuD,EAAAt0D,EAAA8R,EAAAG,EAAA6hD,EAAAC,EAAAC,EAAAC,EAAAjxD,EAAAO,EAAA,OAAAhD,EAAAtB,EAAA0B,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,UAETi2D,EAAuBl3D,EAAKI,cAAcG,gBAAgB,CAAC,QAAQ,oBACzEP,EAAKwL,SAAS,CACZ0rD,2BAGIlqD,EAAgBhN,EAAKk2G,qBAENlpG,IAAkBhN,EAAKJ,MAAM0sC,UAAU6pE,OAT7C,CAAAr0G,EAAAb,KAAA,gBAUbjB,EAAK6rC,gBAAgB7+B,GAVRlL,EAAAb,KAAA,EAWAjB,EAAKi2G,iBAAiBjpG,GAXtB,cAAAlL,EAAAP,OAAA,SAAAO,EAAAV,MAAA,WAYJ4L,IAAkBhN,EAAKmK,MAAM6C,cAZzB,CAAAlL,EAAAb,KAAA,gBAAAa,EAAAb,KAAA,GAaPjB,EAAKi2G,iBAAiBjpG,GAbf,eAgBTpC,EAhBSrL,OAAAsL,EAAA,EAAAtL,CAAA,GAgBMS,EAAKmK,OAEpB5D,EAAkBvG,EAAKI,cAAcqwD,0BAEvC7lD,EAASoC,gBAAkBA,IAC7BpC,EAASoC,cAAgBA,GAGrBynD,EAAmByC,EAAqBlqD,GACxC7M,EAAcoG,EAAgBkuD,EAAiBhyC,WAzBtC3gB,EAAAb,KAAA,GAgCLqD,QAAQC,IAAI,CACpBvE,EAAKI,cAAc29E,sBACnB/9E,EAAKI,cAAc08E,uBACnB98E,EAAKI,cAAcs7E,uBACnB17E,EAAKI,cAAcu9E,4BApCN,WAAA1rE,EAAAnQ,EAAAV,KAAAgR,EAAA7S,OAAAmF,EAAA,EAAAnF,CAAA0S,EAAA,GA4BbgiD,EA5Ba7hD,EAAA,GA6Bb8hD,EA7Ba9hD,EAAA,GA8Bb+hD,EA9Ba/hD,EAAA,GA+BbgiD,EA/BahiD,EAAA,GAuCfxH,EAASqpD,iBAAmBA,EAC5BrpD,EAASspD,kBAAoBA,EAC7BtpD,EAASupD,kBAAoBA,EAC7BvpD,EAASwpD,qBAAuBA,EAEhCxpD,EAASrE,gBAAkBA,EAIK,GACRyG,GAAiB7M,EAEzCyK,EAASzK,YAAcA,EACvByK,EAAS6pD,iBAAmBA,GAExBz0D,EAAKJ,MAAMuB,QAtDA,CAAAW,EAAAb,KAAA,gBAAAa,EAAAb,KAAA,GA+DHqD,QAAQC,IAAI,CACpBvE,EAAKI,cAAcm4D,qBACnBv4D,EAAKI,cAAcuvE,uBACnB3vE,EAAKI,cAAc+V,aAAahW,GAChCH,EAAKI,cAAcmwE,iBAAiBpwE,EAAYH,EAAKJ,MAAMuB,SAC3DnB,EAAKI,cAAcc,gBAAgB8L,EAAchN,EAAKJ,MAAMuB,SAC5DnB,EAAKI,cAAcc,gBAAgBf,EAAYkE,KAAKhB,MAAMrD,EAAKJ,MAAMuB,SACrEnB,EAAKI,cAAc2nC,mBAAmB/6B,EAAconD,EAAqBjuD,QAAQnG,EAAKJ,MAAMuB,WAtEjF,QAAAgC,EAAArB,EAAAV,KAAAsC,EAAAnE,OAAAmF,EAAA,EAAAnF,CAAA4D,EAAA,GAwDXyH,EAASgmD,gBAxDEltD,EAAA,GAyDXkH,EAASiiE,kBAzDEnpE,EAAA,GA0DXkH,EAAS2oG,oBA1DE7vG,EAAA,GA2DXkH,EAASkqG,UA3DEpxG,EAAA,GA4DXkH,EAAS6K,aA5DE/R,EAAA,GA6DXkH,EAASqL,iBA7DEvS,EAAA,GA8DXkH,EAASi9B,cA9DEnkC,EAAA,GA0EbkH,EAAS62B,WAAa,CACpBllC,OAAO,CACLg5B,OAAO,KACPrP,SAAQ,GAEV1pB,QAAQ,CACN+4B,OAAO,KACPrP,SAAQ,GAEVuf,QAAQ,CACNlQ,OAAO,KACPrP,SAAQ,IAGZtb,EAASq2B,WAAa,CACpB1kC,OAAO,KACPC,QAAQ,MAEVoO,EAASm7B,oBAAsB,CAC7BxpC,OAAO,KACPC,QAAQ,MAGVoO,EAAS8kG,kBAAmB,EAC5B9kG,EAASorG,eAAiBprG,EAAS6K,aACnC7K,EAASmrG,cAAgBnrG,EAAS0L,kBAClC1L,EAAS8nG,kBAAoBvyG,EAAYuyG,kBACzC9nG,EAASukG,UAAYvkG,EAASiiE,mBAAqBjiE,EAASiiE,kBAAkBx2D,GAAG,GACjFzL,EAASiiC,WAAajiC,EAASqL,kBAAoBrL,EAASqL,iBAAiBI,GAAG,GAChFzL,EAAS0L,kBAAoB1L,EAASiiE,kBAAoBjiE,EAASiiE,kBAAkB7nE,MAAM4F,EAASgmD,iBAAmB5wD,EAAKI,cAAciB,MAAM,GAvGnI,QA0GfrB,EAAKwL,SAASZ,GA1GC,yBAAA9I,EAAAN,SAAAG,EAAAhC,WAwKjBy2G,yCAAsB,SAAA/zG,IAAA,IAAAuI,EAAAzK,EAAA,OAAAO,EAAAtB,EAAA0B,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,OACd2J,EAAW,GADGpI,EAAAoC,GAEZ5E,EAAKmK,MAAMtN,OAFC2F,EAAAvB,KAGb,YAHauB,EAAAoC,GAAA,EAMb,WANapC,EAAAoC,GAAA,yBAIhB5E,EAAK+0G,iBAJWvyG,EAAAjB,OAAA,0BAOVpB,EAAcH,EAAKI,cAAcG,gBAAgB,CAAC,QAAQ,iBAChEqK,EAASssD,qBAAuB,GAChCtsD,EAAS6pD,iBAAmBt0D,EAC5ByK,EAASoC,cAAgB7M,EAAYkD,MACrCuH,EAASssD,qBAAqB/2D,EAAYkD,OAASlD,EAXnCqC,EAAAjB,OAAA,2BAAAiB,EAAAjB,OAAA,oBAiBpBvB,EAAKwL,SAASZ,GAjBM,yBAAApI,EAAAhB,SAAAa,EAAA1C,WAoBtBiuG,uBAAyB,WACvB,OAA0D,OAAtD5tG,EAAKmK,MAAM47B,oBAAoB/lC,EAAKmK,MAAMtN,SAGvCmD,EAAKI,cAAciB,MAAMrB,EAAKmK,MAAM47B,oBAAoB/lC,EAAKmK,MAAMtN,SAASoI,IAAI,QAGzF0hC,uBAAyB,SAACnF,GACxB,IAAKxhC,EAAKmK,MAAMtN,OACd,OAAO,EAETmD,EAAKwL,SAAS,SAACuB,GAAD,MAAgB,CAC5Bg5B,oBAAoBxmC,OAAAsL,EAAA,EAAAtL,CAAA,GACfwN,EAAUg5B,oBADIxmC,OAAA2b,EAAA,EAAA3b,CAAA,GAEhBS,EAAKmK,MAAMtN,OAAS2kC,UAK3BiF,cAAgB,WACd,IAAKzmC,EAAKmK,MAAMtN,QAAgE,OAAtDmD,EAAKmK,MAAM47B,oBAAoB/lC,EAAKmK,MAAMtN,QAClE,OAAO,EAGT,IAAM6pC,EAAqB1mC,EAAKI,cAAciB,MAAMrB,EAAKmK,MAAM47B,oBAAoB/lC,EAAKmK,MAAMtN,SAASoI,IAAI,KACvGitB,EAAS,KAEb,OAAOlyB,EAAKmK,MAAMtN,QAChB,IAAK,UACHq1B,EAASlyB,EAAKmK,MAAMsL,aAAezV,EAAKI,cAAciB,MAAMrB,EAAKmK,MAAMsL,cAAczQ,MAAM0hC,GAAsB,KACnH,MACA,IAAK,SAEDxU,EADElyB,EAAKmK,MAAM4iG,oBACJ/sG,EAAKmK,MAAM0iE,kBAAoB7sE,EAAKI,cAAciB,MAAMrB,EAAKmK,MAAM0iE,mBAAmB7nE,MAAM0hC,GAAsB,KAElH1mC,EAAKmK,MAAMmM,kBAAoBtW,EAAKI,cAAciB,MAAMrB,EAAKmK,MAAMmM,mBAAmBtR,MAAM0hC,GAAsB,KAOjI1mC,EAAKwmC,oBAAoBtU,GAEzBlyB,EAAKwL,SAAS,SAACuB,GAAD,MAAgB,CAC5Bk0B,WAAW1hC,OAAAsL,EAAA,EAAAtL,CAAA,GACNwN,EAAUk0B,WADL1hC,OAAA2b,EAAA,EAAA3b,CAAA,GAEPS,EAAKmK,MAAMtN,OAASq1B,UAK3BqU,iBAAmB,SAAC54B,GAClB,IAAK3N,EAAKmK,MAAMtN,OACd,OAAO,EAGT,IAAMq1B,EAASvkB,EAAElO,OAAOsO,MAAMtL,SAAWnB,MAAMqM,EAAElO,OAAOsO,OAAS/N,EAAKI,cAAciB,MAAMsM,EAAElO,OAAOsO,OAAS/N,EAAKI,cAAciB,MAAM,GACrIrB,EAAKwmC,oBAAoBtU,GAEzBlyB,EAAKwL,SAAS,SAACuB,GAAD,MAAgB,CAC5Bg5B,oBAAoBxmC,OAAAsL,EAAA,EAAAtL,CAAA,GACfwN,EAAUg5B,oBADIxmC,OAAA2b,EAAA,EAAA3b,CAAA,GAEhBS,EAAKmK,MAAMtN,OAAS,OAEvBokC,WAAW1hC,OAAAsL,EAAA,EAAAtL,CAAA,GACNwN,EAAUk0B,WADL1hC,OAAA2b,EAAA,EAAA3b,CAAA,GAEPS,EAAKmK,MAAMtN,OAASq1B,UAK3BsU,oBAAsB,WAAiB,IAAhBtU,EAAgB/vB,UAAAM,OAAA,QAAAC,IAAAP,UAAA,GAAAA,UAAA,GAAT,KAE5B,IAAKnC,EAAKmK,MAAMtN,OACd,OAAO,EAGJq1B,IACHA,EAASlyB,EAAKmK,MAAM82B,WAAWjhC,EAAKmK,MAAMtN,SAG5C,IAAIgpC,GAAiB,EAErB,OAAQ7lC,EAAKmK,MAAMtN,QACjB,IAAK,UACHgpC,EAAiBA,GAAmB3T,GAAUA,EAAO7b,GAAGrW,EAAKmK,MAAMsL,cACrE,MACA,IAAK,SAEDowB,EADE7lC,EAAKmK,MAAM4iG,qBACK/sG,EAAKmK,MAAMglG,WAActpE,GAAmB3T,GAAUA,EAAO7b,GAAGrW,EAAKmK,MAAM0iE,oBAE3E7sE,EAAKmK,MAAMglG,WAActpE,GAAmB3T,GAAUA,EAAO7b,GAAGrW,EAAKmK,MAAMmM,mBAOnGtW,EAAKwL,SAAS,CACZq6B,sBAIJX,uCAAoB,SAAAriC,IAAA,OAAAnC,EAAAtB,EAAA0B,KAAA,SAAAiC,GAAA,cAAAA,EAAA/B,KAAA+B,EAAA9B,MAAA,OAClBjB,EAAKwL,SAAS,SAACuB,GAAD,MAAgB,CAC5B00B,WAAWliC,OAAAsL,EAAA,EAAAtL,CAAA,GACNwN,EAAU00B,WADLliC,OAAA2b,EAAA,EAAA3b,CAAA,CAERkmC,QAAQ,CACNlQ,OAAO,KACPrP,SAAQ,IAETlmB,EAAKmK,MAAMtN,OAAQ,CAClB04B,OAAO,KACPrP,SAAQ,QAVI,wBAAAnjB,EAAAvB,SAAAqB,EAAAlD,WAgBpB8wG,kCAAe,SAAArtG,IAAA,IAAAykC,EAAAiB,EAAAC,EAAA,OAAAroC,EAAAtB,EAAA0B,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,YAGP4mC,EAAgB7nC,EAAKmK,MAAM09B,eAHpB,CAAA3jC,EAAAjD,KAAA,eAAAiD,EAAA3C,OAAA,SAMJvB,EAAKwL,SAAS,SAACuB,GAAD,MAAgB,CACnC86B,gBACApG,WAAWliC,OAAAsL,EAAA,EAAAtL,CAAA,GACNwN,EAAU00B,WADL,CAERgE,QAAQ,CACNlQ,OAAO,KACPrP,SAAQ,SAZH,OAkBP4iB,EAAkB,SAACptB,EAAG4lB,GAE1B,IAAM+F,EAAY,CAChBjkB,cAAe,UACfC,YAAarjB,EAAKmK,MAAM6C,cACxBsW,WAAY5H,EAAGpe,QAGbgkC,IACF+F,EAAU/jB,WAAatjB,EAAKI,cAAcmnC,oBAAoBjG,KAI5DA,GAA8B,UAArB+F,EAAU/pC,SACrB0C,EAAKI,cAAc+iB,yBAAyBkkB,GAG9CrnC,EAAKwL,SAAS,SAACuB,GAAD,MAAgB,CAC5B86B,cAA8B,YAAdnsB,EAAGpe,OACnBmkC,WAAWliC,OAAAsL,EAAA,EAAAtL,CAAA,GACNwN,EAAU00B,WADL,CAERgE,QAAQ,CACNlQ,OAAO,KACPrP,SAAQ,SAMV6iB,EAAyB,SAACrtB,GAC9B,IAAM6Z,EAAS7Z,EAAG8rB,gBAClBxnC,EAAKwL,SAAS,SAACuB,GAAD,MAAgB,CAC5B00B,WAAWliC,OAAAsL,EAAA,EAAAtL,CAAA,GACNwN,EAAU00B,WADL,CAERgE,QAAQlmC,OAAAsL,EAAA,EAAAtL,CAAA,GACHwN,EAAU00B,WAAV,QADE,CAELlM,iBAMRv1B,EAAKI,cAAc4oC,YAAYhpC,EAAKmK,MAAM6C,cAAchN,EAAKmK,MAAMiqD,qBAAqBjuD,QAAQ2iC,EAAgBC,GAEhH/oC,EAAKwL,SAAS,SAACuB,GAAD,MAAgB,CAC5B00B,WAAWliC,OAAAsL,EAAA,EAAAtL,CAAA,GACNwN,EAAU00B,WADL,CAERgE,QAAQ,CACNlQ,OAAO,KACPrP,SAAQ,QAnED,wBAAAhiB,EAAA1C,SAAA4B,EAAAzD,WAyEfinC,mCAAgB,SAAArhC,IAAA,IAAAurG,EAAA7vE,EAAAyF,EAAAxgB,EAAAgrF,EAAAH,EAAAC,EAAA11B,EAAA61B,EAAAC,EAAAiF,EAAAzlD,EAAA3pB,EAAAC,EAAAmmE,EAAAC,EAAAp/C,EAAA,OAAAxtD,EAAAtB,EAAA0B,KAAA,SAAA4E,GAAA,cAAAA,EAAA1E,KAAA0E,EAAAzE,MAAA,OAEV6vG,EAAqB,KACnB7vE,EAAajhC,EAAKmK,MAAM82B,WAAWjhC,EAAKmK,MAAMtN,QAC9C6pC,EAAqB1mC,EAAK4tG,yBAE5B1nF,GAAU,EANAxgB,EAAAd,GAQN5E,EAAKmK,MAAMtN,OARL6I,EAAAzE,KAUP,YAVOyE,EAAAd,GAAA,EA4FP,WA5FOc,EAAAd,GAAA,uBAYN5E,EAAKmK,MAAM07B,gBAAmB5E,IAAcjhC,EAAKI,cAAciB,MAAM4/B,GAAYp8B,IAAI,GAZ/E,CAAAa,EAAAzE,KAAA,eAAAyE,EAAAnE,OAAA,UAaD,GAbC,cAgBJ2vG,EAAkBlxG,EAAKI,cAAc+mC,qBAAqBlG,EAAWjhC,EAAKmK,MAAM+pD,kBAAkBjxD,UAElG8tG,EAAkB,SAACr1F,EAAG4lB,IAErB5lB,GAAM4lB,IACT5lB,EAAK,CACHpe,OAAO,UAIX,IAAM4xG,EAAwB,UAAdxzF,EAAGpe,OACb8pC,EAA4B,YAAd1rB,EAAGpe,OAEjB+pC,EAAY,CAChBjkB,cAAe,UACfC,YAAarjB,EAAKmK,MAAM6C,cACxBsW,WAAY5H,EAAGpe,OACfgqC,WAAY57B,SAASu1B,IAGnBK,IACF+F,EAAU/jB,WAAatjB,EAAKI,cAAcmnC,oBAAoBjG,KAI5DA,GAA8B,UAArB+F,EAAU/pC,SACrB0C,EAAKI,cAAc+iB,yBAAyBkkB,GAG9CrnC,EAAKwL,SAAS,SAACuB,GAAD,MAAgB,CAC5B00B,WAAWliC,OAAAsL,EAAA,EAAAtL,CAAA,GACNwN,EAAU00B,WADLliC,OAAA2b,EAAA,EAAA3b,CAAA,GAEPS,EAAKmK,MAAMtN,OAAQ,CAClB04B,OAAO,KACPrP,SAAQ,QAKVkhB,EACFpnC,EAAKwL,SAAS,SAACuB,GAAD,MAAgB,CAC5BqiG,YAAY,QACZnuE,WAAW1hC,OAAAsL,EAAA,EAAAtL,CAAA,GACNwN,EAAUk0B,WADL1hC,OAAA2b,EAAA,EAAA3b,CAAA,GAEPS,EAAKmK,MAAMtN,OAASmD,EAAKI,cAAciB,MAAM,QAGzCrB,EAAKmK,MAAM+7B,yBAA2BgpE,GAC/ClvG,EAAKwL,SAAS,CACZ0jG,QAAQ3vG,OAAA2b,EAAA,EAAA3b,CAAA,GACLS,EAAKmK,MAAMtN,QAAS,MAMvBm0G,EAAyB,SAACt1F,GAC9B,IAAM6Z,EAAS7Z,EAAG8rB,gBAClBxnC,EAAKwL,SAAS,SAACuB,GAAD,MAAgB,CAC5B00B,WAAWliC,OAAAsL,EAAA,EAAAtL,CAAA,GACNwN,EAAU00B,WADLliC,OAAA2b,EAAA,EAAA3b,CAAA,GAEPS,EAAKmK,MAAMtN,OAFJ0C,OAAAsL,EAAA,EAAAtL,CAAA,GAGHwN,EAAU00B,WAAWzhC,EAAKmK,MAAMtN,QAH7B,CAIN04B,iBA/EE7vB,EAAAzE,KAAA,GAqFYjB,EAAKI,cAAc2/E,gBAAgB//E,EAAKmK,MAAMhK,YAAYkE,KAAKhB,MAAM6tG,GArFjF,eAqFJ51B,EArFI51E,EAAAtE,KAAAsE,EAAAzE,KAAA,GAsFkBjB,EAAKI,cAAcuC,oBAAoB3C,EAAKmK,MAAMgqD,kBAAkB7nD,KAAK,oBAAoB,CAACgvE,GAAQ,IAtFxH,eAsFJ61B,EAtFIzrG,EAAAtE,KAuFJgwG,EAAgB,CAAC91B,EAAQ61B,GAvFrBzrG,EAAAzE,KAAA,GA0FiBjB,EAAKJ,MAAMmC,0BAA0B/B,EAAKmK,MAAMiqD,qBAAqB9nD,KAAM,gBAAiB8kG,EAAe,KAAML,EAAiBC,GA1FnJ,eA0FVF,EA1FUprG,EAAAtE,KAAAsE,EAAAnE,OAAA,wBA8FNvB,EAAKmK,MAAM07B,gBAAmB5E,IAAcjhC,EAAKI,cAAciB,MAAM4/B,GAAYp8B,IAAI,GA9F/E,CAAAa,EAAAzE,KAAA,gBAAAyE,EAAAnE,OAAA,UA+FD,GA/FC,WAkGN80G,EAAsB,MACtB3vE,EAnGM,CAAAhhC,EAAAzE,KAAA,SAoGRo1G,EAAsBr2G,EAAKI,cAAciB,MAAMrB,EAAKmK,MAAM0iE,mBAAmB7nE,MAAM0hC,GApG3EhhC,EAAAzE,KAAA,oBAsGRo1G,EAAsBr2G,EAAKI,cAAciB,MAAMrB,EAAKI,cAAc+mC,qBAAqBlG,EAAWjhC,EAAKmK,MAAM+pD,kBAAkBjxD,WAC1HjD,EAAKmK,MAAM4iG,oBAvGR,CAAArnG,EAAAzE,KAAA,gBAAAyE,EAAAzE,KAAA,GAwGwBjB,EAAKI,cAAcm4D,qBAxG3C,QAwGA3H,EAxGAlrD,EAAAtE,KAyGNi1G,EAAsBA,EAAoBpxG,IAAI2rD,GAzGxC,WA6GLylD,EA7GK,CAAA3wG,EAAAzE,KAAA,gBAAAyE,EAAAnE,OAAA,UA8GD,GA9GC,eAiHJ0lC,EAAiB,SAACvrB,EAAG4lB,GACzB,IAAM8F,EAA4B,YAAd1rB,EAAGpe,OAGjB+pC,EAAY,CAChB/jB,WAAY5H,EAAGpe,OACf8lB,cAAa,cACbC,YAAarjB,EAAKmK,MAAM6C,cACxBs6B,WAAY+uE,EAAoBlmG,WAG9BmxB,IACF+F,EAAU/jB,WAAatjB,EAAKI,cAAcmnC,oBAAoBjG,KAI5DA,GAA8B,UAArB+F,EAAU/pC,SACrB0C,EAAKI,cAAc+iB,yBAAyBkkB,GAG9CrnC,EAAKwL,SAAS,SAACuB,GAAD,MAAgB,CAC5B00B,WAAWliC,OAAAsL,EAAA,EAAAtL,CAAA,GACNwN,EAAU00B,WADLliC,OAAA2b,EAAA,EAAA3b,CAAA,GAEPS,EAAKmK,MAAMtN,OAAQ,CAClB04B,OAAO,KACPrP,SAAQ,QAKVkhB,GACFpnC,EAAKwL,SAAS,SAACuB,GAAD,MAAgB,CAC5Bk0B,WAAW1hC,OAAAsL,EAAA,EAAAtL,CAAA,GACNwN,EAAUk0B,WADL1hC,OAAA2b,EAAA,EAAA3b,CAAA,GAEPS,EAAKmK,MAAMtN,OAASmD,EAAKI,cAAciB,MAAM,SAMhD6lC,EAAwB,SAACxrB,GAC7B,IAAM6Z,EAAS7Z,EAAG8rB,gBAClBxnC,EAAKwL,SAAS,SAACuB,GAAD,MAAgB,CAC5B00B,WAAWliC,OAAAsL,EAAA,EAAAtL,CAAA,GACNwN,EAAU00B,WADLliC,OAAA2b,EAAA,EAAA3b,CAAA,GAEPS,EAAKmK,MAAMtN,OAFJ0C,OAAAsL,EAAA,EAAAtL,CAAA,GAGHwN,EAAU00B,WAAWzhC,EAAKmK,MAAMtN,QAH7B,CAIN04B,iBAMF83E,EAAUrtG,EAAKI,cAAc+mC,qBAAqBkvE,EAAoBr2G,EAAKmK,MAAM+pD,kBAAkBjxD,UAAUyS,WAtKzGhQ,EAAAzE,KAAA,GAuKcjB,EAAKI,cAAc2/E,gBAAgB//E,EAAKmK,MAAMhK,YAAYkE,KAAKhB,MAAM,GAvKnF,WAuKNiqG,EAvKM5nG,EAAAtE,KAyKJ8sD,EAAeluD,EAAKmK,MAAMiqD,qBAAqB9nD,MACjDtM,EAAKmK,MAAM4iG,oBA1KL,CAAArnG,EAAAzE,KAAA,SA2KRgtD,QAAQ6K,IAAI,6BAA6B94D,EAAKI,cAAciB,MAAM4/B,GAAYvrB,WAAW23F,EAAQ33F,WAAW43F,GAC5GttG,EAAKJ,MAAMmC,0BAA0BmsD,EAAc,6BAA8B,CAACo/C,EAAaD,GAAU,KAAMpmE,EAAgBC,GA5KvHxhC,EAAAzE,KAAA,wBAAAyE,EAAAzE,KAAA,GA8KYjB,EAAKI,cAAc2/E,gBAAgB//E,EAAKmK,MAAMhK,YAAYkE,KAAKhB,MAAMgqG,GA9KjF,QA8KRC,EA9KQ5nG,EAAAtE,KA+KR6sD,QAAQ6K,IAAI,mBAAmB94D,EAAKI,cAAciB,MAAM4/B,GAAYvrB,WAAW23F,EAAQ33F,WAAW43F,GAClGttG,EAAKJ,MAAMmC,0BAA0BmsD,EAAc,mBAAoB,CAACm/C,EAASC,GAAc,KAAMrmE,EAAgBC,GAhL7G,eAAAxhC,EAAAnE,OAAA,2BAoLV2kB,GAAU,EApLAxgB,EAAAnE,OAAA,qBA0La,IAAvBuvG,GACF9wG,EAAKwL,SAAS,SAACuB,GAAD,MAAgB,CAC5B00B,WAAWliC,OAAAsL,EAAA,EAAAtL,CAAA,GACNwN,EAAU00B,WADLliC,OAAA2b,EAAA,EAAA3b,CAAA,GAEPS,EAAKmK,MAAMtN,OAFJ0C,OAAAsL,EAAA,EAAAtL,CAAA,GAGHwN,EAAU00B,WAAWzhC,EAAKmK,MAAMtN,QAH7B,CAINqpB,iBAhMM,yBAAAxgB,EAAAlE,SAAA+D,EAAA5F,WAuMhB0mC,UAAY,SAACxpC,GACX,OAAQA,EAAOoT,eACb,IAAK,UAEL,MACA,IAAK,SACEjQ,EAAKmK,MAAMglG,YACdtyG,EAAS,MAEb,MACA,QACEA,EAAS,KAIE,OAAXA,GACFmD,EAAKwL,SAAS,CACZ3O,uFAroBA8C,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,kDA4B9C,IAAMs3D,EAAuBv3D,KAAKS,cAAcG,gBAAgB,CAAC,QAAQ,oBACzE,OAAOZ,KAAKC,MAAM0sC,UAAU6pE,QAAUj/C,EAAqBv3D,KAAKC,MAAM0sC,UAAU6pE,QAAUx2G,KAAKC,MAAM0sC,UAAU6pE,OAAS52G,OAAOwH,KAAKmwD,GAAsB,+JA8H1Jv3D,KAAKgJ,qBACChJ,KAAKo1G,qRAIL7iF,EAASvyB,KAAKwK,MAAM82B,WAAWthC,KAAKwK,MAAMtN,QAAU8C,KAAKS,cAAciB,MAAM1B,KAAKwK,MAAM82B,WAAWthC,KAAKwK,MAAMtN,SAAW,QAEhHq1B,EAAOrtB,IAAI,6CACjB,UAGHipG,EAAmBnuG,KAAKS,cAAc+mC,qBAAqBjV,EAAOvyB,KAAKwK,MAAM+pD,kBAAkBjxD,UAC/F2H,EAAW,QAETjL,KAAKwK,MAAMtN,cACZ,mBAIA,0CAHH+N,EAASorG,eAAiB9jF,YACOvyB,KAAKS,cAAc4gF,iBAAiBrhF,KAAKwK,MAAMhK,YAAYkE,KAAKhB,MAAMyqG,GAAiB,kBAAxHljG,EAASyqG,2DAGTzqG,EAASmrG,cAAgB7jF,YACSvyB,KAAKS,cAAc4gF,iBAAiBrhF,KAAKwK,MAAMhK,YAAYkE,KAAKhB,MAAMyqG,GAAiB,kBAAzHljG,EAASwiG,yFAObztG,KAAK6L,SAASZ,yLAGSF,EAAWqC,sFAClCpN,KAAKgJ,YACCyS,EAAiB1Q,EAAUvJ,UAAYxB,KAAKC,MAAMuB,QAClDga,EAAezQ,EAAU4hC,UAAU6pE,SAAWx2G,KAAKC,MAAM0sC,UAAU6pE,OACnE36F,EAAsB9Q,EAAU9N,cAAgB+C,KAAKC,MAAMhD,cAAgB2C,OAAO0X,OAAOvM,EAAU9N,cAAc6e,OAAO,SAAAC,GAAE,MAAiB,YAAZA,EAAGpe,SAAqBmF,SAAWlD,OAAO0X,OAAOtX,KAAKC,MAAMhD,cAAc6e,OAAO,SAAAC,GAAE,MAAiB,YAAZA,EAAGpe,SAAqBmF,SAEjP2Y,GAAkBI,GAAuBL,mCACrCxb,KAAKo1G,wBAGP7qE,EAAgBvqC,KAAKwK,MAAMtN,SAAWkQ,EAAUlQ,OAChDmxG,EAA6BruG,KAAKwK,MAAM4iG,sBAAwBhgG,EAAUggG,oBAC1E5iE,EAA6BxqC,KAAKwK,MAAM47B,oBAAoBpmC,KAAKwK,MAAMtN,UAAYkQ,EAAUg5B,oBAAoBpmC,KAAKwK,MAAMtN,SAC9HqtC,GAAiBC,GAA8B6jE,IACjDruG,KAAK8mC,gBAGHyD,GACFvqC,KAAKy2G,sBAGcrpG,EAAUk0B,WAAWthC,KAAKwK,MAAMtN,UAAY8C,KAAKwK,MAAM82B,WAAWthC,KAAKwK,MAAMtN,SAEhG8C,KAAK+tG,2JAsbD,IAAA9kG,EAAAjJ,KAEAq1G,EAAer1G,KAAKC,MAAMuB,SAAWxB,KAAKwK,MAAM0iE,mBAAqBltE,KAAKS,cAAciB,MAAM1B,KAAKwK,MAAM0iE,mBAAmBx2D,GAAG,GAGrI,OACElX,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,GAEPkF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPgX,GAAI,CAAC,EAAE,GACP3H,WAAY,SACZC,cAAe,MACfC,eAAgB,cAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,IAGLkF,EAAAC,EAAAC,cAACisG,GAAD,CACE3gG,SAAUhL,KAAKC,MAAM+K,SACrBunC,KAAM,CAAC,QAAQvyC,KAAKwK,MAAM6C,eAC1BgR,YAAc,SAAArQ,GAAC,OAAI/E,EAAKhJ,MAAMmsC,YAAY,SAC1CnzC,KAAM+G,KAAKS,cAAcG,gBAAgB,CAAC,aAAa,OAAO,cAKtEpB,EAAAC,EAAAC,cAACq7B,GAAD,CACEzpB,GAAI,CAAC,EAAE,IADT,cAKA9R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,GAEPkF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPqP,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,CAAC,EAAE,KACVqP,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,GAEPkF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,GADN,sBAKA9R,EAAAC,EAAAC,cAAC6lB,GAAD3lB,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEEyQ,GAAI,aACJ8Q,SAAUxhB,KAAKksC,gBACf7+B,cAAerN,KAAKwK,MAAM6C,cAC1B7M,YAAaR,KAAKwK,MAAMsqD,iBACxBzyC,YAAmC,YAAtBriB,KAAKwK,MAAMtN,OACxB0J,gBAAiB5G,KAAKwK,MAAM+sD,yBAGhC/3D,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,GAIHkF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,EACJtV,cAAe,UAEfpK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,GADN,sBAKA9R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgK,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBrK,EAAAC,EAAAC,cAAC8gB,GAAD,CACE1B,UAAW,CACT/U,EAAE,CAAC,EAAE,GACLzP,MAAM,IACNqrC,YAAY,WACV18B,EAAKy9B,UAAU,aAGnBjsB,eAAe,EACfkE,SAAiC,YAAtB3e,KAAKwK,MAAMtN,QAEtBsC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE6lB,GAAI,EACJ7b,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACyrC,GAAD,CACEjZ,YAAa,CACXh1B,OAAO,WAET8U,UAAW,CACTrF,KAAK,OACL1M,MAAM,CACJkiB,GAAG,CAAC,EAAE,OAIZ3iB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACV4P,WAAY,GAFd,aAQJpP,EAAAC,EAAAC,cAAC8gB,GAAD,CACE1B,UAAW,CACT/U,EAAE,CAAC,EAAE,GACLzP,MAAM,IACNqrC,YAAY,WACV18B,EAAKy9B,UAAU,YAGnBjsB,eAAe,EACfiE,YAAc1e,KAAKwK,MAAMglG,UACzB7wF,SAAiC,WAAtB3e,KAAKwK,MAAMtN,QAEtBsC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE6lB,GAAI,EACJ7b,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACyrC,GAAD,CACEjZ,YAAa,CACXh1B,OAAO,UAET8U,UAAW,CACTrF,KAAK,OACL1M,MAAM,CACJkiB,GAAG,CAAC,EAAE,OAIZ3iB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACV4P,WAAY,GAFd,gBAiChBpP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACP4kB,GAAKlf,KAAKC,MAAMuB,QAAU,EAAI,GAGR,YAAtBxB,KAAKwK,MAAMtN,OACTsC,EAAAC,EAAAC,cAACi3G,GAAD/2G,OAAAC,OAAA,GACMG,KAAKC,MACLD,KAAKwK,QAEa,WAAtBxK,KAAKwK,MAAMtN,QACbsC,EAAAC,EAAAC,cAACo0G,GAADl0G,OAAAC,OAAA,GACMG,KAAKC,MACLD,KAAKwK,WAQjB6qG,GACE71G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,CAAC,EAAE,GACPhX,MAAO,EACPsP,cAAe,SACf8G,GAAI,4BAEJlR,EAAAC,EAAAC,cAACq7B,GAAD,CAAOvV,GAAI,CAAC,EAAE,IAAd,kBACAhmB,EAAAC,EAAAC,cAACk3G,GAADh3G,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEEk1G,UAAWn1G,KAAKwK,MAAM2qG,UACtB30G,YAAaR,KAAKwK,MAAMhK,YACxB6M,cAAerN,KAAKwK,MAAM6C,cAC1BzG,gBAAiB5G,KAAKwK,MAAM5D,gBAC5B0iB,cAAe1pB,OAAOwH,KAAKpH,KAAKwK,MAAM5D,qBAyH9C5G,KAAKC,MAAMuB,SACThC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,CAAC,EAAE,GACPhX,MAAO,EACPsP,cAAe,SACf8G,GAAI,0BAEJlR,EAAAC,EAAAC,cAACq7B,GAAD,CAAOvV,GAAI,CAAC,EAAE,IAAd,gBACAhmB,EAAAC,EAAAC,cAAC67B,GAAD37B,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEE2G,gBAAiB5G,KAAKwK,MAAM5D,gBAC5B0iB,cAAe1pB,OAAOwH,KAAKpH,KAAKwK,MAAM5D,iBACtCyuB,eAAgB,CAAC,UAAU,WAAW,aAAa,cAAc,kBAAkB,mBAAmB,iBAAiB,mBACvHlN,KAAM,CACJ,CACEruB,MAAOkG,KAAKC,MAAM+K,SAAW,GAAK,OAClC/K,MAAM,CACJ3F,MAAM,CAAC,IAAK,MAEdmuB,OAAO,CACL,CACE9b,KAAK,OACL1M,MAAM,CACJkiB,GAAG,CAAC,EAAE,KAGV,CACExV,KAAK,OACL4b,QAAO,KAIb,CACEzuB,MAAM,SACNyuB,QAAO,EACPtoB,MAAM,CACJ3F,MAAM,KAERmuB,OAAO,CACL,CACE9b,KAAK,YAIX,CACE7S,MAAM,OACNmG,MAAM,CACJ3F,MAAM,CAAC,IAAK,MAEdmuB,OAAO,CACL,CACE9b,KAAK,UAIX,CACE7S,MAAM,SACNmG,MAAM,CACJ3F,MAAM,CAAC,IAAK,KACZuP,eAAe,CAAC,SAAS,eAE3B4e,OAAO,CACL,CACE9b,KAAK,aACL1M,MAAM,CACJkiB,GAAG,CAAC,EAAE,KAGV,CACEoG,QAAO,EACP5b,KAAK,YAIX,CACE7S,MAAM,SACNmG,MAAM,CACJ3F,MAAM,KAERmuB,OAAO,CACL,CACE9b,KAAK,YAIX,CACE7S,MAAM,QACNmG,MAAM,CACJ3F,MAAM,CAAC,IAAK,IACZuP,eAAe,CAAC,SAAS,eAE3B4e,OAAO,CACL,CACE9b,KAAK,YACL1M,MAAM,CACJkiB,GAAG,CAAC,EAAE,GACNljB,OAAO,CAAC,QAAQ,WAGpB,CACEspB,QAAO,EACP5b,KAAK,oBASnBnN,EAAAC,EAAAC,cAACq0G,GAADn0G,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEE4+B,WAAY7+B,KAAK++B,WACjBtB,SAAUz9B,KAAKwK,MAAM6C,cACrBk0B,OAAmC,QAA3BvhC,KAAKwK,MAAMilG,uBA3nCLtvG,aCkOT02G,eAnNb,SAAAA,EAAY52G,GAAO,IAAAI,EAAA,OAAAT,OAAAU,EAAA,EAAAV,CAAAI,KAAA62G,IACjBx2G,EAAAT,OAAAs1F,EAAA,EAAAt1F,CAAAI,KAAAJ,OAAAu1F,EAAA,EAAAv1F,CAAAi3G,GAAA/wC,KAAA9lE,KAAMC,KAVRuK,MAAQ,CACN22D,MAAM,KACNx/B,OAAM,EACNm1E,YAAW,EACXC,aAAY,GAKK12G,EAFnBI,cAAgB,KAEGJ,EAOnBsnG,mBAPmB/nG,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAOE,SAAAC,IAAA,OAAAF,EAAAtB,EAAA0B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACnBjB,EAAKI,cAAcC,SAASL,EAAKJ,OADd,wBAAAmB,EAAAS,SAAAZ,EAAAjB,SAPFK,EAWnB22G,aAAe,WAAoB,IAAnBC,IAAmBz0G,UAAAM,OAAA,QAAAC,IAAAP,UAAA,KAAAA,UAAA,GAC3B00G,EAAiB72G,EAAKI,cAAcugE,oBACpCE,EAAW,CACf16D,QAASnG,EAAKJ,MAAMuB,QACpBm8B,SAAUu5E,GAGRD,GAAkC,OAArB52G,EAAKmK,MAAM22D,QAC1BD,EAASC,MAAQ9gE,EAAKmK,MAAM22D,OAG9B9gE,EAAKI,cAAcwgE,qBAAqBC,IAtBvB7gE,EAyEnBw+B,WAzEmBj/B,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAyEN,SAAAgB,IAAA,IAAA68B,EAAA,OAAA99B,EAAAtB,EAAA0B,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,OAELu9B,EAAa,WACjBx+B,EAAKJ,MAAM4+B,cAGb,IAEEx+B,EAAK22G,cAAa,GAGdrmG,GAAc+tB,UAAUC,OAAOC,OAAOp6B,SACxCnE,EAAKI,cAAc+iB,yBAAyB,CAC1CC,cAAe,KACfC,YAAa,yBACbC,WAAY,gBACZkb,GAGFgF,WAAWhF,EAAW,MAEtBA,IAEF,MAAO6D,GACP7D,IAxBS,wBAAA18B,EAAAN,SAAAG,EAAAhC,SAvEXK,EAAKI,cAAgB,IAAIE,GAAcV,GACvCI,EAAK27F,aAAe37F,EAAK27F,aAAanxF,KAAlBjL,OAAAgZ,EAAA,EAAAhZ,QAAAgZ,EAAA,EAAAhZ,CAAAS,KACpBA,EAAK47F,iBAAmB57F,EAAK47F,iBAAiBpxF,KAAtBjL,OAAAgZ,EAAA,EAAAhZ,QAAAgZ,EAAA,EAAAhZ,CAAAS,KAJPA,4EAyBN2N,GAAG,IAAA/E,EAAAjJ,KAGd,GAFAgO,EAAEinB,kBAEGj1B,KAAKwK,MAAM22D,MACd,OAAO,EAGT,IAAMl/D,EAAW,WACfgH,EAAK4C,SAAS,CACZkrG,aAAY,EACZD,YAAW,IAEbpsG,OAAOm5B,WAAW56B,EAAKhJ,MAAM4+B,WAAW,OAsB1C,GAnBA7+B,KAAKg3G,eAGLh3G,KAAKS,cAAc+iB,yBAAyB,CAC1CC,cAAe,KACfC,YAAa,aACbC,WAAY,iBAGdkf,IAAMs5D,KAAKxrF,GAAc0/B,uBAAuBC,SAAU,CACxD6wB,MAASnhE,KAAKwK,MAAM22D,QACnBi7B,KAAK,SAAAnnC,GACNhzD,MAEDu8D,MAAM,SAAA97B,GACLzgC,MAIEiiC,aAAa,CACf,IAAMmlB,EAAgBrpD,KAAKC,MAAMuB,QAAQ8O,cACrC6mG,EAAYjzE,aAAaC,QAAQ,aAAevkB,KAAKwkB,MAAMF,aAAaC,QAAQ,cAAgB,KAChGgzE,GAAaA,EAAU9tD,KAAmB8tD,EAAU9tD,GAAe+tD,WACrED,EAAU9tD,GAAe+tD,UAAW,EACpCp3G,KAAKS,cAAc4jC,gBAAgB,YAAYzkB,KAAKC,UAAUs3F,KAIlEn3G,KAAK6L,SAAS,CACZkrG,aAAY,6CAgCC/oG,GACXA,GAAKA,EAAElO,SACTE,KAAK6L,SAAS,CAAEs1D,MAAOnzD,EAAElO,OAAOsO,QAChCJ,EAAElO,OAAOu8F,WAAWC,UAAUljF,IAAI,mDAKpC,OACE5Z,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAO4hC,OAAQvhC,KAAKC,MAAMshC,QAEtBvhC,KAAKwK,MAAMssG,WACTt3G,EAAAC,EAAAC,cAAC8hC,GAAD,CACE9F,UAAW17B,KAAK6+B,YAEhBr/B,EAAAC,EAAAC,cAAC8hC,GAAUzF,OAAX,CAAkBjiC,MAAO,WAAYoX,KAAI,oBACzC1R,EAAAC,EAAAC,cAAC8hC,GAAUpF,KAAX,KACE58B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMrF,MAAO,EAAGsP,cAAe,SAAU0H,GAAI,GAC3C9R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMxB,MAAO,YAAakT,UAAW,SAAUrS,SAAU,EAAGwmB,GAAI,GAAhE,2BAGAhmB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE6lB,GAAI,EACJlrB,MAAO,OACPgF,aAAc,EACd8e,QAASpe,KAAK6+B,YAJhB,YAYNr/B,EAAAC,EAAAC,cAAC8hC,GAAD,CAAW9F,UAAW17B,KAAK6+B,YACzBr/B,EAAAC,EAAAC,cAAC8hC,GAAUzF,OAAX,CAAkBjiC,MAAO,mBAAoBoX,KAAI,4BAEjD1R,EAAAC,EAAAC,cAAC8hC,GAAUpF,KAAX,KACE58B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM48F,SAAUv8F,KAAKg8F,cACnBx8F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMrF,MAAO,EAAGsP,cAAe,SAAU0H,GAAI,GAC3C9R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMxB,MAAO,WAAYkT,UAAW,OAAQrS,SAAU,EAAGwmB,GAAI,GAA7D,8CAIFhmB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMrF,MAAO,EAAGsP,cAAe,SAAUsV,GAAI,GAC3C1f,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM6lB,GAAI,EAAG5b,cAAe,MAAOD,WAAY,UAC7CnK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgN,KAAM,cACNxO,MAAOpF,EAAOL,MACd2T,KAAM,OAER7M,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMxB,MAAO,YAAakT,UAAW,OAAQrS,SAAU,EAAG4P,WAAY,EAAG4W,GAAI,EAAGlZ,GAAI,GAApF,wBAIF9M,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM6lB,GAAI,EAAG5b,cAAe,OAC1BpK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgN,KAAM,cACNxO,MAAOpF,EAAOL,MACd2T,KAAM,OAER7M,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMxB,MAAO,YAAakT,UAAW,OAAQrS,SAAU,EAAG4P,WAAY,EAAG4W,GAAI,EAAGlZ,GAAI,GAApF,2BAIF9M,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM6lB,GAAI,EAAG5b,cAAe,OAC1BpK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgN,KAAM,cACNxO,MAAOpF,EAAOL,MACd2T,KAAM,OAER7M,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMxB,MAAO,YAAakT,UAAW,OAAQrS,SAAU,EAAG4P,WAAY,EAAG4W,GAAI,EAAGlZ,GAAI,GAApF,mBAIF9M,EAAAC,EAAAC,cAACC,EAAA,EAAK68F,MAAN,CAAYliG,MAAO,EAAGyW,MAAO,IAC3BvR,EAAAC,EAAAC,cAACC,EAAA,EAAKkiB,MAAN,CACEzY,KAAK,QACLuD,KAAK,QACLrS,MAAO,EACPmiG,QAAS,OACTp1E,OAAQ,EACRlG,GAAI,EACJC,GAAI,EACJpiB,SAAU,EACVqS,UAAW,CAAC,SAAS,QACrBiW,YAAa,oBACb9F,SAAUxhB,KAAKi8F,iBACf70E,UAAQ,KAGZ5nB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM2R,GAAI,EAAG1H,cAAe,SAAUD,WAAY,SAAUE,eAAgB,UAC1ErK,EAAAC,EAAAC,cAAC6nB,GAAD,CACEvB,WAAY,SACZF,UAAW9lB,KAAKwK,MAAMusG,YACtBlxF,YAAa,CAAC7G,UAAUq4F,KAAcngH,eAAeoD,MAAM,OAAO8O,KAAK,YAGzE5J,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMuf,GAAI,EAAGd,QAASpe,KAAK6+B,WAAY5X,WAAY,QAAnD,wCAjNK6K,IAAM3xB,WCiElBm3G,eA/Db,SAAAA,EAAYr3G,GAAO,IAAAI,EAAA,OAAAT,OAAAU,EAAA,EAAAV,CAAAI,KAAAs3G,IACjBj3G,EAAAT,OAAAs1F,EAAA,EAAAt1F,CAAAI,KAAAJ,OAAAu1F,EAAA,EAAAv1F,CAAA03G,GAAAxxC,KAAA9lE,KAAMC,KAbRuK,MAAQ,GAYWnK,EATnBI,cAAgB,KASGJ,EAKnBsnG,mBALmB/nG,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAKE,SAAAC,IAAA,OAAAF,EAAAtB,EAAA0B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACnBjB,EAAK2I,YADc,wBAAA5H,EAAAS,SAAAZ,EAAAjB,SALFK,EASnBw+B,WATmBj/B,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KASN,SAAAgB,IAAA,OAAAjB,EAAAtB,EAAA0B,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,OACXjB,EAAKJ,MAAM4+B,aADA,wBAAA18B,EAAAN,SAAAG,EAAAhC,SAPXK,EAAK2I,YAFY3I,2EAPbL,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,yDAmB9C,OACET,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE4hC,OAAQvhC,KAAKC,MAAMshC,QAEnB/hC,EAAAC,EAAAC,cAAC8hC,GAAD,CACErP,SAAU,CAAC,QAAQ,SACnBuJ,UAAW17B,KAAKC,MAAM4+B,YAEtBr/B,EAAAC,EAAAC,cAAC8hC,GAAUzF,OAAX,CACErG,GAAI,EACJ57B,MAAOkG,KAAKC,MAAMnG,QAGpB0F,EAAAC,EAAAC,cAAC8hC,GAAUpF,KAAX,KACE58B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPsP,cAAe,UAEfpK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACVqS,UAAW,OACXlT,MAAO,YACPytB,wBAAyB,CAAEC,OAAQ7rB,KAAKC,MAAMs3G,YAIlD/3G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE6lB,GAAI,EACJ7b,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACmsC,GAAD,CACExtB,YAAare,KAAK6+B,WAClBhZ,YAAa,CACXvrB,MAAM,CAAC,OAAO,SAHlB,qBA7Daw3B,IAAM3xB,WC2LlBq3G,eAxKb,SAAAA,EAAYv3G,GAAO,IAAAI,EAAA,OAAAT,OAAAU,EAAA,EAAAV,CAAAI,KAAAw3G,IACjBn3G,EAAAT,OAAAs1F,EAAA,EAAAt1F,CAAAI,KAAAJ,OAAAu1F,EAAA,EAAAv1F,CAAA43G,GAAA1xC,KAAA9lE,KAAMC,KAfRuK,MAAQ,CACNitG,eAAc,GAaGp3G,EATnBI,cAAgB,KASGJ,EAKnBsnG,mBALmB/nG,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAKE,SAAAC,IAAA,OAAAF,EAAAtB,EAAA0B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACnBjB,EAAK2I,YADc,wBAAA5H,EAAAS,SAAAZ,EAAAjB,SALFK,EASnBw+B,WATmBj/B,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KASN,SAAAgB,IAAA,OAAAjB,EAAAtB,EAAA0B,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,WACajB,EAAKI,cAAcG,gBAAgB,CAAC,gBAAgB,YAAY,SAAS,SAAS,YAD/F,CAAAuB,EAAAb,KAAA,eAAAa,EAAAb,KAAA,EAIHjB,EAAKI,cAAc+iB,yBAAyB,CAChDC,cAAe,KACfC,YAAa,2BACbC,WAAY,iBAPL,OASTtjB,EAAKJ,MAAM4+B,aATF18B,EAAAb,KAAA,eAWTjB,EAAKJ,MAAM4+B,aAXF,wBAAA18B,EAAAN,SAAAG,EAAAhC,SATMK,EAwBnBq3G,oBAAsB,SAACD,GAEjBA,EACFp3G,EAAKI,cAAc4jC,gBAAgB,uBAAuB,QAE1DhkC,EAAKI,cAAcgkE,iBAAiB,wBAGtCpkE,EAAKwL,SAAS,CACZ4rG,mBAjCep3G,EAqCnBvD,QAAU,WACR,IAAM66G,EAAsBt3G,EAAKI,cAAcG,gBAAgB,CAAC,QAAQ,iBAAiB,UACzFP,EAAKJ,MAAMmsC,YAAY,SAASurE,GAChCt3G,EAAKJ,MAAM4+B,cAtCXx+B,EAAK2I,YAFY3I,2EAPbL,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,yDA+CvC,IAAAgJ,EAAAjJ,KAEDiS,EAAa,CACjBrD,WAAW,EACX5P,SAAS,CAAC,EAAE,GACZb,MAAM,WACNuL,UAAU,CACRG,eAAe,eAInB,OACErK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE4hC,OAAQvhC,KAAKC,MAAMshC,QAEnB/hC,EAAAC,EAAAC,cAAC8hC,GAAD,CACErP,SAAU,CAAC,QAAQ,SACnBuJ,UAAW17B,KAAKC,MAAM4+B,YAEtBr/B,EAAAC,EAAAC,cAAC8hC,GAAUzF,OAAX,CACEC,WAAY,OACZliC,MAAO,kBACPoX,KAAI,uBAGN1R,EAAAC,EAAAC,cAAC8hC,GAAUpF,KAAX,KACE58B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,EACJhX,MAAO,EACPsP,cAAe,UAEfpK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE6lB,GAAI,EACJxmB,SAAU,EACVb,MAAO,WACPkT,UAAW,UAJb,2HASF7R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPsP,cAAe,UAEfpK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE6lB,GAAI,EACJ7b,WAAY,SACZC,cAAe,UAGb5J,KAAKC,MAAM23G,yBAA2Bh4G,OAAOwH,KAAKpH,KAAKC,MAAM23G,yBAAyB18F,IAAK,SAAAxX,GAAK,OAC9FlE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,EACJ3H,WAAY,SACZC,cAAe,MACf2T,IAAG,SAAA9Y,OAAWf,GACdmG,eAAgB,iBAEhBrK,EAAAC,EAAAC,cAACwiB,GAAD,CACExe,MAAOA,EACPsO,UAAW,CACTrF,KAAK,OACL1M,MAAM,CACJkiB,GAAG,EACHljB,OAAO,UAGXuB,YAAayI,EAAKhJ,MAAM23G,wBAAwBl0G,GAAOlD,cAEzDhB,EAAAC,EAAAC,cAAC8R,EAAD5R,OAAAC,OAAA,CACEsiB,GAAI,GACAlQ,EAFN,CAGExI,aAAc,EACdN,OAAQF,EAAKhJ,MAAM23G,wBAAwBl0G,GAAOxC,WAEpD1B,EAAAC,EAAAC,cAACwiB,GAAD,CACExe,MAAOA,EACPsO,UAAW,CACTrF,KAAK,YACL1M,MAAMgS,GAERzR,YAAayI,EAAKhJ,MAAM23G,wBAAwBl0G,GAAOlD,kBAMjEhB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,EACJ3H,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBrK,EAAAC,EAAAC,cAAC6nB,GAAD,CACEvB,WAAY,UACZ3H,YAAare,KAAKlD,QAClBgpB,UAAW9lB,KAAKwK,MAAMusG,YACtBlxF,YAAa,CACXvrB,MAAM,CAAC,OAAO,OACd0kB,UAAUq4F,KAAcngH,kBAS5BsI,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,EACJkI,UAAU,EACVjpB,MAAO,WACP01B,QAAS7zB,KAAKwK,MAAMitG,cACpB1mG,MAAK,8BACLyQ,SAAW,SAAAxT,GAAC,OAAI/E,EAAKyuG,oBAAoB1pG,EAAElO,OAAO+zB,wBA7KzC/B,IAAM3xB,WCudlB03G,eAvcb,SAAAA,EAAY53G,GAAO,IAAAI,EAAA,OAAAT,OAAAU,EAAA,EAAAV,CAAAI,KAAA63G,IACjBx3G,EAAAT,OAAAs1F,EAAA,EAAAt1F,CAAAI,KAAAJ,OAAAu1F,EAAA,EAAAv1F,CAAAi4G,GAAA/xC,KAAA9lE,KAAMC,KAfRuK,MAAQ,CACNitG,eAAc,GAaGp3G,EATnBI,cAAgB,KASGJ,EAKnBsnG,mBALmB/nG,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAKE,SAAAC,IAAA,OAAAF,EAAAtB,EAAA0B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACnBjB,EAAK2I,YADc,wBAAA5H,EAAAS,SAAAZ,EAAAjB,SALFK,EASnBw+B,WATmBj/B,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KASN,SAAAgB,IAAA,OAAAjB,EAAAtB,EAAA0B,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,WACajB,EAAKI,cAAcG,gBAAgB,CAAC,gBAAgB,YAAY,SAAS,SAAS,YAD/F,CAAAuB,EAAAb,KAAA,eAAAa,EAAAb,KAAA,EAIHjB,EAAKI,cAAc+iB,yBAAyB,CAChDC,cAAe,KACfC,YAAa,sBACbC,WAAY,iBAPL,OASTtjB,EAAKJ,MAAM4+B,aATF18B,EAAAb,KAAA,eAWTjB,EAAKJ,MAAM4+B,aAXF,wBAAA18B,EAAAN,SAAAG,EAAAhC,SATMK,EAwBnBq3G,oBAAsB,SAACD,GAEjBA,EACFp3G,EAAKI,cAAc4jC,gBAAgB,uBAAuB,QAE1DhkC,EAAKI,cAAcgkE,iBAAiB,wBAGtCpkE,EAAKwL,SAAS,CACZ4rG,mBAjCep3G,EAqCnBvD,QArCmB,eAAAwV,EAAA1S,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAqCT,SAAA0B,EAAOgB,GAAP,IAAA4oC,EAAA1pC,EAAAJ,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,WAAagrC,EAAb1pC,EAAAE,OAAA,QAAAC,IAAAH,EAAA,GAAAA,EAAA,GAAsB,QAG5B0pC,EAAWjsC,EAAKJ,MAAMgH,mBAGA5G,EAAKI,cAAcG,gBAAgB,CAAC,gBAAgB,YAAY,SAAS,SAAS,YANlG,CAAAiC,EAAAvB,KAAA,gBAAAuB,EAAAvB,KAAA,EASAjB,EAAKI,cAAc+iB,yBAAyB,CAChDC,cAAe,eACfC,YAAa,UACbC,WAAU,GAAAlf,OAAKpE,EAAKJ,MAAMgH,iBAAhB,KAAAxC,OAAoCf,KAZ1C,OAcNrD,EAAKJ,MAAMmsC,YAAX,GAAA3nC,OAA0B6nC,EAA1B,KAAA7nC,OAAsCf,IACtCrD,EAAKJ,MAAM4+B,aAfLh8B,EAAAvB,KAAA,iBAiBNjB,EAAKJ,MAAMmsC,YAAX,GAAA3nC,OAA0B6nC,EAA1B,KAAA7nC,OAAsCf,IACtCrD,EAAKJ,MAAM4+B,aAlBL,yBAAAh8B,EAAAhB,SAAAa,EAAA1C,SArCS,gBAAAqC,GAAA,OAAAiQ,EAAA/P,MAAAvC,KAAAwC,YAAA,GAAAnC,EA2DnBy3G,QA3DmB,eAAArlG,EAAA7S,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA2DT,SAAAkC,EAAOQ,GAAP,IAAAyoC,EAAA,OAAAprC,EAAAtB,EAAA0B,KAAA,SAAAiC,GAAA,cAAAA,EAAA/B,KAAA+B,EAAA9B,MAAA,UACF6qC,EAAc9rC,EAAKI,cAAcG,gBAAgB,CAAC,QAAQ,oBACxCP,EAAKI,cAAcG,gBAAgB,CAAC,gBAAgB,YAAY,SAAS,SAAS,YAFlG,CAAAwC,EAAA9B,KAAA,eAAA8B,EAAA9B,KAAA,EAKAjB,EAAKI,cAAc+iB,yBAAyB,CAChDC,cAAe,eACfC,YAAa,UACbC,WAAU,GAAAlf,OAAKpE,EAAKJ,MAAMgH,iBAAhB,KAAAxC,OAAoCf,KAR1C,OAUNrD,EAAKJ,MAAMmsC,YAAX,SAAA3nC,OAAgC0nC,EAAYf,MAA5C,KAAA3mC,OAAqDf,IACrDrD,EAAKJ,MAAM4+B,aAXLz7B,EAAA9B,KAAA,gBAaNjB,EAAKJ,MAAMmsC,YAAX,SAAA3nC,OAAgC0nC,EAAYf,MAA5C,KAAA3mC,OAAqDf,IACrDrD,EAAKJ,MAAM4+B,aAdL,yBAAAz7B,EAAAvB,SAAAqB,EAAAlD,SA3DS,gBAAAsC,GAAA,OAAAmQ,EAAAlQ,MAAAvC,KAAAwC,YAAA,GAEjBnC,EAAK2I,YAFY3I,2EAPbL,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,yDAiFvC,IAAAgJ,EAAAjJ,KAEP,IAAKA,KAAKC,MAAMiH,sBAAwBlH,KAAKC,MAAM2G,gBACjD,OAAO,KAGT,IAAMqL,EAAa,CACjBrD,WAAW,EACX5P,SAAS,CAAC,EAAE,GACZb,MAAM,WACNuL,UAAU,CACRG,eAAe,eAInB,OACErK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE4hC,OAAQvhC,KAAKC,MAAMshC,QAEnB/hC,EAAAC,EAAAC,cAAC8hC,GAAD,CACErP,SAAU,CAAC,QAAQ,SACnBuJ,UAAW17B,KAAKC,MAAM4+B,YAEtBr/B,EAAAC,EAAAC,cAAC8hC,GAAUzF,OAAX,CACE7qB,KAAI,qBACJpX,MAAO,oBACPkiC,WAAY,CAAC,OAAO,UAGtBx8B,EAAAC,EAAAC,cAAC8hC,GAAUpF,KAAX,KACE58B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,EACJhX,MAAO,EACPsP,cAAe,UAEfpK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE6lB,GAAI,EACJxmB,SAAU,CAAC,EAAE,GACbb,MAAO,WACPkT,UAAW,UAJb,wHASF7R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPsP,cAAe,UAEfpK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,CAAC,EAAE,GACPvV,WAAY,SACZC,cAAe,OAEfpK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,CAAC,EAAE,GACb1E,MAAO,CAAC,GAAI,KACZsU,WAAY,CAAC,EAAE,GACfzQ,MAAO,aAGL6B,KAAKC,MAAM+K,SAAW,QAAU,qBAIjChL,KAAKC,MAAM+K,UACVxL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,IACPsU,WAAY,CAAC,EAAE,GACfzQ,MAAO,YACP0L,eAAgB,UAJlB,YAWD7J,KAAKC,MAAM+K,UACVxL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,IACPsU,WAAY,CAAC,EAAE,GACfzQ,MAAO,YACP0L,eAAgB,UAJlB,WAUJrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,CAAC,EAAE,GACb4P,WAAY,CAAC,EAAE,GACftU,MAAO,CAAC,IAAK,KACb6D,MAAO,YACP0L,eAAgB,UAGd7J,KAAKC,MAAM+K,SAAW,MAAQ,WAGlCxL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,CAAC,IAAK,QAKjBkF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPqP,WAAY,SACZC,cAAe,UAGb5J,KAAKC,MAAMq5B,iBAAmB15B,OAAOwH,KAAKpH,KAAKC,MAAMq5B,iBAAiBpe,IAAK,SAAA27C,GACzE,IAAMnzD,EAAQuF,EAAKhJ,MAAMq5B,gBAAgBu9B,GAAUnzD,MAC7C4oC,EAAWrjC,EAAKhJ,MAAMq5B,gBAAgBu9B,GAAUvqB,SAChD9rC,EAAcyI,EAAKhJ,MAAMq5B,gBAAgBu9B,GAAUr2D,YACnDU,EAAU+H,EAAKhJ,MAAMq5B,gBAAgBu9B,GAAUxkD,4BACrD,OACE7S,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,EACJ5kB,MAAO,EACPqP,WAAY,SACZC,cAAe,MACf2T,IAAG,SAAA9Y,OAAWoyD,GACdhtD,eAAgB,iBAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,CAAC,GAAI,KACZqP,WAAY,SACZC,cAAe,OAEfpK,EAAAC,EAAAC,cAACwiB,GAAD,CACElQ,UAAW,CACTrF,KAAK,OACL1M,MAAM,CACJkiB,GAAG,EACHljB,OAAO,CAAC,QAAQ,WAGpBuB,YAAaA,EACbkD,MAAOlD,EAAYkE,KAAKhB,QAE1BlE,EAAAC,EAAAC,cAACwiB,GAAD,CACElQ,UAAW,CACTrF,KAAK,YACL1M,MAAMgS,GAERzR,YAAaA,EACbkD,MAAOlD,EAAYkE,KAAKhB,UAIzBuF,EAAKhJ,MAAM+K,UACVxL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,IACPqP,WAAY,SACZE,eAAgB,UAEhBrK,EAAAC,EAAAC,cAAC8R,EAAD5R,OAAAC,OAAA,GACMoS,EADN,CAEExI,aAAc,EACdN,OAAQjI,EACRwI,UAAW,CACTG,eAAe,eAOtBZ,EAAKhJ,MAAM+K,UACVxL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,IACPqP,WAAY,SACZE,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACwiB,GAADtiB,OAAAC,OAAA,GACMoJ,EAAKhJ,MADX,CAEE+R,UAAW,CACTrF,KAAK,SACL1M,MAAMgS,GAERvO,MAAOA,EACPlD,YAAaA,MAKrBhB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,CAAC,IAAK,KACbqP,WAAY,SACZE,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACwiB,GAADtiB,OAAAC,OAAA,GACMoJ,EAAKhJ,MADX,CAEE+R,UAAW,CACTrF,KAAK,MACL1M,MAAMgS,GAERvO,MAAOA,EACPlD,YAAaA,MAGjBhB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,CAAC,IAAK,KACbqP,WAAY,SACZE,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACmsC,GAAD,CACExtB,YAAc,SAAArQ,GAAC,OAAI/E,EAAKnM,QAAQ4G,EAAM4oC,IACtCzmB,YAAa,CACXxZ,KAAK,QACL/R,MAAM,OACN0kB,UAAUq4F,KAAcngH,iBAL5B,gBAgBZsI,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPqP,WAAY,SACZC,cAAe,UAGb5J,KAAKC,MAAM83G,wBAA0Bn4G,OAAOwH,KAAKpH,KAAKC,MAAM83G,wBAAwB78F,IAAK,SAAAxX,GACvF,IAAMlD,EAAcyI,EAAKhJ,MAAM83G,uBAAuBr0G,GAAOlD,YAE7D,IAAKA,EACH,OAAO,KAGT,IAAMU,EAAU+H,EAAKhJ,MAAM83G,uBAAuBr0G,GAAOxC,QACrD4rE,EAAiB,KAOrB,OAJEA,EADEtsE,EAAY0G,sBAAwB+B,EAAKhJ,MAAM2G,gBAAgBpG,EAAYsiB,WAC5D7Z,EAAKhJ,MAAMiH,oBAAoB1G,EAAY0G,oBAAoB,IAAI1G,EAAYsiB,WAE/E7Z,EAAKhJ,MAAM2G,gBAAgBpG,EAAYsiB,WAGxDtjB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,EACJ5kB,MAAO,EACPqP,WAAY,SACZC,cAAe,MACf2T,IAAG,SAAA9Y,OAAWf,GACdmG,eAAgB,iBAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,IACPqP,WAAY,SACZC,cAAe,OAEfpK,EAAAC,EAAAC,cAACwiB,GAAD,CACElQ,UAAW,CACTrF,KAAK,OACL1M,MAAM,CACJkiB,GAAG,EACHljB,OAAO,UAGXuB,YAAaA,EACbkD,MAAOA,IAETlE,EAAAC,EAAAC,cAACwiB,GAAD,CACElQ,UAAW,CACTrF,KAAK,YACL1M,MAAMgS,GAERzR,YAAaA,EACbkD,MAAOA,KAGXlE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,IACPqP,WAAY,SACZE,eAAgB,UAEhBrK,EAAAC,EAAAC,cAAC8R,EAAD5R,OAAAC,OAAA,GACMoS,EADN,CAEExI,aAAc,EACdN,OAAQjI,EACRwI,UAAW,CACTG,eAAe,cAIrBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,IACPqP,WAAY,SACZE,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACwiB,GAADtiB,OAAAC,OAAA,GACMoJ,EAAKhJ,MADX,CAEE+R,UAAW,CACTrF,KAAK,SACL1M,MAAMgS,GAERvO,MAAOopE,EAAeppE,MACtBlD,YAAassE,MAGjBttE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,IACPqP,WAAY,SACZE,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACwiB,GAADtiB,OAAAC,OAAA,GACMoJ,EAAKhJ,MADX,CAEE+R,UAAW,CACTrF,KAAK,MACL1M,MAAMgS,GAERvO,MAAOopE,EAAeppE,MACtBlD,YAAassE,MAGjBttE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,IACPqP,WAAY,SACZE,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACmsC,GAAD,CACExtB,YAAc,SAAArQ,GAAC,OAAI/E,EAAK6uG,QAAQp0G,IAChCmiB,YAAa,CACXxZ,KAAK,QACL/R,MAAM,OACN0kB,UAAUq4F,KAAcngH,iBAL5B,gBAgBZsI,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE6lB,GAAI,EACJ7b,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACmsC,GAAD,CACExtB,YAAare,KAAK6+B,WAClBhZ,YAAa,CACX7mB,SAAS,CAAC,EAAE,GACZ1E,MAAM,CAAC,OAAO,SAJlB,6BAzbWw3B,IAAM3xB,uDCiOlB63G,8MAxNbxtG,MAAQ,CACNmrF,QAAQ,EACR3mE,SAAU,QAGZipF,kCAAe,SAAAh3G,IAAA,IAAA+tB,EAAA,OAAAjuB,EAAAtB,EAAA0B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAERjB,EAAKJ,MAAMiH,qBAAwB7G,EAAKJ,MAAM2b,sBAAyBvb,EAAKJ,MAAMuB,SAAmC,OAAxBnB,EAAKmK,MAAMwkB,SAFhG,CAAA5tB,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,UAGJ,GAHI,OAMPotB,EAAW,GACCpvB,OAAOwH,KAAK/G,EAAKJ,MAAMiH,oBAAoBqtC,MAGnDzqC,QAAS,SAAAgZ,GACjB,IAAMgxB,EAAS,GACfA,EAAOrjC,KAAKqS,GACZljB,OAAOwH,KAAK/G,EAAKJ,MAAMiH,qBAAqB4C,QAAS,SAAAwiC,GACnD,IAAM4rE,EAAgB73G,EAAKJ,MAAMiH,oBAAoBolC,GAAUxpB,GAC3Do1F,GACFpkE,EAAOrjC,KAAKynG,EAAcxzG,KAAKhB,SAInCsrB,EAASve,KAAKqjC,KAiBhBzzC,EAAKwL,SAAS,CACZmjB,aAtCW,wBAAA5tB,EAAAS,SAAAZ,EAAAjB,WA2CfS,cAAgB,OA6BhB03G,mDAAe,SAAAn2G,EAAOsoD,GAAP,OAAAvpD,EAAAtB,EAAA0B,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,cAEbjB,EAAKI,cAAc+iB,yBAAyB,CAC1CC,cAAe,UACfC,YAAa,WAGwB,oBAA5BrjB,EAAKJ,MAAMk4G,cACpB93G,EAAKJ,MAAMk4G,aAAa7tD,GARbnoD,EAAAb,KAAA,EAWAjB,EAAKJ,MAAMm4G,QAAQD,aAAa7tD,GAXhC,cAAAnoD,EAAAP,OAAA,SAAAO,EAAAV,MAAA,wBAAAU,EAAAN,SAAAG,EAAAhC,0IA3BTA,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,oDAK9CD,KAAKgJ,wDAILhJ,KAAKgJ,YACLhJ,KAAKi4G,0DAGYltG,GACjB/K,KAAKgJ,YAEL,IAAMyS,EAAiB1Q,EAAUstG,WAAar4G,KAAKC,MAAMuB,QACnDoa,GAAwB7Q,EAAU6Q,sBAAwB5b,KAAKC,MAAM2b,uBACvC7Q,EAAU7D,qBAAuBlH,KAAKC,MAAMiH,qBAC9CuU,GAAkBG,IAClD5b,KAAKi4G,+JAmBPj4G,KAAK6L,SAAS,CACZ8pF,QAAO,IAGT31F,KAAKC,MAAM01F,kBACL31F,KAAKm4G,aAAa,6IAIlB,IAAAlvG,EAAAjJ,KACN,GAAIA,KAAKC,MAAMuB,QAAQ,CAGrB,IAAM2kF,EAAQvmF,OAAOwH,KAAKpH,KAAKC,MAAMiH,qBAAqBpE,OAAO,EAC3Dw1G,EAAiBt4G,KAAKwK,MAAMwkB,UAAYhvB,KAAKwK,MAAMwkB,SAAS9T,IAAK,SAAC44B,EAAO3jC,GAC7E,OACE3Q,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,EACJ5kB,MAAO,EACPkjB,UAAW,EACXD,IAAK,WAAWpN,EAChBxG,WAAY,SACZC,cAAe,OAGXkqC,EAAO54B,IAAK,SAACxX,EAAM60B,GAAP,OACV/4B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EAAE6rF,EACTv8E,cAAe,MACf2T,IAAK,iBAAiB7Z,EACtBmG,eAAgB,cAEhBrK,EAAAC,EAAAC,cAACwiB,GAAD,CACExe,MAAOA,EACPlD,YAAa,CACXkD,MAAMA,GAERsO,UAAW,CACTrF,KAAK,OACL1M,MAAM,CACJkiB,GAAG,CAAC,EAAE,GACN7V,GAAG,CAAC,EAAE,GACNhS,MAAM,CAAC,QAAQ,OACf2E,OAAO,CAAC,QAAQ,WAItBO,EAAAC,EAAAC,cAACwiB,GAADtiB,OAAAC,OAAA,GACMoJ,EAAKhJ,MADX,CAEEyD,MAAOA,EACPlD,YAAa,CACXkD,MAAMA,GAERsO,UAAW,CACTrF,KAAK,eACL1M,MAAM,CACJjB,SAAS,CAAC,EAAE,GACZ4P,WAAW,IACXzQ,MAAM,sBAW1B,OACEqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAO4hC,OAAQvhC,KAAKC,MAAMshC,QACxB/hC,EAAAC,EAAAC,cAAC8hC,GAAD,CAAW9F,UAAW17B,KAAKC,MAAM4+B,YAC/Br/B,EAAAC,EAAAC,cAAC8hC,GAAUzF,OAAX,CAAkBjiC,MAAO,qBACzB0F,EAAAC,EAAAC,cAAC8hC,GAAUpF,KAAX,KACE58B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,CAAC,OAAQ,QAChBsP,cAAe,SACfD,WAAY,SACZE,eAAgB,UAChBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEiK,cAAe,SACfD,WAAY,SACZE,eAAgB,SAChB2b,GAAI,CAAC,EAAE,IACPhmB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKud,MAAO,CAAC+b,UAAa,eACxBz5B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAY6G,QAASxG,KAAKC,MAAMuB,YAGpChC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,EACJhX,MAAO,OACPqP,WAAY,SACZwoB,SAAU,CAAC,OAAO,QAClBvoB,cAAe,UAEfpK,EAAAC,EAAAC,cAACC,EAAA,EAAQyf,GAAT,CACE/N,UAAW,UADb,YAKEinG,KAKR94G,EAAAC,EAAAC,cAAC8hC,GAAUnF,OAAX,MACIr8B,KAAKC,MAAMm4G,QAAQlgH,QAAW8H,KAAKC,MAAMm4G,QAAQz2E,OAAS3hC,KAAKC,MAAMm4G,QAAQ9tD,gBAC7E9qD,EAAAC,EAAAC,cAAC6nB,GAAD,CACE1B,YAAa,CAAC7G,UAAUC,KAAO/nB,eAAeoI,aAAa,OAAO4f,GAAG,CAAC,EAAE,GAAGhgB,SAAS,CAAC,OAAO,SAASmN,KAAK,CAAC,OAAO,WAClHgS,YAAWze,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAG,SAAAkC,IAAA,OAAAnC,EAAAtB,EAAA0B,KAAA,SAAAiC,GAAA,cAAAA,EAAA/B,KAAA+B,EAAA9B,MAAA,cAAA8B,EAAA9B,KAAA,EAAoB2H,EAAK0sF,SAAzB,wBAAAvyF,EAAAvB,SAAAqB,EAAAlD,SACdgmB,WAAY,gBACZF,UAAW9lB,KAAKwK,MAAMmrF,YASpC,OAAO,YAtNgB7jE,IAAM3xB,WC8JlBo4G,8MApKb/tG,MAAQ,CACNguG,YAAa,KACbliG,iBAAkB,QAIpB22C,aAAe,OACfxsD,cAAgB,OAgDhBg4G,YAAc,SAACC,GACbr4G,EAAKwL,SAAS,SAAArB,GAAK,OAAA5K,OAAAsL,EAAA,EAAAtL,CAAA,GAAS4K,EAAT,CAAgBguG,YAAchuG,EAAMguG,cAAcE,EAAY,KAAOA,kFA9CpF14G,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,OAG9CD,KAAKitD,aAAejtD,KAAKS,cAAc2vE,uKAIvCpwE,KAAKgJ,YACLhJ,KAAK24G,4MAGkB5tG,EAAUqC,mEACjCpN,KAAKgJ,YACkB+B,EAAUvJ,UAAYxB,KAAKC,MAAMuB,SAEtDxB,KAAK24G,qSAKqB34G,KAAKS,cAAcG,gBAAgB,CAAC,YAAY,OAAO,oCAE7E0V,EAAmBtW,KAAKS,cAAciB,MAAM,YAItCiD,QAAQC,IAAI,CACpB5E,KAAKitD,aAAapsD,WAAWb,KAAKC,MAAMuB,SACxCxB,KAAKitD,aAAahqD,mBAAmBjD,KAAKC,MAAMuB,qDAJhDN,OACA03G,OAME13G,GAAW03G,IACbtiG,EAAmBtW,KAAKS,cAAciB,MAAMR,GAAS4G,KAAK8wG,sBAGrD54G,KAAK6L,SAAS,CACnByK,uDAGG,0IAOA,IAAArN,EAAAjJ,KACDk3G,EAAiBl3G,KAAKS,cAAcw2D,cAAc,kBAAiB,EAAM,MACzE4hD,EAAgB3B,EAAiBl3G,KAAKS,cAAcG,gBAAgB,CAAC,aAAas2G,EAAe5mG,gBAAkB,KACnHwoG,EAAaD,GAAiBA,EAAc3nG,KAAO2nG,EAAc3nG,KAAOgmG,EAAc,GAAAzyG,OAAMyyG,EAAe5mG,cAArB,QAA2C,KAEvI,OACEtQ,KAAKC,MAAMuB,QACThC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPsP,cAAe,CAAC,SAAS,OACzBD,WAAY,CAAC,aAAa,WAE1BnK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,EAAG,EACHJ,WAAY,SACZC,cAAe,MACfsT,MAAO,CAACoD,OAAO,WACfzW,eAAgB,aAChBuU,QAAS,SAAApQ,GAAC,OAAI/E,EAAKwvG,YAAY,aAG7BI,EACEr5G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,MACP2E,OAAQ,MACRkjB,GAAI,CAAC,EAAE,UACPzT,QAAS,cACT6C,IAAG,UAAA9M,OAAYq0G,GACfC,IAAK7B,EAAe5mG,gBAGtB9Q,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE0M,KAAM,MACN8V,GAAI,CAAC,EAAE,UACPhkB,MAAO,YACPwO,KAAM,kBAIZnN,EAAAC,EAAAC,cAAC4yB,GAAD,CACEtzB,SAAU,EACV4P,WAAY,EACZzQ,MAAO,YACPwuB,KAAM3sB,KAAKC,MAAMuB,WAKnBxB,KAAKwK,MAAM8L,kBACT9W,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2M,GAAI,CAAC,EAAE,GACPhS,MAAO,QAEPkF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEud,MAAO,CACL8J,eAAe,QAEjBhI,UAAWC,KAAOznB,cAClB4mB,QAAU,SAAApQ,GAAC,OAAI/E,EAAKhJ,MAAM+4G,aAAY,KAEtCx5G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgK,WAAY,SACZE,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwiB,GAAI,EACJ7nB,MAAO,QACP2E,OAAQ,QACRyP,QAAS,cACT6C,IAAG,2BAEL/R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACVb,MAAO,QACPyQ,WAAY,KAEX5O,KAAKwK,MAAM8L,iBAAiB9F,QAAQ,GALvC,YAWVhR,EAAAC,EAAAC,cAACu5G,GAADr5G,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEEshC,OAAiC,YAAzBvhC,KAAKwK,MAAMguG,YACnB35E,WAAY,SAAA7wB,GAAC,OAAI/E,EAAKwvG,YAAY,gBAItCj5G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPuP,eAAgB,cAEhBrK,EAAAC,EAAAC,cAAC41G,GAAD11G,OAAAC,OAAA,CACEqR,KAAM,SACFlR,KAAKC,MAFX,CAGEhH,KAAM,UACNolB,YAAare,KAAKC,MAAM6sC,qCA9JV3sC,aCoTX+4G,8MAnTb1uG,MAAQ,CACNwvE,MAAM,KACN94E,QAAQ,KACRi4G,SAAS,KACTP,UAAU,KACV92E,WAAY,CACVlM,OAAO,KACPrP,SAAQ,MAKZ9lB,cAAgB,OAChBwsD,aAAe,OAYf8jD,mCAAgB,SAAA9vG,IAAA,IAAAc,EAAAuQ,EAAApR,EAAA03G,EAAA5+B,EAAA,OAAAj5E,EAAAtB,EAAA0B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAIJqD,QAAQC,IAAI,CACpBvE,EAAK4sD,aAAapsD,WAAWR,EAAKJ,MAAMuB,SACxCnB,EAAK4sD,aAAahqD,mBAAmB5C,EAAKJ,MAAMuB,WANpC,OAAAO,EAAAX,EAAAK,KAAA6Q,EAAA1S,OAAAmF,EAAA,EAAAnF,CAAAmC,EAAA,GAEZb,EAFYoR,EAAA,GAGZsmG,EAHYtmG,EAAA,GASV0nE,EAAQ35E,EAAKI,cAAciB,MAAM,GACjCR,GAAW03G,IACb5+B,EAAQ35E,EAAKI,cAAciB,MAAMR,GAAS4G,KAAK8wG,IAGjDv4G,EAAKwL,SAAS,CACZmuE,QACA94E,UACA03G,cAjBY,wBAAAx3G,EAAAS,SAAAZ,EAAAjB,WAgDhBotC,2BAAQ,SAAAprC,IAAA,IAAAC,EAAAC,EAAA,OAAAnB,EAAAtB,EAAA0B,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,OACAW,EAAW,SAAC8Z,EAAG4lB,GAEnB,IAAM+F,EAAY,CAChBhkB,YAAa,QACbD,cAAe,aACfE,WAAY5H,EAAGpe,OAASoe,EAAGpe,OAASgkC,GAGlCA,IACF+F,EAAU/jB,WAAatjB,EAAKI,cAAcmnC,oBAAoBjG,KAI5DA,GAA8B,UAArB+F,EAAU/pC,SACrB0C,EAAKI,cAAc+iB,yBAAyBkkB,GAG9C,IAAMz8B,EAAW,CACf62B,WAAY,CACVlM,OAAO,KACPrP,SAAQ,GAEV4yF,SAASp9F,EAAGpe,OAASoe,EAAGpe,OAAS,SAGjB,YAAdoe,EAAGpe,SACLsN,EAAS/J,QAAUb,EAAKmK,MAAMouG,UAC9B3tG,EAAS2tG,UAAYv4G,EAAKqB,MAAM,GAEQ,oBAA7BrB,EAAKJ,MAAMm5G,eACpB/4G,EAAKJ,MAAMm5G,iBAIf/4G,EAAKwL,SAASZ,IAGV/I,EAAkB,SAAC6Z,GACvB,IAAM6Z,EAAS7Z,EAAG8rB,gBAClBxnC,EAAKwL,SAAS,SAACuB,GAAD,MAAgB,CAC5B00B,WAAWliC,OAAAsL,EAAA,EAAAtL,CAAA,GACNwN,EAAU00B,WADL,CAERlM,eAKNv1B,EAAK4sD,aAAanrD,aAAaG,EAASC,GAExC7B,EAAKwL,SAAS,SAACuB,GAAD,MAAgB,CAC5B00B,WAAWliC,OAAAsL,EAAA,EAAAtL,CAAA,GACNwN,EAAU00B,WADL,CAERvb,SAAQ,OArDN,wBAAApkB,EAAAN,SAAAG,EAAAhC,WA0DR6+B,iDAAa,SAAAn8B,EAAOxF,GAAP,OAAA6D,EAAAtB,EAAA0B,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,OACXjB,EAAKJ,MAAM4+B,aADA,wBAAAh8B,EAAAhB,SAAAa,EAAA1C,0IAnHPA,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,OAG9CD,KAAKitD,aAAejtD,KAAKS,cAAc2vE,+DAyBvCpwE,KAAKgJ,YACLhJ,KAAK+wG,4DAIL/wG,KAAKgJ,uDAGY+B,EAAUqC,GAC3BpN,KAAKgJ,gKAQLhJ,KAAK6L,SAAS,CACZstG,SAAS,KACTr3E,WAAY,CACVlM,OAAO,KACPrP,SAAQ,wIAoEZ,OACE/mB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE4hC,OAAQvhC,KAAKC,MAAMshC,QAEnB/hC,EAAAC,EAAAC,cAAC8hC,GAAD,CACE3F,SAAS,EACTnW,UAAW,QACXxmB,SAAU,CAAC,OAAO,SAClBw8B,UAAW17B,KAAKC,MAAM4+B,WACtB9f,WAAY,4FAEZvf,EAAAC,EAAAC,cAAC8hC,GAAUzF,OAAX,CACErG,GAAI,EACJpW,WAAY,CACVnhB,MAAM,SAERrE,MAAO,oBACPshC,aAAc,oCAGhB57B,EAAAC,EAAAC,cAAC8hC,GAAUpF,KAAX,CACEjb,GAAI,GAEJ3hB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPqP,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,EACJ5kB,MAAO,MACP2E,OAAQ,MACRsS,IAAK,2BAEP/R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,EACJlgB,SAAU,EACVb,MAAO,QACPyQ,WAAY,KAEX5O,KAAKwK,MAAMwvE,MAAQh6E,KAAKwK,MAAMwvE,MAAMxpE,QAAQ,GAAK,KAEpDhR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,EACJtS,SAAU,EACVb,MAAO,QACPyQ,WAAY,KAGV5O,KAAKwK,MAAMouG,WAAa54G,KAAKwK,MAAMouG,UAAUliG,GAAG,GAAK,sCAAwC,oCAGjGlX,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwpB,GAAI,EACJ7X,GAAI,EACJhX,MAAO,EACPsP,cAAe,SACfwxB,aAAc,mCAEd57B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,EACJhX,MAAO,EACPsP,cAAe,MACfC,eAAgB,iBAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACExB,MAAO,QACPyQ,WAAY,KAFd,YAMApP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACExB,MAAO,QACPyQ,WAAY,KAEX5O,KAAKwK,MAAMtJ,QAAUlB,KAAKwK,MAAMtJ,QAAQsP,QAAQ,GAAK,MAG1DhR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPsP,cAAe,MACfC,eAAgB,iBAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACExB,MAAO,QACPyQ,WAAY,KAFd,cAMApP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACExB,MAAO,QACPyQ,WAAY,KAEX5O,KAAKwK,MAAMouG,UAAY54G,KAAKwK,MAAMouG,UAAUpoG,QAAQ,GAAK,MAG9DhR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEklB,KAAI,KAAApgB,OAAOzE,KAAKS,cAAcG,gBAAgB,CAAC,aAAa,gBAE5DpB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEyR,OAAQ,GACRD,SAAU,WACVxH,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACVb,MAAO,QACPyQ,WAAY,KAHd,oBAOApP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2M,GAAI,EACJD,KAAM,MACNlO,MAAO,QACPwO,KAAM,iBAMZ3M,KAAKwK,MAAMouG,WAAa54G,KAAKwK,MAAMouG,UAAUliG,GAAG,IAC9ClX,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,EACJhX,MAAO,EACP8W,OAAQ,GACRD,SAAU,WACVxH,WAAY,SACZE,eAAgB,UAId7J,KAAKwK,MAAMs3B,YAAc9hC,KAAKwK,MAAMs3B,WAAWvb,QAC7C/mB,EAAAC,EAAAC,cAAC2rC,GAAD,CACErG,UAAW,QACXxC,KAAMxiC,KAAKC,MAAMuiC,KACjBgD,gBAAiB,YACjBC,qBAAsB,QACtBP,SAAQ,qBACRvY,KAAM3sB,KAAKwK,MAAMs3B,WAAWlM,OAC5BqP,WAAU,8BACVM,kBAAmBvlC,KAAKulC,kBAAkB16B,KAAK7K,QAGjDR,EAAAC,EAAAC,cAACmsC,GAAD,CACEhmB,YAAa,CACX1nB,MAAM,OACN7D,MAAM,CAAC,EAAE,OACTorB,UAAU,QACVoX,cAAc,OACd1kC,UAAU4H,KAAKwK,MAAMouG,WAAa54G,KAAKwK,MAAMouG,UAAU1zG,IAAI,IAE7DmZ,YAAare,KAAKotC,MAAMviC,KAAK7K,OAR/B,qBA7RD8xB,IAAM3xB,4CCohBdk5G,GA/gBb,SAAAA,EAAYp5G,GAAM,IAAAI,EAAAL,KAAAJ,OAAAU,EAAA,EAAAV,CAAAI,KAAAq5G,GAAAr5G,KAJlBC,MAAQ,GAIUD,KAHlBS,cAAgB,KAGET,KAKlBU,SAAW,SAAAT,GACTI,EAAKJ,MAAQA,EAETI,EAAKI,cACPJ,EAAKI,cAAcC,SAASL,EAAKJ,OAEjCI,EAAKI,cAAgB,IAAIE,GAAcN,EAAKJ,QAX9BD,KAelBs5G,eAfkB15G,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAeD,SAAAC,IAAA,IAAA4C,EAAAsC,EAAAooD,EAAAgrD,EAAA,OAAAx4G,EAAAtB,EAAA0B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAGTuC,EAHS,iBAKI,QADbsC,EAAa9F,EAAKI,cAAc8F,cAAc1C,IAJrC,CAAAzC,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,SAMNuE,GANM,cASTooD,EAAeluD,EAAKI,cAAcG,gBAAgB,CAAC,aAAa,YAAY,cATnEQ,EAAAE,KAAA,EAUSjB,EAAKI,cAAcuC,oBAAoBurD,EAAa,eAV7D,cAUXgrD,EAVWn4G,EAAAK,QAYb83G,EAAcl5G,EAAKI,cAAc4C,iBAAiBk2G,EAAY,KAZjDn4G,EAAAQ,OAAA,SAeRvB,EAAKI,cAAc8E,cAAc1B,EAAc01G,IAfvC,yBAAAn4G,EAAAS,SAAAZ,EAAAjB,SAfCA,KAiClBw5G,iBAjCkB55G,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAiCC,SAAAgB,IAAA,IAAAR,EAAAqC,EAAAsC,EAAAooD,EAAArtD,EAAAqvD,EAAA/tD,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,YAEjBE,GAFwBA,EAAP+uD,EAAAztD,OAAA,QAAAC,IAAAwtD,EAAA,GAAAA,EAAA,GAAe,OAEFlwD,EAAKJ,MAAMuB,SAFxB,CAAAW,EAAAb,KAAA,YAMTuC,EANS,oBAAAY,OAM2BjD,GAEvB,QADb2E,EAAa9F,EAAKI,cAAc8F,cAAc1C,IAPrC,CAAA1B,EAAAb,KAAA,eAAAa,EAAAP,OAAA,SASNuE,GATM,cAYTooD,EAAeluD,EAAKI,cAAcG,gBAAgB,CAAC,aAAa,YAAY,cAZnEuB,EAAAb,KAAA,GAaOjB,EAAKI,cAAcmoC,mBAAmB2lB,EAAc/sD,GAb3D,aAaTN,EAbSiB,EAAAV,MAAA,CAAAU,EAAAb,KAAA,gBAAAa,EAAAP,OAAA,SAeNvB,EAAKI,cAAc8E,cAAc1B,EAAcxD,EAAKI,cAAciB,MAAMR,KAflE,eAAAiB,EAAAP,OAAA,SAkBV,MAlBU,yBAAAO,EAAAN,SAAAG,EAAAhC,SAjCDA,KAsDlBy5G,mBAtDkB75G,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAsDG,SAAA0B,IAAA,IAAAlB,EAAAk4G,EAAA92G,EAAAJ,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,cACnBE,GAD0BA,EAAPoB,EAAAE,OAAA,QAAAC,IAAAH,EAAA,GAAAA,EAAA,GAAe,OACJvC,EAAKJ,MAAMuB,QADtBqB,EAAAvB,KAAA,EAEWjB,EAAKI,cAAcuC,oBAAoB,gBAAgB,mBAAmB,CAACxB,IAFtF,UAEbk4G,EAFa72G,EAAApB,KAIe,IAA9BsK,SAAS2tG,GAJM,CAAA72G,EAAAvB,KAAA,eAAAuB,EAAAjB,OAAA,SAKV,MALU,cAAAiB,EAAAvB,KAAA,EAQbjB,EAAKJ,MAAMilB,aAAa,kBAAkBw0F,EAAgBC,IAR7C,cAAA92G,EAAAjB,OAAA,SASZ83G,GATY,yBAAA72G,EAAAhB,SAAAa,EAAA1C,SAtDHA,KAkElB45G,gBAlEkBh6G,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAkEA,SAAAkC,IAAA,IAAA1B,EAAAq4G,EAAA53G,EAAAC,EAAAqvD,EAAA/uD,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAiC,GAAA,cAAAA,EAAA/B,KAAA+B,EAAA9B,MAAA,cAAOE,EAAP+vD,EAAAzuD,OAAA,QAAAC,IAAAwuD,EAAA,GAAAA,EAAA,GAAe,KAAKsoD,EAApBtoD,EAAAzuD,OAAA,QAAAC,IAAAwuD,EAAA,GAAAA,EAAA,GAA6B,KAAKtvD,EAAlCsvD,EAAAzuD,OAAA,QAAAC,IAAAwuD,EAAA,GAAAA,EAAA,GAA2C,KAAKrvD,EAAhDqvD,EAAAzuD,OAAA,QAAAC,IAAAwuD,EAAA,GAAAA,EAAA,GAAgE,KAChF/vD,EAAUA,GAAoBnB,EAAKJ,MAAMuB,QADzB4B,EAAA9B,KAAA,EAEajB,EAAKo5G,mBAAmBj4G,GAFrC,WAAA4B,EAAA3B,KAAA,CAAA2B,EAAA9B,KAAA,gBAAA8B,EAAA9B,KAAA,GAKDjB,EAAKI,cAAc2B,0BAA0B,kBAAkB,cAAc,CAACy3G,GAAU53G,EAASC,GALhG,eAAAkB,EAAAxB,OAAA,SAAAwB,EAAA3B,MAAA,eAAA2B,EAAAxB,OAAA,SAOT,MAPS,yBAAAwB,EAAAvB,SAAAqB,EAAAlD,SAlEAA,KA4ElB85G,iBA5EkBl6G,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA4EC,SAAAyC,IAAA,IAAAjC,EAAAu4G,EAAAz1G,EAAA9B,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,cACjBE,GADwBA,EAAP8C,EAAAxB,OAAA,QAAAC,IAAAuB,EAAA,GAAAA,EAAA,GAAe,OACFjE,EAAKJ,MAAMuB,QADxB+C,EAAAjD,KAAA,EAEYjB,EAAKo5G,mBAAmBj4G,GAFpC,WAAA+C,EAAA9C,KAAA,CAAA8C,EAAAjD,KAAA,gBAAAiD,EAAAjD,KAAA,EAIWjB,EAAKI,cAAcuC,oBAAoB,kBAAkB,iBAJpE,YAIX+2G,EAJWx1G,EAAA9C,MAAA,CAAA8C,EAAAjD,KAAA,gBAAAiD,EAAA3C,OAAA,SAMNvB,EAAKI,cAAciB,MAAMq4G,IANnB,eAAAx1G,EAAA3C,OAAA,SASV,MATU,yBAAA2C,EAAA1C,SAAA4B,EAAAzD,SA5EDA,KAwFlBg6G,mBAxFkBp6G,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAwFG,SAAA4E,IAAA,IAAApE,EAAAqC,EAAAsC,EAAAooD,EAAAsrD,EAAApoD,EAAAjvD,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAA4E,GAAA,cAAAA,EAAA1E,KAAA0E,EAAAzE,MAAA,YAEnBE,GAF0BA,EAAPiwD,EAAA3uD,OAAA,QAAAC,IAAA0uD,EAAA,GAAAA,EAAA,GAAe,OAEJpxD,EAAKJ,MAAMuB,SAFtB,CAAAuE,EAAAzE,KAAA,YAMXuC,EANW,sBAAAY,OAM2BjD,GAEzB,QADb2E,EAAa9F,EAAKI,cAAc8F,cAAc1C,IAPnC,CAAAkC,EAAAzE,KAAA,eAAAyE,EAAAnE,OAAA,SASRuE,GATQ,cAYXooD,EAAeluD,EAAKI,cAAcG,gBAAgB,CAAC,aAAa,YAAY,cAZjEmF,EAAAzE,KAAA,GAaMjB,EAAKI,cAAcuC,oBAAoBurD,EAAc,YAAa,CAAC/sD,IAbzE,eAaXq4G,EAbW9zG,EAAAtE,KAAAsE,EAAAnE,OAAA,SAeVvB,EAAKI,cAAc8E,cAAc1B,EAAcg2G,IAfrC,eAAA9zG,EAAAnE,OAAA,SAkBZ,MAlBY,yBAAAmE,EAAAlE,SAAA+D,EAAA5F,SAxFHA,KA6GlBi6G,gBA7GkBr6G,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA6GA,SAAAkF,IAAA,IAAA1E,EAAAqC,EAAAsC,EAAAooD,EAAA2rD,EAAAroD,EAAArvD,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAmF,GAAA,cAAAA,EAAAjF,KAAAiF,EAAAhF,MAAA,YAEhBE,GAFuBA,EAAPqwD,EAAA/uD,OAAA,QAAAC,IAAA8uD,EAAA,GAAAA,EAAA,GAAe,OAEDxxD,EAAKJ,MAAMuB,SAFzB,CAAA8E,EAAAhF,KAAA,YAKRuC,EALQ,mBAAAY,OAK2BjD,GAEtB,QADb2E,EAAa9F,EAAKI,cAAc8F,cAAc1C,IANtC,CAAAyC,EAAAhF,KAAA,eAAAgF,EAAA1E,OAAA,SAQLuE,GARK,cAWRooD,EAAeluD,EAAKI,cAAcG,gBAAgB,CAAC,aAAa,YAAY,cAXpE0F,EAAAhF,KAAA,GAYMjB,EAAKI,cAAcuC,oBAAoBurD,EAAc,kBAAmB,CAAC/sD,IAZ/E,aAYR04G,EAZQ5zG,EAAA7E,MAAA,CAAA6E,EAAAhF,KAAA,gBAAAgF,EAAA1E,OAAA,SAcLvB,EAAKI,cAAc8E,cAAc1B,EAAcxD,EAAKI,cAAciB,MAAMw4G,KAdnE,eAAA5zG,EAAA1E,OAAA,SAkBT,MAlBS,yBAAA0E,EAAAzE,SAAAqE,EAAAlG,SA7GAA,KAkIlBm6G,cAlIkB,eAAAx0G,EAAA/F,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAkIF,SAAAsG,EAAO8yG,GAAP,IAAAn4G,EAAAC,EAAAqsD,EAAA8rD,EAAA73G,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAyG,GAAA,cAAAA,EAAAvG,KAAAuG,EAAAtG,MAAA,cAAkBW,EAAlBo4G,EAAAv3G,OAAA,QAAAC,IAAAs3G,EAAA,GAAAA,EAAA,GAA2B,KAAKn4G,EAAhCm4G,EAAAv3G,OAAA,QAAAC,IAAAs3G,EAAA,GAAAA,EAAA,GAAgD,KACxD9rD,EAAeluD,EAAKI,cAAcG,gBAAgB,CAAC,aAAa,YAAY,eADpEgH,EAAAtG,KAAA,EAERjB,EAAKI,cAAc2B,0BAA0BmsD,EAAa,QAAQ,CAACluD,EAAKI,cAAciB,MAAM04G,IAAan4G,EAASC,GAF1G,wBAAA0F,EAAA/F,SAAAyF,EAAAtH,SAlIE,gBAAAqC,GAAA,OAAAsD,EAAApD,MAAAvC,KAAAwC,YAAA,GAAAxC,KAuIlBs6G,gBAvIkB,eAAAr0G,EAAArG,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAuIA,SAAA2F,EAAOyzG,GAAP,IAAAn4G,EAAAC,EAAAqsD,EAAAxnD,EAAAvE,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAA6F,GAAA,cAAAA,EAAA3F,KAAA2F,EAAA1F,MAAA,cAAkBW,EAAlB8E,EAAAjE,OAAA,QAAAC,IAAAgE,EAAA,GAAAA,EAAA,GAA2B,KAAK7E,EAAhC6E,EAAAjE,OAAA,QAAAC,IAAAgE,EAAA,GAAAA,EAAA,GAAgD,KAC1DwnD,EAAeluD,EAAKI,cAAcG,gBAAgB,CAAC,aAAa,YAAY,eADlEoG,EAAA1F,KAAA,EAEVjB,EAAKI,cAAc2B,0BAA0BmsD,EAAa,UAAU,CAACluD,EAAKI,cAAciB,MAAM04G,IAAan4G,EAASC,GAF1G,wBAAA8E,EAAAnF,SAAA8E,EAAA3G,SAvIA,gBAAAsC,GAAA,OAAA2D,EAAA1D,MAAAvC,KAAAwC,YAAA,GAAAxC,KA4IlBu6G,kBA5IkB,eAAAnnG,EAAAxT,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA4IE,SAAAyH,EAAO+xG,EAASljG,EAAQmjG,EAAYC,EAAWn7F,GAA/C,IAAAo7F,EAAApsD,EAAApS,EAAA4W,EAAA,OAAAhyD,EAAAtB,EAAA0B,KAAA,SAAA0H,GAAA,cAAAA,EAAAxH,KAAAwH,EAAAvH,MAAA,OACZq5G,EAAU,IAAIC,KAAQv6G,EAAKJ,MAAMuiC,KAAK,8CAEtC+rB,EAAeluD,EAAKI,cAAcG,gBAAgB,CAAC,aAAa,YAAY,eAC5Eu7C,EAAW97C,EAAKI,cAAcukB,kBAAkBupC,GAEhDwE,EAAM,CACV,CACE3D,GAAGjT,EAASstB,SACZ7oC,OAAOub,EAASxb,QAAQk6E,QACxBC,KAAK,CAACN,EAASljG,EAAQmjG,EAAYC,EAAWn7F,IAEhD,CACE6vC,GAAGjT,EAASstB,SACZ7oC,OAAOub,EAASxb,QAAQo6E,SACxBD,KAAK,CAACz6G,EAAKI,cAAciB,MAAM,IAAI,KAIvCi5G,EAAQ5nD,GAnBU,wBAAAlqD,EAAAhH,SAAA4G,EAAAzI,SA5IF,gBAAAwF,EAAAC,EAAAO,EAAAS,EAAAsB,GAAA,OAAAqL,EAAA7Q,MAAAvC,KAAAwC,YAAA,GAAAxC,KAkKlB66G,QAlKkB,eAAAxzG,EAAAzH,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAkKR,SAAAmH,EAAOqyG,EAASljG,EAAQmjG,EAAYC,EAAWn7F,GAA/C,IAAAtd,EAAAC,EAAAqsD,EAAAjmD,EAAA9F,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAoH,GAAA,cAAAA,EAAAlH,KAAAkH,EAAAjH,MAAA,cAA4DW,EAA5DqG,EAAAxF,OAAA,QAAAC,IAAAuF,EAAA,GAAAA,EAAA,GAAqE,KAAKpG,EAA1EoG,EAAAxF,OAAA,QAAAC,IAAAuF,EAAA,GAAAA,EAAA,GAA0F,KAC5FimD,EAAeluD,EAAKI,cAAcG,gBAAgB,CAAC,aAAa,YAAY,eAD1E2H,EAAAjH,KAAA,EAEKjB,EAAKJ,MAAMmC,0BAA0BmsD,EAAc,UAAW,CAACisD,EAASljG,EAAQmjG,EAAYC,EAAWn7F,GAAc,KAAMtd,EAAUC,GAF1I,cAAAqG,EAAA3G,OAAA,SAAA2G,EAAA9G,MAAA,wBAAA8G,EAAA1G,SAAAsG,EAAAnI,SAlKQ,gBAAA8I,EAAA8wD,EAAAC,EAAAZ,EAAAC,GAAA,OAAA7xD,EAAA9E,MAAAvC,KAAAwC,YAAA,GAAAxC,KAuKlB+6G,SAvKkB,eAAAxzG,EAAA3H,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAuKP,SAAAwyD,EAAO4mD,EAAWY,GAAlB,IAAA/4G,EAAAC,EAAAqsD,EAAAqF,EAAApxD,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAA0yD,GAAA,cAAAA,EAAAxyD,KAAAwyD,EAAAvyD,MAAA,cAA0BW,EAA1B2xD,EAAA9wD,OAAA,QAAAC,IAAA6wD,EAAA,GAAAA,EAAA,GAAmC,KAAK1xD,EAAxC0xD,EAAA9wD,OAAA,QAAAC,IAAA6wD,EAAA,GAAAA,EAAA,GAAwD,KACjEwmD,EAAa/5G,EAAKI,cAAciB,MAAM04G,GAChC7rD,EAAeluD,EAAKI,cAAcG,gBAAgB,CAAC,aAAa,YAAY,eAFzEizD,EAAAvyD,KAAA,EAGIjB,EAAKJ,MAAMmC,0BAA0BmsD,EAAc,WAAY,CAAC6rD,EAAYY,GAAU,KAAM/4G,EAAUC,GAH1G,cAAA2xD,EAAAjyD,OAAA,SAAAiyD,EAAApyD,MAAA,wBAAAoyD,EAAAhyD,SAAA2xD,EAAAxzD,SAvKO,gBAAA05D,EAAAC,GAAA,OAAApyD,EAAAhF,MAAAvC,KAAAwC,YAAA,GAAAxC,KA6KlBi7G,YA7KkB,eAAAzzG,EAAA5H,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA6KJ,SAAAgzD,EAAO6lD,GAAP,IAAA53G,EAAAC,EAAAqsD,EAAA0F,EAAAzxD,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAA+yD,GAAA,cAAAA,EAAA7yD,KAAA6yD,EAAA5yD,MAAA,cAAgBW,EAAhBgyD,EAAAnxD,OAAA,QAAAC,IAAAkxD,EAAA,GAAAA,EAAA,GAAyB,KAAK/xD,EAA9B+xD,EAAAnxD,OAAA,QAAAC,IAAAkxD,EAAA,GAAAA,EAAA,GAA8C,KACpD1F,EAAeluD,EAAKI,cAAcG,gBAAgB,CAAC,aAAa,YAAY,cADtEszD,EAAA5yD,KAAA,EAECjB,EAAKJ,MAAMmC,0BAA0BmsD,EAAc,WAAY,CAACsrD,GAAW,KAAM53G,EAAUC,GAF5F,cAAAgyD,EAAAtyD,OAAA,SAAAsyD,EAAAzyD,MAAA,wBAAAyyD,EAAAryD,SAAAmyD,EAAAh0D,SA7KI,gBAAA+9D,GAAA,OAAAv2D,EAAAjF,MAAAvC,KAAAwC,YAAA,GAAAxC,KAkLlBk7G,aAlLkBt7G,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAkLH,SAAAmzD,IAAA,IAAA+N,EAAAr+D,EAAAsC,EAAAquB,EAAA2mF,EAAAC,EAAAC,EAAA9lF,EAAA+lF,EAAAC,EAAAC,EAAAC,EAAAtpE,EAAAupE,EAAAhnD,EAAAlyD,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAwzD,GAAA,cAAAA,EAAAtzD,KAAAszD,EAAArzD,MAAA,UAAO4gE,EAAPxN,EAAA5xD,OAAA,QAAAC,IAAA2xD,EAAA,GAAAA,EAAA,GAAa,KAGpB7wD,EAHO,eAKM,QADbsC,EAAa9F,EAAKI,cAAc8F,cAAc1C,IAJvC,CAAA8wD,EAAArzD,KAAA,eAAAqzD,EAAA/yD,OAAA,SAMJuE,GANI,cAAAwuD,EAAArzD,KAAA,EASiBjB,EAAKJ,MAAMuiC,KAAKC,IAAIu0C,iBATrC,OAgBb,IAPMxiD,EATOmgC,EAAAlzD,KAWP05G,EAAmB,GAEnBC,EAAY/6G,EAAKI,cAAcG,gBAAgB,CAAC,aAAa,eAC7Dy6G,EAAwBh7G,EAAKI,cAAcG,gBAAgB,CAAC,aAAa,YAAY,cAElF20B,EAAc6lF,EAAW7lF,EAAcf,EAAiBe,GAJ3C,IAKd+lF,EAAU5iG,KAAKC,IAAI4c,EALL,IAK+Bf,GACnD2mF,EAAiB1qG,KAAKpQ,EAAKI,cAAc02E,sBAAsBkkC,EAAsB,uBAAwB,CAACD,UAAW7lF,EAAa+lF,aAlB3H,OAAA3mD,EAAArzD,KAAA,GAqBiBqD,QAAQC,IAAIu2G,GArB7B,eAqBPI,EArBO5mD,EAAAlzD,KAuBP+5G,EAAcD,EAAgBx4C,OAAQ,SAACy4C,EAAY1tG,GAEvD,OADA0tG,EAAcA,EAAY/2G,OAAOqJ,IAEjC,IAEI2tG,EAAmB,GAEzBD,EAAY1xG,QAAQ,SAAAkE,GAAK,IAAA2tG,EACU3tG,EAAE4tG,aAA3B/B,EADe8B,EACf9B,SAAU1rF,EADKwtF,EACLxtF,WAClBstF,EAAiB5B,GAAY1rF,IAG3BgkB,EAAY,GAChBvyC,OAAOwH,KAAKq0G,GAAkB3xG,QAAQ,SAACtI,GACrC,IAAM04G,GAASuB,EAAiBj6G,GAClB,IAAV04G,GACJ/nE,EAAU1hC,KAAK,CACbypG,MAAOA,EAAM,KACbL,SAAUr4G,MAId2wC,EAAUtd,KAAK,SAACp1B,EAAGq1B,GACjB,OAAOr1B,EAAEy6G,MAAQplF,EAAEolF,MAAQ,GAAK,IA9CrBvlD,EAAArzD,KAAA,GAiDWjB,EAAKw7G,WAjDhB,eAiDPH,EAjDO/mD,EAAAlzD,KAmDb0wC,EAAUroC,QAAS,SAACgE,EAAE4e,GACpB5e,EAAEguG,KAAOpvF,EAAM,EACf5e,EAAEosG,MAAQpsG,EAAEosG,MAAM1pG,QAAQ,GAC1B1C,EAAEiuG,aAAsBjuG,EAAEosG,MAAQ,IAAjB,KAA4B1pG,QAAQ,GAAK,IAC1D1C,EAAEkuG,UAAYN,EAAU5/F,OAAQ,SAAAxN,GAAC,OAAKA,EAAE2tG,MAAM3rG,gBAAkBxC,EAAE+rG,SAASvpG,gBAAiBxN,SAG9FzC,EAAKI,cAAc8E,cAAc1B,EAAcsuC,GAEjC,OAAV+vB,IACF/vB,EAAYA,EAAU+pE,OAAO,EAAEh6C,IA7DpBvN,EAAA/yD,OAAA,SAgENuwC,GAhEM,yBAAAwiB,EAAA9yD,SAAAsyD,EAAAn0D,SAlLGA,KAqPlBm8G,kBArPkBv8G,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAqPE,SAAA83D,IAAA,IAAAj1D,EAAAsC,EAAAi2G,EAAA1zG,EAAAC,EAAA0zG,EAAAC,EAAA/yE,EAAA,OAAAxoC,EAAAtB,EAAA0B,KAAA,SAAA43D,GAAA,cAAAA,EAAA13D,KAAA03D,EAAAz3D,MAAA,UAGZuC,EAHY,oBAKC,QADbsC,EAAa9F,EAAKI,cAAc8F,cAAc1C,IAJlC,CAAAk1D,EAAAz3D,KAAA,eAAAy3D,EAAAn3D,OAAA,SAMTuE,GANS,cASZi2G,EAAkB/7G,EAAKI,cAAcG,gBAAgB,CAAC,aAAa,YAAY,eATnEm4D,EAAAz3D,KAAA,EAaRqD,QAAQC,IAAI,CACpBvE,EAAKI,cAAcuC,oBAAoBo5G,EAAgB,qBACvD/7G,EAAKI,cAAcuC,oBAAoBo5G,EAAgB,2BAfvC,cAAA1zG,EAAAqwD,EAAAt3D,KAAAkH,EAAA/I,OAAAmF,EAAA,EAAAnF,CAAA8I,EAAA,GAWhB2zG,EAXgB1zG,EAAA,GAYhB2zG,EAZgB3zG,EAAA,GAkBd0zG,IACFA,EAAoBh8G,EAAKI,cAAciB,MAAM26G,IAGzC9yE,EAAS,CACb8yE,oBACAC,yBAxBgBvjD,EAAAn3D,OAAA,SA2BXvB,EAAKI,cAAc8E,cAAc1B,EAAc0lC,IA3BpC,yBAAAwvB,EAAAl3D,SAAAi3D,EAAA94D,SArPFA,KAmRlB67G,SAnRkBj8G,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAmRP,SAAAw4D,IAAA,IAAA31D,EAAAsC,EAAAo2G,EAAArC,EAAA,OAAAn5G,EAAAtB,EAAA0B,KAAA,SAAAs4D,GAAA,cAAAA,EAAAp4D,KAAAo4D,EAAAn4D,MAAA,UAGHuC,EAHG,WAKU,QADbsC,EAAa9F,EAAKI,cAAc8F,cAAc1C,IAJ3C,CAAA41D,EAAAn4D,KAAA,eAAAm4D,EAAA73D,OAAA,SAMAuE,GANA,cASHo2G,EAAyBl8G,EAAKI,cAAcG,gBAAgB,CAAC,aAAa,YAAY,eATnF64D,EAAAn4D,KAAA,EAWSjB,EAAKI,cAAc02E,sBAAsBolC,EAAuB,WAAY,CAACnB,UAAW,EAAGE,QAAS,WAX7G,cAWLpB,EAXKzgD,EAAAh4D,QAcPy4G,EAAQA,EAAMh/F,IAAK,SAAAlN,GAAK,IAAAwuG,EAMlBxuG,EAAE4tG,aAJFK,EAFkBO,EAElBP,MAKJ,MAAO,CACL/B,MARoBsC,EAGlBtC,MAMF+B,QACAjB,QAVoBwB,EAIlBxB,QAOFZ,WAXoBoC,EAKlBpC,eAnBC3gD,EAAA73D,OAAA,SA8BFvB,EAAKI,cAAc8E,cAAc1B,EAAcq2G,IA9B7C,yBAAAzgD,EAAA53D,SAAA23D,EAAAx5D,SAnROA,KAoTlBy8G,aApTkB78G,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAoTH,SAAA42D,IAAA,IAAA8kD,EAAA74G,EAAAsC,EAAAw2G,EAAAJ,EAAAK,EAAAC,EAAAC,EAAAC,EAAAza,EAAAnyF,EAAA4nD,EAAAc,EAAAqhD,EAAA8B,EAAAgB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA76G,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAA22D,GAAA,cAAAA,EAAAz2D,KAAAy2D,EAAAx2D,MAAA,UAAOo7G,EAAPW,EAAAv6G,OAAA,QAAAC,IAAAs6G,EAAA,GAAAA,EAAA,GAAgB,KAGvBx5G,EAAgB,eAEH,QADfsC,EAAa9F,EAAKI,cAAc8F,cAAc1C,IAJrC,CAAAi0D,EAAAx2D,KAAA,eAMM,OAAbo7G,IACFv2G,EAAaA,EAAW2V,OAAQ,SAAA/R,GAAC,OAAKA,EAAEmwG,MAAMxiG,KAAM,SAAApJ,GAAC,OAAKA,EAAE2tG,MAAM3rG,gBAAkBosG,EAASpsG,mBAPpFwnD,EAAAl2D,OAAA,SASJuE,GATI,cAYPw2G,EAAyB,SAACnyG,GAE9B,MADuB,CAAC,UAAW,SAAU,WAAY,WAAY,YAAa,SAAU,UAAW,YACjFA,IAGlB+xG,EAAyBl8G,EAAKI,cAAcG,gBAAgB,CAAC,aAAa,YAAY,eAjB/Ek3D,EAAAx2D,KAAA,GAkBejB,EAAKI,cAAcuC,oBAAoBu5G,EAAuB,iBAlB7E,WAkBPK,EAlBO9kD,EAAAr2D,KAAA,CAAAq2D,EAAAx2D,KAAA,gBAAAw2D,EAAAl2D,OAAA,SAqBJ,IArBI,QA0Bb,IAFMi7G,EAAe,GACfC,EAAoB,GAzBbC,EA0BGhvD,MAAMr+C,KAAKq+C,MAAMhiD,SAAS6wG,IAAgB,SAAC5/F,EAAE7M,GAAH,OAASA,EAAE,IAArEmyF,EAAA,EAAAA,EAAAya,EAAAj6G,OAAAw/F,IAAWnyF,EAA8D4sG,EAAAza,GACvEua,EAAapsG,KAAKpQ,EAAKI,cAAcuC,oBAAoBu5G,EAAuB,YAAY,CAACpsG,KAC7F2sG,EAAkBrsG,KAAKpQ,EAAKI,cAAcuC,oBAAoBu5G,EAAuB,QAAQ,CAACpsG,KA5BnF,OAAA2nD,EAAAx2D,KAAA,GAuCHqD,QAAQC,IAAI,CACpBvE,EAAKw7G,WACLl3G,QAAQC,IAAIi4G,GACZl4G,QAAQC,IAAIk4G,GACZz8G,EAAKI,cAAc02E,sBAAsBolC,EAAuB,iBAAkB,CAACnB,UAAW,EAAGE,QAAS,WAC1Gj7G,EAAKI,cAAc02E,sBAAsBolC,EAAuB,kBAAmB,CAACnB,UAAW,EAAGE,QAAS,WAC3Gj7G,EAAKI,cAAc02E,sBAAsBolC,EAAuB,mBAAoB,CAACnB,UAAW,EAAGE,QAAS,WAC5Gj7G,EAAKI,cAAc02E,sBAAsBolC,EAAuB,mBAAoB,CAACnB,UAAW,EAAGE,QAAS,aA9CjG,eAAAvjD,EAAAD,EAAAr2D,KAAAo3D,EAAAj5D,OAAAmF,EAAA,EAAAnF,CAAAm4D,EAAA,GAgCXmiD,EAhCWrhD,EAAA,GAiCXmjD,EAjCWnjD,EAAA,GAkCXmkD,EAlCWnkD,EAAA,GAmCXokD,EAnCWpkD,EAAA,GAoCXqkD,EApCWrkD,EAAA,GAqCXskD,EArCWtkD,EAAA,GAsCXukD,EAtCWvkD,EAAA,GA6DbmjD,EAAUsB,UACVN,EAAeM,UACfL,EAAqBK,UACrBJ,EAAsBI,UACtBH,EAAuBG,UACvBF,EAAuBE,UAlEVxlD,EAAAx2D,KAAA,GAoEPjB,EAAKI,cAAc0G,aAAa60G,EAAhC,eAAAziD,EAAA35D,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAA2C,SAAAg3D,EAAOjuD,EAAEoG,GAAT,IAAAiqG,EAAAmD,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAh/F,EAAAk7F,EAAAD,EAAAljG,EAAAojG,EAAA,OAAA35G,EAAAtB,EAAA0B,KAAA,SAAAw3D,GAAA,cAAAA,EAAAt3D,KAAAs3D,EAAAr3D,MAAA,cACzC84G,EAAaruG,SAAShC,EAAE2G,IAExB6sG,EAAeL,EAAsB/sG,GACrCqtG,EAAgBL,EAAuBzlG,KAAM,SAAA1J,GAAC,OAAKjC,SAASiC,EAAE4tG,aAAalrG,MAAQ0pG,IACnFqD,EAAgBL,EAAuB1lG,KAAM,SAAA1J,GAAC,OAAKjC,SAASiC,EAAE4tG,aAAalrG,MAAQ0pG,IACnFsD,EAAcT,EAAqBvlG,KAAM,SAAA1J,GAAC,OAAKjC,SAASiC,EAAE4tG,aAAalrG,MAAQ0pG,IAGrFrwG,EAAEy0G,OAAS,GAToC7lD,EAAAr3D,KAAA,EAYhBjB,EAAKJ,MAAMuiC,KAAKC,IAAIg8E,SAASlB,EAAahoF,aAZ1B,UAYzCooF,EAZyChlD,EAAAl3D,KAazCm8G,EAAe,CACnBpzG,MAAO,UACPk0G,SAAUf,EAAiBnkG,UAC3BmlG,WAAYhB,EAAiBnkG,UAC7BolG,SAAUrB,EAAa11E,iBAEzB99B,EAAEy0G,OAAO/tG,KAAKmtG,GAGRC,EAAc,CAClBrzG,MAAO,SACPk0G,SAAU,KACVC,WAAYf,EAAae,WACzBC,SAAU,MAEZ70G,EAAEy0G,OAAO/tG,KAAKotG,IAGVL,EA/B2C,CAAA7kD,EAAAr3D,KAAA,gBAAAq3D,EAAAr3D,KAAA,GAgCbjB,EAAKJ,MAAMuiC,KAAKC,IAAIg8E,SAASjB,EAAcjoF,aAhC9B,QAgCvCuoF,EAhCuCnlD,EAAAl3D,KAiCvCs8G,EAAgB,CACpBvzG,MAAO,WACPk0G,SAAU,KACVC,WAAYb,EAAkBtkG,UAC9BolG,SAAUpB,EAAc31E,iBAG1B99B,EAAEy0G,OAAOz0G,EAAEy0G,OAAO17G,OAAO,GAAG47G,SAAWZ,EAAkBtkG,UACzDzP,EAAEy0G,OAAO/tG,KAAKstG,GAzC+BplD,EAAAr3D,KAAA,qBA4CzCo8G,EA5CyC,CAAA/kD,EAAAr3D,KAAA,gBAAAq3D,EAAAr3D,KAAA,GA6CbjB,EAAKJ,MAAMuiC,KAAKC,IAAIg8E,SAASf,EAAYnoF,aA7C5B,QA6CrCyoF,EA7CqCrlD,EAAAl3D,KA8CrCw8G,EAAiB,CACrBzzG,MAAO,YACPk0G,SAAU,KACVE,SAAU,KACVD,WAAYX,EAAgBxkG,WAGxB0kG,EAAc,CAClB1zG,MAAO,SACPk0G,SAAU,KACVC,WAAYX,EAAgBxkG,UAC5BolG,SAAUlB,EAAY71E,iBAIxB99B,EAAEy0G,OAAOz0G,EAAEy0G,OAAO17G,OAAO,GAAG47G,SAAWV,EAAgBxkG,UAEvDzP,EAAEy0G,OAAO/tG,KAAKwtG,GAEdl0G,EAAEy0G,OAAO/tG,KAAKytG,GAjE6B,YAqEzCT,EArEyC,CAAA9kD,EAAAr3D,KAAA,gBAAAq3D,EAAAr3D,KAAA,GAsEXjB,EAAKJ,MAAMuiC,KAAKC,IAAIg8E,SAAShB,EAAcloF,aAtEhC,QAsErC4oF,EAtEqCxlD,EAAAl3D,KAuErC28G,EAAgB,CACpB5zG,MAAO,WACPk0G,SAAU,KACVC,WAAYR,EAAkB3kG,UAC9BolG,SAAUnB,EAAc51E,iBAG1B99B,EAAEy0G,OAAOz0G,EAAEy0G,OAAO17G,OAAO,GAAG47G,SAAWP,EAAkB3kG,UACzDzP,EAAEy0G,OAAO/tG,KAAK2tG,GA/E6B,WAoF/Cr0G,EAAES,MAAQmyG,EAAuBK,EAAe7sG,IAC7BpG,EAAEy0G,OAAO9mG,KAAM,SAAAi2C,GAAC,OAAKA,EAAEnjD,QAAUT,EAAES,QArFP,CAAAmuD,EAAAr3D,KAAA,gBAAAq3D,EAAAr3D,KAAA,GAuFlBjB,EAAKJ,MAAMuiC,KAAKC,IAAIg8E,SAAS10G,EAAE80G,UAvFb,QAuFvCR,EAvFuC1lD,EAAAl3D,KAwFvC68G,EAAW,CACf9zG,MAAOT,EAAES,MACTk0G,SAAU,KACVE,SAAU,KACVD,WAAYN,EAAa7kG,WAG3BzP,EAAEy0G,OAAOz0G,EAAEy0G,OAAO17G,OAAO,GAAG47G,SAAWL,EAAa7kG,UACpDzP,EAAEy0G,OAAO/tG,KAAK6tG,GAhG+B,QAmG/Cv0G,EAAEmwG,MAAQA,EAAMp+F,OAAQ,SAAAxN,GAAC,OAAKvC,SAASuC,EAAE8rG,cAAcA,IAnGRmE,EAqGiBhB,EAAa3B,aAArEr8F,EArGuCg/F,EAqGvCh/F,YAAak7F,EArG0B8D,EAqG1B9D,WAAYD,EArGc+D,EAqGd/D,QAASljG,EArGKinG,EAqGLjnG,OAAQojG,EArGH6D,EAqGG7D,UAClD3wG,EAAEyP,UAAYmkG,EAAmBA,EAAiBnkG,UAAY,KAI9DzP,EAAEjQ,MAAQylB,EAAYwE,MAAM,iBAAY,GAAG2qC,QAAQ,KAAK,KAAO,WAC/D3kD,EAAEwV,YAAcA,EAAYwE,MAAM,cAClCha,EAAEwV,YAAY8/C,QACdt1D,EAAEwV,YAAcxV,EAAEwV,YAAYzO,KAAK,MAOnCkrG,EAAU7rG,GAAK,CACb2uG,IAAI/0G,EAAE+0G,IACNhsF,QAAQ,CACNxb,SACAkjG,UACAE,YACAD,cAEF/pG,GAAG0pG,EACHtgH,MAAMiQ,EAAEjQ,MACR0Q,MAAMT,EAAES,MACR0vG,MAAMnwG,EAAEmwG,MACRsE,OAAOz0G,EAAEy0G,OACTO,SAASh1G,EAAEg1G,SACXF,SAAS90G,EAAE80G,SACXG,SAASj1G,EAAEi1G,SACXC,SAASl1G,EAAEk1G,SACXC,SAASn1G,EAAEm1G,SACX1lG,UAAUzP,EAAEyP,UACZm4B,WAAW5nC,EAAE4nC,WACbpyB,YAAYxV,EAAEwV,YACd4/F,aAAap1G,EAAEo1G,cAzI8B,yBAAAxmD,EAAA92D,SAAAm2D,EAAAh4D,SAA3C,gBAAA89D,EAAAF,GAAA,OAAArE,EAAAh3D,MAAAvC,KAAAwC,YAAA,IApEO,WAiNbnC,EAAKI,cAAc8E,cAAc1B,EAAcm4G,GAE9B,OAAbU,EAnNS,CAAA5kD,EAAAx2D,KAAA,gBAAAw2D,EAAAl2D,OAAA,SAoNJo6G,GApNI,eAAAlkD,EAAAl2D,OAAA,SAsNJo6G,EAAUlgG,OAAQ,SAAA/R,GAAC,OAAKA,EAAEmwG,MAAMxiG,KAAM,SAAApJ,GAAC,OAAKA,EAAE2tG,MAAM3rG,gBAAkBosG,EAASpsG,mBAtN3E,yBAAAwnD,EAAAj2D,SAAA+1D,EAAA53D,SAnTbA,KAAKU,SAAST,ICqSHm/G,8MA3Sb50G,MAAQ,CACNs3B,WAAW,CACTlM,OAAO,KACPrP,SAAQ,GAEV5jB,WAAW,KACXo3G,cAAc,KACdsF,gBAAgB,KAChBC,oBAAmB,EACnBC,0BAAyB,KAI3BtyD,aAAe,OACfxsD,cAAgB,OAChB++G,eAAiB,gFAGXx/G,KAAKw/G,eACPx/G,KAAKw/G,eAAe9+G,SAASV,KAAKC,OAElCD,KAAKw/G,eAAiB,IAAInG,GAAer5G,KAAKC,OAGhDD,KAAKS,cAAgBT,KAAKw/G,eAAe/+G,cACzCT,KAAKitD,aAAejtD,KAAKS,cAAc2vE,qLAIXpwE,KAAKS,cAAcG,gBAAgB,CAAC,YAAY,OAAO,cACxDZ,KAAKC,MAAMuB,yCAK1BmD,QAAQC,IAAI,CACpB5E,KAAKitD,aAAaxqD,cAAczC,KAAKC,MAAMuB,SAC3CxB,KAAKw/G,eAAexF,mBAAmBh6G,KAAKC,MAAMuB,SAClDxB,KAAKw/G,eAAe/F,mBAAmBz5G,KAAKC,MAAMuB,iDANlDmB,OACA08G,OACA3F,OAOEK,EAAgB,MAChBL,oCACoB15G,KAAKw/G,eAAe1F,iBAAiB95G,KAAKC,MAAMuB,iBAAtEu4G,wBAGIuF,EAAqBD,GAAmBA,EAAgB/uG,gBAAkBtQ,KAAKC,MAAMuB,QAAQ8O,cAC7FivG,EAA2B58G,GAAco3G,GAAiBp3G,EAAW2gG,GAAGyW,qBAEvE/5G,KAAK6L,SAAS,CACnBlJ,aACAo3G,gBACAsF,kBACAC,qBACAC,+DAGG,yQAIDt9G,EAAW,SAAC8Z,EAAG4lB,GAEnB,IAAM+F,EAAY,CAChBjkB,cAAe,aACfC,YAAa,kBAGXie,IACF+F,EAAU/jB,WAAa1a,EAAKxI,cAAcmnC,oBAAoBjG,KAI5DA,GAA8B,UAArB+F,EAAU/pC,SACrBsL,EAAKxI,cAAc+iB,yBAAyBkkB,GAG9C,IAAMD,EAA4B,YAAd1rB,EAAGpe,OACnB8pC,GACFx+B,EAAKkE,WAGPlE,EAAK4C,SAAS,CACZi2B,WAAY,CACVlM,OAAO,KACPrP,SAAQ,GAEVg5F,2BAAyB93E,KAIvBvlC,EAAkB,SAAC6Z,GACvB,IAAM6Z,EAAS7Z,EAAG8rB,gBAClB5+B,EAAK4C,SAAS,SAACuB,GAAD,MAAgB,CAC5B00B,WAAWliC,OAAAsL,EAAA,EAAAtL,CAAA,GACNwN,EAAU00B,WADL,CAERlM,eAKN51B,KAAKw/G,eAAevE,YAAYj7G,KAAKC,MAAMuB,QAAQS,EAASC,GAE5DlC,KAAK6L,SAAS,SAACuB,GAAD,MAAgB,CAC5B00B,WAAWliC,OAAAsL,EAAA,EAAAtL,CAAA,GACNwN,EAAU00B,WADL,CAERvb,SAAQ,0QAMNtkB,EAAW,SAAC8Z,EAAG4lB,GAEnB,IAAM+F,EAAY,CAChBjkB,cAAe,aACfC,YAAa,mBAGXie,IACF+F,EAAU/jB,WAAa1V,EAAKxN,cAAcmnC,oBAAoBjG,KAI5DA,GAA8B,UAArB+F,EAAU/pC,SACrBsQ,EAAKxN,cAAc+iB,yBAAyBkkB,GAG9C,IAAMD,EAA4B,YAAd1rB,EAAGpe,OACnB8pC,GACFx5B,EAAKd,WAGPc,EAAKpC,SAAS,CACZi2B,WAAY,CACVlM,OAAO,KACPrP,SAAQ,GAEV+4F,qBAAmB73E,KAIjBvlC,EAAkB,SAAC6Z,GACvB,IAAM6Z,EAAS7Z,EAAG8rB,gBAClB55B,EAAKpC,SAAS,SAACuB,GAAD,MAAgB,CAC5B00B,WAAWliC,OAAAsL,EAAA,EAAAtL,CAAA,GACNwN,EAAU00B,WADL,CAERlM,eAKN51B,KAAKw/G,eAAe5F,gBAAgB55G,KAAKC,MAAMuB,QAAQxB,KAAKC,MAAMuB,QAAQS,EAASC,GAEnFlC,KAAK6L,SAAS,SAACuB,GAAD,MAAgB,CAC5B00B,WAAWliC,OAAAsL,EAAA,EAAAtL,CAAA,GACNwN,EAAU00B,WADL,CAERvb,SAAQ,6PAMZvmB,KAAK6L,SAAS,CACZi2B,WAAY,CACVlM,OAAO,KACPrP,SAAQ,4PAMZvmB,KAAKgJ,YACLhJ,KAAKmN,gMAGkBpC,EAAUqC,mEACjCpN,KAAKgJ,YACkB+B,EAAUvJ,UAAYxB,KAAKC,MAAMuB,SAEtDxB,KAAKmN,iJAKP,OAAOnN,KAAKwK,MAAMuvG,eAAmB/5G,KAAKwK,MAAM80G,oBAAuBt/G,KAAKwK,MAAM+0G,yBA8G9E,KA7GF//G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,EAAG,EACHmV,GAAI,EACJ5kB,MAAO,EACPgF,aAAc,EACdqK,WAAY,SACZC,cAAe,SACfC,eAAgB,SAChBzL,gBAAiB,UACjBof,UAAW,sCAEXhe,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,EACJtS,SAAU,EACV4P,WAAY,IACZzQ,MAAO,UACPkT,UAAW,UALb,YAOYrR,KAAKwK,MAAMuvG,cAAcz0G,IAAI,MAAMkL,QAAQ,GAPvD,IAO4DxQ,KAAKS,cAAcG,gBAAgB,CAAC,aAAa,QAAQ,cAPrH,6BAUApB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEiP,WAAY,IACZzQ,MAAO,UACPa,SAAU,OACVqS,UAAW,UAJb,kDASA7R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,EACJ5N,GAAI,EACJ3H,WAAY,SACZC,cAAe,UAEfpK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPqP,WAAY,SACZC,cAAe,OAEfpK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE0M,KAAM,QACNM,KAAO3M,KAAKwK,MAAM80G,mBAAqB,WAAa,WACpDnhH,MAAQ6B,KAAKwK,MAAM80G,mBAAqBt/G,KAAKC,MAAM1G,MAAMR,OAAOkE,aAAaU,OAAOC,UAAY,aAElG4B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2M,GAAI,EACJsC,WAAY,IACZ5P,SAAU,OACVb,MAAO,UACPkT,UAAW,QALb,oBAUF7R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,EACJ5kB,MAAO,EACPqP,WAAY,SACZC,cAAe,OAEfpK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE0M,KAAM,QACNM,KAAO3M,KAAKwK,MAAM+0G,yBAA2B,WAAa,WAC1DphH,MAAQ6B,KAAKwK,MAAM+0G,yBAA2Bv/G,KAAKC,MAAM1G,MAAMR,OAAOkE,aAAaU,OAAOC,UAAY,aAExG4B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2M,GAAI,EACJsC,WAAY,IACZ5P,SAAU,OACVb,MAAO,UACPkT,UAAW,QALb,sBAYFrR,KAAKwK,MAAMs3B,YAAc9hC,KAAKwK,MAAMs3B,WAAWvb,QAC7C/mB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPsP,cAAe,UAEfpK,EAAAC,EAAAC,cAAC2rC,GAAD,CACE7I,KAAMxiC,KAAKC,MAAMuiC,KACjB0C,SAAQ,oBACRvY,KAAM3sB,KAAKwK,MAAMs3B,WAAWlM,OAC5BqP,WAAU,6BACVM,kBAAmBvlC,KAAKulC,kBAAkB16B,KAAK7K,SAGhDA,KAAKwK,MAAM80G,oBAOVt/G,KAAKwK,MAAM+0G,0BAA4Bv/G,KAAKwK,MAAM80G,oBACtD9/G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE0M,KAAM,QACN+R,QAASpe,KAAK45G,gBAAgB/uG,KAAK7K,OAFrC,oBAPAR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE0M,KAAM,QACN+R,QAASpe,KAAKy/G,eAAe50G,KAAK7K,OAFpC,2BAzRkBG,aCgPfu/G,8MAzObl1G,MAAQ,CACNouG,UAAU,KACVmB,cAAc,KACd4F,gBAAe,KAIjB1yD,aAAe,OACfxsD,cAAgB,OAChB++G,eAAiB,OAiCjBrH,mDAAe,SAAAl3G,EAAOqpD,GAAP,OAAAvpD,EAAAtB,EAAA0B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAEbjB,EAAKI,cAAc+iB,yBAAyB,CAC1CE,YAAa,SACbD,cAAe,YAGsB,oBAA5BpjB,EAAKJ,MAAMk4G,cACpB93G,EAAKJ,MAAMk4G,aAAa7tD,GARblpD,EAAAE,KAAA,EAWAjB,EAAKJ,MAAMm4G,QAAQD,aAAa7tD,GAXhC,cAAAlpD,EAAAQ,OAAA,SAAAR,EAAAK,MAAA,wBAAAL,EAAAS,SAAAZ,EAAAjB,0IA9BTA,KAAKw/G,eACPx/G,KAAKw/G,eAAe9+G,SAASV,KAAKC,OAElCD,KAAKw/G,eAAiB,IAAInG,GAAer5G,KAAKC,OAGhDD,KAAKS,cAAgBT,KAAKw/G,eAAe/+G,cACzCT,KAAKitD,aAAejtD,KAAKS,cAAc2vE,uKAIvCpwE,KAAKgJ,YACLhJ,KAAKmN,gMAGkBpC,EAAUqC,mEACjCpN,KAAKgJ,sQAIuBhJ,KAAKS,cAAcG,gBAAgB,CAAC,YAAY,OAAO,cACxDZ,KAAKC,MAAMuB,wCACZxB,KAAKitD,aAAahqD,mBAAmBjD,KAAKC,MAAMuB,uBAAlEo3G,2BACC54G,KAAK6L,SAAS,CACnB+sG,+CAGG,+OAkBP54G,KAAKC,MAAMmsC,YAAY,KAAI,yIAGjBuzE,GACV3/G,KAAK6L,SAAS,CACZ8zG,oDAIK,IAAA12G,EAAAjJ,KACD4/G,EAAc5/G,KAAKC,MAAM2/G,YACzBC,EAAe7/G,KAAKC,MAAM4/G,aAC1BC,EAAkB9/G,KAAKS,cAAcG,gBAAgB,CAAC,aAAa,cACnEuzF,EAAoBn0F,KAAKS,cAAcG,gBAAgB,CAAC,aAAa,YACrEm/G,EAAiB//G,KAAKS,cAAcG,gBAAgB,CAAC,YAAY,cAAc,IAAIhB,OAAOwH,KAAKpH,KAAKC,MAAMiH,qBAAqB,GACrI,OACE1H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,GAEJ9R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwpB,GAAI,EACJ7uB,MAAO,EACPsP,cAAe,MACfC,eAAgB,gBAChBF,WAAY,CAAC,WAAW,UACxByxB,aAAY,aAAA32B,OAAelL,EAAMR,OAAO4D,UAExC6C,EAAAC,EAAAC,cAACsgH,GAADpgH,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEE+4G,YAAah5G,KAAKg5G,YAAYnuG,KAAK7K,SAErCR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwiB,GAAI,EACJvY,cAAe,CAAC,SAAS,OACzBD,WAAY,CAAC,WAAW,WAGtBwqF,GAAqByrB,EACnBpgH,EAAAC,EAAAC,cAACmsC,GAAD,CACEhmB,YAAa,CACXH,UAAU,SACVrZ,KAAKrM,KAAKC,MAAM+K,SAAW,QAAU,UAEvCqT,YAAc,SAACrQ,GAAQ/E,EAAKhJ,MAAMmsC,YAAY0zE,GAAgB,KAE9DtgH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgK,WAAY,SACZC,cAAe,OAEfpK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwiB,GAAI,CAAC,EAAE,GACP9V,KAAM,QACNlO,MAAO,QACPwO,KAAM,cAERnN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEiP,WAAY,EACZzQ,MAAO,QACPa,SAAU,CAAC,EAAE,IAHf,gBASF6gH,GACFrgH,EAAAC,EAAAC,cAACmsC,GAAD,CACEhmB,YAAa,CACXH,UAAU,SACVrZ,KAAKrM,KAAKC,MAAM+K,SAAW,QAAU,UAEvCqT,YAAc,SAACrQ,GAAQ/E,EAAKhJ,MAAMmsC,YAAY2zE,GAAe,KAE7DvgH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgK,WAAY,SACZC,cAAe,OAEfpK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwiB,GAAI,CAAC,EAAE,GACP9V,KAAM,QACNlO,MAAO,QACPwO,KAAM,cAERnN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEiP,WAAY,EACZzQ,MAAO,QACPa,SAAU,CAAC,EAAE,IAHf,iBAwCVgB,KAAKwK,MAAMouG,WAAa54G,KAAKwK,MAAMouG,UAAUliG,GAAG,IAC9ClX,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,EAAG,EACHmV,GAAI,EACJ5kB,MAAO,EACPgF,aAAc,EACdqK,WAAY,SACZE,eAAgB,SAChBzL,gBAAiB,UACjBwL,cAAe,CAAC,SAAS,OACzB4T,UAAW,sCAEXhe,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEiP,WAAY,IACZzQ,MAAO,UACPa,SAAU,OACVqS,UAAW,UAJb,0CAOE7R,EAAAC,EAAAC,cAAC40F,EAAD,CACEhoF,GAAI,EACJsC,WAAY,IACZzQ,MAAO,UACPa,SAAU,OACVioB,WAAY,UACZpC,KAAM,uEANR,iBAPF,cAgBwB7kB,KAAKwK,MAAMouG,UAAUpoG,QAAQ,GAhBrD,0BAkBAhR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2M,GAAI,CAAC,EAAE,GACP4S,GAAI,CAAC,EAAE,GACP7S,KAAM,QACN+R,QAAU,SAAApQ,GAAC,OAAI/E,EAAK+vG,aAAY,KAJlC,cAUNx5G,EAAAC,EAAAC,cAACugH,GACKjgH,KAAKC,OAEXT,EAAAC,EAAAC,cAACwgH,GAADtgH,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEEshC,OAAQvhC,KAAKwK,MAAMm1G,eACnBvG,cAAep5G,KAAKmN,SAAStC,KAAK7K,MAClC6+B,WAAY,SAAA7wB,GAAC,OAAI/E,EAAK+vG,aAAY,eApOd74G,aC0nBfggH,8MAhnBb31G,MAAQ,CACNq2F,KAAK,GACLrvD,UAAU,KACVi+D,YAAY,KACZ2Q,aAAa,KACbC,cAAc,KACdC,eAAe,KACfvmB,gBAAgB,KAChBzgE,gBAAgB,KAChBinF,iBAAgB,EAChBnU,mBAAmB,KACnB2L,uBAAuB,KACvBH,wBAAwB,QAG1B4I,UAAY,OAGZ//G,cAAgB,OA0EhBs+B,WAAa,WACX1+B,EAAKwL,SAAS,CACZ4jG,YAAa,UAIjBxmF,iBAAmB,SAACw3F,EAAWC,GAE7BrgH,EAAKI,cAAc+iB,yBAAyB,CAC1CC,cAAe,KACfC,YAAa+8F,EACb98F,WAAY,iBAGdtjB,EAAKwL,SAAS,CACZ40G,aACAC,gBACA,WACArgH,EAAKuwG,eAAe,gBAIxBA,eAAiB,SAACnB,GAChBpvG,EAAKwL,SAAS,CACZ4jG,mBA2TJ9Z,4BAAS,SAAA10F,IAAA,OAAAF,EAAAtB,EAAA0B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACPjB,EAAKJ,MAAMk4G,aAAa,SAAS,UAD1B/2G,EAAAE,KAAA,EAEDjB,EAAKJ,MAAMkrG,SAAS,UAFnB,wBAAA/pG,EAAAS,SAAAZ,EAAAjB,oFA3ZHA,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,OAG9CyK,OAAOjK,cAAgBT,KAAKS,8KAItB+wC,EAAYxxC,KAAKS,cAAcG,gBAAgB,CAAC,YAAY,cAC5D0zC,EAAat0C,KAAKS,cAAcG,gBAAgB,CAAC,eACjDigG,EAAOjhG,OAAOwH,KAAKktC,GAAYx4B,OAAQ,SAAA6xC,GAAC,OAAOrZ,EAAWqZ,GAAGnZ,aAAet5B,IAAI,SAAAoxB,GAAQ,MAAK,CAC/F+/D,QAAQ,GACRluG,MAAM,OACNkjG,UAAS,EACTj2D,MAAMoG,EAAU,IAAIlF,EACpBv7B,MAAMujC,EAAWhI,GAAUxyC,MAC3B2iC,MAAM6X,EAAWhI,GAAUp7B,KAC3BmhC,cAAciC,EAAWhI,GAAUsI,aACnC3iB,QAAQqiB,EAAWhI,GAAUnuC,MAC7BwpB,UAAU2sB,EAAWhI,GAAU3kB,cAK7B6lF,EAAcxtG,KAAKS,cAAcG,gBAAgB,CAAC,WAGxC4D,UACRm8G,EAAc/gH,OAAOC,OAAO,CAChCwsG,QAAQ,GACRhL,UAAS,EACT15E,UAAUi5F,IACVpT,EAAYjkE,QAEds3D,EAAKpwF,KAAKkwG,IAIZ9f,EAAKpwF,KACH,CACES,KAAK,YACLH,MAAM,QACNkhB,QAAQ,UACR9zB,MAAM,YACNwpB,UAAUygF,GACV/G,UAAS,EACTj2D,MAAM,mBACNihE,QAAQ,KAKZxL,EAAKpwF,KACH,CACES,KAAK,QACLH,MAAM,QACN5S,MAAM,YACNwpB,UAAUukF,GACV7K,UAAS,EACTj2D,MAAM,mBACNnZ,QAAQjyB,KAAKC,MAAM1G,MAAMR,OAAOiC,QAChCqxG,QAAQzsG,OAAO0X,OAAOtX,KAAKS,cAAcG,gBAAgB,CAAC,WAAWkb,OAAQ,SAAA+kG,GAAC,OAAKA,EAAEr8G,qBAInFxE,KAAK6L,SAAS,CAClBg1F,+RAiCet3D,EAAavpC,KAAKC,MAA3B6a,MAASyuB,OAEXiI,EAAYxxC,KAAKS,cAAcG,gBAAgB,CAAC,YAAY,cAC9Dw/G,EAAe5uE,EAEf6uE,EAAgB,KAChBhzG,EAAgB,KAChBizG,EAAiB,KACjBr5G,EAAmB,KAGnBsiC,EAAO6wD,UACTkmB,EAAiB/2E,EAAO6wD,QAClBoc,EAASjtE,EAAOitE,OAChB5pE,EAASrD,EAAOqD,OAEhBk0E,EAAsBlhH,OAAOwH,KAAKpH,KAAKC,MAAMiH,qBAAqB0tB,SAAS0rF,EAAehwG,eAC1FywG,EAAqBvK,GAAU52G,OAAOwH,KAAKpH,KAAKC,MAAMiH,qBAAqB0tB,SAAS4hF,EAAOlmG,eAE7FwwG,GAAuBC,GAEzBX,GAAgB,KADhBn5G,EAAmB65G,EAAsBR,EAAiB9J,GAIpDwK,EAAkBxK,GAAU52G,OAAOwH,KAAKpH,KAAKC,MAAMiH,oBAAoBD,IAAmB2tB,SAAS4hF,EAAOv0F,eAC1Gg/F,EAAkBr0E,GAAUhtC,OAAOwH,KAAKpH,KAAKC,MAAMiH,oBAAoBD,IAAmB2tB,SAASgY,EAAO3qB,gBAC5G++F,GAAmBC,KACrB5zG,EAAgB2zG,EAAkBxK,EAAOv0F,cAAgB2qB,EAAO3qB,cAChEm+F,GAAgB,IAAI/yG,EAEhByzG,IACFT,EAAgBnL,OAIpBkL,GAAgB,IAAI72E,EAAO6wD,QAEvB7wD,EAAOitE,QAAUjtE,EAAOitE,OAAO1zG,SACjCs9G,GAAgB,IAAI72E,EAAOitE,UAS3B3V,EAAO7gG,KAAKwK,MAAMq2F,KAEpB9G,EAAkB,KAClBqS,EAAqB,KAEzBvL,EAAK/2F,QAAQ,SAAA2rB,GACXA,EAAE4rE,UAAW,EACb,IAAM6f,EAAe1vE,EAAU,IAAIjI,EAAO6wD,QACtCgmB,EAAa9vG,gBAAkBmlB,EAAE2V,MAAM96B,gBAAoBmlB,EAAE42E,QAAQvpG,QAAU2yB,EAAE2V,MAAM96B,gBAAkB4wG,EAAa5wG,eACxHmlB,EAAE4rE,UAAW,EACS,OAAlBgf,IACFA,EAAgB5qF,EAAE9N,YAEX8N,EAAE42E,QAAQvpG,QACnB2yB,EAAE42E,QAAQviG,QAAQ,SAAAq3G,GAChBA,EAAK9f,UAAW,GACE5rE,EAAE2V,MAAM,IAAI+1E,EAAK/1E,OACrB96B,gBAAkB8vG,EAAa9vG,gBAC3CmlB,EAAE4rE,UAAW,EACb8f,EAAK9f,UAAW,EAGM,OAAlBgf,IAEAA,EADEc,EAAKx5F,UACSw5F,EAAKx5F,UAEL8N,EAAE9N,YAMpBw5F,EAAK9f,WACP+K,EAAqB+U,KAOvB1rF,EAAE4rE,WACJtH,EAAkBtkE,KAOjB4qF,4CACIrgH,KAAKosC,YAAY,KAAI,6BAIxBpsC,KAAKC,MAAMysC,iBAAiBzlC,EAAiBoG,4BAE7CrN,KAAK6L,SAAS,CAClBg1F,OACAt3D,SACAiI,YACA4uE,eACAC,gBACAC,iBACAvmB,kBACAqS,yKAKEpsG,KAAKwgH,WACP91G,OAAO45B,aAAatkC,KAAKwgH,uKAM3BxgH,KAAKgJ,qBACChJ,KAAKohH,kBACXphH,KAAKyqG,iRAKLzqG,KAAKwgH,UAAY91G,OAAOm5B,WAAW,WAC5B56B,EAAKhJ,MAAMohH,oBAAuBp4G,EAAKhJ,MAAM2b,sBAChD3S,EAAK4C,SAAS,CACZ00G,iBAAgB,KAGpB,KAEGvgH,KAAKC,MAAMuiC,8CACPxiC,KAAKC,MAAMkrG,sBACRnrG,KAAKC,MAAMohH,4DACdrhH,KAAKC,MAAMqhH,yBACRthH,KAAKC,MAAM2b,+DACd5b,KAAKC,MAAMshH,sCAGpBvhH,KAAKgJ,sBACChJ,KAAKohH,mBACXphH,KAAKyqG,aACLzqG,KAAKwhH,oMAGkBz2G,EAAUqC,6FAEjCpN,KAAKgJ,YAECy4G,EAAa12G,EAAU+P,MAAMyuB,OAC7BA,EAASvpC,KAAKC,MAAM6a,MAAMyuB,OAE5B3pB,KAAKC,UAAU4hG,KAAgB7hG,KAAKC,UAAU0pB,mCAC1CvpC,KAAK6L,SAAS,CAClBw0G,cAAc,MACb,WACDpyG,EAAKw8F,sBAIHhvF,EAAiB1Q,EAAUvJ,UAAYxB,KAAKC,MAAMuB,QAClD6pG,EAAkBrrG,KAAKC,MAAMgH,kBAAoB8D,EAAU9D,mBAAqBjH,KAAKC,MAAMgH,iBAC3Fo6G,EAAqBrhH,KAAKC,MAAMohH,oBAAsBt2G,EAAUs2G,qBAAuBrhH,KAAKC,MAAMohH,mBAClGzlG,EAAuB5b,KAAKC,MAAM2b,sBAAwB7Q,EAAU6Q,uBAAyB5b,KAAKC,MAAM2b,sBAE1GH,GAAkB4lG,GAAsBzlG,GAAwByvF,IAClErrG,KAAKwhH,sQAMHxhH,KAAKC,MAAMoN,eAAkBrN,KAAKC,MAAMohH,oBAAuBrhH,KAAKC,MAAM2b,sBAAyB5b,KAAKC,MAAMiH,qBAAwBlH,KAAKC,MAAM2G,yDAC5I,6BAGH5G,KAAK0hH,8CACL1hH,KAAK2hH,2CACL3hH,KAAK4hH,qSAKLC,EAA2F,OAAxE7hH,KAAKS,cAAcw2D,cAAc,wBAAuB,EAAM,OACnFj3D,KAAKC,MAAMoN,eAAkBw0G,GAAqB7hH,KAAKC,MAAM2G,yDACxD,6BAGqB5G,KAAKS,cAAck6B,mCAA3CrB,kBAC+Bt5B,KAAKS,cAAcivF,2BAA2B,kBAA7EqoB,WAIDz+E,GAAmB15B,OAAOwH,KAAKkyB,GAAiBx2B,OAAO,GAAOi1G,GAA0Bn4G,OAAOwH,KAAK2wG,GAAwBj1G,OAAO,uBAClH,sBACA9C,KAAKwK,MAAMilG,oCAC7BzvG,KAAK6L,SAAS,CACZ4jG,YAHgB,UAIhBn2E,kBACAy+E,6CALgB,4CAYf,kRAIF/3G,KAAKC,MAAMuB,SAAYxB,KAAKC,MAAMohH,oBAAuBrhH,KAAKC,MAAM2b,8DAChE,iBAIL5b,KAAKC,MAAMuB,SAAsC,OAA3BxB,KAAKwK,MAAMilG,gCAC/BqS,GAAgB,GAEdC,EAAoB/hH,KAAKS,cAAcG,gBAAgB,CAAC,SAAS,aAEjD4D,SAAW0/B,eAGzB89E,GAAW,IAAIjpG,MAAOI,UACtBkwC,EAAgBrpD,KAAKC,MAAMuB,QAAQ8O,eACrC6mG,EAAYjzE,aAAaC,QAAQ,aAAevkB,KAAKwkB,MAAMF,aAAaC,QAAQ,cAAgB,IAGrFklB,GAOH8tD,EAAU9tD,GAAe+tD,WAC7B6K,EAAWl2G,SAASorG,EAAU9tD,GAAe44D,UAEnDH,GAD2BE,EAASC,GAAU,KACXF,EAAkBzwE,YATrD6lE,EAAU9tD,GAAiB,CACzB+tD,UAAW,EACX6K,SAAWD,GAEbF,GAAgB,GAQdA,IACF3K,EAAU9tD,GAAe44D,SAAWD,EACpChiH,KAAKS,cAAc4jC,gBAAgB,YAAYzkB,KAAKC,UAAUs3F,MAI5D1H,EAAcqS,EAAgB,UAAY9hH,KAAKwK,MAAMilG,YACvDzvG,KAAKwK,MAAMilG,cAAgBA,0BAC7BzvG,KAAK6L,SAAS,CACZ4jG,kCAGKA,oCAIJ,yRAKFzvG,KAAKC,MAAMuB,SAAYxB,KAAKC,MAAMohH,oBAAuBrhH,KAAKC,MAAM2b,8DAChE,gBAIHsmG,EAAsBliH,KAAKS,cAAcG,gBAAgB,CAAC,SAAS,UAAU,YAC7EuhH,EAA2F,OAAxEniH,KAAKS,cAAcw2D,cAAc,wBAAuB,EAAM,MAExD,OAA3Bj3D,KAAKwK,MAAMilG,cAAwByS,IAAuBC,GAAqBniH,KAAKwK,MAAMotG,yDACtD53G,KAAKS,cAAcivF,2CAAnDkoB,SACAnI,EAAcmI,GAA2Bh4G,OAAOwH,KAAKwwG,GAAyB90G,OAAO,EAAI,UAAY,KACrGmI,EAAW,CACfwkG,cACAmI,2BAEF53G,KAAK6L,SAASZ,qBACPwkG,oCAGF,6IAGGrV,GAAyB,IAAjBwlB,IAAiBp9G,UAAAM,OAAA,QAAAC,IAAAP,UAAA,KAAAA,UAAA,GAG/Bo9G,IACFxlB,EAAUA,EAAQ1rC,QAAQ1uD,KAAKwK,MAAMgnC,UAAW,IAAI,KAGtD,IAAM4wE,EAAWxC,EAAc5/G,KAAKwK,MAAMgnC,UAAW,IAAM4oD,EAAUA,EACrE1vF,OAAOu0C,SAAStyB,KAAKy1F,EAGrBpiH,KAAKS,cAAc+iB,yBAAyB,CAC1CC,cAAe,KACfC,YAAa,cACbC,WAAYy+F,IAGd13G,OAAOykD,SAAS,EAAG,uCAQT9hD,GAEV,GADAA,EAAgBA,EAAc4U,cAC1BriB,OAAOwH,KAAKpH,KAAKC,MAAM2G,iBAAiBguB,SAASvnB,GAAe,CAClE,IAAMg1G,EAAa,GAGfriH,KAAKwK,MAAM81G,eAAehwG,gBAAkBtQ,KAAKC,MAAMgH,iBAAiBqJ,eAC1E+xG,EAAW5xG,KAAKzQ,KAAKwK,MAAM81G,gBAI7B+B,EAAW5xG,KAAKzQ,KAAKC,MAAMgH,kBAG3Bo7G,EAAW5xG,KAAKpD,GAEhBrN,KAAKosC,YAAYi2E,EAAWvxG,KAAK,wCAKnC,IAAMwxG,EAAgBtiH,KAAKwK,MAAM61G,cAAgBrgH,KAAKwK,MAAM61G,cAAgB,KAC5E,OACE7gH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,OACP6W,SAAU,QACVvH,cAAe,MACf3K,OAAQ,CAAEyL,OAAO+N,YAAY,GAAI,KAAK,SACtCra,gBAAiB,CAAC,cAAc,UAEhCoB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoQ,OAAQ,EACRqB,OAAQ,EACR9W,MAAO,CAAC,EAAE,EAAE,GACZsP,cAAe,SACfuH,SAAU,CAAC,QAAQ,aAEnB3R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,EAAG,CAAC,EAAE,GACNzP,MAAO,CAAC,QAAQ,QAChB2E,OAAQ,CAAC,OAAO,UAEhBO,EAAAC,EAAAC,cAAC6iH,GAAD3iH,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEE4gG,KAAM7gG,KAAKwK,MAAMq2F,UAIvBrhG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEyhB,GAAI,EACJD,GAAI,CAAC,EAAE,GACP7P,GAAI,EACJhX,MAAO,CAAC,EAAE,EAAE,GACZ4iB,MAAO,CACLyiF,UAAU,SACV6iB,UAAU,UAEZ54G,cAAe,UACfxL,gBAAiB,eAGd4B,KAAKC,MAAMohH,oBAAuBrhH,KAAKC,MAAM2b,sBAAyB0mG,EAiErE9iH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPsP,cAAe,UAEfpK,EAAAC,EAAAC,cAAC+iH,GAAD7iH,OAAAC,OAAA,CACEusC,YAAapsC,KAAKosC,YAAYvhC,KAAK7K,OAC/BA,KAAKC,QAGTqiH,GACE9iH,EAAAC,EAAAC,cAAC4iH,EAAD1iH,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEE6a,MAAO,CAAEyuB,OAAO,IAChBoD,UAAW3sC,KAAKwK,MAAM++B,OACtB/mB,YAAaxiB,KAAKwiB,YAAY3X,KAAK7K,MACnCosC,YAAapsC,KAAKosC,YAAYvhC,KAAK7K,MACnC+5F,gBAAiB/5F,KAAKwK,MAAMuvF,gBAC5BqS,mBAAoBpsG,KAAKwK,MAAM4hG,mBAC/BnjF,iBAAkBjpB,KAAKipB,iBAAiBpe,KAAK7K,UAlFrDR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACP8R,UAAW,OACXzC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGb7J,KAAKwK,MAAM+1G,gBAiBV/gH,EAAAC,EAAAC,cAAC8gB,GAAD,CACE1B,UAAW,CACT/U,EAAE,EACFmV,GAAG,EACH5kB,MAAM,CAAC,EAAE,OAGXkF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgK,WAAY,SACZC,cAAe,UAEfpK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE0M,KAAM,QACNM,KAAM,UACNxO,MAAO,aAETqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,EACJlgB,SAAU,EACVb,MAAO,WACPkT,UAAW,UAJb,qCAMoC7R,EAAAC,EAAAC,cAAA,WANpC,yDAQAF,EAAAC,EAAAC,cAACmsC,GAAD,CACEhmB,YAAa,CACX3G,GAAG,EACH5kB,MAAM,CAAC,EAAE,KAEX+jB,YAAare,KAAK21F,OAAO9qF,KAAK7K,OALhC,YAxCJR,EAAAC,EAAAC,cAACyM,GAAD,CACE7B,UAAW,CACTkxB,SAAS,EACT5sB,WAAW,GAEbvE,YAAa,CACXiH,GAAG,EACHjF,KAAK,QAEP3C,UAAW,CACT8b,GAAG,EACH5b,cAAc,UAEhB3Q,KAAQ+G,KAAKC,MAAMohH,mBAA+CrhH,KAAKC,MAAM2b,qBAAgD,oBAAzB,uBAA5D,yBAmEtDpc,EAAAC,EAAAC,cAACgjH,GAAD9iH,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEE4+B,WAAY7+B,KAAK++B,WACjBqN,YAAapsC,KAAKosC,YAAYvhC,KAAK7K,MACnCs5B,gBAAiBt5B,KAAKwK,MAAM8uB,gBAC5BiI,OAAmC,YAA3BvhC,KAAKwK,MAAMilG,YACnBsI,uBAAwB/3G,KAAKwK,MAAMutG,0BAErCv4G,EAAAC,EAAAC,cAACijH,GAAD/iH,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEE4+B,WAAY7+B,KAAK++B,WACjBqN,YAAapsC,KAAKosC,YAAYvhC,KAAK7K,MACnCuhC,OAAmC,YAA3BvhC,KAAKwK,MAAMilG,YACnBmI,wBAAyB53G,KAAKwK,MAAMotG,2BAEtCp4G,EAAAC,EAAAC,cAACkjH,GAAD,CACE/jF,WAAY7+B,KAAK++B,WACjBjlC,MAAOkG,KAAKwK,MAAMi2G,WAClBlJ,QAASv3G,KAAKwK,MAAMk2G,aACpBn/E,OAAmC,YAA3BvhC,KAAKwK,MAAMilG,cAGrBjwG,EAAAC,EAAAC,cAACmjH,GAAD,CACEhkF,WAAY7+B,KAAK++B,WACjBv9B,QAASxB,KAAKC,MAAMuB,QACpBo9C,SAAU5+C,KAAKC,MAAM2+C,SACrB7B,QAAS/8C,KAAKC,MAAM88C,QAAQ+lE,QAC5BviH,UAAWP,KAAKC,MAAMoN,cACtB+zD,aAAcphE,KAAKC,MAAMmhE,aACzB2hD,cAAe/iH,KAAKC,MAAMoN,cAC1Bk0B,OAAmC,YAA3BvhC,KAAKwK,MAAMilG,sBA1mBLtvG,oECqBT6iH,oLAzBX,OACExjH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKud,MAXa,CAClB/L,SAAU,QACVpB,OAAQ,EACRC,KAAM,EACNF,MAAO,EACPxV,MAAO,OACP8D,gBAAiB,QACjBgT,OAAQ,MAIiBrH,EAAG,GAC1BvK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMgK,WAAY,UAChBnK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKoK,EAAG,GACNvK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMgN,KAAK,UAAUxO,MAAM,OAAOkO,KAAK,QAEzC7M,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMiK,cAAe,UACnBpK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMiP,WAAY,QAAlB,0CAGApP,EAAAC,EAAAC,cAACC,EAAA,EAAD,6BACwBK,KAAKC,MAAM88C,QAAQ31B,SAASza,KADpD,wDAE8C,IAC5CnN,EAAAC,EAAAC,cAACC,EAAA,EAAKwlC,KAAN,CAAWjoB,MAAO,CAAEyO,cAAe,eAChC3rB,KAAKC,MAAM88C,QAAQ+lE,QAAQn2G,MACjB,IALf,6DAtBqBmlB,IAAM3xB,WCkBxB8iH,oLAfX,OACEzjH,EAAAC,EAAAC,cAAA,YAC4C,IAAxCM,KAAKC,MAAM88C,QAAQ0iD,kBAA8Bz/F,KAAKC,MAAMuiC,KAE1DhjC,EAAAC,EAAAC,cAACwjH,GAAD,CACEnmE,QAAS/8C,KAAKC,MAAM88C,UAGtB,aAVcjrB,IAAM3xB,0CCiIjBgjH,8MA/HbC,cAAgB,WACd,OACE5jH,EAAAC,EAAAC,cAACF,EAAAC,EAAM2rB,SAAP,KACE5rB,EAAAC,EAAAC,cAACC,EAAA,EAAQ+0F,GAAT,CACE11F,SAAU,EACV4P,WAAY,EACZyQ,WAAY,UACZmG,GAAI,GAJN,uCASC69F,KAAWC,iBACV9jH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM6lB,GAAI,GAAV,8GAE6C,IAC3ChmB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEklB,KAAK,qBACL/qB,MAAM,oBACNgG,OAAO,SAASC,IAAI,gCAHtB,UAHF,IAUI,IACFP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEklB,KAAK,iCACL/qB,MAAM,gBACNgG,OAAO,SAASC,IAAI,gCAHtB,UAMQ,IAjBV,KAkBK,IACHP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEklB,KAAK,+BACL/qB,MAAM,kBACNgG,OAAO,SAASC,IAAI,gCAHtB,mBAMQ,IAzBV,aA6BAP,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM6lB,GAAI,GAAV,qGAE0C,IACxChmB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEklB,KAAK,8BACL/qB,MAAM,yBACNgG,OAAO,SAASC,IAAI,gCAHtB,SAHF,IAUI,IACFP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEklB,KAAK,2BACL/qB,MAAM,2BACNgG,OAAO,SAASC,IAAI,gCAHtB,WAXF,IAkBI,IACFP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEklB,KAAK,iCACL/qB,MAAM,yBACNgG,OAAO,SAASC,IAAI,gCAHtB,SAnBF,OA0BO,IACLP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEklB,KAAK,iCACL/qB,MAAM,0BACNgG,OAAO,SAASC,IAAI,gCAHtB,UAMQ,IAjCV,gBAqCAP,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAKwlC,KAAN,CAAWo+E,MAAI,GAAf,0BADF,2DAE8C,IAC5C/jH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEklB,KAAK,qBACL/qB,MAAM,oBACNgG,OAAO,SAASC,IAAI,gCAHtB,UAHF,IAUI,IACFP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEklB,KAAK,iCACL/qB,MAAM,gBACNgG,OAAO,SAASC,IAAI,gCAHtB,UAMQ,IAjBV,KAkBK,IACHP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEklB,KAAK,+BACL/qB,MAAM,kBACNgG,OAAO,SAASC,IAAI,gCAHtB,mBAnBF,gFAmCR,OACEP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAO4hC,OAAQvhC,KAAKC,MAAMshC,QACxB/hC,EAAAC,EAAAC,cAAC8hC,GAAD,CAAW9F,UAAW17B,KAAKC,MAAM4+B,YAC/Br/B,EAAAC,EAAAC,cAAC8hC,GAAUpF,KAAX,KACGp8B,KAAKojH,0BAxHetxF,IAAM3xB,WCiDxBqjH,oLAxCX,OACEhkH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAO4hC,OAAQvhC,KAAKC,MAAMshC,QACxB/hC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMoK,EAAG,EAAGooB,SAAU,SACpB3yB,EAAAC,EAAAC,cAACC,EAAA,EAAOm0B,KAAR,CACE8H,UAAQ,EACR1qB,KAAM,QACN/S,MAAO,YACPgT,SAAU,WACVtB,IAAK,EACLC,MAAO,EACPoP,GAAI,EACJiD,GAAI,EACJ/D,QAASpe,KAAKC,MAAM4+B,aAGtBr/B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMiK,cAAe,SAAUC,eAAgB,iBAC7CrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMkK,eAAgB,SAAU2b,GAAI,GAClChmB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMgN,KAAK,UAAUxO,MAAM,OAAOkO,KAAK,QAGzC7M,EAAAC,EAAAC,cAACC,EAAA,EAAQ+0F,GAAT,CAAYlvE,GAAI,GAAhB,uBAEAhmB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM6lB,GAAI,GAAV,4GAKAhmB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEklB,KAAK,4FACL/kB,OAAO,SAASC,IAAI,gCAEpBP,EAAAC,EAAAC,cAACC,EAAA,EAAO48B,QAAR,CAAgBlwB,KAAK,SAArB,qCAjCcylB,IAAM3xB,WC0CnBsjH,GArDK,CAClBC,YAAa,WACX,IAAIA,GAAc,EAQlB,MAN+B,qBAApBh5G,OAAOggD,SAChBg5D,EAAoD,qBAA/Bh5G,OAAOggD,SAASi5D,WACL,qBAAhBj5G,OAAO83B,OACvBkhF,EAAgE,qBAA3Ch5G,OAAO83B,KAAKqoC,gBAAgB84C,YAA8Bj5G,OAAO83B,KAAKqoC,gBAAgB84C,YAGtGD,GAETE,cAAe,WACb,MAA2B,qBAAhBl5G,OAAO83B,MAA+D,qBAAhC93B,OAAO83B,KAAKqoC,kBACL,qBAAxCngE,OAAO83B,KAAKqoC,gBAAgBg5C,SAA2Bn5G,OAAO83B,KAAKqoC,gBAAgBg5C,UAIrGC,iBAAkB,WAChB,MAA2B,qBAAhBp5G,OAAO83B,MAA+D,qBAAhC93B,OAAO83B,KAAKqoC,kBACI,qBAAjDngE,OAAO83B,KAAKqoC,gBAAgBi5C,kBAAoCp5G,OAAO83B,KAAKqoC,gBAAgBi5C,mBAI9GC,UAAW,WACT,IAAIA,EAA6C,qBAA1Br5G,OAAOs5G,eAM9B,MAJ+B,qBAApBt5G,OAAOggD,WAChBq5D,EAAgD,qBAA7Br5G,OAAOggD,SAASu5D,UAA4Bv5G,OAAOggD,SAASu5D,UAG1EF,GAETG,QAAS,WACP,MAAO,cAAcxyE,KAAKsY,UAAUC,YAGtCk6D,UAAW,WACT,IAAMA,IAAY,WAAWzyE,KAAKsY,UAAUC,WAE5C,OAAOk6D,GAGTC,MA3CkB,WA4ChB,IAAMA,KACJ,mBAAmB1yE,KAAKsY,UAAUC,YAAev/C,OAAO25G,UAI1D,OAAOD,IC0BIE,8MA7DblB,cAAgB,WACd,OACE5jH,EAAAC,EAAAC,cAAC8hC,GAAUpF,KAAX,KACE58B,EAAAC,EAAAC,cAACC,EAAA,EAAQ+0F,GAAT,CAAYlvE,GAAI,GAAhB,iBACiBnlB,EAAKJ,MAAM88C,QAAQ31B,SAASza,KAD7C,cAC8D,IAC3D82G,GAAYC,cAAZ,uBAGHlkH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM6lB,GAAI,GAAV,iCACiC,IAC/BhmB,EAAAC,EAAAC,cAACC,EAAA,EAAKwlC,KAAN,CAAWjoB,MAAO,CAAEyO,cAAe,eAChCtrB,EAAKJ,MAAM88C,QAAQ31B,SAASza,MAClB,IAJf,wCAKmC,IACjCnN,EAAAC,EAAAC,cAACC,EAAA,EAAKwlC,KAAN,CAAWjoB,MAAO,CAAEyO,cAAe,eAChC,IACAtrB,EAAKJ,MAAM88C,QAAQ+lE,QAAQn2G,MACjB,IATf,YAaC82G,GAAYC,gBAAkBa,KAAYjB,iBACzC9jH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKrI,GAAI,UAAWyS,EAAG,EAAG2E,QAAS,CAAC,OAAQ,UAC1ClP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMgK,WAAY,UAChBnK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKwR,SAAU,WAAY7W,MAAO,OAChCkF,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQ0M,KAAM,UAGlB7M,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMiP,WAAY,GAAlB,oCACApP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMiP,WAAY,GAAlB,sCAMJ,KAEJpP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK+O,QAAS,CAAC,QAAS,SACtBlP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQye,QAAS/d,EAAKJ,MAAM4+B,WAAYvkC,MAAO,GAA/C,iFASN,OACEkF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAO4hC,OAAQvhC,KAAKC,MAAMshC,QACxB/hC,EAAAC,EAAAC,cAAC8hC,GAAD,CAAW9F,UAAW17B,KAAKC,MAAM4+B,YAC/Br/B,EAAAC,EAAAC,cAACF,EAAAC,EAAM2rB,SAAP,KACGprB,KAAKojH,0BAtDctxF,IAAM3xB,WCiDvBqkH,OA3Df,SAA6BvkH,GAC3B,OACET,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAAC8hC,GAAUzF,OAAX,CAAkBjiC,MAAO,6CAA8CmiC,SAAU,wDAAyDE,UAAW,0EACrJ38B,EAAAC,EAAAC,cAAC8hC,GAAUpF,KAAX,KACE58B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMiK,cAAe,CAAC,SAAU,OAC9BC,eAAgB,gBAChB2b,GAAI,CAAC,EAAG,IACRhmB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK2iB,KAAM,MAAOhoB,MAAO,EAAG4kB,GAAI,CAAC,EAAG,GAAI5N,GAAI,CAAC,EAAG,GAAI6Q,GAAI,GACtD3iB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMkK,eAAgB,SAAUyH,GAAI,GAClC9R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgN,KAAK,cACLxO,MAAM,UACNkO,KAAK,SAGT7M,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASX,SAAU,EAAGqS,UAAW,UAAjC,oBACA7R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMX,SAAU,EAAGqS,UAAW,UAA9B,6FAKF7R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK2iB,KAAM,MAAOhoB,MAAO,EAAG4kB,GAAI,CAAC,EAAG,GAAI5N,GAAI,CAAC,EAAG,GAAI6Q,GAAI,GACtD3iB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMkK,eAAgB,SAAUyH,GAAI,GAClC9R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgN,KAAK,qBACLxO,MAAM,UACNkO,KAAK,SAGT7M,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASX,SAAU,EAAGqS,UAAW,UAAjC,0BACA7R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMX,SAAU,EAAGqS,UAAW,UAA9B,6DAIF7R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK2iB,KAAM,MAAOhoB,MAAO,EAAG4kB,GAAI,CAAC,EAAG,GAAI5N,GAAI,CAAC,EAAG,GAAI6Q,GAAI,GACtD3iB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMkK,eAAgB,SAAUyH,GAAI,GAClC9R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgN,KAAK,iBACLxO,MAAM,UACNkO,KAAK,QAEP7M,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgN,KAAK,gBACLxO,MAAM,UACNkO,KAAK,SAGT7M,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASX,SAAU,EAAGqS,UAAW,UAAjC,wBACA7R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMX,SAAU,EAAGqS,UAAW,UAA9B,4FC1CNkxB,GAAY,WAAc,QAAAurB,EAAAtrD,UAAAM,OAAV7C,EAAU,IAAA8tD,MAAAD,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAV/tD,EAAU+tD,GAAAxrD,UAAAwrD,IAEjB,SAASy2D,GAAsBxkH,GAC5C,IAAMm4G,EAAUsM,4BAEXtM,EAAQlgH,QAAWkgH,EAAQz2E,MAErBy2E,EAAQz2E,MACjBY,GAAU,gBAAiB61E,GAE3B71E,GAAU,kBAAmB61E,GAJ7B71E,GAAU,kBAAmB61E,GAM/B,IAAMD,EAAY,eAAApuF,EAAAnqB,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAG,SAAAC,EAAOqpD,EAAc39C,GAArB,IAAAuqG,EAAA,OAAAn2G,EAAAtB,EAAA0B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACf41G,EAAmC,aAAlB5sD,EAA+B39C,EAAO29C,EACvDpmB,eACFA,aAAaygC,QAAQ,iBAAkBuyC,GACvChzE,aAAaygC,QAAQ,gBAAiBra,IAGpCrqD,EAAMk4G,cAA8C,oBAAvBl4G,EAAMk4G,cACrCl4G,EAAMk4G,aAAa7tD,EAAc4sD,GAIK,oBAA7Bj3G,EAAM0kH,oBACf1kH,EAAM0kH,qBAbWvjH,EAAAQ,OAAA,SAgBZ0oD,GAhBY,wBAAAlpD,EAAAS,SAAAZ,EAAAjB,SAAH,gBAAAqC,EAAAC,GAAA,OAAAynB,EAAAxnB,MAAAvC,KAAAwC,YAAA,GAmBZoiH,EAAc,eAAA7iH,EAAAnC,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAG,SAAAgB,IAAA,OAAAjB,EAAAtB,EAAA0B,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,OACrB82G,EAAQwM,iBACJ3kH,EAAMk4G,cAA8C,oBAAvBl4G,EAAMk4G,cACrCl4G,EAAMk4G,aAAa,SAAS,UAHT,wBAAAh2G,EAAAN,SAAAG,EAAAhC,SAAH,yBAAA+B,EAAAQ,MAAAvC,KAAAwC,YAAA,GAUd0hH,EAAUT,GAAYS,UACtBD,EAAWR,GAAYM,YACvBc,EAAapB,GAAYC,cACzBE,EAAgBH,GAAYG,gBAC5BE,EAAmBL,GAAYK,mBAC/BgB,EAAwBD,GAAcX,GAAWD,GAAYH,GAAoBF,EAEjFmB,EAAoB9kH,EAAM8kH,kBAC1BC,EAAe/kH,EAAM+kH,aAEvB11E,GAAW0pD,SACTgsB,GACF11E,GAAW0pD,OAAOl5E,QAAUwvB,GAAW0pD,OAAOl5E,SAAW,GACzDwvB,GAAW0pD,OAAOl5E,QAAQmlG,uBAAwB,IAElD31E,GAAW0pD,OAAOl5E,QAAUwvB,GAAW0pD,OAAOl5E,SAAW,GACzDwvB,GAAW0pD,OAAOl5E,QAAQmlG,uBAAwB,IAItD,IAAIC,EAAsBtlH,OAAOwH,KAAKkoC,IAAYxzB,OAAO,SAAA0yC,GAAC,MAAU,WAANA,IAE1Du2D,IACFG,EAAsBA,EAAoBppG,OAAO,SAAAkB,GAAC,OAA4F,IAAxF+nG,EAAkB7pG,IAAI,SAAC5M,GAAQ,OAAOA,EAAEgC,gBAAkBsH,QAAQoF,EAAE1M,kBAG5H,IAAM5R,EAAUwmH,EAAoBhqG,IAAI,SAAAovC,GAEtC,OAAQA,GACN,IAAK,WACH,GAAIw6D,EAAuB,CACzB,IAAIn4G,EAAO,KACPk4G,EACFl4G,EAAO,WACEu3G,EACTv3G,EAAO,QACEs3G,EACTt3G,EAAO,SACEm3G,EACTn3G,EAAO,WACEi3G,IACTj3G,EAAO,eAGT,IAAMksG,EAAgBloG,GAAc2+B,WAAW3iC,EAAK2D,eACpD,GAAIuoG,GAAiBA,EAAcr0G,QAAQ,CACzC,IAAMs0G,EAAaD,EAAc3nG,KAAO2nG,EAAc3nG,KAAnC,GAAAzM,OAA6CkI,EAAK2D,cAAlD,QACnB,OACE9Q,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPijB,IAAG,UAAA9Y,OAAYkI,GACfuQ,MAAO,CACLoF,KAAK,SACLzY,eAAe,eAGjBrK,EAAAC,EAAAC,cAACwhC,GAAD,CACErE,QAASlwB,EACT3B,UAAU,EACV1Q,MAAO,CAAC,EAAE,KACVoiC,SAAQ,UAAAj4B,OAAYq0G,GACpBn8E,WAAY,CAACriC,MAAM,OAAO2E,OAAO,QACjCof,YAAWze,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAG,SAAA0B,IAAA,OAAA3B,EAAAtB,EAAA0B,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,cAAAuB,EAAAvB,KAAA,EAAkB62G,EAAa7tD,EAAc39C,GAA7C,cAAA9J,EAAAjB,OAAA,SAAAiB,EAAApB,MAAA,wBAAAoB,EAAAhB,SAAAa,EAAA1C,SACdk9B,WAAa27E,GAAiBA,EAAc37E,WAAa27E,EAAc37E,WAA1D,iBAAAz4B,OAAwFkI,MAK7G,OAAO,KAEP,IAAMksG,EAAgBloG,GAAc2+B,WAAWgb,EAAch6C,eAC7D,OACE9Q,EAAAC,EAAAC,cAACwhC,GAAD,CACEl2B,UAAU,EACV6xB,QAAS,iBACTtf,IAAG,UAAA9Y,OAAY6lD,GACf5tB,SAAQ,4BACRC,WAAY,CAACriC,MAAM,OAAO2E,OAAO,QACjCof,YAAWze,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAG,SAAAkC,IAAA,OAAAnC,EAAAtB,EAAA0B,KAAA,SAAAiC,GAAA,cAAAA,EAAA/B,KAAA+B,EAAA9B,MAAA,cAAA8B,EAAA9B,KAAA,EAAkB62G,EAAa7tD,GAA/B,cAAAlnD,EAAAxB,OAAA,SAAAwB,EAAA3B,MAAA,wBAAA2B,EAAAvB,SAAAqB,EAAAlD,SACdk9B,WAAa27E,GAAiBA,EAAc37E,WAAa27E,EAAc37E,WAA1D,iCACbH,YAAc98B,EAAM+K,SAAW,CAACnB,eAAe,aAAayY,KAAK,UAAY,CAACzY,eAAe,aAAayY,KAAK,WAIvH,QACE,IAAMu2F,EAAgBloG,GAAc2+B,WAAWgb,EAAch6C,eAC7D,GAAIuoG,GAAiBA,EAAcr0G,QAAQ,CACzC,IAAMs0G,EAAaD,EAAchpE,UAAYgpE,EAAchpE,UAAagpE,EAAc3nG,KAAO2nG,EAAc3nG,KAAnC,GAAAzM,OAA6C6lD,EAAch6C,cAA3D,QAEpEusB,EAAUg8E,EAAclsG,KAAOksG,EAAclsG,KAAO29C,EACxD,OACE9qD,EAAAC,EAAAC,cAACwhC,GAAD,CACEl2B,UAAU,EACV6xB,QAASA,EACTtf,IAAG,UAAA9Y,OAAY6lD,GACf5tB,SAAQ,UAAAj4B,OAAYq0G,GACpBn8E,WAAY,CAACriC,MAAM,OAAO2E,OAAO,QACjCof,YAAWze,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAG,SAAAyC,IAAA,OAAA1C,EAAAtB,EAAA0B,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,cAAAiD,EAAAjD,KAAA,EAAkB62G,EAAa7tD,GAA/B,cAAA/lD,EAAA3C,OAAA,SAAA2C,EAAA9C,MAAA,wBAAA8C,EAAA1C,SAAA4B,EAAAzD,SACdk9B,WAAa27E,GAAiBA,EAAc37E,WAAa27E,EAAc37E,WAA1D,iBAAAz4B,OAAwF6lD,GACrGvtB,YAAc98B,EAAM+K,SAAW,CAACnB,eAAe,aAAayY,KAAK,UAAY,CAACzY,eAAe,aAAayY,KAAK,WAIrH,OAAO,QAIb,OACE9iB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKrF,MAAO,CAAC,IACXkF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMiK,cAAe,SAAUD,WAAY,UACxCyuG,EAAQz2E,OACPniC,EAAAC,EAAAC,cAACC,EAAA,EAAKoK,EAAN,CAAQsH,UAAU,UAAlB,+DAEE7R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMklB,KAAK,uBAAuB/kB,OAAO,SAASC,IAAI,gCAAtD,sBAFF,KAMEP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMklB,KAAK,8BAA8B/kB,OAAO,SAASC,IAAI,gCAA7D,eANF,6OAgBAq4G,EAAQlgH,QAAWkgH,EAAQz2E,OAASy2E,EAAQ9tD,gBAA6C,WAA1B8tD,EAAQ9tD,eACvE9qD,EAAAC,EAAAC,cAACC,EAAA,EAAO48B,QAAR,CACEjiC,MAAO,CAAC,IACR0kB,UAAW,CAACC,KAAOrnB,QACnB0Z,GAAI,CAAC,EAAG,GACRjF,KAAM,QACNkR,IAAK,QACLa,QAAOxe,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAE,SAAA4E,IAAA,OAAA7E,EAAAtB,EAAA0B,KAAA,SAAA4E,GAAA,cAAAA,EAAA1E,KAAA0E,EAAAzE,MAAA,cAAAyE,EAAAzE,KAAA,EAAkBsjH,IAAlB,cAAA7+G,EAAAnE,OAAA,SAAAmE,EAAAtE,MAAA,wBAAAsE,EAAAlE,SAAA+D,EAAA5F,UAERo4G,EAAQlgH,OAAS,uBAAyB,UAIjDsH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMiK,cAAe,MAAOq3B,SAAU,OAAQp3B,eAAgB,iBAC3DnL,QC8LMymH,8MAtWb36G,MAAQ,CACN81G,eAAe,KACf8E,YAAY,EACZC,mBAAmB,KACnBC,oBAAqB,KACrBC,kBAAkB,KAIpB9kH,cAAgB,OAShB+kH,iBAAmB,SAAAx3G,GACjBA,EAAEinB,iBAEF50B,EAAKwL,SAAS,CACZu5G,YAAa/kH,EAAKmK,MAAM46G,gBAI5BK,iBAAmB,WACjB,IAAInF,EAAiB,KASrB,OARIp8E,eACFo8E,EAAiBp8E,aAAaC,QAAQ,oBAEpC9jC,EAAKwL,SAAS,CACZy0G,mBAICA,KAGTl0F,kBAAoB,WAClB/rB,EAAK2I,YACL3I,EAAKolH,sBAGP9d,mBAAqB,WACnBtnG,EAAK2I,eAGP+1B,WAAa,SAAA/wB,GACX3N,EAAKwL,SAAS,CACZu5G,YAAY,EACZE,oBAAoB,KACpBC,kBAAkB,EAClBjF,eAAe,UAInBnI,mDAAe,SAAAl3G,EAAOqpD,EAAc39C,GAArB,IAAAuqG,EAAA,OAAAn2G,EAAAtB,EAAA0B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACT41G,EAAmC,aAAlB5sD,EAA+B39C,EAAO29C,EAG3DjqD,EAAKI,cAAc+iB,yBAAyB,CAC1CC,cAAe,UACfC,YAAa,gBACbC,WAAYuzF,IAGV72G,EAAKJ,MAAMk4G,cAAmD,oBAA5B93G,EAAKJ,MAAMk4G,cAC/C93G,EAAKJ,MAAMk4G,aAAa7tD,EAAc4sD,GAIxC72G,EAAKwL,SAAS,CACZy5G,oBAAqBh7D,IAGvBjqD,EAAKqlH,iBAnBQtkH,EAAAQ,OAAA,SAqBN0oD,GArBM,wBAAAlpD,EAAAS,SAAAZ,EAAAjB,mEA0Bf0lH,eAAiB,WACf,IAAML,EAAqBhlH,EAAKmK,MAAM66G,mBAAqBhlH,EAAKmK,MAAM66G,mBAAmB,EAAI,EACxFA,EAGHxhF,WAAW,WAAQxjC,EAAKqlH,kBAAmB,KAF3CrlH,EAAKw+B,aAIPx+B,EAAKwL,SAAS,CACZw5G,0BAIJM,gBAAkB,SAAC33G,EAAE43G,GACnB53G,EAAEinB,iBACF50B,EAAKwL,SAAS,CACZy5G,oBAAqBM,OAIzB/mF,WAAa,WAEXx+B,EAAK0+B,aAEL1+B,EAAKolH,mBAELplH,EAAKJ,MAAM4+B,gBAGbgnF,kBAAoB,SAAC73G,EAAEsyG,GACrBtyG,EAAEinB,iBACF50B,EAAKwL,SAAS,CACZy0G,mBAGmB,iBAAjBA,IAEFjgH,EAAKI,cAAc+iB,yBAAyB,CAC1CC,cAAe,UACfC,YAAa,cACbC,WAAY28F,IAGdjgH,EAAKI,cAAc4jC,gBAAgB,iBAAiBi8E,OAIxDwF,mBAAqB,WAEnB,IAAMC,EACJvmH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM0R,UAAW,SAAUrS,SAAU,EAAGoiB,GAAI,CAAC,EAAE,IAA/C,kCAAkF5hB,EAAAC,EAAAC,cAAC60F,EAAA,EAAD,CAAYnlC,GAAG,oBAAoBjxD,MAAO,OAAQ+e,MAAO,CAAC8J,eAAe,aAAclnB,OAAQ,SAAUC,IAAI,gCAA7G,sBAIhFimH,EAAsD,WAA9B3lH,EAAKmK,MAAM81G,eACnC2F,EAA8C,QAA9B5lH,EAAKmK,MAAM81G,eAGjC,MAFuD,iBAA9BjgH,EAAKmK,MAAM81G,eAIhC9gH,EAAAC,EAAAC,cAACF,EAAAC,EAAM2rB,SAAP,KACE5rB,EAAAC,EAAAC,cAAC8hC,GAAUzF,OAAX,CAAkBjiC,MAAO,qBAAsBmiC,SAAU,4DACzDz8B,EAAAC,EAAAC,cAAC8hC,GAAUpF,KAAX,KACE58B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEiK,cAAe,CAAC,SAAU,OAC1BC,eAAgB,gBAChB2b,GAAI,CAAC,EAAG,IAERhmB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK2iB,KAAM,MAAOhoB,MAAO,EAAG4kB,GAAI,CAAC,EAAG,GAAI5N,GAAI,CAAC,EAAG,GAAI6Q,GAAI,GACtD3iB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMkK,eAAgB,SAAUyH,GAAI,GAClC9R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgN,KAAK,SACLxO,MAAM,UACNkO,KAAK,SAGT7M,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASX,SAAU,EAAGqS,UAAW,UAAjC,4BACA7R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMX,SAAU,EAAGqS,UAAW,UAA9B,4IAMF7R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK2iB,KAAM,MAAOhoB,MAAO,EAAG4kB,GAAI,CAAC,EAAG,GAAI5N,GAAI,CAAC,EAAG,GAAI6Q,GAAI,GACtD3iB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMkK,eAAgB,SAAUyH,GAAI,GAClC9R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgN,KAAK,uBACLxO,MAAM,UACNkO,KAAK,SAGT7M,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASX,SAAU,EAAGqS,UAAW,UAAjC,4BACA7R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMX,SAAU,EAAGsS,GAAI,EAAGD,UAAW,UAArC,kJAG2B7R,EAAAC,EAAAC,cAAA,WACzBF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE7F,MAAM,wCACN8U,WAAY,IACZzQ,MAAO,OACPkT,UAAW,SACX4V,WAAY,OACZpC,KAAK,IACLzG,QAAS/d,EAAKmlH,kBAPhB,gCAaJhmH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK2iB,KAAM,MAAOhoB,MAAO,EAAG4kB,GAAI,CAAC,EAAG,GAAI5N,GAAI,CAAC,EAAG,IAC9C9R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMkK,eAAgB,SAAUyH,GAAI,GAClC9R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgN,KAAK,SACLxO,MAAM,UACNkO,KAAK,SAGT7M,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASX,SAAU,EAAGqS,UAAW,UAAjC,gCACA7R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMX,SAAU,EAAGqS,UAAW,UAA9B,6GAWR20G,EAEAxmH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAAC8hC,GAAUzF,OAAX,CAAkBjiC,MAAO,qBAAsBmiC,SAAU,6BAA8B/qB,KAAM,yBAC7F1R,EAAAC,EAAAC,cAAC8hC,GAAUpF,KAAX,KACE58B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMrF,MAAO,EAAG6mB,GAAI,CAAC,EAAE,GAAIvX,cAAe,SAAUC,eAAgB,UAClErK,EAAAC,EAAAC,cAAC+kH,GAAD,CAAuBz5G,SAAU3K,EAAKJ,MAAM+K,SAAU25G,mBAAqBtkH,EAAKw+B,WAAas5E,aAAe93G,EAAK83G,aAAe79G,MAAO,GAAK+R,KAAOhM,EAAKJ,MAAM+K,SAAW,SAAW,WAEtLxL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM+1B,GAAI,EAAG/rB,WAAY,SAAUE,eAAgB,UACjDrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM0R,UAAW,SAAU4V,WAAY,OAAQ7I,QAAU,SAAApQ,GAAC,OAAI3N,EAAKwlH,kBAAkB73G,EAAE,SAAvF,0BAEA+3G,IAMNE,EAEAzmH,EAAAC,EAAAC,cAACF,EAAAC,EAAM2rB,SAAP,KACE5rB,EAAAC,EAAAC,cAAC8hC,GAAUzF,OAAX,CAAkBjiC,MAAO,0CAA4CoX,KAAM,yBAC3E1R,EAAAC,EAAAC,cAAC8hC,GAAUpF,KAAX,KAEK/7B,EAAKmK,MAAM86G,oBAgBV9lH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMX,SAAU,EAAGqS,UAAW,SAAUzC,WAAY,EAAGyQ,WAAY,KAAnE,4BAC4Bhf,EAAKmK,MAAM86G,oBADvC,uBAGA9lH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,EACJrV,eAAgB,SAChBF,WAAY,SACZ0H,UAAW,UACX7R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQ0M,KAAK,SALf,IAKyB7M,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM2M,GAAI,EAAGnO,MAAO,aAApB,cAA6CkC,EAAKmK,MAAM66G,mBAAxD,iBAxB3B7lH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMrF,MAAO,EAAG6mB,GAAI,CAAC,EAAE,GAAIvX,cAAe,SAAUC,eAAgB,UAClErK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK2R,GAAI,GACP9R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMX,SAAU,CAAC,EAAE,GAAIqS,UAAW,SAAUzC,WAAY,EAAGyQ,WAAY,KAAvE,yCAIF7f,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM2R,GAAI,EAAG1H,cAAe,CAAC,SAAS,OAAQD,WAAY,SAAUE,eAAgB,UAClFrK,EAAAC,EAAAC,cAACwhC,GAAD,CAAal2B,SAAU3K,EAAKJ,MAAM+K,SAAU0xB,SAAU,mBAAoBC,WAAat8B,EAAKJ,MAAM+K,SAAW,CAAC1Q,MAAM,OAAO2E,OAAO,QAAU,CAACqS,GAAG,MAAMhX,MAAM,OAAO2E,OAAO,QAAS49B,QAAS,aAAcK,WAAY,oBAAqB7e,YAAc,SAAArQ,GAAC,OAAI3N,EAAK83G,aAAa,SAAS,aACzR34G,EAAAC,EAAAC,cAACwhC,GAAD,CAAal2B,SAAU3K,EAAKJ,MAAM+K,SAAU0xB,SAAU,oBAAqBC,WAAat8B,EAAKJ,MAAM+K,SAAW,CAAC1Q,MAAM,OAAO2E,OAAO,QAAU,CAACqS,GAAG,MAAMhX,MAAM,OAAO2E,OAAO,QAAS49B,QAAS,mBAAoBK,WAAY,uBAAwB7e,YAAc,SAAArQ,GAAC,OAAI3N,EAAK83G,aAAa,YAAY,iBAExS34G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMgK,WAAY,SAAUE,eAAgB,UAC1CrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM0R,UAAW,SAAU4V,WAAY,OAAQ7I,QAAU,SAAApQ,GAAC,OAAI3N,EAAKwlH,kBAAkB73G,EAAE,YAAvF,6BAkBN+3G,IAORvmH,EAAAC,EAAAC,cAACF,EAAAC,EAAM2rB,SAAP,KACE5rB,EAAAC,EAAAC,cAAC8hC,GAAUzF,OAAX,CAAkBjiC,MAAO,kBAAmBoX,KAAM,yBAClD1R,EAAAC,EAAAC,cAAC8hC,GAAUpF,KAAX,KAEI58B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMrF,MAAO,EAAG6mB,GAAI,CAAC,EAAE,GAAIvX,cAAe,SAAUC,eAAgB,UAClErK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK2R,GAAI,GACP9R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMX,SAAU,CAAC,EAAE,GAAIqS,UAAW,SAAUzC,WAAY,EAAGyQ,WAAY,KAAvE,wCAIF7f,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM2R,GAAI,CAAC,EAAE,GAAI1H,cAAe,CAAC,SAAS,OAAQD,WAAY,SAAUE,eAAgB,UACtFrK,EAAAC,EAAAC,cAACwhC,GAAD,CAAal2B,SAAW3K,EAAKJ,MAAM+K,SAAW0xB,SAAU,6BAA8BC,WAAat8B,EAAKJ,MAAM+K,SAAW,CAAC1Q,MAAM,OAAO2E,OAAO,QAAU,CAAC3E,MAAM,OAAO2E,OAAO,OAAOinH,aAAa,OAASrpF,QAAO,kBAAqBK,WAAY,wBAAyB7e,YAAc,SAAArQ,GAAC,OAAI3N,EAAKwlH,kBAAkB73G,EAAE,aACvTxO,EAAAC,EAAAC,cAACwhC,GAAD,CAAal2B,SAAW3K,EAAKJ,MAAM+K,SAAW0xB,SAAU,wBAAyBC,WAAat8B,EAAKJ,MAAM+K,SAAW,CAAC1Q,MAAM,OAAO2E,OAAO,QAAU,CAAC3E,MAAM,OAAO2E,OAAO,OAAOinH,aAAa,OAASrpF,QAAO,aAAgBK,WAAY,oBAAqB7e,YAAc,SAAArQ,GAAC,OAAI3N,EAAKwlH,kBAAkB73G,EAAE,YAI7S+3G,OAMVI,aAAe,WAEb,OAAI9lH,EAAKmK,MAAM86G,oBACN,KAIP9lH,EAAAC,EAAAC,cAAC8hC,GAAUnF,OAAX,KACMh8B,EAAKmK,MAAM81G,eAeX9gH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqf,UAAW,CAACC,KAAO/nB,eAAe+nB,KAAO9nB,OACzCinB,QAAS/d,EAAK0+B,WACd1yB,KAAM,SACN/M,aAAc,EACdw9B,cAAe,OACfluB,WAAY,EACZ5P,SAAU,CAAC,EAAE,GACbymB,GAAI,OACJtE,GAAI,CAAC,EAAE,IATT,QAdA3hB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqf,UAAW,CAACC,KAAO/nB,eAAe+nB,KAAO9nB,OACzCinB,QAAU,SAAApQ,GAAC,OAAI3N,EAAKwlH,kBAAkB73G,EAAE,iBACxC3B,KAAM,SACN/M,aAAc,EACdw9B,cAAe,OACfluB,WAAY,EACZ5P,SAAU,CAAC,EAAE,GACbymB,GAAI,OACJtE,GAAI,CAAC,EAAE,IATT,kGApSJnhB,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,wCAmU9C,OACET,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAO4hC,OAAQvhC,KAAKC,MAAMshC,QACxB/hC,EAAAC,EAAAC,cAAC8hC,GAAD,CAAW9F,UAAW17B,KAAK6+B,aACE,IAA1B7+B,KAAKwK,MAAM46G,WACV5lH,EAAAC,EAAAC,cAACF,EAAAC,EAAM2rB,SAAP,KACGprB,KAAK8lH,qBACL9lH,KAAKmmH,gBAGR3mH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAAC0mH,GAAD,MACCpmH,KAAKmmH,yBA9VUr0F,IAAM3xB,WCoCrBkmH,8MA9CbjD,cAAgB,WACd,OACE5jH,EAAAC,EAAAC,cAACF,EAAAC,EAAM2rB,SAAP,KACE5rB,EAAAC,EAAAC,cAACC,EAAA,EAAQ+0F,GAAT,CAAYlvE,GAAI,GAAhB,4BAEAhmB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM6lB,GAAI,GAAV,kFAEqB,IAClBi+F,GAAYC,cAAZ,2CAHH,KASAlkH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKrI,GAAI,UAAWyS,EAAG,EAAG2E,QAAS,CAAC,OAAQ,UAC1ClP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMgK,WAAY,UAChBnK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKwR,SAAU,WAAY7W,MAAO,OAChCkF,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQ0M,KAAM,UAGlB7M,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMiP,WAAY,GAAlB,0CAGApP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMiP,WAAY,GAAlB,mHASV,OACEpP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAO4hC,OAAQvhC,KAAKC,MAAMshC,QACxB/hC,EAAAC,EAAAC,cAAC8hC,GAAD,CAAW9F,UAAW17B,KAAKC,MAAM4+B,YAC/Br/B,EAAAC,EAAAC,cAAC8hC,GAAUpF,KAAX,KACGp8B,KAAKojH,0BAvCmBtxF,IAAM3xB,WCmC5BmmH,8MA1CbC,iBAAmB,SAAA99D,GACjBpoD,EAAKJ,MAAM4+B,aACXx+B,EAAKJ,MAAMqhH,iBAGb8B,cAAgB,WACd,OACE5jH,EAAAC,EAAAC,cAACF,EAAAC,EAAM2rB,SAAP,KACE5rB,EAAAC,EAAAC,cAACC,EAAA,EAAQ+0F,GAAT,CAAYlvE,GAAI,GAAhB,sDAIAhmB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM6lB,GAAI,GAAV,8EAKAhmB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMiK,cAAe,CAAC,SAAU,OAAQC,eAAgB,WAAYqV,GAAI,GACtE1f,EAAAC,EAAAC,cAACC,EAAA,EAAO48B,QAAR,CAAgBne,QAAS/d,EAAKJ,MAAM4+B,WAAY1c,GAAI,CAAC,EAAG,GAAI7Q,GAAI,CAAC,EAAG,IAApE,qBAGA9R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQye,QAAS/d,EAAKkmH,kBAAtB,wFASN,OACE/mH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAO4hC,OAAQvhC,KAAKC,MAAMshC,QACxB/hC,EAAAC,EAAAC,cAAC8hC,GAAD,CAAW9F,UAAW17B,KAAKC,MAAM4+B,YAC/Br/B,EAAAC,EAAAC,cAAC8hC,GAAUpF,KAAX,KACGp8B,KAAKojH,0BAnCwBtxF,IAAM3xB,WCiRjCqmH,8MApQbh8G,MAAQ,CACNi8G,eAAe,EACfrB,YAAY,KAGdsB,gBAAkB,WAChBrmH,EAAKwL,SAAS,CACZ46G,eAAgBpmH,EAAKmK,MAAMi8G,mBAI/BjB,iBAAmB,SAAAx3G,GACjBsgD,QAAQ6K,IAAI,aAAc94D,EAAKmK,MAAM46G,YACrCp3G,EAAEinB,iBAEF50B,EAAKwL,SAAS,CACZu5G,YAAa/kH,EAAKmK,MAAM46G,sFAK1B,OACE5lH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAO4hC,OAAQvhC,KAAKC,MAAMshC,QACxB/hC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+rB,GAAI,CAAC,EAAG,GACRyN,GAAI,CAAC,EAAG,GACRzD,GAAI,CAAC,OAAQ,GACbvM,GAAI,CAAC,OAAQ,GACbgJ,SAAU,QACVxJ,SAAU,SACVxX,SAAU,YAEV3R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKwR,SAAU,YACb3R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEkK,eAAgB,WAChBsY,GAAI,CAAC,GAAI,GACTjD,GAAI,CAAC,SAAU,GACf/N,SAAU,WACVtB,IAAK,IACLG,KAAM,IACNF,MAAO,IACPxY,GAAI,QACJ8Z,OAAQ,KAER5R,EAAAC,EAAAC,cAACC,EAAA,EAAOm0B,KAAR,CACE8H,UAAQ,EACR1qB,KAAM,QACN/S,MAAO,YACPigB,QAASpe,KAAKC,MAAM4+B,gBAKI,IAA7B7+B,KAAKwK,MAAMi8G,gBACc,IAA1BzmH,KAAKwK,MAAM46G,WACT5lH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEud,MAAO,CAAEyL,SAAU,QACnB+J,UAAW,uBAEXlzB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKwhB,GAAI,CAAC,EAAG,GAAIuU,GAAI,CAAC,EAAG,GAAIvM,GAAI,CAAC,EAAG,IAGnC3pB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKgnH,aAAa,SAASvlG,GAAI,GAC7B5hB,EAAAC,EAAAC,cAACC,EAAA,EAAQ+0F,GAAT,+CAIFl1F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM2R,GAAI,GAAV,+KAG8D,IAC5D9R,EAAAC,EAAAC,cAAA,kDAAkD,IAClDF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE7F,MAAM,wCACN8sH,GAAI,IACJ/hG,KAAK,IACLzG,QAASpe,KAAKwlH,kBAJhB,+BAUFhmH,EAAAC,EAAAC,cAACC,EAAA,EAAQs2B,GAAT,yBAEAz2B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgK,WAAY,UACZ8b,GAAI,EACJnU,GAAI,CAAC,EAAG,GACR4N,GAAI,CAAC,EAAG,GACR+hB,SAAU,CAAC,OAAQ,YAEnBzhC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKoK,EAAG,CAAC,EAAG,GAAIzP,MAAO,CAAC,EAAG,KACzBkF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEiK,cAAe,SACfC,eAAgB,gBAChB5K,OAAQ,QAERO,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAQwgG,GAAT,iCACA3gG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMX,SAAS,KAAf,oKAQFQ,EAAAC,EAAAC,cAACC,EAAA,EAAO48B,QAAR,CAAgB/W,GAAI,GAClBhmB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMgK,WAAY,UAChBnK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMgN,KAAK,YAAYwV,GAAI,IAD7B,qBAON3iB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKoK,EAAG,CAAC,EAAG,GAAIzP,MAAO,CAAC,EAAG,KACzBkF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEiK,cAAe,SACfC,eAAgB,gBAChB5K,OAAQ,QAERO,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAQwgG,GAAT,sCAGA3gG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMX,SAAS,KAAf,gIAMFQ,EAAAC,EAAAC,cAACC,EAAA,EAAO48B,QAAR,CAAgB/W,GAAI,EAAGpH,QAASpe,KAAK0mH,iBACnClnH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMgK,WAAY,UAChBnK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMgN,KAAK,oBAAoBwV,GAAI,IADrC,8BAWZ3iB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwR,SAAU,WACVpB,OAAQ,IACRC,KAAM,IACNF,MAAO,IACPqR,GAAI,CAAC,EAAG,GACRuU,GAAI,EACJvM,GAAI,EACJ7xB,GAAI,SAGJkI,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM2zB,UAAW,EAAGj1B,YAAa,SACjCmB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM+1B,GAAI,EAAG7rB,eAAgB,CAAC,SAAU,aACtCrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQye,QAASpe,KAAKC,MAAM4+B,WAAYvkC,MAAO,CAAC,EAAG,SAAnD,mBAOJ,KAEH0F,KAAKwK,MAAMi8G,cACVjnH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK2R,GAAI,GACP9R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEud,MAAO,CAAEyL,SAAU,QACnB+J,UAAW,uBAEXlzB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKwhB,GAAI,CAAC,EAAG,GAAIuU,GAAI,CAAC,EAAG,GAAIvM,GAAI,CAAC,EAAG,IAEnC3pB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM6lB,GAAI,EAAG3b,eAAgB,UAC3BrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE0M,KAAM,IACN+B,MACEpO,KAAKC,MAAMuB,QAAUxB,KAAKC,MAAMuB,QAAU,gBAKhDhC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAY6lB,GAAI,EAAGhf,QAASxG,KAAKC,MAAMuB,UACvChC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM2R,GAAI,MAKd9R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwR,SAAU,WACVpB,OAAQ,IACRC,KAAM,IACNF,MAAO,IACPqR,GAAI,CAAC,EAAG,GACRuU,GAAI,EACJvM,GAAI,EACJ7xB,GAAI,SAGJkI,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM2zB,UAAW,EAAGj1B,YAAa,SACjCmB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMuf,GAAI,EAAGrV,eAAgB,CAAC,SAAU,aACtCrK,EAAAC,EAAAC,cAACC,EAAA,EAAO48B,QAAR,CACEjiC,MAAO,CAAC,EAAG,QACX8jB,QAASpe,KAAK0mH,iBAFhB,cAUJ,KAEH1mH,KAAKwK,MAAM46G,WACV5lH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK2R,GAAI,GACP9R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEud,MAAO,CAAEyL,SAAU,QACnB+J,UAAW,uBAEXlzB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKwhB,GAAI,CAAC,EAAG,GAAIuU,GAAI,CAAC,EAAG,GAAIvM,GAAI,CAAC,EAAG,IAEnC3pB,EAAAC,EAAAC,cAAC0mH,GAAD,QAIJ5mH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwR,SAAU,WACVpB,OAAQ,IACRC,KAAM,IACNF,MAAO,IACPqR,GAAI,CAAC,EAAG,GACRuU,GAAI,EACJvM,GAAI,EACJ7xB,GAAI,SAGJkI,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+1B,GAAI,EACJ7rB,eAAgB,CAAC,SAAU,YAC3BypB,UAAW,EACXj1B,YAAa,QAEbmB,EAAAC,EAAAC,cAACC,EAAA,EAAO48B,QAAR,CACEjiC,MAAO,CAAC,EAAG,QACX8jB,QAASpe,KAAKwlH,kBAFhB,cAUJ,cA9Pc1zF,IAAM3xB,WCmDnB0mH,oLArDX,OACErnH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAConH,GAAD,CACEjoF,WAAY7+B,KAAKC,MAAMixC,OAAOvQ,QAAQomF,wBACtCxlF,OAAQvhC,KAAKC,MAAMixC,OAAOhlC,KAAK86G,yBAC/B90F,YAAalyB,KAAKC,MAAMiyB,cAG1B1yB,EAAAC,EAAAC,cAACunH,GAAD,CACEpoF,WAAY7+B,KAAKC,MAAMixC,OAAOvQ,QAAQumF,mBACtC3lF,OAAQvhC,KAAKC,MAAMixC,OAAOhlC,KAAKi7G,oBAC/Bj1F,YAAalyB,KAAKC,MAAMiyB,cAG1B1yB,EAAAC,EAAAC,cAAC0nH,GAAD,CACEvoF,WAAY7+B,KAAKC,MAAMixC,OAAOvQ,QAAQ0mF,uBACtC9lF,OAAQvhC,KAAKC,MAAMixC,OAAOhlC,KAAKo7G,wBAC/BvqE,QAAS/8C,KAAKC,MAAM88C,UAGtBv9C,EAAAC,EAAAC,cAAC6nH,GAAD,CACEv8G,SAAUhL,KAAKC,MAAM+K,SACrBmtG,aAAcn4G,KAAKC,MAAMk4G,aACzBv4C,eAAgB5/D,KAAKC,MAAM88C,QAAQ+lE,QACnC0E,gBAAiBxnH,KAAKC,MAAMunH,gBAC5B3oF,WAAY7+B,KAAKC,MAAMixC,OAAOvQ,QAAQ8mF,qBACtClmF,OAASvhC,KAAKC,MAAMixC,OAAOhlC,KAAKw7G,wBAA0B1nH,KAAKC,MAAM0nH,mBAGvEnoH,EAAAC,EAAAC,cAACkoH,GAAD,CACE/oF,WAAY7+B,KAAKC,MAAMixC,OAAOvQ,QAAQknF,4BACtCtmF,OAAQvhC,KAAKC,MAAMixC,OAAOhlC,KAAK47G,yBAC/BloD,eAAgB5/D,KAAKC,MAAM88C,QAAQ+lE,UAErCtjH,EAAAC,EAAAC,cAACqoH,GAAD,CACElpF,WACE7+B,KAAKC,MAAMixC,OAAOvQ,QAAQqnF,iCAE5BzmF,OAAQvhC,KAAKC,MAAMixC,OAAOhlC,KAAK+7G,oBAC/B3G,YAAathH,KAAKC,MAAMqhH,cAG1B9hH,EAAAC,EAAAC,cAACwoH,GAAD,CACErpF,WAAY7+B,KAAKC,MAAMixC,OAAOvQ,QAAQwnF,mBACtC5mF,OAAQvhC,KAAKC,MAAMixC,OAAOhlC,KAAKk8G,oBAC/BxoD,eAAgB5/D,KAAKC,MAAM88C,QAAQ+lE,QACnCthH,QAASxB,KAAKC,MAAMuB,kBAhDIswB,IAAM3xB,WC0EzBkoH,8MAzEb5nH,cAAgB,gFAEVT,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,oDAK9CD,KAAKgJ,wDAILhJ,KAAKgJ,yDAILhJ,KAAKgJ,uFAGUgF,sEACfA,EAAEinB,iBAEGj1B,KAAKC,MAAMuB,wCACRxB,KAAKC,MAAMm4G,QAAQkQ,uBAAuB,CAAC,kBACjDtoH,KAAKC,MAAMk4G,aAAa,SAAS,aAEnCn4G,KAAKC,MAAMixC,OAAOvQ,QAAQ4nF,gKAGnB,IAAAt/G,EAAAjJ,KAEDk3G,EAAiBl3G,KAAKS,cAAcugE,oBACpCwnD,EAAYtR,GAAmD,WAAjCA,EAAe5mG,eAAkF,kBAA3CtQ,KAAKC,MAAMixC,OAAOhlC,KAAKu8G,iBAAgCzoH,KAAKC,MAAMixC,OAAOhlC,KAAKu8G,gBAAgBn4G,cAAcskB,SAAS,UAE/M,OACEp1B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAO4hC,OAAQvhC,KAAKC,MAAMshC,QACxB/hC,EAAAC,EAAAC,cAAC8hC,GAAD,CAAW9F,UAAY,SAAA1tB,GAAC,OAAI/E,EAAK41B,WAAW7wB,KAC1CxO,EAAAC,EAAAC,cAAC8hC,GAAUzF,OAAX,CAAkBjiC,MAAQ0uH,EAAW,eAAH,mBAAyCt3G,KAAM,uBACjF1R,EAAAC,EAAAC,cAAC8hC,GAAUpF,KAAX,KACE58B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM6lB,GAAI,EAAGlrB,MAAO,EAAGsP,cAAe,SAAU6b,GAAI,QAClDjmB,EAAAC,EAAAC,cAACC,EAAA,EAAKoK,EAAN,CAAQ5L,MAAO,YAAakT,UAAW,UAAvC,iEACkEm3G,EAAW,SAAW,UADxF,IACoGhpH,EAAAC,EAAAC,cAAA,WAClGF,EAAAC,EAAAC,cAACC,EAAA,EAAKwlC,KAAN,CAAWhnC,MAAO,MAAOyQ,WAAY,GAArC,IAA0C5O,KAAKC,MAAMixC,OAAOhlC,KAAKu8G,gBAAjE,KAA8FjpH,EAAAC,EAAAC,cAAA,WAE5F8oH,EACEhpH,EAAAC,EAAAC,cAACC,EAAA,EAAKwlC,KAAN,sCACgC3lC,EAAAC,EAAAC,cAAA,2BADhC,QAC+DF,EAAAC,EAAAC,cAAA,0BAD/D,0BAC+GF,EAAAC,EAAAC,cAAA,+BAD/G,QACkJF,EAAAC,EAAAC,cAAA,iCADlJ,uCACsNF,EAAAC,EAAAC,cAAA,YAGpN,0DAIVF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM2R,GAAI,EAAG1H,cAAe,SAAUD,WAAY,SAAUE,eAAgB,UAC1ErK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEL,aAAc,EACdkmB,GAAI,EACJC,GAAI,CAAC,EAAG,GACRpZ,KAAMrM,KAAKC,MAAM+K,SAAW,QAAU,SACtCoT,QAAO,eAAA2L,EAAAnqB,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAG,SAAAgB,EAAOgM,GAAP,OAAAjN,EAAAtB,EAAA0B,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,cAAAa,EAAAb,KAAA,EAAqB2H,EAAK41B,WAAW7wB,GAArC,wBAAA7L,EAAAN,SAAAG,EAAAhC,SAAH,gBAAAsC,GAAA,OAAAynB,EAAAxnB,MAAAvC,KAAAwC,YAAA,IALT,qBA3DqBsvB,IAAM3xB,WC0E1BuoH,8MAtEbjoH,cAAgB,gFAEVT,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,oDAK9CD,KAAKgJ,wDAILhJ,KAAKgJ,yDAILhJ,KAAKgJ,uFAGUgF,mEACfA,EAAEinB,iBACFj1B,KAAKC,MAAMixC,OAAOvQ,QAAQgoF,iKAGnB,IAAA1/G,EAAAjJ,KAED4oH,EAAmE,kBAA5C5oH,KAAKC,MAAMixC,OAAOhlC,KAAK28G,kBAAiC7oH,KAAKC,MAAMixC,OAAOhlC,KAAK28G,iBAAiBv4G,cAAcskB,SAAS,UAC9Ik0F,EAAmE,kBAA5C9oH,KAAKC,MAAMixC,OAAOhlC,KAAK28G,kBAAiC7oH,KAAKC,MAAMixC,OAAOhlC,KAAK28G,iBAAiBv4G,cAAcskB,SAAS,8BAEpJ,OACEp1B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAO4hC,OAAQvhC,KAAKC,MAAMshC,QACxB/hC,EAAAC,EAAAC,cAAC8hC,GAAD,CAAW9F,UAAY,SAAA1tB,GAAC,OAAI/E,EAAK41B,WAAW7wB,KAC1CxO,EAAAC,EAAAC,cAAC8hC,GAAUzF,OAAX,CAAkBjiC,MAAQ,oBAAsBoX,KAAM,uBACtD1R,EAAAC,EAAAC,cAAC8hC,GAAUpF,KAAX,KACE58B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM6lB,GAAI,EAAGlrB,MAAO,EAAGsP,cAAe,SAAU6b,GAAI,QAClDjmB,EAAAC,EAAAC,cAACC,EAAA,EAAKoK,EAAN,CAAQ5L,MAAO,YAAakT,UAAW,UAAvC,kEACiE7R,EAAAC,EAAAC,cAAA,WAC/DF,EAAAC,EAAAC,cAACC,EAAA,EAAKwlC,KAAN,CAAWhnC,MAAO,MAAOyQ,WAAY,GAArC,IAA0C5O,KAAKC,MAAMixC,OAAOhlC,KAAK28G,iBAAjE,KAA+FrpH,EAAAC,EAAAC,cAAA,WAE7FkpH,EACEppH,EAAAC,EAAAC,cAACC,EAAA,EAAKwlC,KAAN,CACEnmC,SAAU,GAEVQ,EAAAC,EAAAC,cAAA,WAHF,iCAGsCF,EAAAC,EAAAC,cAAA,2BAHtC,QAGqEF,EAAAC,EAAAC,cAAA,0BAHrE,0BAGqHF,EAAAC,EAAAC,cAAA,+BAHrH,QAGwJF,EAAAC,EAAAC,cAAA,iCAHxJ,uCAG4NF,EAAAC,EAAAC,cAAA,WAH5N,sEAIqEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMX,SAAU,EAAGb,MAAO,OAAQ8oB,WAAY,OAAQnnB,OAAQ,SAAUC,IAAK,+BAAgC8kB,KAAM,iHAAnH,qBAJrE,KAMEikG,EAAgB,8FAAgG,0DAI1HtpH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM2R,GAAI,EAAG1H,cAAe,SAAUD,WAAY,SAAUE,eAAgB,UAC1ErK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEL,aAAc,EACdkmB,GAAI,EACJC,GAAI,CAAC,EAAG,GACRpZ,KAAMrM,KAAKC,MAAM+K,SAAW,QAAU,SACtCoT,QAAO,eAAA2L,EAAAnqB,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAG,SAAAgB,EAAOgM,GAAP,OAAAjN,EAAAtB,EAAA0B,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,cAAAa,EAAAb,KAAA,EAAqB2H,EAAK41B,WAAW7wB,GAArC,wBAAA7L,EAAAN,SAAAG,EAAAhC,SAAH,gBAAAsC,GAAA,OAAAynB,EAAAxnB,MAAAvC,KAAAwC,YAAA,IALT,qBAxDsBsvB,IAAM3xB,WCG1C6sD,EAAQ,MAAUqR,SAClB,IAAM0qD,GAAa76E,mCAEb86E,GAA2Bl3F,IAAMm3F,cAAc,CACnD/2E,UAAW,GACX1wC,QAAS,GACT0nH,eAAgB,GAChBC,oBAAqB,GACrBC,kBAAmB,GACnB5oH,YAAa,GACbgiC,KAAM,GACN6mF,WAAY,GACZle,SAAU,aACVtiE,SAAU,GACV+V,SAAU,GACVwiB,aAAc,aACdnkE,aAAc,GACdqsH,eAAgB,aAChBpkG,aAAc,aACdo8F,YAAa,aACbC,oBAAqB,aACrBhjF,kBAAmB,aACnBoK,iBAAkB,aAClB4gF,qBAAsB,aACtB5B,iBAAkB,GAClB6B,yBAA0B,GAC1BC,iBAAkB,aAClBjC,gBAAiB,aACjBnG,oBAAoB,EACpBzlG,sBAAsB,EACtB8tG,0BAA0B,EAC1B58E,0BAA2B,aAC3BiQ,QAAS,CACP31B,SAAU,GACV07F,QAAS,GACTrjB,iBAAkB,KAClBkqB,aAAc,cAEhBz4E,OAAQ,CACNhlC,KAAM,CACJ86G,yBAA0B,GAC1BG,oBAAqB,GACrBO,sBAAuB,GACvBI,yBAA0B,GAC1BG,oBAAqB,GACrBuB,yBAA0B,GAC1BI,uBAAwB,GACxBtC,wBAAyB,GACzBuC,iCAAkC,GAClCzB,oBAAqB,GACrBK,gBAAiB,IAEnB9nF,QAAS,CACPmpF,uBAAwB,aACxB/C,wBAAyB,aACzBc,4BAA6B,aAC7BkC,2BAA4B,aAC5B/B,iCAAkC,aAClCgC,gCAAiC,aACjCC,iCAAkC,aAClCC,gCAAiC,aACjC3B,0BAA2B,aAC3B4B,yBAA0B,aAC1BC,0BAA2B,aAC3BzB,2BAA4B,aAC5BtB,uBAAwB,aACxBgD,sBAAuB,aACvBlC,mBAAoB,aACpBmC,kBAAmB,eAGvBp4F,YAAa,CACXhmB,KAAM,CACJjP,aAAc,IAEhBstH,KAAM,GACN5pF,QAAS,MAIT6pF,GAAmB,KACnBC,IAA0B,EAExBC,8MAGJjgH,oBAAqB,IAGrBhK,cAAgB,OAEhBuI,UAAY,WACV,IAAM/I,EAAQL,OAAOC,OAAO,GAAGQ,EAAKJ,OACpCA,EAAMiyC,UAAY7xC,EAAKmK,MAAM0nC,UACzB7xC,EAAKI,eACPR,EAAMuB,QAAUnB,EAAKmK,MAAMhJ,QAC3BnB,EAAKI,cAAcC,SAAST,KAE5BA,EAAMuB,QAAUnB,EAAKmK,MAAMhJ,QAC3BnB,EAAKI,cAAgB,IAAIE,GAAcV,OAY3CmsB,uCAAoB,SAAAnrB,IAAA,OAAAF,EAAAtB,EAAA0B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAClBjB,EAAK+gE,eAGL/gE,EAAK8qG,WAKLzgG,OAAOigH,gBAAkB,SAAC/pF,GACxB,IAAM1O,EAAc7xB,EAAKuqH,oBAGzB,OAFA14F,EAAY0O,OAASA,EACrBvgC,EAAKwqH,eAAe34F,GACbA,GAGTxnB,OAAOogH,kBAAoB,SAAC54F,EAAYvF,EAAKhvB,EAAO4rC,GAOlD,OALArX,EAAY9oB,KAAO,WACnB8oB,EAAYv0B,OAASA,EACrBu0B,EAAYqX,OAASA,EACrBrX,EAAY2V,gBAAkBlb,EAC9BtsB,EAAKyqH,kBAAkB54F,GAChBA,GAvBS,wBAAA9wB,EAAAS,SAAAZ,EAAAjB,WA6BpB2nG,yDAAqB,SAAA3lG,EAAO+I,EAAWqC,GAAlB,IAAA29G,EAAAC,EAAAxvG,EAAAyvG,EAAA7S,EAAA,OAAAr3G,EAAAtB,EAAA0B,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,UAEnBjB,EAAK2I,YAID+B,EAAUu/C,gBAAkBjqD,EAAKJ,MAAMqqD,eAAiBjqD,EAAKJ,MAAMqqD,cACrEjqD,EAAK8qG,WACKpgG,EAAUqtG,UAAY/3G,EAAKJ,MAAMm4G,QACvC/3G,EAAKJ,MAAMm4G,QAAQz2E,iBAAiB0mC,OAAShoE,EAAKJ,MAAMm4G,QAAQz2E,MAAMvlB,QAAQtZ,QAC1EioH,EAAe1qH,EAAKJ,MAAMm4G,QAAQz2E,MAAMvlB,QACxC4uG,EAAoD,oCAAjBD,GAAuE,sBAAjBA,EAEtE,kBAArBP,IAAwCQ,GAE1C3qH,EAAKJ,MAAMk4G,aAAa,SAAS,MAIjCqS,GAAmB,MAETQ,EAGV3qH,EAAK8qG,WAFL9qG,EAAK8pH,yBAAyB,KAAKY,IAK5B1qH,EAAKJ,MAAMm4G,QAAQlgH,QAA6C,kBAAnCmI,EAAKJ,MAAMm4G,QAAQ9tD,eAA8D,kBAA3BjqD,EAAKJ,MAAMqqD,eACvGjqD,EAAK8qG,YAEI9qG,EAAKJ,MAAMm4G,QAAQ9tD,eAAiBjqD,EAAKJ,MAAMm4G,QAAQ9tD,gBAAkBjqD,EAAKJ,MAAMqqD,eAAkBv/C,EAAUmgH,gBAAkB7qH,EAAKJ,MAAMirH,gBACxJ7qH,EAAK8qG,WAGD3vF,EAAezQ,EAAUsC,gBAAkBhN,EAAKJ,MAAMoN,cAEtD49G,EAA6BlgH,EAAU7D,qBAAuB7G,EAAKJ,MAAMiH,qBAAuB0Y,KAAKC,UAAUjgB,OAAOwH,KAAK2D,EAAU7D,wBAA0B0Y,KAAKC,UAAUjgB,OAAOwH,KAAK/G,EAAKJ,MAAMiH,sBAGvMsU,GACFnb,EAAKwL,SAAS,CACZmiB,cAAe,OAKfjjB,EAAU2+G,2BAA6BrpH,EAAKJ,MAAMypH,0BACpDrpH,EAAKwL,SAAS,CACZ69G,yBAAyBrpH,EAAKJ,MAAMypH,2BAIpCxlF,gBACIk0E,EAAUx4F,KAAKwkB,MAAMF,aAAaC,QAAQ,cAC/B9jC,EAAKJ,MAAMm4G,QAAQlgH,SAAWkgH,EAAQlgH,QAAUmI,EAAKJ,MAAMm4G,QAAQ9tD,gBAAkB8tD,EAAQ9tD,eAC5GjqD,EAAKI,cAAc4jC,gBAAgB,UAAUzkB,KAAKC,UAAU,CAAC3nB,OAAOmI,EAAKJ,MAAMm4G,QAAQlgH,OAAOoyD,cAAcjqD,EAAKJ,MAAMm4G,QAAQ9tD,mBAI/H9uC,IAA8CyvG,EA3D/B,CAAA9oH,EAAAb,KAAA,gBAAAa,EAAAb,KAAA,GA4DXjB,EAAKkhH,sBA5DM,yBAAAp/G,EAAAN,SAAAG,EAAAhC,mEAiErBmrG,8BAAW,SAAAjoG,IAAA,IAAAonD,EAAA8tD,EAAAiR,EAAA7mF,EAAA2oF,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA/iD,EAAAquC,EAAA2U,EAAAhjF,EAAA0oB,EAAA/uD,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAiC,GAAA,cAAAA,EAAA/B,KAAA+B,EAAA9B,MAAA,UAAOgpD,EAAPiH,EAAAzuD,OAAA,QAAAC,IAAAwuD,EAAA,GAAAA,EAAA,GAAqB,KAG1B7mD,OAAOggD,UAAYhgD,OAAOggD,SAASohE,6BACrCphH,OAAOggD,SAASohE,4BAA6B,GAGzC1T,EAAU/3G,EAAKJ,MAAMm4G,QAErBiR,EAAa,IAAI0C,IAAK,IAAIA,IAAKttF,UAAUutF,aAAar7G,GAAcosC,QAAQte,UAAU8e,OAAO5sC,GAAcosC,QAAQK,iBAAiB2rE,KAEtIvmF,EAAO41E,EAAQ6T,QAGdvhH,OAAO6/C,oBAAsB6tD,EAAQ9tD,gBAAkB5/C,OAAO6/C,mBAAmBD,gBACpF5/C,OAAO6/C,mBAAqB6tD,GAI1B9tD,EACFkgE,GAAmB,KAEnBlgE,EAAgBjqD,EAAKJ,MAAMqqD,cAMzB8tD,GAA6B,WAAlB9tD,GAA8BA,IAAkB8tD,EAAQ9tD,gBACjE9nB,GAAgD,oBAAjCA,EAAKqoC,gBAAgBurB,QACtC5zD,EAAKqoC,gBAAgBurB,UACZgiB,EAAQ3tD,WAAkD,oBAA9B2tD,EAAQ3tD,UAAU2rC,SACvDgiB,EAAQ3tD,UAAU2rC,UAEpB5zD,EAAO,KACPgoF,GAAmB,MAGfW,EAAwB/S,EAAQ9tD,eAAiB8tD,EAAQ9tD,gBAAkBA,GAAqC,WAAlBA,GAA8BA,IAAkBkgE,GAI/IpS,EAAQlgH,SAAUizH,EA1Cd,CAAA/nH,EAAA9B,KAAA,aA4CHgpD,IAAiB6gE,EA5Cd,CAAA/nH,EAAA9B,KAAA,gBA8CLkpH,GAAmBlgE,EA9CdlnD,EAAA9B,KAAA,GA+CC82G,EAAQD,aAAa7tD,GA/CtB,eAAAlnD,EAAAxB,OAAA,SAiDE4gC,GAjDF,WA4GL4oF,EAAW,KACXC,EAAe,KAEd7oF,EAYH6oF,EAAe7oF,EAAKqoC,gBAXhBngE,OAAOggD,UACTrqD,EAAKI,cAAc8hC,UAAU,+BAC7B8oF,EAAe3gH,OAAOggD,UACbhgD,OAAO83B,MAChBniC,EAAKI,cAAc8hC,UAAU,uCAC7B8oF,EAAe3gH,OAAO83B,OAEtBniC,EAAKI,cAAc8hC,UAAU,yDAC7B6oF,EAAWz6G,GAAcosC,QAAQte,UAAU8e,OAAO5sC,GAAcosC,QAAQK,iBAAiB2rE,IAMzFuC,GAAgB,EAEE,WAAlBhhE,IAA8B+gE,GAA+C,oBAAxBA,EAAap1B,OAhI7D,CAAA7yF,EAAA9B,KAAA,gBAAA8B,EAAA/B,KAAA,GAAA+B,EAAA9B,KAAA,GAkIC+pH,EAAap1B,SAlId,QAAA7yF,EAAA9B,KAAA,iBAAA8B,EAAA/B,KAAA,GAAA+B,EAAA6B,GAAA7B,EAAA,UAoILioH,EAAe,KACfD,EAAWz6G,GAAcosC,QAAQte,UAAU8e,OAAO5sC,GAAcosC,QAAQK,iBAAiB2rE,GACzFuC,GAAgB,EAtIX,eA0IHC,EAAe56G,GAAcosC,QAAQte,UAAU2f,WAEjCmtE,EAAa/mH,UAA8F,IAAnF+mH,EAAa5tE,kBAAkB/lC,QAAQjH,GAAcosC,QAAQK,kBACjGouE,EAA6BD,EAAahiF,OAC1CkiF,EAAqBvnF,cAAgBA,aAAaC,QAAQ,kBAAoBD,aAAaC,QAAQ,kBAAoB+nF,cAAW5zB,OACxIkzB,EAA2BhtE,OAASitE,EAEhCJ,EACFG,EAA2BW,mBAAqBd,EACvCD,IACTI,EAA2BjyB,KAAO6xB,GAG9BM,EAAuB,IAAIU,wBAAqBZ,GACtDhpF,EAAO,IAAIupF,IAAKL,IAGZL,EACF7oF,EAAO,IAAIupF,IAAKV,GAEPD,IACT5oF,EAAO,IAAIupF,IAAK,IAAIA,IAAKttF,UAAUutF,aAAaZ,IAC1B,WAAlB9gE,GACFjqD,EAAKJ,MAAMk4G,aAAa,SAAS,OAKjCwT,EAtKG,eAAAl5G,EAAA7S,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAsKY,SAAA0B,IAAA,IAAAmmC,EAAA,OAAA9nC,EAAAtB,EAAA0B,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,cAEnBoJ,OAAO2hH,aAAehsH,EAAKmK,MAAMg4B,KAGY,oBAAlCniC,EAAKJ,MAAMqsH,qBACpBjsH,EAAKJ,MAAMqsH,qBACXjsH,EAAKJ,MAAMssH,sBAAsB,OAPhB1pH,EAAAxB,KAAA,EAAAwB,EAAAvB,KAAA,EAYXjB,EAAKspH,eAZM,WAabtpH,EAAKmK,MAAMuyC,QAAQ0iD,iBAbN,CAAA58F,EAAAvB,KAAA,YAeVjB,EAAKmK,MAAMoR,qBAfD,CAAA/Y,EAAAvB,KAAA,eAAAuB,EAAAvB,KAAA,EAgBPjB,EAAKkhH,sBAhBE,WAmBXnJ,EAAQ52G,QAnBG,CAAAqB,EAAAvB,KAAA,aAsBTjB,EAAKmK,MAAMq+B,SAtBF,CAAAhmC,EAAAvB,KAAA,YAuBLunC,EAAWxoC,EAAKmK,MAAMq+B,UACPl4B,GAAcosC,QAAQte,UAAUoK,SACpC6U,aAAgB7U,EAAS2jF,SAAY/B,GAzB3C,CAAA5nH,EAAAvB,KAAA,gBA0BTmpH,IAA0B,EAC1B5hF,EAASysD,MAAM8iB,EAAQ52G,QAAS,SAACmgC,EAAOopC,GAGtC,GAAIppC,EACF,OAAOthC,EAAKwL,SAAS,CACnBg9B,UAAS,GACT,WACAxoC,EAAKihH,YAAYlJ,EAAQ52G,WAI7BipH,IAA0B,EAEtB1/C,EAASljC,gBACXxnC,EAAKihH,YAAYlJ,EAAQ52G,SACjBupE,EAAS0hD,cACjBpsH,EAAKihH,YAAYlJ,EAAQ52G,WA3CpBqB,EAAAjB,OAAA,UA8CF,GA9CE,eAAAiB,EAAAvB,KAAA,GAkDPjB,EAAKihH,YAAYlJ,EAAQ52G,SAlDlB,QAAAqB,EAAAvB,KAAA,wBAAAuB,EAAAvB,KAAA,GAoDPjB,EAAKwL,SAAS,CAClBw1G,oBAAoB,EACpB7/G,QAASnB,EAAKJ,MAAMirH,gBAtDT,QAAAroH,EAAAvB,KAAA,iBAAAuB,EAAAxB,KAAA,GAAAwB,EAAAoC,GAAApC,EAAA,SA4DjBxC,EAAK8pH,yBAAyB,KAAKtnH,EAAAoC,GAAMmX,SA5DxB,yBAAAvZ,EAAAhB,SAAAa,EAAA1C,KAAA,aAtKZ,yBAAAyS,EAAAlQ,MAAAvC,KAAAwC,YAAA,GAuOHopH,EAAeppF,EACfqmC,EAAel4D,GAAcosC,QAAQte,UAAUoK,SAC/CquE,EAAiB72G,EAAKI,cAAcugE,sBAEpB,WAAlB1W,GAA8Bue,GAAgBA,EAAarkE,SAAWqkE,EAAalrB,kBAAkB/oB,SAASjkB,GAAcosC,QAAQK,mBAAsB85D,GAAmBruC,EAAajrB,gBAAgBhpB,SAASsiF,EAAe5mG,eA0ChOkyB,IAASniC,EAAKmK,MAAMg4B,KACtBniC,EAAKwL,SAAS,CACZ22B,OACA6mF,cACCsC,IACMvT,EAAQ52G,SAAW8pH,IAC5BK,IA9C0B,OAAxBtrH,EAAKmK,MAAMq+B,WACPgjF,EAAuBR,GAA8BD,GACrDviF,EAAW,IAAI6jF,KAASb,EAAqBhjD,EAAat/B,UAEpB,oBAArBV,EAAS8jF,SAC9BnqF,EAAO,IAAIupF,IAAKljF,GAChBA,EAAS8jF,QAAQ9jF,EAAS+jF,MAAO,WAC/B,GAAIvsH,EAAKoK,qBAA8C,IAAxBpK,EAAKmK,MAAMq+B,UAAsBxoC,EAAKmK,MAAMq+B,WAAaA,EACtF,OAAO,EAGT,IAAM59B,EAAW,CACfu3B,OACAqG,WACAwgF,cAEE7mF,IAASniC,EAAKmK,MAAMg4B,MACtBniC,EAAKwL,SAASZ,EAAU0gH,KAEzBgB,QAAQ9jF,EAASgkF,MAAO,SAAClrF,EAAOvlB,GAEjComB,EAAOopF,GAEqB,IAAxBvrH,EAAKmK,MAAMq+B,UACbxoC,EAAKwL,SAAS,CACZ22B,OACA6mF,aACAxgF,UAAS,GACR8iF,MAIPtrH,EAAKwL,SAAS,CACZ22B,OACA6mF,aACAxgF,UAAS,GACR8iF,IAjRAvoH,EAAAxB,OAAA,SA+RF4gC,GA/RE,yBAAAp/B,EAAAvB,SAAAqB,EAAAlD,KAAA,gBAkSXklB,mDAAe,SAAAzhB,EAAOkJ,EAAMnG,EAASye,GAAtB,IAAA6nG,EAAAxoH,EAAA9B,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,cAA2BwrH,EAA3BxoH,EAAAxB,OAAA,QAAAC,IAAAuB,EAAA,IAAAA,EAAA,GACbjE,EAAKI,cAAc8hC,UAAnB,kBAAA99B,OAA+CkI,IADlCpI,EAAAjD,KAAA,EAEAjB,EAAKmgE,eAAe7zD,EAAMnG,EAASye,EAAK6nG,GAFxC,cAAAvoH,EAAA3C,OAAA,SAAA2C,EAAA9C,MAAA,wBAAA8C,EAAA1C,SAAA4B,EAAAzD,qEAKfwgE,qDAAiB,SAAA56D,EAAO+G,EAAMnG,EAASye,GAAtB,IAAA6nG,EAAAzB,EAAAlvE,EAAAsV,EAAAjvD,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAA4E,GAAA,cAAAA,EAAA1E,KAAA0E,EAAAzE,MAAA,UAA2BwrH,EAA3Br7D,EAAA3uD,OAAA,QAAAC,IAAA0uD,EAAA,IAAAA,EAAA,GACfpxD,EAAKI,cAAc8hC,UAAnB,qBAAA99B,OAAkDkI,EAAlD,aAAAlI,OAAkE+B,IAE5D6kH,EAAeyB,GAAqBzsH,EAAKmK,MAAM6+G,WAAahpH,EAAKmK,MAAM6+G,WAAahpH,EAAKmK,MAAMg4B,KAHtF,CAAAz8B,EAAAzE,KAAA,eAAAyE,EAAAnE,OAAA,SAMN,MANM,cAAAmE,EAAA1E,KAAA,EAWP86C,EAAW,IAAIkvE,EAAa5oF,IAAIm+B,SAAS37C,EAAKze,GACpDnG,EAAKwL,SAAS,SAAArB,GAAK,OAAA5K,OAAAsL,EAAA,EAAAtL,CAAA,GACd4K,EADc,CAEjB0nC,UAAUtyC,OAAAkhC,EAAA,EAAAlhC,CAAK4K,EAAM0nC,WAAZztC,OAAA,CAAuB,CAACkI,OAAMwvC,kBAd5Bp2C,EAAAnE,OAAA,SAgBN,CAAC+K,OAAMwvC,aAhBD,QAAAp2C,EAAA1E,KAAA,GAAA0E,EAAAd,GAAAc,EAAA,SAkBb1F,EAAKI,cAAcytD,eAAe,6BAA6BvhD,EAAKnG,EAApET,EAAAd,IAlBa,eAAAc,EAAAnE,OAAA,SAqBR,MArBQ,yBAAAmE,EAAAlE,SAAA+D,EAAA5F,KAAA,yEAwBjBohE,aAAe,WAEb,GAAI/gE,EAAKmK,MAAMo0C,SACb,OAAOv+C,EAAKmK,MAAMo0C,SAGpB,IAAMmuE,EAAep8G,GAAcosC,QAAQte,UAAUmgB,SACjDA,EAAW,KAEf,GAAImuE,GAAgBA,EAAavoH,UAA8F,IAAnFuoH,EAAapvE,kBAAkB/lC,QAAQjH,GAAcosC,QAAQK,iBAAyB,CAChI,IAAM4vE,EAAiBD,EAAaxjF,OACpCyjF,EAAejwE,QAAUgwE,EAAaluE,WAAWx+C,EAAKmK,MAAMuyC,QAAQ+lE,QAAQpyG,GAAGC,GAAcosC,QAAQC,mBACrG4B,EAAW,IAAIquE,KAASD,GAS1B,OANAtiH,OAAOk0C,SAAWA,EAElBv+C,EAAKwL,SAAS,CACZ+yC,aAGKA,KAGT0iE,iCAAc,SAAAp7G,IAAA,IAAA1E,EAAA0rH,EAAAhW,EAAAt4D,EAAAuuE,EAAAC,EAAAC,EAAAx7D,EAAArvD,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAmF,GAAA,cAAAA,EAAAjF,KAAAiF,EAAAhF,MAAA,UAAOE,EAAPqwD,EAAA/uD,OAAA,QAAAC,IAAA8uD,EAAA,IAAAA,EAAA,GAEZxxD,EAAKI,cAAc8hC,UAAU,cAAc/gC,IAEvCnB,EAAKJ,MAAMirH,cAJH,CAAA5kH,EAAAhF,KAAA,eAOVjB,EAAKwL,SAAS,CACZw1G,oBAAoB,EACpB7/G,QAASnB,EAAKJ,MAAMirH,gBAItB7qH,EAAKk+B,oBAbKj4B,EAAA1E,OAAA,UAeH,GAfG,UAAA0E,EAAAjF,KAAA,EAmBLG,EAnBK,CAAA8E,EAAAhF,KAAA,gBAAAgF,EAAAhF,KAAA,GAoBcjB,EAAKmK,MAAMg4B,KAAKC,IAAIyzD,cApBlC,SAoBFg3B,EApBE5mH,EAAA7E,OAqBOyrH,EAAQpqH,SACrBtB,EAAU0rH,EAAQ,IAtBZ,WA0BL1rH,GAAWnB,EAAKmK,MAAMhJ,UAAYA,EA1B7B,CAAA8E,EAAAhF,KAAA,gBA2BRjB,EAAKwL,SAAS,CACZw1G,oBAAoB,IA5Bd/6G,EAAA1E,OAAA,UA8BD,GA9BC,YAkCNJ,EAlCM,CAAA8E,EAAAhF,KAAA,YAoCF41G,EAAiBhzE,cAAgBA,aAAaC,QAAQ,kBAAoBD,aAAaC,QAAQ,kBAAoB,WAGnHya,EAAWv+C,EAAK+gE,gBAvCd,CAAA96D,EAAAhF,KAAA,gBAAAgF,EAAAhF,KAAA,GA2CsBs9C,EAASuuE,gBA3C/B,SA2CAA,EA3CA7mH,EAAA7E,OA6Ce0rH,EAAcrqH,QAAU4H,OAAO4iH,SAE9CF,EAAqB,GACrBlpF,eACFkpF,EAAqBlpF,aAAaC,QAAQ,uBAAyBvkB,KAAKwkB,MAAMF,aAAaC,QAAQ,uBAAyBvkB,KAAKwkB,MAAMF,aAAaC,QAAQ,uBAAyB,IAGvLgpF,EAAcrjH,QAAQ,SAACkT,EAAE7M,GAEvB,IAAMo9G,EAAiBvwG,EAAErQ,MAG2B,IAAhDygH,EAAmBx1G,QAAQ21G,KAC7B7iH,OAAO4iH,OAAO78G,KAAK,CAAC,KAAM,eAAgB,CAAC,OAAQpQ,EAAKI,cAAcguD,8BAA8BzxC,EAAEu6F,YAGtG6V,EAAmB38G,KAAK88G,MAKxBrpF,cACF7jC,EAAKI,cAAc4jC,gBAAgB,qBAAqBzkB,KAAKC,UAAUutG,KAnErE,QAyER/sH,EAAKI,cAAc+iB,yBAAyB,CAC1CC,cAAe,UACfC,YAAa,YACbC,WAAYuzF,IAmMd72G,EAAKwL,SAAS,CACZrK,UAEA6/G,oBAAoB,IAItBhhH,EAAKk+B,oBAtRG,QAAAj4B,EAAAhF,KAAA,oBAAAgF,EAAAjF,KAAA,GAAAiF,EAAArB,GAAAqB,EAAA,SA8RVjG,EAAKwL,SAAS,CACZw1G,oBAAoB,IAItBhhH,EAAKI,cAAc8hC,UAAU,yCAA7Bj8B,EAAArB,MAKIqB,EAAArB,IAASqB,EAAArB,GAAMmX,SAAW9V,EAAArB,GAAMmX,QAAQwY,SAAS,yCAxS3C,CAAAtuB,EAAAhF,KAAA,gBAAAgF,EAAA1E,OAAA,kBA6SJyrH,EAAU/mH,EAAArB,cAAiBojE,MAC7BhoE,EAAKI,cAAc8+D,kBAAoB8tD,GACzCG,KAAAlnH,EAAArB,IA/SQ,yBAAAqB,EAAAzE,SAAAqE,EAAAlG,KAAA,eAwTdupH,qBAAuB,SAAA5nF,GACrB,IAAIuP,EAAMtxC,OAAAsL,EAAA,EAAAtL,CAAA,GAAQS,EAAKmK,MAAM0mC,QAC7BA,EAAOhlC,KAAK47G,0BAA2B,EACvC52E,EAAOhlC,KAAK+7G,qBAAsB,EAClC5nH,EAAKwL,SAAS,CAAEqlC,cAGlB3S,wDAAoB,SAAAj3B,EAAOmmH,GAAP,IAAAxnH,EAAAmN,EAAA81G,EAAAC,EAAAn7F,EAAA,OAAAjtB,EAAAtB,EAAA0B,KAAA,SAAAyG,GAAA,cAAAA,EAAAvG,KAAAuG,EAAAtG,MAAA,cAElBmsH,EAAiBA,EAAiBptH,EAAKI,cAAciB,MAAM+rH,GAAkB,KAF3D7lH,EAAAvG,KAAA,EAAAuG,EAAAtG,KAAA,EAM+CqD,QAAQC,IAAI,CACzEvE,EAAKmK,MAAMg4B,KAAKC,IAAI5hC,WAAWR,EAAKmK,MAAMhJ,SAC1CnB,EAAKkB,gBAAgBlB,EAAKmK,MAAMhJ,SAChCnB,EAAKsoC,qBATS,OAAA1iC,EAAA2B,EAAAnG,KAAA2R,EAAAxT,OAAAmF,EAAA,EAAAnF,CAAAqG,EAAA,GAMXijH,EANW91G,EAAA,GAMI+1G,EANJ/1G,EAAA,GAMwB4a,EANxB5a,EAAA,GAYZ81G,IAGEA,EAAenzG,WAAW6e,SAAS,OACrCs0F,EAAiB7oH,EAAKmK,MAAMg4B,KAAK4qB,MAAMK,MAAMy7D,IAI/CA,EAAiB7oH,EAAKmK,MAAMg4B,KAAK4qB,MAAMI,QACrC07D,EACA,SAGFA,EAAiB7oH,EAAKI,cAAciB,MAAMwnH,GAAgBnzG,WAE1D1V,EAAKwL,SAAS,CACZq9G,mBAGF7oH,EAAKI,cAAc8hC,UAAU,oBAAqB2mF,IAKhDC,GAEFA,EAAsB9oH,EAAKI,cAAciB,MAAMynH,GAG3CsE,GAAkBptH,EAAKmK,MAAM2+G,qBAAuB9oH,EAAKI,cAAc+mC,qBAAqBnnC,EAAKmK,MAAM2+G,oBAAoBn7F,GAAejY,aAAeozG,EAAoBpzG,aAC/KozG,EAAsBA,EAAoBrhH,KAAK2lH,IAGjDtE,EAAsB9oH,EAAKI,cAAc4C,iBAAiB8lH,EAAoBn7F,GAAejY,WAK7F1V,EAAKwL,SAALjM,OAAA2b,EAAA,EAAA3b,CAAA,CACEupH,uBADF,iBAAA1kH,OAEoBpE,EAAKJ,MAAMoN,eAAiB87G,KAIhD9oH,EAAKI,cAAc8hC,UAAU,kCAAkC4mF,GAxDjDvhH,EAAAtG,KAAA,iBAAAsG,EAAAvG,KAAA,GAAAuG,EAAA3C,GAAA2C,EAAA,SA2DhBvH,EAAKI,cAAcytD,eAAe,iCAAlCtmD,EAAA3C,IA3DgB,yBAAA2C,EAAA/F,SAAAyF,EAAAtH,KAAA,qEA+DpBuhH,yCAAsB,SAAAzoD,IAAA,IAAA5mB,EAAA//B,EAAA,OAAApR,EAAAtB,EAAA0B,KAAA,SAAA43D,GAAA,cAAAA,EAAA13D,KAAA03D,EAAAz3D,MAAA,cAEd4wC,EAAY7xC,EAAKI,cAAcG,gBAAgB,CAAC,cAFlCm4D,EAAAz3D,KAAA,EAGdjB,EAAKI,cAAc0G,aAAavH,OAAOwH,KAAK8qC,GAA5C,eAAA3qC,EAAA3H,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAuD,SAAA2F,EAAO4nD,GAAP,IAAAm/D,EAAA,OAAA3sH,EAAAtB,EAAA0B,KAAA,SAAA6F,GAAA,cAAAA,EAAA3F,KAAA2F,EAAA1F,MAAA,UAE9B,QADvBosH,EAAex7E,EAAUqc,IACd/nD,SAAyC,OAArBknH,EAAazoG,IAFS,CAAAje,EAAA1F,KAAA,eAGzDjB,EAAKI,cAAc8hC,UAAU,qCAAsCgsB,EAAcm/D,EAAalnH,SAHrCQ,EAAA1F,KAAA,EAInDjB,EAAK6kB,aAAaqpC,EAAcm/D,EAAalnH,QAASknH,EAAazoG,KAJhB,wBAAAje,EAAAnF,SAAA8E,EAAA3G,SAAvD,gBAAA65D,GAAA,OAAAtyD,EAAAhF,MAAAvC,KAAAwC,YAAA,IAHc,cAWd2P,EAAY9R,EAAKI,cAAcG,gBAAgB,CAAC,cAXlCm4D,EAAAz3D,KAAA,EAYdjB,EAAKI,cAAc0G,aAAavH,OAAOwH,KAAK+K,GAA5C,eAAA3K,EAAA5H,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAuD,SAAAyH,EAAO/E,GAAP,IAAA2Z,EAAA,OAAAtc,EAAAtB,EAAA0B,KAAA,SAAA0H,GAAA,cAAAA,EAAAxH,KAAAwH,EAAAvH,MAAA,WACrD+b,EAAiBlL,EAAUzO,IACbc,QAFuC,CAAAqE,EAAAvH,KAAA,eAAAuH,EAAAjH,OAAA,oBAM/BvB,EAAKmK,MAAM0nC,UAAUx6B,KAAK,SAAA82C,GAAC,OAAIA,EAAE7hD,OAASjJ,IANX,CAAAmF,EAAAvH,KAAA,eAQzDjB,EAAKI,cAAc8hC,UAAU,qCAAsC7+B,EAAO2Z,EAAe7W,SARhCqC,EAAAvH,KAAA,EASnDjB,EAAK6kB,aAAaxhB,EAAO2Z,EAAe7W,QAAS6W,EAAe4H,KATb,wBAAApc,EAAAhH,SAAA4G,EAAAzI,SAAvD,gBAAAi5D,GAAA,OAAAzxD,EAAAjF,MAAAvC,KAAAwC,YAAA,IAZc,WAyBhBnC,EAAKJ,MAAMiH,oBAzBK,CAAA6xD,EAAAz3D,KAAA,eAAAy3D,EAAAz3D,KAAA,EA2BZjB,EAAKI,cAAc0G,aAAavH,OAAOwH,KAAK/G,EAAKJ,MAAMiH,qBAAvD,eAAAkW,EAAAxd,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAA4E,SAAAmzD,EAAO7nB,GAAP,IAAA1lC,EAAA,OAAA7F,EAAAtB,EAAA0B,KAAA,SAAAwzD,GAAA,cAAAA,EAAAtzD,KAAAszD,EAAArzD,MAAA,cAE1EsF,EAAkBvG,EAAKJ,MAAMiH,oBAAoBolC,GAFyBqoB,EAAArzD,KAAA,EAI1EjB,EAAKI,cAAc0G,aAAavH,OAAOwH,KAAKR,GAA5C,eAAA4B,EAAA5I,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAA6D,SAAAgzD,EAAOtwD,GAAP,IAAAlD,EAAA6W,EAAA8wB,EAAA,OAAApnC,EAAAtB,EAAA0B,KAAA,SAAA+yD,GAAA,cAAAA,EAAA7yD,KAAA6yD,EAAA5yD,MAAA,UAC3Dd,EAAcoG,EAAgBlD,GAEXrD,EAAKmK,MAAM0nC,UAAUx6B,KAAK,SAAA82C,GAAC,OAAIA,EAAE7hD,OAASjJ,IAHF,CAAAwwD,EAAA5yD,KAAA,eAK/DjB,EAAKI,cAAc8hC,UAAU,qCAAqC7+B,EAAOlD,EAAYgG,SALtB0tD,EAAA5yD,KAAA,EAMzDjB,EAAK6kB,aAAaxhB,EAAOlD,EAAYgG,QAAShG,EAAYykB,KAND,UAUpC5kB,EAAKmK,MAAM0nC,UAAUx6B,KAAK,SAAA82C,GAAC,OAAIA,EAAE7hD,OAASnM,EAAYkE,KAAKhB,QAVvB,CAAAwwD,EAAA5yD,KAAA,gBAY/DjB,EAAKI,cAAc8hC,UAAU,qCAAqC/hC,EAAYkE,KAAKhB,MAAOlD,EAAYkE,KAAK8B,SAZ5C0tD,EAAA5yD,KAAA,GAazDjB,EAAK6kB,aAAa1kB,EAAYkE,KAAKhB,MAAOlD,EAAYkE,KAAK8B,QAAShG,EAAYkE,KAAKugB,KAb5B,WAiBjEzkB,EAAYyP,UAAUnG,QAAtB,eAAApB,EAAA9I,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAA8B,SAAAmH,EAAO4B,EAAEoG,GAAT,OAAApP,EAAAtB,EAAA0B,KAAA,SAAAoH,GAAA,cAAAA,EAAAlH,KAAAkH,EAAAjH,MAAA,UACAjB,EAAKmK,MAAM0nC,UAAUx6B,KAAK,SAAA82C,GAAC,OAAIA,EAAE7hD,OAAS5C,EAAErG,QAD5C,CAAA6E,EAAAjH,KAAA,eAG1BjB,EAAKI,cAAc8hC,UAAU,6BAA6Bx4B,EAAErG,MAAM,YAAYqG,GAHpDxB,EAAAjH,KAAA,EAIpBjB,EAAK6kB,aAAanb,EAAErG,MAAOqG,EAAEvD,QAASuD,EAAEkb,KAJpB,wBAAA1c,EAAA1G,SAAAsG,EAAAnI,SAA9B,gBAAA25D,EAAAoE,GAAA,OAAAr1D,EAAAnG,MAAAvC,KAAAwC,YAAA,KASIhC,EAAY4W,UA1BiD,CAAA88C,EAAA5yD,KAAA,aA4B3Dd,EAAY4W,UAAUC,YA5BqC,CAAA68C,EAAA5yD,KAAA,gBA6BvD+V,EAAc7W,EAAY4W,UAAUC,YAC1ChX,EAAKI,cAAc8hC,UAAU,6BAA6BlrB,EAAY1K,KAAK,YAAY0K,GA9B1B68C,EAAA5yD,KAAA,GA+BvDjB,EAAK6kB,aAAa7N,EAAY1K,KAAM0K,EAAY7Q,QAAS6Q,EAAY4N,KA/Bd,WAmC3DzkB,EAAY4W,UAAUG,cACxB/W,EAAY4W,UAAUG,aAAazN,QAAnC,eAAAnB,EAAA/I,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAA2C,SAAAwyD,EAAOzpD,EAAEoG,GAAT,OAAApP,EAAAtB,EAAA0B,KAAA,SAAA0yD,GAAA,cAAAA,EAAAxyD,KAAAwyD,EAAAvyD,MAAA,UACbjB,EAAKmK,MAAM0nC,UAAUx6B,KAAK,SAAA82C,GAAC,OAAIA,EAAE7hD,OAAS5C,EAAErG,QAD/B,CAAAmwD,EAAAvyD,KAAA,eAGvCjB,EAAKI,cAAc8hC,UAAU,6BAA6Bx4B,EAAErG,MAAM,YAAYqG,GAHvC8pD,EAAAvyD,KAAA,EAIjCjB,EAAK6kB,aAAanb,EAAErG,MAAOqG,EAAEvD,QAASuD,EAAEkb,KAJP,wBAAA4uC,EAAAhyD,SAAA2xD,EAAAxzD,SAA3C,gBAAA89D,EAAAF,GAAA,OAAAj1D,EAAApG,MAAAvC,KAAAwC,YAAA,KASEhC,EAAY4W,UAAU+wB,kBA7CqC,CAAA+rB,EAAA5yD,KAAA,gBA8CvD6mC,EAAoB3nC,EAAY4W,UAAU+wB,kBAChD9nC,EAAKI,cAAc8hC,UAAU,6BAA6B4F,EAAkBx7B,KAAK,YAAYw7B,GA/ChC+rB,EAAA5yD,KAAA,GAgDvDjB,EAAK6kB,aAAaijB,EAAkBx7B,KAAMw7B,EAAkB3hC,QAAS2hC,EAAkBljB,KAhDhC,yBAAAivC,EAAAryD,SAAAmyD,EAAAh0D,SAA7D,gBAAA05D,GAAA,OAAAlxD,EAAAjG,MAAAvC,KAAAwC,YAAA,IAJ0E,wBAAAmyD,EAAA9yD,SAAAsyD,EAAAn0D,SAA5E,gBAAAk5D,GAAA,OAAA97C,EAAA7a,MAAAvC,KAAAwC,YAAA,IA3BY,cAAAu2D,EAAAn3D,OAAA,SAsFbvB,EAAKwL,SAAS,CACnB+P,sBAAqB,KAvFH,yBAAAm9C,EAAAl3D,SAAAi3D,EAAA94D,WA2FtBglB,wDAAoB,SAAAw0C,EAAOjL,GAAP,IAAApS,EAAA37C,EAAA,OAAAO,EAAAtB,EAAA0B,KAAA,SAAAs4D,GAAA,cAAAA,EAAAp4D,KAAAo4D,EAAAn4D,MAAA,WACd66C,EAAW97C,EAAKmK,MAAM0nC,UAAUx6B,KAAK,SAAA82C,GAAC,OAAIA,EAAE7hD,OAAS4hD,OAExCluD,EAAKJ,MAAMO,YAHV,CAAAi5D,EAAAn4D,KAAA,eAIVd,EAAcH,EAAKJ,MAAMO,YAJfi5D,EAAAn4D,KAAA,EAKCjB,EAAK6kB,aAAaqpC,EAAc/tD,EAAYgG,QAAShG,EAAYykB,KALlE,OAKhBk3B,EALgBsd,EAAAh4D,KAAA,cAAAg4D,EAAA73D,OAAA,SAQXu6C,EAAWA,EAASA,SAAW,MARpB,wBAAAsd,EAAA53D,SAAA23D,EAAAx5D,iEAWpB2oC,sCAAmB,SAAAivB,IAAA,IAAA5pC,EAAA,OAAAjtB,EAAAtB,EAAA0B,KAAA,SAAA22D,GAAA,cAAAA,EAAAz2D,KAAAy2D,EAAAx2D,MAAA,UACb0sB,EAAgB,KAEf3tB,EAAKmK,MAAMwjB,cAHC,CAAA8pC,EAAAx2D,KAAA,eAAAw2D,EAAAx2D,KAAA,EAKOjB,EAAKI,cAAckoC,iBAAiBtoC,EAAKJ,MAAMoN,eALtD,OAKf2gB,EALe8pC,EAAAr2D,KAOfpB,EAAKwL,SAAS,CACZmiB,kBARa8pC,EAAAx2D,KAAA,uBAAAw2D,EAAAx2D,KAAA,GAWQ,IAAIqD,QAAJ,eAAAozD,EAAAn4D,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAa,SAAAg3D,EAAO31B,EAASC,GAAhB,OAAAvhC,EAAAtB,EAAA0B,KAAA,SAAAw3D,GAAA,cAAAA,EAAAt3D,KAAAs3D,EAAAr3D,MAAA,OAClC+gC,EAAQhiC,EAAKmK,MAAMwjB,eADe,wBAAA2qC,EAAA92D,SAAAm2D,EAAAh4D,SAAb,gBAAA68D,EAAAC,GAAA,OAAA/E,EAAAx1D,MAAAvC,KAAAwC,YAAA,IAXR,QAWfwrB,EAXe8pC,EAAAr2D,KAAA,eAAAq2D,EAAAl2D,OAAA,SAgBVosB,GAhBU,yBAAA8pC,EAAAj2D,SAAA+1D,EAAA53D,WAmBnBuB,sDAAkB,SAAA41D,EAAO31D,GAAP,IAAA26C,EAAA,OAAAp7C,EAAAtB,EAAA0B,KAAA,SAAAs2D,GAAA,cAAAA,EAAAp2D,KAAAo2D,EAAAn2D,MAAA,cAAAm2D,EAAAn2D,KAAA,EACOjB,EAAK2kB,kBAAkB3kB,EAAKJ,MAAMoN,eADzC,UACV8uC,EADUsb,EAAAh2D,KAAA,CAAAg2D,EAAAn2D,KAAA,eAIdjB,EAAKI,cAAcytD,eAAe,sBAAuB7tD,EAAKJ,MAAMoN,eAJtDoqD,EAAA71D,OAAA,SAKP,MALO,UAQXu6C,EAASxb,QAAT,UARW,CAAA82B,EAAAn2D,KAAA,eASdjB,EAAK6tD,eAAe,+BATNuJ,EAAA71D,OAAA,SAUP,MAVO,cAAA61D,EAAAn2D,KAAA,GAaH66C,EAASxb,QAAQgtF,UAAUnsH,GAASskE,OAAOtH,MAAM,SAAA78B,GAC5DthC,EAAKI,cAAc8hC,UAAnB,iBAAA99B,OAA8CpE,EAAKJ,MAAMoN,cAAzD,YAAkFs0B,KAdpE,eAAA81B,EAAA71D,OAAA,SAAA61D,EAAAh2D,MAAA,yBAAAg2D,EAAA51D,SAAAs1D,EAAAn3D,iEAkBlB4tH,2BAA6B,WAE3B,IAAMtwE,EACyB,qBAAtBj9C,EAAKJ,MAAMo+D,QACiC,qBAA5Ch+D,EAAKJ,MAAMo+D,OAAO/gB,sBACrBj9C,EAAKJ,MAAMo+D,OAAO/gB,sBAClB,EAEA8rE,EACJ/oH,EAAKmK,MAAM0+G,eAAiB5rE,EAE9Bj9C,EAAKwL,SAAS,CACZu9G,yBAIJt8E,gEAA4B,SAAA4vB,EAAO4vD,GAAP,OAAAvrH,EAAAtB,EAAA0B,KAAA,SAAAw7D,GAAA,cAAAA,EAAAt7D,KAAAs7D,EAAAr7D,MAAA,OAErBjB,EAAKmK,MAAMhJ,UACdnB,EAAKJ,MAAMssH,sBAAsBD,GAEjCjsH,EAAKwtH,uBALmB,wBAAAlxD,EAAA96D,SAAA66D,EAAA18D,iEAS5B8tH,mBAAqB,WAEnB,IAAMhvE,EACyB,qBAAtBz+C,EAAKJ,MAAMo+D,QAC2B,qBAAtCh+D,EAAKJ,MAAMo+D,OAAOjhB,gBACrB/8C,EAAKJ,MAAMo+D,OAAOjhB,gBAClBzsC,GAAcosC,QAAQK,gBAIxBA,EAAkB,CACpBzwC,KAHgBgE,GAAcosC,QAAQC,kBAAkB8B,GAAanuC,GAAcosC,QAAQC,kBAAkB8B,GAAa,UAI1HpuC,GAAIouC,GAGF/B,EAAOn9C,OAAAsL,EAAA,EAAAtL,CAAA,GAAQS,EAAKmK,MAAMuyC,SAC9BA,EAAQ31B,SAAWg2B,EAEnB/8C,EAAKwL,SAAS,CAAEkxC,eAGlBgxE,kCAAe,SAAA/wD,IAAA,OAAAj8D,EAAAtB,EAAA0B,KAAA,SAAA87D,GAAA,cAAAA,EAAA57D,KAAA47D,EAAA37D,MAAA,cAAA27D,EAAA57D,KAAA,EAAA47D,EAAAr7D,OAAA,SAEJvB,EAAKmK,MAAMg4B,KAAKC,IAAIurF,IAAIC,MAAM,SAACtsF,EAAOmd,GAC3C,IAAIgkE,EAAOljH,OAAAsL,EAAA,EAAAtL,CAAA,GAAQS,EAAKmK,MAAMuyC,QAAQ+lE,SACtCA,EAAQpyG,GAAKouC,EACb,IAAI/B,EAAOn9C,OAAAsL,EAAA,EAAAtL,CAAA,GAAQS,EAAKmK,MAAMuyC,SAC9BA,EAAQ+lE,QAAUA,EAClBziH,EAAKwL,SAAS,CAAEkxC,eAPP,OAAAkgB,EAAA57D,KAAA,EAAA47D,EAAAh4D,GAAAg4D,EAAA,SAUX58D,EAAKI,cAAc8hC,UAAU,6BAA7B06B,EAAAh4D,IAVW,wBAAAg4D,EAAAp7D,SAAAm7D,EAAAh9D,KAAA,cAcfkuH,oCAAiB,SAAA5wD,IAAA,OAAAv8D,EAAAtB,EAAA0B,KAAA,SAAAo8D,GAAA,cAAAA,EAAAl8D,KAAAk8D,EAAAj8D,MAAA,cAAAi8D,EAAAl8D,KAAA,EAAAk8D,EAAA37D,OAAA,SAENvB,EAAKmK,MAAMg4B,KAAKC,IAAIurF,IAAIG,eAAe,SAACxsF,EAAOod,GACpD,IAAI+jE,EAAOljH,OAAAsL,EAAA,EAAAtL,CAAA,GAAQS,EAAKmK,MAAMuyC,QAAQ+lE,SACtCA,EAAQn2G,KAAOoyC,EACf,IAAIhC,EAAOn9C,OAAAsL,EAAA,EAAAtL,CAAA,GAAQS,EAAKmK,MAAMuyC,SAC9BA,EAAQ+lE,QAAUA,EAClBziH,EAAKwL,SAAS,CAAEkxC,eAPL,OAAAwgB,EAAAl8D,KAAA,EAAAk8D,EAAAt4D,GAAAs4D,EAAA,SAUbl9D,EAAKI,cAAc8hC,UAAU,+BAA7Bg7B,EAAAt4D,IAVa,wBAAAs4D,EAAA17D,SAAAy7D,EAAAt9D,KAAA,cAcjB2pH,kCAAe,SAAApvD,IAAA,IAAAxd,EAAA,OAAAh8C,EAAAtB,EAAA0B,KAAA,SAAA26D,GAAA,cAAAA,EAAAz6D,KAAAy6D,EAAAx6D,MAAA,cACbjB,EAAKytH,qBADQhyD,EAAAx6D,KAAA,EAGPqD,QAAQC,IAAI,CAChBvE,EAAK0tH,eACL1tH,EAAK6tH,mBALM,QAQTnxE,EARSn9C,OAAAsL,EAAA,EAAAtL,CAAA,GAQMS,EAAKmK,MAAMuyC,UACtB0iD,iBAAmBp/F,EAAKmK,MAAMuyC,QAAQ+lE,QAAQpyG,KAAOrQ,EAAKmK,MAAMuyC,QAAQ31B,SAAS1W,GAIzFrQ,EAAKwL,SAAS,CAAEkxC,YAbH,wBAAA+e,EAAAj6D,SAAA04D,EAAAv6D,WAgBfoC,gEAA4B,SAAAg4D,EAAO7L,EAAc6/D,GAArB,IAAA7kF,EAAAn7B,EAAAnM,EAAAqlE,EAAA+mD,EAAA/hD,EAAAp6C,EAAAmoE,EAAA74F,EAAA0wC,EAAAiK,EAAAmyE,EAAA/mD,EAAAoO,EAAApyC,EAAAgrF,EAAAC,EAAAC,EAAAC,EAAArB,EAAAsB,EAAAnsH,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAk5D,GAAA,cAAAA,EAAAh5D,KAAAg5D,EAAA/4D,MAAA,UAAqCioC,EAArColF,EAAA7rH,OAAA,QAAAC,IAAA4rH,EAAA,GAAAA,EAAA,GAA8C,GAAIvgH,EAAlDugH,EAAA7rH,OAAA,QAAAC,IAAA4rH,EAAA,GAAAA,EAAA,GAA0D,KAAM1sH,EAAhE0sH,EAAA7rH,OAAA,QAAAC,IAAA4rH,EAAA,GAAAA,EAAA,GAA2E,KAAMrnD,EAAjFqnD,EAAA7rH,OAAA,QAAAC,IAAA4rH,EAAA,GAAAA,EAAA,GAAoG,KAAMN,EAA1GM,EAAA7rH,OAAA,QAAAC,IAAA4rH,EAAA,GAAAA,EAAA,GAAqH,KAAMriD,EAA3HqiD,EAAA7rH,OAAA,QAAAC,IAAA4rH,EAAA,GAAAA,EAAA,GAAoI,KAEzJtuH,EAAKmK,MAAMuyC,QAAQ0iD,iBAFE,CAAAplC,EAAA/4D,KAAA,eAIxBjB,EAAKmK,MAAM0mC,OAAOvQ,QAAQ0pF,wBAJFhwD,EAAAz4D,OAAA,UAKjB,GALiB,UASrBvB,EAAKmK,MAAMhJ,QATU,CAAA64D,EAAA/4D,KAAA,gBAUxBjB,EAAKwtH,sBACmB,oBAAb5rH,GACTA,EAAS,KAAK,yBAZQo4D,EAAAz4D,OAAA,UAcjB,GAdiB,YAkBtBvB,EAAKmK,MAAM4+G,kBAlBW,CAAA/uD,EAAA/4D,KAAA,gBAmBxBjB,EAAKiqH,oBACmB,oBAAbroH,GACTA,EAAS,KAAK,uBArBQo4D,EAAAz4D,OAAA,UAuBjB,GAvBiB,YA8BtBswB,EAAc7xB,EAAKuqH,kBAAkBt+C,IAC7B1rC,OAASwtF,EAErB/tH,EAAKwqH,eAAe34F,GAGpBA,EAAY9oB,KAAO,WACnB8oB,EAAYv0B,OAAS,UACrBu0B,EAAYqX,OAASA,EAGrBlpC,EAAKyqH,kBAAkB54F,GAzCGmoE,EA2CKh6F,EAAKmK,MAA5BhJ,EA3CkB64F,EA2ClB74F,QAAS0wC,EA3CSmoD,EA2CTnoD,UACbiK,EAAWjK,EAAUx6B,KAAK,SAAA82C,GAAC,OAAIA,EAAE7hD,OAAS4hD,IA5CpB,CAAA8L,EAAA/4D,KAAA,eA8CA,oBAAbW,GACTA,EAAS,KAAK,sBA/CQo4D,EAAAz4D,OAAA,SAiDjBvB,EAAKI,cAAc8hC,UAAnB,yBAAA99B,OAAsD8pD,KAjDrC,eAoD1BpS,EAAWA,EAASA,SAOhBmyE,EAA8B,KA3DRj0D,EAAAh5D,KAAA,GA+DnB+M,IACHA,EAAQ/N,EAAKI,cAAciB,MAAM,IAGnCrB,EAAKI,cAAc8hC,UAAU,4BAA4BgsB,EAAapS,EAASstB,SAASjoE,EAAQ4sH,EAAe7kF,EAAQn7B,EAAQ,CAAEsB,KAAMlO,EAAS4M,SAAU,CAAEsB,KAAMlO,IAnE1I64D,EAAA/4D,KAAA,IAsERimE,EAAAprB,EAASxb,SAAQytF,GAAjB7rH,MAAAglE,EAAA3nE,OAAAkhC,EAAA,EAAAlhC,CAAoC2pC,IACjDisC,YAAYpnE,EAAQ,CAAEsB,KAAMlO,EAAS4M,SAAU,CAAEsB,KAAMlO,IACvDg9D,MAAM,SAAAxwD,GAAC,OAAIsgD,QAAQ3sB,MAAM3zB,KAxEJ,eAsEpBu1B,EAtEoB82B,EAAA54D,QA6EtB8hC,GADAA,EAAMljC,EAAKI,cAAciB,MAAM6hC,IACrBz7B,KAAKy7B,EAAIl+B,MAAMhF,EAAKI,cAAciB,MAAM,SAG9C2sH,GAAY9qF,EAAIzW,GAAGzsB,EAAKI,cAAciB,MAAM2sH,MAC9C9qF,EAAMljC,EAAKI,cAAciB,MAAM2sH,IAIjC9qF,EAAMljC,EAAKmK,MAAMg4B,KAAK4qB,MAAMD,KAAK5pB,EAAI2G,aAAa0jB,IAAU6V,eAGxD8qD,EAAuB,SAAC5mD,EAAoBC,GAI5C0mD,GACF5jH,OAAO45B,aAAagqF,GAKtBp8F,EAAY08F,mBAAqB,EAEjC,IAAMC,GAAiBl+G,GAAcosC,QAAQI,UAAgC,oBAAbl7C,GAA2D,IAAhCiwB,EAAY08F,kBAOjGE,EAAsBzuH,EAAKJ,MAAMo+D,OAAOhhB,uBAAyB,EAEjC,IAAlCnrB,EAAY08F,kBAEd18F,EAAYv0B,OAAS,YACZu0B,EAAY08F,kBAInB18F,EAAY08F,oBAAsBE,EAGhClnD,EAAQjqE,OACVu0B,EAAYv0B,OAAS,UACXiqE,EAAQjqE,SAClBu0B,EAAYv0B,OAAS,SAEdu0B,EAAY08F,kBAKnBC,IAEF38F,EAAY68F,YAAc,eAC1B1uH,EAAKyqH,kBAAkB54F,GAEvBjwB,EAASiwB,GAET7xB,EAAKI,cAAc8hC,UAAU,YAAaolC,EAAoBC,EAAS11C,KAIrEs8F,EAAqB,SAArBA,EAAsB3mF,EAAgBmnF,GAC1C,IAAKnnF,EACH,OAAO,EAETxnC,EAAKmK,MAAMg4B,KAAKC,IAAIu2B,sBAAsBnxB,EAAgB,SAACnF,EAAIk6B,GACzDA,GAAaA,EAAUj/D,QACzB0C,EAAKI,cAAc8hC,UAAU,wBAAyBq6B,GACtD2xD,EAAqB,EAAE3xD,IAEvB0xD,EAA8B5jH,OAAOm5B,WAAY,kBAAM2qF,EAAmB3mF,EAAgBmnF,IAAWA,MAKrGP,EAAkB,SAAA7mD,GAIlB0mD,GACF5jH,OAAO45B,aAAagqF,GAItBp8F,EAAY68F,YAAc,UAGtBp+G,GAAcosC,QAAQI,UACxBjrB,EAAYv0B,OAAS,UACG,oBAAbsE,GACTA,EAASiwB,KAGX7xB,EAAKyqH,kBAAkB54F,GAGnB01C,EAAQjqE,SACV2wH,EAA8B5jH,OAAOm5B,WAAY,kBAAM2qF,EAAmB5mD,EAAQ//B,gBAAgB,MAAO,QAhLvFwyB,EAAAz4D,OAAA,UAqLjB+zE,EAAAx5B,EAASxb,SAAQytF,GAAjB7rH,MAAAozE,EAAA/1E,OAAAkhC,EAAA,EAAAlhC,CAAoC2pC,IACxCpsC,KAAKiR,EAAQ,CAAEsB,KAAMlO,EAAS4M,QAAOm1B,OAAS,CAAE7zB,KAAMlO,EAAS+hC,QAC/DtY,GAAG,kBAAmB,SAAA0B,GAGrB,GAFAtsB,EAAKI,cAAc8hC,UAAU,sBAAuB5V,IAE/CA,EAEH,OADAtsB,EAAKI,cAAc8hC,UAAU,yCAA0C5V,IAChE,EAGTuF,EAAY2V,gBAAkBlb,EAC9BuF,EAAYv0B,OAAS,UACrBu0B,EAAY68F,YAAc,kBAC1B1uH,EAAKyqH,kBAAkB54F,GAEnBo1C,GACFA,EAAiBp1C,GAIf7xB,EAAKJ,MAAM+K,WACTsjH,GACF5jH,OAAO45B,aAAagqF,GAEtBA,EAA8B5jH,OAAOm5B,WAAY,kBAAM2qF,EAAmB7hG,EAAK,MAAQ,QAG1F1B,GAAG,UAAWwjG,GACdxjG,GAAG,eAAgBsjG,GACnBtjG,GAAG,QAAS,SAAA0W,GAIX,IAAM+sF,KAAa/sF,IAASA,EAAMvlB,SAA6C,oBAA3BulB,EAAMvlB,QAAQwY,WAA0B+M,EAAMvlB,QAAQwY,SAAS,qCASnH,GANA1C,EAAYv0B,OAAS,QACrBu0B,EAAY68F,YAAc,QAC1B1uH,EAAKyqH,kBAAkB54F,IAIlBw8F,EAAW,CACdhkH,OAAOszB,cAAcC,WAAW,uBAAwB,CACtD/sB,KAAM,QACNktB,WAAY,GACZC,WAAY,GACZC,QAAS,UACTH,WAAY,QACZD,iBAAkB,iBAGpB,IAAMmvF,EAAU1rF,aAAiB0mC,MAEJ,qBAAlB1mC,EAAMvlB,QACf/b,EAAK+pH,0BAA0B,KAAKzoF,EAAMvlB,SACjC/b,EAAKI,cAAc8+D,kBAAoB8tD,GAChDG,KAAwB7rF,GAIJ,oBAAb1/B,GACTA,EAASiwB,EAAYyP,MAnPH,eAAA04B,EAAAh5D,KAAA,GAAAg5D,EAAAp1D,GAAAo1D,EAAA,UA0PxBnoC,EAAYv0B,OAAS,QACrB0C,EAAKyqH,kBAAkB54F,GAIvBxnB,OAAOszB,cAAcC,WAAW,4CAA6C,CAC3E/sB,KAAM,QACNktB,WAAY,GACZC,WAAY,GACZC,QAAS,UACTH,WAAY,QACZD,iBAAkB,+BAGdwwF,KAAar0D,EAAAp1D,KAASo1D,EAAAp1D,GAAMmX,UAAUi+C,EAAAp1D,GAAMmX,QAAQwY,SAAS,qCAE7Dy4F,EAAUhzD,EAAAp1D,cAAiBojE,MAC5BhoE,EAAKI,cAAc8+D,kBAAoB8tD,IAAYqB,GACtDlB,KAAAnzD,EAAAp1D,IAGsB,oBAAbhD,GAETA,EAASiwB,EAADmoC,EAAAp1D,IAjRco1D,EAAAz4D,OAAA,UAoRjB,GApRiB,yBAAAy4D,EAAAx4D,SAAAu4D,EAAAp6D,KAAA,wEAyR5B4qH,kBAAoB,WAAiB,IAAhBt+C,EAAgB9pE,UAAAM,OAAA,QAAAC,IAAAP,UAAA,GAAAA,UAAA,GAAT,KACtB0vB,EAAWtyB,OAAAsL,EAAA,EAAAtL,CAAA,GACV0sE,GAQL,OANAp6C,EAAYsqC,QAAUzjD,KAAKk2G,MAC3B/8F,EAAYg9F,YAAcn2G,KAAKk2G,MAC/B/8F,EAAYv0B,OAAS,cACrBu0B,EAAY08F,kBAAoB,EAChC18F,EAAYxuB,MAAQrD,EAAKJ,MAAMoN,cAC/B6kB,EAAYoa,SAAWjsC,EAAKJ,MAAMgH,iBAC3BirB,KAGT24F,eAAiB,SAAA34F,GACf,IAAMj1B,EAAY2C,OAAAsL,EAAA,EAAAtL,CAAA,GAAQS,EAAKmK,MAAMvN,cACrCA,EAAY,KAAAwH,OAAMytB,EAAYsqC,UAAatqC,EAC3C7xB,EAAKwL,SAAS,CAAE5O,oBAIlB6tH,kBAAoB,SAAAqE,GAClB,IAAMlyH,EAAY2C,OAAAsL,EAAA,EAAAtL,CAAA,GAAQS,EAAKmK,MAAMvN,cAC/Bi1B,EAAWtyB,OAAAsL,EAAA,EAAAtL,CAAA,GAAQuvH,GAgBzB,OAfAj9F,EAAYg9F,YAAcn2G,KAAKk2G,MAC/BhyH,EAAY,KAAAwH,OAAM0qH,EAAmB3yD,UAAatqC,EAClD7xB,EAAKwL,SAAS,CAAE5O,iBAKZ,CAAC,UAAU,UAAU,aAAa23B,SAAS1C,EAAYv0B,OAAO2S,iBAEhEjQ,EAAKI,cAAc2xE,kBAGnB/xE,EAAKI,cAAck2D,qBAAnB,KAAAlyD,OAA6CytB,EAAYsqC,SAAUtqC,IAG9DA,KAITu1F,qBAAuB,SAAAz5G,GACJ,qBAANA,GACTA,EAAEinB,iBAGJ,IAAIic,EAAMtxC,OAAAsL,EAAA,EAAAtL,CAAA,GAAQS,EAAKmK,MAAM0mC,QAC7BA,EAAOhlC,KAAKw7G,uBAAwB,EAEpCrnH,EAAKwL,SAAS,CAAEqlC,cAGlB28E,oBAAsB,SAAA7/G,GACH,qBAANA,GACTA,EAAEinB,iBAGJ,IAAIic,EAAMtxC,OAAAsL,EAAA,EAAAtL,CAAA,GAAQS,EAAKmK,MAAM0mC,QAC7BA,EAAOhlC,KAAKw7G,uBAAwB,EACpCrnH,EAAKwL,SAAS,CAAEqlC,OAAQA,OAG1B22E,4BAA8B,SAAA75G,GACX,qBAANA,GACTA,EAAEinB,iBAGJ,IAAIic,EAAMtxC,OAAAsL,EAAA,EAAAtL,CAAA,GAAQS,EAAKmK,MAAM0mC,QAC7BA,EAAOhlC,KAAK47G,0BAA2B,EACvCznH,EAAKwL,SAAS,CAAEqlC,cAGlB64E,2BAA6B,SAAA/7G,GACV,qBAANA,GACTA,EAAEinB,iBAGJ,IAAIic,EAAMtxC,OAAAsL,EAAA,EAAAtL,CAAA,GAAQS,EAAKmK,MAAM0mC,QAC7BA,EAAOhlC,KAAK47G,0BAA2B,EACvC52E,EAAOhlC,KAAK29G,kCAAmC,EAC/C34E,EAAOhlC,KAAKw7G,uBAAwB,EAEpCrnH,EAAKwL,SAAS,CAAEqlC,cAGlBy3E,2BAA6B,SAAA36G,GACV,qBAANA,GACTA,EAAEinB,iBAGJ,IAAIic,EAAMtxC,OAAAsL,EAAA,EAAAtL,CAAA,GAAQS,EAAKmK,MAAM0mC,QAC7BA,EAAOhlC,KAAK28G,kBAAmB,EAC/BxoH,EAAKwL,SAAS,CAAEqlC,cAGlBk5E,0BAA4B,SAACp8G,EAAE2zB,GACZ,qBAAN3zB,GAAqBA,GAC9BA,EAAEinB,iBAGJ,IAAIic,EAAMtxC,OAAAsL,EAAA,EAAAtL,CAAA,GAAQS,EAAKmK,MAAM0mC,QAC7BA,EAAOhlC,KAAK28G,iBAAmBlnF,EAE/BthC,EAAKwL,SAAS,CAAEqlC,cAGlBq3E,0BAA4B,SAAAv6G,GACT,qBAANA,GACTA,EAAEinB,iBAGJ,IAAIic,EAAMtxC,OAAAsL,EAAA,EAAAtL,CAAA,GAAQS,EAAKmK,MAAM0mC,QAC7BA,EAAOhlC,KAAKu8G,iBAAkB,EAC9BpoH,EAAKwL,SAAS,CAAEqlC,cAGlBi5E,yBAA2B,SAACn8G,EAAE2zB,GACX,qBAAN3zB,GAAqBA,GAC9BA,EAAEinB,iBAGJ,IAAIic,EAAMtxC,OAAAsL,EAAA,EAAAtL,CAAA,GAAQS,EAAKmK,MAAM0mC,QAGjB,oBAARvP,IACFA,EAAQ,mCAKVuP,EAAOhlC,KAAKu8G,gBAAkB9mF,EAE9BthC,EAAKwL,SAAS,CAAEqlC,cAGlB82E,iCAAmC,SAAAh6G,GAChB,qBAANA,GACTA,EAAEinB,iBAGJ,IAAIic,EAAMtxC,OAAAsL,EAAA,EAAAtL,CAAA,GAAQS,EAAKmK,MAAM0mC,QAC7BA,EAAOhlC,KAAK+7G,qBAAsB,EAClC5nH,EAAKwL,SAAS,CAAEqlC,cAGlB84E,gCAAkC,SAAAh8G,GACf,qBAANA,GACTA,EAAEinB,iBAGJ,IAAIic,EAAMtxC,OAAAsL,EAAA,EAAAtL,CAAA,GAAQS,EAAKmK,MAAM0mC,QAC7BA,EAAOhlC,KAAK+7G,qBAAsB,EAClC5nH,EAAKwL,SAAS,CAAEqlC,cAGlB61E,wBAA0B,SAAA/4G,GACP,qBAANA,GACTA,EAAEinB,iBAGJ,IAAIic,EAAMtxC,OAAAsL,EAAA,EAAAtL,CAAA,GAAQS,EAAKmK,MAAM0mC,QAC7BA,EAAOhlC,KAAK86G,0BAA2B,EACvC3mH,EAAKwL,SAAS,CAAEqlC,cAGlB44E,uBAAyB,SAAA97G,GACN,qBAANA,GACTA,EAAEinB,iBAGJ,IAAIic,EAAMtxC,OAAAsL,EAAA,EAAAtL,CAAA,GAAQS,EAAKmK,MAAM0mC,QAC7BA,EAAOhlC,KAAK86G,0BAA2B,EACvC3mH,EAAKwL,SAAS,CAAEqlC,cAGlBg2E,mBAAqB,SAAAl5G,GACF,qBAANA,GACTA,EAAEinB,iBAGJ,IAAIic,EAAMtxC,OAAAsL,EAAA,EAAAtL,CAAA,GAAQS,EAAKmK,MAAM0mC,QAC7BA,EAAOhlC,KAAKi7G,qBAAsB,EAClC9mH,EAAKwL,SAAS,CAAEqlC,cAGlBk+E,kBAAoB,SAAAphH,GACD,qBAANA,GACTA,EAAEinB,iBAGJ,IAAIic,EAAMtxC,OAAAsL,EAAA,EAAAtL,CAAA,GAAQS,EAAKmK,MAAM0mC,QAC7BA,EAAOhlC,KAAKi7G,qBAAsB,EAClC9mH,EAAKwL,SAAS,CAAEqlC,cAGlBm2E,uBAAyB,SAAAr5G,GACN,qBAANA,GACTA,EAAEinB,iBAGJ,IAAIic,EAAMtxC,OAAAsL,EAAA,EAAAtL,CAAA,GAAQS,EAAKmK,MAAM0mC,QAC7BA,EAAOhlC,KAAKo7G,yBAA0B,EACtCjnH,EAAKwL,SAAS,CAAEqlC,cAGlBm5E,sBAAwB,SAAAr8G,GACL,qBAANA,GACTA,EAAEinB,iBAGJ,IAAIic,EAAMtxC,OAAAsL,EAAA,EAAAtL,CAAA,GAAQS,EAAKmK,MAAM0mC,QAC7BA,EAAOhlC,KAAKo7G,yBAA0B,EACtCjnH,EAAKwL,SAAS,CAAEqlC,cAGlBi3E,mBAAqB,SAAAn6G,GACF,qBAANA,GACTA,EAAEinB,iBAGJ,IAAIic,EAAMtxC,OAAAsL,EAAA,EAAAtL,CAAA,GAAQS,EAAKmK,MAAM0mC,QAC7BA,EAAOhlC,KAAKk8G,qBAAsB,EAClC/nH,EAAKwL,SAAS,CAAEqlC,cAGlBo5E,kBAAoB,SAAAt8G,GACD,qBAANA,GACTA,EAAEinB,iBAGJ,IAAIic,EAAMtxC,OAAAsL,EAAA,EAAAtL,CAAA,GAAQS,EAAKmK,MAAM0mC,QAC7BA,EAAOhlC,KAAKk8G,qBAAsB,EAClC/nH,EAAKwL,SAAS,CAAEqlC,cAGlB1mC,MAAQ,CACNg4B,KAAM,KACN41E,QAAQ,KACR52G,QAAS,KACT0wC,UAAW,GACXrJ,SAAU,KACV+V,SAAU,KACVyqE,WAAW,KACXpsH,aAAc,GACdoyH,YAAa,KACbrhG,cAAc,KACdk7F,eAAgB,KAChBl+D,iBAAkB,KAClB28D,iBAAkB,KAClB2H,kBAAmB,KACnBnkB,SAAU9qG,EAAK8qG,SACfie,kBAAmB,KACnB/H,oBAAmB,EACnBkO,uBAAuB,GACvB3zG,sBAAqB,EACrB0lG,YAAajhH,EAAKihH,YAClBkI,yBAA0B,KAC1BpoD,aAAc/gE,EAAK+gE,aACnBl8C,aAAc7kB,EAAK6kB,aACnBokG,eAAgBjpH,EAAKipH,eACrB9B,gBAAiBnnH,EAAKmnH,gBACtBiC,iBAAkBppH,EAAKopH,iBACvB9gF,iBAAkBtoC,EAAKsoC,iBACvBpK,kBAAmBl+B,EAAKk+B,kBACxBgjF,oBAAqBlhH,EAAKkhH,oBAC1BgI,qBAAsBlpH,EAAKkpH,qBAC3BnnH,0BAA2B/B,EAAK+B,0BAChC0qC,0BAA2BzsC,EAAKysC,0BAChC48E,yBAA0BrpH,EAAKJ,MAAMypH,yBACrC3sE,QAAS,CACP+lE,QAAS,GACT17F,SAAU,GACVq4E,iBAAkB,KAClBkqB,aAActpH,EAAKspH,cAErBz4E,OAAQ,CACNhlC,KAAM,CACJu8G,gBAAiB,KACjBL,oBAAqB,KACrBH,oBAAqB,KACrBP,sBAAuB,KACvBkC,uBAAwB,KACxBtC,wBAAyB,KACzBQ,yBAA0B,KAC1B0B,yBAA0B,KAC1BK,iCAAkC,KAClC1C,oBAAqB9mH,EAAK8mH,oBAC1BH,yBAA0B3mH,EAAK2mH,0BAEjCrmF,QAAS,CACP2pF,kBAAmBjqH,EAAKiqH,kBACxB8E,kBAAmB/uH,EAAK+uH,kBACxBlI,mBAAoB7mH,EAAK6mH,mBACzBiB,mBAAoB9nH,EAAK8nH,mBACzB0F,oBAAqBxtH,EAAKwtH,oBAC1BpG,qBAAsBpnH,EAAKonH,qBAC3B4C,sBAAuBhqH,EAAKgqH,sBAC5BhD,uBAAwBhnH,EAAKgnH,uBAC7ByC,uBAAwBzpH,EAAKypH,uBAC7B/C,wBAAyB1mH,EAAK0mH,wBAC9BoD,yBAA0B9pH,EAAK8pH,yBAC/B5B,0BAA2BloH,EAAKkoH,0BAChC6B,0BAA2B/pH,EAAK+pH,0BAChCzB,2BAA4BtoH,EAAKsoH,2BACjCoB,2BAA4B1pH,EAAK0pH,2BACjClC,4BAA6BxnH,EAAKwnH,4BAClCqC,gCAAiC7pH,EAAK6pH,gCACtCF,gCAAiC3pH,EAAK2pH,gCACtCC,iCAAkC5pH,EAAK4pH,iCACvCjC,iCAAkC3nH,EAAK2nH,mCAG3C91F,YAAa,CACXhmB,KAAM,CACJjP,aAAc,MAEhBstH,KAAM,GACN5pF,QAAS,2FAtnDX3gC,KAAKyK,oBAAqB,+CAI1BzK,KAAKgJ,6CAunDL,IAAMwmH,EAA+E,kBAA3CxvH,KAAKwK,MAAM0mC,OAAOhlC,KAAKu8G,iBAAgCzoH,KAAKwK,MAAM0mC,OAAOhlC,KAAKu8G,gBAAgB3lH,OAAO,EACzI2sH,EAAiF,kBAA5CzvH,KAAKwK,MAAM0mC,OAAOhlC,KAAK28G,kBAAiC7oH,KAAKwK,MAAM0mC,OAAOhlC,KAAK28G,iBAAiB/lH,OAAO,EAClJ,OACEtD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACspH,GAAyB0G,SAA1B9vH,OAAAC,OAAA,CAAmCuO,MAAOpO,KAAKwK,OAAWxK,KAAKC,QAC/DT,EAAAC,EAAAC,cAACiwH,GAAD,CACEz+E,OAAQlxC,KAAKwK,MAAM0mC,OACnB6L,QAAS/8C,KAAKwK,MAAMuyC,QACpBv7C,QAASxB,KAAKwK,MAAMhJ,QACpBwJ,SAAUhL,KAAKC,MAAM+K,SACrBs2G,YAAathH,KAAKwK,MAAM82G,YACxBnJ,aAAcn4G,KAAKC,MAAMk4G,aACzBqP,gBAAiBxnH,KAAKwK,MAAMg9G,gBAC5BG,iBAAkB3nH,KAAKwK,MAAMm9G,iBAC7BG,yBAA0B9nH,KAAKwK,MAAMs9G,yBACrC0B,yBAA0BxpH,KAAKwK,MAAMg/G,2BAEvChqH,EAAAC,EAAAC,cAACkwH,GAAD,CACE1+E,OAAQlxC,KAAKwK,MAAM0mC,OACnB1vC,QAASxB,KAAKwK,MAAMhJ,QACpB42G,QAASp4G,KAAKC,MAAMm4G,QACpB72E,OAAQkuF,IAEVjwH,EAAAC,EAAAC,cAACmwH,GAAD,CACE3+E,OAAQlxC,KAAKwK,MAAM0mC,OACnB1vC,QAASxB,KAAKwK,MAAMhJ,QACpB42G,QAASp4G,KAAKC,MAAMm4G,QACpB72E,OAAQiuF,EACRrX,aAAcn4G,KAAKC,MAAMk4G,eAE3B34G,EAAAC,EAAAC,cAACowH,GAAD,CACEttF,KAAMxiC,KAAKwK,MAAMg4B,KACjBua,QAAS/8C,KAAKwK,MAAMuyC,kBAhrDEjrB,IAAM3xB,WAAhCuqH,GACGqF,SAAW/G,GAAyB+G,SAsrD9BrF,UC7mDAsF,8MApKbxlH,MAAQ,KAGR/J,cAAgB,gFAGVT,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,4JAK9CD,KAAKgJ,iMAGkB+B,EAAWqC,mEAClCpN,KAAKgJ,kJAIL,IAAIkI,EAAO,KACP/S,EAAQ,KACRiK,EAAS,KACP4J,EAAYhS,KAAKC,MAAM+R,UACvBi+G,EAAWrwH,OAAOC,OAAO,GAAGG,KAAKC,MAAMgwH,UAEvCh+G,EAAa,CACjBrD,WAAW,EACX5P,SAAS,CAAC,EAAE,GACZb,MAAM,WACN+e,MAAM,CACJiV,SAAS,OACTxJ,SAAU,SACVI,WAAY,SACZqJ,aAAc,YAEhB1oB,UAAU,CACRG,eAAe,eAYnB,OAPImI,EAAU/R,OAASL,OAAOwH,KAAK4K,EAAU/R,OAAO6C,QAClDlD,OAAOwH,KAAK4K,EAAU/R,OAAO6J,QAAQ,SAAAC,GACnCkI,EAAWlI,GAAKiI,EAAU/R,MAAM8J,KAK5BiI,EAAUrF,MAChB,IAAK,OACH,IAAMiiB,EAAgB5uB,KAAKS,cAAcqY,YAA+B,IAAnBm3G,EAASz2G,WAAgBR,OAAO,gBACrF5Q,EACE5I,EAAAC,EAAAC,cAACC,EAAA,EAASsS,EAAa2c,GAE3B,MACA,IAAK,aAEH,OADc5c,EAAUxH,MAAQwH,EAAUxH,MAAQylH,EAASzlH,OAEzD,IAAK,UACH0G,EAAO,iBACP/S,EAAQ,UACV,MACA,IAAK,SACH+S,EAAO,SACP/S,EAAQ,UACV,MACA,IAAK,WACH+S,EAAO,SACP/S,EAAQ,UACV,MACA,IAAK,WACH+S,EAAO,QACP/S,EAAQ,UACV,MACA,IAAK,YACH+S,EAAO,OACP/S,EAAQ,UACV,MACA,IAAK,SACH+S,EAAO,YACP/S,EAAQ,UACV,MACA,IAAK,UACH+S,EAAO,eACP/S,EAAQ,UACV,MACA,IAAK,WACH+S,EAAO,cACP/S,EAAQ,UAKZiK,EACE5I,EAAAC,EAAAC,cAACC,EAAA,EAADC,OAAAC,OAAA,GACMoS,EADN,CAEEtI,WAAY,SACZE,eAAgB,WAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgN,KAAMuE,EACN/S,MAAOA,EACPk0B,MAAO,SACPhmB,KAAO4F,EAAW5F,KAAO4F,EAAW5F,KAAQrM,KAAKC,MAAM+K,SAAW,MAAQ,WAIlF,MACA,IAAK,KACH5C,EACE5I,EAAAC,EAAAC,cAACC,EAAA,EAASsS,EAAag+G,EAASv/G,IAEpC,MACA,IAAK,QACHtI,EACE5I,EAAAC,EAAAC,cAACC,EAAA,EAASsS,EAAag+G,EAASn2H,OAEpC,MACA,IAAK,QACH,IAAMmlH,EAAWj/G,KAAKS,cAAciB,MAAMuuH,EAAShR,UAAU35G,IAAI,MAC3D65G,EAAen/G,KAAKS,cAAciB,MAAMuuH,EAAS9Q,cAAc75G,IAAI,MACnE4qH,EAAajR,EAASn3G,KAAKq3G,GACjC/2G,EACE5I,EAAAC,EAAAC,cAACC,EAAA,EAASsS,EAAajS,KAAKS,cAAc4I,YAAY6mH,EAAW1/G,QAAQ,EAAE,GAAG,IAElF,MACA,IAAK,SACHpI,EACE5I,EAAAC,EAAAC,cAACC,EAAA,EAASsS,EAAag+G,EAASzlH,OAEpC,MACA,IAAK,UACH,IAAIwwG,EAAU,KACd,GAAIh7G,KAAKC,MAAM45G,SAAS,CACtB,IAAMA,EAAW75G,KAAKC,MAAM45G,SAASA,SAASvpG,cACxC6/G,EAAOF,EAAS/V,MAAMxiG,KAAM,SAAApJ,GAAC,OAAKA,EAAE2tG,MAAM3rG,gBAAkBupG,IAC9DsW,IACFnV,EAAUmV,EAAKnV,SAGnB5yG,EACE5I,EAAAC,EAAAC,cAACC,EAAA,EAASsS,EAA0B,OAAZ+oG,EAAmB,OAAUA,EAAU,MAAQ,WAE3E,MACA,IAAK,WACH5yG,EACE5I,EAAAC,EAAAC,cAAC8R,EAAD5R,OAAAC,OAAA,GAAiBoS,EAAjB,CAA6B9I,OAAQ8mH,EAAShR,YAElD,MACA,IAAK,eACH72G,EACE5I,EAAAC,EAAAC,cAAC8R,EAAD5R,OAAAC,OAAA,GAAiBoS,EAAjB,CAA6B9I,OAAQ8mH,EAAS9Q,gBAMpD,OAAO/2G,SAlKiBjI,mCC8QbiwH,8MA3Qb5lH,MAAQ,CACN2nB,SAAS,GACTjzB,SAAS,IACTwzB,UAAU,IACVC,UAAS,EACTC,cAAc,CACZj1B,OAAO,KACPk1B,OAAO,KACPC,QAAQ,SAIZC,UAAY,SAACjX,EAAO1N,GAClB/N,EAAKwL,SAAS,SAACuB,GAAD,MAAgB,CAC5BwlB,cAAchzB,OAAAsL,EAAA,EAAAtL,CAAA,GACTwN,EAAUwlB,cADFhzB,OAAA2b,EAAA,EAAA3b,CAAA,GAEVkc,EAAQ1N,UAKf4kB,aAAe,WAAiB,IAAhBC,IAAgBzwB,UAAAM,OAAA,QAAAC,IAAAP,UAAA,KAAAA,UAAA,GACS,oBAA5BnC,EAAKJ,MAAM+yB,cACpB3yB,EAAKJ,MAAM+yB,aAAa3yB,EAAKmK,MAAMooB,eAEjCK,GACF5yB,EAAK6yB,kBAITC,YAAc,SAACrX,GACbzb,EAAKwL,SAAS,SAACuB,GAAD,MAAgB,CAC5BwlB,cAAchzB,OAAAsL,EAAA,EAAAtL,CAAA,GACTwN,EAAUwlB,cADFhzB,OAAA2b,EAAA,EAAA3b,CAAA,GAEVkc,EAAQ,SAEV,WACDzb,EAAK2yB,cAAa,QAItBI,aAAe,WAAiB,IAAhBH,IAAgBzwB,UAAAM,OAAA,QAAAC,IAAAP,UAAA,KAAAA,UAAA,GAC9BnC,EAAKwL,SAAS,CACZ+mB,cAAc,CACZj1B,OAAO,KACPk1B,OAAO,KACPC,QAAQ,OAEV,WACuC,oBAA5BzyB,EAAKJ,MAAMmzB,cACpB/yB,EAAKJ,MAAMmzB,eAETH,GACF5yB,EAAK6yB,oBAKXA,aAAe,WACb7yB,EAAKwL,SAAS,SAACuB,GAAD,MAAgB,CAC5BulB,UAAWvlB,EAAUulB,qFAIhB,IAAA1pB,EAAAjJ,KACP,OACER,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,EACJzB,IAAK,EACLvV,MAAO,EACP8W,OAAQ,EACRxH,cAAe,SACfD,WAAY,aACZE,eAAgB,SAChBsH,SAAU,CAAC,WAAW,aAEtB3R,EAAAC,EAAAC,cAAC8gB,GAAD,CACE1B,UAAW,CACTsC,GAAG,EACHD,GAAG,EACH7mB,MAAM,CAAC,EAAG0F,KAAKwK,MAAMmoB,SAAW3yB,KAAKwK,MAAM2nB,SAAWnyB,KAAKwK,MAAMtL,UACjEge,MAAM,CACJmW,WAAW,2BAGf5Y,eAAiBza,KAAKwK,MAAMmoB,SAC5BtU,YAAere,KAAKwK,MAAMmoB,SAA+B,KAApB3yB,KAAKkzB,cAE1C1zB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACP4iB,MAAO,CACLoD,OAAO,WAET3W,WAAY,SACZC,cAAe,MACfC,eAAgB,gBAChBuU,QAAUpe,KAAKwK,MAAMmoB,SAAW3yB,KAAKkzB,aAAe,MAEpD1zB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACV4P,WAAY,IACZzQ,MAAO,aAHT,WAOAqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACExB,MAAO,YACPkO,KAAOrM,KAAKC,MAAM+K,SAAW,QAAU,QACvC2B,KAAO3M,KAAKwK,MAAMmoB,SAAW,QAAU,UAG3CnzB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEiK,cAAe,SACfsT,MAAO,CACLyL,SAAS,SACT0K,WAAW,8BACXX,UAAU1yB,KAAKwK,MAAMmoB,SAAW3yB,KAAKwK,MAAMkoB,UAAY,IAGzDlzB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,EACJkC,GAAI,EACJ9mB,MAAO,EACPsP,cAAe,MACf0pB,UAAS,aAAA7uB,OAAezE,KAAKC,MAAM1G,MAAMR,OAAO4D,UAG9CiD,OAAOwH,KAAKpH,KAAKC,MAAMszB,SAASrY,IAAI,SAACsY,GACnC,IAAMC,EAAexqB,EAAKhJ,MAAMszB,QAAQC,GACxC,OACEh0B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEiK,cAAe,SACf2T,IAAG,UAAA9Y,OAAY+uB,GACftW,MAAO,CACL6J,UAAU,IACVzE,KAAK,YAGP9iB,EAAAC,EAAAC,cAAC0pB,GAAD,CACED,GAAI,EACJva,WAAY,EACZ5P,SAAU,CAAC,EAAE,GACbb,MAAO,YAENq1B,EAAevR,eAGhBriB,OAAOwH,KAAKqsB,GAAcvY,IAAI,SAACwY,GAC7B,IAAMC,EAAcF,EAAaC,GAC3BE,EAAY3qB,EAAKuB,MAAMooB,cAAcY,KAAkBE,EAC7D,OACEl0B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE6lB,GAAI,EACJxmB,SAAU,CAAC,EAAE,GACb+R,MAAO4iB,EACPE,QAASD,EACT5U,UAAWC,KAAO5nB,SAClBkmB,IAAG,UAAA9Y,OAAY+uB,EAAZ,KAAA/uB,OAA8BivB,GACjClS,SAAW,SAAAxT,GAAC,OAAI/E,EAAK8pB,UAAUS,EAAeE,YAUhEl0B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEiK,cAAe,OAEfpK,EAAAC,EAAAC,cAACC,EAAA,EAAOm0B,KAAR,CACEllB,WAAY,EACZ5P,SAAU,CAAC,EAAE,GACb0mB,UAAW,YACXtH,QAASpe,KAAKgzB,cAJhB,iBAQAxzB,EAAAC,EAAAC,cAACC,EAAA,EAAOm0B,KAAR,CACExnB,GAAI,EACJsC,WAAY,EACZ5P,SAAU,CAAC,EAAE,GACb0mB,UAAW,YACXtH,QAASpe,KAAKozB,cALhB,aAaHpzB,KAAKwK,MAAMmoB,UAAY3yB,KAAKC,MAAM2yB,eAAiBhzB,OAAO0X,OAAOtX,KAAKC,MAAM2yB,eAAe9W,OAAQ,SAAAxN,GAAC,OAAW,OAANA,IAAcxL,OAAO,GAC7HtD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,EACJ5kB,MAAO,EACPsP,cAAe,CAAC,SAAS,OACzBD,WAAY,CAAC,aAAa,YAC1BE,eAAgB,CAAC,WAAW,eAG1BjK,OAAOwH,KAAKpH,KAAKC,MAAM2yB,eAAe1X,IAAI,SAAC6Y,GACzC,IAAML,EAAczqB,EAAKhJ,MAAM2yB,cAAcmB,GAC7C,GAAoB,OAAhBL,EAAqB,CACvB,IAAMC,EAAc1qB,EAAKhJ,MAAMszB,QAAQQ,GAAYL,GACnD,OACEl0B,EAAAC,EAAAC,cAAC8gB,GAAD,CACE1B,UAAW,CACTsC,GAAG,EACHD,GAAG,EACH7P,GAAG,CAAC,EAAE,GACN6Q,GAAG,CAAC,EAAE,GACN7nB,MAAM,CAAC,EAAE2O,EAAKuB,MAAMtL,WAEtBub,eAAe,EACf8C,IAAG,UAAA9Y,OAAYsvB,IAEfv0B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACP4iB,MAAO,CACLoD,OAAO,WAET3W,WAAY,SACZC,cAAe,MACfC,eAAgB,gBAChBuU,QAAS,SAAApQ,GAAC,OAAI/E,EAAKkqB,YAAYY,KAE/Bv0B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACV4P,WAAY,IACZzQ,MAAO,WACP+e,MAAO,CACLyO,cAAc,eAGfgI,GAEHn0B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgN,KAAM,QACNxO,MAAO,WACPkO,KAAOpD,EAAKhJ,MAAM+K,SAAW,QAAU,YAMjD,OAAO,OAGXxL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,CAAC,EAAE,GACPlgB,SAAU,CAAC,EAAE,GACb4P,WAAY,CAAC,GACbzQ,MAAO,YACP8oB,WAAY,YACZ5V,UAAW,CAAC,SAAS,QACrB+M,QAAU,SAAApQ,GAAC,OAAI/E,EAAKmqB,cAAa,KAPnC,8BA3PoBjzB,aC2QnBkwH,8MAtQb7lH,MAAQ,CACNypB,KAAK,EACL1N,SAAQ,EACR+pG,YAAY,GACZC,UAAU,KACVl8F,WAAW,KACXzB,cAAc,CACZj1B,OAAO,MAET41B,QAAQ,CACN51B,OAAO,CACLE,QAAQ,UACR3F,OAAO,SACP8mH,SAAS,WACTwR,SAAS,WACTC,UAAU,YACVC,OAAO,SACPC,QAAQ,UACR5R,SAAS,aAGb6R,cAAc,KACdp8F,gBAAgB,QAIlB/zB,cAAgB,OAoChBuyB,aAAe,SAAAJ,GACbvyB,EAAKwL,SAAS,CACZ+mB,iBACA,WACAvyB,EAAKwwH,mBAITz9F,aAAe,WACb/yB,EAAKwL,SAAS,CACZ+mB,cAAc,CACZj1B,OAAO,OAET,WACA0C,EAAKwwH,mBAaTA,YAAc,WAAe,IAAd58F,EAAczxB,UAAAM,OAAA,QAAAC,IAAAP,UAAA,GAAAA,UAAA,GAAT,KAElB,IAAKnC,EAAKJ,MAAM+7G,UACd,OAAO,EAGT/nF,EAAOA,GAAc5zB,EAAKmK,MAAMypB,KAEhC,IAAMq8F,EAAcjwH,EAAKJ,MAAMqwH,YAAcjwH,EAAKJ,MAAMqwH,YAAcjwH,EAAKmK,MAAM8lH,YAG3EtU,EAAYp8G,OAAO0X,OAAOjX,EAAKJ,MAAM+7G,WACtBlgG,OAAO,SAAA/R,GAAC,OAC8B,OAApC1J,EAAKmK,MAAMooB,cAAcj1B,QAAmBoM,EAAES,MAAM8F,gBAAkBjQ,EAAKmK,MAAMooB,cAAcj1B,OAAO2S,gBAExGukB,KAAK,SAACp1B,EAAEq1B,GAAH,OAAUr1B,EAAE+Z,UAAYsb,EAAEtb,WAAc,EAAI,IAGhE+2G,EAAYvU,EAAUl5G,OACtBuxB,EAAa3b,KAAKgX,KAAK6gG,EAAUD,GAEjCM,EAAgB,GAEtB5U,EAAUlyG,QAAQ,SAACC,EAAGoG,GAChBA,IAAK8jB,EAAK,GAAGq8F,GAAgBngH,GAAI8jB,EAAK,GAAGq8F,EAAaA,GACxDM,EAAcngH,KAAK1G,KAMvB1J,EAAKwL,SAAS,CACZ0a,SAHc,EAIdgqG,YACAl8F,aACAu8F,8FA/FE5wH,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,wCAIvC+N,GACHA,GACFA,EAAEinB,iBAEJ,IAAMhB,EAAOvb,KAAKG,IAAI,EAAE7Y,KAAKwK,MAAMypB,KAAK,GACxCj0B,KAAK6L,SAAS,CACZooB,0CAIKjmB,GACHA,GACFA,EAAEinB,iBAEJ,IAAMhB,EAAOvb,KAAKC,IAAI3Y,KAAKwK,MAAM6pB,WAAWr0B,KAAKwK,MAAMypB,KAAK,GAC5Dj0B,KAAK6wH,YAAY58F,GACjBj0B,KAAK6L,SAAS,CACZooB,6JAKFj0B,KAAKgJ,YACLhJ,KAAK6wH,mMAqBkB9lH,EAAWqC,2EAClCpN,KAAKgJ,YACC8nH,EAAc1jH,EAAU6mB,OAASj0B,KAAKwK,MAAMypB,KAC5C88F,EAAmBnxG,KAAKC,UAAU9U,EAAUixG,aAAep8F,KAAKC,UAAU7f,KAAKC,MAAM+7G,YACvF8U,GAAeC,IACjB/wH,KAAK6wH,oJA2CA,IAAA5nH,EAAAjJ,KAEDgxH,EAAsD,qBAA9BhxH,KAAKC,MAAM+wH,gBAAkChxH,KAAKC,MAAM+wH,eAChFx7F,EAAmBw7F,GAAkBpxH,OAAO0X,OAAOtX,KAAKwK,MAAMooB,eAAe9W,OAAQ,SAAAxN,GAAC,OAAW,OAANA,IAAcxL,OAAO,EAChH8tH,EAAgB5wH,KAAKwK,MAAMomH,cAAgBhxH,OAAO0X,OAAOtX,KAAKwK,MAAMomH,eAAiB,KACrFK,EAAUL,GAAiBA,EAAc9tH,OAAO,EAEtD,OACEtD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMiK,cAAe,SAAUtP,MAAO,EAAGm7B,EAAG,UAEvCz1B,KAAKwK,MAAM+b,SAAyC,QAA7BvmB,KAAKwK,MAAMomH,cACjCpxH,EAAAC,EAAAC,cAACyM,GAAD,CACEzC,UAAW,CACT0C,UAAU,OACVxC,cAAc,OAEhBS,YAAa,CACXgC,KAAK,QAEP/B,UAAW,CACTgC,GAAG,GAELrT,KAAM,yBAGRuG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACP6W,SAAU,WACVvH,cAAe,SACf8G,GAAI,2BACJglB,GAAI,CAAC,EAAKs7F,GAAmBC,EAAcz7F,EAAmB,QAAU,EAAjC,IAGrCy7F,EACEzxH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPsP,cAAe,UAGbonH,GACExxH,EAAAC,EAAAC,cAACwxH,GAADtxH,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEEszB,QAASvzB,KAAKwK,MAAM+oB,QACpBX,cAAe5yB,KAAKwK,MAAMooB,cAC1BQ,aAAcpzB,KAAKozB,aAAavoB,KAAK7K,MACrCgzB,aAAchzB,KAAKgzB,aAAanoB,KAAK7K,SAG3CR,EAAAC,EAAAC,cAAC6pB,GAAD,CACEpB,KAAMnoB,KAAKC,MAAMkoB,KACjBnd,SAAUhL,KAAKC,MAAM+K,WAEvBxL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+Q,GAAI,iBACJ9G,cAAe,UAGbgnH,EAAc11G,IAAK,SAAC+0G,EAASvjG,GAC3B,IAAM0tF,EAAa6V,EAASv/G,GAI5B,OACElR,EAAAC,EAAAC,cAAC8pB,GAAD5pB,OAAAC,OAAA,GACMoJ,EAAKhJ,MADX,CAEEioB,SAAU,CACRzN,eAAc,GAEhB/J,GAAI0pG,EACJ6V,SAAUA,EACV5xG,YAXgB,SAACrQ,GACnB,OAAQosG,EAAanxG,EAAKhJ,MAAMmsC,YAAX,aAAA3nC,OAAoC21G,IAAgB,MAWvE78F,IAAG,YAAA9Y,OAAc21G,GACjBpyF,eAAgBgoG,GAChB53G,MAAK,gBAAA3T,OAAkB21G,GACvBnyF,OAAM,iBAAAxjB,OAAmB21G,SAMnC56G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEV,OAAQ,OACR0K,WAAY,SACZC,cAAe,MACfC,eAAgB,WAChB6G,GAAI,6BAEJlR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMwiB,GAAI,GACR3iB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMwiB,GAAI,EAAG/D,QAAU,SAAApQ,GAAC,OAAI/E,EAAK8sB,SAAS/nB,KACxCxO,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgN,KAAM,oBACNN,KAAM,MACNlO,MAAQ6B,KAAKwK,MAAMypB,KAAK,EAAI,UAAY,aAG5Cz0B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMye,QAAU,SAAApQ,GAAC,OAAI/E,EAAK+sB,SAAShoB,KACjCxO,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgN,KAAM,qBACNN,KAAM,MACNlO,MAAQ6B,KAAKwK,MAAMypB,KAAKj0B,KAAKwK,MAAM6pB,WAAa,UAAY,cAIlE70B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMgK,WAAY,UAChBnK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACV4P,WAAY,EACZzQ,MAAO,YAHT,QAKQ6B,KAAKwK,MAAMypB,KALnB,OAK6Bj0B,KAAKwK,MAAM6pB,eAM9C70B,EAAAC,EAAAC,cAACC,EAAA,EAAQs2B,GAAT,CACErnB,WAAY,EACZ5P,SAAU,CAAC,EAAE,GACbb,MAAO,YACPkT,UAAW,SACXxC,WAAY,aALd,mCArPU1O,aCwFbgxH,8MA3Fb3mH,MAAQ,KAGR/J,cAAgB,gFAGVT,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,4JAK9CD,KAAKgJ,iMAGkB+B,EAAWqC,mEAClCpN,KAAKgJ,kJAIL,IAAIZ,EAAS,KACP4J,EAAYhS,KAAKC,MAAM+R,UACvB6nG,EAAWj6G,OAAOC,OAAO,GAAGG,KAAKC,MAAM45G,UAEvC5nG,EAAa,CACjBrD,WAAW,EACX5P,SAAS,CAAC,EAAE,GACZb,MAAM,WACN+e,MAAM,CACJiV,SAAS,OACTxJ,SAAU,SACVyJ,aAAc,YAEhB1oB,UAAU,CACRG,eAAe,eAWnB,OANImI,EAAU/R,OAASL,OAAOwH,KAAK4K,EAAU/R,OAAO6C,QAClDlD,OAAOwH,KAAK4K,EAAU/R,OAAO6J,QAAQ,SAAAC,GACnCkI,EAAWlI,GAAKiI,EAAU/R,MAAM8J,KAI5BiI,EAAUrF,MAChB,IAAK,SACHvE,EACE5I,EAAAC,EAAAC,cAACC,EAAA,EAADC,OAAAC,OAAA,GACMoS,EADN,CAEEtI,WAAY,SACZE,eAAgB,WAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEyxH,KAAM,CACJ/kH,KAAM,EACNlO,MAAO,OACPkzH,QAAS,OACTC,UAAW,OACXC,KAAM1X,EAASA,aAKzB,MACA,IAAK,OACL,IAAK,QACL,IAAK,WACL,IAAK,YACL,IAAK,cACH,IAAIzrG,EAAQyrG,EAAS7nG,EAAUrF,MACR,UAAnBqF,EAAUrF,OACZyB,EAAQpO,KAAKS,cAAc4I,YAAYrJ,KAAKS,cAAciB,MAAM0M,GAAOoC,QAAQ,EAAE,GAAG,IAEtFpI,EACE5I,EAAAC,EAAAC,cAACC,EAAA,EACKsS,EAEH7D,GAOT,OAAOhG,SAzFiBjI,aCkPbqxH,8MA5ObhnH,MAAQ,CACNypB,KAAK,EACLV,QAAQ,GACRhN,SAAQ,EACR+pG,YAAY,GACZC,UAAU,KACVl8F,WAAW,KACXzB,cAAc,GACdg+F,cAAc,KACdp8F,gBAAgB,QAIlB/zB,cAAgB,OAoChBuyB,aAAe,SAAAJ,GACbvyB,EAAKwL,SAAS,CACZ+mB,iBACA,WACAvyB,EAAKwwH,mBAITz9F,aAAe,WACb/yB,EAAKwL,SAAS,CACZ+mB,cAAc,CACZj1B,OAAO,OAET,WACA0C,EAAKwwH,mBAaTA,YAAc,WAAe,IAAd58F,EAAczxB,UAAAM,OAAA,QAAAC,IAAAP,UAAA,GAAAA,UAAA,GAAT,KAElB,IAAKnC,EAAKJ,MAAMkyC,UACd,OAAO,EAGTle,EAAOA,GAAc5zB,EAAKmK,MAAMypB,KAEhC,IAAMq8F,EAAcjwH,EAAKJ,MAAMqwH,YAAcjwH,EAAKJ,MAAMqwH,YAAcjwH,EAAKmK,MAAM8lH,YAG7En+E,EAAYvyC,OAAO0X,OAAOjX,EAAKJ,MAAMkyC,WACpBtd,KAAK,SAACp1B,EAAEq1B,GAAH,OAAUr1B,EAAE+Z,UAAYsb,EAAEtb,WAAc,EAAI,IAE3C,OAAvBnZ,EAAKJ,MAAMwxH,SAAoBpxH,EAAKJ,MAAMwxH,QAAQ,IACpDt/E,EAAYA,EAAU+pE,OAAO,EAAE77G,EAAKJ,MAAMwxH,UAI5C,IAAMlB,EAAYp+E,EAAUrvC,OACtBuxB,EAAa3b,KAAKgX,KAAK6gG,EAAUD,GAEjCM,EAAgB,GAEtBz+E,EAAUroC,QAAQ,SAACC,EAAGoG,GAChBA,IAAK8jB,EAAK,GAAGq8F,GAAgBngH,GAAI8jB,EAAK,GAAGq8F,EAAaA,GACxDM,EAAcngH,KAAK1G,KAMvB1J,EAAKwL,SAAS,CACZ0a,SAHc,EAIdgqG,YACAl8F,aACAu8F,8FAhGE5wH,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,wCAIvC+N,GACHA,GACFA,EAAEinB,iBAEJ,IAAMhB,EAAOvb,KAAKG,IAAI,EAAE7Y,KAAKwK,MAAMypB,KAAK,GACxCj0B,KAAK6L,SAAS,CACZooB,0CAIKjmB,GACHA,GACFA,EAAEinB,iBAEJ,IAAMhB,EAAOvb,KAAKC,IAAI3Y,KAAKwK,MAAM6pB,WAAWr0B,KAAKwK,MAAMypB,KAAK,GAC5Dj0B,KAAK6wH,YAAY58F,GACjBj0B,KAAK6L,SAAS,CACZooB,6JAKFj0B,KAAKgJ,YACLhJ,KAAK6wH,mMAqBkB9lH,EAAWqC,2EAClCpN,KAAKgJ,YACC8nH,EAAc1jH,EAAU6mB,OAASj0B,KAAKwK,MAAMypB,KAC5Cy9F,EAAmB9xG,KAAKC,UAAU9U,EAAUonC,aAAevyB,KAAKC,UAAU7f,KAAKC,MAAMkyC,YACvF2+E,GAAeY,IACjB1xH,KAAK6wH,oJA4CA,IAAA5nH,EAAAjJ,KAED4wH,EAAgB5wH,KAAKwK,MAAMomH,cAAgBhxH,OAAO0X,OAAOtX,KAAKwK,MAAMomH,eAAiB,KAE3F,OACEpxH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMiK,cAAe,SAAUtP,MAAO,EAAGm7B,EAAG,UAEvCz1B,KAAKwK,MAAM+b,SAAyC,QAA7BvmB,KAAKwK,MAAMomH,cACjCpxH,EAAAC,EAAAC,cAACyM,GAAD,CACEzC,UAAW,CACT0C,UAAU,OACVxC,cAAc,OAEhBS,YAAa,CACXgC,KAAK,QAEP/B,UAAW,CACTgC,GAAG,GAELrT,KAAM,2BAGRuG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACP6W,SAAU,WACVvH,cAAe,SACf8G,GAAI,4BAGFkgH,GAAiBA,EAAc9tH,OAAO,EACpCtD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPsP,cAAe,UAEfpK,EAAAC,EAAAC,cAAC6pB,GAAD,CACEpB,KAAMnoB,KAAKC,MAAMkoB,KACjBnd,SAAUhL,KAAKC,MAAM+K,WAEvBxL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+Q,GAAI,iBACJ9G,cAAe,UAGbgnH,EAAc11G,IAAK,SAAC2+F,EAASntF,GAC3B,IAAMilG,EAAa9X,EAASA,SAI5B,OACEr6G,EAAAC,EAAAC,cAAC8pB,GAAD5pB,OAAAC,OAAA,GACMoJ,EAAKhJ,MADX,CAEEioB,SAAU,CACRzN,eAAc,GAEhB/J,GAAIihH,EACJ9X,SAAUA,EACVt8F,IAAG,YAAA9Y,OAAcioB,GACjBrO,YAZgB,SAACrQ,GACnB,OAAQ2jH,EAAa1oH,EAAKhJ,MAAMmsC,YAAX,eAAA3nC,OAAsCktH,IAAgB,MAYzE3pG,eAAgBmpG,GAChB/4G,MAAK,gBAAA3T,OAAkBioB,GACvBzE,OAAM,iBAAAxjB,OAAmBioB,SAMnCltB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEV,OAAQ,OACR0K,WAAY,SACZC,cAAe,MACfC,eAAgB,WAChB6G,GAAI,6BAEJlR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMwiB,GAAI,GACR3iB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMwiB,GAAI,EAAG/D,QAAU,SAAApQ,GAAC,OAAI/E,EAAK8sB,SAAS/nB,KACxCxO,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgN,KAAM,oBACNN,KAAM,MACNlO,MAAQ6B,KAAKwK,MAAMypB,KAAK,EAAI,UAAY,aAG5Cz0B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMye,QAAU,SAAApQ,GAAC,OAAI/E,EAAK+sB,SAAShoB,KACjCxO,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgN,KAAM,qBACNN,KAAM,MACNlO,MAAQ6B,KAAKwK,MAAMypB,KAAKj0B,KAAKwK,MAAM6pB,WAAa,UAAY,cAIlE70B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMgK,WAAY,UAChBnK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACV4P,WAAY,EACZzQ,MAAO,YAHT,QAKQ6B,KAAKwK,MAAMypB,KALnB,OAK6Bj0B,KAAKwK,MAAM6pB,eAM9C70B,EAAAC,EAAAC,cAACC,EAAA,EAAQs2B,GAAT,CACErnB,WAAY,EACZ5P,SAAU,CAAC,EAAE,GACbb,MAAO,YACPkT,UAAW,SACXxC,WAAY,aALd,mCA3NU1O,aCsWbyxH,8MAnWbpnH,MAAQ,CACN2nC,UAAU,GACV6pE,UAAU,GACVzC,YAAY,EACZsY,YAAW,EACXC,eAAe,KAIjBrxH,cAAgB,OAChB++G,eAAiB,gFAGXx/G,KAAKw/G,eACPx/G,KAAKw/G,eAAe9+G,SAASV,KAAKC,OAElCD,KAAKw/G,eAAiB,IAAInG,GAAer5G,KAAKC,OAGhDD,KAAKS,cAAgBT,KAAKw/G,eAAe/+G,mKAIzCT,KAAKgJ,YACLhJ,KAAKmN,gMAGkBpC,EAAUqC,mEACjCpN,KAAKgJ,4RAQKrE,QAAQC,IAAI,CACpB5E,KAAKw/G,eAAetE,eACpBl7G,KAAKw/G,eAAe/C,eACpBz8G,KAAKw/G,eAAelG,sDANpBnnE,OACA6pE,OACAzC,OAOIuY,EAAiB3/E,EAAU4wB,OAAQ,SAAC+uD,EAAehkH,GAEvD,OADAgkH,GAAgCtmH,WAAWsC,EAAEosG,QAE7C,IAEiB,EAEnBl6G,KAAK6L,SAAS,CACZsmC,YACA6pE,YACA6V,YALiB,EAMjBtY,cACAuY,uJAKF,OACEtyH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,GAEPkF,EAAAC,EAAAC,cAACq7B,GAAD,CACEzpB,GAAI,CAAC,EAAE,IADT,uBAMGtR,KAAKwK,MAAMqnH,WAeVryH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,GAEPkF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPgX,GAAI,CAAC,EAAE,GACP3H,WAAY,SACZE,eAAgB,SAChBD,cAAe,CAAC,SAAS,QAEzBpK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,CAAC,EAAE,GACPoa,GAAI,CAAC,EAAE,GACPpxB,MAAO,CAAC,EAAE,KACVsP,cAAe,UAEfpK,EAAAC,EAAAC,cAACksG,GAAD,CACE76F,MAAO,KACPk2F,aAAc,KACdntG,MAAO,kBACPsS,UAAW,CAAC,QAAQ,SACpB26F,eAAgB,CAAC,OAAO,QACxB34F,MAAOpO,KAAKS,cAAc4I,YAAYrJ,KAAKwK,MAAMsnH,eAAethH,QAAQ,EAAE,GAAG,MAGjFhR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,CAAC,EAAE,GACP6nB,GAAI,CAAC,EAAE,GACPzN,GAAI,CAAC,EAAE,GACPpxB,MAAO,CAAC,EAAE,KACVsP,cAAe,UAEfpK,EAAAC,EAAAC,cAACksG,GAAD,CACE76F,MAAO,KACPk2F,aAAc,KACdntG,MAAO,mBACPsS,UAAW,CAAC,QAAQ,SACpB26F,eAAgB,CAAC,OAAO,QACxB34F,MAAOpO,KAAKwK,MAAM2nC,UAAUrvC,UAGhCtD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,CAAC,EAAE,GACP6nB,GAAI,CAAC,EAAE,GACPzN,GAAI,CAAC,EAAE,GACPpxB,MAAO,CAAC,EAAE,KACVsP,cAAe,UAEfpK,EAAAC,EAAAC,cAACksG,GAAD,CACE76F,MAAO,KACPk2F,aAAc,KACdntG,MAAO,YACPsS,UAAW,CAAC,QAAQ,SACpB26F,eAAgB,CAAC,OAAO,QACxB34F,MAAOpO,KAAKwK,MAAMwxG,UAAUl5G,UAGhCtD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEw5B,GAAI,CAAC,EAAE,GACP7nB,GAAI,CAAC,EAAE,GACPhX,MAAO,CAAC,EAAE,KACVsP,cAAe,UAEfpK,EAAAC,EAAAC,cAACksG,GAAD,CACE76F,MAAO,KACPk2F,aAAc,KACdntG,MAAO,mBACPsS,UAAW,CAAC,QAAQ,SACpB26F,eAAgB,CAAC,OAAO,QACxB34F,MAAOpO,KAAKS,cAAc4I,YAAYrJ,KAAKwK,MAAM+uG,YAAY,OAInE/5G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACP4kB,GAAI,CAAC,EAAE,IAEP1f,EAAAC,EAAAC,cAACq7B,GAAD,CACEzpB,GAAI,CAAC,EAAE,IADT,oBAKA9R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,CAAC,EAAE,GACPhX,MAAO,EACPoW,GAAI,eACJ9G,cAAe,UAEfpK,EAAAC,EAAAC,cAACqyH,GAADnyH,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEEqwH,YAAa,EACbU,gBAAgB,EAChBhV,UAAWh8G,KAAKwK,MAAMwxG,UACtB7zF,KAAM,CACJ,CACEruB,MAAO,IACPmG,MAAM,CACJ3F,MAAM,CAAC,GAAI,MAEbmuB,OAAO,CACL,CACE9b,KAAK,KACL1M,MAAM,MAKZ,CACEnG,MAAM,OACNyuB,QAAO,EACPtoB,MAAM,CACJ3F,MAAM,CAAC,IAAK,MAEdmuB,OAAO,CACL,CACE9b,KAAK,UAIX,CACE7S,MAAM,QACNmG,MAAM,CACJ3F,MAAM,CAAC,IAAK,KAEdmuB,OAAO,CACL,CACE9b,KAAK,WAIX,CACE4b,QAAO,EACPzuB,MAAM,QACNmG,MAAM,CACJ3F,MAAM,CAAC,IAAK,MAEdmuB,OAAO,CACL,CACE9b,KAAK,WAIX,CACE7S,MAAM,SACNmG,MAAM,CACJ3F,MAAM,CAAC,IAAK,KACZqP,WAAW,CAAC,SAAS,cACrBE,eAAe,CAAC,SAAS,eAE3B2e,YAAY,CACV3e,eAAe,CAAC,SAAS,eAE3B4e,OAAO,CACL,CACE9b,KAAK,aACL1M,MAAM,CACJkiB,GAAG,CAAC,EAAE,KAGV,CACEoG,QAAO,EACP5b,KAAK,kBAQnBnN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,GAEPkF,EAAAC,EAAAC,cAACq7B,GAAD,CACEzpB,GAAI,CAAC,EAAE,IADT,eAKA9R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,CAAC,EAAE,GACPhX,MAAO,EACPoW,GAAI,eACJ9G,cAAe,UAEfpK,EAAAC,EAAAC,cAACsyH,GAADpyH,OAAAC,OAAA,CACE4xH,QAAS,KACLzxH,KAAKC,MAFX,CAGEqwH,YAAa,EACbn+E,UAAWnyC,KAAKwK,MAAM2nC,UACtBhqB,KAAM,CACJ,CACEruB,MAAO,OACPmG,MAAM,CACJ3F,MAAM,CAAC,IAAK,MAEdmuB,OAAO,CACL,CACE9b,KAAK,UAIX,CACE7S,MAAM,UACNmG,MAAM,CACJ3F,MAAM,CAAC,GAAK,KAEdmuB,OAAO,CACL,CACEF,QAAO,EACP5b,KAAK,SACL1M,MAAM,CACJkiB,GAAG,IAGP,CACExV,KAAK,cAIX,CACE7S,MAAM,QACNmG,MAAM,CACJ3F,MAAM,CAAC,IAAK,MAEdmuB,OAAO,CACL,CACE9b,KAAK,WAIX,CACE4b,QAAO,EACPzuB,MAAM,cACNmG,MAAM,CACJ3F,MAAM,CAAC,IAAK,MAEdmuB,OAAO,CACL,CACE9b,KAAK,cACL6b,YAAY,CACV7e,WAAW,aAKnB,CACE4e,QAAO,EACPzuB,MAAM,kBACNmG,MAAM,CACJ3F,MAAM,CAAC,IAAK,MAEdmuB,OAAO,CACL,CACE9b,KAAK,YACL6b,YAAY,CACV7e,WAAW,oBA5Q7BnK,EAAAC,EAAAC,cAACyM,GAAD,CACEzC,UAAW,CACT0C,UAAU,OACVxC,cAAc,OAEhBS,YAAa,CACXgC,KAAK,QAEP/B,UAAW,CACTgC,GAAG,GAELrT,KAAM,4BAnFGkH,aC+SR8xH,8MA9SbznH,MAAQ,CACN0nH,YAAY,GACZpwF,WAAW,CACTlM,OAAO,KACPrP,SAAQ,MAKZ9lB,cAAgB,OAChB++G,eAAiB,OAoBjB2S,iBAAmB,WACjB,OAAO9xH,EAAKI,cAAcuzE,aAAa3zE,EAAKmK,MAAM0nH,cAAgB7xH,EAAKmK,MAAM0nH,YAAY5hH,gBAAkBjQ,EAAKJ,MAAMo/G,gBAAgB/uG,iBAoExI8hH,eAAiB,SAACpkH,GAChB,IAAMkkH,EAAclkH,EAAElO,OAAOsO,MAC7B/N,EAAKwL,SAAS,CACZqmH,4FAzFElyH,KAAKw/G,eACPx/G,KAAKw/G,eAAe9+G,SAASV,KAAKC,OAElCD,KAAKw/G,eAAiB,IAAInG,GAAer5G,KAAKC,OAGhDD,KAAKS,cAAgBT,KAAKw/G,eAAe/+G,mKAIzCT,KAAKgJ,iMAGkB+B,EAAUqC,mEACjCpN,KAAKgJ,qQAQLhJ,KAAK6L,SAAS,CACZi2B,WAAY,CACVlM,OAAO,KACPrP,SAAQ,2IAKF/f,GAAQ,IAAAyC,EAAAjJ,KAGlB,GAFkBA,KAAKS,cAAcuzE,aAAaxtE,GAEpC,CAyCZxG,KAAKw/G,eAAevE,YAAYz0G,EAvCf,SAACuV,EAAG4lB,GAEnB,IAAM+F,EAAY,CAChBjkB,cAAe,WACfC,YAAald,EACbmd,WAAY5H,EAAGpe,QAGbgkC,IACF+F,EAAU/jB,WAAa1a,EAAKxI,cAAcmnC,oBAAoBjG,KAI5DA,GAA8B,UAArB+F,EAAU/pC,SACrBsL,EAAKxI,cAAc+iB,yBAAyBkkB,GAGP,oBAA5Bz+B,EAAKhJ,MAAMoyH,cAA6C,YAAdt2G,EAAGpe,QACtDsL,EAAKhJ,MAAMoyH,eAGbppH,EAAK4C,SAAS,CACZi2B,WAAY,CACVlM,OAAO,KACPrP,SAAQ,MAKU,SAACxK,GACvB,IAAM6Z,EAAS7Z,EAAG8rB,gBAClB5+B,EAAK4C,SAAS,SAACuB,GAAD,MAAgB,CAC5B00B,WAAWliC,OAAAsL,EAAA,EAAAtL,CAAA,GACNwN,EAAU00B,WADL,CAERlM,gBAON51B,KAAK6L,SAAS,SAACuB,GAAD,MAAgB,CAC5B00B,WAAWliC,OAAAsL,EAAA,EAAAtL,CAAA,GACNwN,EAAU00B,WADL,CAERvb,SAAQ,OAId,OAAO,sCAUA,IAAAtY,EAAAjO,KAEDsyH,EAAyD,IAAzCvmH,SAAS/L,KAAKC,MAAMo/G,iBAE1C,OACE7/G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPqP,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGf7J,KAAKC,MAAMuB,QAaZxB,KAAKC,MAAMiB,SAAWlB,KAAKC,MAAMiB,QAAQwV,GAAG,GAC1ClX,EAAAC,EAAAC,cAAC8gB,GAAD,CACE1B,UAAW,CACTxN,GAAG,EACH8P,GAAG,CAAC,EAAE,GACND,GAAG,CAAC,EAAE,GACN7mB,MAAM,CAAC,EAAE,IACT6W,SAAS,YAEXsJ,eAAe,GAGbza,KAAKC,MAAMsyH,UACT/yH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEkQ,IAAK,IACLuB,OAAQ,EACRtB,MAAO,IACPqB,SAAU,YAEV3R,EAAAC,EAAAC,cAACC,EAAA,EAAOm0B,KAAR,CACE8H,UAAQ,EACR1qB,KAAM,QACN7E,KAAM,QACNqZ,UAAW,YACXtH,QAASpe,KAAKC,MAAMy7B,aAI5Bl8B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPqP,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,EACJ1C,WAAY,EACZ5P,SAAU,CAAC,EAAE,GACbb,MAAO,YACPkT,UAAW,UALb,YAOYrR,KAAKS,cAAc4C,iBAAiBrD,KAAKC,MAAMiB,QAAQ,IAAIsP,QAAQ,GAP/E,IAOoFxQ,KAAKS,cAAcG,gBAAgB,CAAC,aAAa,QAAQ,cAP7I,eASApB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,EACJ1C,WAAY,EACZzQ,MAAO,YACPkT,UAAW,UAJb,qBAQA7R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,EACJhX,MAAO,EACPqP,WAAY,SACZE,eAAgByoH,EAAgB,SAAW,WAGzCA,EACE9yH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEiP,WAAY,EACZ5P,SAAU,CAAC,EAAE,GACbb,MAAO,YACPkT,UAAW,UAJb,eASA7R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPkM,QAASxG,KAAKC,MAAMuB,WAM1BxB,KAAKwK,MAAMs3B,YAAc9hC,KAAKwK,MAAMs3B,WAAWvb,QAC7C/mB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPsP,cAAe,UAEfpK,EAAAC,EAAAC,cAAC2rC,GAAD,CACE7I,KAAMxiC,KAAKC,MAAMuiC,KACjB0C,SAAQ,wBACRvY,KAAM3sB,KAAKwK,MAAMs3B,WAAWlM,OAC5BqP,WAAU,iCACVM,kBAAmBvlC,KAAKulC,kBAAkB16B,KAAK7K,SAInDR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPqP,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,EACJ1C,WAAY,EACZzQ,MAAO,YACPkT,UAAW,UAJb,qBAQA7R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgZ,IAAK,EACLvP,KAAM,OACN9O,MAAO,OACP8sB,UAAU,EACVnoB,OAAQ,QACRK,aAAc,EACdsP,WAAY,IACZyC,UAAW,SACXmM,UAAW,kBACXpP,MAAOpO,KAAKwK,MAAM0nH,YAClB5qG,YAAW,0BACX9F,SAAUxhB,KAAKoyH,eAAevnH,KAAK7K,MACnCqnB,OAAM,aAAA5iB,OAAezE,KAAKC,MAAM1G,MAAMR,OAAO4D,WAE/C6C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,EACJ5kB,MAAO,EACPqP,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACmsC,GAAD,CACEhmB,YAAa,CACXJ,GAAG,EACHzmB,SAAS,CAAC,EAAE,GACZ1E,MAAM,CAAC,OAAO,QACdlC,UAAU4H,KAAKmyH,oBAEjB9zG,YAAc,SAAArQ,GAAC,OAAIC,EAAKgtG,YAAYhtG,EAAKzD,MAAM0nH,eAPjD,YAWA1yH,EAAAC,EAAAC,cAACmsC,GAAD,CACEhmB,YAAa,CACXJ,GAAG,EACHzmB,SAAS,CAAC,EAAE,GACZ1E,MAAM,CAAC,OAAO,QACdorB,UAAU1lB,KAAKC,MAAM1G,MAAMR,OAAO6D,OAClCxE,SAAS4H,KAAKC,MAAMo/G,gBAAgB/uG,gBAAkBtQ,KAAKC,MAAMuB,QAAQ8O,eAE3E+N,YAAc,SAAArQ,GAAC,OAAIC,EAAKgtG,YAAYhtG,EAAKhO,MAAMuB,WARjD,qBAmBZhC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEiP,WAAY,EACZ5P,SAAU,CAAC,EAAE,GACbb,MAAO,YACPkT,UAAW,UAJb,sBAMsBrR,KAAKS,cAAcG,gBAAgB,CAAC,aAAa,QAAQ,cAN/E,uBAxKApB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,CAAC,EAAE,KACVqP,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACm0G,GACK7zG,KAAKC,gBAhIIE,aC6CZqyH,oLA7CJ,IAAAnyH,EAAAL,KACP,OACER,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,GAEPkF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,EACJhX,MAAO,EACPqP,WAAY,SACZC,cAAe,MACfC,eAAgB,cAEhBrK,EAAAC,EAAAC,cAACisG,GAAD/rG,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEEhH,KAAM,aACNs5C,KAAM,CAAC,kBACPvnC,SAAUhL,KAAKC,MAAM+K,SACrBqT,YAAc,SAAArQ,GAAC,OAAI3N,EAAKJ,MAAMmsC,YAAY,SAG9C5sC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,GAEPkF,EAAAC,EAAAC,cAACq7B,GAAD,CACEzpB,GAAI,CAAC,EAAE,IADT,kBAKA9R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwhB,GAAI,CAAC,EAAE,GACP7P,GAAI,CAAC,EAAE,GACPhX,MAAO,EACPsP,cAAe,SACf8G,GAAI,sBAEJlR,EAAAC,EAAAC,cAAC+yH,GACKzyH,KAAKC,iBAtCAE,kCCmrCRuyH,8MA7qCbloH,MAAQ,CACN1Q,MAAM,GACNg5B,QAAQ,GACRy8E,SAAQ,EACRojB,YAAY,EACZC,UAAU,KACVrzG,YAAY,GACZuiB,WAAY,CACVlM,OAAO,KACPrP,SAAQ,GAEVu1E,WAAU,EACV+2B,WAAU,EACVC,WAAW,KACXC,aAAa,KACbC,aAAY,EACZ9H,cAAc,KACd+H,gBAAgB,GAChBC,iBAAgB,EAChBC,iBAAiB,KACjBC,iBAAiB,KACjBC,iBAAiB,KACjBC,kBAAkB,KAClBC,mBAAmB,KACnB3hF,mBAAmB,QAIrBnxC,cAAgB,OAChB++G,eAAiB,gFAGXx/G,KAAKw/G,eACPx/G,KAAKw/G,eAAe9+G,SAASV,KAAKC,OAElCD,KAAKw/G,eAAiB,IAAInG,GAAer5G,KAAKC,OAGhDD,KAAKS,cAAgBT,KAAKw/G,eAAe/+G,mKAIzCT,KAAKgJ,YACLhJ,KAAKmN,gMAGkBpC,EAAUqC,mEACjCpN,KAAKgJ,YACLhJ,KAAKwzH,eACLxzH,KAAKyzH,cAEoBrmH,EAAUwlH,YAAc5yH,KAAKwK,MAAMooH,WAEJ,WAAhC5yH,KAAKwK,MAAM4oH,kBACjCpzH,KAAK0zH,+JAKP,IAAM9hF,EAAqB5xC,KAAKS,cAAcG,gBAAgB,CAAC,aAAa,QAAQ,uBAC9EqyH,EAAkB,CACtB,CAACliH,MAAM,oBAAoB3C,MAAM,OAGnCxO,OAAOwH,KAAKwqC,GAAoB9nC,QAAS,SAAAykD,GACvC0kE,EAAgBxiH,KAAK,CAACM,MAAMw9C,EAAangD,MAAMmgD,MAGjD0kE,EAAgBxiH,KAAK,CAACM,MAAM,SAAS3C,MAAM,WAE3CpO,KAAK6L,SAAS,CACZonH,kBACArhF,2DAIQ86B,EAAM1+D,GAAYxL,UAAAM,OAAA,QAAAC,IAAAP,UAAA,IAAAA,UAAA,OACxB4L,EAAQJ,EAAElO,OAAOsO,MACrBpO,KAAK6L,SAALjM,OAAA2b,EAAA,EAAA3b,CAAA,GACG8sE,EAAOt+D,2CAKV,IAAM0tF,EAAY97F,KAAKwK,MAAM1Q,MAAMgJ,OAAO,GAAK9C,KAAKwK,MAAM+U,YAAYzc,OAAO,GAAKlD,OAAO0X,OAAOtX,KAAKwK,MAAMsoB,SAAShwB,OAAO,EACvHg5F,IAAc97F,KAAKwK,MAAMsxF,WAC3B97F,KAAK6L,SAAS,CACZiwF,uDAK+B,IAAtBs3B,EAAsB5wH,UAAAM,OAAA,QAAAC,IAAAP,UAAA,GAAAA,UAAA,GAAL,KAC9B4wH,EAAmBA,GAAsCpzH,KAAKwK,MAAM4oH,iBAEpE,IAAIO,EAAc,KAClB,IACEA,EAAmC,WAArBP,EAAgCxzG,KAAKwkB,MAAMpkC,KAAKwK,MAAMooH,WAAa5yH,KAAKwK,MAAMonC,mBAAmBwhF,GAC/G,MAAO1wF,IAGT,OAAOixF,iDAGkC,IAAtBP,EAAsB5wH,UAAAM,OAAA,QAAAC,IAAAP,UAAA,GAAAA,UAAA,GAAL,KAEhC2wH,EAAmB,KAGnBI,EAAqB,KAEnBI,EAAc3zH,KAAK4zH,eAAeR,GACpCO,IAEFR,GADAI,EAAqBI,EAAY73G,OAAQ,SAAA+3G,GAAC,OAAMA,EAAEC,UAAuB,aAAXD,EAAEzqH,MAAuByqH,EAAEE,OAAOjxH,OAAO,GAAK,CAAC,aAAa,WAAW8xB,SAASi/F,EAAEG,oBAC1G94G,IAAK,SAAC24G,EAAEnnG,GAAH,MAAc,CACrC3b,MAAM8iH,EAAElnH,KACRyB,MAAMse,MAITm5E,QAAQ,CAAC90F,MAAM,oBAAoB3C,MAAM,OAK5DpO,KAAK6L,SAAS,CACZknH,aArBiB,KAsBjBI,mBACAE,iBArBqB,KAsBrBC,kBArBsB,KAsBtBC,8DAIWvlH,GACb,IAAMolH,EAAmBplH,EAAElO,OAAOsO,MAGlC,GAFgCglH,IAAqBpzH,KAAKwK,MAAM4oH,iBAEpC,CAG1B,IAGMnoH,EAAW,CACfmoH,mBACAC,iBALqB,KAMrBC,kBALsB,MASxB,GAAyB,OAArBF,EACkBpzH,KAAK4zH,eAAeR,GAEtCpzH,KAAK0zH,qBAAqBN,GAE1BnoH,EAASkoH,iBAAmB,KAMhCnzH,KAAK6L,SAASZ,2CAIH+C,GACb,IACI+kH,EAAe,KACbO,EAAoBtlH,EAAElO,OAAOsO,MAC/BilH,EAAmBrzH,KAAKwK,MAAM+oH,mBAAmB77G,KAAM,SAACm8G,EAAEnnG,GAAH,OAAcA,IAAU3gB,SAASunH,KAExFD,EACFN,EAAe,IAAIhlE,MAAMslE,EAAiBU,OAAOjxH,QAEjDuwH,EAAoB,KAGtBrzH,KAAK6L,SAAS,CACZ8mH,YAZkB,EAalBI,eACAM,mBACAC,4DAGUllH,EAAMhF,GAClB,GAAY,OAARgF,EACF,OAAO,EAET,IAAI6lH,GAAQ,EACZ,GAAa,SAAT7qH,EACF6qH,EAAQj0H,KAAKS,cAAcszE,YAAY3lE,OAClC,CACL,IAAM8lH,EAAel0H,KAAKm0H,sBAAsB/qH,GAC5C8qH,IACFD,EAAiD,OAAzC7lH,EAAM2H,WAAW+E,MAAMo5G,IAGnC,OAAOD,gDAEa7qH,GAAwB,IAAnBgrH,EAAmB5xH,UAAAM,OAAA,QAAAC,IAAAP,UAAA,IAAAA,UAAA,GACxC0xH,EAAe,KACnB,OAAQ9qH,GACN,IAAK,UACH8qH,EAAe,sBACjB,MACA,IAAK,YACHA,EAAe,+BACjB,MACA,IAAK,SACHA,EAAe,SACjB,MACA,IAAK,OACHA,EAAe,QACjB,MACA,IAAK,UACL,IAAK,QACHA,EAAe,SACjB,MACA,QACEA,EAAe,KAQnB,OAJKE,GAAgBF,IACnBA,EAAe,IAAIG,OAAOH,IAGrBA,wCAGI,IAAAjrH,EAAAjJ,KAEX,IAAKA,KAAKwK,MAAMuoH,eAAiB/yH,KAAKwK,MAAM6oH,iBAC1C,OAAO,EAGT,IAAMU,EAAS/zH,KAAKwK,MAAM6oH,iBAAiBU,OACvCf,EAAcpzH,OAAO0X,OAAOtX,KAAKwK,MAAMuoH,cAAcjwH,SAAWixH,EAAOjxH,OAEvEkwH,GACFpzH,OAAO0X,OAAOtX,KAAKwK,MAAMuoH,cAAcjpH,QAAS,SAACw3B,EAAWgzF,GAC1D,IAAMC,EAAYR,EAAOO,GACnBJ,EAAejrH,EAAKkrH,sBAAsBI,EAAUnrH,MACpDorH,GAAaN,GAAkD,OAAnC5yF,EAAWxmB,MAAMo5G,GACnDlB,EAAcA,GAAewB,IAM7BxB,GAA+C,WAAhChzH,KAAKwK,MAAM4oH,mBAC5BJ,EAAcA,GAAehzH,KAAKy0H,cAAcz0H,KAAKwK,MAAMooH,UAAU,SAAW5yH,KAAKy0H,cAAcz0H,KAAKwK,MAAM0gH,cAAc,YAK1H8H,IAAgBhzH,KAAKwK,MAAMwoH,aAC7BhzH,KAAK6L,SAAS,CACZmnH,oDAKMhlH,EAAEsmH,GACZ,IAAI3B,EAAc3kH,EAAElO,OAAOsO,MAC3BpO,KAAK6L,SAAS,CACZ8mH,oDAIQ3kH,EAAEsmH,GACZ,IAAIhzF,EAAatzB,EAAElO,OAAOsO,MAE1BpO,KAAK6L,SAAS,SAACuB,GAAD,MAAgB,CAC5B2lH,aAAanzH,OAAAsL,EAAA,EAAAtL,CAAA,GACRwN,EAAU2lH,aADHnzH,OAAA2b,EAAA,EAAA3b,CAAA,GAET00H,EAAYhzF,8CAMjB,GAA8B,OAA1BthC,KAAKwK,MAAMsoH,WAAoB,CACjC,IAAIhgG,EAAU9yB,KAAKwK,MAAMsoB,QACzB,GAAIA,EAAQ9yB,KAAKwK,MAAMsoH,YAAY,QAC1BhgG,EAAQ9yB,KAAKwK,MAAMsoH,YAC1BhgG,EAAUlzB,OAAO0X,OAAOwb,GAOxB9yB,KAAK6L,SAAS,CACZinB,UACAggG,WARiB,KASjBC,aARmB,KASnBK,iBARuB,KASvBC,iBARuB,KASvBC,kBARwB,6CAcrB,IAAArlH,EAAAjO,KAGH+zH,EAASn0H,OACE0X,OAAOtX,KAAKwK,MAAMuoH,cAAcj3G,OAAQ,SAAAxN,GAAC,OAAIA,EAAExL,OAAO,IACtDoY,IAAK,SAAComB,EAAWgzF,GAChB,IAAMC,EAAYtmH,EAAKzD,MAAM6oH,iBAAiBU,OAAOO,GACrD,OAAQC,EAAUnrH,MAChB,IAAK,YACHk4B,EAAaA,EAAWvd,MAAM,KAChC,MACA,IAAK,YACHud,EAAaA,EAAWvd,MAAM,KAAK7I,IAAK,SAAA8B,GAAC,OAAI/O,EAAKxN,cAAciB,MAAMsb,KACxE,MACA,IAAK,UACHskB,EAAarzB,EAAKxN,cAAciB,MAAM4/B,GACxC,MACA,QACoC,OAA9BizF,EAAUnrH,KAAKkhB,QAAQ,KACzBgX,EAAaA,EAAWvd,MAAM,MAKpC,OAAOud,IAGzB,GAAIyyF,EAAOjxH,OAAO9C,KAAKwK,MAAM6oH,iBAAiBU,OAAOjxH,OACnD,OAAO,EAIT,IAAIhD,EAAS,KACb,GAAoC,WAAhCE,KAAKwK,MAAM4oH,iBAA8B,CAC3C,IAAMj3E,EAAWn8C,KAAKS,cAAcukB,kBAAkBhlB,KAAKwK,MAAM4oH,kBACjE,IAAKj3E,EACH,OAAO,EAEPr8C,EAASq8C,EAASstB,aAEf,CAEL,IADyBzpE,KAAKS,cAAcszE,YAAY/zE,KAAKwK,MAAMooH,WAEjE,OAAO,EAEP9yH,EAASE,KAAKwK,MAAM0gH,cAIxB,IAAM0H,EAAY5yH,KAAKwK,MAAMooH,UACvB1H,EAAgBlrH,KAAKwK,MAAM0gH,cAC3BwJ,EAAa10H,KAAKwK,MAAM6oH,iBAAiBU,OAAO74G,IAAK,SAAA/K,GAAC,OAAKA,EAAE/G,OAC7DurH,EAAW30H,KAAKC,MAAMuiC,KAAKC,IAAIxd,IAAI2vG,iBAAiBF,EAAWX,GAC/D5rD,EAAYnoE,KAAKwK,MAAM6oH,iBAAiB1mH,KAAK,IAAI+nH,EAAW5jH,KAAK,KAAK,IAGtE5T,EAAS,CACbqsC,OAAO,CACLn7B,MAJUpO,KAAKwK,MAAMmoH,YAAc3yH,KAAKS,cAAciB,MAAM1B,KAAKwK,MAAMmoH,aAAaniH,QAAQ,GAAKxQ,KAAKS,cAAciB,MAAM,GAAG8O,QAAQ,GAKrI1Q,SACA60H,WACAxsD,aAEFyqD,YACA1H,gBACA6I,OAAO/zH,KAAKwK,MAAMuoH,aAClBr2E,SAAS18C,KAAKwK,MAAM6oH,iBACpBl3E,SAASn8C,KAAKwK,MAAM4oH,iBACpBjrD,UAAUnoE,KAAKwK,MAAM8oH,mBAGvBhlE,QAAQ6K,IAAI46D,EAAO72H,GAEnB,IACM41B,EAAUlzB,OAAO0X,OAAOtX,KAAKwK,MAAMsoB,SAEX,OAA1B9yB,KAAKwK,MAAMsoH,WACbhgG,EAAQriB,KAAKvT,GAEb41B,EAAQ9yB,KAAKwK,MAAMsoH,YAAc51H,EAKnC8C,KAAK6L,SAAS,CACZinB,UACA+/F,WAbgB,EAchBC,WALiB,6CASPA,GAEZ,IAAK9yH,KAAKwK,MAAMsoB,QAAQggG,GACtB,OAAO,EAGT,GAAIA,IAAe9yH,KAAKwK,MAAMsoH,WAC5B,OAAO,EAGT,IAAM51H,EAAS8C,KAAKwK,MAAMsoB,QAAQggG,GAG5BC,EAAe71H,EAAO62H,OACtBnB,EAAY11H,EAAO01H,UACnBD,EAAcz1H,EAAOqsC,OAAOn7B,MAC5BglH,EAAmBl2H,EAAOi/C,SAC1Bk3E,EAAmBn2H,EAAOw/C,SAC1BwuE,EAAgBhuH,EAAOguH,cACvBoI,EAAoBp2H,EAAOirE,UAEjCnoE,KAAK6L,SAAS,CACZ+mH,YACAC,WAXgB,EAYhBC,aACAH,cACAI,eACA7H,gBACAkI,mBACAC,mBACAC,2DAIST,GACX,GAAIA,IAAc7yH,KAAKwK,MAAMqoH,UAC3B,OAAO,EAOT7yH,KAAK6L,SAAS,CACZgnH,YACAC,WANiB,KAOjBM,iBANuB,KAOvBC,iBANuB,2JAWzBrzH,KAAK6L,SAAS,CACZi2B,WAAY,CACVlM,OAAO,KACPrP,SAAQ,4IAKDvY,GAAE,IAAAsX,EAAAtlB,KACbgO,EAAEinB,iBAEF,IAuDMulF,EAAU,GACVljG,EAAS,GACTmjG,EAAa,GACbC,EAAY,GACZn7F,EAAc,IAAIvf,KAAKwK,MAAM1Q,MAAM,KAAKkG,KAAKwK,MAAM+U,YAmBzD,OAjBA3f,OAAO0X,OAAOtX,KAAKwK,MAAMsoB,SAAShpB,QAAS,SAAA5M,GACzCoa,EAAO7G,KAAKvT,EAAOqsC,OAAOn7B,OAC1BosG,EAAQ/pG,KAAKvT,EAAOqsC,OAAOzpC,QAC3B46G,EAAUjqG,KAAKvT,EAAOqsC,OAAOorF,UAC7Bla,EAAWhqG,KAAKvT,EAAOqsC,OAAO4+B,aAGhCnoE,KAAKw/G,eAAe3E,QAAQL,EAASljG,EAAQmjG,EAAYC,EAAWn7F,EApEnD,SAACxD,EAAG4lB,GAEnB,IAAM+F,EAAY,CAChB/jB,WAAY5H,EAAGpe,OACf+lB,YAAa,UACbD,cAAe,YAGbke,IACF+F,EAAU/jB,WAAa2B,EAAK7kB,cAAcmnC,oBAAoBjG,KAI5DA,GAA8B,UAArB+F,EAAU/pC,SACrB2nB,EAAK7kB,cAAc+iB,yBAAyBkkB,GAG9C,IAEMz8B,EAAW,CACf62B,WAAY,CACVlM,OAAO,KACPrP,SAAQ,IALsB,YAAdxK,EAAGpe,QAUrBsN,EAAS0nH,YAAc,EACvB1nH,EAAS2nH,UAAY,KACrB3nH,EAAS4nH,UAAY,KACrB5nH,EAAS6nH,WAAa,KACtB7nH,EAAS8nH,aAAe,KACxB9nH,EAASigH,cAAgB,KACzBjgH,EAASioH,iBAAkB,EAC3BjoH,EAASmoH,iBAAmB,KAC5BnoH,EAASkoH,iBAAmB,KAC5BloH,EAASooH,iBAAmB,KAC5BpoH,EAASqoH,kBAAoB,MAE7BroH,EAASskG,SAAU,EAGrBjqF,EAAKzZ,SAASZ,IAGQ,SAAC8Q,GACvB,IAAM6Z,EAAS7Z,EAAG8rB,gBAClBviB,EAAKzZ,SAAS,SAACuB,GAAD,MAAgB,CAC5B00B,WAAWliC,OAAAsL,EAAA,EAAAtL,CAAA,GACNwN,EAAU00B,WADL,CAERlM,gBAqBN51B,KAAK6L,SAAS,SAACuB,GAAD,MAAgB,CAC5B00B,WAAWliC,OAAAsL,EAAA,EAAAtL,CAAA,GACNwN,EAAU00B,WADL,CAERvb,SAAQ,QAIL,4EAOA,IAAAsuG,EAAA70H,KAEP,OACER,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPqP,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACq7B,GAAD,CACEzpB,GAAI,CAAC,EAAE,IADT,mBAMAtR,KAAKwK,MAAM0oH,gBACT1zH,EAAAC,EAAAC,cAAC8gB,GAAD,CACE1B,UAAW,CACTsC,GAAG,EACHD,GAAG,EACH7mB,MAAM,CAAC,EAAE,UAGXkF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgK,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgN,KAAM,OACN0lB,MAAO,SACPhmB,KAAOrM,KAAKC,MAAM+K,SAAW,QAAU,QACvC7M,MAAO6B,KAAKC,MAAM1G,MAAMR,OAAOkE,aAAaU,OAAOC,YAErD4B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,EACJtQ,WAAY,EACZ5P,SAAU,CAAC,EAAE,GACbb,MAAO,YACPkT,UAAW,UALb,gDAaNrR,KAAKC,MAAMi6G,OAASl6G,KAAKC,MAAMi6G,MAAMhhF,IAAIl5B,KAAKC,MAAMo8G,mBAClD78G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPwhG,UAAW97F,KAAKwK,MAAMsxF,UACtBS,SAAUv8F,KAAKg8F,aAAanxF,KAAK7K,OAEjCR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,EACJhX,MAAO,EACPsP,cAAe,CAAC,SAAS,OACzBC,eAAgB,CAAC,SAAS,kBAE1BrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,CAAC,EAAE,KACVsP,cAAe,UAEfpK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwpB,GAAI,EACJ7uB,MAAO,EACPgX,GAAI,CAAC,EAAE,GACPjT,YAAa,UACb+8B,aAAc,yBAEd57B,EAAAC,EAAAC,cAACC,EAAA,EAAQyf,GAAT,CACEpgB,SAAU,CAAC,EAAE,GACb4P,WAAY,CAAC,EAAE,IAFjB,yBAOFpP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEiK,cAAe,UAEfpK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPyW,MAAO,QACP+qF,UAAW97F,KAAKwK,MAAMsxF,WAEtBt8F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEynB,UAAQ,EACR9sB,MAAO,EACP8O,KAAM,OACN4V,UAAWC,KAAOnnB,MAClBsW,MAAOpO,KAAKwK,MAAM1Q,MAClBwtB,YAAa,yBACb9F,SAAW,SAAAxT,GAAC,OAAI6mH,EAAKC,YAAY,QAAQ9mH,QAI/CxO,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEiK,cAAe,UAEfpK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPyW,MAAO,cACP+qF,UAAW97F,KAAKwK,MAAMsxF,WAEtBt8F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEynB,UAAQ,EACR++D,KAAM,EACN7rF,MAAO,EACP0kB,UAAWC,KAAOnnB,MAClBsW,MAAOpO,KAAKwK,MAAM+U,YAClB+H,YAAa,+BACb9F,SAAW,SAAAxT,GAAC,OAAI6mH,EAAKC,YAAY,cAAc9mH,SAMvDxO,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,CAAC,EAAE,KACVsP,cAAe,UAEfpK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwpB,GAAI,EACJ7uB,MAAO,EACPgX,GAAI,CAAC,EAAE,GACPjT,YAAa,UACb+8B,aAAc,yBAEd57B,EAAAC,EAAAC,cAACC,EAAA,EAAQyf,GAAT,CACEpgB,SAAU,CAAC,EAAE,GACb4P,WAAY,CAAC,EAAE,IAFjB,YAOFpP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEiK,cAAe,UAGbhK,OAAO0X,OAAOtX,KAAKwK,MAAMsoB,SAAS5X,IAAK,SAAChe,EAAO63H,GAC7C,OACEv1H,EAAAC,EAAAC,cAAC8gB,GAAD,CACE1B,UAAW,CACTsC,GAAG,EACHD,GAAG,EACH7P,GAAG,EACHhX,MAAM,GAER6kB,iBAAkB,CAChB7S,GAAG,EACHkZ,GAAG,EACH3b,eAAe,UAEjByV,WAAY,CACVtgB,SAAS,EACT4P,WAAW,GAEb6L,eAAe,EACf8C,IAAG,UAAA9Y,OAAYswH,GACf12G,YAAc,SAAArQ,GAAC,OAAI6mH,EAAKG,cAAcD,IACtCj7H,MAAQ+6H,EAAKrqH,MAAMsoH,aAAeiC,EAAc,cAAgB,MAG9DF,EAAKrqH,MAAMsoH,aAAeiC,EACxBv1H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPqP,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEud,MAAO,CACL5iB,MAAM,OACNoU,QAAQ,OACR/E,WAAW,UACXC,cAAc,UAEhBmH,MAAO,mBAEPvR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEud,MAAO,CACL5iB,MAAM,QAER8sB,UAAU,EACVhZ,MAAOymH,EAAKrqH,MAAM4oH,iBAClBtzG,QAAS+0G,EAAKrqH,MAAMyoH,gBACpBzxG,SAAUqzG,EAAKI,eAAepqH,KAAKgqH,MAIrCA,EAAKrqH,MAAM4oH,kBAAoD,WAAhCyB,EAAKrqH,MAAM4oH,kBAExC5zH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPsP,cAAe,UAEfpK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPyW,MAAO,mBACP+qF,UAAW+4B,EAAKrqH,MAAMsxF,WAEtBt8F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEynB,UAAQ,EACR9sB,MAAO,EACP8O,KAAM,OACN4V,UAAWC,KAAOnnB,MAClBwvB,YAAa,0BACb4tG,QAASL,EAAKV,sBAAsB,WAAU,GAC9C3yG,SAAW,SAAAxT,GAAC,OAAI6mH,EAAKC,YAAY,gBAAgB9mH,EAAE,YACnDI,MAAOymH,EAAKrqH,MAAM0gH,cAAgB2J,EAAKrqH,MAAM0gH,cAAgB,MAGjE1rH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPyW,MAAO,aACP+qF,UAAW+4B,EAAKrqH,MAAMsxF,WAEtBt8F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEynB,UAAQ,EACR++D,KAAM,EACN7rF,MAAO,EACP0kB,UAAWC,KAAOnnB,MAClBwvB,YAAa,kCACb9F,SAAW,SAAAxT,GAAC,OAAI6mH,EAAKC,YAAY,YAAY9mH,EAAE,SAC/CI,MAAOymH,EAAKrqH,MAAMooH,UAAYiC,EAAKrqH,MAAMooH,UAAY,OAO7DiC,EAAKrqH,MAAM4oH,kBAAoByB,EAAKrqH,MAAM2oH,kBACxC3zH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEud,MAAO,CACL5iB,MAAM,OACNoU,QAAQ,OACR/E,WAAW,UACXC,cAAc,UAEhBmH,MAAO,mBAEPvR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEud,MAAO,CACL5iB,MAAM,QAER8sB,UAAU,EACVtH,QAAS+0G,EAAKrqH,MAAM2oH,iBACpB3xG,SAAUqzG,EAAKM,eAAetqH,KAAKgqH,GACnCzmH,MAAOymH,EAAKrqH,MAAM8oH,kBAAoBuB,EAAKrqH,MAAM8oH,kBAAoB,MAK3EuB,EAAKrqH,MAAM6oH,kBAAoBwB,EAAKrqH,MAAM6oH,iBAAiB+B,SACzD51H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoR,MAAK,QACLmM,MAAO,CACL5iB,MAAM,OACNoU,QAAQ,OACR/E,WAAW,UACXC,cAAc,WAGhBpK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEynB,UAAQ,EACR9sB,MAAO,EACP8O,KAAM,SACN4V,UAAWC,KAAOnnB,MAClBwvB,YAAW,kBACX9F,SAAW,SAAAxT,GAAC,OAAI6mH,EAAKQ,YAAYrnH,IACjCI,MAAOymH,EAAKrqH,MAAMmoH,YAAckC,EAAKrqH,MAAMmoH,YAAc,KAM/DkC,EAAKrqH,MAAM6oH,kBACTwB,EAAKrqH,MAAM6oH,iBAAiBU,OAAO74G,IAAK,SAACpjB,EAAMw8H,GAC7C,IAAMgB,EAAY,CAAC,UAAU,QAAQ1gG,SAAS98B,EAAMsR,MAAQ,SAAW,OACjE8qH,EAAeW,EAAKV,sBAAsBr8H,EAAMsR,MAAK,GAC3D,OACE5J,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEud,MAAO,CACL5iB,MAAM,OACNoU,QAAQ,OACR/E,WAAW,UACXC,cAAc,UAEhB2T,IAAG,SAAA9Y,OAAW6vH,GACdvjH,MAAK,GAAAtM,OAAK3M,EAAM6U,KAAX,MAAAlI,OAAoB3M,EAAMsR,KAA1B,MAEL5J,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEynB,UAAQ,EACR9sB,MAAO,EACP8O,KAAMksH,EACNJ,QAAShB,EACTl1G,UAAWC,KAAOnnB,MAClBwvB,YAAW,GAAA7iB,OAAK3M,EAAM6U,KAAX,MAAAlI,OAAoB3M,EAAMsR,KAA1B,KACXoY,SAAW,SAAAxT,GAAC,OAAI6mH,EAAKU,YAAYvnH,EAAEsmH,IACnClmH,MAAOymH,EAAKrqH,MAAMuoH,aAAauB,GAAcO,EAAKrqH,MAAMuoH,aAAauB,GAAc,QAO7FO,EAAKrqH,MAAM4oH,kBAAoByB,EAAKrqH,MAAM6oH,kBACxC7zH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,EACJhX,MAAO,EACPqP,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACmsC,GAAD,CACEhmB,YAAa,CACX1E,GAAG,CAAC,EAAE,GACN7mB,MAAM,CAAC,EAAE,QACT8O,KAAK,SACLhR,UAAUy8H,EAAKrqH,MAAMwoH,aAEvB30G,YAAaw2G,EAAKW,UAAU3qH,KAAKgqH,IAPnC,eAWAr1H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,EACJ/gB,MAAO,MACP8oB,WAAY,MACZ7I,QAASy2G,EAAKY,aAAa5qH,KAAKgqH,IAJlC,mBAYRr1H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPqP,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACGzC,EAAOi/C,SADV,MACuBj/C,EAAOqsC,OAAO4+B,WAErC3oE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,EAAG,CAAC,MAAM,OACVzK,aAAc,MACdqK,WAAY,SACZE,eAAgB,SAChBzL,gBAAkBy2H,EAAK50H,MAAM1G,MAAMR,OAAOkE,aAAaS,SAASd,QAEhE4C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgN,KAAM,OACN0lB,MAAO,SACPl0B,MAAO,SACPkO,KAAOwoH,EAAK50H,MAAM+K,SAAW,QAAU,iBAWrDhL,KAAKwK,MAAMsoB,SAAWlzB,OAAO0X,OAAOtX,KAAKwK,MAAMsoB,SAAShwB,OAAO9C,KAAKC,MAAMq8G,wBAC1E98G,EAAAC,EAAAC,cAAC8gB,GAAD,CACE1B,UAAW,CACTsC,GAAG,EACHD,GAAG,EACH7P,GAAG,EACHhX,MAAM,GAER6kB,iBAAkB,CAChB7S,GAAG,EACHkZ,GAAG,EACH3b,eAAe,UAEjByV,WAAY,CACVtgB,SAAS,EACT4P,WAAW,GAEb6L,eAAe,EACf4D,YAAc,SAAArQ,GAAC,OAAI6mH,EAAKa,cAAa,IACrC57H,MAAQkG,KAAKwK,MAAMqoH,UAAY,aAAe,MAG5C7yH,KAAKwK,MAAMqoH,UACTrzH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPqP,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEud,MAAO,CACL5iB,MAAM,OACNoU,QAAQ,OACR/E,WAAW,UACXC,cAAc,UAEhBmH,MAAO,mBAEPvR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEud,MAAO,CACL5iB,MAAM,QAER8sB,UAAU,EACVtH,QAAS9f,KAAKwK,MAAMyoH,gBACpBzxG,SAAUxhB,KAAKi1H,eAAepqH,KAAK7K,SAIrCA,KAAKwK,MAAM4oH,kBAAoD,WAAhCpzH,KAAKwK,MAAM4oH,kBAExC5zH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPsP,cAAe,UAEfpK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPyW,MAAO,mBACP+qF,UAAW97F,KAAKwK,MAAMsxF,WAEtBt8F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEynB,UAAQ,EACR9sB,MAAO,EACP8O,KAAM,OACN4V,UAAWC,KAAOnnB,MAClBwvB,YAAa,0BACb4tG,QAASl1H,KAAKm0H,sBAAsB,WAAU,GAC9C3yG,SAAW,SAAAxT,GAAC,OAAI6mH,EAAKC,YAAY,gBAAgB9mH,EAAE,YACnDI,MAAOpO,KAAKwK,MAAM0gH,cAAgBlrH,KAAKwK,MAAM0gH,cAAgB,MAGjE1rH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPyW,MAAO,aACP+qF,UAAW97F,KAAKwK,MAAMsxF,WAEtBt8F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEynB,UAAQ,EACR++D,KAAM,EACN7rF,MAAO,EACP0kB,UAAWC,KAAOnnB,MAClBwvB,YAAa,kCACb9F,SAAW,SAAAxT,GAAC,OAAI6mH,EAAKC,YAAY,YAAY9mH,EAAE,SAC/CI,MAAOpO,KAAKwK,MAAMooH,UAAY5yH,KAAKwK,MAAMooH,UAAY,OAO7D5yH,KAAKwK,MAAM4oH,kBAAoBpzH,KAAKwK,MAAM2oH,kBACxC3zH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEud,MAAO,CACL5iB,MAAM,OACNoU,QAAQ,OACR/E,WAAW,UACXC,cAAc,UAEhBmH,MAAO,mBAEPvR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEud,MAAO,CACL5iB,MAAM,QAER8sB,UAAU,EACVtH,QAAS9f,KAAKwK,MAAM2oH,iBACpB3xG,SAAUxhB,KAAKm1H,eAAetqH,KAAK7K,MACnCoO,MAAOpO,KAAKwK,MAAM8oH,kBAAoBtzH,KAAKwK,MAAM8oH,kBAAoB,MAK3EtzH,KAAKwK,MAAM6oH,kBAAoBrzH,KAAKwK,MAAM6oH,iBAAiB+B,SACzD51H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoR,MAAK,QACLmM,MAAO,CACL5iB,MAAM,OACNoU,QAAQ,OACR/E,WAAW,UACXC,cAAc,WAGhBpK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEynB,UAAQ,EACR9sB,MAAO,EACP8O,KAAM,SACN4V,UAAWC,KAAOnnB,MAClBwvB,YAAW,kBACX9F,SAAW,SAAAxT,GAAC,OAAI6mH,EAAKQ,YAAYrnH,IACjCI,MAAOpO,KAAKwK,MAAMmoH,YAAc3yH,KAAKwK,MAAMmoH,YAAc,KAM/D3yH,KAAKwK,MAAM6oH,kBACTrzH,KAAKwK,MAAM6oH,iBAAiBU,OAAO74G,IAAK,SAACpjB,EAAMw8H,GAC7C,IAAMgB,EAAY,CAAC,UAAU,QAAQ1gG,SAAS98B,EAAMsR,MAAQ,SAAW,OACjE8qH,EAAeW,EAAKV,sBAAsBr8H,EAAMsR,MAAK,GAC3D,OACE5J,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEud,MAAO,CACL5iB,MAAM,OACNoU,QAAQ,OACR/E,WAAW,UACXC,cAAc,UAEhB2T,IAAG,SAAA9Y,OAAW6vH,GACdvjH,MAAK,GAAAtM,OAAK3M,EAAM6U,KAAX,MAAAlI,OAAoB3M,EAAMsR,KAA1B,MAEL5J,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEynB,UAAQ,EACR9sB,MAAO,EACP8O,KAAMksH,EACNJ,QAAShB,EACTl1G,UAAWC,KAAOnnB,MAClBwvB,YAAW,GAAA7iB,OAAK3M,EAAM6U,KAAX,MAAAlI,OAAoB3M,EAAMsR,KAA1B,KACXoY,SAAW,SAAAxT,GAAC,OAAI6mH,EAAKU,YAAYvnH,EAAEsmH,IACnClmH,MAAOymH,EAAKrqH,MAAMuoH,aAAauB,GAAcO,EAAKrqH,MAAMuoH,aAAauB,GAAc,QAO7Ft0H,KAAKwK,MAAM4oH,kBAAoBpzH,KAAKwK,MAAM6oH,kBACxC7zH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPqP,WAAY,SACZE,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACmsC,GAAD,CACEhmB,YAAa,CACX1E,GAAG,CAAC,EAAE,GACN/X,KAAK,SACL9O,MAAM,CAAC,EAAE,QACTlC,UAAU4H,KAAKwK,MAAMwoH,aAEvB30G,YAAare,KAAKw1H,UAAU3qH,KAAK7K,OAPnC,gBAeRR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPqP,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,mBAGAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,EAAG,CAAC,MAAM,OACVzK,aAAc,MACdqK,WAAY,SACZE,eAAgB,SAChBzL,gBAAkB4B,KAAKC,MAAM1G,MAAMR,OAAOkE,aAAaS,SAASd,QAEhE4C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgN,KAAM,MACN0lB,MAAO,SACPl0B,MAAO,SACPkO,KAAOrM,KAAKC,MAAM+K,SAAW,QAAU,gBAa7DxL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,EACJhX,MAAO,EACPqP,WAAY,SACZE,eAAgB,UAId7J,KAAKwK,MAAMs3B,YAAc9hC,KAAKwK,MAAMs3B,WAAWvb,QAC7C/mB,EAAAC,EAAAC,cAAC2rC,GAAD,CACE7I,KAAMxiC,KAAKC,MAAMuiC,KACjB7V,KAAM3sB,KAAKwK,MAAMs3B,WAAWlM,OAC5BsP,SAAQ,iCACRD,WAAU,0CACVM,kBAAmBvlC,KAAKulC,kBAAkB16B,KAAK7K,QAGjDR,EAAAC,EAAAC,cAACmsC,GAAD,CACEhmB,YAAa,CACXzc,KAAK,SACL9O,MAAM,CAAC,EAAE,QACTlC,UAAU4H,KAAKwK,MAAMsxF,YAJzB,qBAaN97F,KAAKC,MAAMiB,SAAWlB,KAAKC,MAAMiB,QAAQg4B,IAAIl5B,KAAKC,MAAMo8G,mBAC1D78G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPqP,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,EACJ1C,WAAY,EACZ5P,SAAU,CAAC,EAAE,GACbb,MAAO,YACPkT,UAAW,UALb,oEASA7R,EAAAC,EAAAC,cAAC+yH,GACKzyH,KAAKC,QAIbT,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEiP,WAAY,EACZ5P,SAAU,CAAC,EAAE,GACbb,MAAO,YACPkT,UAAW,UAJb,qBAMqBrR,KAAKS,cAAc4I,YAAYrJ,KAAKS,cAAc4C,iBAAiBrD,KAAKC,MAAMo8G,kBAAkB,IAAI,GANzH,oDAhqCgBl8G,aCqYXw1H,8MAnYbnrH,MAAQ,CACN2lH,KAAK,KACLyF,QAAO,EACPC,SAAS,KACT/zF,WAAW,CACTlM,OAAO,KACPrP,SAAQ,GAEVuvG,aAAY,EACZC,iBAAgB,KAIlBt1H,cAAgB,OAChB++G,eAAiB,OA2HjBwW,QAAU,SAAC7F,GACT9vH,EAAKwL,SAAS,CACZskH,qFA1HEnwH,KAAKw/G,eACPx/G,KAAKw/G,eAAe9+G,SAASV,KAAKC,OAElCD,KAAKw/G,eAAiB,IAAInG,GAAer5G,KAAKC,OAGhDD,KAAKS,cAAgBT,KAAKw/G,eAAe/+G,mKAIzCT,KAAKgJ,YACLhJ,KAAKmN,gMAGkBpC,EAAUqC,mEACjCpN,KAAKgJ,YACkB+B,EAAUvJ,UAAYxB,KAAKC,MAAMuB,SAEtDxB,KAAKmN,wQAKHnN,KAAKC,MAAMuB,UACPq0H,EAAW71H,KAAKC,MAAMgwH,SAAS/V,MAAMxiG,KAAM,SAAApJ,GAAC,OAAKA,EAAE2tG,MAAM3rG,gBAAkBrH,EAAKhJ,MAAMuB,QAAQ8O,gBACpGtQ,KAAK6L,SAAS,CACZgqH,WACAD,QAAO,2PAMX51H,KAAK6L,SAAS,CACZi2B,WAAY,CACVlM,OAAO,KACPrP,SAAQ,iJAKIwvG,GAChB/1H,KAAK6L,SAAS,CACZkqH,uDAIM,IAAA9nH,EAAAjO,KAER,GAAwB,OAApBA,KAAKwK,MAAM2lH,KACb,OAAO,EAGT,IAoDMA,EAA2B,QAApBnwH,KAAKwK,MAAM2lH,KAClB/V,EAAap6G,KAAKC,MAAMgwH,SAASv/G,GAEvC49C,QAAQ6K,IAAIihD,EAAW+V,GAEvBnwH,KAAKw/G,eAAezE,SAASX,EAAW+V,EAzDvB,SAACp0G,EAAG4lB,GAEnB,IAAM+F,EAAY,CAChBjkB,cAAe,WACfC,YAAa,WACbC,WAAY1V,EAAKzD,MAAM2lH,MAGrBxuF,IACF+F,EAAU/jB,WAAa1V,EAAKxN,cAAcmnC,oBAAoBjG,KAI5DA,GAA8B,UAArB+F,EAAU/pC,SACrBsQ,EAAKxN,cAAc+iB,yBAAyBkkB,GAG9C,IAAImuF,EAAW,KACmB,YAAd95G,EAAGpe,SAErBk4H,EAAW,CACT5Z,MAAMhuG,EAAKhO,MAAMuB,QACjB04G,MAAMjsG,EAAKhO,MAAMi6G,MAAMnkG,WACvBilG,QAA4B,QAApB/sG,EAAKzD,MAAM2lH,KACnB/V,WAAWnsG,EAAKhO,MAAMgwH,SAASv/G,IAGE,oBAAxBzC,EAAKhO,MAAMgC,UACpBgM,EAAKhO,MAAMgC,YAKfgM,EAAKpC,SAAS,CACZgqH,WACA/zF,WAAY,CACVlM,OAAO,KACPrP,SAAQ,MAKU,SAACxK,GACvB,IAAM6Z,EAAS7Z,EAAG8rB,gBAClB55B,EAAKpC,SAAS,SAACuB,GAAD,MAAgB,CAC5B00B,WAAWliC,OAAAsL,EAAA,EAAAtL,CAAA,GACNwN,EAAU00B,WADL,CAERlM,gBAYN51B,KAAK6L,SAAS,SAACuB,GAAD,MAAgB,CAC5B00B,WAAWliC,OAAAsL,EAAA,EAAAtL,CAAA,GACNwN,EAAU00B,WADL,CAERvb,SAAQ,wCAWL,IAAAjB,EAAAtlB,KACP,OAAOA,KAAKwK,MAAMqrH,SAEdr2H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,EAAG,EACHzP,MAAO,EACPgX,GAAI,CAAC,EAAE,GACP3H,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,EACJ1C,WAAY,EACZ5P,SAAU,CAAC,EAAE,GACbb,MAAO,YACPkT,UAAW,UALb,oCAOoCrR,KAAKC,MAAMgwH,SAASv/G,GAPxD,KASAlR,EAAAC,EAAAC,cAAC8gB,GAAD,CACE1B,UAAW,CACTxN,GAAG,EACH8P,GAAG,CAAC,EAAE,GACND,GAAG,CAAC,EAAE,GACN7mB,MAAM,QAERmgB,eAAe,GAEfjb,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE6lB,GAAI,EACJ7b,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACu2H,GAAD,CACEjkH,UAAW,CACTrF,KAAK,aACLnC,MAAOxK,KAAKwK,MAAMqrH,SAAS7a,QAAU,WAAa,WAClD/6G,MAAM,CACJkiB,GAAG,MAIT3iB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEiP,WAAY,EACZ5P,SAAU,CAAC,EAAE,IAEZgB,KAAKwK,MAAMqrH,SAAS7a,QAAU,MAAQ,aAI7Cx7G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACV4P,WAAY,IACZzQ,MAAO,YACPkT,UAAW,UAJb,cAMcrR,KAAKS,cAAc4I,YAAYrJ,KAAKS,cAAc4C,iBAAiBrD,KAAKwK,MAAMqrH,SAAS3b,MAAM,IAAI1pG,QAAQ,EAAE,GAAG,GAN5H,WAS8B,WAA9BxQ,KAAKC,MAAMgwH,SAASzlH,OACtBhL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,EAAG,EACHzP,MAAO,EACPgX,GAAI,CAAC,EAAE,IAIJtR,KAAKwK,MAAMorH,QAeV51H,KAAKC,MAAMi6G,OAASl6G,KAAKC,MAAMi6G,MAAMh1G,IAAI,IAAMlF,KAAKwK,MAAMurH,gBAC1Dv2H,EAAAC,EAAAC,cAAC+yH,GAAD7yH,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEEsyH,SAAUvyH,KAAKwK,MAAMurH,gBACrBr6F,UAAY,SAAA1tB,GAAC,OAAIsX,EAAK4wG,mBAAkB,OAG1C12H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPqP,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,EACJ1C,WAAY,EACZ5P,SAAU,CAAC,EAAE,GACbb,MAAO,YACPkT,UAAW,UALb,oCAOoCrR,KAAKC,MAAMgwH,SAASv/G,GAPxD,KAUE1Q,KAAKwK,MAAMs3B,YAAc9hC,KAAKwK,MAAMs3B,WAAWvb,QAC7C/mB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPsP,cAAe,UAEfpK,EAAAC,EAAAC,cAAC2rC,GAAD,CACE7I,KAAMxiC,KAAKC,MAAMuiC,KACjB0C,SAAQ,oBACRvY,KAAM3sB,KAAKwK,MAAMs3B,WAAWlM,OAC5BqP,WAAU,6BACVM,kBAAmBvlC,KAAKulC,kBAAkB16B,KAAK7K,SAInDR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPqP,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,EACJhX,MAAO,CAAC,EAAE,IACVqP,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBrK,EAAAC,EAAAC,cAAC8gB,GAAD,CACE1B,UAAW,CACT/U,EAAE,CAAC,EAAE,GACLzP,MAAM,IACNqrC,YAAY,WACVrgB,EAAK0wG,QAAQ,SAGjBv7G,eAAe,EACfkE,SAA+B,QAApB3e,KAAKwK,MAAM2lH,MAEtB3wH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE6lB,GAAI,EACJ7b,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACu2H,GAAD,CACEjkH,UAAW,CACTrF,KAAK,aACLnC,MAAM,WACNvK,MAAM,CACJkiB,GAAG,MAIT3iB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEiP,WAAY,EACZ5P,SAAU,CAAC,EAAE,IAFf,SAQJQ,EAAAC,EAAAC,cAAC8gB,GAAD,CACE1B,UAAW,CACT/U,EAAE,CAAC,EAAE,GACLzP,MAAM,IACNqrC,YAAY,WACVrgB,EAAK0wG,QAAQ,aAGjBv7G,eAAe,EACfkE,SAA+B,YAApB3e,KAAKwK,MAAM2lH,MAEtB3wH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE6lB,GAAI,EACJ7b,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACu2H,GAAD,CACEjkH,UAAW,CACTrF,KAAK,aACLnC,MAAM,WACNvK,MAAM,CACJkiB,GAAG,MAIT3iB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEiP,WAAY,EACZ5P,SAAU,CAAC,EAAE,IAFf,cASNQ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,EACJtS,SAAU,EACV4P,WAAY,IACZzQ,MAAO,YACPkT,UAAW,UALb,YAOYrR,KAAKS,cAAc4I,YAAYrJ,KAAKS,cAAc4C,iBAAiBrD,KAAKC,MAAMi6G,MAAM,IAAI1pG,QAAQ,EAAE,GAAG,GAPjH,oBAUExQ,KAAKC,MAAMiB,SAAWlB,KAAKC,MAAMiB,QAAQwV,GAAG,IAC1ClX,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,EACJwG,UAAW,UACXuB,WAAY,UACZ7I,QAAU,SAAApQ,GAAC,OAAIsX,EAAK4wG,mBAAkB,KAJxC,mBASJ12H,EAAAC,EAAAC,cAACmsC,GAAD,CACEhmB,YAAa,CACX3G,GAAG,EACH5kB,MAAM,CAAC,EAAE,IACTlC,SAA6B,OAApB4H,KAAKwK,MAAM2lH,MAEtB9xG,YAAare,KAAK+6G,SAASlwG,KAAK7K,OANlC,UAzJRR,EAAAC,EAAAC,cAACyM,GAAD,CACEzC,UAAW,CACTE,cAAc,OAEhBS,YAAa,CACXgC,KAAK,QAEP/B,UAAW,CACTgC,GAAG,GAELrT,KAAM,4BAjOCkH,aCg7BRg2H,8MA56Bb3rH,MAAQ,CACN4rH,iBAAiB,KACjBt0F,WAAW,CACT5kC,OAAO,KACP04B,OAAO,KACPrP,SAAQ,MAKZ9lB,cAAgB,OAChB++G,eAAiB,gFAGXx/G,KAAKw/G,eACPx/G,KAAKw/G,eAAe9+G,SAASV,KAAKC,OAElCD,KAAKw/G,eAAiB,IAAInG,GAAer5G,KAAKC,OAGhDD,KAAKS,cAAgBT,KAAKw/G,eAAe/+G,uDAG1B21H,GAEXp2H,KAAKwK,MAAM4rH,mBAAqBA,IAClCA,EAAmB,MAErBp2H,KAAK6L,SAAS,CACZuqH,yKAKFp2H,KAAK6L,SAAS,CACZi2B,WAAY,CACV5kC,OAAO,KACP04B,OAAO,KACPrP,SAAQ,sQAONtkB,EAAW,SAAC8Z,EAAG4lB,GAEnB,IAAM+F,EAAY,CAChBhkB,YAAa,QACbD,cAAe,aACfE,WAAY1a,EAAKhJ,MAAMgwH,SAASv/G,KAI9BixB,GAA8B,UAArB+F,EAAU/pC,SACrBsL,EAAKxI,cAAc+iB,yBAAyBkkB,GAGX,oBAAxBz+B,EAAKhJ,MAAMkN,UAAyC,YAAd4O,EAAGpe,QAClDsL,EAAKhJ,MAAMkN,WAGblE,EAAK4C,SAAS,CACZi2B,WAAY,CACV5kC,OAAO,KACP04B,OAAO,KACPrP,SAAQ,MAKRrkB,EAAkB,SAAC6Z,GACvB,IAAM6Z,EAAS7Z,EAAG8rB,gBAClB5+B,EAAK4C,SAAS,SAACuB,GAAD,MAAgB,CAC5B00B,WAAWliC,OAAAsL,EAAA,EAAAtL,CAAA,GACNwN,EAAU00B,WADL,CAERlM,eAKN51B,KAAKw/G,eAAerF,cAAcn6G,KAAKC,MAAMgwH,SAASv/G,GAAGzO,EAASC,GAElElC,KAAK6L,SAAS,SAACuB,GAAD,MAAgB,CAC5B00B,WAAWliC,OAAAsL,EAAA,EAAAtL,CAAA,GACNwN,EAAU00B,WADL,CAERvb,SAAQ,EACRrpB,OAAO,gRAML+E,EAAW,SAAC8Z,EAAG4lB,GAEnB,IAAM+F,EAAY,CAChBhkB,YAAa,UACbD,cAAe,aACfE,WAAY1V,EAAKhO,MAAMgwH,SAASv/G,KAI9BixB,GAA8B,UAArB+F,EAAU/pC,SACrBsQ,EAAKxN,cAAc+iB,yBAAyBkkB,GAGX,oBAAxBz5B,EAAKhO,MAAMkN,UAAyC,YAAd4O,EAAGpe,QAClDsQ,EAAKhO,MAAMkN,WAGbc,EAAKpC,SAAS,CACZi2B,WAAY,CACV5kC,OAAO,KACP04B,OAAO,KACPrP,SAAQ,MAKRrkB,EAAkB,SAAC6Z,GACvB,IAAM6Z,EAAS7Z,EAAG8rB,gBAClB55B,EAAKpC,SAAS,SAACuB,GAAD,MAAgB,CAC5B00B,WAAWliC,OAAAsL,EAAA,EAAAtL,CAAA,GACNwN,EAAU00B,WADL,CAERlM,eAKN51B,KAAKw/G,eAAelF,gBAAgBt6G,KAAKC,MAAMgwH,SAASv/G,GAAGzO,EAASC,GAEpElC,KAAK6L,SAAS,SAACuB,GAAD,MAAgB,CAC5B00B,WAAWliC,OAAAsL,EAAA,EAAAtL,CAAA,GACNwN,EAAU00B,WADL,CAERvb,SAAQ,EACRrpB,OAAO,sQAMX8C,KAAKgJ,YAEL0B,OAAOyC,SAAWnN,KAAKC,MAAMkN,8LAGNpC,EAAUqC,mEACjCpN,KAAKgJ,kJAGE,IAAAsc,EAAAtlB,KACHiwH,EAAWjwH,KAAKC,MAAMgwH,SACpBoG,EAAYz2H,OAAO0X,OAAO24G,EAASzR,QAAQx6F,MAC3CsyG,EAAWrG,EAAS/V,OAAS+V,EAAS/V,MAAMp3G,OAAO,EACnDm8G,EAAWj/G,KAAKS,cAAciB,MAAMuuH,EAAShR,UAAU35G,IAAI,MAC3D65G,EAAen/G,KAAKS,cAAciB,MAAMuuH,EAAS9Q,cAAc75G,IAAI,MACnE4qH,EAAajR,EAASn3G,KAAKq3G,GAC3BoX,EAAetX,EAAS35G,IAAI4qH,GAAY7qH,MAAM,KAAKmL,QAAQ,GAC3DgmH,EAAmBrX,EAAa75G,IAAI4qH,GAAY7qH,MAAM,KAAKmL,QAAQ,GACnEimH,EAAgBxG,EAAS/V,MAAMp+F,OAAQ,SAAAxN,GAAC,OAAKA,EAAE0sG,UAAWnmF,KAAM,SAACp1B,EAAEq1B,GAAH,OAAUxP,EAAK7kB,cAAciB,MAAMjC,EAAEy6G,OAAOptF,GAAGxH,EAAK7kB,cAAciB,MAAMozB,EAAEolF,QAAU,GAAK,IACzJwc,EAAoBzG,EAAS/V,MAAMp+F,OAAQ,SAAAxN,GAAC,OAAMA,EAAE0sG,UAAWnmF,KAAM,SAACp1B,EAAEq1B,GAAH,OAAUxP,EAAK7kB,cAAciB,MAAMjC,EAAEy6G,OAAOptF,GAAGxH,EAAK7kB,cAAciB,MAAMozB,EAAEolF,QAAU,GAAK,IAE9Jyc,EAA4C,cAAjC1G,EAASzlH,MAAM8F,cAC1BsmH,EAA8C,WAAjC3G,EAASzlH,MAAM8F,cAElC,OACE9Q,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,GAEPkF,EAAAC,EAAAC,cAACq7B,GAAD,CACEzpB,GAAI,CAAC,EAAE,IAEN2+G,EAASn2H,OAEZ0F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,EACJhX,MAAO,EACPqP,WAAY,SACZE,eAAgB,SAChBD,cAAe,CAAC,SAAS,QAEzBpK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,CAAC,EAAE,GACPoa,GAAI,CAAC,EAAE,GACPpxB,MAAO,CAAC,EAAE,KACVsP,cAAe,UAEfpK,EAAAC,EAAAC,cAACksG,GAAD,CACE3E,aAAc,KACdntG,MAAO,cACPsU,MAAK,IAAA3J,OAAMwrH,EAASv/G,IACpBtE,UAAW,CAAC,QAAQ,SACpB26F,eAAgB,CAAC,OAAO,QACxBh2F,MAAK,cAAAtM,OAAgBzE,KAAKS,cAAcqY,YAA0C,IAA9Bm3G,EAASzR,OAAO,GAAGG,YAAiB3lG,OAAO,oBAGnGxZ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,CAAC,EAAE,GACP6nB,GAAI,CAAC,EAAE,GACPzN,GAAI,CAAC,EAAE,GACPpxB,MAAO,CAAC,EAAE,KACVsP,cAAe,UAEfpK,EAAAC,EAAAC,cAACksG,GAAD,CACE7E,eAAgB,CAAC,OAAO,QACxB36F,UAAW,CAAC,QAAQ,SACpB66F,aAAe,KACfntG,MAAO,WACPiX,MAAO,MAEPvR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgK,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEyxH,KAAM,CACJ/kH,KAAM,GACNlO,MAAO,OACPkzH,QAAS,OACTC,UAAW,OACXC,KAAMtB,EAASzpH,WAGnBhH,EAAAC,EAAAC,cAAC4yB,GAAD,CACEhmB,GAAI,EACJ+S,WAAY,EACZrgB,SAAU,CAAC,EAAE,GACb4P,WAAY,CAAC,EAAE,GACfzQ,MAAO,YACPwuB,KAAMsjG,EAAS/Q,cAKvB1/G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,CAAC,EAAE,GACP6nB,GAAI,CAAC,EAAE,GACPzN,GAAI,CAAC,EAAE,GACPpxB,MAAO,CAAC,EAAE,KACVsP,cAAe,UAEfpK,EAAAC,EAAAC,cAACksG,GAAD,CACE9xG,MAAO,SACPmtG,aAAe,KACf76F,UAAW,CAAC,QAAQ,SACpB26F,eAAgB,CAAC,OAAO,QACxBh2F,MAAK,cAAAtM,OAAgBzE,KAAKS,cAAcqY,YAAiC,IAArBu9G,EAAU1X,YAAiB3lG,OAAO,kBAEtFxZ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgK,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACu2H,GAADr2H,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEEgwH,SAAUA,EACVj+G,UAAW,CACTrF,KAAK,aACL1M,MAAM,CACJoM,KAAMrM,KAAKC,MAAM+K,SAAW,QAAU,WAI5CxL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2M,GAAI,EACJ+S,WAAY,EACZrgB,SAAU,CAAC,EAAE,GACb4P,WAAY,CAAC,EAAE,GACfzQ,MAAO,aAEN8xH,EAASzlH,UAKlBhL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEw5B,GAAI,CAAC,EAAE,GACP7nB,GAAI,CAAC,EAAE,GACPhX,MAAO,CAAC,EAAE,KACVsP,cAAe,UAEfpK,EAAAC,EAAAC,cAACksG,GAAD,CACE76F,MAAO,KACPjX,MAAO,cACPmtG,aAAe,KACf76F,UAAW,CAAC,QAAQ,SACpB26F,eAAgB,CAAC,OAAO,QACxB34F,MAAOpO,KAAKS,cAAc4I,YAAY6mH,EAAW1/G,QAAQ,EAAE,GAAG,OAIpEhR,EAAAC,EAAAC,cAACm3H,GAADj3H,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEEgC,SAAUjC,KAAKC,MAAMkN,YAEvB3N,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPgX,GAAI,CAAC,EAAE,GACPZ,GAAI,oBACJ7G,eAAgB,gBAChBD,cAAe,CAAC,SAAS,QAEzBpK,EAAAC,EAAAC,cAAC8gB,GAAD,CACE1B,UAAW,CACT/U,EAAE,EACFuH,GAAG,CAAC,EAAE,GACN6Q,GAAG,CAAC,EAAE,GACN7nB,MAAM,CAAC,EAAE,KAEXR,MAAO,UACPqlB,iBAAkB,CAChBD,GAAG,EACH5S,GAAG,IAGL9M,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+1B,GAAI,EACJp7B,MAAO,EACPqP,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGdomH,EAASn9F,QAAQ2nF,WAAWv/F,IAAK,SAAChe,EAAO63H,GACvC,IAAM7oH,EAAO+jH,EAASn9F,QAAQ4nF,UAAUqa,GAGpC+B,EAAgB,KAChBC,EAAQ75H,EAAO4d,MAAM,4BAUzB,OATAi8G,EAAQA,EAAQA,EAAM,GAAGhzG,MAAM,KAAO,QAGpC+yG,EAAgBxxG,EAAKrlB,MAAMuiC,KAAKC,IAAIxd,IAAI+xG,iBAAiBD,EAAM7qH,MAE7D4qH,EAAgBl3H,OAAO0X,OAAOw/G,GAAe5a,OAAO,EAAE6a,EAAMj0H,SAK9DtD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEyhB,GAAI,EACJ9mB,MAAO,EACPsP,cAAe,SACfD,WAAY,aACZ4T,IAAG,UAAA9Y,OAAYswH,GACflrH,eAAgB,aAChBuxB,aAAY,aAAA32B,OAAe6gB,EAAKrlB,MAAM1G,MAAMR,OAAO,gBAEnDyG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,EACJhX,MAAO,EACPsP,cAAe,CAAC,SAAS,OACzBD,WAAY,CAAC,aAAa,WAE1BnK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEiK,cAAe,OAEfpK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACV4P,WAAY,EACZzQ,MAAO,aAEN4N,SAASgpH,GAAa,GAEzBv1H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2M,GAAI,EACJtN,SAAU,EACV4P,WAAY,EACZzQ,MAAO,aAENjB,IAIH45H,GACEt3H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,CAAC,EAAE,GACP5S,GAAI,CAAC,EAAE,GACPtN,SAAU,EACV4P,WAAY,EACZyC,UAAW,OACXgO,WAAY,UACZ4H,WAAY,UACZ7I,QAAU,SAAApQ,GAAC,OAAIsX,EAAK2xG,iBAAiBlC,KAGnCzvG,EAAK9a,MAAM4rH,mBAAqBrB,EAAc,gBAAkB,kBAMxE+B,GAAiBxxG,EAAK9a,MAAM4rH,mBAAqBrB,GAC/Cv1H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEw5B,GAAI,CAAC,EAAE,GACP7+B,MAAO,EACPsP,cAAe,UAGbktH,EAAc57G,IAAK,SAAC0vF,EAAMssB,GAAP,OACjB13H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACVb,MAAO,YACPof,IAAG,SAAA9Y,OAAWyyH,IAEbtsB,WAYzBprG,EAAAC,EAAAC,cAAC8gB,GAAD,CACE1B,UAAW,CACT/U,EAAE,EACFuC,GAAG,CAAC,EAAE,GACNhS,MAAM,CAAC,EAAE,MAGXkF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,EACJhX,MAAO,EACPqP,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEiP,WAAY,EACZ5P,SAAU,CAAC,EAAE,GACbqS,UAAW,OACXlT,MAAO,YACPkhB,WAAY,WALd,oBASA7f,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEiP,WAAY,EACZ5P,SAAU,CAAC,EAAE,GACbqS,UAAW,OACXlT,MAAO,YACPkhB,WAAY,WALd,SAUF7f,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPqP,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGdomH,EAASzR,OAAOtjG,IAAK,SAACi8G,EAAUC,GAC9B,OACE53H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEyhB,GAAI,EACJ9mB,MAAO,EACPqP,WAAY,SACZ4T,IAAG,SAAA9Y,OAAW2yH,GACdvtH,eAAgB,gBAChBuxB,aAAY,aAAA32B,OAAe6gB,EAAKrlB,MAAM1G,MAAMR,OAAO,gBAEnDyG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgK,WAAY,SACZC,cAAe,OAEfpK,EAAAC,EAAAC,cAACu2H,GAADr2H,OAAAC,OAAA,GACMylB,EAAKrlB,MADX,CAEEgwH,SAAUA,EACVj+G,UAAW,CACTrF,KAAK,aACLnC,MAAM2sH,EAAU3sH,MAChBvK,MAAM,CACJoM,KAAMiZ,EAAKrlB,MAAM+K,SAAW,QAAU,aAI5CxL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2M,GAAI,EACJtN,SAAU,EACV4P,WAAY,EACZ9O,OAAQ,SACRuR,UAAW,OACXlT,MAAO,YACPkhB,WAAY,UACZ4H,WAAY,UACZlnB,IAAK,+BACL8kB,KAAMS,EAAK7kB,cAAc6gE,2BAA2B61D,EAAUvY,WAE7DuY,EAAU3sH,QAGfhL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACV4P,WAAY,EACZyC,UAAW,OACXlT,MAAO,YACPkhB,WAAY,WAEXiG,EAAK7kB,cAAcqY,YAAiC,IAArBq+G,EAAUxY,YAAiB3lG,OAAO,oBAO1EhZ,KAAKwK,MAAMs3B,YAAc9hC,KAAKwK,MAAMs3B,WAAWvb,QAC7C/mB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,EACJ5kB,MAAO,EACPsP,cAAe,UAEfpK,EAAAC,EAAAC,cAAC2rC,GAAD,CACE7I,KAAMxiC,KAAKC,MAAMuiC,KACjB7V,KAAM3sB,KAAKwK,MAAMs3B,WAAWlM,OAC5B2P,kBAAmBvlC,KAAKulC,kBAAkB16B,KAAK7K,MAC/CklC,SAAQ,GAAAzgC,OAAKzE,KAAKwK,MAAMs3B,WAAW5kC,OAA3B,iBACR+nC,WAAU,cAAAxgC,OAAgBzE,KAAKwK,MAAMs3B,WAAW5kC,OAAOoT,cAA7C,kBAGZqmH,EACFn3H,EAAAC,EAAAC,cAACmsC,GAAD,CACEhmB,YAAa,CACX3G,GAAG,EACH5kB,MAAM,CAAC,EAAE,SAEX+jB,YAAare,KAAKm6G,cAActvG,KAAK7K,OALvC,kBASE42H,GACFp3H,EAAAC,EAAAC,cAACmsC,GAAD,CACEhmB,YAAa,CACX3G,GAAG,EACH5kB,MAAM,CAAC,EAAE,SAEX+jB,YAAare,KAAKs6G,gBAAgBzvG,KAAK7K,OALzC,uBAcVR,EAAAC,EAAAC,cAAC8gB,GAAD,CACE1B,UAAW,CACT/U,EAAE,EACFuH,GAAG,CAAC,EAAE,IAERxX,MAAO,UACPqlB,iBAAkB,CAChBD,GAAG,EACH5S,GAAG,IAGL9M,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,EACJlgB,SAAU,CAAC,EAAE,GACbke,MAAO,CACL+b,UAAU,cAEZrN,wBAAyB,CACvBC,OAAOokG,EAAS1wG,YAAYmvC,QAAQ,MAAM,cAM9C4nE,GACE92H,EAAAC,EAAAC,cAAC8gB,GAAD,CACE1B,UAAW,CACT/U,EAAE,EACFuH,GAAG,CAAC,EAAE,KAGR9R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPqP,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,EACJhX,MAAO,EACPqP,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEiP,WAAY,EACZ5P,SAAU,CAAC,EAAE,GACbqS,UAAW,OACXlT,MAAO,YACPkhB,WAAY,WALd,QAOQk3G,EAPR,MASA/2H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEiP,WAAY,EACZ5P,SAAU,CAAC,EAAE,GACbqS,UAAW,OACXlT,MAAO,YACPkhB,WAAY,WALd,YAOYm3G,EAPZ,OAUFh3H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,EACJhX,MAAO,EACP2E,OAAQ,OACR0K,WAAY,SACZC,cAAe,MACf8G,GAAI,0BAEJlR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,GACP2E,OAAQ,OACR4K,eAAgB,WAChBvK,aAAc,gBACd4d,MAAO,CAAC6B,WAAW,2BAEnBvf,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEV,OAAQ,OACR3E,MAAK,GAAAmK,OAAK8xH,EAAL,KACLj3H,aAAc,gBACd4d,MAAO,CAAC6B,WAAW,2BAIvBvf,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,GACP2E,OAAQ,OACR4K,eAAgB,aAChBvK,aAAc,gBACd4d,MAAO,CAAC6B,WAAW,yBAEnBvf,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEV,OAAQ,OACR3E,MAAK,GAAAmK,OAAK+xH,EAAL,KACLl3H,aAAc,gBACd4d,MAAO,CAAC6B,WAAW,0BAKzBvf,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACP2E,OAAQ,OACR0K,WAAY,SACZC,cAAe,MACf8G,GAAI,0BAEJlR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,GACP2E,OAAQ,OACR4K,eAAgB,YAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEV,OAAQ,OACR3E,MAAK,GAAAmK,OAAK8xH,EAAL,KACL1sH,eAAgB,cAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEiP,WAAY,EACZ5P,SAAU,CAAC,EAAE,GACbqS,UAAW,OACXlT,MAAO,YACPkhB,WAAY,WAEXrf,KAAKS,cAAc4I,YAAY41G,EAASzuG,QAAQ,EAAE,GAAG,MAI5DhR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,GACP2E,OAAQ,OACR4K,eAAgB,cAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEV,OAAQ,OACRC,SAAU,MACV5E,MAAK,GAAAmK,OAAK+xH,EAAL,KACL3sH,eAAgB2B,WAAWgrH,IAAmB,GAAK,aAAe,YAElEh3H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEiP,WAAY,EACZ5P,SAAU,CAAC,EAAE,GACbqS,UAAW,QACXlT,MAAO,YACPkhB,WAAY,WAEXrf,KAAKS,cAAc4I,YAAY81G,EAAa3uG,QAAQ,EAAE,GAAG,SASxE8lH,GACE92H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,EACJhX,MAAO,EACPoW,GAAI,4BACJ7G,eAAgB,gBAChBD,cAAe,CAAC,SAAS,QAEzBpK,EAAAC,EAAAC,cAAC8gB,GAAD,CACE1B,UAAW,CACT/U,EAAE,EACFuH,GAAG,CAAC,EAAE,GACN6Q,GAAG,CAAC,EAAE,GACN7nB,MAAM,CAAC,EAAE,KAEXoW,GAAI,iCAEJlR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPqP,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,EACJhX,MAAO,EACPqP,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEiP,WAAY,EACZ5P,SAAU,CAAC,EAAE,GACbqS,UAAW,OACXlT,MAAO,YACPkhB,WAAY,WALd,kBAOkBo3G,EAAc3zH,OAPhC,KASAtD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEiP,WAAY,EACZ5P,SAAU,CAAC,EAAE,GACbqS,UAAW,OACXlT,MAAO,YACPkhB,WAAY,WALd,UAUF7f,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACP4iB,MAAO,CACLyL,SAAS,UAEX+J,UAAW,QACX9oB,cAAe,UAGb6sH,EAAcv7G,IAAK,SAACm8G,EAASC,GAC3B,IAAMpd,EAAQ50F,EAAK7kB,cAAc4I,YAAYic,EAAK7kB,cAAciB,MAAM21H,EAASnd,OAAO50G,IAAI,MAAMkL,QAAQ,EAAE,GAAG,GAC7G,OACEhR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEyhB,GAAI,EACJ9mB,MAAO,EACPqP,WAAY,SACZC,cAAe,MACf2T,IAAG,YAAA9Y,OAAc6yH,GACjBztH,eAAgB,gBAChBuxB,aAAY,aAAA32B,OAAe6gB,EAAKrlB,MAAM1G,MAAMR,OAAO,gBAEnDyG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgK,WAAY,SACZC,cAAe,MACfC,eAAgB,cAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEyxH,KAAM,CACJ/kH,KAAM,EACNlO,MAAO,OACPkzH,QAAS,OACTC,UAAW,OACXC,KAAM8F,EAASpb,SAGnBz8G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2M,GAAI,EACJtN,SAAU,EACV4P,WAAY,EACZ9O,OAAQ,SACRuR,UAAW,OACXlT,MAAO,YACPkhB,WAAY,UACZ4H,WAAY,UACZlnB,IAAK,+BACL8kB,KAAI,6BAAApgB,OAA+B4yH,EAASpb,QAG1C32F,EAAKrlB,MAAM+K,SACTxL,EAAAC,EAAAC,cAAC4yB,GAAD,CACEtzB,SAAU,EACV4P,WAAY,EACZyC,UAAW,OACXlT,MAAO,YACPwuB,KAAM0qG,EAASpb,MACf58F,WAAY,YAEZg4G,EAASpb,QAInBz8G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACV4P,WAAY,EACZyC,UAAW,OACXlT,MAAO,YACPkhB,WAAY,WAEX66F,SASjB16G,EAAAC,EAAAC,cAAC8gB,GAAD,CACE1B,UAAW,CACT/U,EAAE,EACFuC,GAAG,CAAC,EAAE,GACNhS,MAAM,CAAC,EAAE,KAEXoW,GAAI,qCAEJlR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,EACJhX,MAAO,EACPqP,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEiP,WAAY,EACZ5P,SAAU,CAAC,EAAE,GACbqS,UAAW,OACXlT,MAAO,YACPkhB,WAAY,WALd,sBAOsBq3G,EAAkB5zH,OAPxC,KASAtD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEiP,WAAY,EACZ5P,SAAU,CAAC,EAAE,GACbqS,UAAW,OACXlT,MAAO,YACPkhB,WAAY,WALd,UAUF7f,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACP4iB,MAAO,CACLyL,SAAS,UAEX+J,UAAW,QACX9oB,cAAe,UAGb8sH,EAAkBx7G,IAAK,SAACm8G,EAASC,GAC/B,IAAMpd,EAAQ50F,EAAK7kB,cAAc4I,YAAYic,EAAK7kB,cAAciB,MAAM21H,EAASnd,OAAO50G,IAAI,MAAMkL,QAAQ,EAAE,GAAG,GAC7G,OACEhR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEyhB,GAAI,EACJ9mB,MAAO,EACPqP,WAAY,SACZC,cAAe,MACfC,eAAgB,gBAChB0T,IAAG,gBAAA9Y,OAAkB6yH,GACrBl8F,aAAY,aAAA32B,OAAe6gB,EAAKrlB,MAAM1G,MAAMR,OAAO,gBAEnDyG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgK,WAAY,SACZC,cAAe,MACfC,eAAgB,cAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEyxH,KAAM,CACJ/kH,KAAM,EACNlO,MAAO,OACPkzH,QAAS,OACTC,UAAW,OACXC,KAAM8F,EAASpb,SAGnBz8G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2M,GAAI,EACJtN,SAAU,EACV4P,WAAY,EACZ9O,OAAQ,SACRuR,UAAW,OACXlT,MAAO,YACPkhB,WAAY,UACZ4H,WAAY,UACZlnB,IAAK,+BACL8kB,KAAI,6BAAApgB,OAA+B4yH,EAASpb,QAE3Cob,EAASpb,QAGdz8G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACV4P,WAAY,EACZyC,UAAW,OACXlT,MAAO,YACPkhB,WAAY,WAEX66F,iBA/5BC/5G,aC6Pfo3H,8MA9Pb/sH,MAAQ,CACNwxG,UAAU,KACVwb,aAAY,EACZC,iBAAiB,QAInBjY,eAAiB,gFAGXx/G,KAAKw/G,eACPx/G,KAAKw/G,eAAe9+G,SAASV,KAAKC,OAElCD,KAAKw/G,eAAiB,IAAInG,GAAer5G,KAAKC,4JAKhDD,KAAKgJ,YACLhJ,KAAKmN,gMAGkBpC,EAAUqC,mEACjCpN,KAAKgJ,YAEwBhJ,KAAKC,MAAM2b,sBAAwB7Q,EAAU6Q,uBAAyB5b,KAAKC,MAAM2b,sBAE5G5b,KAAKmN,8QAMFnN,KAAKC,MAAM2b,+DACP,0BAGe5b,KAAKw/G,eAAe/C,sBAAtCT,SAEWzyE,EAAavpC,KAAKC,MAA3B6a,MAASyuB,OAGbiuF,GAAc,EACdC,EAAmB,KACnBluF,EAAOmuF,SAAW3rH,SAASw9B,EAAOmuF,UAC9Btd,EAAaruG,SAASw9B,EAAOmuF,UAC7BC,EAAgB3b,EAAUtkG,KAAM,SAAA3N,GAAC,OAAIgC,SAAShC,EAAE2G,MAAQ0pG,OAG5Dqd,EAAmBE,IAEZpuF,EAAOmuF,SAA4C,QAAjCnuF,EAAOmuF,QAAQpnH,gBAC1CknH,GAAc,GAGhBx3H,KAAK6L,SAAS,CACZmwG,YACAwb,cACAC,yJAIK,IAAAxuH,EAAAjJ,KACP,OACER,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,GAEPkF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,EACJhX,MAAO,EACPqP,WAAY,SACZC,cAAe,MACfC,eAAiB7J,KAAKwK,MAAMitH,kBAAoBz3H,KAAKwK,MAAMgtH,YAAe,gBAAkB,YAG1Fx3H,KAAKwK,MAAMitH,iBACTj4H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgK,WAAY,SACZrP,MAAO,IAEPkF,EAAAC,EAAAC,cAACisG,GAAD/rG,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEEhH,KAAM,aACNmuG,SAAU,CAAC,aACXp8F,SAAUhL,KAAKC,MAAM+K,SACrBqT,YAAc,SAAArQ,GAAC,OAAI/E,EAAKhJ,MAAMmsC,YAAY,MAC1CmG,KAAM,CAAC,YAAYvyC,KAAKwK,MAAMitH,iBAAiB39H,WAGjDkG,KAAKwK,MAAMgtH,YACbh4H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgK,WAAY,SACZrP,MAAO,IAEPkF,EAAAC,EAAAC,cAACisG,GAAD/rG,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEEhH,KAAM,aACNmuG,SAAU,CAAC,aACXp8F,SAAUhL,KAAKC,MAAM+K,SACrBunC,KAAM,CAAC,YAAY,gBACnBl0B,YAAc,SAAArQ,GAAC,OAAI/E,EAAKhJ,MAAMmsC,YAAY,UAI9C5sC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgK,WAAY,SACZrP,MAAO,IAEPkF,EAAAC,EAAAC,cAACisG,GAAD/rG,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEEhH,KAAM,aACNs5C,KAAM,CAAC,aACPvnC,SAAUhL,KAAKC,MAAM+K,SACrBqT,YAAc,SAAArQ,GAAC,OAAI/E,EAAKhJ,MAAMmsC,YAAY,WAM/CpsC,KAAKwK,MAAMgtH,aACVh4H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,GACPqP,WAAY,SACZE,eAAgB,YAEhBrK,EAAAC,EAAAC,cAAC41G,GAAD11G,OAAAC,OAAA,CACEqR,KAAM,OACFlR,KAAKC,MAFX,CAGEhH,KAAM,eACNolB,YAAc,SAAArQ,GAAC,OAAI/E,EAAKhJ,MAAMmsC,YAAX,uBAM3BpsC,KAAKwK,MAAMitH,iBACTj4H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,GAEPkF,EAAAC,EAAAC,cAACk4H,GAADh4H,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEEkN,SAAUnN,KAAKmN,SAAStC,KAAK7K,MAC7BiwH,SAAUjwH,KAAKwK,MAAMitH,qBAGvBz3H,KAAKwK,MAAMgtH,YACbh4H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,GAEPkF,EAAAC,EAAAC,cAACm4H,GACK73H,KAAKC,QAIbT,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,GAEPkF,EAAAC,EAAAC,cAACq7B,GAAD,CACEzpB,GAAI,CAAC,EAAE,IADT,wBAKA9R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,EACJhX,MAAO,EACPoW,GAAI,YACJ9G,cAAe,UAEfpK,EAAAC,EAAAC,cAACqyH,GAADnyH,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEE+7G,UAAWh8G,KAAKwK,MAAMwxG,UACtB7zF,KAAM,CACJ,CACEruB,MAAO,IACPmG,MAAM,CACJ3F,MAAM,CAAC,GAAI,MAEbmuB,OAAO,CACL,CACE9b,KAAK,KACL1M,MAAM,MAKZ,CACEnG,MAAM,OACNyuB,QAAO,EACPtoB,MAAM,CACJ3F,MAAM,CAAC,IAAK,MAEdmuB,OAAO,CACL,CACE9b,KAAK,UAIX,CACE7S,MAAM,QACNmG,MAAM,CACJ3F,MAAM,CAAC,IAAK,KAEdmuB,OAAO,CACL,CACE9b,KAAK,WAIX,CACE4b,QAAO,EACPzuB,MAAM,QACNmG,MAAM,CACJ3F,MAAM,CAAC,IAAK,MAEdmuB,OAAO,CACL,CACE9b,KAAK,WAIX,CACE7S,MAAM,SACNmG,MAAM,CACJ3F,MAAM,CAAC,IAAK,KACZqP,WAAW,CAAC,SAAS,cACrBE,eAAe,CAAC,SAAS,eAE3B2e,YAAY,CACV3e,eAAe,CAAC,SAAS,eAE3B4e,OAAO,CACL,CACE9b,KAAK,aACL1M,MAAM,CACJkiB,GAAG,CAAC,EAAE,KAGV,CACEoG,QAAO,EACP5b,KAAK,0BAhPPxM,aCgQT23H,8MAhQbttH,MAAQ,CACNwxG,UAAU,QAIZv7G,cAAgB,OAChB++G,eAAiB,gFAGXx/G,KAAKw/G,eACPx/G,KAAKw/G,eAAe9+G,SAASV,KAAKC,OAElCD,KAAKw/G,eAAiB,IAAInG,GAAer5G,KAAKC,OAGhDD,KAAKS,cAAgBT,KAAKw/G,eAAe/+G,mKAIzCT,KAAKgJ,YACLhJ,KAAK+3H,qMAGkBhtH,EAAUqC,mEACjCpN,KAAKgJ,YACmB4W,KAAKC,UAAU9U,EAAU8uG,YAAcj6F,KAAKC,UAAU7f,KAAKC,MAAM45G,WAEvF75G,KAAK+3H,oRAKDle,EAAW75G,KAAKC,MAAM45G,kBACJ75G,KAAKw/G,eAAe/C,aAAa5C,EAASA,iBAA5DmC,SAENh8G,KAAK6L,SAAS,CACZmwG,iJAMF,IAAMnC,EAAW75G,KAAKC,MAAM45G,SAQ5B,OACEr6G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,GAEPkF,EAAAC,EAAAC,cAACq7B,GAAD,CACEzpB,GAAI,CAAC,EAAE,IADT,oBAKA9R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,EACJhX,MAAO,EACPqP,WAAY,SACZE,eAAgB,SAChBD,cAAe,CAAC,SAAS,QAEzBpK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,CAAC,EAAE,GACPoa,GAAI,CAAC,EAAE,GACPpxB,MAAO,CAAC,EAAE,KACVsP,cAAe,UAEfpK,EAAAC,EAAAC,cAACksG,GAAD,CACE76F,MAAO,KACPjX,MAAO,OACPsU,MAAOyrG,EAASiC,KAChB7U,aAAe,KACf76F,UAAW,CAAC,QAAQ,SACpB26F,eAAgB,CAAC,OAAO,WAG5BvnG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,CAAC,EAAE,GACP6nB,GAAI,CAAC,EAAE,GACPzN,GAAI,CAAC,EAAE,GACPpxB,MAAO,CAAC,EAAE,KACVsP,cAAe,UAEfpK,EAAAC,EAAAC,cAACksG,GAAD,CACE7E,eAAgB,CAAC,OAAO,QACxB36F,UAAW,CAAC,QAAQ,SACpB66F,aAAe,KACfntG,MAAO,UACPiX,MAAO,MAEPvR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgK,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEyxH,KAAM,CACJ/kH,KAAM,GACNlO,MAAO,OACPkzH,QAAS,OACTC,UAAW,OACXC,KAAM1X,EAASA,YAGnBr6G,EAAAC,EAAAC,cAAC4yB,GAAD,CACEhmB,GAAI,EACJ+S,WAAY,EACZrgB,SAAU,CAAC,EAAE,GACb4P,WAAY,CAAC,EAAE,GACfzQ,MAAO,YACPwuB,KAAMktF,EAASA,cAKvBr6G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,CAAC,EAAE,GACP6nB,GAAI,CAAC,EAAE,GACPzN,GAAI,CAAC,EAAE,GACPpxB,MAAO,CAAC,EAAE,KACVsP,cAAe,UAEfpK,EAAAC,EAAAC,cAACksG,GAAD,CACE76F,MAAO,KACPjX,MAAO,QACPmtG,aAAc,KACd76F,UAAW,CAAC,QAAQ,SACpB26F,eAAgB,CAAC,OAAO,QACxB34F,MAAOpO,KAAKS,cAAc4I,YAAYrJ,KAAKS,cAAciB,MAAMm4G,EAASK,OAAO1pG,QAAQ,EAAE,GAAG,MAGhGhR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEw5B,GAAI,CAAC,EAAE,GACP7nB,GAAI,CAAC,EAAE,GACPhX,MAAO,CAAC,EAAE,KACVsP,cAAe,UAEfpK,EAAAC,EAAAC,cAACksG,GAAD,CACE76F,MAAO,KACPk2F,aAAe,KACfntG,MAAO,kBACPsU,MAAOyrG,EAASmC,UAChB5vG,UAAW,CAAC,QAAQ,SACpB26F,eAAgB,CAAC,OAAO,YAI9BvnG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACP4kB,GAAI,CAAC,EAAE,IAEP1f,EAAAC,EAAAC,cAACq7B,GAAD,CACEzpB,GAAI,CAAC,EAAE,IADT,kBAKA9R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,CAAC,EAAE,GACPhX,MAAO,EACPoW,GAAI,eACJ9G,cAAe,UAEfpK,EAAAC,EAAAC,cAACqyH,GAADnyH,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEEqwH,YAAa,EACbzW,SAAUA,EACVmX,gBAAgB,EAChBhV,UAAWh8G,KAAKwK,MAAMwxG,UACtB7zF,KAAM,CACJ,CACEruB,MAAO,IACPmG,MAAM,CACJ3F,MAAM,CAAC,IAAK,MAEdmuB,OAAO,CACL,CACE9b,KAAK,KACL1M,MAAM,MAKZ,CACEnG,MAAM,OACNyuB,QAAO,EACPtoB,MAAM,CACJ3F,MAAM,KAERmuB,OAAO,CACL,CACE9b,KAAK,UAIX,CACE7S,MAAM,QACNmG,MAAM,CACJ3F,MAAM,CAAC,IAAK,MAEdmuB,OAAO,CACL,CACE9b,KAAK,WAIX,CACE7S,MAAM,OACNmG,MAAM,CACJ3F,MAAM,CAAC,IAAK,KACZ+W,UAAU,UAEZoX,OAAO,CACL,CACE9b,KAAK,UACL6b,YAAY,CACV7e,WAAW,aAKnB,CACE7P,MAAM,SACNmG,MAAM,CACJ3F,MAAM,CAAC,IAAK,KACZuP,eAAe,CAAC,SAAS,eAE3B2e,YAAY,CACV3e,eAAe,CAAC,SAAS,eAE3B4e,OAAO,CACL,CACE9b,KAAK,aACL1M,MAAM,CACJkiB,GAAG,CAAC,EAAE,KAGV,CACEoG,QAAO,EACP5b,KAAK,0BArPGxM,aCuMf63H,8MAtMbxtH,MAAQ,CACNinH,QAAQ,IACRt/E,UAAU,KACV8lF,iBAAiB,QAInBzY,eAAiB,gFAGXx/G,KAAKw/G,eACPx/G,KAAKw/G,eAAe9+G,SAASV,KAAKC,OAElCD,KAAKw/G,eAAiB,IAAInG,GAAer5G,KAAKC,4JAKhDD,KAAKgJ,YACLhJ,KAAKmN,gMAGkBpC,EAAUqC,mEACjCpN,KAAKgJ,0RAImBhJ,KAAKw/G,eAAetE,sBAAtC/oE,SAEW5I,EAAavpC,KAAKC,MAA3B6a,MAASyuB,OAGb0uF,EAAmB,KACnB1uF,EAAOmuF,UACH/F,EAAapoF,EAAOmuF,QAAQpnH,eAC5BqnH,EAAgBxlF,EAAUz6B,KAAM,SAAA5J,GAAC,OAAIA,EAAE+rG,SAASvpG,gBAAkBqhH,OAEtEsG,EAAmBN,IAIvB33H,KAAK6L,SAAS,CACZsmC,YACA8lF,wJAIK,IAAAhvH,EAAAjJ,KAEP,OACER,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,GAGL0F,KAAKwK,MAAMytH,iBACTz4H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,GAEPkF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,EACJhX,MAAO,EACPqP,WAAY,SACZC,cAAe,MACfC,eAAgB,cAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,GAEPkF,EAAAC,EAAAC,cAACisG,GAAD/rG,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEEhH,KAAM,aACNmuG,SAAU,CAAC,eACXp8F,SAAUhL,KAAKC,MAAM+K,SACrBqT,YAAc,SAAArQ,GAAC,OAAI/E,EAAKhJ,MAAMmsC,YAAY,KAC1CmG,KAAM,CAAC,cAAcvyC,KAAKwK,MAAMytH,iBAAiBpe,eAIvDr6G,EAAAC,EAAAC,cAACw4H,GAADt4H,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEE45G,SAAU75G,KAAKwK,MAAMytH,qBAIzBz4H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,GAEPkF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,EACJhX,MAAO,EACPqP,WAAY,SACZC,cAAe,MACfC,eAAgB,cAEhBrK,EAAAC,EAAAC,cAACisG,GAAD/rG,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEEhH,KAAM,aACNs5C,KAAM,CAAC,eACPvnC,SAAUhL,KAAKC,MAAM+K,SACrBqT,YAAc,SAAArQ,GAAC,OAAI/E,EAAKhJ,MAAMmsC,YAAY,SAG9C5sC,EAAAC,EAAAC,cAACq7B,GAAD,CACEzpB,GAAI,CAAC,EAAE,IADT,0BAKA9R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2R,GAAI,EACJhX,MAAO,EACPoW,GAAI,cACJ9G,cAAe,UAEfpK,EAAAC,EAAAC,cAACsyH,GAADpyH,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEEkyC,UAAWnyC,KAAKwK,MAAM2nC,UACtBhqB,KAAM,CACJ,CACEruB,MAAO,OACPmG,MAAM,CACJ3F,MAAM,CAAC,IAAK,MAEdmuB,OAAO,CACL,CACE9b,KAAK,UAIX,CACE7S,MAAM,UACNmG,MAAM,CACJ3F,MAAM,CAAC,GAAK,KAEdmuB,OAAO,CACL,CACEF,QAAO,EACP5b,KAAK,SACL1M,MAAM,CACJkiB,GAAG,IAGP,CACExV,KAAK,cAIX,CACE7S,MAAM,QACNmG,MAAM,CACJ3F,MAAM,CAAC,IAAK,MAEdmuB,OAAO,CACL,CACE9b,KAAK,WAIX,CACE4b,QAAO,EACPzuB,MAAM,cACNmG,MAAM,CACJ3F,MAAM,CAAC,IAAK,MAEdmuB,OAAO,CACL,CACE9b,KAAK,cACL6b,YAAY,CACV7e,WAAW,aAKnB,CACE4e,QAAO,EACPzuB,MAAM,kBACNmG,MAAM,CACJ3F,MAAM,CAAC,IAAK,MAEdmuB,OAAO,CACL,CACE9b,KAAK,YACL6b,YAAY,CACV7e,WAAW,2BAvLbxJ,aCyeXggH,8MAheb31G,MAAQ,CACNq2F,KAAK,GACLqZ,MAAM,KACNh5G,QAAQ,KACRswC,UAAU,KACVivE,WAAW,KACXhR,YAAY,KACZ2Q,aAAa,KACbM,aAAa,KACbL,cAAc,KACdC,eAAe,KACfvmB,gBAAgB,KAChBslB,gBAAgB,KAChBhD,kBAAkB,KAClBjQ,mBAAmB,KACnBkQ,sBAAsB,QAGxBkE,UAAY,OAGZ//G,cAAgB,OAChB++G,eAAiB,OA+FjBzgF,WAAa,WACX1+B,EAAKwL,SAAS,CACZ4jG,YAAa,UAIjBxmF,iBAAmB,SAACw3F,EAAWC,GAC7BrgH,EAAKI,cAAc+iB,yBAAyB,CAC1CC,cAAe,KACfC,YAAa+8F,EACb98F,WAAY,iBAGdtjB,EAAKwL,SAAS,CACZ40G,aACAC,gBACA,WACArgH,EAAKuwG,eAAe,gBAIxBA,eAAiB,SAACnB,GAChBpvG,EAAKwL,SAAS,CACZ4jG,mBA4LJ9Z,4BAAS,SAAA10F,IAAA,OAAAF,EAAAtB,EAAA0B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACPjB,EAAKJ,MAAMk4G,aAAa,SAAS,UAD1B/2G,EAAAE,KAAA,EAEDjB,EAAKJ,MAAMkrG,SAAS,UAFnB,wBAAA/pG,EAAAS,SAAAZ,EAAAjB,oFA/SHA,KAAKw/G,eACPx/G,KAAKw/G,eAAe9+G,SAASV,KAAKC,OAElCD,KAAKw/G,eAAiB,IAAInG,GAAer5G,KAAKC,OAGhDyK,OAAO80G,eAAiBx/G,KAAKw/G,eAC7B90G,OAAOjK,cAAgBT,KAAKS,cAAgBT,KAAKw/G,eAAe/+G,wKAI1DogG,EAAO,GACPrvD,EAAYxxC,KAAKS,cAAcG,gBAAgB,CAAC,aAAa,cAGnEigG,EAAKpwF,KACH,CACE47F,QAAQ,GACRhL,UAAS,EACTj2D,MAAMoG,EACNtgC,KAAK,YACLH,MAAM,WACN5S,MAAM,YACNwpB,UAAUiqG,GACV3/F,QAAQjyB,KAAKC,MAAM1G,MAAMR,OAAOiC,UAKpC6lG,EAAKpwF,KACH,CACE47F,QAAQ,GACRhL,UAAS,EACTtwF,MAAM,YACNkhB,QAAQ,UACR9zB,MAAM,YACN+S,KAAK,mBACLyW,UAAU4vG,GACVnsF,MAAK,GAAA3mC,OAAI+sC,EAAJ,gBAKTqvD,EAAKpwF,KACH,CACE47F,QAAQ,GACRhL,UAAS,EACTpvE,QAAQ,UACR9zB,MAAM,YACN4S,MAAM,cACN4W,UAAUqwG,GACV9mH,KAAK,qBACLk6B,MAAK,GAAA3mC,OAAI+sC,EAAJ,kBAKTqvD,EAAKpwF,KACH,CACE47F,QAAQ,GACRhL,UAAS,EACTtwF,MAAM,WACN5S,MAAM,YACN8zB,QAAQ,UACRtK,UAAU6qG,GACVthH,KAAK,gBACLk6B,MAAK,GAAA3mC,OAAI+sC,EAAJ,eAKTqvD,EAAKpwF,KACH,CACE47F,QAAQ,GACRn7F,KAAK,QACLqX,QAAO,EACPxX,MAAM,QACNswF,UAAS,EACT15E,UAAU,KACVxpB,MAAM,YACN8zB,QAAQ,UACRkvE,gBAAe,EACf/1D,MAAK,sCAIHprC,KAAK6L,SAAS,CAClBg1F,OACArvD,oRAgCejI,EAAavpC,KAAKC,MAA3B6a,MAASyuB,OAEXiI,EAAYxxC,KAAKwK,MAAMgnC,UACvB4uE,EAAe11G,OAAOu0C,SAAStyB,KAAKrC,OAAO,GAE7C+1F,EAAgB,KAChBC,EAAiB,KAEfzf,EAAO7gG,KAAKwK,MAAMq2F,KAEpB9G,EAAkB,KAClBqS,EAAqB,KAEzBvL,EAAK/2F,QAAS,SAAA2rB,GACZA,EAAE4rE,UAAW,EACb,IAAM6f,EAAe1vE,EAAU,IAAIjI,EAAO6wD,QACtCgmB,EAAa9vG,gBAAkBmlB,EAAE2V,MAAM96B,gBAAoBmlB,EAAE42E,QAAQvpG,QAAU2yB,EAAE2V,MAAM96B,gBAAkB4wG,EAAa5wG,eACxHmlB,EAAE4rE,UAAW,EACS,OAAlBgf,IACFA,EAAgB5qF,EAAE9N,YAEX8N,EAAE42E,QAAQvpG,QACnB2yB,EAAE42E,QAAQviG,QAAQ,SAAAq3G,GAChBA,EAAK9f,UAAW,GACE5rE,EAAE2V,MAAM,IAAI+1E,EAAK/1E,OACrB96B,gBAAkB8vG,EAAa9vG,gBAC3CmlB,EAAE4rE,UAAW,EACb8f,EAAK9f,UAAW,EAGM,OAAlBgf,IAEAA,EADEc,EAAKx5F,UACSw5F,EAAKx5F,UAEL8N,EAAE9N,YAMpBw5F,EAAK9f,WACP+K,EAAqB+U,KAOvB1rF,EAAE4rE,WACJtH,EAAkBtkE,KAKjB4qF,4CACIrgH,KAAKosC,YAAY,KAAI,6BAGxBpsC,KAAK6L,SAAS,CAClBg1F,OACAt3D,SACAiI,YACA4uE,eACAC,gBACAC,iBACAvmB,kBACAqS,yKAKEpsG,KAAKwgH,WACP91G,OAAO45B,aAAatkC,KAAKwgH,uKAK3BxgH,KAAKgJ,qBAOChJ,KAAKohH,kBACXphH,KAAKyqG,qRAILzqG,KAAKwgH,UAAY91G,OAAOm5B,WAAW,WAC5B56B,EAAKhJ,MAAMohH,oBAAuBp4G,EAAKhJ,MAAM2b,sBAChD3S,EAAK4C,SAAS,CACZ00G,iBAAgB,KAGpB,KAYFvgH,KAAKgJ,qBACChJ,KAAKohH,kBACXphH,KAAKyqG,aACLzqG,KAAKmN,gMAGkBpC,EAAUqC,2FAEjCpN,KAAKgJ,YAECy4G,EAAa12G,EAAU+P,MAAMyuB,OAC7BA,EAASvpC,KAAKC,MAAM6a,MAAMyuB,OAE5B3pB,KAAKC,UAAU4hG,KAAgB7hG,KAAKC,UAAU0pB,mCAC1CvpC,KAAK6L,SAAS,CAClBw0G,cAAc,MACb,WACDpyG,EAAKw8F,sBAIHhvF,EAAiB1Q,EAAUvJ,UAAYxB,KAAKC,MAAMuB,QAClD6/G,EAAqBrhH,KAAKC,MAAMohH,oBAAsBt2G,EAAUs2G,qBAAuBrhH,KAAKC,MAAMohH,mBAClGzlG,EAAuB5b,KAAKC,MAAM2b,sBAAwB7Q,EAAU6Q,uBAAyB5b,KAAKC,MAAM2b,sBAE1GH,GAAkB4lG,GAAsBzlG,IAC1C5b,KAAKmN,qJAIGitF,GAA0B,IAAlBylB,IAAkBr9G,UAAAM,OAAA,QAAAC,IAAAP,UAAA,KAAAA,UAAA,GAGhCq9G,IACFzlB,EAAUA,EAAQ1rC,QAAQ1uD,KAAKwK,MAAMgnC,UAAU,IAAI,KAGrD,IAAM4wE,GAAYvC,EAAe7/G,KAAKwK,MAAMgnC,WAAW4oD,EAAQt3F,OAAO,EAAI,IAAIs3F,EAAU,IAAMA,GAAS1rC,QAAQ,SAAQ,IACvHhkD,OAAOu0C,SAAStyB,KAAOy1F,EAGvBpiH,KAAKS,cAAc+iB,yBAAyB,CAC1CC,cAAe,KACfE,WAAYy+F,EACZ1+F,YAAa,gBAGfhZ,OAAOykD,SAAS,EAAG,sKAIfnvD,KAAKC,MAAMuB,yCAQHmD,QAAQC,IAAI,CACpB5E,KAAKw/G,eAAerD,oBACpBn8G,KAAKw/G,eAAevF,gBAAgBj6G,KAAKC,MAAMuB,SAC/CxB,KAAKw/G,eAAehG,iBAAiBx5G,KAAKC,MAAMuB,SAChDxB,KAAKw/G,eAAexF,mBAAmBh6G,KAAKC,MAAMuB,qDAThD66G,sBAAmBC,0BAErBpC,OACAh5G,OACAm+G,OAQFr/G,KAAK6L,SAAS,CACZquG,QACAh5G,UACAm+G,kBACAhD,oBACAC,8JAWJ,IAAMgG,EAAgBtiH,KAAKwK,MAAM61G,cAAgBrgH,KAAKwK,MAAM61G,cAAgB,KAC5E,OACE7gH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,OACP6W,SAAU,QACVvH,cAAe,MACf3K,OAAQ,CAAEyL,OAAO+N,YAAY,GAAI,KAAK,SACtCra,gBAAiB,CAAC,cAAc,UAEhCoB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoQ,OAAQ,EACRqB,OAAQ,EACR9W,MAAO,CAAC,EAAE,EAAE,GACZsP,cAAe,SACfuH,SAAU,CAAC,QAAQ,aAEnB3R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,EAAG,CAAC,EAAE,GACNzP,MAAO,CAAC,QAAQ,QAChB2E,OAAQ,CAAC,OAAO,UAEhBO,EAAAC,EAAAC,cAAC6iH,GAAD3iH,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEE4gG,KAAM7gG,KAAKwK,MAAMq2F,UAIvBrhG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEyhB,GAAI,EACJD,GAAI,CAAC,EAAE,GACP7P,GAAI,EACJhX,MAAO,CAAC,EAAE,EAAE,GACZ4iB,MAAO,CACLyiF,UAAU,SACV6iB,UAAU,UAEZ54G,cAAe,UACfxL,gBAAiB,eAGd4B,KAAKC,MAAMohH,oBAAuBrhH,KAAKC,MAAM2b,sBAAyB0mG,EAiErE9iH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACPsP,cAAe,UAEfpK,EAAAC,EAAAC,cAAC+iH,GAAD7iH,OAAAC,OAAA,CACEusC,YAAapsC,KAAKosC,YAAYvhC,KAAK7K,OAC/BA,KAAKC,QAGTqiH,GACE9iH,EAAAC,EAAAC,cAAC4iH,EAAD1iH,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEEi6G,MAAOl6G,KAAKwK,MAAM0vG,MAClBh5G,QAASlB,KAAKwK,MAAMtJ,QACpByrC,UAAW3sC,KAAKwK,MAAM++B,OACtB8oF,aAAcryH,KAAKmN,SAAStC,KAAK7K,MACjCosC,YAAapsC,KAAKosC,YAAYvhC,KAAK7K,MACnCq/G,gBAAiBr/G,KAAKwK,MAAM60G,gBAC5BtlB,gBAAiB/5F,KAAKwK,MAAMuvF,gBAC5BsiB,kBAAmBr8G,KAAKwK,MAAM6xG,kBAC9BjQ,mBAAoBpsG,KAAKwK,MAAM4hG,mBAC/BnjF,iBAAkBjpB,KAAKipB,iBAAiBpe,KAAK7K,MAC7Cs8G,sBAAuBt8G,KAAKwK,MAAM8xG,0BAtF1C98G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,EACP8R,UAAW,OACXzC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGb7J,KAAKwK,MAAM+1G,gBAiBV/gH,EAAAC,EAAAC,cAAC8gB,GAAD,CACE1B,UAAW,CACT/U,EAAE,EACFmV,GAAG,EACH5kB,MAAM,CAAC,EAAE,OAGXkF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgK,WAAY,SACZC,cAAe,UAEfpK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE0M,KAAM,QACNM,KAAM,UACNxO,MAAO,aAETqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuf,GAAI,EACJlgB,SAAU,EACVb,MAAO,WACPkT,UAAW,UAJb,qCAMoC7R,EAAAC,EAAAC,cAAA,WANpC,yDAQAF,EAAAC,EAAAC,cAACmsC,GAAD,CACEhmB,YAAa,CACX3G,GAAG,EACH5kB,MAAM,CAAC,EAAE,KAEX+jB,YAAare,KAAK21F,OAAO9qF,KAAK7K,OALhC,YAxCJR,EAAAC,EAAAC,cAACyM,GAAD,CACE7B,UAAW,CACTkxB,SAAS,EACT5sB,WAAW,GAEbvE,YAAa,CACXiH,GAAG,EACHjF,KAAK,QAEP3C,UAAW,CACT8b,GAAG,EACH5b,cAAc,UAEhB3Q,KAAQ+G,KAAKC,MAAMohH,mBAA+CrhH,KAAKC,MAAM2b,qBAAgD,oBAAzB,uBAA5D,yBAuEtDpc,EAAAC,EAAAC,cAACkjH,GAAD,CACE/jF,WAAY7+B,KAAK++B,WACjBjlC,MAAOkG,KAAKwK,MAAMi2G,WAClBlJ,QAASv3G,KAAKwK,MAAMk2G,aACpBn/E,OAAmC,YAA3BvhC,KAAKwK,MAAMilG,sBAzdLtvG,aCyJT47B,8MA/JbvxB,MAAQ,KAKR/J,cAAgB,gFAEVT,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,4JAK9CD,KAAKgJ,kQAKLhJ,KAAKgJ,iMAGkB+B,EAAWqC,sEAElCpN,KAAKgJ,aAEDhJ,KAAKC,MAAM88C,SAAY/8C,KAAKC,MAAM88C,QAAQ0iD,2DACrC,yIAIF,IAAAx2F,EAAAjJ,KAEDm0F,EAAoBn0F,KAAKS,cAAcG,gBAAgB,CAAC,aAAa,YAE3E,OACEpB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEud,MAAO,CACLlN,KAAM,IACNF,MAAO,IACPsB,OAAQ,GACRD,SAAU,aAGZ3R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,EAAG,EACHJ,WAAY,SACZE,eAAgB,SAChBzL,gBAAiB,YACjBwL,cAAe,CAAC,SAAS,QAEzBpK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACExB,MAAO,QACPkT,UAAW,UAFb,sCAMA7R,EAAAC,EAAAC,cAAC40F,EAAD,CACE5oE,GAAI,EACJtK,GAAI,EACJlC,GAAI,CAAC,EAAE,GACP5S,GAAI,CAAC,EAAE,GACP6sB,GAAI,OACJh7B,MAAO,QACP+e,MAAO,CACLxO,QAAQ,OACRpP,aAAa,MACbsK,cAAc,MACdD,WAAW,YAEbvL,gBAAiB,UACjBymB,KAAM,uEAdR,YAiBErlB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2M,GAAI,EACJD,KAAM,QACNlO,MAAO,QACPwO,KAAM,yBAKZnN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+1B,GAAI,CAAC,EAAE,GACPjQ,GAAI,OACJnuB,GAAI,cACJgD,MAAO,CAAC,MAAM,QACd63B,SAAU,CAAC,OAAO,SAClBxoB,WAAY,CAAC,SAAS,eAEtBnK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2M,GAAI,CAAC,EAAG,GACRhS,MAAO,CAAC,GAAK,MAEbkF,EAAAC,EAAAC,cAAC60F,EAAA,EAAD,CACEnlC,GAAG,KAEH5vD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwR,SAAU,WACVI,IAAK,kBACLtS,OAAQ,CAAC,OAAO,YAIpBO,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErF,MAAO,CAAC,GAAI,EAAE,IACdqP,WAAY,SACZC,cAAe,MACfC,eAAgB,YAGdsqF,GACE30F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwiB,GAAI,EACJnjB,SAAU,EACVb,MAAO,QACP8oB,WAAY,QACZpY,WAAY,YACZwC,UAAW,CAAC,SAAS,QACrB+M,QAAU,SAACpQ,GAAD,OAAOtD,OAAOu0C,SAAStyB,KAAK,iBAPxC,eAaD3sB,KAAKC,MAAM+K,UACVxL,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2rB,SAAA,KACE5rB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwiB,GAAI,EACJnjB,SAAU,EACVb,MAAO,QACP8oB,WAAY,QACZpY,WAAY,YACZwC,UAAW,CAAC,SAAS,QACrB+M,QAAS,SAACpQ,GAAO/E,EAAKxI,cAAc0uD,SAAS9jD,SAASC,eAAe,YAAYszF,UAAU,OAP7F,cAWAp/F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACVb,MAAO,QACP8oB,WAAY,QACZpY,WAAY,YACZwC,UAAW,CAAC,SAAS,QACrB+M,QAAS,SAACpQ,GAAO/E,EAAKxI,cAAc0uD,SAAS9jD,SAASC,eAAe,OAAOszF,UAAU,OANxF,mBA7IC9sE,IAAM3xB,sBCNZ,SAASg4H,KAAc,IAC5BC,EAAaC,eAAbD,SAMR,OAJAE,oBAAU,WACR5tH,OAAOykD,SAAS,EAAG,IAClB,CAACipE,IAEG,+BCwCMG,8MAxCb/tH,MAAQ,2EAGN,OACEhL,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKqf,UAAWC,KAAOpoB,gBAAiBsqB,GAAI,CAAC,EAAE,GAAIuU,GAAI,CAAC,MAAO,QAC7Dl2B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKqf,UAAWC,KAAOnoB,iBACvB0I,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKwR,SAAU,WAAYC,OAAQ,IACjC5R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMiK,cAAe,SAAUD,WAAY,SAAUwoB,SAAU,CAAC,OAAQ,QAAS1M,GAAI,OAAQpU,UAAW,SAAUqkB,GAAI,CAAC,MAAO,QAC5Hl2B,EAAAC,EAAAC,cAACC,EAAA,EAAQkoB,GAAT,CAAYhZ,WAAY,YAAawQ,WAAY,QAAS/N,GAAI,QAAStS,SAAU,CAAC,QAAQ,GAAIqS,UAAW,SAAUlT,MAAO,SAA1H,4BAGAqB,EAAAC,EAAAC,cAACC,EAAA,EAAQs2B,GAAT,CAAYpnB,WAAY,YAAawQ,WAAY,QAAS/N,GAAI,QAAS1C,WAAY,EAAG5P,SAAU,CAAC,QAAQ,GAAIqS,UAAW,SAAUlT,MAAO,SAAzI,wDAGAqB,EAAAC,EAAAC,cAAC60F,EAAA,EAAD,CAAYnlC,GAAG,IAAIlyC,MAAO,CAAC8J,eAAe,SACxCxnB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqf,UAAWw5G,KAActhI,eACzBoI,aAAc,EACd+M,MAAMrM,KAAKC,MAAM+K,SAAW,UAC5B0a,UAAW,OACXoX,cAAe,QACfluB,WAAY,EACZ5P,SAAU,CAAC,EAAE,GACbymB,GAAI,OACJtE,GAAI,CAAC,EAAE,GACPjC,GAAI,GAVN,sBAkBR1f,EAAAC,EAAAC,cAACk1F,GAAD,cAnCmBz0F,aCyCZs4H,8MA9CbC,sBAAwB,WACtB,IAAIC,EAAc,OAClB,GAAIt4H,EAAKJ,MAAM88C,QACb,OAAQ18C,EAAKJ,MAAM88C,QAAQrsC,IACzB,KAAK,EACHioH,EAAc,UACd,MACF,KAAK,EACHA,EAAc,OACd,MACF,KAAK,EACHA,EAAc,UACd,MACF,KAAK,EACHA,EAAc,UACd,MACF,KAAK,GACHA,EAAc,UACd,MACF,QACEA,EAAc,OAIpB,OAAOA,2EAIP,IAAMC,EAAgB,CACpBt5H,aAAc,MACdlB,gBAAiB4B,KAAK04H,wBACtBz5H,OAAQ,MACR3E,MAAO,OAGT,OACEkF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMgK,WAAY,UAChBnK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKud,MAAO07G,EAAez2G,GAAI,IAC/B3iB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMud,MAAO,CAAEyO,cAAe,eAC3B3rB,KAAKC,MAAM88C,QAAQpwC,cAxCAmlB,IAAM3xB,WCW9B04H,GAAkB,SAAA54H,GAAK,OAC3BT,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKuf,GAAI,EAAGoU,UAAW,EAAGj1B,YAAY,UAAUq3B,GAAI,GAClDl2B,EAAAC,EAAAC,cAACC,EAAA,EAAQyf,GAAT,CAAY/N,UAAW,UAAvB,cACA7R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEye,QAASne,EAAMixC,OAAOvQ,QAAQ0pF,sBAC9Bh+G,KAAK,QACL8V,GAAI,EACJ7Q,GAAI,GAJN,0BASA9R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEye,QAASne,EAAMixC,OAAOvQ,QAAQktF,oBAC9BxhH,KAAK,QACL8V,GAAI,EACJ7Q,GAAI,GAJN,cAQA9R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE0M,KAAK,QACL+R,QAASne,EAAMixC,OAAOvQ,QAAQopF,2BAC9B5nG,GAAI,EACJ7Q,GAAI,GAJN,sBAQA9R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE0M,KAAK,QACL+R,QAASne,EAAMixC,OAAOvQ,QAAQqpF,gCAC9B7nG,GAAI,EACJ7Q,GAAI,GAJN,uBAQA9R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE0M,KAAK,QACL+R,QAAS,SAAAqqC,GACPxoD,EAAMixC,OAAOvQ,QAAQ2pF,kBAAkB7hE,IAEzCtmC,GAAI,EACJ7Q,GAAI,GANN,aAUA9R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE0M,KAAK,QACL+R,QAASne,EAAMixC,OAAOvQ,QAAQmpF,uBAC9B3nG,GAAI,EACJ7Q,GAAI,GAJN,oBAQA9R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE0M,KAAK,QACL+R,QAASne,EAAMixC,OAAOvQ,QAAQyuF,kBAC9BjtG,GAAI,EACJ7Q,GAAI,GAJN,eAuOWwnH,oLA1NX,OACEt5H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMrF,MAAO,QAASmrB,GAAI,OAAQtE,GAAI,GACpC3hB,EAAAC,EAAAC,cAACC,EAAA,EAAQs2B,GAAT,CAAY5kB,UAAW,UAAvB,iBAEA7R,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMgK,WAAY,UAChBnK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMgN,KAAK,QAAQxO,MAAO,QAASgkB,GAAI,IACvC3iB,EAAAC,EAAAC,cAACC,EAAA,EAAD,wCAIJH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMgK,WAAY,UACf3J,KAAKC,MAAMuiC,KACVhjC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMgN,KAAK,QAAQxO,MAAO,QAASgkB,GAAI,IAEvC3iB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMgN,KAAK,QAAQxO,MAAO,MAAOgkB,GAAI,IAEvC3iB,EAAAC,EAAAC,cAACC,EAAA,EAAD,kCAGAK,KAAKC,MAAMuiC,KAgBT,KAfFhjC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM2M,GAAI,EAAG3C,WAAY,SAAUE,eAAgB,iBACjDrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMgK,WAAY,UAChBnK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMgN,KAAK,OAAOwV,GAAI,EAAGhkB,MAAM,SAC/BqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMxB,MAAM,QAAZ,8BAGFqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEklB,KAAK,4FACL/kB,OAAO,SAASC,IAAI,gCAEpBP,EAAAC,EAAAC,cAACC,EAAA,EAAO48B,QAAR,CAAgBlwB,KAAK,SAArB,6BAQPrM,KAAKC,MAAMuiC,KACVhjC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEyhB,GAAI,EACJoE,GAAI,EACJ8N,UAAW,EACX8H,aAAc,EACd/8B,YAAa,UACbgT,UAAW,SACXxH,eAAgB,eAChBF,WAAY,UAEZnK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE0M,KAAK,QACL+R,QAASpe,KAAKC,MAAM6sC,0BACpB10C,UAAW4H,KAAKC,MAAMuiC,MAHxB,sBAOAhjC,EAAAC,EAAAC,cAACC,EAAA,EAAD,eACAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQ0M,KAAK,QAAQjU,UAAQ,GAA7B,6BAIA,KAEJoH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMgK,WAAY,UACf3J,KAAKC,MAAM88C,QAAQ0iD,iBAClBjgG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMgN,KAAK,QAAQxO,MAAO,QAASgkB,GAAI,IAEvC3iB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMgN,KAAK,QAAQxO,MAAO,MAAOgkB,GAAI,IAEvC3iB,EAAAC,EAAAC,cAACC,EAAA,EAAD,yBAGDK,KAAKC,MAAMuiC,OAASxiC,KAAKC,MAAM88C,QAAQ0iD,iBACtCjgG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM2M,GAAI,EAAG3C,WAAY,SAAUE,eAAgB,iBACjDrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMgK,WAAY,UAChBnK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMgN,KAAK,OAAOwV,GAAI,EAAGhkB,MAAM,SAC/BqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMgK,WAAY,UAChBnK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwiB,GAAI,EACJhkB,MAAM,OACN+e,MAAO,CAAEyO,cAAe,eAH1B,oBAOAnsB,EAAAC,EAAAC,cAACq5H,GAAD,CAAiBh8E,QAAS/8C,KAAKC,MAAM88C,QAAQ+lE,WAE/CtjH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMgK,WAAY,UAChBnK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwiB,GAAI,EACJhkB,MAAM,OACN+e,MAAO,CAAEyO,cAAe,eAH1B,qBAOAnsB,EAAAC,EAAAC,cAACq5H,GAAD,CAAiBh8E,QAAS/8C,KAAKC,MAAM88C,QAAQ31B,cAKnD5nB,EAAAC,EAAAC,cAACC,EAAA,EAAO48B,QAAR,CAAgBlwB,KAAK,QAAQ+R,QAASpe,KAAKC,MAAM0pH,cAAjD,kBAIA,KACH3pH,KAAKC,MAAMuiC,MAAQxiC,KAAKC,MAAMw/F,iBAC7BjgG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM2M,GAAI,EAAG3C,WAAY,UACvBnK,EAAAC,EAAAC,cAACq5H,GAAD,CAAiBh8E,QAAS/8C,KAAKC,MAAM88C,QAAQ+lE,WAE7C,MAGNtjH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMgK,WAAY,UACf3J,KAAKC,MAAMuB,SAAWxB,KAAKC,MAAM0nH,iBAChCnoH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMgN,KAAK,QAAQxO,MAAO,QAASgkB,GAAI,IAEvC3iB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMgN,KAAK,QAAQxO,MAAO,MAAOgkB,GAAI,IAEvC3iB,EAAAC,EAAAC,cAACC,EAAA,EAAD,uCAGAK,KAAKC,MAAMuB,UACbxB,KAAKC,MAAMuiC,MACVxiC,KAAKC,MAAMgoH,oBAWR,KAVFzoH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM2M,GAAI,EAAG3C,WAAY,SAAUE,eAAgB,iBACjDrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMgK,WAAY,UAChBnK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMgN,KAAK,OAAOwV,GAAI,EAAGhkB,MAAM,SAC/BqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMxB,MAAM,QAAZ,gCAGFqB,EAAAC,EAAAC,cAACC,EAAA,EAAO48B,QAAR,CAAgBlwB,KAAK,QAAQ+R,QAASpe,KAAKC,MAAMqhH,aAAjD,YAKHthH,KAAKC,MAAMuB,SAAWxB,KAAKC,MAAMuiC,KAChChjC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM2M,GAAI,EAAG3C,WAAY,UACvBnK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMgN,KAAK,QAAQxO,MAAO,QAASgkB,GAAI,IACvC3iB,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMxB,MAAM,QAAZ,oBAAqC6B,KAAKC,MAAMuB,SAChDhC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMxB,MAAO6B,KAAKC,MAAMmpH,kBAAoB,MAAQ,QAApD,mBACmBppH,KAAKC,MAAMipH,kBAIhC,KAEHlpH,KAAKC,MAAMgoH,oBACVzoH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM2M,GAAI,EAAGzC,eAAgB,iBAC3BrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMgK,WAAY,UAChBnK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMgN,KAAK,QAAQwV,GAAI,EAAGhkB,MAAM,QAChCqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMxB,MAAM,OAAZ,kCAGFqB,EAAAC,EAAAC,cAACC,EAAA,EAAO48B,QAAR,CAAgBlwB,KAAK,QAAQ+R,QAASpe,KAAKC,MAAMqhH,aAAjD,YAIA,KAE8B,OAAhCthH,KAAKC,MAAM0nH,mBACqB,IAAhC3nH,KAAKC,MAAM0nH,mBACb3nH,KAAKC,MAAMuiC,KAgBP,KAfFhjC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2M,GAAI,EACJkZ,GAAI,EACJ7b,WAAY,SACZE,eAAgB,iBAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMgK,WAAY,UAChBnK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMgN,KAAK,OAAOwV,GAAI,EAAGhkB,MAAM,SAC/BqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMxB,MAAM,QAAZ,yBAGFqB,EAAAC,EAAAC,cAACC,EAAA,EAAO48B,QAAR,CAAgBlwB,KAAK,QAAQ+R,QAASpe,KAAKC,MAAMunH,iBAAjD,cAM6B,IAAhCxnH,KAAKC,MAAM0nH,iBACVnoH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2M,GAAI,EACJkZ,GAAI,EACJ7b,WAAY,SACZE,eAAgB,iBAEhBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMgK,WAAY,UAChBnK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMgN,KAAK,QAAQwV,GAAI,EAAGhkB,MAAM,QAChCqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMxB,MAAM,OAAZ,yBAGFqB,EAAAC,EAAAC,cAACC,EAAA,EAAO48B,QAAR,CAAgBlwB,KAAK,QAAQ+R,QAASpe,KAAKC,MAAMunH,iBAAjD,aAIA,MAEmC,IAAtCxnH,KAAKC,MAAM2pH,uBACVpqH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM2M,GAAI,GACR9M,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMgN,KAAK,QAAQwV,GAAI,EAAGhkB,MAAM,QAChCqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMxB,MAAM,OAAZ,yBAEA,MAGNqB,EAAAC,EAAAC,cAACs5H,GAAoBh5H,KAAKC,OAE1BT,EAAAC,EAAAC,cAACC,EAAA,EAAa+vH,SAAd,CAAuBvyG,IAAK,SAAA87G,GAAI,OAAKvuH,OAAOszB,cAAgBi7F,aAtNzCnnG,IAAM3xB,WC7ElB4zC,GAAA,CAAEvtC,QAFD,6CAEUye,IADd,CAAC,CAAC6uG,UAAW,EAAKC,OAAS,GAAGpnH,KAAO,OAAOusH,QAAU,CAAC,CAACvsH,KAAO,GAAGvD,KAAO,YAAYgsH,SAAU,EAAMpB,gBAAkB,OAAO5qH,KAAO,YAAY,CAAC0qH,UAAW,EAAMC,OAAS,GAAGpnH,KAAO,OAAOusH,QAAU,GAAG9D,SAAU,EAAMpB,gBAAkB,aAAa5qH,KAAO,YAAY,CAAC0qH,UAAW,EAAMC,OAAS,CAAC,CAACpnH,KAAO,MAAMvD,KAAO,WAAW,CAACuD,KAAO,MAAMvD,KAAO,YAAYuD,KAAO,UAAUusH,QAAU,CAAC,CAACvsH,KAAO,GAAGvD,KAAO,SAASgsH,SAAU,EAAMpB,gBAAkB,aAAa5qH,KAAO,YAAY,CAAC0qH,UAAW,EAAMC,OAAS,CAAC,CAACpnH,KAAO,SAASvD,KAAO,YAAYuD,KAAO,WAAWusH,QAAU,GAAG9D,SAAU,EAAMpB,gBAAkB,aAAa5qH,KAAO,YAAY,CAAC0qH,UAAW,EAAKC,OAAS,GAAGpnH,KAAO,cAAcusH,QAAU,CAAC,CAACvsH,KAAO,GAAGvD,KAAO,YAAYgsH,SAAU,EAAMpB,gBAAkB,OAAO5qH,KAAO,YAAY,CAAC0qH,UAAW,EAAMC,OAAS,CAAC,CAACpnH,KAAO,MAAMvD,KAAO,WAAW,CAACuD,KAAO,MAAMvD,KAAO,WAAW,CAACuD,KAAO,MAAMvD,KAAO,YAAYuD,KAAO,eAAeusH,QAAU,CAAC,CAACvsH,KAAO,GAAGvD,KAAO,SAASgsH,SAAU,EAAMpB,gBAAkB,aAAa5qH,KAAO,YAAY,CAAC0qH,UAAW,EAAKC,OAAS,GAAGpnH,KAAO,WAAWusH,QAAU,CAAC,CAACvsH,KAAO,GAAGvD,KAAO,YAAYgsH,SAAU,EAAMpB,gBAAkB,OAAO5qH,KAAO,YAAY,CAAC0qH,UAAW,EAAMC,OAAS,CAAC,CAACpnH,KAAO,MAAMvD,KAAO,WAAW,CAACuD,KAAO,MAAMvD,KAAO,YAAYuD,KAAO,OAAOusH,QAAU,GAAG9D,SAAU,EAAMpB,gBAAkB,aAAa5qH,KAAO,YAAY,CAAC0qH,UAAW,EAAMC,OAAS,CAAC,CAACpnH,KAAO,MAAMvD,KAAO,YAAYuD,KAAO,OAAOusH,QAAU,GAAG9D,SAAU,EAAMpB,gBAAkB,aAAa5qH,KAAO,YAAY,CAAC0qH,UAAW,EAAMC,OAAS,CAAC,CAACpnH,KAAO,QAAQvD,KAAO,YAAYuD,KAAO,UAAUusH,QAAU,GAAG9D,SAAU,EAAMpB,gBAAkB,aAAa5qH,KAAO,YAAY,CAAC0qH,UAAW,EAAKC,OAAS,CAAC,CAACpnH,KAAO,MAAMvD,KAAO,YAAYuD,KAAO,YAAYusH,QAAU,CAAC,CAACvsH,KAAO,GAAGvD,KAAO,YAAYgsH,SAAU,EAAMpB,gBAAkB,OAAO5qH,KAAO,YAAY,CAAC0qH,UAAW,EAAKC,OAAS,GAAGpnH,KAAO,UAAUusH,QAAU,CAAC,CAACvsH,KAAO,GAAGvD,KAAO,SAASgsH,SAAU,EAAMpB,gBAAkB,OAAO5qH,KAAO,YAAY,CAAC0qH,UAAW,EAAMC,OAAS,CAAC,CAACpnH,KAAO,aAAavD,KAAO,YAAYuD,KAAO,eAAeusH,QAAU,GAAG9D,SAAU,EAAMpB,gBAAkB,aAAa5qH,KAAO,YAAY,CAAC0qH,UAAW,EAAKC,OAAS,GAAGpnH,KAAO,QAAQusH,QAAU,CAAC,CAACvsH,KAAO,GAAGvD,KAAO,YAAYgsH,SAAU,EAAMpB,gBAAkB,OAAO5qH,KAAO,YAAY,CAAC0qH,UAAW,EAAKC,OAAS,GAAGpnH,KAAO,SAASusH,QAAU,CAAC,CAACvsH,KAAO,GAAGvD,KAAO,YAAYgsH,SAAU,EAAMpB,gBAAkB,OAAO5qH,KAAO,YAAY,CAAC0qH,UAAW,EAAMC,OAAS,CAAC,CAACpnH,KAAO,MAAMvD,KAAO,WAAW,CAACuD,KAAO,MAAMvD,KAAO,YAAYuD,KAAO,OAAOusH,QAAU,GAAG9D,SAAU,EAAMpB,gBAAkB,aAAa5qH,KAAO,YAAY,CAAC0qH,UAAW,EAAMC,OAAS,CAAC,CAACpnH,KAAO,MAAMvD,KAAO,YAAYuD,KAAO,OAAOusH,QAAU,GAAG9D,SAAU,EAAMpB,gBAAkB,aAAa5qH,KAAO,YAAY,CAAC0qH,UAAW,EAAMC,OAAS,CAAC,CAACpnH,KAAO,MAAMvD,KAAO,WAAW,CAACuD,KAAO,MAAMvD,KAAO,YAAYuD,KAAO,WAAWusH,QAAU,CAAC,CAACvsH,KAAO,GAAGvD,KAAO,SAASgsH,SAAU,EAAMpB,gBAAkB,aAAa5qH,KAAO,YAAY,CAAC0qH,UAAW,EAAMC,OAAS,CAAC,CAACpnH,KAAO,MAAMvD,KAAO,WAAW,CAACuD,KAAO,MAAMvD,KAAO,YAAYuD,KAAO,OAAOusH,QAAU,GAAG9D,SAAU,EAAMpB,gBAAkB,aAAa5qH,KAAO,YAAY,CAAC0qH,UAAW,EAAMC,OAAS,CAAC,CAACpnH,KAAO,MAAMvD,KAAO,WAAW,CAACuD,KAAO,MAAMvD,KAAO,WAAW,CAACuD,KAAO,MAAMvD,KAAO,YAAYuD,KAAO,OAAOusH,QAAU,GAAG9D,SAAU,EAAMpB,gBAAkB,aAAa5qH,KAAO,YAAY,CAAC0qH,UAAW,EAAMC,OAAS,GAAGpnH,KAAO,QAAQusH,QAAU,GAAG9D,SAAU,EAAMpB,gBAAkB,aAAa5qH,KAAO,YAAY,CAAC0qH,UAAW,EAAKC,OAAS,GAAGpnH,KAAO,YAAYusH,QAAU,CAAC,CAACvsH,KAAO,GAAGvD,KAAO,YAAYgsH,SAAU,EAAMpB,gBAAkB,OAAO5qH,KAAO,YAAY,CAAC0qH,UAAW,EAAMC,OAAS,CAAC,CAACpnH,KAAO,MAAMvD,KAAO,YAAYuD,KAAO,UAAUusH,QAAU,CAAC,CAACvsH,KAAO,GAAGvD,KAAO,SAASgsH,SAAU,EAAMpB,gBAAkB,aAAa5qH,KAAO,YAAY,CAAC0qH,UAAW,EAAKC,OAAS,CAAC,CAACpnH,KAAO,MAAMvD,KAAO,WAAW,CAACuD,KAAO,MAAMvD,KAAO,YAAYuD,KAAO,YAAYusH,QAAU,CAAC,CAACvsH,KAAO,GAAGvD,KAAO,YAAYgsH,SAAU,EAAMpB,gBAAkB,OAAO5qH,KAAO,YAAY,CAAC0qH,UAAW,EAAMC,OAAS,CAAC,CAACpnH,KAAO,MAAMvD,KAAO,WAAW,CAACuD,KAAO,MAAMvD,KAAO,YAAYuD,KAAO,OAAOusH,QAAU,GAAG9D,SAAU,EAAMpB,gBAAkB,aAAa5qH,KAAO,YAAY,CAAC2qH,OAAS,CAAC,CAACpnH,KAAO,UAAUvD,KAAO,YAAYgsH,SAAU,EAAMpB,gBAAkB,aAAa5qH,KAAO,eAAe,CAAC+vH,WAAY,EAAMpF,OAAS,CAAC,CAACqF,SAAU,EAAKzsH,KAAO,MAAMvD,KAAO,WAAW,CAACgwH,SAAU,EAAMzsH,KAAO,MAAMvD,KAAO,YAAYuD,KAAO,OAAOvD,KAAO,SAAS,CAAC+vH,WAAY,EAAMpF,OAAS,CAAC,CAACqF,SAAU,EAAKzsH,KAAO,MAAMvD,KAAO,WAAW,CAACgwH,SAAU,EAAMzsH,KAAO,MAAMvD,KAAO,YAAYuD,KAAO,OAAOvD,KAAO,SAAS,CAAC+vH,WAAY,EAAMpF,OAAS,CAAC,CAACqF,SAAU,EAAKzsH,KAAO,YAAYvD,KAAO,YAAYuD,KAAO,kBAAkBvD,KAAO,SAAS,CAAC+vH,WAAY,EAAMpF,OAAS,CAAC,CAACqF,SAAU,EAAKzsH,KAAO,QAAQvD,KAAO,YAAYuD,KAAO,cAAcvD,KAAO,SAAS,CAAC+vH,WAAY,EAAKpF,OAAS,CAAC,CAACqF,SAAU,EAAKzsH,KAAO,MAAMvD,KAAO,UAAU,CAACgwH,SAAU,EAAKzsH,KAAO,MAAMvD,KAAO,WAAW,CAACgwH,SAAU,EAAKzsH,KAAO,MAAMvD,KAAO,WAAW,CAACgwH,SAAU,EAAKzsH,KAAO,MAAMvD,KAAO,WAAW,CAACgwH,SAAU,EAAMzsH,KAAO,MAAMvD,KAAO,WAAW,CAACgwH,SAAU,EAAMzsH,KAAO,MAAMvD,KAAO,UAAUuD,KAAO,UAAUvD,KAAO,SAAS,CAAC+vH,WAAY,EAAMpF,OAAS,CAAC,CAACqF,SAAU,EAAKzsH,KAAO,MAAMvD,KAAO,WAAW,CAACgwH,SAAU,EAAKzsH,KAAO,MAAMvD,KAAO,WAAW,CAACgwH,SAAU,EAAMzsH,KAAO,MAAMvD,KAAO,YAAYuD,KAAO,WAAWvD,KAAO,SAAS,CAAC+vH,WAAY,EAAMpF,OAAS,CAAC,CAACqF,SAAU,EAAKzsH,KAAO,MAAMvD,KAAO,WAAW,CAACgwH,SAAU,EAAKzsH,KAAO,MAAMvD,KAAO,WAAW,CAACgwH,SAAU,EAAMzsH,KAAO,MAAMvD,KAAO,YAAYuD,KAAO,WAAWvD,KAAO,sBCmtClkLi3C,GAAA,CAAE75C,QAptCD,6CAotCUye,IAntCd,CACV,CACE6uG,UAAY,EACZC,OAAU,GACVpnH,KAAQ,OACRusH,QAAW,CACT,CACEvsH,KAAQ,GACRvD,KAAQ,WAGZgsH,SAAW,EACXjtD,UAAa,aACb6rD,gBAAmB,OACnB5qH,KAAQ,YAEV,CACE0qH,UAAY,EACZC,OAAU,CACR,CACEpnH,KAAQ,UACRvD,KAAQ,WAEV,CACEuD,KAAQ,SACRvD,KAAQ,YAGZuD,KAAQ,UACRusH,QAAW,CACT,CACEvsH,KAAQ,GACRvD,KAAQ,SAGZgsH,SAAW,EACXjtD,UAAa,aACb6rD,gBAAmB,aACnB5qH,KAAQ,YAEV,CACE0qH,UAAY,EACZC,OAAU,GACVpnH,KAAQ,wBACRusH,QAAW,CACT,CACEvsH,KAAQ,GACRvD,KAAQ,YAGZgsH,SAAW,EACXjtD,UAAa,aACb6rD,gBAAmB,OACnB5qH,KAAQ,YAEV,CACE0qH,UAAY,EACZC,OAAU,CACR,CACEpnH,KAAQ,UACRvD,KAAQ,YAGZuD,KAAQ,uBACRusH,QAAW,CACT,CACEvsH,KAAQ,GACRvD,KAAQ,YAGZgsH,SAAW,EACXjtD,UAAa,aACb6rD,gBAAmB,aACnB5qH,KAAQ,YAEV,CACE0qH,UAAY,EACZC,OAAU,GACVpnH,KAAQ,cACRusH,QAAW,CACT,CACEvsH,KAAQ,GACRvD,KAAQ,YAGZgsH,SAAW,EACXjtD,UAAa,aACb6rD,gBAAmB,OACnB5qH,KAAQ,YAEV,CACE0qH,UAAY,EACZC,OAAU,GACVpnH,KAAQ,qBACRusH,QAAW,CACT,CACEvsH,KAAQ,GACRvD,KAAQ,YAGZgsH,SAAW,EACXjtD,UAAa,aACb6rD,gBAAmB,OACnB5qH,KAAQ,YAEV,CACE0qH,UAAY,EACZC,OAAU,CACR,CACEpnH,KAAQ,MACRvD,KAAQ,WAEV,CACEuD,KAAQ,MACRvD,KAAQ,WAEV,CACEuD,KAAQ,SACRvD,KAAQ,YAGZuD,KAAQ,eACRusH,QAAW,CACT,CACEvsH,KAAQ,GACRvD,KAAQ,SAGZgsH,SAAW,EACXjtD,UAAa,aACb6rD,gBAAmB,aACnB5qH,KAAQ,YAEV,CACE0qH,UAAY,EACZC,OAAU,GACVpnH,KAAQ,eACRusH,QAAW,CACT,CACEvsH,KAAQ,GACRvD,KAAQ,YAGZgsH,SAAW,EACXjtD,UAAa,aACb6rD,gBAAmB,OACnB5qH,KAAQ,YAEV,CACE0qH,UAAY,EACZC,OAAU,GACVpnH,KAAQ,WACRusH,QAAW,CACT,CACEvsH,KAAQ,GACRvD,KAAQ,YAGZgsH,SAAW,EACXjtD,UAAa,aACb6rD,gBAAmB,OACnB5qH,KAAQ,YAEV,CACE0qH,UAAY,EACZC,OAAU,CACR,CACEpnH,KAAQ,QACRvD,KAAQ,YAGZuD,KAAQ,sBACRusH,QAAW,CACT,CACEvsH,KAAQ,GACRvD,KAAQ,YAGZgsH,SAAW,EACXjtD,UAAa,aACb6rD,gBAAmB,aACnB5qH,KAAQ,YAEV,CACE0qH,UAAY,EACZC,OAAU,GACVpnH,KAAQ,UACRusH,QAAW,CACT,CACEvsH,KAAQ,GACRvD,KAAQ,YAGZgsH,SAAW,EACXjtD,UAAa,aACb6rD,gBAAmB,OACnB5qH,KAAQ,YAEV,CACE0qH,UAAY,EACZC,OAAU,CACR,CACEpnH,KAAQ,iBACRvD,KAAQ,YAGZuD,KAAQ,kBACRusH,QAAW,CACT,CACEvsH,KAAQ,GACRvD,KAAQ,YAGZgsH,SAAW,EACXjtD,UAAa,aACb6rD,gBAAmB,aACnB5qH,KAAQ,YAEV,CACE0qH,UAAY,EACZC,OAAU,GACVpnH,KAAQ,eACRusH,QAAW,CACT,CACEvsH,KAAQ,GACRvD,KAAQ,YAGZgsH,SAAW,EACXjtD,UAAa,aACb6rD,gBAAmB,OACnB5qH,KAAQ,YAEV,CACE0qH,UAAY,EACZC,OAAU,GACVpnH,KAAQ,cACRusH,QAAW,CACT,CACEvsH,KAAQ,GACRvD,KAAQ,YAGZgsH,SAAW,EACXjtD,UAAa,aACb6rD,gBAAmB,OACnB5qH,KAAQ,YAEV,CACE0qH,UAAY,EACZC,OAAU,CACR,CACEpnH,KAAQ,eACRvD,KAAQ,YAGZuD,KAAQ,kBACRusH,QAAW,CACT,CACEvsH,KAAQ,GACRvD,KAAQ,YAGZgsH,SAAW,EACXjtD,UAAa,aACb6rD,gBAAmB,aACnB5qH,KAAQ,YAEV,CACE0qH,UAAY,EACZC,OAAU,GACVpnH,KAAQ,8BACRusH,QAAW,CACT,CACEvsH,KAAQ,GACRvD,KAAQ,YAGZgsH,SAAW,EACXjtD,UAAa,aACb6rD,gBAAmB,OACnB5qH,KAAQ,YAEV,CACE0qH,UAAY,EACZC,OAAU,GACVpnH,KAAQ,qBACRusH,QAAW,CACT,CACEvsH,KAAQ,GACRvD,KAAQ,YAGZgsH,SAAW,EACXjtD,UAAa,aACb6rD,gBAAmB,OACnB5qH,KAAQ,YAEV,CACE0qH,UAAY,EACZC,OAAU,GACVpnH,KAAQ,aACRusH,QAAW,CACT,CACEvsH,KAAQ,GACRvD,KAAQ,YAGZgsH,SAAW,EACXjtD,UAAa,aACb6rD,gBAAmB,OACnB5qH,KAAQ,YAEV,CACE0qH,UAAY,EACZC,OAAU,CACR,CACEpnH,KAAQ,QACRvD,KAAQ,YAGZuD,KAAQ,YACRusH,QAAW,CACT,CACEvsH,KAAQ,GACRvD,KAAQ,YAGZgsH,SAAW,EACXjtD,UAAa,aACb6rD,gBAAmB,OACnB5qH,KAAQ,YAEV,CACE0qH,UAAY,EACZC,OAAU,GACVpnH,KAAQ,sBACRusH,QAAW,CACT,CACEvsH,KAAQ,GACRvD,KAAQ,YAGZgsH,SAAW,EACXjtD,UAAa,aACb6rD,gBAAmB,aACnB5qH,KAAQ,YAEV,CACE0qH,UAAY,EACZC,OAAU,GACVpnH,KAAQ,gBACRusH,QAAW,CACT,CACEvsH,KAAQ,GACRvD,KAAQ,YAGZgsH,SAAW,EACXjtD,UAAa,aACb6rD,gBAAmB,OACnB5qH,KAAQ,YAEV,CACE0qH,UAAY,EACZC,OAAU,GACVpnH,KAAQ,SACRusH,QAAW,CACT,CACEvsH,KAAQ,GACRvD,KAAQ,WAGZgsH,SAAW,EACXjtD,UAAa,aACb6rD,gBAAmB,OACnB5qH,KAAQ,YAEV,CACE0qH,UAAY,EACZC,OAAU,CACR,CACEpnH,KAAQ,UACRvD,KAAQ,YAGZuD,KAAQ,sBACRusH,QAAW,CACT,CACEvsH,KAAQ,GACRvD,KAAQ,YAGZgsH,SAAW,EACXjtD,UAAa,aACb6rD,gBAAmB,OACnB5qH,KAAQ,YAEV,CACE0qH,UAAY,EACZC,OAAU,GACVpnH,KAAQ,iBACRusH,QAAW,CACT,CACEvsH,KAAQ,GACRvD,KAAQ,YAGZgsH,SAAW,EACXjtD,UAAa,aACb6rD,gBAAmB,aACnB5qH,KAAQ,YAEV,CACE0qH,UAAY,EACZC,OAAU,CACR,CACEpnH,KAAQ,MACRvD,KAAQ,WAEV,CACEuD,KAAQ,SACRvD,KAAQ,YAGZuD,KAAQ,WACRusH,QAAW,CACT,CACEvsH,KAAQ,GACRvD,KAAQ,SAGZgsH,SAAW,EACXjtD,UAAa,aACb6rD,gBAAmB,aACnB5qH,KAAQ,YAEV,CACE0qH,UAAY,EACZC,OAAU,GACVpnH,KAAQ,cACRusH,QAAW,CACT,CACEvsH,KAAQ,GACRvD,KAAQ,YAGZgsH,SAAW,EACXjtD,UAAa,aACb6rD,gBAAmB,OACnB5qH,KAAQ,YAEV,CACE0qH,UAAY,EACZC,OAAU,GACVpnH,KAAQ,qBACRusH,QAAW,CACT,CACEvsH,KAAQ,GACRvD,KAAQ,YAGZgsH,SAAW,EACXjtD,UAAa,aACb6rD,gBAAmB,OACnB5qH,KAAQ,YAEV,CACE0qH,UAAY,EACZC,OAAU,CACR,CACEpnH,KAAQ,aACRvD,KAAQ,WAEV,CACEuD,KAAQ,WACRvD,KAAQ,WAEV,CACEuD,KAAQ,cACRvD,KAAQ,YAGZuD,KAAQ,QACRusH,QAAW,CACT,CACEvsH,KAAQ,GACRvD,KAAQ,YAGZgsH,SAAW,EACXjtD,UAAa,aACb6rD,gBAAmB,aACnB5qH,KAAQ,YAEV,CACE0qH,UAAY,EACZC,OAAU,CACR,CACEpnH,KAAQ,kBACRvD,KAAQ,YAGZuD,KAAQ,mBACRusH,QAAW,CACT,CACEvsH,KAAQ,GACRvD,KAAQ,YAGZgsH,SAAW,EACXjtD,UAAa,aACb6rD,gBAAmB,aACnB5qH,KAAQ,YAEV,CACE0qH,UAAY,EACZC,OAAU,GACVpnH,KAAQ,sBACRusH,QAAW,CACT,CACEvsH,KAAQ,GACRvD,KAAQ,YAGZgsH,SAAW,EACXjtD,UAAa,aACb6rD,gBAAmB,aACnB5qH,KAAQ,YAEV,CACE0qH,UAAY,EACZC,OAAU,CACR,CACEpnH,KAAQ,UACRvD,KAAQ,YAGZuD,KAAQ,qBACRusH,QAAW,CACT,CACEvsH,KAAQ,GACRvD,KAAQ,WAEV,CACEuD,KAAQ,GACRvD,KAAQ,WAEV,CACEuD,KAAQ,GACRvD,KAAQ,WAEV,CACEuD,KAAQ,GACRvD,KAAQ,YAGZgsH,SAAW,EACXjtD,UAAa,aACb6rD,gBAAmB,OACnB5qH,KAAQ,YAEV,CACE0qH,UAAY,EACZC,OAAU,CACR,CACEpnH,KAAQ,QACRvD,KAAQ,WAEV,CACEuD,KAAQ,UACRvD,KAAQ,YAGZuD,KAAQ,YACRusH,QAAW,CACT,CACEvsH,KAAQ,GACRvD,KAAQ,YAGZgsH,SAAW,EACXjtD,UAAa,aACb6rD,gBAAmB,OACnB5qH,KAAQ,YAEV,CACE0qH,UAAY,EACZC,OAAU,GACVpnH,KAAQ,eACRusH,QAAW,CACT,CACEvsH,KAAQ,GACRvD,KAAQ,YAGZgsH,SAAW,EACXjtD,UAAa,aACb6rD,gBAAmB,aACnB5qH,KAAQ,YAEV,CACE0qH,UAAY,EACZC,OAAU,CACR,CACEpnH,KAAQ,uBACRvD,KAAQ,YAGZuD,KAAQ,wBACRusH,QAAW,CACT,CACEvsH,KAAQ,GACRvD,KAAQ,YAGZgsH,SAAW,EACXjtD,UAAa,aACb6rD,gBAAmB,aACnB5qH,KAAQ,YAEV,CACE0qH,UAAY,EACZC,OAAU,GACVpnH,KAAQ,oBACRusH,QAAW,CACT,CACEvsH,KAAQ,GACRvD,KAAQ,YAGZgsH,SAAW,EACXjtD,UAAa,aACb6rD,gBAAmB,OACnB5qH,KAAQ,YAEV,CACE0qH,UAAY,EACZC,OAAU,GACVpnH,KAAQ,QACRusH,QAAW,CACT,CACEvsH,KAAQ,GACRvD,KAAQ,YAGZgsH,SAAW,EACXjtD,UAAa,aACb6rD,gBAAmB,OACnB5qH,KAAQ,YAEV,CACE0qH,UAAY,EACZC,OAAU,GACVpnH,KAAQ,qBACRusH,QAAW,CACT,CACEvsH,KAAQ,GACRvD,KAAQ,YAGZgsH,SAAW,EACXjtD,UAAa,aACb6rD,gBAAmB,OACnB5qH,KAAQ,YAEV,CACE0qH,UAAY,EACZC,OAAU,CACR,CACEpnH,KAAQ,2BACRvD,KAAQ,YAGZuD,KAAQ,oBACRusH,QAAW,CACT,CACEvsH,KAAQ,GACRvD,KAAQ,YAGZgsH,SAAW,EACXjtD,UAAa,aACb6rD,gBAAmB,aACnB5qH,KAAQ,YAEV,CACE0qH,UAAY,EACZC,OAAU,GACVpnH,KAAQ,WACRusH,QAAW,CACT,CACEvsH,KAAQ,GACRvD,KAAQ,SAGZgsH,SAAW,EACXjtD,UAAa,aACb6rD,gBAAmB,OACnB5qH,KAAQ,YAEV,CACE2qH,OAAU,CACR,CACEpnH,KAAQ,cACRvD,KAAQ,WAEV,CACEuD,KAAQ,eACRvD,KAAQ,WAEV,CACEuD,KAAQ,qBACRvD,KAAQ,WAEV,CACEuD,KAAQ,+BACRvD,KAAQ,WAEV,CACEuD,KAAQ,QACRvD,KAAQ,UAEV,CACEuD,KAAQ,UACRvD,KAAQ,UAEV,CACEuD,KAAQ,YACRvD,KAAQ,YAGZgsH,SAAW,EACXjtD,UAAa,cACb6rD,gBAAmB,aACnB5qH,KAAQ,eAEV,CACE+vH,WAAa,EACbpF,OAAU,CACR,CACEqF,SAAW,EACXzsH,KAAQ,sBACRvD,KAAQ,WAEV,CACEgwH,SAAW,EACXzsH,KAAQ,cACRvD,KAAQ,WAEV,CACEgwH,SAAW,EACXzsH,KAAQ,eACRvD,KAAQ,YAGZuD,KAAQ,iBACRw7D,UAAa,qEACb/+D,KAAQ,SAEV,CACE+vH,WAAa,EACbpF,OAAU,CACR,CACEqF,SAAW,EACXzsH,KAAQ,SACRvD,KAAQ,WAEV,CACEgwH,SAAW,EACXzsH,KAAQ,aACRvD,KAAQ,WAEV,CACEgwH,SAAW,EACXzsH,KAAQ,aACRvD,KAAQ,YAGZuD,KAAQ,OACRw7D,UAAa,qEACb/+D,KAAQ,SAEV,CACE+vH,WAAa,EACbpF,OAAU,CACR,CACEqF,SAAW,EACXzsH,KAAQ,WACRvD,KAAQ,WAEV,CACEgwH,SAAW,EACXzsH,KAAQ,eACRvD,KAAQ,WAEV,CACEgwH,SAAW,EACXzsH,KAAQ,eACRvD,KAAQ,YAGZuD,KAAQ,SACRw7D,UAAa,qEACb/+D,KAAQ,SAEV,CACE+vH,WAAa,EACbpF,OAAU,CACR,CACEqF,SAAW,EACXzsH,KAAQ,WACRvD,KAAQ,WAEV,CACEgwH,SAAW,EACXzsH,KAAQ,eACRvD,KAAQ,WAEV,CACEgwH,SAAW,EACXzsH,KAAQ,iBACRvD,KAAQ,WAEV,CACEgwH,SAAW,EACXzsH,KAAQ,eACRvD,KAAQ,YAGZuD,KAAQ,SACRw7D,UAAa,qEACb/+D,KAAQ,SAEV,CACE+vH,WAAa,EACbpF,OAAU,CACR,CACEqF,SAAW,EACXzsH,KAAQ,QACRvD,KAAQ,WAEV,CACEgwH,SAAW,EACXzsH,KAAQ,WACRvD,KAAQ,WAEV,CACEgwH,SAAW,EACXzsH,KAAQ,cACRvD,KAAQ,WAEV,CACEgwH,SAAW,EACXzsH,KAAQ,iBACRvD,KAAQ,WAEV,CACEgwH,SAAW,EACXzsH,KAAQ,eACRvD,KAAQ,YAGZuD,KAAQ,cACRw7D,UAAa,qEACb/+D,KAAQ,SAEV,CACE+vH,WAAa,EACbpF,OAAU,CACR,CACEqF,SAAW,EACXzsH,KAAQ,aACRvD,KAAQ,WAEV,CACEgwH,SAAW,EACXzsH,KAAQ,WACRvD,KAAQ,WAEV,CACEgwH,SAAW,EACXzsH,KAAQ,cACRvD,KAAQ,WAEV,CACEgwH,SAAW,EACXzsH,KAAQ,mBACRvD,KAAQ,WAEV,CACEgwH,SAAW,EACXzsH,KAAQ,cACRvD,KAAQ,YAGZuD,KAAQ,kBACRw7D,UAAa,qEACb/+D,KAAQ,SAEV,CACE+vH,WAAa,EACbpF,OAAU,CACR,CACEqF,SAAW,EACXzsH,KAAQ,kBACRvD,KAAQ,WAEV,CACEgwH,SAAW,EACXzsH,KAAQ,kBACRvD,KAAQ,YAGZuD,KAAQ,kBACRw7D,UAAa,qEACb/+D,KAAQ,SAEV,CACE+vH,WAAa,EACbpF,OAAU,CACR,CACEqF,SAAW,EACXzsH,KAAQ,WACRvD,KAAQ,WAEV,CACEgwH,SAAW,EACXzsH,KAAQ,WACRvD,KAAQ,YAGZuD,KAAQ,WACRw7D,UAAa,qEACb/+D,KAAQ,SAEV,CACE+vH,WAAa,EACbpF,OAAU,CACR,CACEqF,SAAW,EACXzsH,KAAQ,iBACRvD,KAAQ,WAEV,CACEgwH,SAAW,EACXzsH,KAAQ,iBACRvD,KAAQ,YAGZuD,KAAQ,iBACRw7D,UAAa,qEACb/+D,KAAQ,SAEV,CACE+vH,WAAa,EACbpF,OAAU,CACR,CACEqF,SAAW,EACXzsH,KAAQ,uBACRvD,KAAQ,WAEV,CACEgwH,SAAW,EACXzsH,KAAQ,uBACRvD,KAAQ,YAGZuD,KAAQ,6BACRw7D,UAAa,qEACb/+D,KAAQ,SAEV,CACE+vH,WAAa,EACbpF,OAAU,CACR,CACEqF,SAAW,EACXzsH,KAAQ,2BACRvD,KAAQ,WAEV,CACEgwH,SAAW,EACXzsH,KAAQ,2BACRvD,KAAQ,YAGZuD,KAAQ,mBACRw7D,UAAa,qEACb/+D,KAAQ,SAEV,CACE+vH,WAAa,EACbpF,OAAU,CACR,CACEqF,SAAW,EACXzsH,KAAQ,QACRvD,KAAQ,WAEV,CACEgwH,SAAW,EACXzsH,KAAQ,eACRvD,KAAQ,WAEV,CACEgwH,SAAW,EACXzsH,KAAQ,mBACRvD,KAAQ,YAGZuD,KAAQ,kBACRw7D,UAAa,qEACb/+D,KAAQ,SAEV,CACE+vH,WAAa,EACbpF,OAAU,CACR,CACEqF,SAAW,EACXzsH,KAAQ,QACRvD,KAAQ,WAEV,CACEgwH,SAAW,EACXzsH,KAAQ,OACRvD,KAAQ,WAEV,CACEgwH,SAAW,EACXzsH,KAAQ,SACRvD,KAAQ,YAGZuD,KAAQ,UACRw7D,UAAa,qEACb/+D,KAAQ,SAEV,CACE+vH,WAAa,EACbpF,OAAU,CACR,CACEqF,SAAW,EACXzsH,KAAQ,OACRvD,KAAQ,WAEV,CACEgwH,SAAW,EACXzsH,KAAQ,KACRvD,KAAQ,WAEV,CACEgwH,SAAW,EACXzsH,KAAQ,SACRvD,KAAQ,YAGZuD,KAAQ,WACRw7D,UAAa,qEACb/+D,KAAQ,SAEV,CACE+vH,WAAa,EACbpF,OAAU,CACR,CACEqF,SAAW,EACXzsH,KAAQ,QACRvD,KAAQ,WAEV,CACEgwH,SAAW,EACXzsH,KAAQ,UACRvD,KAAQ,WAEV,CACEgwH,SAAW,EACXzsH,KAAQ,SACRvD,KAAQ,YAGZuD,KAAQ,WACRw7D,UAAa,qEACb/+D,KAAQ,SAEV,CACE0qH,UAAY,EACZC,OAAU,CACR,CACEpnH,KAAQ,aACRvD,KAAQ,YAGZuD,KAAQ,OACRusH,QAAW,CACT,CACEvsH,KAAQ,GACRvD,KAAQ,YAGZgsH,SAAW,EACXjtD,UAAa,aACb6rD,gBAAmB,aACnB5qH,KAAQ,YAEV,CACE0qH,UAAY,EACZC,OAAU,CACR,CACEpnH,KAAQ,eACRvD,KAAQ,YAGZuD,KAAQ,SACRusH,QAAW,CACT,CACEvsH,KAAQ,GACRvD,KAAQ,YAGZgsH,SAAW,EACXjtD,UAAa,aACb6rD,gBAAmB,aACnB5qH,KAAQ,YAEV,CACE0qH,UAAY,EACZC,OAAU,CACR,CACEpnH,KAAQ,eACRvD,KAAQ,YAGZuD,KAAQ,mBACRusH,QAAW,CACT,CACEvsH,KAAQ,GACRvD,KAAQ,YAGZgsH,SAAW,EACXjtD,UAAa,aACb6rD,gBAAmB,aACnB5qH,KAAQ,YAEV,CACE0qH,UAAY,EACZC,OAAU,CACR,CACEpnH,KAAQ,eACRvD,KAAQ,YAGZuD,KAAQ,SACRusH,QAAW,CACT,CACEvsH,KAAQ,GACRvD,KAAQ,YAGZgsH,SAAW,EACXjtD,UAAa,aACb6rD,gBAAmB,aACnB5qH,KAAQ,YAEV,CACE0qH,UAAY,EACZC,OAAU,CACR,CACEpnH,KAAQ,cACRvD,KAAQ,YAGZuD,KAAQ,cACRusH,QAAW,CACT,CACEvsH,KAAQ,GACRvD,KAAQ,YAGZgsH,SAAW,EACXjtD,UAAa,aACb6rD,gBAAmB,aACnB5qH,KAAQ,YAEV,CACE0qH,UAAY,EACZC,OAAU,CACR,CACEpnH,KAAQ,WACRvD,KAAQ,WAEV,CACEuD,KAAQ,cACRvD,KAAQ,YAGZuD,KAAQ,oBACRusH,QAAW,CACT,CACEvsH,KAAQ,GACRvD,KAAQ,YAGZgsH,SAAW,EACXjtD,UAAa,aACb6rD,gBAAmB,aACnB5qH,KAAQ,YAEV,CACE0qH,UAAY,EACZC,OAAU,CACR,CACEpnH,KAAQ,WACRvD,KAAQ,WAEV,CACEuD,KAAQ,cACRvD,KAAQ,WAEV,CACEuD,KAAQ,mBACRvD,KAAQ,YAGZuD,KAAQ,kBACRusH,QAAW,CACT,CACEvsH,KAAQ,GACRvD,KAAQ,YAGZgsH,SAAW,EACXjtD,UAAa,aACb6rD,gBAAmB,aACnB5qH,KAAQ,sDCjTGxC,GAt5BS,CACtBs2C,GAAG,CACD3I,KAAK,CACHR,IAAI,CACFrwC,MAAM,MACNJ,SAAS,GACTkB,SAAQ,EACRygB,IAAIo0G,GAAMp0G,IACV8tF,mBAAkB,EAClB50G,MAAM,oBACNqI,QAAQ,6CACR3J,QAAQ,CACNy/C,iBAAiB,KAEnB6K,KAAK,CACHM,aAAa,OAEfQ,KAAK,CACHM,UAAU,OAEZ+wE,UAAU,CACR51H,MAAM,OAERgB,KAAK,CACHugB,IAAIs0G,GACJ71H,MAAM,eACN8C,QAAQ,8CAEVyJ,UAAU,CACR,CACEtD,KAAK,WACLnI,SAAQ,EACRygB,IAAIu0G,GAAOv0G,IACXze,QAAQ,6CACR9C,MAAM,OACNJ,SAAS,GACTooC,UAAU,CACRk4B,aAAa,CACXj3D,KAAK,qBACL48B,OAAO,SAOnBwL,KAAK,IAIP3uB,EAAE,CACAmuB,KAAK,CACHR,IAAI,CACFrwC,MAAM,MACNJ,SAAS,GACTkB,SAAQ,EACRygB,IAAIo0G,GAAMp0G,IACV8tF,mBAAkB,EAClB50G,MAAM,oBACNqI,QAAQ,6CACR3J,QAAQ,CACNy/C,iBAAiB,KAEnB6K,KAAK,CACHM,aAAa,OAEfQ,KAAK,CACHM,UAAU,OAEZ+wE,UAAU,CACR51H,MAAM,OAERgB,KAAK,CACHugB,IAAIs0G,GACJ71H,MAAM,eACN8C,QAAQ,8CAEV4Q,UAAU,CACR5S,SAAQ,EACR4X,QAAQ,gHACR/E,YAAY,CACV4N,IAAIw6B,GACJ/7C,MAAM,UACNiJ,KAAK,iBACLnG,QAAQ,8CAEV+Q,aAAa,CACX,CACE5K,KAAK,OACLnI,SAAQ,EACRygB,IAAIw0G,GACJjzH,QAAQ,6CACR9C,MAAM,WACNJ,SAAS,GACTooC,UAAU,CACRk4B,aAAa,CACXj3D,KAAK,QACL48B,OAAO,OAKfpB,kBAAkB,CAChBzkC,MAAM,UACNuhB,IAAIg7B,GACJtzC,KAAK,kBACLnG,QAAQ,6CACR05C,aAAa,GACbxU,UAAU,CACR,CACE36B,MAAM,UACNpE,KAAK,wBAKbsD,UAAU,CACR,CACEzL,SAAQ,EACRygB,IAAIu0G,GAAOv0G,IACXtY,KAAK,WACLnG,QAAQ,6CACR9C,MAAM,OACNJ,SAAS,GACTooC,UAAU,CACRk4B,aAAa,CACXj3D,KAAK,qBACL48B,OAAO,MAIb,CACEtkB,IAAIy0G,GACJl1H,SAAQ,EACRmI,KAAK,UACLnG,QAAQ,6CACR9C,MAAM,OACNJ,SAAS,GACTooC,UAAU,CACRk4B,aAAa,CACXj3D,KAAK,aACL48B,OAAO,MAIb,CACEtkB,IAAI00G,GACJhtH,KAAK,OACLnI,SAAQ,EACRgC,QAAQ,6CACR9C,MAAM,OACNJ,SAAS,GACTooC,UAAU,IAIZ,CACEzmB,IAAI20G,GACJjtH,KAAK,MACLnI,SAAQ,EACRgC,QAAQ,6CACR9C,MAAM,OACNJ,SAAS,GACTooC,UAAU,IAIZ,CACEzmB,IAAIw0G,GACJ9sH,KAAK,OACLnI,SAAQ,EACRgC,QAAQ,6CACR9C,MAAM,QACNJ,SAAS,GACTooC,UAAU,CACRk4B,aAAa,CACXj3D,KAAK,QACL48B,OAAO,QAMjB8K,KAAK,CACH/wC,SAAS,EACTI,MAAM,OACNc,SAAQ,EACRygB,IAAIo0G,GAAMp0G,IACV8tF,mBAAkB,EAClB50G,MAAM,qBACNqI,QAAQ,6CACR3J,QAAQ,CACNy/C,iBAAiB,KAEnB6K,KAAK,CACHM,aAAa,QAEf6xE,UAAU,CACR51H,MAAM,QAERgB,KAAK,CACHugB,IAAIs0G,GACJ71H,MAAM,gBACN8C,QAAQ,8CAEV4Q,UAAU,CACR5S,SAAQ,EACR4X,QAAQ,iHACR/E,YAAY,CACV4N,IAAIw6B,GACJ/7C,MAAM,WACNiJ,KAAK,kBACLnG,QAAQ,8CAEV+Q,aAAa,CACX,CACE0N,IAAIw0G,GACJ9sH,KAAK,OACLnI,SAAQ,EACRgC,QAAQ,6CACR9C,MAAM,YACNJ,SAAS,GACTooC,UAAU,CACRk4B,aAAa,CACXj3D,KAAK,QACL48B,OAAO,OAKfpB,kBAAkB,CAChBljB,IAAIg7B,GACJv8C,MAAM,WACNiJ,KAAK,kBACLnG,QAAQ,6CACR05C,aAAa,GACbxU,UAAU,CACR,CACE36B,MAAM,UACNpE,KAAK,wBAKbsD,UAAU,CACR,CACEtD,KAAK,WACLnI,SAAQ,EACRygB,IAAIu0G,GAAOv0G,IACXze,QAAQ,6CACR9C,MAAM,QACNJ,SAAS,GACTooC,UAAU,CACRk4B,aAAa,CACXj3D,KAAK,qBACL48B,OAAO,MAIb,CACE58B,KAAK,UACLnI,SAAQ,EACRygB,IAAIy0G,GACJlzH,QAAQ,6CACR9C,MAAM,QACNJ,SAAS,GACTooC,UAAU,CACRk4B,aAAa,CACXj3D,KAAK,aACL48B,OAAO,MAIb,CACE58B,KAAK,OACLnI,SAAQ,EACRygB,IAAI00G,GACJnzH,QAAQ,6CACR9C,MAAM,QACNJ,SAAS,GACTooC,UAAU,IAIZ,CACE/+B,KAAK,OACLnI,SAAQ,EACRygB,IAAIw0G,GACJjzH,QAAQ,6CACR9C,MAAM,SACNJ,SAAS,GACTooC,UAAU,CACRk4B,aAAa,CACXj3D,KAAK,QACL48B,OAAO,QAMjB0M,KAAK,CACH3yC,SAAS,EACTI,MAAM,OACNc,SAAQ,EACRygB,IAAIo0G,GAAMp0G,IACV8tF,mBAAkB,EAClB50G,MAAM,qBACNqI,QAAQ,6CACR2gD,KAAK,CACHM,aAAa,QAEf6xE,UAAU,CACR51H,MAAM,QAERgB,KAAK,CACHugB,IAAIs0G,GACJ71H,MAAM,gBACN8C,QAAQ,8CAEV4Q,UAAU,CACR5S,SAAQ,EACR4X,QAAQ,iHACR/E,YAAY,CACV4N,IAAIw6B,GACJ/7C,MAAM,WACNiJ,KAAK,kBACLnG,QAAQ,8CAEV2hC,kBAAkB,CAChBljB,IAAIg7B,GACJv8C,MAAM,WACNiJ,KAAK,kBACLnG,QAAQ,6CACR05C,aAAa,GACbxU,UAAU,CACR,CACE36B,MAAM,UACNpE,KAAK,wBAKbsD,UAAU,CACR,CACEtD,KAAK,WACLnI,SAAQ,EACRygB,IAAIu0G,GAAOv0G,IACXze,QAAQ,6CACR9C,MAAM,QACNJ,SAAS,GACTooC,UAAU,CACRk4B,aAAa,CACXj3D,KAAK,qBACL48B,OAAO,MAIb,CACE58B,KAAK,UACLnI,SAAQ,EACRygB,IAAIy0G,GACJlzH,QAAQ,6CACR9C,MAAM,QACNJ,SAAS,GACTooC,UAAU,CACRk4B,aAAa,CACXj3D,KAAK,aACL48B,OAAO,MAIb,CACE58B,KAAK,OACLnI,SAAQ,EACRygB,IAAI00G,GACJnzH,QAAQ,6CACR9C,MAAM,QACNJ,SAAS,GACTooC,UAAU,MAMhByK,KAAK,CACH7yC,SAAS,GACTI,MAAM,OACNc,SAAQ,EACRygB,IAAIo0G,GAAMp0G,IACV8tF,mBAAkB,EAClB5oE,oBAAmB,EACnBhsC,MAAM,qBAENqI,QAAQ,6CACR2gD,KAAK,CACHM,aAAa,QAEf6xE,UAAU,CACR51H,MAAM,QAERgB,KAAK,CACHugB,IAAIs0G,GACJ71H,MAAM,gBACN8C,QAAQ,8CAEV4Q,UAAU,CACR5S,SAAQ,EACR4X,QAAQ,iHACR/E,YAAY,CACV4N,IAAIw6B,GACJ/7C,MAAM,WACNiJ,KAAK,kBACLnG,QAAQ,8CAEV2hC,kBAAkB,CAChBljB,IAAIg7B,GACJv8C,MAAM,WACNiJ,KAAK,kBACLnG,QAAQ,6CACR05C,aAAa,GACbxU,UAAU,CACR,CACE36B,MAAM,UACNpE,KAAK,wBAKbsD,UAAU,CACR,CACEtD,KAAK,OACLnI,SAAQ,EACRygB,IAAI00G,GACJnzH,QAAQ,6CACR9C,MAAM,QACNJ,SAAS,GACTooC,UAAU,MAMhBwK,KAAK,CACH5yC,SAAS,GACTI,MAAM,OACNc,SAAQ,EACRygB,IAAIo0G,GAAMp0G,IACV8tF,mBAAkB,EAClB5oE,oBAAmB,EACnBhsC,MAAM,sBACNqI,QAAQ,6CACR2gD,KAAK,CACHM,aAAa,QAEf6xE,UAAU,CACR51H,MAAM,QAERgB,KAAK,CACHugB,IAAIs0G,GACJ71H,MAAM,gBACN8C,QAAQ,8CAEV4Q,UAAU,CACR5S,SAAQ,EACR4X,QAAQ,iHACR/E,YAAY,CACV4N,IAAIw6B,GACJ/7C,MAAM,WACNiJ,KAAK,kBACLnG,QAAQ,8CAEV2hC,kBAAkB,CAChBljB,IAAIg7B,GACJv8C,MAAM,WACNiJ,KAAK,kBACLnG,QAAQ,6CACR05C,aAAa,GACbxU,UAAU,CACR,CACE36B,MAAM,UACNpE,KAAK,wBAKbsD,UAAU,CACR,CACEtD,KAAK,OACLnI,SAAQ,EACRygB,IAAI00G,GACJnzH,QAAQ,6CACR9C,MAAM,QACNJ,SAAS,GACTooC,UAAU,MAMhB0K,KAAK,CACH9yC,SAAS,EACTI,MAAM,OACNc,SAAQ,EACRygB,IAAIo0G,GAAMp0G,IACV8tF,mBAAkB,EAClB50G,MAAM,oBACNqI,QAAQ,6CACR3J,QAAQ,CACNy/C,iBAAiB,KAEnB6K,KAAK,CACHM,aAAa,QAEf6xE,UAAU,CACR51H,MAAM,QAERgB,KAAK,CACHugB,IAAIs0G,GACJ71H,MAAM,gBACN8C,QAAQ,8CAEV4Q,UAAU,CACR5S,SAAQ,EACR4X,QAAQ,iHACR/E,YAAY,CACV4N,IAAIw6B,GACJ/7C,MAAM,WACNiJ,KAAK,kBACLnG,QAAQ,8CAEV2hC,kBAAkB,CAChBljB,IAAIg7B,GACJv8C,MAAM,WACNiJ,KAAK,kBACLnG,QAAQ,6CACR05C,aAAa,GACbxU,UAAU,CACR,CACE36B,MAAM,UACNpE,KAAK,wBAKbsD,UAAU,CACR,CACEtD,KAAK,WACLnI,SAAQ,EACRygB,IAAIu0G,GAAOv0G,IACXze,QAAQ,6CACR9C,MAAM,QACNJ,SAAS,GACTooC,UAAU,CACRk4B,aAAa,CACXj3D,KAAK,qBACL48B,OAAO,MAIb,CACEtkB,IAAIy0G,GACJp2H,SAAS,GACTI,MAAM,QACNc,SAAQ,EACRmI,KAAK,UACLnG,QAAQ,6CACRklC,UAAU,CACRk4B,aAAa,CACXj3D,KAAK,aACL48B,OAAO,MAIb,CACE58B,KAAK,OACLnI,SAAQ,EACRygB,IAAI00G,GACJnzH,QAAQ,6CACR9C,MAAM,QACNJ,SAAS,GACTooC,UAAU,OAOlBqJ,KAAK,CACHhB,IAAI,CACFzwC,SAAS,GACTI,MAAM,MACNc,SAAQ,EACRygB,IAAIo0G,GAAMp0G,IACV8tF,mBAAkB,EAClB50G,MAAM,oBACNqI,QAAQ,6CACR2gD,KAAK,CACHM,aAAa,OAEfQ,KAAK,CACHM,UAAU,OAEZ+wE,UAAU,CACR51H,MAAM,OAERgB,KAAK,CACHugB,IAAIs0G,GACJ71H,MAAM,cACN8C,QAAQ,8CAEV4Q,UAAU,CACR5S,SAAQ,EACR6S,YAAY,CACV4N,IAAIw6B,GACJ/7C,MAAM,UACNiJ,KAAK,gBACLnG,QAAQ,8CAEV+Q,aAAa,CACX,CACE5K,KAAK,OACLnI,SAAQ,EACRygB,IAAIw0G,GACJjzH,QAAQ,6CACR9C,MAAM,WACNJ,SAAS,GACTooC,UAAU,CACRk4B,aAAa,CACXj3D,KAAK,QACL48B,OAAO,OAKfpB,kBAAkB,CAChBljB,IAAIg7B,GACJv8C,MAAM,UACNiJ,KAAK,kBACLnG,QAAQ,6CACR05C,aAAa,GACbxU,UAAU,CACR,CACE36B,MAAM,UACNpE,KAAK,wBAKbsD,UAAU,CACR,CACEtD,KAAK,WACLnI,SAAQ,EACRygB,IAAIu0G,GAAOv0G,IACXze,QAAQ,6CACR9C,MAAM,OACNJ,SAAS,GACTooC,UAAU,CACRk4B,aAAa,CACXj3D,KAAK,qBACL48B,OAAO,MAIb,CACE58B,KAAK,UACLnI,SAAQ,EACRygB,IAAIy0G,GACJlzH,QAAQ,6CACR9C,MAAM,OACNJ,SAAS,GACTooC,UAAU,CACRk4B,aAAa,CACXj3D,KAAK,aACL48B,OAAO,MAIb,CACE58B,KAAK,OACLnI,SAAQ,EACRygB,IAAI00G,GACJnzH,QAAQ,6CACR9C,MAAM,OACNJ,SAAS,GACTooC,UAAU,IAIZ,CACE/+B,KAAK,MACLnI,SAAQ,EACRygB,IAAI20G,GACJpzH,QAAQ,6CACR9C,MAAM,OACNJ,SAAS,GACTooC,UAAU,IAIZ,CACE/+B,KAAK,OACLnI,SAAQ,EACRygB,IAAIw0G,GACJjzH,QAAQ,6CACR9C,MAAM,QACNJ,SAAS,GACTooC,UAAU,CACRk4B,aAAa,CACXj3D,KAAK,QACL48B,OAAO,QAMjB8K,KAAK,CACH/wC,SAAS,EACTI,MAAM,OACNc,SAAQ,EACRygB,IAAIo0G,GAAMp0G,IACV8tF,mBAAkB,EAClB50G,MAAM,qBACNqI,QAAQ,6CACR3J,QAAQ,CACNy/C,iBAAiB,KAEnB6K,KAAK,CACHM,aAAa,QAEf6xE,UAAU,CACR51H,MAAM,QAERgB,KAAK,CACHugB,IAAIs0G,GACJ71H,MAAM,eACN8C,QAAQ,8CAEV4Q,UAAU,CACR5S,SAAQ,EACR6S,YAAY,CACV4N,IAAIw6B,GACJ/7C,MAAM,WACNiJ,KAAK,iBACLnG,QAAQ,8CAEV+Q,aAAa,CACX,CACE5K,KAAK,OACLnI,SAAQ,EACRygB,IAAIw0G,GACJjzH,QAAQ,6CACR9C,MAAM,YACNJ,SAAS,GACTooC,UAAU,CACRk4B,aAAa,CACXj3D,KAAK,QACL48B,OAAO,OAKfpB,kBAAkB,CAChBljB,IAAIg7B,GACJv8C,MAAM,WACNiJ,KAAK,kBACLnG,QAAQ,6CACR05C,aAAa,GACbxU,UAAU,CACR,CACE36B,MAAM,UACNpE,KAAK,wBAKbsD,UAAU,CACR,CACEtD,KAAK,WACLnI,SAAQ,EACRygB,IAAIu0G,GAAOv0G,IACXze,QAAQ,6CACR9C,MAAM,QACNJ,SAAS,GACTooC,UAAU,CACRk4B,aAAa,CACXj3D,KAAK,qBACL48B,OAAO,MAIb,CACE58B,KAAK,UACLnI,SAAQ,EACRygB,IAAIy0G,GACJlzH,QAAQ,6CACR9C,MAAM,QACNJ,SAAS,GACTooC,UAAU,CACRk4B,aAAa,CACXj3D,KAAK,aACL48B,OAAO,MAIb,CACE58B,KAAK,OACLnI,SAAQ,EACRygB,IAAI00G,GACJnzH,QAAQ,6CACR9C,MAAM,QACNJ,SAAS,GACTooC,UAAU,IAIZ,CACE/+B,KAAK,OACLnI,SAAQ,EACRygB,IAAIw0G,GACJjzH,QAAQ,6CACR9C,MAAM,SACNJ,SAAS,GACTooC,UAAU,CACRk4B,aAAa,CACXj3D,KAAK,QACL48B,OAAO,QAMjB0M,KAAK,CACH3yC,SAAS,EACTI,MAAM,OACNc,SAAQ,EACRygB,IAAIo0G,GAAMp0G,IACV8tF,mBAAkB,EAClB50G,MAAM,qBACNqI,QAAQ,6CACR2gD,KAAK,CACHM,aAAa,QAEf6xE,UAAU,CACR51H,MAAM,QAERgB,KAAK,CACHugB,IAAIs0G,GACJ71H,MAAM,eACN8C,QAAQ,8CAEV4Q,UAAU,CACR5S,SAAQ,EACR6S,YAAY,CACV4N,IAAIw6B,GACJ/7C,MAAM,WACNiJ,KAAK,iBACLnG,QAAQ,8CAEV2hC,kBAAkB,CAChBljB,IAAIg7B,GACJv8C,MAAM,UACNiJ,KAAK,kBACLnG,QAAQ,6CACR05C,aAAa,GACbxU,UAAU,CACR,CACE36B,MAAM,UACNpE,KAAK,wBAKbsD,UAAU,CACR,CACEtD,KAAK,WACLnI,SAAQ,EACRygB,IAAIu0G,GAAOv0G,IACXze,QAAQ,6CACR9C,MAAM,QACNJ,SAAS,GACTooC,UAAU,CACRk4B,aAAa,CACXj3D,KAAK,qBACL48B,OAAO,MAIb,CACE58B,KAAK,UACLnI,SAAQ,EACRygB,IAAIy0G,GACJlzH,QAAQ,6CACR9C,MAAM,QACNJ,SAAS,GACTooC,UAAU,CACRk4B,aAAa,CACXj3D,KAAK,aACL48B,OAAO,MAIb,CACE58B,KAAK,OACLnI,SAAQ,EACRygB,IAAI00G,GACJnzH,QAAQ,6CACR9C,MAAM,QACNJ,SAAS,GACTooC,UAAU,SCt2BLmuF,GAhDgB,CAC7B73F,YAAa,CACX5lB,QAAS,+BACT8hB,iBAAkB,oCAClBE,WAAY,GACZC,WAAY,GACZC,QAAS,UACTptB,KAAM,eAER4oH,QAAS,CACP19G,QAAS,6BACT8hB,iBAAkB,oCAClBE,WAAY,GACZC,WAAY,GACZC,QAAS,UACTptB,KAAM,eAERrT,QAAS,CACPue,QAAS,iCACT8hB,iBAAkB,8BAClBE,WAAY,GACZC,WAAY,GACZC,QAAS,aACTptB,KAAM,eAER6oH,UAAW,CACT39G,QAAS,wBACT8hB,iBAAkB,uCAClBE,WAAY,GACZC,WAAY,GACZC,QAAS,aACTptB,KAAM,eAER5S,QAAS,CACP8d,QAAS,6BACTkiB,QAAS,UACTptB,KAAM,eAERywB,MAAO,CACLvlB,QAAS,0BACT8hB,iBAAkB,kCAClBE,WAAY,GACZC,WAAY,GACZC,QAAS,UACTptB,KAAM,UCmJG8oH,8MAzLbC,uBAAyB,SAACC,EAAgBC,GACxC,MAC4B,qBAAnBD,GACPt6H,OAAOwH,KAAK8yH,GAAgBp3H,SAC1BlD,OAAOwH,KAAK+yH,GAAmBr3H,UAKrCs3H,2BAA6B,SAACF,EAAgBC,GAC5C,GAA8B,qBAAnBD,EAAgC,CACzC,IAAMG,EAAYz6H,OAAOwH,KAAK+yH,GAAmBr+G,OAAO,SAAAyB,GACtD,OAAQ3d,OAAOwH,KAAK8yH,GAAgBtlG,SAASrX,KAE/C,OAAO48G,EAAkBE,GAEzB,OAAOz6H,OAAOwH,KAAK+yH,GAAmBj/G,IAAI,SAAAqC,GACxC,OAAO48G,EAAkB58G,QAM/B+8G,+BAAiC,SAACJ,EAAgBC,GAYhD,OAX2Bv6H,OAAOwH,KAAK8yH,GACpCh/G,IAAI,SAAAqC,GACH,OACE28G,EAAe38G,GAAK2xG,cAAgBiL,EAAkB58G,GAAK2xG,YAEpDiL,EAAkB58G,GAElB,OAGVzB,OAAO,SAAAy+G,GAAM,OAAe,OAAXA,IACM,MAI5BC,6BAA+B,SAACC,EAAYC,GAE1C,OADeA,EAAU,KAAAj2H,OAAMg2H,OAKjCE,sBAAwB,SAACT,EAAgBC,GACvC,IAAIp+G,EAAK,KACL6+G,EAAY,GACZC,EAAS,GAEb,GAAIx6H,EAAK45H,uBAAuBC,EAAgBC,GAC9Cp+G,EAAK1b,EAAK+5H,2BAA2BF,EAAgBC,OAChD,CAKL,KAJAS,EAAYv6H,EAAKi6H,+BACfJ,EACAC,IAQA,OAAO,EALPU,EAASx6H,EAAKm6H,6BACZI,EAAUp+D,QACV09D,GAMAU,EAAUj9H,SAAWk9H,EAAOl9H,SAC9Boe,EAAK6+G,GAGT,OAAO7+G,KAIT++G,0BAA4B,SAAA/vH,GAC1B,IAAIgR,EAAK,KACLnc,OAAOwH,KAAK/G,EAAKJ,MAAMhD,cAAc6F,SACvCiZ,EAAK1b,EAAKs6H,sBACR5vH,EAAU9N,aACVoD,EAAKJ,MAAMhD,eAIX8e,GACF1b,EAAK06H,qBAAqBh/G,MAI9Bg/G,qBAAuB,SAAA7oG,GAGrB,IAAI8oG,EAAY36H,EAAK46H,wBAAwB/oG,GAC7C8oG,EAAU78F,WAAa,QACvB68F,EAAU99B,WAAY,EAItBxyF,OAAOszB,cAAcC,WAAW,IAAK+8F,MAGvCC,wBAA0B,SAAA/oG,GACxB,IAAIgpG,EAAuB,GAG3B,OAFahpG,EAAYv0B,QAGvB,IAAK,cACHu9H,EAAuBrB,GAAyB73F,YAChD,MACF,IAAK,UACHk5F,EAAuBrB,GAAyBC,QAChD,MACF,IAAK,UACHoB,EAAuBrB,GAAyBh8H,QAChD,MACF,IAAK,YACHq9H,EAAuBrB,GAAyBE,UAChD,MACF,IAAK,UACHmB,EAAuBrB,GAAyBv7H,QAChD,MACF,IAAK,QACH48H,EAAuBrB,GAAyBl4F,MAOpD,IAAIw5F,EAAoB,GACxB,OAAQjpG,EAAY0O,QAClB,IAAK,kBACHu6F,EAAoB,SACtB,MACA,IAAK,kBACHA,EAAoB,sBACtB,MACA,IAAK,gBACL,IAAK,sBACHA,EAAoB,UACtB,MACA,IAAK,oBACL,IAAK,4BACL,IAAK,2BACL,IAAK,wBACL,IAAK,yBACL,IAAK,uBACHA,EAAoB,YACtB,MACA,IAAK,yBACHA,EAAoB,UACtB,MACA,IAAK,UACHA,EAAoB,UACtB,MACA,IAAK,YACHA,EAAoB,YACtB,MACA,QACEA,EAAoBjpG,EAAY0O,OAAOw6F,OAAO,GAAGn5G,cAAgBiQ,EAAY0O,OAAOtW,OAAO,GAM/F,IAAI+wG,GAFJH,EAAuBt7G,KAAKwkB,MAAMxkB,KAAKC,UAAUq7G,KAEX9+G,QAAQsyC,QAAQ,WAAWysE,GAKjE,OAJAE,EAAaA,EAAWD,OAAO,GAAGn5G,cAAgBo5G,EAAWnqG,MAAM,GACnEgqG,EAAqB9+G,QAAUi/G,EAC/BH,EAAqBh+B,WAAY,EAE1Bg+B,qFAGUnwH,EAAWqC,GAC5BpN,KAAK86H,0BAA0B/vH,oCAI/B,OACEvL,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAa+vH,SAAd,CAAuBvyG,IAAK,SAAA87G,GAAI,OAAKvuH,OAAOszB,cAAgBi7F,aArLjCnnG,IAAM3xB,WCwvB1Bm7H,8MAluBb9wH,MAAQ,CACNrE,WAAW,GACXs3B,SAAU,KACV89F,YAAa,IACbnwF,MAAO,UACPowF,YAAY,EACZh7H,YAAa,KACbgyG,aAAc,KACd0Y,cAAe,KACf5gE,cAAe,KACfj9C,cAAe,KACf6pG,eAAgB,KAChBtwG,gBAAiB,KACjBg6F,gBAAgB,EAChB35F,iBAAkB,KAClBu5F,kBAAmB,KACnB8rB,mBAAoB,KACpBhyH,MAAOoQ,OAAO6N,WACdrR,oBAAqB,KACrBjI,OAAQyL,OAAO+N,YACfgjH,uBAAwB,KACxB/R,0BAA0B,KAI5BjpH,cAAgB,OAShBigG,kBAAoB,SAAC1yF,GACfA,GACFA,EAAEinB,iBAEJ50B,EAAKwL,SAAS,CACZ20F,kBAAkB,UAItBk7B,iBAAmB,SAACz7H,GAClBI,EAAKwL,SAAS,CACZ20F,kBAAkBvgG,OAItBq/F,mBAAqB,SAACr/F,EAAM8K,GAC1B,IAAMw+B,EAAStpC,EAAQA,EAAM6a,MAAMyuB,OAAS,KACtCk4E,EAAa12G,EAAYA,EAAU+P,MAAMyuB,OAAS,MAGnDk4E,IAAcl4E,GAAUk4E,EAAWka,cAAgBpyF,EAAOoyF,aAAiBpyF,GAAWA,EAAOoyF,kBAAsC54H,IAAvBwmC,EAAOoyF,YAK7GpyF,GAAwC,kBAAvBA,EAAOoyF,cAE7BpyF,EAAOoyF,YAAYrrH,cAAcwK,MAAM,eAAiBza,EAAKmK,MAAM0gH,gBAAkB3hF,EAAOoyF,YAC9Ft7H,EAAKu7H,iBAAiBryF,EAAOoyF,aACpBpyF,GAAiC,aAAvBA,EAAOoyF,cAA+Bt7H,EAAKmK,MAAMk/G,0BACpErpH,EAAKwL,SAAS,CACZq/G,cAAc,KACdxB,0BAAyB,KAX7BrpH,EAAKwL,SAAS,CACZq/G,cAAc,KACdxB,0BAAyB,OAe/Bt3C,gBAAkB,WAIhB,OAHA/xE,EAAKwL,SAAS,CACZ1F,WAAW,MAEN,KAGTZ,cAAgB,SAACgY,EAAIrR,GAAkB,IAAb+oC,EAAazyC,UAAAM,OAAA,QAAAC,IAAAP,UAAA,GAAAA,UAAA,GAAT,KAC5B,IAAKnC,EAAKmK,MAAMrE,WAAWoX,EAAIjN,gBAAkBsP,KAAKC,UAAUxf,EAAKmK,MAAMrE,WAAWoX,EAAIjN,kBAAoBsP,KAAKC,UAAU3T,GAAM,CACjI,IAAMmmE,EAAiBp9B,EAAMlpC,UAAS,IAAIgN,MAAOI,UAAU,KAAO87B,EAAO,KAWzE,OATA50C,EAAKwL,SAAS,SAACuB,GAAD,MAAgB,CAC5BjH,WAAWvG,OAAAsL,EAAA,EAAAtL,CAAA,GACNwN,EAAUjH,WADLvG,OAAA2b,EAAA,EAAA3b,CAAA,GAEP2d,EAAIjN,cAAe,CAClBpE,OACAmmE,wBAIC,EAET,OAAO,KAGTk6C,sBAAwB,SAACD,GACvBjsH,EAAKwL,SAAS,CACZygH,0BAIJsP,iBAAmB,SAAC1Q,GAEdA,IAAkBA,EAAc56G,cAAcwK,MAAM,gBACtDowG,EAAgB,MAGdA,IAAkB7qH,EAAKmK,MAAM0gH,eAC/B7qH,EAAKwL,SAAS,CACZq/G,gBACAxB,0BAAyB,OAuL/B9+G,uBAAyB,WACvB,IAAMK,EAAW,CACf3Q,MAAM+F,EAAKmK,MAAMlQ,MACjB2E,OAAOoB,EAAKmK,MAAMvL,QAGd48H,EAAenxH,OAAO6N,aAAelY,EAAKmK,MAAMlQ,MAChDwhI,EAAgBpxH,OAAO+N,cAAgBpY,EAAKmK,MAAMvL,OAExD,OAAI48H,GAAgBC,GACdD,IACF5wH,EAAS3Q,MAAQoQ,OAAO6N,YAEtBujH,IACF7wH,EAAShM,OAASyL,OAAO+N,aAEpBpY,EAAKwL,SAASZ,IAGhB,QAITozD,OAAS1tD,GAAcosC,mFAnSjB/8C,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,iFAuFhC+N,EAAG+tH,4FACV/7H,KAAK6L,SAAS,SAAArB,GAAK,OAAA5K,OAAAsL,EAAA,EAAAtL,CAAA,GAAS4K,EAAT,CAAgB+wH,YAAaQ,uRAIjD9wH,EAAW,GACX/D,EAAsB,GACtBk2C,EAAkBzsC,GAAcosC,QAAQK,gBAG9Cx9C,OAAOwH,KAAKR,GAAgBw2C,IAAkBtzC,QAAQ,SAACwiC,GACrDplC,EAAoBolC,GAAY1lC,GAAgBw2C,GAAiB9Q,KAGnErhC,EAAS/D,oBAAsBA,GAGzBD,EAAmBjH,KAAKwK,MAAMvD,mBACZjH,KAAKwK,MAAMtD,oBAAoBD,KACrDgE,EAASrE,gBAAkB5G,KAAKwK,MAAMtD,oBAAoBD,IAGpDoG,EAAgBrN,KAAKwK,MAAM6C,gBACZpC,EAASrE,gBAAgByG,KAC5CpC,EAASzK,YAAcyK,EAASrE,gBAAgByG,cAM9CrN,KAAK6L,SAASZ,sLAGChE,EAAiBoG,yFAEhCpL,EAAW,WACfgH,EAAK+yH,uBAGD/wH,EAAW,CACfzK,YAAa6M,EAAuBrN,KAAKwK,MAAMhK,YAAlB,KAC7BoG,gBAAiByG,EAAuBrN,KAAKwK,MAAM5D,gBAAlB,KACjCyG,cAAeA,EAA+BrN,KAAKwK,MAAM6C,cAA1BA,EAC/BpG,iBAAkBA,EAAqCjH,KAAKwK,MAAMvD,iBAA7BA,GAGnCA,GAAoBjH,KAAKwK,MAAMtD,qBAAuBD,IAAqBjH,KAAKwK,MAAMvD,kBAAoBrH,OAAOwH,KAAKpH,KAAKwK,MAAMtD,qBAAqB0tB,SAAS3tB,EAAiBqJ,iBAClLrF,EAAShE,iBAAmBA,EAAiBqJ,eAG3CjD,GAAiBA,IAAkBrN,KAAKwK,MAAM6C,gBAC3CrN,KAAKwK,MAAM5D,iBAAmBhH,OAAOwH,KAAKpH,KAAKwK,MAAM5D,iBAAiBguB,SAASvnB,EAAc4U,gBAChGhX,EAASoC,cAAgBA,EAAc4U,cACvChX,EAASzK,YAAcR,KAAKwK,MAAM5D,gBAAgByG,IACzCrN,KAAKwK,MAAMtD,qBAAuBtH,OAAOwH,KAAKpH,KAAKwK,MAAMtD,oBAAoBD,IAAmB2tB,SAASvnB,EAAc4U,iBAChIhX,EAASoC,cAAgBA,EAAc4U,cACvChX,EAASzK,YAAcR,KAAKwK,MAAMtD,oBAAoBD,GAAkBgE,EAASoC,eACjFpC,EAASrE,gBAAkB5G,KAAKwK,MAAMtD,oBAAoBD,cAMxDjH,KAAK6L,SAASZ,EAAShJ,oLAGbgF,mFAEVhF,EAAW,WACfgM,EAAK+tH,wBAGH/0H,GAAoBA,IAAqBjH,KAAKwK,MAAMvD,mBAAoBrH,OAAOwH,KAAKpH,KAAKwK,MAAMtD,qBAAqB0tB,SAAS3tB,EAAiBqJ,sCAChJrJ,EAAmBA,EAAiBqJ,uBAC9BtQ,KAAK6L,SAAS,CAClB5E,oBACAhF,oCACQgF,oCACJjH,KAAK6L,SAAS,CAClB5E,oBACAhF,gLAISoL,qFAEPpL,EAAW,WACfqjB,EAAK02G,wBAGH3uH,GAAiBA,IAAkBrN,KAAKwK,MAAM6C,gBAAiBzN,OAAOwH,KAAKpH,KAAKwK,MAAM5D,iBAAiBguB,SAASvnB,EAAc4U,sCAChI5U,EAAgBA,EAAc4U,eACxBhX,EAAW,CACfoC,kBAEO7M,YAAcR,KAAKwK,MAAM5D,gBAAgByG,YAC5CrN,KAAK6L,SAASZ,EAAShJ,oCACpBoL,oCACHrN,KAAK6L,SAAS,CAClBwB,gBACA7M,YAAY,MACZyB,4PAMJjC,KAAKgJ,YAEL0B,OAAOhJ,MAAQ1B,KAAKS,cAAciB,MAGbgJ,OAAOu0C,SAASC,OAAO5uC,cAAcskB,SAASjkB,GAAc09B,QAAQ/9B,iBAEvF5F,OAAO4jD,QAAQ3sB,MAAQ,aACvBj3B,OAAO4jD,QAAQ2tE,KAAO,cAGxBvxH,OAAO4N,OAASA,IAEZ5N,OAAOw5B,eACTlkC,KAAKS,cAAcgkE,iBAAiB,WAGpBzkE,KAAKS,cAAcw2D,cAAc,WAAU,KAC3CtmD,GAAcy9B,UAC5BpuC,KAAKS,cAAc2jE,gBAAgB,CAAC,iBAAiB,kBACrDpkE,KAAKS,cAAc4jC,gBAAgB,UAAU1zB,GAAcy9B,WAI/D1jC,OAAOwxH,YAAc,SAACrtB,GAEpB,IADA,IAAMstB,EAAU9wH,SAAS+wH,qBAAqB,UACrCjsH,EAAE,EAAEA,EAAEgsH,EAAQr5H,OAAOqN,IAAI,CAChC,IAAMksH,EAASF,EAAQhsH,GACnBksH,EAAOC,gBAAkBztB,GAC3BnkG,OAAO4N,OAAO+jH,GAAQE,QAAQ,qBAAqB,GAAGhxE,WAK5D7gD,OAAOC,iBAAiB,SAAU3K,KAAK4K,wBAEvC5K,KAAKg8H,uKAILtxH,OAAOI,oBAAoB,SAAU9K,KAAK4K,mEAGzBG,EAAUqC,GAC3BpN,KAAKgJ,YAEL,IAAMwS,EAAepO,EAAUC,gBAAkBrN,KAAKwK,MAAM6C,cACtDg+F,EAAkBj+F,EAAUnG,mBAAqBjH,KAAKwK,MAAMvD,kBAE9DuU,GAAgB6vF,IAClBrrG,KAAKg8H,kEAaP,GAPItxH,OAAO8xH,OAAS9xH,OAAOmF,MAAoE,IAA7DnF,OAAOmF,IAAIovC,SAASp6B,KAAKjN,QAAQjH,GAAc09B,UAAwD,oBAA9B3jC,OAAOkkG,OAAOstB,aACvHxxH,OAAOkkG,OAAOstB,YAAYxxH,OAAO8xH,MAGnC9xH,OAAOgxH,iBAAmB17H,KAAK07H,iBAC/BhxH,OAAOg2F,kBAAoB1gG,KAAK0gG,kBAE5Bx8D,aAAa,CACf,IAAMomB,EAAgBpmB,aAAaC,QAAQ,iBAAmBD,aAAaC,QAAQ,iBAAmB,SAChG+yE,EAAiBhzE,aAAaC,QAAQ,kBAAoBD,aAAaC,QAAQ,kBAAoB,SAEzGnkC,KAAKm4G,aAAa7tD,EAAc4sD,sCA6B1B9rE,GACR,OAAOprC,KAAK6L,SAAS,CAAEu/B,gDAGXp9B,GAIZ,OAHIA,GACFA,EAAEinB,iBAEGj1B,KAAK6L,SAAS,CACnB4xB,SAAS,KACTmjE,gBAAe,yCAIN5yF,EAAEyvB,GAGb,OAFAzvB,EAAEinB,iBAEKj1B,KAAK6L,SAAS,CACnB4xB,WACAmjE,gBAAe,6IAKjB5gG,KAAKS,cAAc2jE,yJAGR9Z,EAAc4sD,GAEzB,IAAI2B,EAAgBloG,GAAc2+B,WAAWgb,EAAch6C,eAK3D,IAJKuoG,GAAiB3B,IACpB2B,EAAgBloG,GAAc2+B,WAAW4nE,EAAe5mG,gBAGpDuoG,IAAkBA,EAAcr0G,SAA+B,aAAlB8lD,IAAiC1qD,OAAOwH,KAAKuJ,GAAc2+B,YAAY1a,SAAS01B,EAAch6C,gBAAoB4mG,IAAmBt3G,OAAOwH,KAAKuJ,GAAc2+B,YAAY1a,SAASsiF,EAAe5mG,eACpPg6C,EAAgB,SAChB4sD,EAAiB,cACZ,GAAuB,aAAlB5sD,EAA8B,CACxC,IAAMmyE,EAAchZ,GAAYC,cAC1BK,EAAYN,GAAYM,YAG9B,OAAQ7M,GACN,IAAK,YACEulB,GAAe1Y,IAClB7M,EAAiB,UAErB,MACA,IAAK,UACE6M,GAAa0Y,IAChBvlB,EAAiB,aAWzB,OAHAl3G,KAAKS,cAAc4jC,gBAAgB,gBAAiBimB,GACpDtqD,KAAKS,cAAc4jC,gBAAgB,iBAAkB6yE,GAE9Cl3G,KAAK6L,SAAS,CACnBy+C,gBACA4sD,oDAIK,IAAA2d,EAAA70H,KACDgL,EAAWhL,KAAKwK,MAAMlQ,OAAS,IAC/B65F,EAAoBn0F,KAAKS,cAAcG,gBAAgB,CAAC,aAAa,YAI3E,OACEpB,EAAAC,EAAAC,cAAC60F,EAAA,EAAD,KACE/0F,EAAAC,EAAAC,cAACy4H,GAAD,MACA34H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAepG,MAAOA,GACpBiG,EAAAC,EAAAC,cAACg9H,GAAAj9H,EAAD,CACE6vC,WAAYA,GACZqtF,YAAa,UACbC,QAAS7Q,KAETvsH,EAAAC,EAAAC,cAACm9H,GAAA,aAAD,KACG,SAAAzkB,GACC,OACE54G,EAAAC,EAAAC,cAACo9H,GAAD,CACE1kB,QAASA,EACTptG,SAAUA,EACVqzD,OAAQw2D,EAAKx2D,OACb/uB,WAAYA,GACZnpC,WAAY0uH,EAAKrqH,MAAMrE,WACvB3F,YAAaq0H,EAAKrqH,MAAMhK,YACxB0qH,cAAe2J,EAAKrqH,MAAM0gH,cAC1B79G,cAAewnH,EAAKrqH,MAAM6C,cAC1Bi9C,cAAeuqE,EAAKrqH,MAAM8/C,cAC1B4sD,eAAgB2d,EAAKrqH,MAAM0sG,eAC3BiB,aAAc0c,EAAK1c,aAAattG,KAAKgqH,GACrCjuH,gBAAiBiuH,EAAKrqH,MAAM5D,gBAC5BrB,cAAesvH,EAAKtvH,cAAcsF,KAAKgqH,GACvCziD,gBAAiByiD,EAAKziD,gBAAgBvnE,KAAKgqH,GAC3CvI,mBAAoBuI,EAAKrqH,MAAM8hH,mBAC/BplH,oBAAqB2tH,EAAKrqH,MAAMtD,oBAChCqlH,sBAAuBsI,EAAKtI,sBAAsB1hH,KAAKgqH,GACvDnL,yBAA0BmL,EAAKrqH,MAAMk/G,0BAErClqH,EAAAC,EAAAC,cAACo9H,GAAW/M,SAAZ,KACG,SAAAhmG,GAiCK,IAhCJyY,EAgCIzY,EAhCJyY,KACA0O,EA+BInnB,EA/BJmnB,OACA6L,EA8BIhzB,EA9BJgzB,QACAv7C,EA6BIuoB,EA7BJvoB,QACA2pG,EA4BIphF,EA5BJohF,SACAvsD,EA2BI70B,EA3BJ60B,SACA/V,EA0BI9e,EA1BJ8e,SACAqJ,EAyBInoB,EAzBJmoB,UACAhgB,EAwBInI,EAxBJmI,YACAovF,EAuBIv3F,EAvBJu3F,YACAp8F,EAsBI6E,EAtBJ7E,aACAjoB,EAqBI8sB,EArBJ9sB,aACAmkE,EAoBIr3C,EApBJq3C,aAEA8nD,GAkBIn/F,EAnBJiE,cAmBIjE,EAlBJm/F,gBAEA1B,GAgBIz9F,EAjBJgzG,eAiBIhzG,EAhBJy9F,iBACAiC,EAeI1/F,EAfJ0/F,iBACA9B,EAcI59F,EAdJ49F,iBACAh/E,EAaI5e,EAbJ4e,iBACApK,EAYIxU,EAZJwU,kBACA6qF,EAWIr/F,EAXJq/F,kBACA/H,EAUIt3F,EAVJs3F,mBACA8H,EASIp/F,EATJo/F,oBACAlB,EAQIl+F,EARJk+F,oBACA1G,EAOIx3F,EAPJw3F,oBACAgI,EAMIx/F,EANJw/F,qBACA3tG,EAKImO,EALJnO,qBACAguG,EAII7/F,EAJJ6/F,uBACAJ,EAGIz/F,EAHJy/F,yBACA18E,EAEI/iB,EAFJ+iB,0BACA1qC,EACI2nB,EADJ3nB,0BAEA,OACA5C,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACs9H,GAAA,EAAD,KACEx9H,EAAAC,EAAAC,cAACs9H,GAAA,EAAD,CACEzqF,KAAK,yCACLhvB,OACE,SAACtjB,GAAD,OAAWT,EAAAC,EAAAC,cAACu9H,GAADr9H,OAAAC,OAAA,GACOI,EADP,CAEGuiC,KAAMA,EACNjpC,MAAOA,EACP23C,OAAQA,EACR6L,QAASA,EACTq7D,QAASA,EACT52G,QAASA,EACTo+G,aAAa,EACbzU,SAAUA,EACVtiE,SAAUA,EACV79B,SAAUA,EACV4zC,SAAUA,EACV1M,UAAWA,EACXovE,YAAaA,EACblgD,aAAcA,EACdl8C,aAAcA,EACdjoB,aAAcA,EACdwgC,SAAUo3F,EAAKrqH,MAAMizB,SACrBk4D,OAAQk/B,EAAKl/B,OAAO9qF,KAAKgqH,GACzB3L,eAAgBA,EAChB1B,gBAAiBA,EACjBgU,WAAY3G,EAAKrqH,MAAMgxH,WACvBr1H,WAAY0uH,EAAKrqH,MAAMrE,WACvB+2H,SAAUrI,EAAKqI,SAASryH,KAAKgqH,GAC7BlN,iBAAkBA,EAClBh/E,iBAAkBA,EAClB8gF,iBAAkBA,EAClBjpH,YAAaq0H,EAAKrqH,MAAMhK,YACxB+9B,kBAAmBA,EACnB6qF,kBAAmBA,EACnB/H,mBAAoBA,EACpBh0G,cAAewnH,EAAKrqH,MAAM6C,cAC1Bi9C,cAAeuqE,EAAKrqH,MAAM8/C,cAC1B6yE,YAAatI,EAAKsI,YAAYtyH,KAAKgqH,GACnC5M,oBAAqBA,EACrBkB,oBAAqBA,EACrB5H,oBAAqBA,EACrBrK,eAAgB2d,EAAKrqH,MAAM0sG,eAC3BtW,eAAgBi0B,EAAKrqH,MAAMo2F,eAC3BhlF,qBAAsBA,EACtBwhH,aAAcvI,EAAKuI,aAAavyH,KAAKgqH,GACrCtL,qBAAsBA,EACtB8T,gBAAiBxI,EAAKyI,UAAUzyH,KAAKgqH,GACrC1c,aAAc0c,EAAK1c,aAAattG,KAAKgqH,GACrCjuH,gBAAiBiuH,EAAKrqH,MAAM5D,gBAC5B22H,cAAe1I,EAAK0I,cAAc1yH,KAAKgqH,GACvCtvH,cAAesvH,EAAKtvH,cAAcsF,KAAKgqH,GACvC5tH,iBAAkB4tH,EAAKrqH,MAAMvD,iBAC7B2iH,uBAAwBA,EACxBl9E,iBAAkBmoF,EAAKnoF,iBAAiB7hC,KAAKgqH,GAC7CrL,yBAA0BA,EAC1BtiH,oBAAqB2tH,EAAKrqH,MAAMtD,oBAChC4lC,0BAA2BA,EAC3B1qC,0BAA2BA,EAC3BmqH,sBAAuBsI,EAAKtI,sBAAsB1hH,KAAKgqH,SAMvE1gC,GACE30F,EAAAC,EAAAC,cAACs9H,GAAA,EAAD,CACEzqF,KAAK,kCACLhvB,OACE,SAACtjB,GAAD,OAAWT,EAAAC,EAAAC,cAAC89H,GAAD59H,OAAAC,OAAA,GACOI,EADP,CAEGuiC,KAAMA,EACNjpC,MAAOA,EACP23C,OAAQA,EACR6L,QAASA,EACTq7D,QAASA,EACT52G,QAASA,EACT2pG,SAAUA,EACVtiE,SAAUA,EACV79B,SAAUA,EACV4zC,SAAUA,EACVihE,cAAc,EACd3tE,UAAWA,EACXovE,YAAaA,EACblgD,aAAcA,EACdl8C,aAAcA,EACdjoB,aAAcA,EACdwgC,SAAUo3F,EAAKrqH,MAAMizB,SACrBk4D,OAAQk/B,EAAKl/B,OAAO9qF,KAAKgqH,GACzB3L,eAAgBA,EAChB1B,gBAAiBA,EACjBgU,WAAY3G,EAAKrqH,MAAMgxH,WACvBr1H,WAAY0uH,EAAKrqH,MAAMrE,WACvB+2H,SAAUrI,EAAKqI,SAASryH,KAAKgqH,GAC7BlN,iBAAkBA,EAClBh/E,iBAAkBA,EAClB8gF,iBAAkBA,EAClBjpH,YAAaq0H,EAAKrqH,MAAMhK,YACxB+9B,kBAAmBA,EACnB6qF,kBAAmBA,EACnB/H,mBAAoBA,EACpBh0G,cAAewnH,EAAKrqH,MAAM6C,cAC1Bi9C,cAAeuqE,EAAKrqH,MAAM8/C,cAC1B6yE,YAAatI,EAAKsI,YAAYtyH,KAAKgqH,GACnC5M,oBAAqBA,EACrBkB,oBAAqBA,EACrB5H,oBAAqBA,EACrBrK,eAAgB2d,EAAKrqH,MAAM0sG,eAC3BtW,eAAgBi0B,EAAKrqH,MAAMo2F,eAC3BhlF,qBAAsBA,EACtBwhH,aAAcvI,EAAKuI,aAAavyH,KAAKgqH,GACrCtL,qBAAsBA,EACtB8T,gBAAiBxI,EAAKyI,UAAUzyH,KAAKgqH,GACrC1c,aAAc0c,EAAK1c,aAAattG,KAAKgqH,GACrCjuH,gBAAiBiuH,EAAKrqH,MAAM5D,gBAC5B22H,cAAe1I,EAAK0I,cAAc1yH,KAAKgqH,GACvCtvH,cAAesvH,EAAKtvH,cAAcsF,KAAKgqH,GACvC5tH,iBAAkB4tH,EAAKrqH,MAAMvD,iBAC7B2iH,uBAAwBA,EACxBl9E,iBAAkBmoF,EAAKnoF,iBAAiB7hC,KAAKgqH,GAC7CrL,yBAA0BA,EAC1BtiH,oBAAqB2tH,EAAKrqH,MAAMtD,oBAChC4lC,0BAA2BA,EAC3B1qC,0BAA2BA,EAC3BmqH,sBAAuBsI,EAAKtI,sBAAsB1hH,KAAKgqH,SAM7Er1H,EAAAC,EAAAC,cAACs9H,GAAA,EAAD,KACEx9H,EAAAC,EAAAC,cAAC+9H,GAAD,CACEvsF,OAAQA,EACR6L,QAASA,EACTq7D,QAASA,EACT52G,QAASA,EACT2pG,SAAUA,EACVngG,SAAUA,EACVknC,UAAWA,EACXovE,YAAaA,EACbp8F,aAAcA,EACduY,SAAUo3F,EAAKrqH,MAAMizB,SACrByrF,eAAgBA,EAChBvzB,OAAQk/B,EAAKl/B,OAAO9qF,KAAKgqH,GACzBrN,gBAAiBA,EACjBgU,WAAY3G,EAAKrqH,MAAMgxH,WACvB7T,iBAAkBA,EAClBh/E,iBAAkBA,EAClB8gF,iBAAkBA,EAClBjpH,YAAaq0H,EAAKrqH,MAAMhK,YACxB+9B,kBAAmBA,EACnB6qF,kBAAmBA,EACnB/7G,cAAewnH,EAAKrqH,MAAM6C,cAC1Bi9C,cAAeuqE,EAAKrqH,MAAM8/C,cAC1B29D,oBAAqBA,EACrBkB,oBAAqBA,EACrBjS,eAAgB2d,EAAKrqH,MAAM0sG,eAC3BtW,eAAgBi0B,EAAKrqH,MAAMo2F,eAC3BhlF,qBAAsBA,EACtBwhH,aAAcvI,EAAKuI,aAAavyH,KAAKgqH,GACrCtL,qBAAsBA,EACtB8T,gBAAiBxI,EAAKyI,UAAUzyH,KAAKgqH,GACrC1c,aAAc0c,EAAK1c,aAAattG,KAAKgqH,GACrCjuH,gBAAiBiuH,EAAKrqH,MAAM5D,gBAC5B22H,cAAe1I,EAAK0I,cAAc1yH,KAAKgqH,GACvCjL,uBAAwBA,EACxBJ,yBAA0BA,EAC1B18E,0BAA2BA,EAC3BowF,SAAW,SAAAlvH,GAAO6mH,EAAKqI,SAASlvH,MAGZ,eAArB6mH,EAAKrqH,MAAM4gC,MACV5rC,EAAAC,EAAAC,cAACg+H,GAAD,CACEl7F,KAAMA,EACNhhC,QAASA,EACT0nH,eAAgBA,EAChBC,oBAAqBA,EACrBC,kBAAmBA,EACnB9H,YAAaA,EACbiI,qBAAsBA,EACtBtB,oBAAqBA,EACrBN,iBAAkBA,EAClB6B,yBAA0BA,EAC1BC,iBAAkBA,EAClBG,uBAAwBA,EACxBpC,gBAAiBA,EACjB16E,0BAA2BA,EAC3BoE,OAAQA,EACR6L,QAASA,EACT7qB,YAAaA,IAEb,KAEkB,YAArB2iG,EAAKrqH,MAAM4gC,MACV5rC,EAAAC,EAAAC,cAACs9H,GAAA,EAAD,KACEx9H,EAAAC,EAAAC,cAACs9H,GAAA,EAAD,CAAOW,OAAK,EAACprF,KAAK,IAChBhvB,OAAS,SAACtjB,GAAD,OACPT,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2rB,SAAA,KACE5rB,EAAAC,EAAAC,cAACk+H,GAADh+H,OAAAC,OAAA,GACMI,EADN,CAEEuiC,KAAMA,EACNjpC,MAAOA,EACPwjD,QAASA,EACTv7C,QAASA,EACTwJ,SAAUA,EACV4zC,SAAUA,EACV1M,UAAWA,EACX35B,WAAYs8G,EAAKrqH,MAAMlQ,MACvBq7F,OAAQk/B,EAAKl/B,OAAO9qF,KAAKgqH,GACzBp8G,YAAao8G,EAAKrqH,MAAMvL,OACxBiqH,eAAgBA,EAChBsS,WAAY3G,EAAKrqH,MAAMgxH,WACvBD,YAAa1G,EAAKrqH,MAAM+wH,YACxB/6H,YAAaq0H,EAAKrqH,MAAMhK,YACxB4oH,kBAAmBA,EACnB7qF,kBAAmBA,EACnB2sF,cAAe2J,EAAKrqH,MAAM0gH,cAC1B79G,cAAewnH,EAAKrqH,MAAM6C,cAC1B87G,oBAAqBA,EACrBzoB,kBAAmBm0B,EAAKn0B,kBACxB9kF,qBAAsBA,EACtBwhH,aAAcvI,EAAKuI,aAAavyH,KAAKgqH,GACrCv1B,mBAAoBu1B,EAAKv1B,mBACzB14F,gBAAiBiuH,EAAKrqH,MAAM5D,gBAC5Bs4F,kBAAmB21B,EAAKyI,UAAUzyH,KAAKgqH,GACvCr0B,kBAAmBq0B,EAAKrqH,MAAMg2F,kBAC9Bt5F,oBAAqB2tH,EAAKrqH,MAAMtD,oBAChC4lC,0BAA2BA,EAC3BowF,SAAW,SAAAlvH,GAAO6mH,EAAKqI,SAASlvH,OAElCxO,EAAAC,EAAAC,cAACm+H,GAAAp+H,EAAD,CACEq+H,QAAS,IACT93G,WAAY,KACZi5B,SAAU,SACV8+E,gBAAgB,EAChBC,WAAY,iBACZC,yBAA0B,EAC1B/gH,MAAO,CAAC6B,WAAY,yBAAyB3N,OAAO,WACpD2rB,YAAa,CAACruB,QAAS1D,EAAW,QAAU,OAAQ5M,gBAAgB,UAAWD,MAAO,QAAS+/H,UAAWlzH,EAAW,MAAQ,SAE7HxL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMiK,cAAe,MAAOD,WAAY,CAAC,aAAa,UAAWE,eAAgB,aAAc6oB,UAAW,CAAC,QAAQ,WAAYxV,MAAQlS,EAAW,CAAC20F,UAAU,UAAY,MACvKngG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAO+O,QAAS,CAAC,OAAO,SAAU6C,IAAK,oBAAqBjX,MAAO,OAAQ2E,OAAQ,SACnFO,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMw5B,GAAI,CAAC,EAAE,GAAIh7B,MAAO,YAAaa,SAAU,EAAGqS,UAAW,WAA7D,4RAC2R7R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMklB,KAAM,gEAAiE/kB,OAAQ,SAAUC,IAAI,+BAA+BknB,WAAY,QAA9I,iBAD3R,+LASVznB,EAAAC,EAAAC,cAACs9H,GAAA,EAAD,CAAOW,OAAK,EAACprF,KAAK,qBAChB/yC,EAAAC,EAAAC,cAACy+H,GAAD,OAEF3+H,EAAAC,EAAAC,cAACs9H,GAAA,EAAD,KACEx9H,EAAAC,EAAAC,cAAC0+H,GAAD,QAGF,OAGR5+H,EAAAC,EAAAC,cAAC2+H,GAAD,CAAsBphI,aAAcA,oBAptB5CkD,aCbEm+H,QACW,cAA7B5zH,OAAOu0C,SAASs/E,UAEe,UAA7B7zH,OAAOu0C,SAASs/E,UAEhB7zH,OAAOu0C,SAASs/E,SAASzjH,MACvB,2DCX2B,cAA7BpQ,OAAOu0C,SAASs/E,UAClB/Q,IAAY,CACVgR,IAAK,6DACLC,WAFU,SAECh2E,EAAOi2E,GAChB,IAAIt2H,EAASqgD,EACP9mB,EAAQ+8F,EAAKC,kBAMnB,OALIh9F,GAASA,EAAMvlB,SACbulB,EAAMvlB,QAAQtB,MAAM,iDACtB1S,GAAS,GAGNA,KAKbw2H,IAASr7G,OAAO/jB,EAAAC,EAAAC,cAACm/H,GAAD,MAASxzH,SAASC,eAAe,SD0G3C,kBAAmB0+C,WACrBA,UAAU80E,cAAcltH,MAAMwqF,KAAK,SAAA2iC,GACjCA,EAAaC,oCElInBroI,EAAAC,QAAA,CAAkBy9F,OAAA,uBAAAG,KAAA,2CCAlB79F,EAAAC,QAAA,CAAkBqoI,eAAA,qCAAAC,oBAAA,0CAAAC,gBAAA,y7VCAlBxoI,EAAAC,QAAA,CAAkB0kG,WAAA,qDCAlB3kG,EAAAC,QAAA,CAAkBkqB,YAAA,qCAAAO,gBAAA,yCAAAN,kBAAA,iECAlBpqB,EAAAC,QAAA,CAAkB2oG,aAAA,8BAAA1oG,gBAAA,iCAAAE,YAAA,6BAAAa,OAAA,wBAAAwnI,YAAA,6BAAAC,aAAA,8BAAAC,UAAA,2BAAAC,OAAA,wBAAAC,QAAA,yBAAAC,aAAA,8BAAAnkC,WAAA,4BAAAokC,gBAAA,iCAAAC,iBAAA,kCAAAC,YAAA,6BAAAC,YAAA,6BAAAC,UAAA,2BAAAC,WAAA,4BAAAC,aAAA,8BAAAC,iBAAA,kCAAAC,mBAAA,oCAAAC,aAAA,8BAAAC,aAAA,8BAAAC,KAAA,sBAAAC,mBAAA,oCAAAC,KAAA,sBAAAC,KAAA,sBAAAC,SAAA,0BAAAC,YAAA,6BAAAC,OAAA,wBAAAC,gBAAA,iCAAAC,KAAA,sBAAAC,aAAA,8BAAAz/B,SAAA,0BAAA0/B,YAAA,6BAAA1sC,OAAA,wBAAA2sC,WAAA,4BAAA9gC,mBAAA,oCAAA+gC,aAAA,8BAAAC,cAAA,+BAAAC,eAAA,gCAAAC,IAAA","file":"static/js/main.8b878c8e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__1G5iO\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__3HlA5\",\"bgContainer\":\"PageNotFound_bgContainer__16Bn7\",\"list\":\"PageNotFound_list__rJgDr\",\"textContainer\":\"PageNotFound_textContainer__2hI3Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__3RZVU\",\"empty\":\"Header_empty__1vLS-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3loA0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__30U-S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__ciXDw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"NewsletterForm_gradientButton__2Fu1h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"twitterIcon\":\"TwitterShareButton_twitterIcon__3-tUb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balanceButton\":\"MenuAccount_balanceButton__fYFu_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newLink\":\"CryptoInput_newLink__Km4rQ\",\"newPill\":\"CryptoInput_newPill__6lu6P\",\"mainInput\":\"CryptoInput_mainInput__H7-Y7\",\"button\":\"CryptoInput_button__2c5mT\",\"gradientButton\":\"CryptoInput_gradientButton__3fhnj\",\"newPillContainerAnim\":\"CryptoInput_newPillContainerAnim__33Yn5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__XoI9U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"ProposalListFilters_radioBtn__4jmT7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__1Tm4t\",\"headerBgFiller\":\"Tos_headerBgFiller__1Elt6\",\"bgContainer\":\"Tos_bgContainer__Bqzo0\",\"list\":\"Tos_list__2AtPw\",\"textContainer\":\"Tos_textContainer__xCW50\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"NewProposal_input__3aRBm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__Bj_aP\",\"hidden\":\"DashboardCard_hidden__13XeU\",\"interactive\":\"DashboardCard_interactive__34cn8\",\"active\":\"DashboardCard_active__3L5-p\",\"rainbow\":\"DashboardCard_rainbow__3z92q\",\"disabled\":\"DashboardCard_disabled__2kZdZ\"};","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #e0e0e0'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgba(0,54,255,0.3)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: blue.base,\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#3F3D4B',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    lineChartStroke:'#dbdbdb',\n    dashboardBg: '#f9fafd',\n    statValue: '#959595',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a3a4a5',\n    cellText: '#a6a6a6',\n    divider: '#d8d8d8',\n    counter: '#5d5d5d',\n    redeem: '#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg:'#fff',\n    transactions:{\n      action:{\n        send:'#4f4f4f',\n        swap:'#3d53c0',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        boost:'#ffff00',\n        receive:'#4f4f4f',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        withdraw:'#4f4f4f',\n      },\n      actionBg:{\n        send:'#dadada',\n        swap:'#ced6ff',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        boost:'#ff7979',\n        default:'#dadada',\n        receive:'#dadada',\n        migrate:'#ced6ff',\n        withdraw:'#dadada',\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, '#AAA'),\n      backgroundColor: tint(0.9, '#AAA'),\n      borderColor: '#AAA',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: '#f3f6ff',\n      borderColor: '#b6c2ff',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  getUnclaimedTokens = async () => {\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n    if (idleSpeeds){\n      return this.functionsUtil.BNify(idleSpeeds);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      return this.functionsUtil.setCachedData(cachedDataKey,distribution);\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          this.props.unit && unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          this.props.unit && unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    // console.log('AllocationChart',this.props.token,totalAllocation,protocolsAllocations,protocolsAllocationsPerc);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      sliceLabel: d => d.value+'%',\n      tooltipFormat: v => v+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {} : {\n            display: 'none'\n          }\n        },\n        labels:{\n          text:{\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontWeight:600,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.label.toLowerCase()] && globalConfigs.stats.protocols[this.state.selectedSlice.label.toLowerCase()].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.label.toLowerCase()].icon : `${this.state.selectedSlice.label.toLowerCase()}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      this.setStateSafe({},() => {\n        this.loadField();\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenPrice:output.toString()\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n          }\n          output = oldContractBalanceFormatted;\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          const [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPerc:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              // if (isRisk){\n              //   debugger;\n              // }\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                aprChartData[0].data.push({ x, y });\n              });\n            }\n\n            this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n          }\n\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            curve:'monotoneX',\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            enableSlices:false,\n            isInteractive:false,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = this.props.tokenConfig && this.props.tokenConfig.icon ? this.props.tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = this.props.tokenConfig && this.props.tokenConfig.icon ? this.props.tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency}` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        // console.log('score',this.state.score);\n        output = this.state.score !== undefined && this.state.score !== null ? (\n          <SmartNumber {...fieldProps} decimals={1} number={this.state.score} />\n        ) : loader\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\nclass DashboardCard extends Component {\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p:0,\n      boxShadow:1,\n      borderRadius:2,\n      position:'relative',\n      minHeight:'initial',\n      background:'cardBg'\n    };\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length){\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]){\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n      >\n        {\n          this.props.title && this.props.title.length>0 &&\n            <Flex\n              mt={[3,4]}\n              ml={[3,4]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              {...this.props.titleParentProps}\n            >\n              <Heading.h4\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n                {...this.props.titleProps}\n              >\n                {this.props.title}\n              </Heading.h4>\n              {\n                this.props.description && this.props.description.length>0 &&\n                  <Tooltip\n                    placement={'top'}\n                    message={this.props.description}\n                  >\n                    <Icon\n                      ml={2}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n              }\n            </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import theme from \"../theme\";\nimport Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged){\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents(){\n    \n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p:2,\n          width:1,\n          style:{cursor:'pointer'}\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen){\n        cardProps.boxShadow = 4;\n      }\n      return (\n        <DashboardCard\n          isInteractive={true}\n          cardProps={cardProps}\n        >\n          <Flex\n            width={1}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps,{\n        mt:2,\n        zIndex:1,\n        boxShadow:null,\n        position:'absolute'\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable){\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={theme.fontSizes[2]}\n          color={theme.colors.copyColor}\n          fontWeight={theme.fontWeights[3]}\n          fontFamily={theme.fonts.sansSerif}\n          className={[styles.searchInput,!props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map( o => o.value ).indexOf(selectedValue) === -1 && this.props.defaultValue){\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value){\n        return null;\n      }\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{cursor:'pointer'}}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={ props.isFocused ? '#fbfbfb' : '#ffffff' }\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={ v => this.props.onChange(v.value) }\n        components={{\n            Menu: this.state.CustomMenu,\n            Option: this.state.CustomOption,\n            Control: this.state.ControlComponent,\n            Input: this.state.CustomInputContainer,\n            SingleValue: this.state.CustomValueContainer,\n            IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from 'react';\nimport {\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner.js';\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n       <Button\n        onClick={this.props.handleClick}\n         {...this.props.buttonProps}\n       >\n        <Flex flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n          <Flex width={1} display={ this.props.isLoading ? 'flex' : 'none' }>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={ this.props.isLoading ? 'none' : 'flex' }>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n       </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport { Flex, Box, Text, Input, Link, Progress } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    steps:{\n      1:'Get Quote',\n      2:'Enable NXS',\n      3:'Buy Cover'\n    },\n    loading:false,\n    amountValue:'',\n    periodValue:'',\n    quoteResponse:null,\n    selectedToken:'DAI'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async changeSelectedToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    this.setState({\n      amountValue\n    });\n  }\n\n  changePeriod = (e) => {\n\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    this.setState({\n      periodValue\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    let quoteResponse = await this.functionsUtil.makeRequest(`https://api.nexusmutual.io/getQuote/${this.state.amountValue}/${this.state.selectedToken}/${this.state.periodValue}/0x78751B12Da02728F467A44eAc40F5cbc16Bd7934/M1`);\n\n    const newState = {\n      loading:false\n    };\n\n    if (quoteResponse){\n      newState.quoteResponse = quoteResponse.data;\n    }\n\n    this.setState({\n      quoteResponse\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Flex\n            mb={1}\n            width={1}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n          >\n            {\n              Object.keys(this.state.steps).map( stepIndex => (\n                <Link\n                  style={{\n                    flexBasis:'0',\n                    flex:'1 1 0px',\n                    textDecoration:'none',\n                    cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                  }}\n                  fontSize={2}\n                  textAlign={'center'}\n                  key={`step_${stepIndex}`}\n                  color={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                  hoverColor={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                  activeColor={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                >\n                  {this.state.steps[stepIndex]}\n                </Link>\n              ) )\n            }\n          </Flex>\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Progress\n              style={{\n                width:'100%',\n                height:'15px'\n              }}\n              value={(1/Object.keys(this.state.steps).length)*this.state.step}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}>\n              Select asset:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              selectedToken={this.state.selectedToken}\n              onChange={this.changeSelectedToken.bind(this)}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              How much do you want to cover?\n            </Text>\n            <Input\n              min={0}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              boxShadow={'none !important'}\n              value={this.state.amountValue}\n              onChange={this.changeAmount.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n              placeholder={`Insert ${this.state.selectedToken.toUpperCase()} amount`}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              For how many days?\n            </Text>\n            <Input\n              min={0}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              boxShadow={'none !important'}\n              value={this.state.periodValue}\n              placeholder={'Insert days of coverage'}\n              onChange={this.changePeriod.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n            />\n          </Box>\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <ButtonLoader\n              buttonProps={{\n                my:2,\n                mx:[0, 2],\n                size:'medium',\n                borderRadius:4,\n                mainColor:'blue',\n                disabled:(!this.state.amountValue || !this.state.selectedToken || !this.state.periodValue)\n              }}\n              buttonText={'GET QUOTE'}\n              isLoading={this.state.loading}\n              handleClick={ e => this.getQuote(e) }\n            />\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={ isInteractive ? e => this.props.handleClick(this.props) : null }\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={ fieldInfo.style ? fieldInfo.style : {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            <FieldComponent\n                              {...this.props}\n                              fieldInfo={fieldInfo}\n                              colProps={colInfo.props}\n                              parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            />\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens[token];\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  fieldComponent={AssetField}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI');\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n          value:Math.round(tokenPercentage),\n          color:'hsl('+tokenColorHsl+')'\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsTextColor:'#333',\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken,'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import theme from '../theme';\nimport { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    // debugger;\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'Swap':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null;\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || momentDate.isSameOrAfter(startDate)){\n        \n        if (momentDate.isAfter(new Date(),'day')){\n          momentDate = this.functionsUtil.strToMoment(new Date());\n        }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      areaOpacity:0.1,\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:theme.colors.legend,\n              fontFamily: theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: '#dbdbdb', strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            typeof point.data.balances === 'object' && Object.keys(point.data.balances).length &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import React from \"react\";\nimport { Text } from \"rimble-ui\";\n\nclass ShortHash extends React.Component {\n  shortenHash = hash => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, 7);\n    const txEnd = shortHash.substr(shortHash.length - 4);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  };\n  render() {\n    const shortHash = this.shortenHash(this.props.hash);\n\n    return <Text display={'inline'} {...this.props}>{shortHash}</Text>;\n  }\n}\n\nexport default ShortHash;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\nimport ShortHash from \"../utilities/components/ShortHash\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    let bgColor = theme.colors.transactions.actionBg.default;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={`https://etherscan.io/tx/${transaction.hash}`}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n        output = (\n          <Image src={`images/tokens/${transaction.tokenSymbol.toUpperCase()}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{transaction.tokenSymbol}</Text>\n        );\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase()) && \n                          (this.state.activeFilters.assets === null || tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase()) &&\n                          ( availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.value);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.status = tx.status ? tx.status : 'Completed';\n      tx.action = action;\n      tx.momentDate = momentDate;\n      tx.amount = amount;\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(`https://etherscan.io/tx/${txHash}`) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let tokensEarnings = {};\n    let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n    const amountLents = await this.functionsUtil.getAmountLent(this.props.enabledTokens,this.props.account);\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(Object.keys(amountLents),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountLents[token],token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n      estimationStepsPerc = Math.max(estimationStepsPerc,maxPossibleStep);\n\n      // console.log(token,amountLent.toFixed(5),earnings.toFixed(5),earningsYear.toFixed(5),tokenConfig,tokenAprs,tokenAPR.toFixed(5),tokenAPY.toFixed(5),earningsPercStep,maxPossibleStep,estimationStepsPerc);\n\n      if (!amountLent.isNaN() && !idleTokenPrice.isNaN() && !earnings.isNaN() && !earningsYear.isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const orderedTokensEarnings = {};\n    Object.keys(amountLents).forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    // console.log(estimationStepsOptions,estimationStepsDefaultOption)\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings)));\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${theme.colors.divider}`}\n                            >\n                              <Text\n                                fontWeight={[3,4]}\n                                fontSize={[0,'1.2em']}\n                                style={{\n                                  wordBreak:'break-all'\n                                }}\n                                color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                              >\n                                {estimationStepEarningsFormatted}\n                              </Text>\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? '2.8em' : '2.2em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      alignItems={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'#ffffff'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={[2,3]}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={`images/tokens/${token}.svg`} height={['1.4em','2.2em']} />\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import Title from '../Title/Title';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport { Flex, Box, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    depositedTokens:null,\n    remainingTokens:null,\n    portfolioLoaded:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    // Load portfolio if account is set\n    if (this.props.account){\n\n      const newState = {};\n\n      // Get deposited tokens\n      const portfolio = await this.functionsUtil.getAccountPortfolio(this.props.availableTokens,this.props.account);\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        let avgScore = this.functionsUtil.BNify(0);\n        let totalEarnings = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = this.props.availableTokens[token];\n\n          const [tokenAprs,idleTokenPrice,tokenScore,avgBuyPrice,amountLent] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            this.functionsUtil.getIdleTokenPrice(tokenConfig),\n            this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n            this.functionsUtil.getAmountLent([token],this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent[token],token,tokenConfig,isRisk);\n\n          const tokenAPY = this.functionsUtil.BNify(tokenAprs.avgApy);\n          const tokenWeight = portfolio.tokensBalance[token].tokenBalance.div(portfolio.totalBalance);\n          const tokenEarningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n          const tokenEarnings = amountLentToken ? amountLentToken.times(tokenEarningsPerc) : 0;\n\n          // console.log(token,idleTokenPrice.toFixed(5),avgBuyPrice[token].toFixed(5),amountLentToken.toFixed(5),tokenEarningsPerc.toFixed(5),tokenEarnings.toFixed(5));\n\n          if (tokenEarnings){\n            totalEarnings = totalEarnings.plus(tokenEarnings);\n          }\n\n          if (tokenAPY){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          if (tokenScore){\n            avgScore = avgScore.plus(tokenScore.times(tokenWeight));\n          }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,this.props.availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        const earningsStart = totalEarnings.plus(govTokensTotalBalance);\n        const earningsEnd = totalAmountLent.times(avgAPY.div(100)).plus(govTokensTotalBalance);\n\n        newState.aggregatedValues = [\n          {\n            flexProps:{\n              pr:[0,2],\n              width:[1,1/3],\n            },\n            props:{\n              label:'',\n              title:'Avg APY',\n              value:avgAPY.toFixed(2)+'<small>%</small>',\n              description:this.functionsUtil.getGlobalConfig(['messages','apyLong'])\n            }\n          },\n          {\n            flexProps:{\n              px:[0,2],\n              width:[1,1/3],\n            },\n            props:{\n              title:'Total Earnings',\n              description:'Total earnings does not include accrued governance tokens: '+(govTokensTotalBalance && govTokensTotalBalance.gt(0) ? ` (${govTokensTotalBalanceTooltip.join(' / ')})` : ''),\n              children:(\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  justifyContent={'center'}\n                >\n                  <CountUp\n                    delay={0}\n                    decimals={8}\n                    decimal={'.'}\n                    separator={''}\n                    useEasing={false}\n                    duration={31536000}\n                    end={parseFloat(earningsEnd)}\n                    start={parseFloat(earningsStart)}\n                    formattingFn={ n => '$ '+this.functionsUtil.abbreviateNumber(n,8,9,8) }\n                  >\n                    {({ countUpRef, start }) => (\n                      <span\n                        ref={countUpRef}\n                        style={{\n                          lineHeight:1,\n                          color:this.props.theme.colors.copyColor,\n                          fontFamily:this.props.theme.fonts.counter,\n                          fontWeight: this.props.isMobile ? 600 : 700,\n                          fontSize:this.props.isMobile ? '21px' : '1.7em',\n                        }}\n                      />\n                    )}\n                  </CountUp>\n                  {\n                    /*\n                    govTokensTotalBalance && govTokensTotalBalance.gt(0) &&\n                      <Text\n                        fontSize={1}\n                        fontWeight={2}\n                        color={'cellText'}\n                        textAlign={'center'}\n                      >\n                        {govTokensTotalBalanceTooltip.join(' / ')}\n                      </Text>\n                    */\n                  }\n                </Flex>\n              ),\n              label:'',\n            }\n          },\n          {\n            flexProps:{\n              pl:[0,2],\n              width:[1,1/3],\n            },\n            props:{\n              title:'Avg Risk Score',\n              value:avgScore.toFixed(1),\n              label:''\n            }\n          },\n        ];\n      }\n\n      // Get tokens to migrate\n      const tokensToMigrate = await this.functionsUtil.getTokensToMigrate(this.props.selectedStrategy);\n\n      newState.tokensToMigrate = tokensToMigrate;\n      newState.portfolioLoaded = true;\n\n      const remainingTokens = Object.keys(this.props.availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Load and process Etherscan Txs\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n      await this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(this.props.availableTokens))\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        remainingTokens:Object.keys(this.props.availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const riskScore = this.functionsUtil.getGlobalConfig(['messages','riskScore']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n\n    return (\n      <Box width={1}>\n        <Title mb={[3,4]}>{this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])} strategy</Title>\n        {\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <>\n              {\n                this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        this.state.aggregatedValues.map((v,i) => (\n                          <Flex\n                            {...v.flexProps}\n                            flexDirection={'column'}\n                            key={`aggregatedValue_${i}`}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                py:[3,4],\n                                mb:[2,0]\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  v.props.children ? v.props.children : (\n                                    <Text\n                                      lineHeight={1}\n                                      fontWeight={[3,4]}\n                                      color={'copyColor'}\n                                      fontFamily={'counter'}\n                                      fontSize={[4,'1.7em']}\n                                      dangerouslySetInnerHTML={{ __html: v.props.value }}\n                                    >\n                                    </Text>\n                                  )\n                                }\n                                  <Flex\n                                    mt={2}\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Text\n                                      fontWeight={2}\n                                      fontSize={[1,2]}\n                                      color={'cellText'}\n                                    >\n                                      {v.props.title}\n                                    </Text>\n                                  {\n                                    v.props.description && (\n                                      <Tooltip\n                                        placement={'bottom'}\n                                        message={v.props.description}\n                                      >\n                                        <Icon\n                                          ml={2}\n                                          name={\"Info\"}\n                                          size={'1em'}\n                                          color={'cellTitle'}\n                                        />\n                                      </Tooltip>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </DashboardCard>\n                          </Flex>\n                        ))\n                      }\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.33]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.66]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              <Flex id=\"available-assets\" width={1} flexDirection={'column'}>\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.29,0.11],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:this.props.isMobile ? 'SCORE' : 'RISK SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.16],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:0.16,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.12],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:false,\n                            props:{\n                              width:[0.12,0.09],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:this.props.isMobile ? 'SCORE' : 'RISK SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.12],\n                            },\n                            parentProps:{\n                              alignItems:['center','flex-start'],\n                            },\n                            fields:[\n                              {\n                                name:'score',\n                              }\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.13],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.09],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.13],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,this.state.depositedTokens.length>0 ? 0.10 : 0.13],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:this.props.isMobile ? 'SCORE' : 'RISK SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.22,0.17],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width: this.state.depositedTokens.length>0 ? 0.28 : 0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(govTokens)}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.32,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.17],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.33,0.17],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.17],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.17],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        background: props.background ? props.background : 'url(images/bg-bottom-right.png) no-repeat bottom right',\n        backgroundSize: !props.background ? '65%' : null\n      }}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          mainColor={'white'}\n          contrastColor={'white'}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          width={ this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px']) }\n          style={ this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null) }\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      availableMethods[method] = globalConfigs.payments.methods[method];\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                return (\n                  <ImageButton\n                    caption={token}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    imageSrc={`images/tokens/${token}.svg`}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} my={0}>\n                {\n                  this.props.showInline && this.props.buyToken ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `How do you prefer to buy ${this.state.selectedToken}?`\n                }\n              </Text>\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n                  if (!availableProviders || !availableProviders.length){\n                    return false;\n                  }\n\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton isMobile={ this.props.isMobile } key={`method_${method}`} {...methodInfo.props} imageProps={ imageProps } handleClick={ e => this.selectMethod(e,method) } />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  maxWidth={ this.props.showInline ? '35em' : 'initial' }\n                  width={ (this.props.showInline && !this.props.isMobile) ? 0.72 : 1 }\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    placeholder={'Select your country'}\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    value={this.state.selectedCountry}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={`images/tokens/${token}.svg`} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                borderRadius={4}\n                my={2}\n                mx={[0, 2]}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ e => this.closeModal(e) }\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    className={styles.gradientButton}\n                    borderRadius={4}\n                    my={2}\n                    mx={[0, 2]}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                    onClick={ e => this.goBack(e) }\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontSize:3,\n      fontWeight:3,\n      height:'45px',\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'primary'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      this.functionsUtil.customLog('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    let prediction = null;\n    if (this.state.predictTable){\n      this.state.predictTable.forEach((p,i) => {\n        if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n          prediction = p;\n          return true;\n        }\n      });\n    }\n\n    if (this.state.blockTime && prediction){\n      const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n      const blocksWait = pdValues[0];\n      const blockInterval = this.state.blockTime.block_time;\n      let txMeanSecs = blocksWait * blockInterval;\n      txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n      this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n      return txMeanSecs; // Customized\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px'\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px'\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              href={`https://etherscan.io/tx/${this.props.hash}`}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in Etherscan\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'legend'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:false,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    this.checkButtonDisabled(amount);\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.checkButtonDisabled(amount);\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,this.props.tokenConfig,this.props.account);\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    const newState = {\n      loading,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod,params) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback();\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const useMetaTx = this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // console.log('Migration params',oldIdleTokens,minAmountForRebalance,migrationContractInfo.name, migrationMethod, migrationParams);\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          // Send migration tx\n          this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                    }}\n                  >\n                    {\n                      this.state.migrationContractApproved ? (\n                        this.state.processing.migrate.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar\n                              web3={this.props.web3}\n                              hash={this.state.processing.migrate.txHash}\n                              endMessage={`Finalizing migration request...`}\n                              cancelTransaction={this.cancelTransaction.bind(this)}\n                              waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                              sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                            />\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        )\n                      ) : (\n                        this.state.processing.approve.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar\n                              web3={this.props.web3}\n                              waitText={`Approve estimated in`}\n                              hash={this.state.processing.approve.txHash}\n                              endMessage={`Finalizing approve request...`}\n                              cancelTransaction={this.cancelTransaction.bind(this)}\n                            />\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'LockOpen'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.approveText ? this.props.approveText : (\n                                  <>To migrate your { !this.props.isMigrationTool ? 'old' : '' } {this.state.oldTokenName} you need to approve our Smart-Contract first.</>\n                                )\n                              }\n                            </Text>\n                            <RoundButton\n                              buttonProps={{\n                                mt:3,\n                                width:[1,1/2]\n                              }}\n                              handleClick={this.approveMigration.bind(this)}\n                            >\n                              Approve\n                            </RoundButton>\n                          </Flex>\n                        )\n                      )\n                    }\n                  </DashboardCard>\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      web3={this.props.web3}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import IDLE from '../contracts/IDLE.json';\nimport COMP from '../abis/compound/COMP.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from '../abis/curve/CurvePool.json';\nimport NexusMutual from '../NexusMutual/NexusMutual';\nimport { Web3Versions } from '@terminal-packages/sdk';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PriceOracle from '../contracts/PriceOracle.json';\nimport IdleTokenV2 from '../contracts/IdleTokenV2.json';\nimport StrategyPage from '../StrategyPage/StrategyPage';\nimport BuyModal from '../utilities/components/BuyModal';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\n// import GovernorAlphaComp from '../contracts/GovernorAlpha.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport IdleBatchConverter from '../contracts/IdleBatchConverter.json';\nimport UniswapV2Router02 from '../abis/uniswap/UniswapV2Router02.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: 'Idle',\n  version: 'v5.2',\n  baseURL: 'https://idle.finance',\n  baseToken: 'ETH',\n  countries:{\n    'USA':'United States of America',\n    'GBR':'United Kingdom',\n    'AUS':'Australia',\n    'BRA':'Brazil',\n    'CHN':'China',\n    'CAN':'Canada',\n    'EUR':'Europe',\n    'HKG':'Hong Kong',\n    'IND':'India',\n    'MEX':'Mexico',\n    'RUS':'Russia',\n    'ZAF':'South Africa',\n    'KOR':'South Korea'\n  },\n  logs:{ // Enable logs levels\n    errorsEnabled:false,\n    messagesEnabled:false,\n  },\n  connectors:{ // Connectors props\n    metamask:{\n      enabled:true,\n      subcaption:'Browser extension'\n    },\n    opera:{\n      enabled:true,\n      subcaption:'Opera injected wallet'\n    },\n    dapper:{\n      enabled:true,\n      icon:'dapper.png',\n      subcaption:'Browser extension',\n    },\n    coinbase:{\n      enabled:true,\n      icon:'coinbase.png',\n      subcaption:'Connect with Coinbase wallet'\n    },\n    trustwallet:{\n      enabled:true,\n      subcaption:'Connect with Trust Wallet'\n    },\n    walletconnect:{\n      enabled:true,\n      iconModal:'walletconnect.png',\n      subcaption:'Connect with QR code'\n    },\n    walletlink:{\n      enabled:true,\n      icon:'coinbase.png',\n      name:'Coinbase Wallet',\n      subcaption:'Connect with QR code'\n    },\n    fortmatic:{\n      enabled:true,\n      subcaption:'Login with phone-number'\n    },\n    portis:{\n      enabled:true,\n      subcaption:'Login with e-mail'\n    },\n    authereum:{\n      enabled:true,\n      subcaption:'Cross-device wallet'\n    },\n    torus:{\n      enabled:true,\n      icon:'torus.png',\n      subcaption:'One-Click login for Web 3.0'\n    },\n    trezor:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    ledger:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    }\n  },\n  newsletterSubscription:{\n    endpoint:'https://dev.lapisgroup.it/idle/newsletter.php'\n  },\n  messages:{\n    scoreShort:'Protocol Risk Score',\n    apyShort:'Annual Percentage Yield',\n    tokenPrice:'The token price is calculated using Uniswap spot prices.',\n    cheapRedeem:'Amount of unlent funds available for low gas fees redeem',\n    curveBonusSlippage:'Slippage or bonus depending on if the coin is low or high in the Curve Pool',\n    directMint:'Pay an additional gas fee to rebalance the pool and help all users gain an additional APR',\n    distributionSpeed:'The distribution indicates the amount of tokens distributed for the entire pool.',\n    govTokenApr:'Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.',\n    userDistributionSpeed:'The distribution indicates the amount of tokens distributed for your account based on your current pool share.',\n    govTokenRedeemableBalance:'The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.',\n    apyLong:'APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.',\n    yieldFarming:'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\">Read more here</a>.',\n    riskScore:`It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions:`<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`\n  },\n  analytics:{\n    google:{\n      events:{\n        enabled:true, // Enable Google Analytics events\n        addPostfixForTestnet:true, // Append testnet to eventCategory\n        debugEnabled:false // Enable sending for test environments\n      }\n    }\n  },\n  modals:{ // Enable modals\n    first_deposit_referral:false, // Referral share modal\n    first_deposit_share:true, // First deposit share modal\n    migrate:{\n      enabled:true\n    },\n    welcome:{ // Welcome modal\n      enabled:true,\n      frequency:604800 // One week\n    }\n  },\n  dashboard:{\n    baseRoute:'/dashboard',\n  },\n  governance:{\n    test:false,\n    enabled:true,\n    startBlock:11333729,\n    baseRoute:'/governance',\n    props:{\n      tokenName:'IDLE',\n      availableContracts:{\n        IDLE,\n        PriceOracle,\n        GovernorAlpha,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    contracts:{\n      delegates:'IDLE',\n      governance:'GovernorAlpha',\n    }\n  },\n  curve:{\n    enabled:false,\n    params:{\n      n_coins:4,\n      label:'Curve',\n      route:'/dashboard/curve',\n      image:'images/protocols/curve.svg',\n      imageInactive:'images/protocols/curve-off.svg',\n    },\n    rates:{\n      path:['apy','day','y'],\n      endpoint:'https://www.curve.fi/raw-stats/apys.json'\n    },\n    poolContract:{\n      decimals:18,\n      abi:CurvePool,\n      name:'YDAI+YUSDC+YUSDT+YTUSD',\n      token:'YDAI+YUSDC+YUSDT+YTUSD',\n      address:'0xdf5e0e81dff6faf3a7e52ba697820c5e32d806a8'\n    },\n    depositContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0xbbc81d23ea2c3ec7e56d39296f0cbb648873a5d3'\n    },\n    zapContract:{\n      abi:CurveZap,\n      name:'idleCurveZap',\n      address:'0x456974df1042ba7a46fd49512a8778ac3b840a21'\n    },\n    migrationContract:{\n      abi:CurveSwap,\n      name:'idleCurveSwap',\n      address:'0x45F783CCE6B7FF23B2ab2D70e416cdb7D6055f51',\n      functions:[\n        {\n          label:'Deposit',\n          name:'add_liquidity'\n        },\n      ]\n    },\n    availableTokens:{\n      idleDAIYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'DAI',\n        token:'idleDAIYield',\n        address:'0x16de59092dae5ccf4a1e6439d611fd0653f0bd01',\n        migrationParams:{\n          n_coins:4,\n          coinIndex:0\n        },\n      },\n      idleUSDCYield:{\n        decimals:6,\n        enabled:true,\n        baseToken:'USDC',\n        token:'idleUSDCYield',\n        address:'0xd6ad7a6750a7593e092a9b218d66c0a814a3436e',\n        migrationParams:{\n          n_coins:4,\n          coinIndex:1\n        },\n      },\n      idleUSDTYield:{\n        decimals:6,\n        enabled:true,\n        baseToken:'USDT',\n        token:'idleUSDTYield',\n        address:'0x83f798e925bcd4017eb265844fddabb448f1707d',\n        migrationParams:{\n          n_coins:4,\n          coinIndex:2\n        },\n      },\n      idleTUSDYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'TUSD',\n        token:'idleTUSDYield',\n        address:'0x73a052500105205d34daf004eab301916da8190f',\n        migrationParams:{\n          n_coins:4,\n          coinIndex:3\n        },\n      },\n    }\n  },\n  govTokens:{\n    IDLE:{\n      abi:IDLE,\n      decimals:18,\n      token:'IDLE',\n      enabled:true,\n      showAUM:false, // Include IDLE balance in AUM\n      showAPR:false, // Include IDLE Apr\n      protocol:'idle',\n      showBalance:false, // Include IDLE balance in earnings\n      aprTooltipMode:false,\n      distributionFrequency:'day', // Multiply distribution per block\n      color:'hsl(162, 100%, 41%)',\n      icon:'images/tokens/IDLE.png',\n      address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e' // MAIN\n      // address:'0xAB6Bdb5CCF38ECDa7A92d04E86f7c53Eb72833dF', // KOVAN\n    },\n    COMP:{\n      abi:COMP,\n      decimals:18,\n      token:'COMP',\n      enabled:true,\n      showAUM:true, // Include IDLE balance in AUM\n      showAPR:true, // Include COMP Apr\n      showBalance:true, // Include COMP balance in earnings\n      protocol:'compound',\n      aprTooltipMode:'apr',\n      distributionFrequency:'day',\n      color:'hsl(162, 100%, 41%)',\n      address:'0xc00e94cb662c3520282e6f5717214004a7f26888', // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    }\n  },\n  contracts:{\n    PriceOracle:{\n      abi:PriceOracle,\n      address:'0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n      // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n    },\n    Timelock:{\n      abi:Timelock,\n      address:'0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n      // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n    },\n    EcosystemFund:{\n      abi:EcosystemFund,\n      address:'0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n      // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n    },\n    VesterFactory:{\n      abi:VesterFactory,\n      address:'0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n      // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n    },\n    IdleController:{\n      abi:IdleController,\n      address:'0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n      // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n    },\n    EarlyRewards:{\n        abi:EarlyRewards,\n        address:'0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n    },\n    GovernorAlpha:{\n      abi:GovernorAlpha,\n      address:'0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n      // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n    },\n    /*\n    GovernanceCompound:{\n      abi:GovernorAlphaComp,\n      address:'0xc0da01a04c3f3e0be433606045bb7017a7323e38'\n    },\n    */\n    Comptroller:{\n      abi:Comptroller,\n      address:'0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n      // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n    },\n    UniswapRouter:{\n      abi:UniswapV2Router02,\n      address:'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n    },\n  },\n  tokens:{\n    DAI:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n    USDC:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n  },\n  strategies:{\n    best:{\n      token:'DAI',\n      color:'#f32121',\n      comingSoon:false,\n      addGovTokens:true,\n      titlePostfix:null,\n      title:'Best-Yield',\n      iconName:'Whatshot',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(40,95%,59%)',\n      icon:'images/strategies/best-on.svg',\n      iconInactive:'images/strategies/best-off.svg',\n      desc:'Maximize your returns across DeFi protocols',\n      descLong:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.',\n      descShort:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.'\n    },\n    risk:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:false,\n      titlePostfix:null,\n      addGovTokens:true,\n      iconName:'Security',\n      title:'Risk-Adjusted',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/risk-on.svg',\n      iconInactive:'images/strategies/risk-off.svg',\n      desc:'Optimize your risk exposure across DeFi protocols',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    },\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n  },\n  stats:{\n    enabled:true, // Enable endpoint\n    rates:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/rates/'\n    },\n    scores:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/scores/'\n    },\n    versions:{\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3:{\n        label:'Idle V3',\n        additionalProtocols:[],\n        endTimestamp:1597237542,\n        startTimestamp:1589801874,\n        showPerformanceTooltip:false,\n        strategiesParams:{\n          risk:{\n            endTimestamp:1597233922,\n          }\n        },\n        enabledStrategies:['best','risk'],\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n      },\n      v4:{\n        label:'Idle V4',\n        endTimestamp:null,\n        startTimestamp:1597442400, // 1598220000\n        enabledStrategies:['best','risk'],\n        showPerformanceTooltip:true,\n        strategiesParams:{\n          risk:{\n            startTimestamp:1599183170,\n          }\n        },\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n        additionalProtocols:[\n          {\n            decimals:16,\n            protocol:'compound',\n            name:'compoundWithCOMP',\n          }\n        ]\n      }\n    },\n    tokens:{\n      DAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          rgb:[250,184,51],\n          hex:'#F7B24A',\n          hsl:['40', '95%', '59%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 2]\n        },\n        startTimestamp:'2020-02-11',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USD:{\n        enabled:true,\n        color:{\n          hex:'#85bb65',\n          rgb:[133, 187, 101],\n          hsl:['98', '39%', '56%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        address:null,\n        startTimestamp:'2020-02-04',\n      },\n      USDC:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#2875C8',\n          rgb:[40,117,200],\n          hsl:['211', '67%', '47%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USDT:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#22a079',\n          rgb:[34, 160, 121],\n          hsl:['161', '65%', '38%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      TUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#002868',\n          rgb:[0, 40, 104],\n          hsl:['217', '100%', '20%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n      },\n      SUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#1e1a31',\n          rgb:[30, 26, 49],\n          hsl:['250', '31%', '15%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n      },\n      WBTC:{\n        decimals:8,\n        enabled:true,\n        color:{\n          hex:'#eb9444',\n          rgb:[235, 148, 68],\n          hsl:['29', '81%', '59%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'wbtcDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      COMP:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#00d395',\n          rgb:[0, 211, 149],\n          hsl:['162', '100%', '41%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0xc00e94cb662c3520282e6f5717214004a7f26888',\n      },\n      IDLE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#0d55bb',\n          rgb:[13, 85, 187],\n          hsl:['215', '87%', '39%']\n        },\n        startTimestamp:'2020-11-10',\n        icon:'images/tokens/IDLE.png',\n        conversionRateField:'idleDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0xc00e94cb662c3520282e6f5717214004a7f26888',\n      },\n      'YDAI+YUSDC+YUSDT+YTUSD':{\n        decimals:18,\n        enabled:false,\n        name:'Curve.fi',\n        color:{\n          hex:'#ff0000',\n          rgb:[255, 0, 0],\n          hsl:['0', '100%', '50%']\n        },\n        startTimestamp:'2020-06-15',\n      },\n    },\n    protocols:{\n      compound:{\n        legend:true,\n        label:'Compound',\n        color:{\n          rgb:[0, 209, 146],\n          hsl:['162', '100%', '41%']\n        }\n      },\n      compoundWithCOMP:{\n        rateField:['rate','compoundAdditionalAPR'],\n        label:'Compound + COMP',\n        color:{\n          rgb:[0, 153, 107],\n          hsl:['162', '100%', '30%']\n        }\n      },\n      fulcrum:{\n        legend:false,\n        label:'Fulcrum',\n        color:{\n          rgb:[2, 138, 192],\n          hsl:['197', '98%', '38%']\n        }\n      },\n      dsr:{\n        label:'DSR',\n        icon:'CHAI.png',\n        color:{\n          rgb:[222, 52, 67],\n          hsl:['355', '72%', '54%']\n        }\n      },\n      dydx:{\n        label:'DyDx',\n        legend:true,\n        color:{\n          rgb:[87, 87, 90],\n          hsl:['240', '2%', '35%']\n        }\n      },\n      iearn:{\n        label:'iEarn'\n      },\n      aave:{\n        label:'Aave',\n        legend:true,\n        color:{\n          rgb:[230, 131, 206],\n          hsl:['315', '66%', '71%']\n        },\n        data:{\n          '0xfc1e690f61efd961294b3e1ce3313fbd8aa4f85d':{},\n          '0x9ba00d6856a4edf4665bca2c2309936572473b7e':{\"9598633\":\"1000000\",\"9598646\":\"1000001\",\"9598684\":\"1000002\",\"9598823\":\"1000003\",\"9598869\":\"1000004\",\"9598915\":\"1000005\",\"9599092\":\"1000008\",\"9599138\":\"1000009\",\"9599263\":\"1000011\",\"9599267\":\"1000011\",\"9599295\":\"1000012\",\"9599299\":\"1000012\",\"9599307\":\"1000012\",\"9599315\":\"1000012\",\"9599579\":\"1000017\",\"9599866\":\"1000022\",\"9600156\":\"1000026\",\"9600433\":\"1000031\",\"9600704\":\"1000036\",\"9600982\":\"1000042\",\"9601051\":\"1000044\",\"9601073\":\"1000045\",\"9601077\":\"1000045\",\"9601345\":\"1000053\",\"9601619\":\"1000058\",\"9601891\":\"1000063\",\"9602144\":\"1000068\",\"9602429\":\"1000073\",\"9602724\":\"1000078\",\"9602993\":\"1000083\",\"9603272\":\"1000088\",\"9603536\":\"1000093\",\"9603826\":\"1000098\",\"9603840\":\"1000098\",\"9604038\":\"1000102\",\"9604182\":\"1000104\",\"9604457\":\"1000109\",\"9604701\":\"1000114\",\"9604979\":\"1000119\",\"9605247\":\"1000124\",\"9605505\":\"1000129\",\"9605793\":\"1000134\",\"9606073\":\"1000139\",\"9606368\":\"1000144\",\"9606639\":\"1000149\",\"9606896\":\"1000153\",\"9607147\":\"1000158\",\"9607406\":\"1000163\",\"9607722\":\"1000168\",\"9608130\":\"1000175\",\"9608395\":\"1000180\",\"9608656\":\"1000185\",\"9608959\":\"1000190\",\"9609544\":\"1000260\",\"9609811\":\"1000293\",\"9610073\":\"1000314\",\"9610341\":\"1000331\",\"9610601\":\"1000332\",\"9610871\":\"1000333\",\"9611120\":\"1000335\",\"9611386\":\"1000336\",\"9611665\":\"1000337\",\"9611949\":\"1000339\",\"9612210\":\"1000340\",\"9612487\":\"1000341\",\"9612758\":\"1000343\",\"9613012\":\"1000344\",\"9613276\":\"1000346\",\"9613542\":\"1000347\",\"9613824\":\"1000349\",\"9614069\":\"1000351\",\"9614327\":\"1000353\",\"9614596\":\"1000355\",\"9614864\":\"1000356\",\"9615111\":\"1000358\",\"9615394\":\"1000360\",\"9615679\":\"1000361\",\"9615958\":\"1000363\",\"9616245\":\"1000365\",\"9616531\":\"1000367\",\"9616803\":\"1000369\",\"9617053\":\"1000371\",\"9617326\":\"1000373\"}\n        }\n      },\n      curve:{\n        label:'',\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      },\n      idle:{\n        label:'Idle',\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      }\n    }\n  },\n  contract:{\n    methods:{\n      redeem:{\n        skipRebalance:true,\n        metaTransactionsEnabled:false\n      },\n      deposit:{\n        skipMint:true,\n        minAmountForMint:5000,\n        skipMintCheckboxEnabled:true,\n        metaTransactionsEnabled:false,\n        proxyContract:{\n          enabled:false,\n          abi:IdleProxyMinter,\n          name:'IdleProxyMinter',\n          function:'mintIdleTokensProxy',\n          address:'0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a',\n        }\n      },\n      migrate:{\n        skipRebalance:true,\n        minAmountForRebalance:10000,\n        minAmountForRebalanceMetaTx:10000\n      },\n      redeemGovTokens:{\n        enabled:true\n      },\n      rebalance:{\n        enabled:true,\n        abi:IdleRebalancerV3\n      }\n    }\n  },\n  network:{ // Network configurations\n    availableNetworks:{\n      1:'Mainnet',\n      3:'Ropsten',\n      4:'Rinkeby',\n      42:'Kovan'\n    },\n    isForked:false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork:1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear:2371428,\n    firstBlockNumber:8119247,\n    requiredConfirmations: 1,\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers:{\n      infura:{\n        1: 'https://mainnet.infura.io/v3/',\n        42: 'https://kovan.infura.io/v3/'\n      },\n      etherscan:{\n        enabled:true, // False for empty txs list (try new wallet)\n        endpoints:{\n          1: 'https://api.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        }\n      },\n      biconomy:{\n        enabled:false,\n        enableLogin:false,\n        supportedNetworks:[1,42],\n        disabledWallets:['authereum'],\n        endpoints:{\n          limits:'https://api.biconomy.io/api/v1/dapp/checkLimits'\n        },\n        params:{\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY,\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: '36572ec9-ae5c-4c4a-9530-f3ae7c7ac829'\n        }\n      },\n      terminal:{\n        enabled:false,\n        supportedNetworks:[1,42],\n        params:{\n          apiKey: env.REACT_APP_TERMINAL_KEY,\n          projectId: env.REACT_APP_TERMINAL_PROJECT_ID,\n          source: null,\n          web3Version: Web3Versions.one\n        }\n      },\n      simpleID:{\n        enabled:false,\n        supportedNetworks:[1],\n        getNetwork:(networkId,availableNetworks) => {\n          let networkName = null;\n          switch (networkId){\n            case 1:\n              networkName = 'mainnet';\n            break;\n            default:\n              networkName = availableNetworks[networkId] ? availableNetworks[networkId].toLowerCase() : 'mainnet';\n            break;\n          }\n          return networkName;\n        },\n        params:{\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: 'mainnet'\n        }\n      }\n    }\n  },\n  tools:{\n    batchMigration:{\n      enabled:true,\n      claimEnabled:true,\n      depositEnabled:false,\n      icon:'FileDownload',\n      route:'batch-migration',\n      label:'Batch Migration',\n      subComponent:BatchMigration,\n      desc:'Deposit your Idle Tokens V3 into a batch and wait until it is converted to the Idle Token V4.',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'DAI',\n            name:'idleDAIYieldV3',\n            token:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAI',\n              address:'0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDC',\n            name:'idleUSDCYieldV3',\n            token:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDC',\n              address:'0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            name:'idleUSDTYieldV3',\n            token:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            name:'idleSUSDYieldV3',\n            token:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            name:'idleTUSDYieldV3',\n            token:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            name:'idleWBTCYieldV3',\n            token:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            name:'idleDAISafeV3',\n            token:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            name:'idleUSDCSafeV3',\n            token:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            name:'idleUSDTSafeV3',\n            token:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n        }\n      }\n    },\n    tokenMigration:{\n      enabled:true,\n      icon:'SwapHoriz',\n      route:'convert',\n      label:'Token Migration',\n      desc:'Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle',\n      subComponent:TokenMigration,\n      props:{\n        migrationContract:{\n          name:'IdleConverterV4',\n          abi:IdleConverterPersonalSignV4,\n          address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n          oldAddresses:[],\n          functions:[\n            {\n              label:'Migrate',\n              name:'migrateFromToIdle'\n            },\n          ]\n        },\n        availableStrategies:['best','risk'],\n        availableTokens:{\n          idleDAIv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            baseToken:'DAI',\n            abi:IdleTokenV2,\n            token:'idleDAIOld',\n            icon:'images/tokens/idleDAI.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0x10eC0D497824e342bCB0EDcE00959142aAa766dD',\n          },\n          cDAI:{\n            decimals:8,\n            enabled:true,\n            token:\"cDAI\",\n            baseToken:'DAI',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\",\n          },\n          iDAI:{\n            decimals:18,\n            enabled:false,\n            token:\"iDAI\",\n            baseToken:'DAI',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x493c57c4763932315a328269e1adad09653b9081\",\n          },\n          aDAI:{\n            decimals:18,\n            enabled:true,\n            token:\"aDAI\",\n            protocol:\"aave\",\n            baseToken:'DAI',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\",\n          },\n          yDAIv3:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv3\",\n            abi:yDAIv3.abi,\n            baseToken:'DAI',\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xC2cB1040220768554cf699b0d863A3cd4324ce32\",\n          },\n          yDAIv2:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv2\",\n            baseToken:'DAI',\n            abi:yDAIv3.abi,\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\",\n          },\n          idleUSDCv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            abi:IdleTokenV2,\n            baseToken:'USDC',\n            token:'idleUSDCOld',\n            icon:'images/tokens/idleUSDC.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0xeB66ACc3d011056B00ea521F8203580C2E5d3991',\n          },\n          cUSDC:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDC\",\n            baseToken:'USDC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x39aa39c021dfbae8fac545936693ac917d5e7563\",\n          },\n          iUSDC:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDC\",\n            baseToken:'USDC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\",\n          },\n          aUSDC:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDC\",\n            protocol:\"aave\",\n            baseToken:'USDC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\",\n          },\n          yUSDCv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv3\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x26EA744E5B887E5205727f55dFBE8685e3b21951\",\n          },\n          yUSDCv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv2\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\",\n          },\n          cUSDT:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDT\",\n            baseToken:'USDT',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\",\n          },\n          iUSDT:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDT\",\n            baseToken:'USDT',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x8326645f3aa6de6420102fdb7da9e3a91855045b\",\n          },\n          aUSDT:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDT\",\n            protocol:\"aave\",\n            baseToken:'USDT',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\",\n          },\n          yUSDTv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv3\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\",\n          },\n          yUSDTv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv2\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\",\n          },\n          idleSUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'SUSD',\n            token:'idleSUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleSUSDYield.svg',\n            address:'0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5',\n          },\n          aSUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aSUSD\",\n            protocol:\"aave\",\n            baseToken:'SUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x625aE63000f46200499120B906716420bd059240\",\n          },\n          ySUSDv3:{\n            decimals:18,\n            enabled:true,\n            token:\"ySUSDv3\",\n            abi:ySUSDv3,\n            baseToken:'SUSD',\n            protocol:\"iearn\",\n            availableStrategies:['best'],\n            icon:'images/tokens/ySUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xf61718057901f84c4eec4339ef8f0d86d2b45600\",\n          },\n          idleTUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'TUSD',\n            token:'idleTUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleTUSDYield.svg',\n            address:'0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6',\n          },\n          aTUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aTUSD\",\n            protocol:\"aave\",\n            baseToken:'TUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x4DA9b813057D04BAef4e5800E36083717b4a0341\",\n          },\n          yTUSDv3:{\n            decimals:18,\n            enabled:true,\n            abi:yTUSDv3,\n            token:\"yTUSDv3\",\n            baseToken:'TUSD',\n            protocol:\"iearn\",\n            icon:'images/tokens/yTUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x73a052500105205d34daf004eab301916da8190f\",\n          },\n          cWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"cWBTC\",\n            baseToken:'WBTC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\",\n          },\n          iWBTC:{\n            decimals:8,\n            enabled:false,\n            token:\"iWBTC\",\n            baseToken:'WBTC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\",\n          },\n          aWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"aWBTC\",\n            protocol:\"aave\",\n            baseToken:'WBTC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\",\n          },\n        }\n      }\n    },\n    addFunds:{\n      enabled:true,\n      icon:'AddCircleOutline',\n      route:'add-funds',\n      label:'Add Funds',\n      desc:'Buy tokens with Bank account or Credit card',\n      subComponent:BuyModal,\n      directProps:{\n        showInline:true,\n        showAllTokens:true\n      }\n    },\n    insurance:{\n      enabled:false,\n      icon:'Security',\n      route:'nexus-mutual',\n      label:'Nexus Mutual',\n      desc:'Buy tokens with Bank account or Credit card',\n      subComponent:NexusMutual,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n        }\n      },\n      directProps:{\n        ens:'idlefinancev3.nexusmutual.eth',\n        address:'0x78751B12Da02728F467A44eAc40F5cbc16Bd7934'\n      }\n    },\n    tokenSwap:{\n      enabled:true,\n      icon:'Sync',\n      route:'token-swap',\n      label:'Token Swap',\n      desc:'Easily swap your tokens with Kyber Widget',\n      subComponent:TokenSwap,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n          \"SUSD\":{\"token\":\"SUSD\"},\n          \"TUSD\":{\"token\":\"TUSD\"},\n          \"USDC\":{\"token\":\"USDC\"},\n          \"USDS\":{\"token\":\"USDS\"},\n          \"USDT\":{\"token\":\"USDT\"},\n          \"WBTC\":{\"token\":\"WBTC\"},\n          \"WETH\":{\"token\":\"WETH\"},\n          \"BUSD\":{\"token\":\"BUSD\"},\n          \"EURS\":{\"token\":\"EURS\"},\n          \"2KEY\":{\"token\":\"2KEY\"},\n          \"ABT\":{\"token\":\"ABT\"},\n          \"ABYSS\":{\"token\":\"ABYSS\"},\n          \"AMPL\":{\"token\":\"AMPL\"},\n          \"ANT\":{\"token\":\"ANT\"},\n          \"BAM\":{\"token\":\"BAM\"},\n          \"BAND\":{\"token\":\"BAND\"},\n          \"BAT\":{\"token\":\"BAT\"},\n          \"BLZ\":{\"token\":\"BLZ\"},\n          \"BNT\":{\"token\":\"BNT\"},\n          \"BQX\":{\"token\":\"BQX\"},\n          \"BTU\":{\"token\":\"BTU\"},\n          \"CDT\":{\"token\":\"CDT\"},\n          \"CVC\":{\"token\":\"CVC\"},\n          \"DAT\":{\"token\":\"DAT\"},\n          \"DGX\":{\"token\":\"DGX\"},\n          \"EKG\":{\"token\":\"EKG\"},\n          \"ELF\":{\"token\":\"ELF\"},\n          \"ENJ\":{\"token\":\"ENJ\"},\n          \"EQUAD\":{\"token\":\"EQUAD\"},\n          \"FXC\":{\"token\":\"FXC\"},\n          \"GDC\":{\"token\":\"GDC\"},\n          \"GEN\":{\"token\":\"GEN\"},\n          \"GHT\":{\"token\":\"GHT\"},\n          \"GNO\":{\"token\":\"GNO\"},\n          \"IOST\":{\"token\":\"IOST\"},\n          \"KEY\":{\"token\":\"KEY\"},\n          \"KNC\":{\"token\":\"KNC\"},\n          \"LEND\":{\"token\":\"LEND\"},\n          \"LINK\":{\"token\":\"LINK\"},\n          \"LOOM\":{\"token\":\"LOOM\"},\n          \"LRC\":{\"token\":\"LRC\"},\n          \"MANA\":{\"token\":\"MANA\"},\n          \"MCO\":{\"token\":\"MCO\"},\n          \"MET\":{\"token\":\"MET\"},\n          \"MFG\":{\"token\":\"MFG\"},\n          \"MKR\":{\"token\":\"MKR\"},\n          \"MLN\":{\"token\":\"MLN\"},\n          \"MTL\":{\"token\":\"MTL\"},\n          \"MYB\":{\"token\":\"MYB\"},\n          \"NEXXO\":{\"token\":\"NEXXO\"},\n          \"NPXS\":{\"token\":\"NPXS\"},\n          \"OGN\":{\"token\":\"OGN\"},\n          \"OMG\":{\"token\":\"OMG\"},\n          \"OST\":{\"token\":\"OST\"},\n          \"PAX\":{\"token\":\"PAX\"},\n          \"PBTC\":{\"token\":\"PBTC\"},\n          \"PLR\":{\"token\":\"PLR\"},\n          \"PNK\":{\"token\":\"PNK\"},\n          \"POLY\":{\"token\":\"POLY\"},\n          \"POWR\":{\"token\":\"POWR\"},\n          \"PT\":{\"token\":\"PT\"},\n          \"QKC\":{\"token\":\"QKC\"},\n          \"QNT\":{\"token\":\"QNT\"},\n          \"RAE\":{\"token\":\"RAE\"},\n          \"REN\":{\"token\":\"REN\"},\n          \"REP\":{\"token\":\"REP\"},\n          \"REQ\":{\"token\":\"REQ\"},\n          \"RLC\":{\"token\":\"RLC\"},\n          \"RSR\":{\"token\":\"RSR\"},\n          \"RSV\":{\"token\":\"RSV\"},\n          \"SAN\":{\"token\":\"SAN\"},\n          \"SNT\":{\"token\":\"SNT\"},\n          \"SNX\":{\"token\":\"SNX\"},\n          \"SPIKE\":{\"token\":\"SPIKE\"},\n          \"SPN\":{\"token\":\"SPN\"},\n          \"TKN\":{\"token\":\"TKN\"},\n          \"TKX\":{\"token\":\"TKX\"},\n          \"TRYB\":{\"token\":\"TRYB\"},\n          \"UBT\":{\"token\":\"UBT\"},\n          \"UPP\":{\"token\":\"UPP\"},\n          \"ZRX\":{\"token\":\"ZRX\"}\n        }\n      },\n      directProps:{\n      }\n    }\n  },\n  payments: { // Payment methods & providers\n    methods:{\n      bank:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/bank.png',\n          caption:'Bank Account'\n        }\n      },\n      card:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/debit-card.png',\n          caption:'Credit Card'\n        }\n      },\n      wallet:{\n        defaultProvider:'zeroExInstant',\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/ethereum-wallet.svg',\n          caption:'Ethereum Wallet',\n          imageProps:{\n            padding:['0','5px']\n          }\n        }\n      },\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: 'images/payments/wyre.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.75% fee ~',\n        supportedMethods:['card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        remoteResources:{},\n        env:'prod',\n        envParams:{\n          test:{\n            accountId:'AC_Q2Y4AARC3TP'\n          },\n          prod:{\n            accountId:'AC_PQQBX33XVEQ'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n              break;\n              case 'card':\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = 'https://pay.sendwyre.com/purchase';\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken ),\n            referrerAccountId,\n            redirectUrl:globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const wyreWidget = document.getElementById('wyre-widget');\n          if (!wyreWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById('wyreWidget_style')){\n              const wyreStyle = document.createElement('style');\n              wyreStyle.id = 'wyreWidget_style';\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        },\n      },\n      ramp: {\n        enabled:true,\n        imageSrc: 'images/payments/ramp.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods:['bank'],\n        badge: {\n          text:'NO ID REQUIRED',\n          color:'#fff',\n          bgColor:'#0cade4'\n        },\n        supportedCountries:['GBR','EUR'],\n        supportedTokens:['ETH','DAI','USDC'],\n        getInitParams: (props,globalConfigs,buyParams) => {\n        \treturn {\n\t          hostAppName: 'Idle',\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? 'mobile' : 'desktop',\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset ? props.tokenConfig.ramp.swapAsset : props.selectedToken )\n        \t};\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on('*', async (event) => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type){\n                case 'PURCHASE_SUCCESSFUL':\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil.BNify(tokenAmount.toString()).div(functionsUtil.BNify(Math.pow(10,parseInt(tokenDecimals)).toString())).toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: 'light',\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\",\n                  });\n\n                break;\n                default:\n                break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled:true,\n        imageSrc: 'images/payments/transak.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods:['bank','card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR','IND'],\n        supportedTokens:['ETH','DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n        remoteResources:{'https://global.transak.com/v1/widget.js':{}},\n        env:'prod',\n        badge:{\n          text:'INSTANT',\n          bgColor:'#0069ee'\n        },\n        envParams:{\n          test:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_TEST,\n            url:'https://global.transak.com'\n          },\n          prod:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_PROD,\n            url:'https://global.transak.com'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === 'bank' ? '1.5%' : '4.5%';\n\n          if (props.selectedCountry && props.selectedCountry.value){\n            switch (props.selectedCountry.value.toUpperCase()){\n              case 'GBR':\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n              break;\n              case 'IND':\n                fee = '1.0%';\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n              break;\n              case 'EUR':\n                if (selectedMethod === 'bank'){\n                  info.badge = {\n                    text:'SEPA',\n                    color:'#f7cb05 ',\n                    bgColor:'#10288a'\n                  };\n                } else {\n                  info.badge = {\n                    text:'INSTANT',\n                    bgColor:'#0069ee'\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams = globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value){\n            switch (buyParams.selectedCountry.value.toUpperCase()){\n              case 'IND':\n                fiatCurrency = 'INR';\n              break;\n              case 'GBR':\n                fiatCurrency = 'GBP';\n              break;\n              case 'EUR':\n                fiatCurrency = 'EUR';\n              break;\n              case 'USA':\n                fiatCurrency = 'USD';\n              break;\n              default:\n                fiatCurrency = 'GBP';\n              break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.transak && props.tokenConfig.transak.currencyCode ? props.tokenConfig.transak.currencyCode : props.selectedToken);\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width:'100%',\n            height:'100%'\n            // email,\n          };\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          if (window.transakGlobal){\n\n            const transakWidget = document.getElementById('transak-widget');\n            if (!transakWidget){\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById('transakWidget_style')){\n                const transakStyle = document.createElement('style');\n                transakStyle.id = 'transakWidget_style';\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, 'transak-widget-container');\n          }\n        }\n      },\n      moonpay: {\n        enabled:true,\n        imageSrc: 'images/payments/moonpay.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 4.5% fee ~',\n        supportedMethods:['card','bank'],\n        supportedCountries:['GBR','EUR','AUS','BRA','CHN','MEX','CAN','HKG','RUS','ZAF','KOR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        env:'prod',\n        envParams:{\n          test:{\n            url:'https://buy-staging.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod:{\n            url:'https://buy.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                if (props.selectedCountry && props.selectedCountry.value){\n                  switch (props.selectedCountry.value.toUpperCase()){\n                    case 'EUR':\n                      info.badge = {\n                        text:'SEPA',\n                        color:'#f7cb05 ',\n                        bgColor:'#10288a'\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                    break;\n                    case 'GBR':\n                      info.badge = {\n                        text:'GBP',\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                    break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                    break;\n                  }\n                }\n              break;\n              case 'card':\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams = globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.moonpay && props.tokenConfig.moonpay.currencyCode ? props.tokenConfig.moonpay.currencyCode : props.selectedToken.toLowerCase()),\n            walletAddress:props.account,\n            baseCurrencyCode:'USD',\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            'bank':{\n              'GBR':'gbp_bank_transfer',\n              'EUR':'sepa_bank_transfer'\n            },\n            'card':'credit_debit_card'\n          };\n\n          const selectedCountry = buyParams.selectedCountry && buyParams.selectedCountry.value ? buyParams.selectedCountry.value.toUpperCase() : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod){\n            switch (buyParams.selectedMethod){\n              case 'bank':\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod]['EUR'];\n                switch (selectedCountry){\n                  case 'GBR':\n                  case 'EUR':\n                    params.enabledPaymentMethods = methods[buyParams.selectedMethod][selectedCountry];\n                  break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(methods[buyParams.selectedMethod]).join(',');\n                  break;\n                }\n              break;\n              case 'card':\n              default:\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod];\n              break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry){\n            case 'GBR':\n              params.baseCurrencyCode = 'GBP';\n            break;\n            case 'EUR':\n              params.baseCurrencyCode = 'EUR';\n            break;\n            default:\n              params.baseCurrencyCode = 'USD';\n            break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (!document.cookie.match(/^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/)) {\n              document.cookie = \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const moonpayWidget = document.getElementById('moonpay-widget');\n          if (!moonpayWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById('moonpayWidget_style')){\n              const moonpayStyle = document.createElement('style');\n              moonpayStyle.id = 'moonpayWidget_style';\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: 'images/payments/zeroexinstant.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        remoteResources:{'https://instant.0x.org/v3/instant.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onSuccess,onClose) => {\n\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context ? window.RimbleWeb3_context.connectorName : null;\n\n          if (!tokenParams.zeroExInstant){\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider: connectorName && connectorName!=='Injected' && window.RimbleWeb3_context.connector[connectorName.toLowerCase()] ? window.RimbleWeb3_context.connector[window.RimbleWeb3_context.connectorName.toLowerCase()].provider : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount) => {\n          if (window.zeroExInstant && initParams){\n            if (amount){\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, 'body');\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: 'images/payments/kyber.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Swap with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI','USDT','TUSD','SUSD','WBTC'],\n        web3Subscription:{ // Data for web3 subscription\n          enabled: true,\n          contractAddress: '0x818e6fecd516ecc3849daf6845e3ec868087b755',\n          decodeLogsData: [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_startAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_tokenAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_startAmount\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_tokenAmount\",\n              \"type\": \"uint256\"\n            },\n          ],\n        },\n        remoteResources:{\n          'https://widget.kyber.network/v0.7.5/widget.css':{},\n          'https://widget.kyber.network/v0.7.5/widget.js':{\n            parentElement:document.body,\n            precall: (props,globalConfigs,providerInfo) => {\n\n              // Remove previous elements\n              const buttons = document.querySelectorAll('.kyber-widget-button');\n              for (let i=0;i<buttons.length;i++){\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll('.script_kyberSwap');\n              for (let i=0;i<scripts.length;i++){\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId ? props.buttonId : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)){\n                const a = document.createElement('a');\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props,globalConfigs);\n                a.target = '_blank';\n                a.rel = 'nofollow noopener noreferrer';\n                a.className = 'kyber-widget-button theme-ocean theme-supported';\n                a.title = 'Swap with Kyber';\n                a.style = 'display:none;';\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props,globalConfigs,buyParams=null) => {\n          const baseToken = props.baseToken ? props.baseToken : 'ETH';\n          const params = {\n            lang:'en',\n            type:'swap',\n            mode:'iframe',\n            theme:'theme-ocean',\n            paramForwarding:true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens:`${baseToken}_${props.selectedToken}`,\n            title:`Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair:`${baseToken}_${props.selectedToken}`,\n            commissionId:'0x4215606a720477178AdFCd5A59775C63138711e8',\n            network: globalConfigs.network.requiredNetwork === 1 ? 'mainnet' : 'test',\n          };\n\n          const url  = 'https://widget.kyber.network/v0.7.5/';\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props) => {\n          const buttonId = props.buttonId ? props.buttonId :`kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a){\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n                      \n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: 'images/payments/airswap.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://cdn.airswap.io/airswap-instant-widget.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            env: 'production',\n            mode: 'buy',\n            token: props.tokenConfig.address,\n            baseToken: 'ETH',\n            onComplete: onComplete ? onComplete : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.AirSwapInstant){\n            if (amount){\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams,'body');\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: 'images/payments/totle.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://widget.totle.com/latest/dist.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null,\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.TotleWidget){\n            const nodeId = 'totle-widget';\n            if (!document.getElementById(nodeId)){\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(initParams,document.getElementById(nodeId));\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;","import React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport globalConfigs from '../configs/globalConfigs';\n\nconst ethereumjsABI = require('ethereumjs-abi');\nconst env = process.env;\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber( typeof s === 'object' ? s : String(s) )\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'),...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'),...props); }\n  getContractByName = (contractName) => {\n    const contract = this.props.contracts.find(c => c.name === contractName);\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g,\"\\n\")\n            .replace(/<p>/g,\"\")\n            .replace(/<br>/g,\"\")\n            .replace(/&nbsp;/g,\" \")\n            .replace(/<\\/p>/g,\"\");\n  }\n  capitalize = (str) => {\n    return str.substr(0,1).toUpperCase()+str.substr(1);\n  }\n  strToMoment = (date,format=null) => {\n    return moment(date,format);\n  }\n  replaceArrayProps = (arr1,arr2) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  stripHtml = (html) => {\n     var tmp = document.createElement(\"DIV\");\n     tmp.innerHTML = html;\n     return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d/2;\n      if (t < 1) return c/2*t*t + b;\n      t--;\n      return -c/2 * (t*(t-2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n        currentTime += increment;\n        var val = Math.easeInOutQuad(currentTime, start, change, duration);\n        window.scrollTo(0,val);\n        if(currentTime < duration) {\n          window.setTimeout(animateScroll, increment);\n        }\n    };\n\n    animateScroll();\n  }\n  getTxAction = (tx,tokenConfig) => {\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();    \n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1 ) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx){\n      action = 'Deposit';\n    } else if (isRedeemTx){\n      action = 'Redeem';\n    } else if (isMigrationTx){\n      action = 'Migrate';\n    } else if (isSendTransferTx){\n      action = 'Send';\n    } else if (isReceiveTransferTx){\n      action = 'Receive';\n    } else if (isSwapTx){\n      action = 'Swap';\n    } else if (isSwapTx){\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  getAccountPortfolio = async (availableTokens=null,account=null) => {\n    const portfolio = {\n      tokensBalance:{},\n      totalBalance:this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens){\n      return portfolio;\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const idleTokenBalance = await this.getTokenBalance(tokenConfig.idle.token,account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()){\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach( token => {\n      if (portfolio.tokensBalance[token]){\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    return portfolio;\n  }\n  getCurveAvgSlippage = async (enabledTokens=[],account=null,fixDecimals=true) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]){\n              processedTxs[tx.hash] = {\n                price:null,\n                received:null,\n                slippage:null,\n                deposited:this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null){\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]){\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)){\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach( tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens=[],account=null) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n        \n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)){\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    await this.asyncForEach(enabledTokens, async (selectedToken) => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance= this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice){\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action){\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n            break;\n            case 'Withdraw':\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n              idleTokens = idleTokens.times(this.BNify(-1));\n            break;\n            default:\n            break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)){\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getDepositTimestamp = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let depositTimestamp = null;\n      deposits[selectedToken] = depositTimestamp;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!depositTimestamp){\n                depositTimestamp = tx.timeStamp;\n              }\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n            depositTimestamp = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = depositTimestamp;\n    });\n\n    return deposits;\n  }\n  getAmountDeposited = async (tokenConfig,account) => {\n    let [tokenBalance,userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,account),\n      this.genericContractCall(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice){\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice,tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return amountDeposited;\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    return amountLents;\n  }\n  getEtherscanBaseTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network','firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber,firstBlockNumber);\n\n    const requiredNetwork = globalConfigs.network.requiredNetwork;\n    const etherscanInfo = globalConfigs.network.providers.etherscan;\n\n    let results = [];\n    let etherscanBaseTxs = null;\n    let etherscanBaseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      etherscanBaseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      etherscanBaseTxs = this.getCachedRequest(etherscanBaseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (etherscanBaseTxs && etherscanBaseTxs.data.result && Object.values(etherscanBaseTxs.data.result).length){\n\n        const lastCachedTx = Object.values(etherscanBaseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber)+1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length){\n          \n          latestTxs = await this.filterEtherscanTxs(latestTxs.data.result,enabledTokens);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.blockNumber)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with etherscanBaseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(etherscanBaseTxs.data.result).includes(tx.hash.toLowerCase());\n                if (!txFound){\n                  etherscanBaseTxs.data.result[tx.hash.toLowerCase()] = tx;\n                }\n              });\n\n              // Save new etherscan txs\n              this.saveCachedRequest(etherscanBaseEndpoint,false,etherscanBaseTxs);\n            }\n          }\n        }\n      } else {\n        etherscanBaseTxs = null;\n      }\n\n      let txs = etherscanBaseTxs;\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(etherscanBaseEndpoint);\n      }\n\n      if (txs && txs.data && txs.data.result){\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    };\n  }\n  getCurveTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const results = await this.getEtherscanTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results,enabledTokens);\n  }\n  getEtherscanTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    } = await this.getEtherscanBaseTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n\n    // Initialize prevTxs\n    let etherscanTxs = {};\n\n    if (etherscanBaseTxs){\n      // Filter txs for token\n      etherscanTxs = await this.processStoredTxs(results,enabledTokens);\n    } else {\n      const allAvailableTokens = Object.keys(this.props.availableTokens);\n      // Save base endpoint with all available tokens\n      etherscanTxs = await this.filterEtherscanTxs(results,allAvailableTokens);\n\n      // Store filtered txs\n      if (etherscanTxs && Object.keys(etherscanTxs).length){\n\n        const etherscanTxsToStore = {};\n\n        Object.keys(etherscanTxs).forEach(txHash => {\n          const txInfo = etherscanTxs[txHash];\n          if (txInfo.blockNumber){\n            etherscanTxsToStore[txHash] = txInfo;\n          }\n        });\n\n        const cachedRequestData = {\n          data:{\n            result:etherscanTxsToStore\n          }\n        };\n\n        this.saveCachedRequest(etherscanBaseEndpoint,false,cachedRequestData);\n      }\n    }\n\n    // this.customLog('etherscanTxs',etherscanTxs);\n\n    return Object\n            .values(etherscanTxs)\n            .filter(tx => (enabledTokens.includes(tx.token.toUpperCase())) )\n            .sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  filterCurveTxs = async (results,enabledTokens=[]) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter( tx => (enabledTokens.includes(tx.token) && ['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut'].includes(tx.action)) );\n\n    if (curveTxs.length){\n      curveTxs.sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  filterEtherscanTxs = async (results,enabledTokens=[],processTxs=true) => {\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools','tokenMigration','props','migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',tokenConfig.idle.token]);\n\n      results.forEach( tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length>1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length>0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find( iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 )) );\n        const isRedeemInternalTx = isRightToken && internalTxs.find( iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase() );\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase()) ) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 ));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length>1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase()) ).length>0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        const isSwapOutTx = !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find( tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase()) ) );\n        const isCurveTx = curveEnabled && curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = curveEnabled && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = curveEnabled && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x2aa8f408dd1d4653ef3c5c38a4c9241e615d94b7208bbbe1d2e19b3053fae8de'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut){\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx){\n            action = 'Deposit';\n          } else if (isRedeemTx){\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx){\n            action = 'Migrate';\n          } else if (isSendTransferTx){\n            action = 'Send';\n          } else if (isReceiveTransferTx){\n            action = 'Receive';\n          } else if (isSwapTx){\n            action = 'Swap';\n          } else if (isSwapOutTx){\n            action = 'SwapOut';\n          } else if (isWithdrawTx){\n            action = 'Withdraw';\n          } else if (isCurveDepositTx){\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx){\n            action = 'CurveOut';\n          } else if (isCurveZapIn){\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut){\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn){\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut){\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn){\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut){\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx){\n            hashKey += '_'+tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value,curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)){\n              hashKey+='_'+action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()){\n            tokenDecimals = 18;\n          } else if (isCurveTx){\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]){\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action){\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx){\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value,tokenDecimals);\n                }\n              break;\n              default:\n                if (!curveTx){\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value,tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n              break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut){\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTokens = this.fixTokenDecimals(tx.value,curvePoolContract.decimals);\n                curveTransfersTxs.push({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n              }\n            } else {\n              etherscanTxs[hashKey] = ({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action){\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length>0){\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value,iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                break;\n                default:\n                break;\n              }\n            }   \n          }\n        }\n      });\n    });\n    \n    curveTransfersTxs.forEach( tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n  \n    if (processTxs){\n      etherscanTxs = await this.processEtherscanTransactions(etherscanTxs,enabledTokens);\n    }\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey,transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]){\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]){\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]){\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions',JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account=null,tokenKey=null,selectedToken=null) => {\n    const storedTxs = this.getStoredItem('transactions',true,{});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account){\n      if (storedTxs[account]){\n        output = storedTxs[account];\n        if (tokenKey){\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken){\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()){\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processEtherscanTransactions = async (etherscanTxs,enabledTokens=[]) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object'){\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n    Object.keys(curveAvailableTokens).forEach( token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats','tokens',curveTokenConfig.baseToken]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object'){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = {...storedTxs[this.props.account][tokenKey]};\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        await this.asyncForEach(filteredTxs,async (tx,index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n          \n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()){\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig,tx.blockNumber,tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash){\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action){\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n            break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount){\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n            break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n            break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n            break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n            break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount){\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length-1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x','').toLowerCase()}` ) );\n\n                  this.customLog('filteredLogs',filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length){\n                    filteredLogs.forEach( log => {\n                      let tokenAmount = parseInt(log.data,16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount ('+tx.hash+')',baseTokensConfig.token,tokenAmount.toFixed(5),storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n            break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens){\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n                  const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (log.address.toLowerCase()===idleTokenAddress ) );\n                  if (filteredLogs && filteredLogs.length){\n                    idleTokens = parseInt(filteredLogs[0].data,16);\n                    idleTokens = this.fixTokenDecimals(idleTokens,idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n            break;\n            default:\n            break;\n          }\n            \n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      etherscanTxs = await this.processStoredTxs(etherscanTxs,[selectedToken],this.props.transactions);\n    });\n\n    // Update Stored txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs,enabledTokens=[],txsToProcess=null) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions',true,{})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]){\n      storedTxs[this.props.account] = {};\n    }\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account,tokenKey,selectedToken);\n      \n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:new Date().getTime(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess),async (txKey,i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase()){\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken:'Deposit',\n          redeemIdleToken:'Redeem',\n          migrateFromToIdle:'Migrate',\n          mintIdleTokensProxy:'Deposit',\n          migrateFromAaveToIdle:'Migrate',\n          migrateFromIearnToIdle:'Migrate',\n          executeMetaTransaction:'Migrate',\n          migrateFromFulcrumToIdle:'Migrate',\n          migrateFromCompoundToIdle:'Migrate',\n        };\n        const pendingStatus = ['pending','started'];\n\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice/* && txHash.toLowerCase() !== '0x000000000000000000000000000'.toLowerCase()*/){\n          return false;\n        }\n        // const txFound = etherscanTxs.find(etherscanTx => (etherscanTx.hash === tx.transactionHash && etherscanTx.status === tx.status) );\n        // if (txFound){\n        //   return false;\n        // }\n\n        if (txPending && methodIsAllowed && tx.params.length){\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status:'Pending',\n            token:selectedToken,\n            action:allowedMethods[tx.method],\n            timeStamp:parseInt(tx.created/1000),\n            hash:txHash ? tx.transactionHash : null,\n            tokenSymbol:isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0],decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed){\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx){\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise( async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash,(err,txReceipt)=>{\n              if (err){\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())){\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig,realTx.blockNumber,realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created/1000);\n\n        let txValue = null;\n        switch (tx.method){\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()){\n              // Remove wrong contract tx\n              if (isStoredTx){\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0],tokenConfig.decimals).toString() : 0;\n            if (!txValue){\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n          break;\n          case 'redeemIdleToken':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice){\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0],18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n          break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt){\n              executeMetaTransactionReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract','deposit','proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo){\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x','').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length){\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data,16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data,16) : null;\n\n            if (!metaTxValue){\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue,tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n          break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract){\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt){\n              migrationTxReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x','');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x','');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length>=3 && tx.topics[tx.topics.length-2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length){\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ],migrationInternalTransfer.data,migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token){\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue,tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n          break;\n          default:\n          break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx){\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint,alias=false,data) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = {};\n    // Check if already exists\n    if (localStorage && localStorage.getItem('cachedRequests')){\n      cachedRequests = JSON.parse(localStorage.getItem('cachedRequests'));\n    }\n\n    if (localStorage) {\n      const timestamp = parseInt(new Date().getTime()/1000);\n      cachedRequests[key] = {\n        data,\n        timestamp\n      };\n      return this.setLocalStorage('cachedRequests',JSON.stringify(cachedRequests));\n    }\n    return false;\n  }\n  getCachedRequest = (endpoint,alias=false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = {};\n    // Check if already exists\n    if (localStorage && localStorage.getItem('cachedRequests')){\n      cachedRequests = JSON.parse(localStorage.getItem('cachedRequests'));\n      // Check if it's not expired\n      if (cachedRequests && cachedRequests[key]){\n        return cachedRequests[key].data;\n      }\n    }\n    return null;\n  }\n  makeRequest = async(endpoint,error_callback=false,config=null) => {\n    const data = await axios\n                  .get(endpoint,config)\n                  .catch(err => {\n                    if (typeof error_callback === 'function'){\n                      error_callback(err);\n                    }\n                  });\n    return data;\n  }\n  makeCachedRequest = async (endpoint,TTL=0,return_data=false,alias=false) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(new Date().getTime()/1000);\n    let cachedRequests = {};\n    // Check if already exists\n    if (localStorage && localStorage.getItem('cachedRequests')){\n      cachedRequests = JSON.parse(localStorage.getItem('cachedRequests'));\n      // Check if it's not expired\n      if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp-cachedRequests[key].timestamp<TTL){\n        return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n      }\n    }\n\n    const data = await axios\n                        .get(endpoint)\n                        .catch(err => {\n                          console.error('Error getting request');\n                        });\n    if (localStorage) {\n      cachedRequests[key] = {\n        data,\n        timestamp\n      };\n      this.setLocalStorage('cachedRequests',JSON.stringify(cachedRequests));\n    }\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)){\n      const errorCode = parseInt(error.code);\n      switch (errorCode){\n        case 4001:\n          output = 'denied';\n        break;\n        default:\n          output = `error_${errorCode}`;\n        break;\n      }\n    } else if (error.message){\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path,array) => {\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path,array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path,configs=false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return configs[prop] ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path,configs[prop]);\n      }\n    }\n    return null;\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  sendGoogleAnalyticsEvent = async (eventData,callback=null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && ( debugEnabled || originOk)){\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet){\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1){\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n        // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise( async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function'){\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function'){\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\",name,address,error);\n    }\n    return null;\n  }\n  getWalletProvider = () => {\n    return this.getStoredItem('walletProvider',false,null);\n  }\n  simpleIDPassUserInfo = (userInfo,simpleID) => {\n    if (!userInfo.address && this.props.account){\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider){\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email){\n      delete userInfo.email;\n    }\n    if (!userInfo.address){\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID){\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (tx_address) => {\n    return tx_address ? 'https://etherscan.io/tx/'+tx_address : null;\n  }\n  getEtherscanAddressUrl = (address) => {\n    return address ? 'https://etherscan.io/address/'+address : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getTokenApiData = async (address,isRisk=null,startTimestamp=null,endTimestamp=null,forceStartTimestamp=false,frequency=null,order=null,limit=null) => {\n    if (globalConfigs.network.requiredNetwork!==1 || !globalConfigs.stats.enabled){\n      return [];\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData !== null){\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter( c => ( (c.startTimestamp===null || (startTimestamp && c.startTimestamp<=startTimestamp)) && (c.endTimestamp===null || (endTimestamp && c.endTimestamp>=endTimestamp)) ) )\n\n      if (filteredCachedData && filteredCachedData.length>0){\n        const filteredData = filteredCachedData.pop().data;\n        if (filteredData){\n          return filteredData.filter( d => ((!startTimestamp || d.timestamp>=startTimestamp) && (!endTimestamp || d.timestamp<=endTimestamp)) );\n        }\n        return null;\n      }\n    // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    let endpoint = `${apiInfo.endpoint}${address}`;\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null){\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)){\n        if (forceStartTimestamp){\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp-(60*60*24*2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)){\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null){\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)){\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null){\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)){\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length){\n        endpoint += '?'+params.join('&');\n      }\n    }\n\n    let output = await this.makeRequest(endpoint);\n    if (!output){\n      return [];\n    }\n\n    let data = output.data;\n    if (isRisk !== null){\n      data = data.filter( d => ( d.isRisk === isRisk ) );\n    }\n\n    cachedData.push({\n      data,\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n    });\n\n    this.setCachedData(cachedDataKey,cachedData);\n\n    return data;\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName ? contractName : this.props.selectedToken;\n    return await this.genericContractCall(contractName,'decimals');\n  }\n  getAvgApr = (aprs,allocations,totalAllocation) => {\n    if (aprs && allocations && totalAllocation){\n      let avgApr = Object.keys(aprs).reduce((aprWeighted,protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      },0);\n\n      if (avgApr){\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency,quantity=1) => {\n    const frequency_seconds = {\n      hour:3600,\n      day:86400,\n      week:604800\n    };\n    return frequency_seconds[frequency]*quantity;\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance,tokenDecimals,round=true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance,tokenDecimals,exchangeRate) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()){\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName=null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCall(contractName, 'paused', [], {}).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key,parse_json=true,return_default=null) => {\n    let output = return_default;\n    if (window.localStorage){\n      const item = localStorage.getItem(key);\n      if (item){\n        output = item;\n        if (parse_json){\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output){\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys=[]) => {\n    if (window.localStorage){\n\n      if (!excludeKeys || !excludeKeys.length){\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i=0;i<window.localStorage.length;i++){\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)){\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage){\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key,value,stringify=false) => {\n    if (window.localStorage){\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key,value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n\n    if (!globalConfigs.contract.methods.rebalance.enabled || !tokenConfig){\n      return false;\n    }\n\n    const rebalancer = await this.genericContractCall(tokenConfig.idle.token, 'rebalancer');\n\n    if (!rebalancer){\n      return false;\n    }\n\n    const idleRebalancerInstance = await this.createContract('idleRebalancerInstance',rebalancer,globalConfigs.contract.methods.rebalance.abi);\n\n\n    if (!idleRebalancerInstance || !idleRebalancerInstance.contract){\n      return false;\n    }\n\n    // Take next protocols allocations\n    const allocationsPromises = [];\n    const availableTokensPromises = [];\n\n    for (let protocolIndex=0;protocolIndex<tokenConfig.protocols.length;protocolIndex++){\n      const allocationPromise = new Promise( async (resolve, reject) => {\n        try{\n          const allocation = await idleRebalancerInstance.contract.methods.lastAmounts(protocolIndex).call();\n          resolve({\n            allocation,\n            protocolIndex\n          });\n        } catch (error){\n          resolve(null);\n        }\n      });\n      allocationsPromises.push(allocationPromise);\n\n      const availableTokenPromise = new Promise( async (resolve, reject) => {\n        try {\n          const protocolAddr = await this.genericContractCall(tokenConfig.idle.token, 'allAvailableTokens', [protocolIndex]);\n          resolve({\n            protocolAddr,\n            protocolIndex\n          });\n        } catch (error){\n          resolve(null);\n        }\n      });\n      availableTokensPromises.push(availableTokenPromise);\n    }\n\n    let nextAllocations = null;\n    let allAvailableTokens = null;\n\n    try{\n      nextAllocations = await Promise.all(allocationsPromises);\n      allAvailableTokens = await Promise.all(availableTokensPromises);\n    } catch (error){\n      \n    }\n\n    nextAllocations = nextAllocations && nextAllocations.length ? nextAllocations.filter(v => (v !== null)) : null;\n    allAvailableTokens = allAvailableTokens && allAvailableTokens.length ? allAvailableTokens.filter(v => (v !== null)) : null;\n\n    if ((!allAvailableTokens || !allAvailableTokens.length) || (!nextAllocations || !nextAllocations.length)){\n      return false;\n    }\n\n    // Merge nextAllocations and allAvailableTokens\n    let newTotalAllocation = this.BNify(0);\n    const newProtocolsAllocations = allAvailableTokens.reduce((accumulator,availableTokenInfo) => {\n      if (availableTokenInfo.protocolAddr){\n        const nextAllocation = nextAllocations.find(v => { return v.protocolIndex === availableTokenInfo.protocolIndex; });\n        if (nextAllocation){\n          const allocation = this.BNify(nextAllocation.allocation);\n          accumulator[availableTokenInfo.protocolAddr.toLowerCase()] = allocation;\n          newTotalAllocation = newTotalAllocation.plus(allocation);\n        }\n      }\n      return accumulator;\n    },{});\n\n    // Check if newAllocations differs from currentAllocations\n    let shouldRebalance = false;\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig);\n    const protocolsAllocationsPerc = tokenAllocation ? tokenAllocation.protocolsAllocationsPerc : null;\n\n    if (typeof protocolsAllocationsPerc === 'object'){\n      Object.keys(protocolsAllocationsPerc).forEach((protocolAddr) => {\n\n        // Get current protocol allocation percentage\n        const protocolAllocation = protocolsAllocationsPerc[protocolAddr];\n        const protocolAllocationPerc = parseFloat(protocolAllocation).toFixed(3);\n        \n        // Calculate new protocol allocation percentage\n        const newProtocolAllocation = newProtocolsAllocations[protocolAddr.toLowerCase()] ? newProtocolsAllocations[protocolAddr.toLowerCase()] : this.BNify(0);\n        const newProtocolAllocationPerc = newProtocolAllocation ? parseFloat(newProtocolAllocation.div(newTotalAllocation)).toFixed(3) : this.BNify(0);\n\n        // this.customLog(protocolAddr,protocolAllocation.toString(),newProtocolAllocation.toString(),newTotalAllocation.toString(),protocolAllocationPerc,newProtocolAllocationPerc);\n\n        if (protocolAllocationPerc !== newProtocolAllocationPerc){\n          shouldRebalance = true;\n        }\n      });\n    }\n\n    return shouldRebalance;\n  }\n  checkMigration = async (tokenConfig,account) => {\n\n    if (!tokenConfig || !account){\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled){\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract){\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName,account);\n\n        if (oldContractBalance){\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function(hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function(confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\",receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null,error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\",\"address\",\"uint256\",\"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network','providers','biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`,null,{\n      headers:{\n        'x-api-key':biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data){\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName,functionSignature,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    try{\n\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      // this.customLog('executeMetaTransaction', [userAddress, functionSignature, messageToSign, `${messageToSign.length}`, r, s, v]);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  sendBiconomyTx = async (contractName,contractAddress,functionSignature,callback,callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null,error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n            \n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName,contractAddr,walletAddr) => {\n    const value = this.props.web3.utils.toWei('0','ether');\n    const allowance = await this.getAllowance(contractName,contractAddr,walletAddr);\n    return allowance && this.BNify(allowance).gt(this.BNify(value.toString()));\n  }\n  getAllowance = async (contractName,contractAddr,walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr){\n      return false;\n    }\n    this.customLog('getAllowance',contractName,contractAddr,walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapper = (contractName,methodName,params,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  enableERC20 = (contractName,address,callback,callback_receipt) => {\n    // const contract = this.getContractByName(contractName);\n    // this.customLog('enableERC20',contractName,contract,address);\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  loadAssetField = async (field,token,tokenConfig,account,addGovTokens=true,addCurveApy=false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies',this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined'){\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken){\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig){\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)){\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field){\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([],account),\n          this.getCurveTokenBalance(account,true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance){\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage){\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n      break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1,redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)){\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n      break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n      break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n      break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n      break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy',token,tokenConfig,account),\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve){\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n      break;\n      case 'earningsPerc':\n        let [amountLent1,redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)){\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n      break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp',token,tokenConfig,account);\n        if (depositTimestamp){\n          const currTimestamp = parseInt(new Date().getTime()/1000);\n          output = (currTimestamp-depositTimestamp)/86400;\n        }\n      break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n          if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent){\n            output = tokenAllocation.totalAllocationWithUnlent;\n          }\n        }\n      break;\n      case 'userDistributionSpeed':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account,govTokenAvailableTokens);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n          if (output){\n            output = this.fixDistributionSpeed(output,tokenConfig.distributionFrequency);\n          }\n        }\n      break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance','props','tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens',tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output){\n\n          output = this.fixTokenDecimals(output,govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency){\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n            break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n            break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n            break;\n            case 'year':\n              output = output.times(blocksPerYear);\n            break;\n            default:\n            break;\n          }\n        }\n      break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token){\n          case 'COMP':\n            const cTokenInfo = selectedTokenConfig.protocols.find( p => (p.name === 'compound') );\n            if (cTokenInfo){\n              output = await this.getCompSpeed(cTokenInfo.address);\n            }\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n        }\n      break;\n      case 'apr':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n          break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n            if (tokenAprs && tokenAprs.avgApr !== null){\n              output = tokenAprs.avgApr;\n            }\n          break;\n        }\n      break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n\n        // this.customLog('apr',token,tokenApys.avgApr ? tokenApys.avgApr.toString() : null,tokenApys.avgApy ? tokenApys.avgApy.toString() : null);\n\n        if (tokenApys && tokenApys.avgApy !== null){\n          output = tokenApys.avgApy;\n\n          if (addCurveApy){\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY){\n              output = output.plus(curveAPY);\n            }\n          }\n        }\n      break;\n      case 'avgAPY':\n        const [daysFirstDeposit,earningsPerc] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account),\n          this.loadAssetField('earningsPerc',token,tokenConfig,account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc){\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n      break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token],account) : false;\n        if (depositTimestamps && depositTimestamps[token]){\n          output = depositTimestamps[token];\n        }\n      break;\n      case 'amountLent':\n        // output = account ? await this.getAmountDeposited(tokenConfig,account) : false;\n        const amountLents = account ? await this.getAmountLent([token],account) : false;\n        if (amountLents && amountLents[token]){\n          output = amountLents[token];\n        }\n      break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig,govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()){\n            output = '-';\n          }\n        } else {\n          output = await this.genericContractCall(tokenConfig.idle.token, 'tokenPrice');\n        }\n      break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig,account);\n      break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getTokenBalance(token,account);\n          if (!output || output.isNaN()){\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token,account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()){\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n      break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token,account) : false;\n        if (idleTokenBalance){\n          output = idleTokenBalance;\n        }\n      break;\n      case 'redeemableBalanceCounter':\n        let [tokenAPY1,amountLent2,redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy',token,tokenConfig,account),\n          this.loadAssetField('amountLent',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account),\n        ]);\n\n        let redeemableBalanceEnd = null;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2){\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        // this.customLog('redeemableBalanceCounter',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd));\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n      break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig,account,govTokenAvailableTokens);\n        } else {\n          let [idleTokenPrice1,idleTokenBalance2,govTokensBalance] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance',token,tokenConfig,account),\n            this.getGovTokensUserTotalBalance(account,govTokenAvailableTokens,token),\n          ]);\n\n          if (idleTokenBalance2 && idleTokenPrice1){\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n\n            let redeemableBalance = tokenBalance;\n\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()){\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n\n            output = redeemableBalance;\n\n            // this.customLog('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance.toFixed(4),output.toFixed(4));\n          }\n        }\n      break;\n      case 'earningsCurve':\n        let [amountLentCurve2,redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (!amountLentCurve2){\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1){\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n      break;\n      case 'earnings':\n        let [amountLent,redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account)\n        ]);\n\n        if (!amountLent){\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2){\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        if (output.lt(this.BNify(0))){\n          output = this.BNify(0);\n        }\n      break;\n      default:\n      break;\n    }\n\n    return output;\n  }\n  getIdleTokenPrice = async (tokenConfig,blockNumber='latest',timestamp=false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedData(cachedDataKey);\n      if (cachedData !== null && !this.BNify(cachedData).isNaN()){\n        return cachedData;\n      }\n    }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCall(tokenConfig.idle.token,'tokenPrice',[],{},blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp){\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp)-(60*60);\n      const endTimestamp = parseInt(timestamp)+(60*60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,endTimestamp,true);\n\n      let beforePrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      let afterPrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      tokenData.forEach( d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp)-parseInt(timestamp));\n        if (parseInt(d.timestamp)<parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff<beforePrice.timeDiff)){\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp)>parseInt(timestamp) && !afterPrice.timeDiff){\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data){\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()){\n      tokenPrice = this.fixTokenDecimals(tokenPrice,decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)){\n      tokenPrice = this.BNify(1);\n    }\n\n    if (blockNumber !== 'latest'){\n      this.setCachedData(cachedDataKey,tokenPrice);\n    }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = () => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function'){\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData();\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 5 minutes\n  */\n  setCachedData = (key,data,TTL=120) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      // this.customLog('setCachedData',key);\n      this.props.setCachedData(key,data,TTL);\n    }\n    return data;\n  }\n  getCachedData = (key,defaultValue=null) => {\n    if (this.props.cachedData && this.props.cachedData[key.toLowerCase()]){\n      const cachedData = this.props.cachedData[key.toLowerCase()];\n      if (!cachedData.expirationDate || cachedData.expirationDate>=parseInt(new Date().getTime()/1000)){\n        return cachedData.data;\n      }\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr,tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,walletAddr,false),\n      this.genericContractCall(tokenConfig.idle.token,'totalSupply')\n    ]);\n\n    let userShare = this.BNify(0);\n    if (idleTokensBalance && idleTokensTotalSupply){\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  getTokenBalance = async (contractName,walletAddr,fixDecimals=true) => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName,walletAddr)\n    ]);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,tokenDecimals);\n      }\n\n      // Set cached data\n      return this.setCachedData(cachedDataKey,tokenBalance);\n    } else {\n      this.customLogError('Error on getting balance for ',contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function'){\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url,props,callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props){\n      Object.keys(props).forEach((attr,i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function'){\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function() {\n          if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)){\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address !== null ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getContractBalance = async (contractName,address) => {\n    return await this.getProtocolBalance(contractName,address);\n  }\n  getProtocolBalance = async (contractName,address) => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    return await this.genericContractCall(contractName, 'balanceOf', [address]);\n  }\n  getAprs = async (contractName) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    return await this.genericContractCall(contractName, 'getAPRs');\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxDecodedLogs = async (tx,logAddr,decodeLogs,storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt){\n      txReceipt = await (new Promise( async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n          if (err){\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt){\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length){\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs,internalTransfers[0].data,internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  getBlockNumber = async () => {\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getContractPastEvents = async (contractName,methodName,params = {}) => {\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.getPastEvents(methodName, params);\n  }\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest') => {\n\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try{\n      this.customLog(`genericContractCall - ${contractName} - ${methodName}`);\n      const value = await contract.methods[methodName](...params).call(callParams,blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      this.customLog(`genericContractCall - ${contractName} - ${methodName} : ${value}`);\n      return value;\n    } catch (error) {\n      this.customLog(\"genericContractCall error\", error);\n    }\n  }\n  asyncForEach = async (array, callback, async=true) => {\n    if (async){\n      await Promise.all(array.map( (c,index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        await callback(array[index], index, array);\n      }\n    }\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(12))).pow(12).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token,tokenConfig.idle.address);\n    if (unlentBalance){\n      unlentBalance = this.fixTokenDecimals(unlentBalance,tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  /*\n  Get idleToken allocation between protocols\n  */\n  getTokenAllocation = async (tokenConfig,protocolsAprs=false,addGovTokens=true) => {\n\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    let totalAllocation = this.BNify(0);\n\n    const tokenAllocation = {\n      avgApr: null,\n      totalAllocation:null,\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null,\n      totalAllocationWithUnlent:null\n    };\n\n    const exchangeRates = {};\n    const protocolsBalances = {};\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const contractName = protocolInfo.token;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n\n      let [\n        tokenDecimals,\n        protocolBalance,\n        exchangeRate\n      ] = await Promise.all([\n        this.getTokenDecimals(contractName),\n        this.getProtocolBalance(contractName,tokenConfig.idle.address),\n        ( protocolInfo.functions.exchangeRate ? this.genericContractCall(contractName,protocolInfo.functions.exchangeRate.name,protocolInfo.functions.exchangeRate.params) : null )\n      ]);\n\n      if (!protocolBalance){\n        return;\n      }\n\n      if (exchangeRate && protocolInfo.decimals){\n        exchangeRates[protocolAddr] = exchangeRate;\n        exchangeRate = this.fixTokenDecimals(exchangeRate,protocolInfo.decimals);\n      }\n\n      let protocolAllocation = this.fixTokenDecimals(protocolBalance,tokenDecimals,exchangeRate);\n\n      if (protocolAllocation.lt(this.BNify(0.00000001))){\n        protocolBalance = this.BNify(0);\n        protocolAllocation = this.BNify(0);\n      }\n\n      protocolsBalances[protocolAddr] = protocolBalance;\n      protocolsAllocations[protocolAddr] = protocolAllocation;\n      totalAllocation = totalAllocation.plus(protocolAllocation);\n\n      // console.log('getTokenAllocation',contractName,protocolAddr,protocolAllocation.toFixed(5),exchangeRate ? exchangeRate.toFixed(5) : null,totalAllocation.toFixed(5));\n    });\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.protocolsBalances = protocolsBalances;\n    tokenAllocation.totalAllocationWithUnlent = this.BNify(totalAllocation);\n\n    // Add unlent balance to the pool\n    let unlentBalance = await this.getUnlentBalance(tokenConfig);\n    if (unlentBalance){\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    // console.log('totalAllocationWithUnlent 1',addGovTokens,tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n\n    Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n      const protocolAllocation = protocolsAllocations[protocolAddr];\n      const protocolAllocationPerc = protocolAllocation.div(totalAllocation);\n      protocolsAllocationsPerc[protocolAddr] = protocolAllocationPerc;\n    });\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    if (addGovTokens){\n      const govTokensBalances = await this.getGovTokensBalances(tokenConfig.idle.address);\n\n      // Sum gov tokens balances\n      if (govTokensBalances.total){\n        const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,false);\n        if (tokenUsdConversionRate){\n          govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n        }\n\n        tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n\n        // console.log('totalAllocationWithUnlent 2',govTokensBalances.total.toFixed(5),tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n      }\n    }\n\n    if (protocolsAprs){\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    return this.setCachedData(cachedDataKey,tokenAllocation);\n  }\n  getUniswapConversionRate_path = async (path) => {\n    const one = this.normalizeTokenDecimals(18);\n    const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n    return unires;\n  }\n  getUniswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n    try {\n      const WETHAddr = '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2';\n      const one = this.normalizeTokenDecimals(18);\n      const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),[tokenConfigFrom.address, WETHAddr, tokenConfigDest.address]]);\n      if (unires){\n        const price = this.BNify(unires[0]).div(one);\n        // console.log('getUniswapConversionRate',tokenConfigDest.address,price);\n        return price;\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account,enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach( tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]){\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action){\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n        break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])){\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)){\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n        break;\n        default:\n        break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)){\n        Object.keys(idleTokensBalances).forEach( token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)){\n            if (tokenBalance.gt(remainingCurveTokens)){\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts,max_burn_amount) => {\n    const curveSwapContract = await this.getCurveSwapContract();\n    if (curveSwapContract){\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve','rates']);\n    if (curveRatesInfo){\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data){\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path,results.data);\n        if (curveApy){\n          curveApy = this.BNify(curveApy).times(100);\n          return this.setCachedData(cachedDataKey,curveApy);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies){\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve','availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce( (availableTokens,token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled){\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    },{});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveSwapContract();\n    if (curveSwapContract){\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber){\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice,prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price'),\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price',[],{},blockNumber-blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice){\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      return await this.genericContractCall(curvePoolContract.name,'totalSupply');\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account=null,fixDecimals=true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name,account,fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber='latest',fixDecimals=true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    let curveTokenPrice = await this.genericContractCall(migrationContract.name,'get_virtual_price',[],{},blockNumber);\n    if (curveTokenPrice){\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals){\n        const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice,curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice,curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice){\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve','depositContract']);\n    if (depositContractInfo){\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi){\n        curveDepositContract = await this.props.initContract(depositContractInfo.name,depositContractInfo.address,depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve','zapContract']);\n    if (zapContractInfo){\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi){\n        curveZapContract = await this.props.initContract(zapContractInfo.name,zapContractInfo.address,zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve','poolContract']);\n    if (poolContractInfo){\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi){\n        curvePoolContract = await this.props.initContract(poolContractInfo.name,poolContractInfo.address,poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve','migrationContract']);\n    if (migrationContractInfo){\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi){\n        migrationContract = await this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n\n  getCurveIdleTokensAmounts = async (account=null,curveTokenBalance=null,max_slippage=null) => {\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage){\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]);\n        if (curveIdleTokens){\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage){\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account=null,curveTokenBalance=null,fixDecimals=false) => {\n\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals){\n          tokenBalance = this.fixTokenDecimals(tokenBalance,tokenConfig.decimals);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = tokenBalance;\n      });\n    }\n\n    return tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token,amount,deposit=false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount)>0){\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount,18)\n        if (!deposit){\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount,curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts,deposit=true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract){\n      return await this.genericContractCall(migrationContract.name,'calc_token_amount',[amounts,deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token,amount,deposit=true,uneven_amounts=null) => {\n    let slippage = null;\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract){\n\n      const n_coins = this.getGlobalConfig(['curve','params','n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)){\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins){\n        amounts = await this.getCurveAmounts(token,amount);\n      }\n\n      let [virtualPrice,tokenAmount] = await Promise.all([\n        this.genericContractCall(migrationContract.name,'get_virtual_price'),\n        this.genericContractCall(migrationContract.name,'calc_token_amount',[amounts,deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount){\n        amount = this.fixTokenDecimals(amount,18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice,18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount,18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit){\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit){\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // this.customLog('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getCompAPR = async (token,tokenConfig,cTokenIdleSupply=null,compConversionRate=null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens','COMP']);\n    if (!COMPTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    let compAPR = this.BNify(0);\n\n    const compDistribution = await this.getCompDistribution(tokenConfig,cTokenIdleSupply);\n\n    if (compDistribution){\n      const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get COMP conversion rate\n      if (!compConversionRate){\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig,COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()){\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      let compoundAllocation = null;\n\n      cTokenIdleSupply = await this.genericContractCall(cTokenInfo.token,'totalSupply');\n\n      // this.customLog('getCompAPR',cTokenInfo.token,cTokenIdleSupply ? cTokenIdleSupply.toString() : null);\n\n      if (cTokenIdleSupply){\n        let [tokenDecimals,exchangeRate] = await Promise.all([\n          this.getTokenDecimals(cTokenInfo.token),\n          this.genericContractCall(cTokenInfo.token,cTokenInfo.functions.exchangeRate.name,cTokenInfo.functions.exchangeRate.params)\n        ]);\n\n        if (exchangeRate){\n          exchangeRate = this.fixTokenDecimals(exchangeRate,cTokenInfo.decimals);\n          compoundAllocation = this.fixTokenDecimals(cTokenIdleSupply,tokenDecimals,exchangeRate);\n          // this.customLog('getCompAPR',token,compValue.toString(),cTokenIdleSupply.toString(),exchangeRate.toString(),tokenDecimals.toString(),compoundAllocation.toString());\n        }\n      }\n\n      if (compoundAllocation){\n        compoundAllocation = await this.convertTokenBalance(compoundAllocation,token,tokenConfig,false);\n        compAPR = compValue.div(compoundAllocation).times(100);\n\n        // this.customLog('getCompAPR',cTokenInfo.token,compConversionRate.toString(),compDistribution.toString(),compValue.toString(),cTokenIdleSupply.toString(),compoundAllocation.toString(),compAPR.toString()+'%');\n\n        this.setCachedData(cachedDataKey,compAPR);\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCall('Comptroller','compSpeeds',[cTokenAddress]);\n    if (compSpeed){\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig,cTokenIdleSupply=null) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n    if (cTokenInfo){\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)){\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.genericContractCall(cTokenInfo.token,'totalSupply'),\n        ]);\n\n        if (compSpeed && cTokenTotalSupply){\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply){\n            cTokenIdleSupply = await this.genericContractCall(cTokenInfo.token,'balanceOf',[tokenConfig.idle.address]);\n          }\n\n          if (cTokenIdleSupply){\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network','blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compDistribution = this.BNify(compSpeed).times(this.BNify(blocksPerYear)).div(1e18);\n\n            this.setCachedData(cachedDataKey,compDistribution);\n\n            return compDistribution;\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (cTokenInfo){\n        const [\n          compSpeed,\n          userPoolShare\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.getUserPoolShare(account,tokenConfig)\n        ]);\n\n        if (compSpeed && userPoolShare){\n          output = output.plus(compSpeed.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens=null) => {\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr,tokenAllocation] = await Promise.all([\n        this.getCompAPR(token,tokenConfig),\n        this.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (compApr && tokenAllocation){\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function() {\n      return this.reduce(function(pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function() {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function() {\n      return this.sum()/this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,7200,'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length-1];\n\n        rates.forEach( r => {\n          if (!protocols){\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach( p1 => {\n              const foundProtocol = tokenConfig.protocols.find( p2 => ( p2.address.toLowerCase() === p1.protocolAddr.toLowerCase() ) );\n              if (foundProtocol){\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach( p => {\n              header.push('APR '+p.name);\n              header.push('SCORE '+p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp*1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach( pInfo => {\n            const pData = r.protocolsData.find( p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()) );\n            let pRate = '';\n            let pScore = '';\n            if (pData){\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined'){\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()){\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n                if (!isNaN(parseFloat(pRate))){\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))){\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach( p => {\n          const avgRate = aprAvg[p].sum()/aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach( p => {\n          const avgScore = scoreAvg[p].sum()/scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken=null,availableTokens=null,convertToken=null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address,convertToken,enabledTokens);\n      if (compTokenBalance && compTokenBalance.total){\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken){\n      this.idleGovToken = new IdleGovToken(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach( govToken => {\n      const govTokenConfig = govTokens[govToken];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      if (govTokenConfig.protocol === 'idle'){\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find( p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()) )\n        if (foundProtocol){\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed,unit) => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()){\n      switch (unit){\n        case 'day':\n          const blocksPerDay = blocksPerYear.div(365.242199);\n          speed = speed.times(blocksPerDay);\n        break;\n        case 'week':\n          const blocksPerWeek = blocksPerYear.div(52.1429);\n          speed = speed.times(blocksPerWeek);\n        break;\n        case 'month':\n          const blocksPerMonth = blocksPerYear.div(12);\n          speed = speed.times(blocksPerMonth);\n        break;\n        case 'year':\n          speed = speed.times(blocksPerYear);\n        break;\n        default:\n        break;\n      }\n      return speed;\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account,tokenConfig=null,enabledTokens=null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken){\n        case 'COMP':\n          output = await this.getCompUserDistribution(account,availableTokens);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account,availableTokens);\n        break;\n        default:\n        break;\n      }\n\n      if (output){\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig,enabledTokens=null) => {\n    const govTokensDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      let govSpeed = null;\n      switch (govToken){\n        case 'COMP':\n          const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n          if (cTokenInfo){\n            govSpeed = await this.getCompSpeed(cTokenInfo.address);\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n        break;\n        default:\n        break;\n      }\n\n      if (govSpeed){\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          govSpeed = this.fixDistributionSpeed(govSpeed,govTokenConfig.distributionFrequency);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token,tokenConfig,enabledTokens=null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false){\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken){\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getCompAPR(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation){\n                const compoundInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n                if (compoundInfo){\n                  if (tokenAllocation.protocolsAllocationsPerc[compoundInfo.address.toLowerCase()]){\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[compoundInfo.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode){\n            case 'apr':\n              output = await idleGovToken.getAPR(token,tokenConfig);\n            break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output){\n                output = this.fixTokenDecimals(output,18);\n                output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency);\n              }\n            break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n            break;\n            default:\n            break;\n          }\n        break;\n        default:\n        break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)){\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address=null,convertToken='DAI',enabledTokens=null) => {\n    if (!address){\n      address = this.props.tokenConfig.idle.address;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)){\n        return;\n      }\n      \n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token,address);\n\n      if (govTokenBalance){\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken){\n          const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n          } catch (error) {\n            \n          }\n        }\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = this.fixTokenDecimals(govTokenBalance,govTokens[token].decimals,tokenConversionRate);\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total){\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return govTokensBalances;\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address){\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find( tokenConfig => (tokenConfig.enabled && tokenConfig.address.toLowerCase() === address.toLowerCase()) );\n  }\n  getGovTokensUserTotalBalance = async (account=null,availableTokens=null,convertToken=null,checkShowBalance=true) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,null,checkShowBalance);\n    if (govTokensUserBalances){\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce( (acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return govTokensEarnings;\n    }\n    return this.BNify(0);\n  }\n  getGovTokensUserBalances = async (account=null,availableTokens=null,convertToken=null,govTokenConfigForced=null,checkShowBalance=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.genericContractCall(idleTokenConfig.token,'getGovTokensAmounts',[account]);\n\n      if (govTokensAmounts){\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.genericContractCall(idleTokenConfig.token,'govTokens',[govTokenIndex]);\n\n\n          if (govTokenAddress){\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()){\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken){\n                const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n                if (fromTokenConfig){\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n                  } catch (error) {\n                    \n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount,govTokenConfig.decimals,tokenConversionRate);\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]){\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCall(tokenConfig.idle.token, 'fee');\n    if (fee){\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig=null,account=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig){\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent',tokenConfig.token,tokenConfig,account),\n      this.loadAssetField('redeemableBalance',tokenConfig.token,tokenConfig,account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance){\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig,account=null,availableTokens=null,convertToken=null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getAggregatedStats = async (addGovTokens=true) => {\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig,tokenAllocation,addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()){\n          const totalAllocation = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig,isRisk);\n          totalAUM = totalAUM.plus(totalAllocation);\n          // this.customLog(strategy,token,totalAllocation.toString(),totalAUM.toString());\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()){\n            avgAPR = avgAPR.plus(totalAllocation.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(totalAllocation.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (tokenBalance && tokenConversionRate){\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance,govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()){\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig,false,false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()){\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation,token,oldTokenConfig,isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // this.customLog(strategy,token,'old',oldTokenTotalAllocation.toString(),totalAUM.toString());\n          }\n\n          // debugger;\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    return {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy=null) => {\n\n    if (!this.props.availableStrategies || !this.props.account){\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy){\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig,this.props.account);\n        \n        if (migrationEnabled){\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol=null) => {\n    if (!this.props.account){\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools','tokenMigration','props','availableTokens']);\n    if (protocolsTokens){\n      await this.asyncForEach(Object.keys(protocolsTokens),async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase() ){\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi){\n          tokenContract = await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n        }\n        if (tokenContract){\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token,this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)){\n            tokenBalances[token] = {\n              tokenConfig,\n              balance:tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance,token,tokenConfig,isRisk=false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,isRisk);\n      if (tokenUsdConversionRate){\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig,isRisk,conversionRateField=null) => {\n\n    if (!conversionRateField){\n      conversionRateField = this.getGlobalConfig(['stats','tokens',tokenConfig.token,'conversionRateField']);\n      if (!conversionRateField){\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,null,'desc',1);\n\n    if (tokenData && tokenData.length){\n      tokenData = tokenData.pop();\n      if (tokenData && tokenData[conversionRateField]){\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField],18);\n        return this.setCachedData(cachedDataKey,conversionRate);\n      }\n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint,apiInfo.TTL,true),\n      this.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenData && tokenAllocation){\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach( protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001) && tokenData.length>0){\n          const protocolInfo = tokenData[0].protocolsData.find( p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase()) );\n          if (protocolInfo){\n            const protocolScore = this.BNify(protocolInfo.defiScore);\n            if (!protocolScore.isNaN()){\n              tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n              // this.customLog(protocolAddr,tokenAllocation.protocolsAllocationsPerc[protocolAddr].toFixed(6),protocolScore.toFixed(6),tokenScore.toFixed(6));\n            }\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)){\n      tokenScore = this.getTokenScoreApi(tokenConfig,isRisk);\n    }\n\n    return this.setCachedData(cachedDataKey,tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    const apiInfo = globalConfigs.stats.scores;\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}`;\n    let tokenData = await this.makeCachedRequest(endpoint,apiInfo.TTL,true);\n\n    if (tokenData){\n      let tokenScore = this.BNify(tokenData[0].idleScore);\n      if (tokenScore && tokenScore.gt(0)){\n        // Set cached data\n        return this.setCachedData(cachedDataKey,tokenScore);\n      // Take latest historical valid score\n      } else {\n        const timestamp = parseInt(new Date().getTime()/1000);\n        const startTimestamp = parseInt(timestamp)-(60*60*24);\n        tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,null,true,null,'DESC');\n\n        const filteredTokenData = tokenData.filter( d => (this.BNify(d.idleScore).gt(0)) );\n        if (filteredTokenData.length){\n          tokenScore = this.BNify(filteredTokenData[0].idleScore);\n          return this.setCachedData(cachedDataKey,tokenScore);\n        }\n      }\n    }\n\n    return null;\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig,tokenAllocation=false,addGovTokens=true) => {\n\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    const Aprs = await this.getAprs(tokenConfig.idle.token);\n\n    if (!Aprs){\n      return false;\n    }\n\n    if (!tokenAllocation){\n      tokenAllocation = await this.getTokenAllocation(tokenConfig);\n    }\n\n    if (!tokenAllocation){\n      return false;\n    }\n\n    const addresses = Aprs.addresses.map((addr,i) => { return addr.toString().toLowerCase() });\n    const aprs = Aprs.aprs;\n\n    const protocolsAprs = {};\n    const protocolsApys = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const protocolAddr = protocolInfo.address.toString().toLowerCase();\n      const addrIndex = addresses.indexOf(protocolAddr);\n      if ( addrIndex !== -1 ) {\n        let protocolApr = this.BNify(+this.toEth(aprs[addrIndex]));\n        let protocolApy = this.apr2apy(protocolApr.div(100)).times(100);\n\n        if (addGovTokens && protocolInfo.name === 'compound'){\n          const compAPR = await this.getCompAPR(tokenConfig.token,tokenConfig);\n\n          if (compAPR){\n            protocolApr = protocolApr.plus(compAPR);\n            protocolApy = protocolApy.plus(compAPR);\n          }\n        }\n\n        protocolsApys[protocolAddr] = protocolApy;\n        protocolsAprs[protocolAddr] = protocolApr;\n      }\n    });\n\n    const tokenAprs = {\n      avgApr: null,\n      avgApy: null,\n      protocolsAprs,\n      protocolsApys\n    };\n\n    if (tokenAllocation){\n      tokenAprs.avgApr = this.getAvgApr(protocolsAprs,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n      tokenAprs.avgApy = this.getAvgApr(protocolsApys,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = this.getGlobalConfig(['govTokens','IDLE','showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens','IDLE','enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR){\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token,tokenConfig);\n        if (idleAPR){\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n    }\n\n    return this.setCachedData(cachedDataKey,tokenAprs);\n  }\n  abbreviateNumber(value,decimals=3,maxPrecision=5,minPrecision=0){\n\n    const isNegative = parseFloat(value)<0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\",\"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1,maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value>=1000){\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2,decimals) : null;\n      newValue = parseInt(newValue).toString()+( decimalPart ? '.'+decimalPart : '' );\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue>=1 && (newValue.length-1)>maxPrecision){\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length-1)<minPrecision) {\n      const difference = minPrecision-(newValue.length-1);\n      const append = this.BNify(value).abs().toString().replace('.','').substr((newValue.length-1),difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative){\n      newValue = '-'+newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance,label,decimals,maxLen,highlightedDecimals){\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.','').length;\n    if (numLen>maxLen){\n      decimals = Math.max(0,decimals-(numLen-maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance%1).toPrecision(decimals).substr(2,decimals);;\n    decPart = (decPart+(\"0\".repeat(decimals))).substr(0,decimals);\n\n    if (highlightedDecimals){\n      const highlightedDec = decPart.substr(0,highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? ( <>{highlightedIntPart}<small style={{fontSize:'70%'}}>{decPart}</small> <Text.span fontSize={[1,2]}>{label}</Text.span></> ) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? ( <>{intPart}<small>.{decPart}</small>{ label !== '%' ? ' ' : null }{ label ? <Text.span fontSize={[1,2]}>{label}</Text.span> : null }</> ) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink pb={[3,2]} href={'https://developers.idle.finance'} textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>Developers</ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>Terms of Service</Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink pb={[3,2]} href={'https://www.iubenda.com/privacy-policy/61211749'} textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>Privacy Policy</ExtLink>\n                <ExtLink pb={[3,2]} href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>Cookie Policy</ExtLink>\n                <ExtLink pb={[3,2]} href={'https://www.notion.so/idlelabs/Idle-Finance-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'} textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>Brand Assets</ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>Overview</Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>Proposals</Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>Leaderboard</Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>Forum</Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>info@idle.finance</Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    // console.log('onActivation',this.provider);\n\n    if (this.provider){\n\n      await this.provider.enable();\n\n      /*\n      // Subscribe to accounts change\n      this.provider.on(\"accountsChanged\", (accounts) => {\n        console.log('accountsChanged',accounts);\n      });\n\n      // Subscribe to chainId change\n      this.provider.on(\"chainChanged\", (chainId) => {\n        console.log('chainChanged',chainId);\n      });\n\n      // Subscribe to networkId change\n      this.provider.on(\"networkChanged\", (networkId) => {\n        console.log('networkChanged',networkId);\n      });\n\n      // Subscribe to session connection/open\n      this.provider.on(\"open\", () => {\n        console.log('open');\n      });\n\n      // Subscribe to session disconnection/close\n      this.provider.on(\"close\", (code, reason) => {\n        console.log('close',code, reason);\n      });\n      */\n\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura).forEach((networkId,index) => {\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: [defaultNetwork]\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: globalConfigs.network.providers.infura[defaultNetwork]+env.REACT_APP_INFURA_KEY\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React, { Component } from 'react';\nimport { Box, Flex, Icon, Text, Heading } from 'rimble-ui'\n// import styles from './Faquestion.module.scss';\n\nclass Faquestion extends Component {\n  state = {\n    isShowingAnswer: false\n  };\n  toggleAnswer(e) {\n    e.preventDefault();\n    this.setState(state => ({...state, isShowingAnswer: !state.isShowingAnswer}));\n  };\n  render() {\n    return (\n      <Flex\n        my={[3,3]}\n        py={[3,3]}\n        px={[4,4]}\n        flexDirection={'column'}\n        alignItems={'baseline'}\n        justifyContent={'center'}\n        backgroundColor={'white'}\n        borderRadius={ this.props.isOpened ? '30px' : '50px' }\n        boxShadow={1}\n      >\n        <Flex flexDirection={'row'} alignItems={'center'} width={1} onClick={this.props.handleClick} style={{cursor: 'pointer'}}>\n          <Box width={4/5}>\n            <Heading.h4\n              fontSize={[1,2]}\n              fontFamily={'sansSerif'}\n              fontWeight={3}\n              color={this.props.isOpened ? 'blue' : 'dark-gray'}\n              my={0}>\n                {this.props.question}\n              </Heading.h4>\n          </Box>\n          <Flex width={1/5} justifyContent={'flex-end'}>\n            <Icon\n              name={this.props.isOpened ? 'KeyboardArrowUp' : 'KeyboardArrowDown'}\n              color={this.props.isOpened ? 'blue' : 'copyColor'}\n              size={\"1.5em\"}\n            />\n          </Flex>\n        </Flex>\n        <Flex width={1}>\n          {this.props.isOpened &&\n            <Text.p textAlign={'justify'} fontSize={[1,2]} dangerouslySetInnerHTML={{ __html: this.props.answer }}></Text.p>\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faquestion;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Faquestion from '../Faquestion/Faquestion';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Faq extends Component {\n  state = {\n    openedAnswer:null,\n    selectedSection: 'general',\n    generalQuestions: [\n      {\n        q: 'What is Idle?',\n        a: `Idle is a decentralized rebalancing protocol that allows users to automatically and algorithmically manage their digital asset allocation among different third-party DeFi protocols. You can choose to maximize your interest rate returns through our MaxYield strategy or minimize your risk exposure through our RiskAdjusted allocation strategy.`\n      },\n      {\n        q: 'What third-party protocols and assets does Idle support?',\n        a: `Idle connects with Compound, Aave, dYdX, Fulcrum, and DSR, and supports DAI, USDC and USDT.  Security is fundamental at Idle, meaning that our products will only connect to protocols that are audited by a top security firm and battle-tested in terms of time in market and digital assets locked. To add more security, we passed through multiple audit reviews and we use <a href=\"https://defiscore.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">DeFiScore</a> risk assessment to evaluate the risk across DeFi protocols.`\n      },\n      {\n        q: 'Can you walk me through an example?',\n        a: `When utilizing the Idle protocol, a user supplies capital for lending as a part of Idle’s non-custodial smart contract pools; the protocol will automatically rebalance the pool’s current allocation to achieve optimized interest rates, based on the strategy.`\n      }\n    ],\n    guidelinesQuestions: [\n      {\n        q: 'How do I manage my assets?',\n        a: `You can access Idle’s user dashboard where you can deposit funds, monitor performances and see insights, rebalance funds, convert from FIAT to crypto, and redeem back your assets.`\n      },\n      {\n        q: 'How does the rebalancing process work?',\n        a: `A rebalance calculation involves assessing the total assets within a pool, incorporating underlying protocol rate functions and levels of supply and demand, and finally determining an allocation that achieves the optimal interest rate possible after the rebalance takes place, based on the strategy.`\n      },\n      {\n        q: 'What are IdleTokens?',\n        a: `IdleTokens represent your balance in the protocol, and accrue interest over time. As a specific Idle’s pool earns interest, its idleToken becomes convertible into an increasing quantity of the underlying asset. IdleTokens conform to the ERC-20 standard.`\n      }\n    ],\n    ratesQuestions: [\n      {\n        q: 'Has Idle had a security audit?',\n        a: `Idle completed multiple and incremental security audits with Quantstamp in December 2019 and April/May 2020 (<a href=\"https://certificate.quantstamp.com/full/idle-finance\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">view the report</a>). Any issues affecting the performance of the protocol or security of funds have been resolved. Users should review our Terms of Service before using the protocol.`\n      },\n      {\n        q: 'How are digital assets custodied?',\n        a: `Idle does not custody digital assets. When you interact with the Idle protocol, your digital assets will be sent to a smart contract that Idle does not control. The smart contract has the concept of “accounts,” to which only you have access. These accounts have balances for each asset, which then are lent out to underlying protocols. When you want to withdraw, the smart contract interacts with the underlying platforms to withdraw digital assets and route them to your wallet.`\n      },\n      {\n        q: 'Who is the administrator of the Idle smart contract?',\n        a: `We have few administrative privileges (eg pause deposits in case of emergency), but we cannot, in any case, withdraw or move user funds directly. You can read more about here <a href=\"https://developers.idle.finance/advanced/admin-powers\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://developers.idle.finance/advanced/admin-powers</a>`\n      }\n    ]\n  };\n  setSection(section) {\n    this.setState(state => ({...state, selectedSection: section, openedAnswer: null}));\n  }\n\n  toggleAnswer(e,i) {\n    e.preventDefault();\n    this.setState(state => ({...state, openedAnswer: state.openedAnswer===i ? null : i }));\n  };\n\n  render() {\n    const {generalQuestions, selectedSection, guidelinesQuestions, ratesQuestions} = this.state;\n    const generalDivs = generalQuestions.map((question, i) => (\n      <Faquestion handleClick={ e => this.toggleAnswer(e,i) } isOpened={this.state.openedAnswer === i} key={`general-${i}`} question={question.q} answer={question.a} pt={i === 0 ? 0 : ''} />\n    ));\n    const guidelinesDivs = guidelinesQuestions.map((question, i) => (\n      <Faquestion handleClick={ e => this.toggleAnswer(e,i) } isOpened={this.state.openedAnswer === i} key={`guidelines-${i}`} question={question.q} answer={question.a} pt={i === 0 ? 0 : ''} />\n    ));\n    const ratesDivs = ratesQuestions.map((question, i) => (\n      <Faquestion handleClick={ e => this.toggleAnswer(e,i) } isOpened={this.state.openedAnswer === i} key={`rates-${i}`} question={question.q} answer={question.a} pt={i === 0 ? 0 : ''} />\n    ));\n    const isGeneralSelected = selectedSection === 'general';\n    const isGuidelinesSelected = selectedSection === 'guidelines';\n    const isRatesSelected = selectedSection === 'rates';\n    return (\n      <Flex\n        flexDirection={'column'}\n      >\n        <Title\n          mb={3}\n          mt={[3,4]}\n          fontWeight={5}\n          fontSize={[5,6]}\n          component={Heading.h4}\n        >\n          Frequently asked questions\n        </Title>\n\n        <Flex\n          flexDirection={'column'}\n          justifyContent={\"center\"}\n          alignItems={'center'}\n        >\n          <Flex width={[1,3/5]} px={[2,0]} flexDirection={'row'} justifyContent={'space-between'}>\n            <Flex width={1/3} textAlign={'center'} justifyContent={'center'} borderBottom={ isGeneralSelected ? '3px solid #0036ff' : 'none'}>\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[2, 3]}\n                textAlign={'center'}\n                onClick={() => this.setSection('general')}\n                color={isGeneralSelected ? 'blue' : 'copyColor'}\n                className={['pointer', isGeneralSelected ? 'selected' : '']}\n              >\n                General\n              </Text>\n            </Flex>\n            <Flex width={1/3} textAlign={'center'} justifyContent={'center'} borderBottom={ isGuidelinesSelected ? '3px solid #0036ff' : 'none'}>\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[2, 3]}\n                textAlign={'center'}\n                onClick={() => this.setSection('guidelines')}\n                color={isGuidelinesSelected ? 'blue' : 'copyColor'}\n                className={['pointer', isGuidelinesSelected ? 'selected' : '']}\n              >\n                Liquidity Providers\n              </Text>\n            </Flex>\n            <Flex width={1/3} textAlign={'center'} justifyContent={'center'} borderBottom={ isRatesSelected ? '3px solid #0036ff' : 'none'}>\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[2, 3]}\n                textAlign={'center'}\n                onClick={() => this.setSection('rates')}\n                color={isRatesSelected ? 'blue' : 'copyColor'}\n                className={['pointer', isRatesSelected ? 'selected' : '']}\n              >\n                Security\n              </Text>\n            </Flex>\n          </Flex>\n          <Box width={1} mt={[3, 4]} mb={[4, 0]}>\n            {isGeneralSelected && generalDivs}\n            {isGuidelinesSelected && guidelinesDivs}\n            {isRatesSelected && ratesDivs}\n          </Box>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faq;\n","import React, { Component } from 'react';\nimport { Flex, Link, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FlexCards extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    const itemPerc = this.props.itemsPerRow ? Math.floor(100/this.props.itemsPerRow)-2 : Math.floor(100/this.props.cards.length)-1;\n    const justifyContent = this.props.justifyContent ? this.props.justifyContent : 'space-between';\n\n    return (\n      <Flex\n        width={1}\n        px={[3,0]}\n        style={{\n          flexWrap:'wrap'\n        }}\n        alignItems={'flex-start'}\n        justifyContent={justifyContent}\n        flexDirection={['column','row']}\n      >\n        {\n          this.props.cards.map( (p,index) => (\n            <DashboardCard\n              isInteractive={true}\n              key={`card_${index}`}\n              cardProps={{\n                p:2,\n                mb:[2,3],\n                display:'flex',\n                alignItems:'center',\n                height:['65px','80px'],\n                justifyContent:'center',\n                mx: justifyContent !== 'space-between' ? [0,2] : 0,\n                style:{\n                  textAlign:'center',\n                  flex:this.props.isMobile ? null : `0 ${itemPerc}%`,\n                }\n              }}\n            >\n              {\n                p.link ? (\n                  <Link\n                    px={[5,4]}\n                    style={{\n                      width:'100%',\n                      height:'100%',\n                      display:'flex',\n                      alignItems:'center',\n                      justifyContent:'center',\n                    }}\n                    href={p.link}\n                    target={'_blank'}\n                    textAlign={'center'}\n                    rel={'nofollow noopener noreferrer'}\n                  >\n                    <Image\n                      src={p.image}\n                      width={'auto'}\n                      height={'auto'}\n                      maxHeight={'50px'}\n                    />\n                  </Link>\n                ) : (\n                  <Image\n                    src={p.image}\n                    width={'auto'}\n                    height={'auto'}\n                    maxHeight={['35px','50px']}\n                  />\n                )\n              }\n            </DashboardCard>\n            \n          ) )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexCards;","import React, { Component } from 'react';\nimport { Flex, Text, Link, Icon } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass AuditCard extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          my:[2,0],\n          mx:[0,3],\n          width:[1,'auto']\n        }}\n        isInteractive={this.props.link ? true : false}\n        handleClick={this.props.link ? e => window.open(this.props.link) : null}\n      >\n        <Flex\n          flexDirection={'column'}\n        >\n          <Text\n            mb={2}\n            color={'blue'}\n            fontSize={[1,3]}\n          >\n            {this.props.date}\n          </Text>\n          <Text\n            mb={2}\n            fontSize={4}\n            fontWeight={500}\n          >\n            {this.props.title}\n          </Text>\n          <Link\n            hoverColor={'blue'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'center'\n            }}\n          >\n            VIEW REPORT\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'blue'}\n              style={{\n                transform:'rotate(180deg)'\n              }}\n              name={'KeyboardBackspace'}\n            />\n          </Link>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default AuditCard;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport styles from './HowItWorks.module.scss';\nimport { Box, Flex, Heading, Image } from \"rimble-ui\";\n\nclass HowItWorks extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Box\n        p={[3,4]}\n        id={'how-it-works'}\n      >\n        <Flex flexDirection={['column','column']} alignItems={'center'} justifyContent={'center'}>\n          <Title\n            mt={[3,4]}\n            mb={[3,4]}\n            fontWeight={5}\n            fontSize={[5,6]}\n            component={Heading.h4}\n          >\n            How it works\n          </Title>\n          <Flex\n            width={1}\n            alignItems={'center'}\n            maxWidth={['24em','90em']}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              p={[3,3]}\n              mx={[0,2]}\n              my={[2,0]}\n              width={[1,1/4]}\n              position={'relative'}\n              flexDirection={'column'}\n              className={styles.bulletCard}\n            >\n              <Flex\n                mb={2}\n                width={1}\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Image width={['2.5em','3.3em']} src={'images/how-it-works/choose-strategy.svg'} />\n              </Flex>\n              <Box width={1}>\n                <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontSize={[3,3]} mb={[1,2]} color={'blue'}>\n                  Choose your strategy\n                </Heading.h3>\n                <Heading.h4 fontSize={1} px={[1,0]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                  Build your portfolio with different allocation strategies that aim to maximize your returns and keeping you in your risk comfort zone\n                </Heading.h4>\n              </Box>\n            </Flex>\n\n            <Flex\n              p={[3,3]}\n              mx={[0,2]}\n              my={[2,0]}\n              width={[1,1/4]}\n              position={'relative'}\n              flexDirection={'column'}\n              className={styles.bulletCard}\n            >\n              <Flex\n                mb={2}\n                width={1}\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Image width={['2.5em','3.3em']} src={'images/how-it-works/deposit-stablecoins.svg'} />\n              </Flex>\n              <Box width={1}>\n                <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontSize={[3,3]} mb={[1,2]} color={'blue'}>\n                  Deposit your crypto-assets\n                </Heading.h3>\n                <Heading.h4 fontSize={1} px={[1,0]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                  Just deposit and relax. Your funds will be automatically allocated among DeFi protocols and you will immediately start earning interest.\n                </Heading.h4>\n              </Box>\n            </Flex>\n\n            <Flex\n              p={[3,3]}\n              mx={[0,2]}\n              my={[2,0]}\n              width={[1,1/4]}\n              position={'relative'}\n              flexDirection={'column'}\n              className={styles.bulletCard}\n            >\n              <Flex\n                mb={2}\n                width={1}\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Image width={['2.5em','3.3em']} src={'images/how-it-works/rebalance.svg'} />\n              </Flex>\n              <Box width={1}>\n                <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontSize={[3,3]} mb={[1,2]} color={'blue'}>\n                  Automated Rebalancing\n                </Heading.h3>\n                <Heading.h4 fontSize={1} px={[1,0]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                  Idle automatically keeps the appropriate allocation mix, depending on the strategy. Idle consistently checks for better opportunities.\n                </Heading.h4>\n              </Box>\n            </Flex>\n            <Flex\n              p={[3,3]}\n              mx={[0,2]}\n              my={[2,0]}\n              width={[1,1/4]}\n              position={'relative'}\n              flexDirection={'column'}\n              className={styles.bulletCard}\n            >\n              <Flex\n                mb={2}\n                width={1}\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Image width={['2.5em','3.3em']} src={'images/how-it-works/insights-redeem.svg'} />\n              </Flex>\n              <Box width={1}>\n                <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontSize={[3,3]} mb={[1,2]} color={'blue'}>\n                  Easy insights and redeem\n                </Heading.h3>\n                <Heading.h4 fontSize={1} px={[1,0]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                  Monitor your funds’ performance and rebalance events, see your estimated earnings and easlily redeem back your funds + interest.\n                </Heading.h4>\n              </Box>\n            </Flex>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default HowItWorks;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Link, Icon, Tooltip, Image } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass StrategyBox extends Component {\n\n  state = {\n    selectedToken:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentDidMount(){\n    this.getHighestAprToken();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    if (contractsInitialized){\n      this.getHighestAprToken();\n    }\n  }\n\n  getHighestAprToken = async () => {\n\n    const strategyInfo = this.functionsUtil.getGlobalConfig(['strategies',this.props.strategy]);\n\n    if (!this.props.contractsInitialized || strategyInfo.comingSoon){\n      return false;\n    }\n\n    let selectedToken = null;\n    let highestValue = null;\n    const tokensAprs = {};\n    const availableTokens = this.props.availableStrategies[this.props.strategy];\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      switch (this.props.strategy){\n        case 'best':\n        default:\n          const tokenAPR = await this.functionsUtil.getTokenAprs(tokenConfig);\n          if (tokenAPR && tokenAPR.avgApr !== null){\n            tokensAprs[token] = tokenAPR.avgApr;\n            if (!highestValue || highestValue.lt(tokenAPR.avgApr)){\n              highestValue = tokenAPR.avgApr;\n              selectedToken = token;\n            }\n          }\n        break;\n        case 'risk':\n        const tokenScore = await this.functionsUtil.getTokenScore(tokenConfig,true);\n          if (!highestValue || highestValue.lt(tokenScore)){\n            highestValue = tokenScore;\n            selectedToken = token;\n          }\n        break;\n      }\n    });\n\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n    const strategyInfo = this.functionsUtil.getGlobalConfig(['strategies',this.props.strategy]);\n    const strategyUrl = '/#'+this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])+'/'+this.props.strategy;\n    // const chartColor = strategyInfo.chartColor ? strategyInfo.chartColor : null;\n    const tokenConfig = this.state.selectedToken ? this.props.availableStrategies[this.props.strategy][this.state.selectedToken] : null;\n\n    return (\n      <DashboardCard\n        cardProps={{\n          pt:[3,3],\n          mt:[3,0],\n          ml:['0.35em',0],\n          width:[1,'21em'],\n          mr:['0.35em','2em'],\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'flex-start',\n          height:['fit-content','400px']\n        }}\n        isVisible={ typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true }\n      >\n        <Flex\n          mb={2}\n          justifyContent={'center'}\n        >\n          <Image\n            src={strategyInfo.icon}\n            height={['2.2em','2.8em']}\n          />\n        </Flex>\n        <Flex\n          my={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n        >\n          <Title\n            fontWeight={5}\n            fontSize={[4,'1.7em']}\n          >\n            {strategyInfo.title}\n          </Title>\n        </Flex>\n        <Flex\n          mt={2}\n          mb={[2,3]}\n          minHeight={'50px'}\n          alignItems={'flex-start'}\n          justifyContent={'center'}\n        >\n          <Text\n            px={[3,4]}\n            fontWeight={500}\n            textAlign={'center'}\n          >\n            {strategyInfo.desc}\n          </Text>\n        </Flex>\n        {\n          strategyInfo.comingSoon ? (\n            <Flex\n              mt={3}\n              mb={[0,3]}\n              height={'126px'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n              alignItems={['flex-end','end']}\n            >\n              <Image\n                width={1}\n                src={'/images/strategy-placeholder.jpg'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              my={[0,3]}\n              flexDirection={'row'}\n              alignItems={'flex-start'}\n              justifyContent={'center'}\n            >\n              <Flex\n                width={0.5}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n                borderRight={`1px solid ${this.props.theme.colors.divider}`}\n              >\n                <Flex\n                  width={1}\n                  alignItems={'center'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={2}\n                    fontWeight={4}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    APY\n                  </Text>\n                  <Tooltip\n                    placement={'bottom'}\n                    message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                  >\n                    <Icon\n                      ml={1}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n                </Flex>\n                <AssetField\n                  fieldInfo={{\n                    name:'apy',\n                    showTooltip:false,\n                    props:{\n                      decimals:2,\n                      fontWeight:4,\n                      color:'copyColor',\n                      textAlign:'center',\n                      fontSize:[3,'1.8em'],\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    },\n                  }}\n                  {...this.props}\n                  tokenConfig={ tokenConfig }\n                  token={this.state.selectedToken}\n                  selectedStrategy={this.props.strategy}\n                />\n                <AssetField\n                  fieldInfo={{\n                    name:'idleDistribution',\n                    props:{\n                      decimals:2,\n                      fontWeight:2,\n                      fontSize:[0,1],\n                      color:'cellText',\n                      textAlign:'center',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    },\n                  }}\n                  {...this.props}\n                  tokenConfig={ tokenConfig }\n                  token={this.state.selectedToken}\n                  selectedStrategy={this.props.strategy}\n                />\n              </Flex>\n              <Flex\n                width={0.5}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  width={1}\n                  alignItems={'center'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={2}\n                    fontWeight={4}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    SCORE\n                  </Text>\n                  <Tooltip\n                    placement={'bottom'}\n                    message={this.functionsUtil.getGlobalConfig(['messages','scoreShort'])}\n                  >\n                    <Icon\n                      ml={1}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n                </Flex>\n                <AssetField\n                  fieldInfo={{\n                    name:'score',\n                    props:{\n                      fontWeight:4,\n                      color:'copyColor',\n                      textAlign:'center',\n                      fontSize:[3,'1.8em'],\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    },\n                  }}\n                  {...this.props}\n                  tokenConfig={ tokenConfig }\n                  token={this.state.selectedToken}\n                  selectedStrategy={this.props.strategy}\n                />\n              </Flex>\n            </Flex>\n          )\n        }\n        {\n          !strategyInfo.comingSoon && \n            <Flex\n              mt={2}\n              width={1}\n              height={'60px'}\n              flexDirection={'row'}\n              alignItems={'center'}\n              justifyContent={'center'}\n              id={`${this.props.strategy}_performance_chart`}\n            >\n              <Image\n                width={1}\n                height={'60px'}\n                src={`/images/strategies/${this.props.strategy}-chart.png`} />\n              {\n                /*\n                <AssetField\n                  fieldInfo={{\n                    name:'aprChart'\n                  }}\n                  chartProps={{\n                    lineWidth:2\n                  }}\n                  {...this.props}\n                  color={chartColor}\n                  tokenConfig={tokenConfig}\n                  token={this.state.selectedToken}\n                  rowId={`${this.props.strategy}_performance_chart`}\n                />\n                */\n              }\n            </Flex>\n        }\n        <Flex\n          width={1}\n          height={'64px'}\n          position={'relative'}\n          boxShadow={'0px -6px 6px -4px rgba(0,0,0,0.1)'}\n        >\n          {\n            strategyInfo.comingSoon ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  mr={2}\n                  fontSize={3}\n                  fontWeight={550}\n                  color={'copyColor'}\n                  style={{\n                    fontStyle:'italic'\n                  }}\n                  hoverColor={'copyColor'}\n                >\n                  Coming Soon\n                </Text>\n              </Flex>\n            ) : (\n              <Link\n                href={strategyUrl}\n                style={{display:'flex',width:'100%'}}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mr={2}\n                      fontSize={3}\n                      fontWeight={4}\n                      color={'copyColor'}\n                      hoverColor={'copyColor'}\n                    >\n                      Start with {strategyInfo.title}\n                    </Text>\n                    <Icon\n                      size={'1.2em'}\n                      color={'copyColor'}\n                      name={'ArrowForward'}\n                    />\n                  </Flex>\n              </Link>\n            )\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default StrategyBox;\n","import React, { Component } from \"react\";\nimport { Flex, Box, Button, Form, Text, Checkbox, Link } from 'rimble-ui';\nimport axios from 'axios';\nimport styles from './NewsletterForm.module.scss';\nimport globalConfigs from '../configs/globalConfigs';\n\nclass NewsletterForm extends Component {\n  state = {\n    validated: false,\n    privacy: false,\n    email: null,\n    message: ''\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = { validated: false };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleValidation = this.handleValidation.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    if (!this.state.privacy){\n      this.setState({message:'Please check the privacy policy box to proceed.', messageColor:'red' });\n      return false;\n    }\n\n    this.setState({validated:true });\n\n    axios.post(globalConfigs.newsletterSubscription.endpoint, {\n      'email': this.state.email\n    }).then(r => {\n      if (r.data.status === 'success'){\n        this.setState({message:'Thanks! Check your e-mail and confirm your subscription', messageColor:'green' });\n      } else {\n        this.setState({message:'Error while sending your subscription... Please try again', messageColor:'red' });\n      }\n    })\n    .catch(err => {\n      this.setState({message:'Error while sending your subscription... Please try again', messageColor:'red' });\n    });\n  }\n\n  toggleCheckbox(e) {\n    this.setState({ privacy: e.target.checked });\n  }\n\n  handleValidation(e) {\n    if (e && e.target) {\n      this.setState({ email: e.target.value });\n      e.target.parentNode.classList.add(\"was-validated\");\n    }\n  }\n\n  render() {\n\n    return (\n        <Box mt={[2,3]} maxWidth={'45em'} width={1}>\n          <Form onSubmit={this.handleSubmit}>\n            <Flex flexDirection={['column','row']} alignItems={['center','flex-start']} justifyContent={'center'}>\n              <Box width={[1,7/10]}>\n                <Form.Field width={1} label={''}>\n                  <Form.Input\n                    type=\"email\"\n                    name=\"EMAIL\"\n                    required\n                    width={1}\n                    outline={'none'}\n                    border={0}\n                    fontSize={[2,5]}\n                    borderRadius={0}\n                    pl={0}\n                    pb={3}\n                    textAlign={['center','left']}\n                    placeholder={'Enter your e-mail'}\n                    boxShadow={'none !important'}\n                    borderBottom={'1px solid #a6a6a6'}\n                    onChange={this.handleValidation}\n                  />\n                </Form.Field>\n                <Flex mb={[3,0]} flexDirection={'row'} alignItems={'center'}>\n                  <Checkbox onClick={ e => this.toggleCheckbox(e) } label={'I\\'ve read and accepted the'} required />\n                  <Link color={'blue'} hoverColor={'blue'} target={'_blank'} rel=\"nofollow noopener noreferrer\" href={\"https://www.iubenda.com/privacy-policy/61211749\"}>Privacy Policy</Link>\n                </Flex>\n                {this.state.message && this.state.message.length &&\n                  <Text.p py={0} mt={[2,3]} mb={3} textAlign={['center','left']} color={this.state.messageColor}>{this.state.message}</Text.p>\n                }\n              </Box>\n              <Box width={[1,3/10]} my={[0,'26px']}>\n                <Button className={styles.gradientButton} type=\"submit\" width={1}>\n                  GET UPDATES\n                </Button>\n              </Box>\n            </Flex>\n          </Form>\n        </Box>\n    );\n  }\n}\nexport default NewsletterForm;\n","import { Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\n\nclass RoundIconButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      p:0,\n      boxShadow:1,\n      width:'40px',\n      height:'40px',\n      mainColor:'white',\n      borderRadius:'50%',\n      disabled:this.props.disabled\n    },this.props.buttonProps);\n\n    buttonProps.minWidth = buttonProps.width;\n\n    return (\n       <RoundButton\n         buttonProps={buttonProps}\n         handleClick={this.props.handleClick}\n       >\n         <Icon\n           color={'copyColor'}\n           name={this.props.iconName}\n           size={ this.props.iconSize ? this.props.iconSize : '1.3em'}\n         />\n       </RoundButton>\n    );\n  }\n}\n\nexport default RoundIconButton;","import React, { Component } from 'react';\nimport { Flex, ToastMessage, Link, Icon } from \"rimble-ui\";\n\nclass FloatingToastMessage extends Component {\n  state = {}\n\n  render() {\n    let ToastComponent = null;\n\n    switch (this.props.variant){\n      case 'success':\n        ToastComponent = ToastMessage.Success;\n      break;\n      case 'processing':\n        ToastComponent = ToastMessage.Processing;\n      break;\n      case 'failure':\n        ToastComponent = ToastMessage.Failure;\n      break;\n      default:\n      break;\n    }\n\n    if (ToastComponent){\n      return (\n        <Flex width={ !this.props.isMobile ? '420px': '100vw' } position={'fixed'} zIndex={'9999'} p={ !this.props.isMobile ? '1em' : 0 } right={'0'} bottom={'0'}>\n          <ToastComponent\n            style={{width:'100%'}}\n            message={this.props.message}\n            secondaryMessage={this.props.secondaryMessage}\n            closeElem={false}\n          />\n          <Link onClick={this.props.handleClose} style={ this.props.isMobile ? {position:'absolute',top:'10px',right:'10px',width:'20px',height:'20px'} : {position:'absolute',top:'22px',right:'22px',width:'16px',height:'16px'}}>\n            <Icon\n              name={'Close'}\n              color={'dark-gray'}\n              size={ this.props.isMobile ? '20' : '16' }\n            />\n          </Link>\n        </Flex>\n      );\n    }\n\n    return null;\n  }\n}\n\nexport default FloatingToastMessage;","import Title from '../Title/Title';\nimport CountUp from 'react-countup';\nimport { Box, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsUnderManagement extends Component {\n\n  state = {\n    totalAUM:null,\n    totalAUMEndOfYear:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalAUM();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalAUM();\n    }\n  }\n\n  async loadTotalAUM(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const {\n      avgAPY,\n      totalAUM\n    } = await this.functionsUtil.getAggregatedStats();\n\n    const totalAUMEndOfYear = totalAUM.plus(totalAUM.times(avgAPY.div(100)));\n\n    this.setState({\n      totalAUM,\n      totalAUMEndOfYear\n    });\n  }\n\n  render() {\n    return this.state.totalAUM ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimals={4}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          duration={31536000}\n          start={parseFloat(this.state.totalAUM)}\n          end={parseFloat(this.state.totalAUMEndOfYear)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,4) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              style={ this.props.counterStyle ? this.props.counterStyle : {\n                display:'block',\n                color:'dark-gray',\n                whiteSpace:'nowrap',\n                fontFamily:this.props.theme.fonts.counter,\n                fontWeight:this.props.theme.fontWeights[5],\n                textAlign: this.props.isMobile ? 'center' : 'right',\n                fontSize: this.props.isMobile ? '1.6em' : this.props.theme.fontSizes[6]\n              }}\n              ref={countUpRef}\n            />\n          )}\n        </CountUp>\n        {\n          (typeof this.props.subtitle === 'undefined' || this.props.subtitle) && (\n            <Title\n              fontWeight={3}\n              fontSize={[2,2]}\n              color={'cellTitle'}\n              textAlign={['center','right']}\n              {...this.props.subtitleProps}\n            >\n              {\n                this.props.subtitle ? this.props.subtitle : (\n                  <Text.span fontWeight={'inherit'} color={'inherit'} fontSize={'inherit'}>Assets Under Management <Text.span color={'cellTitle'} fontWeight={3} fontSize={'70%'}>(V3 + V4)</Text.span></Text.span>\n                )\n              }\n            </Title>\n          )\n        }\n      </Box>\n    ) : null;\n  }\n}\n\nexport default AssetsUnderManagement;\n","import Faq from '../Faq/Faq';\nimport Title from '../Title/Title';\nimport Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport ExtLink from '../ExtLink/ExtLink';\nimport styles from './Landing.module.scss';\nimport FlexCards from '../FlexCards/FlexCards';\nimport AuditCard from '../AuditCard/AuditCard';\nimport HowItWorks from '../HowItWorks/HowItWorks';\nimport AssetField from '../AssetField/AssetField';\nimport RoundButton from '../RoundButton/RoundButton';\nimport StrategyBox from '../StrategyBox/StrategyBox';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport NewsletterForm from '../NewsletterForm/NewsletterForm';\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\nimport { Image, Flex, Box, Heading, Link, Text, Icon } from 'rimble-ui';\nimport FloatingToastMessage from '../FloatingToastMessage/FloatingToastMessage';\nimport AssetsUnderManagement from '../AssetsUnderManagement/AssetsUnderManagement';\n\nlet scrolling = false;\n\nclass Landing extends Component {\n  state = {\n    avgApr:null,\n    carouselMax:2,\n    carouselIndex:0,\n    activeCarousel:1,\n    runConfetti:false,\n    activeBullet:null,\n    protocolsAprs:null,\n    testPerformed:false,\n    totalAllocation:null,\n    carouselOffsetLeft:0,\n    setActiveCarousel:null,\n    carouselIntervalID:null,\n    protocolsAllocations:null,\n    randomAllocationEnabled:false,\n  };\n\n  // Clear all the timeouts\n  async componentWillUnmount(){\n\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  setActiveCarousel = (activeCarousel) => {\n    activeCarousel = activeCarousel<=3 ? activeCarousel : 1;\n    this.setState({activeCarousel});\n  }\n\n  async componentDidMount(){\n    this.props.processCustomParam(this.props);\n\n    if (this.props.contractsInitialized){\n      // await Promise.all([\n      //   this.getAprs(),\n      //   this.getAllocations()\n      // ]);\n    }\n  }\n\n  handleCarousel = action => {\n    let carouselIndex = this.state.carouselIndex;\n    if (action==='next' && carouselIndex<this.state.carouselMax){\n      carouselIndex++;\n    } else if (action==='back' && carouselIndex>0){\n      carouselIndex--;\n    }\n\n    const multiplier = this.props.isMobile ? 1 : 0.75;\n    const $element = window.jQuery(`#carousel-cursor > div:eq(${carouselIndex})`);\n    const carouselOffsetLeft = -parseFloat($element.position().left*multiplier)+'px';\n\n    this.setState({\n      carouselIndex,\n      carouselOffsetLeft\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n    this.props.processCustomParam(this.props,prevProps);\n\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n\n    if (contractsInitialized) {\n      // await Promise.all([\n      //   this.getAprs(),\n      //   this.getAllocations()\n      // ]);\n    }\n  }\n\n  processScrolling = () => {\n    if (scrolling){\n\n      const bulletCards = document.getElementsByClassName('bulletCard');\n      let activeBullet = 0;\n\n      for (let i=0;i<bulletCards.length;i++){\n        const bulletCard = bulletCards[i];\n        if (bulletCard && bulletCard.offsetParent){\n          const offsetY = bulletCard.offsetTop ? bulletCard.offsetTop : bulletCard.offsetParent.offsetTop;\n          if (window.scrollY >= offsetY-200){\n            activeBullet = i+2;\n          }\n        }\n      }\n      scrolling = false;\n\n      if (parseInt(activeBullet) !== parseInt(this.state.activeBullet)){\n        this.setState({activeBullet});\n      }\n    }\n  };\n\n  getAllocations = async () => {\n\n    let totalAllocation = this.functionsUtil.BNify(0);\n\n    const newState = {\n      avgApr: null,\n      totalAllocation:null,\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null\n    };\n\n    const exchangeRates = {};\n    const protocolsBalances = {};\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    await this.functionsUtil.asyncForEach(this.props.tokenConfig.protocols,async (protocolInfo,i) => {\n      const contractName = protocolInfo.token;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n\n      let [protocolBalance, tokenDecimals, exchangeRate] = await Promise.all([\n        this.functionsUtil.getProtocolBalance(contractName),\n        this.functionsUtil.getTokenDecimals(contractName),\n        ( protocolInfo.functions.exchangeRate ? this.functionsUtil.genericContractCall(contractName,protocolInfo.functions.exchangeRate.name,protocolInfo.functions.exchangeRate.params) : null )\n      ]);\n\n      if (!protocolBalance){\n        return;\n      }\n\n\n      if (exchangeRate && protocolInfo.decimals){\n        exchangeRates[protocolAddr] = exchangeRate;\n        exchangeRate = this.functionsUtil.fixTokenDecimals(exchangeRate,protocolInfo.decimals);\n      }\n\n      const protocolAllocation = this.functionsUtil.fixTokenDecimals(protocolBalance,tokenDecimals,exchangeRate);\n\n      totalAllocation = totalAllocation.plus(protocolAllocation);\n\n      protocolsBalances[protocolAddr] = protocolBalance;\n      protocolsAllocations[protocolAddr] = protocolAllocation;\n    });\n\n    if (this.state.randomAllocationEnabled){\n      let remainingAllocation = parseFloat(totalAllocation.toString());\n      const totProtocols = Object.keys(protocolsAllocations).length;\n      Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n        let alloc = parseFloat(protocolsAllocations[protocolAddr].toString());\n        if (i === totProtocols-1){\n          alloc = remainingAllocation;\n        } else {\n          alloc = parseFloat(Math.random()*(remainingAllocation-(remainingAllocation/3))+(remainingAllocation/3));\n          remainingAllocation -= alloc;\n        }\n        protocolsAllocations[protocolAddr] = this.functionsUtil.BNify(alloc);\n      });\n    }\n\n    Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n      const protocolAllocation = protocolsAllocations[protocolAddr];\n      const protocolAllocationPerc = protocolAllocation.div(totalAllocation);\n      protocolsAllocationsPerc[protocolAddr] = protocolAllocationPerc;\n    });\n\n    newState.totalAllocation = totalAllocation;\n    newState.protocolsAllocations = protocolsAllocations;\n    newState.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    if (this.state.protocolsAprs){\n      newState.avgApr = this.functionsUtil.getAvgApr(this.state.protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    this.setState(newState);\n\n    return newState;\n  }\n\n  getAprs = async () => {\n    const Aprs = await this.functionsUtil.genericIdleCall('getAPRs');\n\n    if (!Aprs){\n      return false;\n    }\n\n    const addresses = Aprs.addresses.map((addr,i) => { return addr.toString().toLowerCase() });\n    const aprs = Aprs.aprs;\n    const protocolsAprs = {};\n\n    this.props.tokenConfig.protocols.forEach((info,i) => {\n      // const protocolName = info.name;\n      const protocolAddr = info.address.toString().toLowerCase();\n      const addrIndex = addresses.indexOf(protocolAddr);\n      if ( addrIndex !== -1 ) {\n        const protocolApr = aprs[addrIndex];\n        protocolsAprs[protocolAddr] = this.functionsUtil.BNify(+this.functionsUtil.toEth(protocolApr));\n      }\n    });\n\n    const newState = {\n      avgApr: null,\n      protocolsAprs\n    };\n\n    if (this.state.protocolsAllocations && this.state.totalAllocation){\n      newState.avgApr = this.functionsUtil.getAvgApr(protocolsAprs,this.state.protocolsAllocations,this.state.totalAllocation);\n    }\n\n    this.setState(newState);\n    return newState;\n  };\n\n  startLending = async e => {\n    this.props.updateSelectedTab(e, '1');\n    window.location.href = '#invest';\n  }\n\n  setConfetti = (runConfetti) => {\n    this.setState({\n      runConfetti\n    })\n  }\n\n  connectAndGoToRoute = (route) => {\n\n    const goToLocation = () => {\n      window.location = \"/#\"+route;\n    }\n\n    if (this.props.account){\n      goToLocation();\n    } else {\n      this.props.connectAndValidateAccount(goToLocation);\n    }\n  }\n\n  render() {\n    const { network } = this.props;\n    const availableTokens = [];\n    Object.values(this.props.availableStrategies).forEach( tokens => {\n      Object.keys(tokens).forEach( token => {\n        if (availableTokens.indexOf(token) === -1){\n          availableTokens.push(token);\n        }\n      });\n    });\n    return (\n      <Box\n        height={'100vh'}\n        className={styles.mainViewport}\n        style={{\n          paddingBottom: !network.isCorrectNetwork ? \"8em\" : \"0\"\n        }}\n      >\n        <Box\n          pl={[3,5]}\n          pr={[3,0]}\n          pt={['2.5em', '3em']}\n          className={styles.headerContainer}\n          minHeight={ Math.max((this.props.innerHeight+this.props.innerHeight*0.025),768) }\n        >\n          <Box position={'relative'} zIndex={10}>\n            <Flex\n              overflow={'hidden'}\n              alignItems={'flex-start'}\n              flexDirection={['column','row']}\n              mt={['7em',Math.max(window.innerHeight*0.225,145)+'px']}\n            >\n              <Flex\n                width={[1,1/3]}\n                justifyContent={['center','flex-end']}\n              >\n                <Flex\n                  pb={3}\n                  width={1}\n                  textAlign={'center'}\n                  flexDirection={'column'}\n                  maxWidth={['50em', '24em']}\n                  alignItems={['center','flex-start']}\n                >\n                  <Heading.h1\n                    fontWeight={5}\n                    color={'white'}\n                    fontFamily={'sansSerif'}\n                    fontSize={['2.2em','3.2rem']}\n                    textAlign={['center','left']}\n                    lineHeight={['initial','2.5rem']}\n                    style={{\n                      width:'100%',\n                      textAlignLast: this.props.isMobile ? 'center' : 'justify'\n                    }}\n                  >\n                    The best place\n                  </Heading.h1>\n                  <Heading.h1\n                    mb={[2,3]}\n                    color={'white'}\n                    fontWeight={300}\n                    lineHeight={'initial'}\n                    fontFamily={'sansSerif'}\n                    fontSize={['2.2em','3.2rem']}\n                    textAlign={['center','left']}\n                    style={{\n                      width:'100%',\n                      textAlignLast: this.props.isMobile ? 'center' : 'justify'\n                    }}\n                  >\n                    for your money\n                  </Heading.h1>\n                  <Heading.h2\n                    style={{\n                      width:'100%',\n                    }}\n                    color={'white'}\n                    fontWeight={400}\n                    fontSize={[2,'1.2em']}\n                    textAlign={['center','justify']}\n                  >\n                    Choose your strategy and earn the yield you deserve without worry about finding the best option, either if you want to optimize returns or risks.\n                  </Heading.h2>\n                  {\n                    !this.props.isMobile && \n                      <Flex\n                        mt={4}\n                      >\n                        <RoundButton\n                          handleClick={ (e) => {\n                            window.location.hash = this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])+'/'+Object.keys(this.functionsUtil.getGlobalConfig(['strategies']))[0];\n                          }}\n                        >\n                          Go to Dashboard\n                        </RoundButton>\n                      </Flex>\n                  }\n                </Flex>\n              </Flex>\n              <Flex\n                mr={['auto',0]}\n                width={[1,2/3]}\n                ml={[0,'100px']}\n                textAlign={'center'}\n                position={'relative'}\n                flexDirection={'column'}\n                height={['415px','460px']}\n                justifyContent={['flex-start','flex-end']}\n              >\n                <Flex\n                  left={0}\n                  right={0}\n                  width={'100%'}\n                  height={'400px'}\n                  top={['initial','0']}\n                  position={'absolute'}\n                  bottom={['0','initial']}\n                  overflow={this.state.carouselIndex === 0 ? 'visible' : 'hidden'}\n                >\n                  <Flex\n                    top={['initial',0]}\n                    flexDirection={'row'}\n                    position={'absolute'}\n                    id={'carousel-cursor'}\n                    width={[Object.keys(globalConfigs.strategies).length*100+'%','140%']}\n                    height={['auto','400px']}\n                    bottom={['5px','initial']}\n                    justifyContent={'flex-start'}\n                    left={this.state.carouselOffsetLeft}\n                    style={{\n                      overflowY:'visible',\n                      transition:'left 0.3s ease-in-out'\n                    }}\n                  >\n                    {\n                      Object.keys(globalConfigs.strategies).map((strategy,strategyIndex) => (\n                        <StrategyBox\n                          {...this.props}\n                          strategy={strategy}\n                          key={`strategy_${strategy}`}\n                        />\n                      ))\n                    }\n                  </Flex>\n                </Flex>\n                <Flex\n                  width={1}\n                  mt={[0,'20px']}\n                  id={'carousel-container'}\n                  justifyContent={['center','flex-start']}\n                >\n                  <RoundIconButton\n                    buttonProps={{\n                      mr:[4,3]\n                    }}\n                    iconName={'ArrowBack'}\n                    disabled={this.state.carouselIndex === 0}\n                    handleClick={ e => this.handleCarousel('back') }\n                  />\n                  <RoundIconButton\n                    iconName={'ArrowForward'}\n                    handleClick={ e => this.handleCarousel('next') }\n                    disabled={this.state.carouselIndex === this.state.carouselMax}\n                  />\n                </Flex>\n              </Flex>\n            </Flex>\n          </Box>\n        </Box>\n\n        <HowItWorks />\n\n        <Box\n          mb={[3,4]}\n          pt={[4,5]}\n          pb={[4,4]}\n          id={'partners'}\n        >\n          <Box\n            mx={'auto'}\n            maxWidth={['50em','70em']}\n          >\n            <Title\n              mb={3}\n              mt={[3,4]}\n              fontWeight={5}\n              fontSize={[5,6]}\n              component={Heading.h4}\n            >\n              Audited and Battle-tested\n            </Title>\n            <Text\n              fontSize={[2,3]}\n              fontWeight={500}\n              color={'cellTitle'}\n              textAlign={'center'}\n            >\n              We take security very seriously, that's why our Smart-Contracts are fully Audited and battle-tested.\n            </Text>\n            <Flex\n              width={1}\n              px={[3,4]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <AssetsUnderManagement\n                {...this.props}\n                counterStyle={{\n                  display:'block',\n                  color:'dark-gray',\n                  overflow: 'hidden',\n                  textAlign: 'center',\n                  whiteSpace: 'nowrap',\n                  textOverflow: 'ellipsis',\n                  fontFamily:this.props.theme.fonts.counter,\n                  fontWeight:this.props.theme.fontWeights[5],\n                  fontSize: this.props.isMobile ? this.props.theme.fontSizes[5] : this.props.theme.fontSizes[8],\n                }}\n                subtitle={null}\n                subtitleProps={{\n                  textAlign:'center'\n                }}\n              />\n              <Link\n                mb={3}\n                target={'_blank'}\n                textAlign={'center'}\n                rel={'nofollow noopener noreferrer'}\n                href={'https://certificate.quantstamp.com/view/idle-finance'}\n              >\n                <Image\n                  width={'15em'}\n                  src={'images/quantstamp-badge.svg'}\n                />\n              </Link>\n              <Title\n                my={[2,3]}\n                mt={[3,4]}\n                fontWeight={3}\n                fontSize={[3,4]}\n                color={'dark-gray'}\n                component={Heading.h4}\n              >\n                Full Audit Report:\n              </Title>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <AuditCard\n                  title={'Idle Finance'}\n                  date={'August 12th 2020 — Quantstamp Verified'}\n                  link={'https://certificate.quantstamp.com/full/idle-finance'}\n                />\n                <AuditCard\n                  title={'Idle Goverance'}\n                  date={'November 17th 2020 — Quantstamp Verified'}\n                  link={'https://certificate.quantstamp.com/full/idle-goverance'}\n                />\n              </Flex>\n            </Flex>\n          </Box>\n        </Box>\n        <Box\n          mt={[4,5]}\n          px={[3,4]}\n          py={[4,5]}\n          id={'integrators'}\n          className={styles.gradientBackground}\n        >\n          <Box\n            mx={'auto'}\n            maxWidth={['50em','75em']}\n          >\n            <Title\n              mb={3}\n              fontWeight={5}\n              fontSize={[5,6]}\n              component={Heading.h4}\n            >\n              Build with Idle\n            </Title>\n            <Text\n              mb={3}\n              fontSize={[2,3]}\n              fontWeight={500}\n              color={'cellTitle'}\n              textAlign={'center'}\n            >\n              Just few lines of code to integrate the power of Idle into your dApp\n            </Text>\n            <Flex\n              mt={2}\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={['center','space-between']}\n            >\n              {\n                /*\n                <Flex\n                  mb={3}\n                  width={1}\n                  flexDirection={'column'}\n                  justifyContent={'center'}\n                  alignItems={['center','flex-start']}\n                >\n                  <FlexCards\n                    itemsPerRow={4}\n                    cards={[\n                      {\n                        link:'https://zerion.io',\n                        image:'images/integrators/zerion.svg'\n                      },\n                      {\n                        link:'https://gnosis.io',\n                        image:'images/integrators/gnosis.png'\n                      },\n                      {\n                        link:'https://cryptolocally.com',\n                        image:'images/integrators/cryptolocally.png'\n                      },\n                      {\n                        link:'https://www.peepsdemocracy.com',\n                        image:'images/integrators/peeps.png'\n                      }\n                    ]}\n                    {...this.props}\n                  />\n                </Flex>\n                */\n              }\n              <Flex\n                mt={2}\n                width={1}\n                flexDirection={['column','row']}\n                alignItems={['center','flex-start']}\n                justifyContent={['center','flex-start']}\n              >\n                <Flex\n                  mb={[3,0]}\n                  width={[1,0.5]}\n                  flexDirection={'column'}\n                  alignItems={['center','flex-start']}\n                  justifyContent={['center','flex-start']}\n                >\n                  <Title\n                    mb={3}\n                    fontWeight={5}\n                    component={Heading.h5}\n                    fontSize={[4,'1.75em']}\n                  >\n                    Designed for Developers\n                  </Title>\n\n                  <Text\n                    mb={3}\n                    pr={[0,5]}\n                    textAlign={['center','justify']}\n                  >\n                    A fully integrated suite of DeFi yield products easy to integrate into your dApp so your teams don't need to stitch together disparate protocols or spend months integrating and updating yield functionality.<br />One integration to rule them all.\n                  </Text>\n                  <Text\n                    mb={2}\n                    fontWeight={500}\n                  >\n                    Supported Assets:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    flexDirection={'row'}\n                  >\n                    {\n                      availableTokens.map( token => (\n                        <AssetField\n                          token={token}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:2,\n                              width:'2.2em',\n                              height:'2.2em'\n                            }\n                          }}\n                          key={`asset_${token}`}\n                        />\n                      ))\n                    }\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={['column','row']}\n                    justifyContent={['center','flex-start']}\n                  >\n                    <RoundButton\n                      buttonProps={{\n                        width:[1,'auto']\n                      }}\n                      handleClick={ (e) => {\n                        window.open('https://developers.idle.finance')\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'flex-end'}\n                        justifyContent={'center'}\n                      >\n                        <Text\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'white'}\n                        >\n                          Read the docs\n                        </Text>\n                        <Icon\n                          ml={2}\n                          size={'1.2em'}\n                          color={'white'}\n                          name={'KeyboardArrowRight'}\n                        />\n                      </Flex>\n                    </RoundButton>\n                    <Text\n                      mt={[2,0]}\n                      ml={[0,2]}\n                    >\n                      or\n                    </Text>\n                    <ExtLink\n                      mt={[2,0]}\n                      ml={[0,2]}\n                      fontSize={2}\n                      hoverColor={'primary'}\n                      href={'https://idlefinance.typeform.com/to/PUC7nO'}\n                    >\n                      Contact Us\n                    </ExtLink>\n                    {\n                      /*\n                      <RoundButton\n                        buttonProps={{\n                          ml:2,\n                          mainColor:'red',\n                          width:[1,'auto']\n                        }}\n                        handleClick={ (e) => {\n                          window.open('https://idlefinance.typeform.com/to/PUC7nO')\n                        }}\n                      >\n                        <Flex\n                          width={1}\n                          alignItems={'flex-end'}\n                          justifyContent={'center'}\n                        >\n                          <Text\n                            fontWeight={3}\n                            color={'white'}\n                            fontSize={[1,2]}\n                          >\n                            Contact us\n                          </Text>\n                          <Icon\n                            ml={2}\n                            name={'Send'}\n                            size={'1.2em'}\n                            color={'white'}\n                          />\n                        </Flex>\n                      </RoundButton>\n                      */\n                    }\n                  </Flex>\n                </Flex>\n                <Flex\n                  width={[1,0.5]}\n                >\n                  <iframe\n                    height={\"350\"}\n                    title={'integrate'}\n                    style={{\n                      border:'0',\n                      width: '100%',\n                      height: '350px',\n                      overflow:'hidden',\n                      transform: 'scale(1)',\n                    }}\n                    sandbox={\"allow-scripts allow-same-origin\"}\n                    src={\"https://carbon.now.sh/embed?bg=rgba%28255%2C255%2C255%2C0%29&t=cobalt&wt=none&l=auto&ds=false&dsyoff=20px&dsblur=68px&wc=true&wa=true&pv=0px&ph=0px&ln=false&fl=1&fm=Fira+Code&fs=13.5px&lh=143%25&si=false&es=2x&wm=false&code=const%2520idleTokenAbi%2520%253D%2520require%28%27idleToken.json%27%29%253B%2520%252F%252F%2520Include%2520idleToken%2520ABI%250Aconst%2520user%2520%253D%2520%270x...%27%253B%2520%252F%252F%2520set%2520user%2520address%2520%250Aconst%2520idleDAI%2520%253D%2520%270x3fE7940616e5Bc47b0775a0dccf6237893353bB4%27%253B%2520%252F%252F%2520idleDAIYield%2520address%250A%250A%252F%252F%2520Initialize%2520web3%2520contract%250Aconst%2520idleToken%2520%253D%2520new%2520web3.eth.Contract%28idleTokenAbi%252C%2520idleDAI%29%253B%250A%250A%252F%252F%2520Approve%2520contract%250Aconst%2520_amount%2520%253D%2520%271000000000000000000%27%253B%2520%252F%252F%25201%2520DAI%250Aawait%2520idleToken.approve%28idleTokenAddress%252C%2520_amount%252C%2520%257B%2520from%253A%2520user%2520%257D%29%253B%250A%250A%252F%252F%2520Deposit%2520tokens%250Aawait%2520idleToken.mintIdleToken%28_amount%252C%2520true%252C%2520user%252C%2520%257B%2520from%253A%2520user%2520%257D%29%253B\"}\n                  >\n                  </iframe>\n                </Flex>\n              </Flex>\n            </Flex>\n          </Box>\n        </Box>\n\n        <Box\n          pt={[4,5]}\n          pb={[4,4]}\n          id={'investors'}\n        >\n          <Box\n            mx={'auto'}\n            maxWidth={['50em','70em']}\n          >\n            <Title\n              mb={3}\n              mt={[3,4]}\n              fontWeight={5}\n              fontSize={[5,6]}\n              component={Heading.h4}\n            >\n              Backed By\n            </Title>\n            <Text\n              mb={3}\n              fontSize={[2,3]}\n              fontWeight={500}\n              color={'cellTitle'}\n              textAlign={'center'}\n            >\n              Idle has been funded by industry leaders\n            </Text>\n            <FlexCards\n              justifyContent={'center'}\n              itemsPerRow={4}\n              cards={[\n                {\n                  link:'https://consensys.net',\n                  image:'images/investors/consensys.png'\n                },\n                {\n                  link:'https://www.gumi-cryptos.com',\n                  image:'images/investors/gumi.png'\n                },\n                {\n                  link:'https://www.greenfield.one',\n                  image:'images/investors/greenfield.png'\n                },\n                /*\n                {\n                  link:'https://quantstamp.com',\n                  image:'images/investors/quantstamp.png'\n                },\n                */\n                {\n                  link:'https://dialectic.ch',\n                  image:'images/investors/dialectic.png'\n                },\n                {\n                  link:'https://www.thelao.io',\n                  image:'images/investors/the-lao.png'\n                },\n                {\n                  link:'https://br.capital',\n                  image:'images/investors/br-capital.png'\n                },\n                {\n                  link:'https://www.longhashventures.com',\n                  image:'images/investors/lh-ventures.png'\n                },\n              ]}\n              {...this.props}\n            />\n          </Box>\n        </Box>\n\n        <Box\n          pt={[4,5]}\n          pb={[4,4]}\n          id={'protocols'}\n        >\n          <Box\n            mx={'auto'}\n            maxWidth={['50em','70em']}\n          >\n            <Title\n              mb={3}\n              mt={[3,4]}\n              fontWeight={5}\n              fontSize={[5,6]}\n              component={Heading.h4}\n            >\n              Built with the best\n            </Title>\n            <Text\n              mb={3}\n              fontSize={[2,3]}\n              fontWeight={500}\n              color={'cellTitle'}\n              textAlign={'center'}\n            >\n              Idle infrastructure rely on the most powerful DeFi protocols\n            </Text>\n            <FlexCards\n              cards={[\n                {\n                  link:'https://app.compound.finance',\n                  image:'images/partners/compound.svg'\n                },\n                /*\n                {\n                  link:'https://fulcrum.trade',\n                  image:'images/partners/fulcrum.svg'\n                },\n                */\n                {\n                  link:'https://aave.com',\n                  image:'images/partners/aave.svg'\n                },\n                {\n                  link:'https://dydx.exchange',\n                  image:'images/partners/dydx.svg'\n                },\n                {\n                  link:'https://oasis.app/',\n                  image:'images/partners/oasis.png'\n                },\n              ]}\n              {...this.props}\n            />\n          </Box>\n        </Box>\n\n        <Box id=\"faq\" pt={[4,5]} pb={[4,6]}>\n          <Box maxWidth={['50em','60em']} mx={'auto'} px={[3,5]}>\n            <Faq selectedToken={this.props.selectedToken} tokenConfig={this.props.tokenConfig} />\n          </Box>\n        </Box>\n\n        <Flex id=\"contacts\" flexDirection={'column'} position={'relative'} justifyContent={'center'} alignItems={'center'} pb={[3,6]} px={[3,6]}>\n          <Flex flexDirection={'column'} justifyContent={['center','flex-start']} alignItems={['center','flex-start']} width={1} maxWidth={['35em','70em']}>\n            <Heading.h3 color={'blue'} textAlign={['center','left']} fontWeight={4} lineHeight={'initial'} fontSize={[4,5]}>\n              Don't be shy, let's talk.\n            </Heading.h3>\n            <Heading.h3 color={'dark-gray'} textAlign={['center','left']} fontWeight={4} lineHeight={'initial'} fontSize={[4,5]}>\n              Let's build something great together.\n            </Heading.h3>\n            <NewsletterForm />\n          </Flex>\n        </Flex>\n\n        <Footer tokenConfig={this.props.tokenConfig} />\n\n        {\n          this.props.toastMessageProps &&\n            <FloatingToastMessage isMobile={this.props.isMobile} {...this.props.toastMessageProps} handleClose={this.props.closeToastMessage} />\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Landing;\n","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport { Link as RouterLink } from \"react-router-dom\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Icon, Text, Image } from 'rimble-ui';\n\nclass DashboardMenu extends Component {\n  state = {\n    buyModalOpened:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setBuyModalOpened(buyModalOpened){\n    this.setState({\n      buyModalOpened\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    if (!this.props.menu.length){\n      return null;\n    }\n\n    const visibleLinks = this.props.menu.filter(menuLink => {\n      const showMobile = menuLink.mobile === undefined || menuLink.mobile;\n      return !this.props.isMobile || showMobile;\n    });\n\n    if (!visibleLinks.length){\n      return null;\n    }\n\n    return (\n      <Flex\n        p={0}\n        flexDirection={['row','column']}\n      >\n        {\n          !this.props.isMobile &&\n            <Flex\n              p={3}\n              mb={3}\n              flexDirection={'row'}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <RouterLink to=\"/\">\n                <Image\n                  position={'relative'}\n                  height={['35px','38px']}\n                  src=\"images/logo-gradient.svg\"\n                />\n              </RouterLink>\n            </Flex>\n        }\n        {\n          visibleLinks.map((menuLink,menuIndex) => {\n            const isExternalLink = menuLink.isExternalLink;\n            const LinkComponent = isExternalLink ? ExtLink : RouterLink;\n            return (\n              <Box\n                my={[0,3]}\n                key={`menu-${menuIndex}`}\n                width={[1/visibleLinks.length,'auto']}\n              >\n                <LinkComponent\n                  to={menuLink.route}\n                  href={menuLink.route}\n                  style={{textDecoration:'none'}}\n                >\n                  <Flex\n                    p={[2,3]}\n                    borderRadius={[0,2]}\n                    flexDirection={'row'}\n                    alignItems={'center'}\n                    backgroundColor={ menuLink.selected ? '#f3f6ff' : 'transparent' }\n                    boxShadow={menuLink.selected ? '0px 0px 0px 1px rgba(0,54,255,0.3)' : null}\n                  >\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={['column','row']}\n                      justifyContent={['center','flex-start']}\n                    >\n                      {menuLink.image &&\n                        <Image\n                          mr={[0,3]}\n                          ml={[0,2]}\n                          mb={[1,0]}\n                          align={'center'}\n                          src={ menuLink.selected ? menuLink.image : (menuLink.imageInactive ? menuLink.imageInactive : menuLink.image)}\n                          height={['1.2em','1.6em']}\n                        />\n                      }\n                      {menuLink.icon &&\n                        <Icon\n                          mr={[0,3]}\n                          ml={[0,2]}\n                          mb={[1,0]}\n                          align={'center'}\n                          name={menuLink.icon}\n                          size={ this.props.isMobile ? '1.4em' : '1.6em' }\n                          color={ menuLink.selected ? menuLink.bgColor : 'copyColor' }\n                        />\n                      }\n                      <Text\n                        fontWeight={3}\n                        color={'copyColor'}\n                        textAlign={'center'}\n                        fontSize={['11px',2]}\n                        style={{\n                          whiteSpace:'nowrap'\n                        }}\n                      >\n                        {menuLink.label}\n                      </Text>\n                    </Flex>\n                  </Flex>\n                </LinkComponent>\n                {\n                  /*\n                  menuLink.submenu.length>0 && (\n                    <Flex className={[styles.submenu]} style={{maxHeight:menuLink.selected ? menuLink.submenu.length*36+'px' : '0' }} flexDirection={'column'} borderLeft={ menuLink.selected ? '2px solid rgba(0,0,0,0.3)' : null }>\n                      {\n                        menuLink.submenu.map((submenuLink,submenuIndex) => {\n                          return (\n                            <RouterLink key={`submenu-${menuIndex}-${submenuIndex}`} to={`${menuLink.route}/${submenuLink.route}`} style={{textDecoration:'none'}}>\n                              <Flex py={2} pl={'40px'} flexDirection={'row'} alignItems={'center'}>\n                                <Text fontSize={'0.85rem'}>{submenuLink.label}</Text>\n                              </Flex>\n                            </RouterLink>\n                          )\n                        })\n                      }\n                    </Flex>\n                  )\n                  */\n                }\n              </Box>\n            );\n          })\n        }\n        {\n        /*\n        !this.props.isMobile  &&\n          <Box\n            width={'auto'}\n            borderTop={`1px solid ${theme.colors.divider}`}\n          >\n            <Flex\n              p={[2,3]}\n              style={{\n                cursor:'pointer'\n              }}\n              borderRadius={[0,2]}\n              flexDirection={'row'}\n              alignItems={'center'}\n              onClick={ e => this.setBuyModalOpened(true) }\n            >\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={['column','row']}\n                justifyContent={['center','flex-start']}\n              >\n                <Icon\n                  mr={[0,3]}\n                  ml={[0,2]}\n                  mb={[1,0]}\n                  size={'1.6em'}\n                  align={'center'}\n                  color={'copyColor'}\n                  name={'AddCircleOutline'}\n                />\n                <Text\n                  fontWeight={3}\n                  fontSize={[0,2]}\n                  color={'copyColor'}\n                  textAlign={'center'}\n                  style={{\n                    whiteSpace:'nowrap'\n                  }}\n                >\n                  Add Funds\n                </Text>\n              </Flex>\n            </Flex>\n          </Box>\n        <BuyModal\n          {...this.props}\n          isOpen={this.state.buyModalOpened}\n          closeModal={ e => this.setBuyModalOpened(false) }\n        />\n        */\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default DashboardMenu;","import moment from 'moment';\nimport theme from '../theme';\nimport { Bar } from '@nivo/bar';\nimport { Line } from '@nivo/line';\nimport React, { Component } from 'react';\nimport { Flex, Text, Box } from 'rimble-ui';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass StatsChart extends Component {\n  state = {\n    chartProps:{},\n    chartType:null,\n    chartData:null,\n    chartWidth:null\n  };\n\n  async componentDidMount() {\n    this.setState({\n      chartData:null,\n      chartType:null,\n      chartProps:null,\n    });\n    this.loadUtils();\n    this.loadApiData();\n  }\n\n  async componentDidUpdate(prevProps) {\n    const showAdvancedChanged = prevProps.showAdvanced !== this.props.showAdvanced;\n    const apiResultsChanged = prevProps.apiResults !== this.props.apiResults;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (apiResultsChanged || showAdvancedChanged || tokenChanged){\n      this.componentDidMount();\n    }\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  parseAum = value => {\n    return (parseInt(value)>=1000 ? parseFloat(value/1000).toFixed(1)+'K' : parseFloat(value) )+' '+this.props.selectedToken\n  }\n\n  loadApiData = async () => {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken || !this.props.chartMode || !this.props.apiResults){\n      return false;\n    }\n\n    const CustomTooltipRow = props => (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n\n    const CustomTooltip = props => {\n      return (\n        <DashboardCard\n          key={props.point.id}\n          cardProps={{\n            py:2,\n            px:3,\n            width:1,\n            left: props.point.data.itemPos>50 ? '-110%' : '0'\n          }}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            {\n              props.point.data.xFormatted && \n                <Text\n                  mb={2}\n                  fontSize={1}\n                  fontWeight={3}\n                  color={'cellText'}\n                  textAlign={'left'}\n                >\n                  {props.point.data.xFormatted}\n                </Text>\n            }\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const maxGridLines = 4;\n    const apiResults = this.props.apiResults;\n    const apiResults_unfiltered = this.props.apiResults_unfiltered;\n    const totalItems = apiResults.length;\n    const protocols = Object.assign([],this.props.tokenConfig.protocols);\n    // const compoundProtocol = this.props.tokenConfig.protocols.find( p => (p.name === 'compound'));\n\n    const versionInfo = globalConfigs.stats.versions[this.props.idleVersion];\n\n    let keys = {};\n    let tempData = {};\n    let gridYStep = 0;\n    let itemIndex = 0;\n    let chartData = [];\n    let chartProps = {};\n    let chartType = Line;\n    let gridYValues = [];\n    let maxChartValue = 0;\n    let axisBottomIndex = 0;\n    let idleChartData = null;\n    let firstIdleBlock = null;\n\n    switch (this.props.chartMode){\n      case 'VOL':\n        let divergingData = {};\n\n        const startTimestamp = parseInt(apiResults_unfiltered[0].timestamp);\n        const endTimestamp = parseInt(moment()._d.getTime()/1000);\n\n        for (let timestamp=startTimestamp;timestamp<=endTimestamp;timestamp+=86400){\n          const date = moment(timestamp*1000).format(\"YYYY/MM/DD\");\n          if (!divergingData[date]){\n            divergingData[date] = {\n              date,\n              timestamp,\n              deposits: 0,\n              redeems: 0\n            };\n          }\n        }\n\n        let lastRow = null;\n        apiResults_unfiltered.forEach(row => {\n          const date = moment(row.timestamp*1000).format(\"YYYY/MM/DD\");\n          const idleTokens = this.functionsUtil.fixTokenDecimals(row.idleSupply,18);\n\n          if (!divergingData[date]){\n            divergingData[date] = {\n              date,\n              timestamp:row.timestamp,\n              deposits: 0,\n              redeems: 0\n            };\n          }\n\n          if (lastRow){\n            const idleTokensPrev = this.functionsUtil.fixTokenDecimals(lastRow.idleSupply,18);\n            const idleTokensDiff = !idleTokens.eq(idleTokensPrev);\n            if (idleTokensDiff){\n              const diff = idleTokens.minus(idleTokensPrev);\n              // Deposits\n              if (diff.gte(0)){\n                divergingData[date].deposits+=parseFloat(diff);\n                maxChartValue = Math.max(maxChartValue,divergingData[date].deposits);\n              } else {\n                divergingData[date].redeems+=parseFloat(diff);\n                maxChartValue = Math.max(maxChartValue,Math.abs(divergingData[date].deposits));\n              }\n            }\n\n          } else {\n            divergingData[date].deposits+=parseFloat(idleTokens);\n          }\n\n          lastRow = row;\n        });\n\n        chartData = Object.values(divergingData).filter(v => {\n          return (!this.props.startTimestamp || v.timestamp>=this.props.startTimestamp) && (!this.props.endTimestamp || v.timestamp<=this.props.endTimestamp);\n        });\n\n        let maxRange = 0;\n        chartData.forEach(v => {\n          maxRange = Math.max(maxRange,Math.abs(v.deposits),Math.abs(v.redeems));\n        })\n\n        chartType = Bar;\n\n        axisBottomIndex = 0;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartProps = {\n          indexBy: 'date',\n          enableLabel: false,\n          minValue:-maxRange,\n          maxValue:maxRange,\n          label: d => {\n            return Math.abs(d.value);\n          },\n          axisBottom: this.props.isMobile ? null : {\n            tickSize: 0,\n            legend: '',\n            format: (value) => {\n              if (axisBottomIndex++ % 3 === 0){\n                return moment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n              }\n            },\n            tickPadding: 15,\n            orient: 'bottom',\n            legendOffset: 0,\n            legendPosition: 'middle',\n            tickValues: 'every 3 days',\n          },\n          axisLeft: null,\n          axisRight: {\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:8,\n            legendPosition: 'middle',\n            format: v => this.functionsUtil.abbreviateNumber(Math.abs(v),0)\n          },\n          markers: [\n            {\n              axis: 'y',\n              value: 0,\n              lineStyle: { strokeOpacity: 0 },\n              textStyle: { fill: theme.colors.transactions.action.deposit },\n              legend: 'deposits',\n              legendPosition: 'top-left',\n              legendOrientation: 'vertical',\n              // legendOffsetY: 120,\n              legendOffsetX: -20\n            },\n            {\n              axis: 'y',\n              value: 0,\n              lineStyle: { stroke: theme.colors['dark-gray'], strokeDasharray: '5 3' },\n              textStyle: { fill: theme.colors.transactions.action.redeem },\n              legend: 'redeems',\n              legendPosition: 'bottom-left',\n              legendOrientation: 'vertical',\n              // legendOffsetY: 120,\n              legendOffsetX: -20\n            },\n          ],\n          keys:['deposits','redeems'],\n          padding:0.4,\n          colors:[theme.colors.transactions.action.deposit, theme.colors.transactions.action.redeem],\n          labelTextColor: 'inherit:darker(1.4)',\n          labelSkipWidth: 16,\n          labelSkipHeight: 16,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'linear',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              dataFrom:'keys',\n              itemWidth: this.props.isMobile ? 80 : 100,\n              itemHeight: 18,\n              translateX: 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 0,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            },\n            tooltip:{\n              container:{\n                boxShadow:null,\n                background:null\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 50, bottom: 45, left: 50 } : { top: 20, right: 70, bottom: 70, left: 50 },\n          tooltip:(data) => {\n            const xFormatted = this.functionsUtil.strToMoment(data.indexValue).format('MMM DD');\n            const point = {\n              id:data.id,\n              data:{\n                xFormatted\n              }\n            };\n            const depositFormatted = this.functionsUtil.abbreviateNumber(data.data.deposits,2)+' '+this.props.selectedToken;\n            const redeemFormatted = this.functionsUtil.abbreviateNumber(data.data.redeems,2)+' '+this.props.selectedToken;\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                <CustomTooltipRow\n                  label={'Deposits'}\n                  color={theme.colors.deposit}\n                  value={depositFormatted}\n                />\n                <CustomTooltipRow\n                  label={'Redeem'}\n                  color={theme.colors.redeem}\n                  value={redeemFormatted}\n                />\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      /*\n      case 'AUM_ALL':\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens[globalConfigs.network.requiredNetwork]),async (tokenName,i) => {\n          const tokenConfig = availableTokens[globalConfigs.network.requiredNetwork][tokenName];\n          const tokenDataApi = await this.props.getTokenData(tokenConfig.address);\n          chartData.push({\n            id:tokenName,\n            color: tokenConfig.color,\n            data: tokenDataApi.map((d,i) => {\n              const idleTokens = this.functionsUtil.fixTokenDecimals(d.idleSupply,18);\n              const idlePrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,tokenConfig.decimals);\n              const aum = idleTokens.times(idlePrice);\n              return {\n                x: moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\"),\n                y: parseInt(aum.toString())\n              };\n            })\n          });\n        });\n\n        // Set chart type\n        chartType = Line;\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'hour',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => (parseInt(value)>=1000 ? parseFloat(value/1000).toFixed(1)+'K' : parseFloat(value) )+' '+this.props.selectedToken,\n          yScale:{\n            type: 'linear',\n            stacked: false\n          },\n          axisLeft:{\n            format: v => this.functionsUtil.abbreviateNumber(v),\n            orient: 'left',\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: '',\n            legendOffset: -65,\n            legendPosition: 'middle'\n          },\n          axisBottom: this.props.isMobile ? null : {\n            format: '%b %d',\n            tickValues: this.props.isMobile ? 'every 4 days' : 'every 3 days',\n            orient: 'bottom',\n            legend: '',\n            legendOffset: 36,\n            legendPosition: 'middle'\n          },\n          enableArea:false,\n          curve:\"linear\",\n          enableSlices:'x',\n          enableGridX:true,\n          enableGridY:false,\n          colors:d => d.color,\n          pointSize:0,\n          pointColor:{ from: 'color', modifiers: []},\n          pointBorderWidth:1,\n          pointLabel:\"y\",\n          pointLabelYOffset:-12,\n          useMesh:true,\n          animate:false,\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 50 } : { top: 20, right: 60, bottom: 40, left: 60 },\n        };\n      break;\n      */\n      case 'AUM':\n\n        maxChartValue = 0;\n\n        chartData.push({\n          id:'AUM',\n          color: 'hsl('+globalConfigs.stats.tokens[this.props.selectedToken].color.hsl.join(',')+')',\n          data: apiResults.map((d,i) => {\n            const idleTokens = this.functionsUtil.fixTokenDecimals(d.idleSupply,18);\n            const idlePrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n            const aum = idleTokens.times(idlePrice);\n            const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const y = parseFloat(aum.toString());\n\n            maxChartValue = Math.max(maxChartValue,y);\n\n            return { x,y };\n          })\n        });\n\n        // Add allocation\n        this.props.tokenConfig.protocols.forEach((p,j) => {\n          apiResults.map((d,i) => {\n            return d.protocolsData.filter((protocolAllocation,x) => {\n                return protocolAllocation.protocolAddr.toLowerCase() === p.address.toLowerCase()\n            })\n            .map((protocolAllocation,z) => {\n              const protocolPaused = this.functionsUtil.BNify(protocolAllocation.rate).eq(0);\n              if (!protocolPaused){\n                const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                let y = parseFloat(this.functionsUtil.fixTokenDecimals(protocolAllocation.allocation,this.props.tokenConfig.decimals));\n\n                maxChartValue = Math.max(maxChartValue,y);\n\n                let foundItem = chartData[0].data.filter(item => { return item.x === x });\n                if (foundItem){\n                  foundItem = foundItem[0];\n                  const pos = chartData[0].data.indexOf(foundItem);\n                  if (!foundItem.allocations){\n                    foundItem.allocations = {};\n                  }\n                  foundItem.allocations[p.name] = y;\n                  chartData[0].data[pos] = foundItem;\n                }\n              }\n              return undefined;\n            })[0]\n          }).filter((v) => { return v !== undefined; } )\n        });\n\n        // Set chart type\n        chartType = Line;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'hour',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:v => this.functionsUtil.formatMoney(v,v<1 ? 3 :0),\n          yScale:{\n            type: 'linear',\n            stacked: false\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format: v => this.functionsUtil.abbreviateNumber(v,v<1 ? 3 :0),\n          },\n          axisBottom: this.props.isMobile ? null : {\n            tickSize: 0,\n            format: '%b %d',\n            tickPadding: 15,\n            tickValues: this.props.isMobile ? 'every 4 days' : ( this.props.showAdvanced ? 'every 3 days' : 'every 2 days'),\n            orient: 'bottom',\n            legend: '',\n            legendOffset: 0,\n            legendPosition: 'middle'\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'linear',\n          enableArea:true,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemWidth: this.props.isMobile ? 70 : 80,\n              itemHeight: 18,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 5,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 70, left: 70 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            if (typeof point === 'object' && typeof point.data === 'object'){\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  <CustomTooltipRow\n                    label={point.serieId}\n                    color={point.serieColor}\n                    value={point.data.yFormatted}\n                  />\n                  {\n                    point.data.allocations && typeof point.data.allocations === 'object' &&\n                      Object.keys(point.data.allocations).map(protocolName => {\n                        const protocolColor = 'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')';\n                        const protocolAllocation = point.data.allocations[protocolName];\n                        const protocolAllocationFormatted = this.functionsUtil.formatMoney(protocolAllocation,protocolAllocation<1 ? 3 : 0);\n                        const protocolAllocationPerc = this.functionsUtil.BNify(point.data.allocations[protocolName]).div(this.functionsUtil.BNify(point.data.y)).times(100).toFixed(0)+'%';\n                        return (\n                          <CustomTooltipRow\n                            label={protocolName}\n                            color={protocolColor}\n                            key={`${point.id}_${protocolName}`}\n                            value={`${protocolAllocationFormatted} (${protocolAllocationPerc})`}\n                          />\n                        );\n                      })\n                  }\n                </CustomTooltip>\n              );\n              /*\n              return (\n                <div\n                    key={point.id}\n                    style={{\n                      background: 'white',\n                      color: 'inherit',\n                      fontSize: 'inherit',\n                      borderRadius: '2px',\n                      boxShadow: 'rgba(0, 0, 0, 0.25) 0px 1px 2px',\n                      padding: '5px 9px'\n                    }}\n                >\n                  <div>\n                    <table style={{width:'100%',borderCollapse:'collapse'}}>\n                      <tbody>\n                        <tr>\n                          <td style={{padding:'3px 5px'}}>\n                            <span style={{display:'block', width: '12px', height: '12px', background: point.serieColor}}></span>\n                          </td>\n                          <td style={{padding:'3px 5px'}}>{point.serieId}</td>\n                          <td style={{padding:'3px 5px'}}><strong>{point.data.yFormatted}</strong></td>\n                        </tr>\n                        {\n                          point.data.allocations && typeof point.data.allocations === 'object' &&\n                            Object.keys(point.data.allocations).map(protocolName => {\n                              const protocolColor = 'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')';\n                              const protocolAllocation = this.functionsUtil.formatMoney(point.data.allocations[protocolName],0);\n                              const protocolAllocationPerc = this.functionsUtil.BNify(point.data.allocations[protocolName]).div(this.functionsUtil.BNify(point.data.y)).times(100).toFixed(0)+'%';\n                              return (\n                                <tr key={`${point.id}_${protocolName}`}>\n                                  <td style={{padding:'3px 5px'}}>\n                                    <span style={{display:'block', width: '12px', height: '12px', background: protocolColor}}></span>\n                                  </td>\n                                  <td style={{padding:'3px 5px',textTransform:'capitalize'}}>{protocolName}</td>\n                                  <td style={{padding:'3px 5px'}}><strong>{protocolAllocation}</strong> ({protocolAllocationPerc})</td>\n                                </tr>\n                              );\n                            })\n                        }\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              );\n              */\n            }\n\n            return null;\n          }\n        };\n      break;\n      case 'ALL':\n        keys = {};\n        tempData = {};\n\n        apiResults.forEach((d,i) => {\n          const date = moment(d.timestamp*1000).format(\"YYYY/MM/DD\");\n\n          let row = {\n            date\n          };\n\n          d.protocolsData.forEach((protocolData) => {\n            const protocolPaused = this.functionsUtil.BNify(protocolData.rate).eq(0);\n            const foundProtocol = this.props.tokenConfig.protocols.find((p) => { return p.address.toLowerCase() === protocolData.protocolAddr.toLowerCase() });\n            if (foundProtocol){\n              const protocolName = this.functionsUtil.capitalize(foundProtocol.name);\n              if (!protocolPaused){\n                let allocation = parseFloat(this.functionsUtil.fixTokenDecimals(protocolData.allocation,this.props.tokenConfig.decimals));\n                keys[protocolName] = 1;\n                row[protocolName] = allocation;\n                row[`${protocolName}Color`] = 'hsl('+globalConfigs.stats.protocols[protocolName.toLowerCase()].color.hsl.join(',')+')';\n                // console.log(protocolName,this.functionsUtil.BNify(protocolData.allocation).toString(),this.props.tokenConfig.decimals,allocation);\n                maxChartValue = Math.max(maxChartValue,allocation);\n              } else {\n                row[protocolName] = 0;\n              }\n            }\n          });\n\n\n          tempData[date] = row;\n        });\n\n        chartData = Object.values(tempData);\n\n        // Set chart type\n        chartType = Bar;\n\n        axisBottomIndex = 0;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartProps = {\n          padding: 0.2,\n          animate: false,\n          indexBy: 'date',\n          enableLabel: false,\n          labelSkipWidth: 16,\n          labelSkipHeight: 16,\n          keys: Object.keys(keys),\n          labelTextColor: 'inherit:darker(1.4)',\n          colors: ({ id, data }) => data[`${id}Color`],\n          axisLeft:{\n            format: v => this.functionsUtil.abbreviateNumber(v,v<1 ? 3 :0),\n            orient: 'left',\n            tickSize: 0,\n            tickPadding: 10,\n            tickRotation: 0,\n            legend: '',\n            legendOffset: -65,\n            tickValues:gridYValues,\n            legendPosition: 'middle'\n          },\n          gridYValues,\n          axisBottom: this.props.isMobile ? null : {\n            legend: '',\n            format: (value) => {\n              if (axisBottomIndex++ % 3 === 0){\n                return moment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n              }\n            },\n            tickSize: 0,\n            tickPadding: 10,\n            orient: 'bottom-left',\n            legendOffset: 36,\n            legendPosition: 'middle',\n            tickValues: 'every 3 days'\n          },\n          legends:[\n            {\n              dataFrom:'keys',\n              itemWidth: this.props.isMobile ? 70 : 80,\n              itemHeight: 18,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 5,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize:this.props.isMobile ? 12 : 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize:this.props.isMobile ? 12 : 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 70, left: 60 },\n          tooltip:({ id, value, color }) => {\n            const allocation = this.functionsUtil.formatMoney(value,0);\n            return (\n              <table style={{width:'100%',borderCollapse:'collapse'}}>\n                <tbody>\n                  <tr>\n                    <td style={{padding:'3px 5px'}}>\n                      <span style={{display:'block', width: '12px', height: '12px', background: color}}></span>\n                    </td>\n                    <td style={{padding:'3px 5px',textTransform:'capitalize'}}>{id}</td>\n                    <td style={{padding:'3px 5px'}}><strong>{allocation} {this.props.selectedToken}</strong></td>\n                  </tr>\n                </tbody>\n              </table>\n            )\n          }\n        }\n      break;\n      case 'ALL_PERC':\n        keys = {};\n        tempData = {};\n\n        apiResults.forEach((d,i) => {\n          const date = moment(d.timestamp*1000).format(\"YYYY/MM/DD\")\n          let row = {\n            date:moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\")\n          };\n          if (tempData[date]){\n            row = tempData[date];\n          }\n\n          const totalAllocation = d.protocolsData.reduce((accumulator,protocolAllocation) => {\n            const allocation = this.functionsUtil.fixTokenDecimals(protocolAllocation.allocation,this.props.tokenConfig.decimals);\n            return this.functionsUtil.BNify(accumulator).plus(allocation);\n          },0);\n\n          d.protocolsData.forEach((protocolData) => {\n            const protocolPaused = this.functionsUtil.BNify(protocolData.rate).eq(0);\n            const protocolName = this.props.tokenConfig.protocols.filter((p) => { return p.address.toLowerCase() === protocolData.protocolAddr.toLowerCase() })[0].name;\n            if (!protocolPaused){\n              const allocation = this.functionsUtil.fixTokenDecimals(protocolData.allocation,this.props.tokenConfig.decimals);\n              const allocationPerc = parseFloat(allocation.div(totalAllocation).times(100));\n              keys[protocolName] = 1;\n              row[protocolName] = allocationPerc;\n              row[`${protocolName}Color`] = 'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')';\n            } else if (typeof row[protocolName] !== undefined) {\n              row[protocolName] = 0;\n            } \n          });\n          \n          tempData[date] = row;\n        });\n\n        chartData = Object.values(tempData);\n\n        // Set chart type\n        chartType = Bar;\n\n        axisBottomIndex = 0;\n\n        chartProps = {\n          padding: 0.2,\n          animate: false,\n          indexBy: 'date',\n          data: chartData,\n          enableLabel: false,\n          labelSkipWidth: 16,\n          labelSkipHeight: 16,\n          keys: Object.keys(keys),\n          labelTextColor: 'inherit:darker(1.4)',\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 50 } : { top: 20, right: 40, bottom: 40, left: 60 },\n          colors: ({ id, data }) => data[`${id}Color`],\n          axisLeft:{\n            format: v => parseInt(v)+'%'\n          },\n          axisBottom: this.props.isMobile ? null : {\n            legend: '',\n            format: (value) => {\n              if (axisBottomIndex++ % 3 === 0){\n                return moment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n              }\n            },\n            orient: 'bottom',\n            legendOffset: 36,\n            legendPosition: 'middle',\n            tickValues: 'every 3 days'\n          },\n          tooltip:({ id, value, color }) => {\n            const allocation = parseInt(value)===100 ? this.functionsUtil.formatMoney(value,0) : this.functionsUtil.formatMoney(value,2);\n            return (\n              <table style={{width:'100%',borderCollapse:'collapse'}}>\n                <tbody>\n                  <tr>\n                    <td style={{padding:'3px 5px'}}>\n                      <span style={{display:'block', width: '12px', height: '12px', background: color}}></span>\n                    </td>\n                    <td style={{padding:'3px 5px',textTransform:'capitalize'}}>{id}</td>\n                    <td style={{padding:'3px 5px'}}><strong>{allocation}%</strong></td>\n                  </tr>\n                </tbody>\n              </table>\n            )\n          }\n        }\n      break;\n      case 'APR':\n\n        maxChartValue = 0;\n\n        this.props.tokenConfig.protocols.forEach((p,j) => {\n          if (chartData.filter(d => { return d.name === p.name; }).length){\n            return;\n          }\n          chartData.push({\n            id:p.name,\n            color:'hsl('+globalConfigs.stats.protocols[p.name].color.hsl.join(',')+')',\n            data:apiResults.map((d,i) => {\n              return d.protocolsData.filter((protocolAllocation,x) => {\n                  return protocolAllocation.protocolAddr.toLowerCase() === p.address.toLowerCase()\n              })\n              .map((protocolAllocation,z) => {\n                const protocolPaused = this.functionsUtil.BNify(protocolAllocation.rate).eq(0);\n                if (!protocolPaused){\n                  const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                  const y = parseFloat(this.functionsUtil.fixTokenDecimals(protocolAllocation.rate,18));\n\n                  maxChartValue = Math.max(maxChartValue,y);\n\n                  return { x, y };\n                }\n                return undefined;\n              })[0]\n            }).filter((v) => { return v !== undefined; } )\n          })\n        });\n\n        chartData.push({\n          id:'Idle',\n          color: 'hsl('+globalConfigs.stats.protocols.idle.color.hsl.join(',')+')',\n          data: apiResults.map((d,i) => {\n            const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n\n            maxChartValue = Math.max(maxChartValue,y);\n\n            return { x, y };\n          })\n        });\n\n        // Set chart type\n        chartType = Line;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'hour',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => parseFloat(value).toFixed(2)+'%',\n          yScale:{\n            type: 'linear',\n            stacked: false\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format:value => parseFloat(value).toFixed(1)+'%',\n          },\n          axisBottom: this.props.isMobile ? null : {\n            tickSize: 0,\n            format: '%b %d',\n            tickPadding: 15,\n            tickValues: this.props.isMobile ? 'every 4 days' : ( this.props.showAdvanced ? 'every 3 days' : 'every 2 days'),\n            orient: 'bottom',\n            legend: '',\n            legendOffset: 0,\n            legendPosition: 'middle'\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'linear',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemWidth: this.props.isMobile ? 70 : 80,\n              itemHeight: 18,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 0,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 70, left: 70 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                {\n                typeof slice.points === 'object' && slice.points.length &&\n                  slice.points.map(point => {\n                    const protocolName = point.serieId;\n                    const protocolEarning = point.data.yFormatted;\n                    // const protocolApy = point.data.apy;\n                    return (\n                      <CustomTooltipRow\n                        key={point.id}\n                        color={point.color}\n                        label={protocolName}\n                        value={protocolEarning}\n                      />\n                    );\n                  })\n                }\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      case 'SCORE':\n\n        let prevValue = 0;\n        maxChartValue = 0;\n\n        this.props.tokenConfig.protocols.forEach((p,j) => {\n          if (chartData.filter(d => { return d.name === p.name; }).length){\n            return;\n          }\n\n          chartData.push({\n            id:p.name,\n            color:'hsl('+globalConfigs.stats.protocols[p.name].color.hsl.join(',')+')',\n            data:apiResults.map((d,i) => {\n              return d.protocolsData.filter((protocolAllocation,x) => {\n                  return protocolAllocation.protocolAddr.toLowerCase() === p.address.toLowerCase()\n              })\n              .map((protocolAllocation,z) => {\n                const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                let y = parseFloat(protocolAllocation.defiScore);\n\n                y = isNaN(y) || !y ? prevValue : y;\n                prevValue = y;\n                maxChartValue = Math.max(maxChartValue,y);\n\n                return { x, y };\n              })[0]\n            }).filter((v) => { return v !== undefined; } )\n          })\n        });\n\n        chartData.push({\n          id:'Idle',\n          color: 'hsl('+globalConfigs.stats.protocols.idle.color.hsl.join(',')+')',\n          data: apiResults.map((d,i) => {\n            const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            let y = parseFloat(d.idleScore);\n            y = isNaN(y) || !y ? prevValue : y;\n            prevValue = y;\n            maxChartValue = Math.max(maxChartValue,y);\n\n            return { x, y };\n          })\n        });\n\n        // debugger;\n\n        // Set chart type\n        chartType = Line;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'hour',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => parseFloat(value).toFixed(1),\n          yScale:{\n            type: 'linear',\n            stacked: false\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format:value => parseFloat(value).toFixed(1),\n          },\n          axisBottom: this.props.isMobile ? null : {\n            tickSize: 0,\n            format: '%b %d',\n            tickPadding: 15,\n            tickValues: this.props.isMobile ? 'every 4 days' : ( this.props.showAdvanced ? 'every 3 days' : 'every 2 days'),\n            orient: 'bottom',\n            legend: '',\n            legendOffset: 0,\n            legendPosition: 'middle'\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'linear',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemWidth: this.props.isMobile ? 70 : 80,\n              itemHeight: 18,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 0,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 70, left: 70 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                {\n                typeof slice.points === 'object' && slice.points.length &&\n                  slice.points.map(point => {\n                    const protocolName = point.serieId;\n                    const protocolEarning = point.data.yFormatted;\n                    return (\n                      <CustomTooltipRow\n                        key={point.id}\n                        color={point.color}\n                        label={protocolName}\n                        value={protocolEarning}\n                      />\n                    );\n                  })\n                }\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      case 'PRICE_V4':\n\n        itemIndex = 0;\n        maxChartValue = 0;\n        // let prevApy = null;\n        let prevApr = null;\n        let prevData = null;\n        let startBalance = this.functionsUtil.BNify(1);\n        let currentBalance = this.functionsUtil.BNify(1);\n        let avgApy = this.functionsUtil.BNify(0);\n\n        // console.log('PRICE_V4',apiResults);\n\n        idleChartData = apiResults.map((d,i) => {\n\n          let y = 0;\n          let apy = 0;\n          const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n          const apr = this.functionsUtil.fixTokenDecimals(d.idleRate,18).div(100);\n          // const apy = this.functionsUtil.apr2apy(apr);\n          \n          avgApy = avgApy.plus(apr.times(100));\n\n          if (prevApr){\n            const days = (d.timestamp-prevData.timestamp)/86400;\n            // const totDays = (d.timestamp-apiResults[0].timestamp)/86400;\n\n            const earnings = currentBalance.times(prevApr.times(days).div(365));\n            currentBalance = currentBalance.plus(earnings);\n\n            const earning = currentBalance.div(startBalance).minus(1).times(100);\n            y = parseFloat(earning);\n\n            // apy = earning.times(365).div(totDays).toFixed(2);\n            apy = avgApy.div(i+1).toFixed(2);\n          }\n\n          prevData = d;\n          // prevApy = apy;\n          prevApr = apr;\n\n          if (firstIdleBlock === null){\n            firstIdleBlock = parseInt(d.blocknumber);\n          }\n\n          maxChartValue = Math.max(maxChartValue,y);\n\n          const itemPos = Math.floor(itemIndex/totalItems*100);\n          const blocknumber = d.blocknumber;\n\n          itemIndex++;\n\n          return { x, y, apy, blocknumber, itemPos };\n        });\n\n        // Add Additional protocols\n        if (versionInfo.additionalProtocols && versionInfo.additionalProtocols.length>0){\n          versionInfo.additionalProtocols.forEach( additionalProtocol => {\n            const protocolInfo = this.props.tokenConfig.protocols.find( p => (p.name === additionalProtocol.protocol));\n            if (protocolInfo){\n              additionalProtocol.enabled = true;\n              additionalProtocol.address = protocolInfo.address;\n              protocols.unshift(additionalProtocol);\n            }\n          });\n        }\n\n        protocols.forEach( p => {\n\n          const protocolInfo = globalConfigs.stats.protocols[p.name];\n          const rateField = protocolInfo.rateField ? protocolInfo.rateField : 'rate';\n\n          const chartRow = {\n            id:protocolInfo.label,\n            color: 'hsl('+protocolInfo.color.hsl.join(',')+')',\n            data: []\n          };\n\n          itemIndex = 0;\n          // prevApy = null;\n          prevApr = null;\n          prevData = null;\n          let baseProfit = 0;\n          let firstProtocolData = null;\n          let firstProtocolBlock = null;\n          avgApy = this.functionsUtil.BNify(0);\n          startBalance = this.functionsUtil.BNify(1);\n          currentBalance = this.functionsUtil.BNify(1);\n\n          apiResults.forEach( (d,i) => {\n\n            const protocolData = d.protocolsData.find((pData,x) => {\n              return pData.protocolAddr.toLowerCase() === p.address.toLowerCase()\n            });\n\n            if (protocolData){\n\n              if (!firstProtocolData){\n                firstProtocolData = protocolData;\n              }\n\n              const protocolRate = typeof rateField === 'object' && rateField.length ? rateField.reduce((acc,field) => {\n                if (protocolData[field]){\n                  return this.functionsUtil.BNify(acc).plus(this.functionsUtil.BNify(protocolData[field]));\n                }\n                return this.functionsUtil.BNify(acc);\n              },0) : this.functionsUtil.BNify(protocolData[rateField]);\n\n              const protocolPaused = protocolRate.eq(0);\n              if (!protocolPaused){\n\n                // Start new protocols from Idle performances\n                if (firstProtocolBlock === null){\n                  firstProtocolBlock = parseInt(d.blocknumber);\n                  if (firstProtocolBlock>firstIdleBlock){\n                    const idlePerformance = idleChartData.find(d1 => (d1.blocknumber>=firstProtocolBlock) );\n                    if (idlePerformance){\n                      baseProfit = idlePerformance.y;\n                    }\n                  }\n                }\n\n                let rowData = {};\n\n                let y = 0;\n                let apy = 0;\n                const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const apr = this.functionsUtil.fixTokenDecimals(protocolRate,18).div(100);\n\n                avgApy = avgApy.plus(apr.times(100));\n                // const apy = this.functionsUtil.apr2apy(apr);\n\n                if (prevData){\n                  const days = (d.timestamp-prevData.timestamp)/86400;\n                  // const totDays = (d.timestamp-apiResults[0].timestamp)/86400;\n\n                  const earnings = currentBalance.times(prevApr.times(days).div(365));\n                  currentBalance = currentBalance.plus(earnings);\n\n                  const earning = currentBalance.div(startBalance).minus(1).times(100);\n                  y = parseFloat(earning)+baseProfit;\n\n                  apy = avgApy.div(i+1).toFixed(2);\n                }\n\n                prevData = d;\n                prevApr = apr;\n\n                if (firstIdleBlock === null){\n                  firstIdleBlock = parseInt(d.blocknumber);\n                }\n\n                maxChartValue = Math.max(maxChartValue,y);\n\n                const itemPos = Math.floor(itemIndex/totalItems*100);\n                // const blocknumber = d.blocknumber;\n\n                itemIndex++;\n\n                rowData = {\n                  x,\n                  y,\n                  apy,\n                  itemPos\n                };\n\n                itemIndex++;\n                chartRow.data.push(rowData);\n              }\n            }\n          });\n\n          chartData.push(chartRow);\n        });\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartData.push({\n          id:'Idle',\n          color: 'hsl('+globalConfigs.stats.protocols.idle.color.hsl.join(',')+')',\n          data: idleChartData\n        });\n\n        // Set chart type\n        chartType = Line;\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'day',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => parseFloat(value).toFixed(3)+'%',\n          yScale:{\n            type: 'linear',\n            stacked: false,\n            // min: 1\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format: value => parseFloat(value).toFixed(2)+'%',\n          },\n          axisBottom: this.props.isMobile ? null : {\n            legend: '',\n            tickSize: 0,\n            format: '%b %d',\n            tickPadding: 10,\n            legendOffset: 0,\n            orient: 'bottom',\n            legendPosition: 'middle',\n            tickValues: this.props.isMobile ? 'every 4 days' : ( this.props.showAdvanced ? 'every 3 days' : 'every 2 days'),\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'monotoneX',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemHeight: 18,\n              itemWidth: this.props.isMobile ? 70 : 100,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 5,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 80, left: 80 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                {\n                typeof slice.points === 'object' && slice.points.length &&\n                  slice.points.map(point => {\n                    const protocolName = point.serieId;\n                    const protocolEarning = point.data.yFormatted;\n                    const protocolApy = point.data.apy;\n                    return (\n                      <CustomTooltipRow\n                        key={point.id}\n                        label={protocolName}\n                        color={point.color}\n                        value={`${protocolEarning} <small>(${protocolApy}% APY)</small>`}\n                      />\n                    );\n                  })\n                }\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      case 'PRICE':\n        // let prevTokenPrice = null;\n        maxChartValue = 0;\n        let firstTokenPrice = null;\n\n        idleChartData = apiResults.map((d,i) => {\n\n          let y = 0;\n          let apy = 0;\n          let days = 0;\n          const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n          const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n          if (!firstTokenPrice){\n            firstTokenPrice = tokenPrice;\n          } else {\n            y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n\n            days = (d.timestamp-apiResults[0].timestamp)/86400;\n            const earning = tokenPrice.div(firstTokenPrice).minus(1).times(100);\n            apy = earning.times(365).div(days).toFixed(2);\n\n            // console.log(firstTokenPrice.toString(),tokenPrice.toString(),earning.toString(),days,y,apy);\n          }\n\n          if (firstIdleBlock === null){\n            firstIdleBlock = parseInt(d.blocknumber);\n          }\n\n          maxChartValue = Math.max(maxChartValue,y);\n\n          const itemPos = Math.floor(itemIndex/totalItems*100);\n          const blocknumber = d.blocknumber;\n\n          itemIndex++;\n\n          return { x, y, apy, blocknumber, itemPos };\n        });\n\n        // Add Additional protocols\n        if (versionInfo.additionalProtocols && versionInfo.additionalProtocols.length>0){\n          versionInfo.additionalProtocols.forEach( additionalProtocol => {\n            const protocolInfo = this.props.tokenConfig.protocols.find( p => (p.name === additionalProtocol.protocol));\n            if (protocolInfo){\n              additionalProtocol.enabled = true;\n              additionalProtocol.address = protocolInfo.address;\n              protocols.unshift(additionalProtocol);\n            }\n          });\n        }\n\n        await this.functionsUtil.asyncForEach(protocols,async (p) => {\n\n          const protocolInfo = globalConfigs.stats.protocols[p.name];\n          const rateField = protocolInfo.rateField ? protocolInfo.rateField : 'rate';\n\n          const chartRow = {\n            id:protocolInfo.label,\n            color: 'hsl('+protocolInfo.color.hsl.join(',')+')',\n            data: []\n          };\n\n          itemIndex = 0;\n          let baseProfit = 0;\n          firstTokenPrice = null;\n          let lastRowData = null;\n          let lastTokenPrice = null;\n          let firstProtocolData = null;\n          let firstProtocolBlock = null;\n\n          await this.functionsUtil.asyncForEach(apiResults,async (d) => {\n\n            const protocolData = d.protocolsData.find((pData,x) => {\n              return pData.protocolAddr.toLowerCase() === p.address.toLowerCase()\n            });\n\n            if (protocolData && protocolData[rateField]){\n\n              if (!firstProtocolData){\n                firstProtocolData = protocolData;\n              }\n\n              const protocolPaused = this.functionsUtil.BNify(protocolData[rateField]).eq(0);\n              if (!protocolPaused){\n\n                // Start new protocols from Idle performances\n                if (firstProtocolBlock === null){\n                  firstProtocolBlock = parseInt(d.blocknumber);\n                  if (firstProtocolBlock>firstIdleBlock){\n                    const idlePerformance = idleChartData.find(d1 => {\n                      return d1.blocknumber>=firstProtocolBlock;\n                    });\n                    if (idlePerformance){\n                      baseProfit = idlePerformance.y;\n                    }\n                  }\n                }\n\n                let rowData = {};\n                let tokenExchangeRate = protocolData.price;\n                let tokenPriceFixed = this.functionsUtil.fixTokenDecimals(tokenExchangeRate,p.decimals);\n                const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n\n                // Take data from\n                if (protocolInfo && protocolInfo.data && protocolInfo.data[p.address.toLowerCase()] && protocolInfo.data[p.address.toLowerCase()][d.blocknumber]){\n                  tokenExchangeRate = this.functionsUtil.BNify(globalConfigs.stats.protocols[p.name].data[p.address.toLowerCase()][d.blocknumber]);\n                  tokenPriceFixed = this.functionsUtil.fixTokenDecimals(tokenExchangeRate,p.decimals);\n                }/* else if (p.name === 'aave'){\n                  // Token holders (aDAI = 0xc025c03e10f656d3ee76685d53d236824d8ef3da , aUSDC = 0xd2c734fbd8f5d1c809185e014016dd4097e94711)\n                  let aaveTokenBalance = await this.functionsUtil.genericContractCall(p.token,'balanceOf',['0xd2c734fbd8f5d1c809185e014016dd4097e94711'],{},d.blocknumber);\n                  if (aaveTokenBalance){\n                    if (!Object.values(aave_data).length){\n                      tokenExchangeRate = this.functionsUtil.normalizeTokenAmount(1,p.decimals);\n                      aave_data[d.blocknumber] = aaveTokenBalance.toString();\n                    } else {\n                      const firstBalance = Object.values(aave_data)[0];\n                      tokenExchangeRate = this.functionsUtil.normalizeTokenAmount(this.functionsUtil.BNify(aaveTokenBalance).div(this.functionsUtil.BNify(firstBalance)).toFixed(p.decimals),p.decimals);\n                      aave_data[d.blocknumber] = tokenExchangeRate.toString();\n                    }\n                  }\n                }\n                */\n\n                let y = baseProfit;\n                let apy = 0;\n\n                if (!firstTokenPrice){\n                  firstTokenPrice = tokenPriceFixed;\n                } else {\n                  if (tokenPriceFixed.lt(lastTokenPrice)){\n                    firstTokenPrice = tokenPriceFixed;\n                    const lastYDiff = chartRow.data[chartRow.data.length-1].y-chartRow.data[chartRow.data.length-2].y;\n                    y = lastRowData.y+lastYDiff;\n                    baseProfit = y;\n                  } else {\n                    y += parseFloat(tokenPriceFixed.div(firstTokenPrice).minus(1).times(100));\n                  }\n\n                  const days = (d.timestamp-apiResults[0].timestamp)/86400;\n                  const earning = tokenPriceFixed.div(firstTokenPrice).minus(1).times(100);\n                  apy = earning.times(365).div(days).toFixed(2);\n                }\n\n                y = Math.max(0,y);\n                maxChartValue = Math.max(maxChartValue,y);\n\n                const itemPos = Math.floor(itemIndex/totalItems*100);\n\n                rowData = {\n                  x,\n                  y,\n                  apy,\n                  itemPos\n                };\n\n                itemIndex++;\n                lastRowData = rowData;\n                chartRow.data.push(rowData);\n                lastTokenPrice = tokenPriceFixed;\n              }\n            }\n          });\n\n          chartData.push(chartRow);\n        });\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartData.push({\n          id:'Idle',\n          color: 'hsl('+globalConfigs.stats.protocols.idle.color.hsl.join(',')+')',\n          data: idleChartData\n        });\n\n        // Set chart type\n        chartType = Line;\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'day',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => parseFloat(value).toFixed(3)+'%',\n          yScale:{\n            type: 'linear',\n            stacked: false,\n            // min: 1\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format: value => parseFloat(value).toFixed(2)+'%',\n          },\n          axisBottom: this.props.isMobile ? null : {\n            legend: '',\n            tickSize: 0,\n            format: '%b %d',\n            tickPadding: 10,\n            legendOffset: 0,\n            orient: 'bottom',\n            legendPosition: 'middle',\n            tickValues: this.props.isMobile ? 'every 4 days' : ( this.props.showAdvanced ? 'every 3 days' : 'every 2 days'),\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'monotoneX',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemHeight: 18,\n              itemWidth: this.props.isMobile ? 70 : 100,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 5,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 80, left: 80 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                {\n                typeof slice.points === 'object' && slice.points.length &&\n                  slice.points.map(point => {\n                    const protocolName = point.serieId;\n                    const protocolEarning = point.data.yFormatted;\n                    const protocolApy = point.data.apy;\n                    return (\n                      <CustomTooltipRow\n                        key={point.id}\n                        label={protocolName}\n                        color={point.color}\n                        value={`${protocolEarning} <small>(${protocolApy}% APY)</small>`}\n                      />\n                    );\n                  })\n                }\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      chartType,\n      chartProps,\n      chartData\n    });\n  }\n\n  render() {\n    return(\n      <GenericChart\n        showLoader={true}\n        {...this.state.chartProps}\n        height={this.props.height}\n        type={this.state.chartType}\n        data={this.state.chartData}\n        width={this.state.chartWidth}\n        isMobile={this.props.isMobile}\n        parentId={this.props.parentId}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default StatsChart;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass Rebalance extends Component {\n\n  state = {\n    loading:true,\n    processing:{\n      rebalance:{\n        txHash:null,\n        loading:false\n      },\n    },\n    shouldRebalance:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.checkRebalance();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged || accountChanged){\n      this.checkRebalance();\n    }\n  }\n\n  checkRebalance = async () => {\n    this.setState({\n      loading:true,\n    });\n\n    const shouldRebalance = await this.functionsUtil.checkRebalance(this.props.tokenConfig);\n\n    this.setState({\n      loading:false,\n      shouldRebalance\n    });\n  }\n\n  rebalance = async (e) => {\n    e.preventDefault();\n\n    const callback = (tx,error) => {\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Rebalance',\n        eventAction: this.props.selectedToken,\n        eventLabel: tx.status,\n      };\n\n      let txDenied = false;\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      if (tx.status === 'success'){\n        // Toast message\n        window.toastProvider.addMessage(`Rebalance completed`, {\n          secondaryMessage: `Now the pool is balanced!`,\n          colorTheme: 'light',\n          actionHref: \"\",\n          actionText: \"\",\n          variant: \"success\",\n        });\n\n      } else if (!txDenied){\n        window.toastProvider.addMessage(`Rebalance error`, {\n          secondaryMessage: `The rebalance has failed, try again...`,\n          colorTheme: 'light',\n          actionHref: \"\",\n          actionText: \"\",\n          variant: \"failure\",\n        });\n      }\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          rebalance:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n\n      this.checkRebalance();\n    }\n\n    const callback_receipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            rebalance:{\n              ...prevState.processing.rebalance,\n              txHash\n            }\n          }\n        })\n      );\n    };\n\n    this.props.contractMethodSendWrapper(this.props.tokenConfig.idle.token, 'rebalance', [], null , callback, callback_receipt);\n\n    this.setState({\n      processing:{\n        rebalance:{\n          txHash:null,\n          loading:true\n        }\n      }\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        px={3}\n        width={1}\n        minHeight={'100px'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n      {\n        this.state.loading ? (\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking rebalance...'}\n          />\n        ) : (\n          this.state.processing.rebalance.loading ? (\n            <TxProgressBar web3={this.props.web3} waitText={`Rebalance estimated in`} endMessage={`Finalizing rebalance request...`} hash={this.state.processing.rebalance.txHash} />\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                mt={0}\n                mb={3}\n                textAlign={'center'}\n              >\n                {this.state.shouldRebalance ? 'Rebalance the entire pool. All users will bless you.' : 'The pool is already balanced.'}\n              </Text>\n              <RoundButton\n                buttonProps={{\n                  width:'auto',\n                  disabled:!this.state.shouldRebalance\n                }}\n                handleClick={e => this.rebalance(e)}\n              >\n                Rebalance\n              </RoundButton>\n            </Flex>\n          )\n        )\n      }\n      </Flex>\n    )\n  }\n}\n\nexport default Rebalance;","import React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\n\nclass StatsCard extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          minHeight:this.props.minHeight ? this.props.minHeight : ['130px','153px']\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'flex-start'}\n          flexDirection={'column'}\n          justifyContent={'flex-start'}\n        >\n          <Flex\n            alignItems={'flex-start'}\n            minHeight={ this.props.titleMinHeight ? this.props.titleMinHeight : ['auto','60px'] }\n          >\n            <Heading.h4\n              mb={[3,0]}\n              fontWeight={4}\n              fontSize={[2,3]}\n              textAlign={'left'}\n              color={'dark-gray'}\n              lineHeight={'initial'}\n            >\n              {this.props.title}\n            </Heading.h4>\n          </Flex>\n          {\n            (typeof this.props.value !== 'undefined' && this.props.value !== null && this.props.value.toString().length>0) &&\n              <Text\n                lineHeight={1}\n                fontSize={[4,5]}\n                fontWeight={[3,4]}\n                color={'statValue'}\n                {...this.props.valueProps}\n              >\n                {this.props.value}\n              </Text>\n          }\n          {\n            this.props.children ?\n              this.props.children\n            : null\n          }\n          {\n            (typeof this.props.label !== 'undefined' && this.props.label !== null && this.props.label.toString().length>0) && (\n              <Flex\n                mt={[3,2]}\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <Text\n                  fontSize={1}\n                  fontWeight={3}\n                  color={'legend'}\n                >\n                  {this.props.label}\n                </Text>\n                {\n                  (this.props.labelTooltip && this.props.labelTooltip.length>0) && (\n                    <Tooltip\n                      placement={'top'}\n                      message={this.props.labelTooltip}\n                    >\n                      <Icon\n                        ml={2}\n                        name={\"Info\"}\n                        size={'1em'}\n                        color={'cellTitle'}\n                      />\n                    </Tooltip>\n                  )\n                }\n              </Flex>\n            )\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default StatsCard;","import theme from '../theme';\nimport React, { Component } from 'react';\nimport { Flex, Link, Text } from \"rimble-ui\";\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\n\nclass Breadcrumb extends Component {\n  render() {\n\n    const showPathMobile = !!this.props.showPathMobile;\n\n    return (\n      <Flex\n        width={1}\n        id={'breadcrumb'}\n        alignItems={'center'}\n      >\n        {\n          this.props.handleClick && \n           <RoundIconButton\n             buttonProps={{\n               width:'35px',\n               height:'35px'\n             }}\n             iconSize={'1.2em'}\n             iconName={'ArrowBack'}\n             handleClick={this.props.handleClick}\n           />\n        }\n        {\n          this.props.text && this.props.text.length>0 &&\n           <Link\n             ml={[2,3]}\n             fontSize={[1,2]}\n             fontWeight={3}\n             color={'cellText'}\n             hoverColor={'copyColor'}\n             onClick={this.props.handleClick}\n           >\n            {this.props.text}\n           </Link>\n        }\n        {\n          (!this.props.isMobile || showPathMobile) && this.props.path && this.props.path.length>0 &&\n            this.props.path.map((path,index) => {\n              const link = this.props.pathLink ? (this.props.pathLink[index] || null) : null;\n              const Component = link ? Link : Text;\n              return (\n                <Component\n                  pl={[1,3]}\n                  ml={[1,3]}\n                  fontWeight={3}\n                  fontSize={[1,2]}\n                  hoverColor={'copyColor'}\n                  style={ !this.props.isMobile ? {\n                    maxWidth:'30%',\n                    overflow: 'hidden',\n                    whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                    borderLeft: `1px solid ${theme.colors.divider}`\n                  } : null }\n                  key={`breadcrumb_path_${index}`}\n                  color={link ? 'cellText' : 'statValue'}\n                  onClick={link ? e => this.props.goToSection(link) : null}\n                >\n                  {path}\n                </Component>\n              );\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Breadcrumb;","import React from \"react\";\nimport {\n  Modal,\n  Button,\n  Flex,\n  Field,\n  Select\n} from \"rimble-ui\";\nimport moment from 'moment';\nimport ModalCard from './ModalCard';\nimport 'react-date-range/dist/styles.css';\nimport { DateRange } from 'react-date-range';\nimport 'react-date-range/dist/theme/default.css';\n\nclass DateRangeModal extends React.Component {\n\n  state = {\n    quickSelection:'',\n    ranges:{\n      startDate: this.props.startDate ? this.props.startDate : new Date(),\n      endDate: this.props.endDate ? this.props.endDate : new Date(),\n      key: 'selection'\n    }\n  }\n\n  handleSelect(ranges){\n    this.setState({\n      quickSelection:'',\n      ranges:ranges.selection\n    });\n  }\n\n  handleQuickSelect(e){\n    let startDate = null;\n    let endDate = moment(new Date());\n    const quickSelection = e.target.value;\n\n    switch (quickSelection){\n      case 'day':\n        startDate = endDate.clone().subtract(1,'day');\n      break;\n      case 'week':\n        startDate = endDate.clone().subtract(1,'week');\n      break;\n      case 'weeks':\n        startDate = endDate.clone().subtract(2,'week');\n      break;\n      case 'month':\n        startDate = endDate.clone().subtract(1,'month');\n      break;\n      default:\n        startDate = null;\n        endDate = null;\n      break;\n    }\n\n    if (startDate && endDate){\n      startDate = startDate._d;\n      endDate = endDate._d;\n\n      const ranges = {\n        startDate,\n        endDate,\n        key:'selection'\n      };\n\n      this.setState({\n        ranges,\n        quickSelection\n      }, () => {\n        this.closeModal();\n      });\n    }\n  }\n\n  componentDidUpdate = (prevProps) => {\n    if (prevProps.startDate !== this.props.startDate || prevProps.endDate !== this.props.endDate){\n      this.setState({\n        ranges:{\n          startDate: this.props.startDate ? this.props.startDate : new Date(),\n          endDate: this.props.endDate ? this.props.endDate : new Date(),\n          key: 'selection'\n        }\n      });\n    }\n  }\n\n  closeModal(){\n    const newState = this.props.handleSelect(this.state.ranges,this.state.quickSelection);\n    const ranges = {\n      startDate:newState.startTimestampObj ? newState.startTimestampObj._d : new Date(),\n      endDate:newState.endTimestampObj ? newState.endTimestampObj._d : new Date(),\n      key: 'selection'\n    };\n    this.setState({\n      ranges\n    });\n    this.props.closeModal();\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Header title={'Select Date Range'}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} flexDirection={'column'} alignItems={'center'}>\n              <Field label=\"Quick Date Selection\" style={{display:'flex',width:'100%',alignItems:'stretch',justifyContent:'center'}}>\n                <Select\n                  style={{\n                    color:'#7d888d',\n                    fontSize:'14px',\n                    height:'2.5em',\n                    boxShadow:'none'\n                  }}\n                  width={'100%'}\n                  required={true}\n                  onChange={this.handleQuickSelect.bind(this)}\n                  value={this.state.quickSelection}\n                  options={[\n                    { value: '', label: \"Select an option\" },\n                    { value: \"day\", label: \"Last day\" },\n                    { value: \"week\", label: \"Last week\" },\n                    { value: \"weeks\", label: \"Last 2 weeks\" },\n                    { value: \"month\", label: \"Last month\" }\n                  ]}\n                />\n              </Field>\n              <DateRange\n                ranges={[this.state.ranges]}\n                minDate={this.props.minDate}\n                maxDate={this.props.maxDate}\n                onChange={this.handleSelect.bind(this)}\n              />\n            </Flex>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                borderRadius={4}\n                my={2}\n                mx={[0, 2]}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ e => this.closeModal(e) }\n              >\n              APPLY\n              </Button>\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n\n}\n\nexport default DateRangeModal;","import moment from 'moment';\nimport Title from '../Title/Title';\nimport StatsChart from './StatsChart';\nimport React, { Component } from 'react';\n// import Toggler from '../Toggler/Toggler';\nimport Rebalance from '../Rebalance/Rebalance';\nimport StatsCard from '../StatsCard/StatsCard';\nimport AssetsList from '../AssetsList/AssetsList';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport { Flex, Text, Heading, Box, Icon } from 'rimble-ui';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport DateRangeModal from '../utilities/components/DateRangeModal';\nimport AssetsUnderManagement from '../AssetsUnderManagement/AssetsUnderManagement';\n\nclass Stats extends Component {\n  state = {\n    aum:null,\n    apr:null,\n    days:'-',\n    delta:null,\n    earning:null,\n    minDate:null,\n    maxDate:null,\n    carouselMax:1,\n    rebalances:'-',\n    buttonGroups:[],\n    apiResults:null,\n    carouselIndex:0,\n    idleVersion:null,\n    statsVersions:{},\n    minStartTime:null,\n    endTimestamp:null,\n    showAdvanced:true,\n    govTokensPool:null,\n    unlentBalance:null,\n    quickSelection:null,\n    startTimestamp:null,\n    endTimestampObj:null,\n    shouldRebalance:null,\n    carouselOffsetLeft:0,\n    startTimestampObj:null,\n    apiResults_unfiltered:null,\n    dateRangeModalOpened:false\n  };\n\n  quickSelections = {\n    day:'Last day',\n    week:'Last week',\n    weeks:'Last 2 weeks',\n    month:'Last month'\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    await this.loadParams();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  getLatestAvailableVersion(){\n    const statsVersions = globalConfigs.stats.versions;\n    let latestVersion = null;\n    Object.keys(statsVersions).forEach( version => {\n      const versionInfo = statsVersions[version];\n      if (versionInfo.enabledStrategies.includes(this.props.selectedStrategy)){\n        latestVersion = version;\n      }\n    });\n\n    return latestVersion;\n  }\n\n  getVersionInfo(version){\n    if (!version){\n      version = this.state.idleVersion;\n    }\n\n    if (!globalConfigs.stats.versions[version]){\n      return null;\n    }\n\n    const versionInfo = Object.assign({},globalConfigs.stats.versions[version]);\n\n    if (versionInfo.strategiesParams && versionInfo.strategiesParams[this.props.selectedStrategy]){\n      const versionInfoExtra = versionInfo.strategiesParams[this.props.selectedStrategy];\n      Object.keys(versionInfoExtra).forEach( param => {\n        versionInfo[param] = versionInfoExtra[param];\n      });\n    }\n\n    return versionInfo;\n  }\n\n  async loadParams() {\n\n    if (!this.props.selectedToken || !this.props.tokenConfig){\n      return false;\n    }\n\n    const newState = {};\n    const { match: { params } } = this.props;\n\n    const currentNetworkAvailableTokens = Object.keys(this.props.availableTokens);\n\n    if (!!params.customToken && currentNetworkAvailableTokens.indexOf(params.customToken.toUpperCase()) !== -1 ){\n      newState.selectedToken = params.customToken.toUpperCase();\n    } else {\n      newState.selectedToken = this.props.selectedToken.toUpperCase();\n    }\n\n    newState.tokenConfig = this.props.availableTokens[newState.selectedToken];\n    newState.minStartTime = moment(globalConfigs.stats.tokens[this.props.selectedToken].startTimestamp,'YYYY-MM-DD');\n    newState.maxEndDate = moment();\n\n    newState.endTimestampObj = moment(moment().format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n\n    newState.latestVersion = this.getLatestAvailableVersion();\n    newState.idleVersion = this.state.idleVersion === null ? newState.latestVersion : this.state.idleVersion;\n\n    const versionInfo = this.getVersionInfo(newState.idleVersion);\n\n    // console.log('loadParams',newState.latestVersion,newState.idleVersion,versionInfo);\n\n    if (newState.idleVersion && versionInfo.endTimestamp){\n      const newEndTimestampObj = moment(moment(versionInfo.endTimestamp*1000).format('YYYY-MM-DD HH:mm'),'YYYY-MM-DD HH:mm');\n      if (newState.endTimestampObj.isAfter(newEndTimestampObj)){\n        newState.endTimestampObj = newEndTimestampObj;\n        newState.endTimestamp = parseInt(newState.endTimestampObj._d.getTime()/1000);\n      }\n\n      if (!newState.maxEndDate || newState.maxEndDate.isAfter(newEndTimestampObj)){\n        newState.maxEndDate = newEndTimestampObj;\n      }\n    }\n\n    newState.endTimestamp = parseInt(newState.endTimestampObj._d.getTime()/1000);\n\n    // Set start date\n    newState.startTimestampObj = newState.endTimestampObj.clone().subtract(1,'month');\n    newState.startTimestamp = parseInt(newState.startTimestampObj._d.getTime()/1000);\n\n    if (newState.idleVersion && versionInfo.startTimestamp){\n      const newStartTimestampObj = moment(moment(versionInfo.startTimestamp*1000).format('YYYY-MM-DD HH:mm'),'YYYY-MM-DD HH:mm');\n      if (newState.startTimestampObj.isBefore(newStartTimestampObj)){\n        newState.startTimestampObj = newStartTimestampObj;\n        newState.startTimestamp = parseInt(newState.startTimestampObj._d.getTime()/1000);\n      }\n\n      if (newState.minStartTime.isBefore(newStartTimestampObj)){\n        newState.minStartTime = newStartTimestampObj;\n      }\n    }\n\n    newState.minDate = newState.minStartTime._d;\n    newState.maxDate = newState.maxEndDate._d;\n\n    if (newState !== this.state){\n      await this.setStateSafe(newState);\n    }\n  }\n\n  setDateRange = (ranges,quickSelection=null) => {\n\n    const minStartTime = moment(globalConfigs.stats.tokens[this.props.selectedToken].startTimestamp);\n\n    let startTimestampObj = moment(ranges.startDate).isSameOrAfter(minStartTime) ? moment(ranges.startDate) : minStartTime;\n    let endTimestampObj = moment(ranges.endDate);\n\n    if (startTimestampObj.isSame(endTimestampObj)){\n      endTimestampObj.add(1,'day');\n    }\n\n    endTimestampObj = moment(endTimestampObj.format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n\n    if (startTimestampObj.isBefore(this.state.minStartTime)){\n      startTimestampObj = this.state.minStartTime;\n    }\n\n    if (endTimestampObj.isAfter(this.state.maxEndDate)){\n      endTimestampObj = this.state.maxEndDate;\n    }\n\n    const startTimestamp = parseInt(startTimestampObj._d.getTime()/1000);\n    const endTimestamp = parseInt(endTimestampObj._d.getTime()/1000);\n\n    const newState = {\n      minStartTime,\n      endTimestamp,\n      quickSelection,\n      startTimestamp,\n      endTimestampObj,\n      startTimestampObj\n    };\n\n    this.setStateSafe(newState);\n\n    return newState;\n  }\n\n  toggleAdvancedCharts = (e) => {\n    e.preventDefault();\n    this.setStateSafe({\n      showAdvanced:!this.state.showAdvanced\n    });\n  }\n\n  setDateRangeModal = (dateRangeModalOpened) => {\n    if (dateRangeModalOpened !== this.state.dateRangeModalOpened){\n      this.setStateSafe({\n        dateRangeModalOpened\n      });\n    }\n  }\n\n  async componentDidMount() {\n\n    if (!this.props.web3){\n      this.props.initWeb3();\n      return false;\n    }\n\n    const style = document.createElement('style');\n    style.id = 'crisp-custom-style';\n    style.type = 'text/css';\n    style.innerHTML = `\n    .crisp-client{\n      display:none !important;\n    }`;\n    document.body.appendChild(style);\n\n    this.loadUtils();\n    await this.loadParams();\n    this.loadApiData();\n    this.loadCarousel();\n  }\n\n  loadCarousel(){\n    const carouselMax = this.props.isMobile ? 3 : 2;\n    this.setStateSafe({\n      carouselMax\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState) {\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const strategyChanged = prevProps.selectedStrategy !== this.props.selectedStrategy;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const dateChanged = prevState.startTimestamp !== this.state.startTimestamp || prevState.endTimestamp !== this.state.endTimestamp;\n    const versionChanged = prevState.idleVersion !== this.state.idleVersion;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n\n    if (mobileChanged){\n      this.loadCarousel();\n    }\n\n    if (contractsInitialized || tokenChanged || strategyChanged || versionChanged){\n      // console.log('componentDidUpdate',this.props.selectedStrategy,this.props.selectedToken);\n      await this.componentDidMount();\n    } else if (dateChanged){\n      this.loadApiData();\n    }\n  }\n\n  filterTokenData = (apiResults) => {\n    return apiResults.filter((r,i) => {\n      return (!this.state.startTimestamp || r.timestamp >= this.state.startTimestamp) && (!this.state.endTimestamp || r.timestamp <= this.state.endTimestamp);\n    });\n  }\n\n  setIdleVersion = idleVersion => {\n    this.setStateSafe({\n      idleVersion\n    });\n  }\n\n  loadApiData = async () => {\n\n    if (!this.props.selectedToken || !this.props.tokenConfig){\n      return false;\n    }\n\n    // Get COMP APR\n    // const compAPR = await this.functionsUtil.getCompAPR(this.props.tokenConfig);\n    // console.log('compAPR',compAPR.toString());\n\n    const startTimestamp = this.state.minDate ? parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(this.state.minDate).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss')._d.getTime()/1000) : null;\n    const endTimestamp = this.state.maxDate ? parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(this.state.maxDate).format('DD/MM/YYYY 23:59:59'),'DD/MM/YYYY HH:mm:ss')._d.getTime()/1000) : null;\n\n    const isRisk = ['v3','v4'].includes(this.state.idleVersion) && this.props.selectedStrategy === 'risk';\n    let apiResults_unfiltered = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,startTimestamp,endTimestamp,true,7200);\n\n    const apiResults = this.filterTokenData(apiResults_unfiltered);\n\n    // console.log('loadApiData',startTimestamp,endTimestamp,new Date(startTimestamp*1000),new Date(endTimestamp*1000),apiResults,apiResults_unfiltered);\n\n    if (!apiResults || !apiResults_unfiltered || !apiResults.length || !apiResults_unfiltered.length){\n      return false;\n    }\n\n    const firstResult = apiResults[0];\n    const lastResult = Object.values(apiResults).pop();\n\n    window.moment = moment;\n\n    let days = (lastResult.timestamp-firstResult.timestamp)/86400;\n    if (days === 0){\n      days = 1;\n    }\n\n    let apr = null;\n    let delta = 'N/A';\n\n    const idleTokens = this.functionsUtil.fixTokenDecimals(lastResult.idleSupply,18);\n    const firstIdlePrice = this.functionsUtil.fixTokenDecimals(firstResult.idlePrice,this.props.tokenConfig.decimals);\n    const lastIdlePrice = this.functionsUtil.fixTokenDecimals(lastResult.idlePrice,this.props.tokenConfig.decimals);\n\n    // Calculate AUM\n    let aum = idleTokens.times(lastIdlePrice);\n    // Convert Token balance\n    aum = await this.functionsUtil.convertTokenBalance(aum,this.props.selectedToken,this.props.tokenConfig,isRisk);\n\n    const compoundInfo = this.props.tokenConfig.protocols.filter((p) => { return p.name === 'compound' })[0];\n    const firstCompoundData = compoundInfo ? firstResult.protocolsData.filter((p) => { return p.protocolAddr.toLowerCase() === compoundInfo.address.toLowerCase() })[0] : null;\n    const lastCompoundData = compoundInfo ? lastResult.protocolsData.filter((p) => { return p.protocolAddr.toLowerCase() === compoundInfo.address.toLowerCase() })[0] : null;\n\n    if (this.state.idleVersion === 'v4') {\n\n      apr = apiResults.reduce( (sum,r) => {\n        const idleRate = this.functionsUtil.fixTokenDecimals(r.idleRate,18);\n        return this.functionsUtil.BNify(sum).plus(idleRate);\n      },0);\n\n      // Calculate average\n      apr = apr.div(apiResults.length);\n\n      if (compoundInfo){\n        const compoundWithCOMPInfo = globalConfigs.stats.protocols.compoundWithCOMP;\n        const rateField = compoundWithCOMPInfo.rateField ? compoundWithCOMPInfo.rateField : 'rate';\n\n        let compoundAvgApr = apiResults.reduce( (sum,r) => {\n\n          const compoundData = r.protocolsData.find((pData,x) => {\n            return pData.protocolAddr.toLowerCase() === compoundInfo.address.toLowerCase()\n          });\n\n          let compoundRate = typeof rateField === 'object' && rateField.length ? rateField.reduce((acc,field) => {\n            if (compoundData[field]){\n              return this.functionsUtil.BNify(acc).plus(this.functionsUtil.BNify(compoundData[field]));\n            }\n            return this.functionsUtil.BNify(acc);\n          },0) : this.functionsUtil.BNify(compoundData[rateField]);\n\n          compoundRate = this.functionsUtil.fixTokenDecimals(compoundRate,18);\n\n          return this.functionsUtil.BNify(sum).plus(compoundRate);\n        },0);\n\n        // Calculate average\n        compoundAvgApr = compoundAvgApr.div(apiResults.length);\n\n        // compoundAvgApr = this.functionsUtil.apr2apy(compoundAvgApr.div(100)).times(100);\n        // apr = this.functionsUtil.apr2apy(apr.div(100)).times(100);\n\n        delta = apr.minus(compoundAvgApr);\n        if (parseFloat(delta)<0){\n          delta = 0\n        }\n        delta = delta.toFixed(2);\n      }\n\n      apr = apr.toFixed(2);\n\n    } else {\n      const earning = lastIdlePrice.div(firstIdlePrice).minus(1).times(100);\n      apr = earning.times(365).div(days).toFixed(2);\n      if (firstCompoundData && lastCompoundData){\n        const firstCompoundPrice = this.functionsUtil.fixTokenDecimals(firstCompoundData.price,this.props.tokenConfig.decimals);\n        const lastCompoundPrice = this.functionsUtil.fixTokenDecimals(lastCompoundData.price,this.props.tokenConfig.decimals);\n        const compoundApr = lastCompoundPrice.div(firstCompoundPrice).minus(1).times(100);\n        delta = earning.minus(compoundApr).times(365).div(days);\n        if (parseFloat(delta)<0){\n          delta = 0\n        }\n        delta = delta.toFixed(2);\n      }\n    }\n\n    // Count rebalances\n    let rebalances = 0;\n    apiResults.forEach((row,index) => {\n      if (index){\n        const prevRow = apiResults[index-1];\n\n        const totalAllocation = row.protocolsData.reduce((accumulator,protocolAllocation) => {\n          const allocation = this.functionsUtil.fixTokenDecimals(protocolAllocation.allocation,this.props.tokenConfig.decimals);\n          return this.functionsUtil.BNify(accumulator).plus(allocation);\n        },0);\n\n        const prevTotalAllocation = prevRow.protocolsData.reduce((accumulator,protocolAllocation) => {\n          const allocation = this.functionsUtil.fixTokenDecimals(protocolAllocation.allocation,this.props.tokenConfig.decimals);\n          return this.functionsUtil.BNify(accumulator).plus(allocation);\n        },0);\n\n        let hasRebalanced = false;\n        row.protocolsData.forEach( p => {\n          if (hasRebalanced){\n            return;\n          }\n          const prevP = prevRow.protocolsData.find( prevP => (prevP.protocolAddr.toLowerCase() === p.protocolAddr.toLowerCase()) );\n          const allocation = this.functionsUtil.fixTokenDecimals(p.allocation,this.props.tokenConfig.decimals);\n          const prevAllocation = this.functionsUtil.fixTokenDecimals(prevP.allocation,this.props.tokenConfig.decimals);\n          const allocationPerc = parseInt(parseFloat(allocation.div(totalAllocation).times(100)));\n          const prevAllocationPerc = parseInt(parseFloat(prevAllocation.div(prevTotalAllocation).times(100)));\n          if (allocationPerc!==prevAllocationPerc){\n            rebalances++;\n            hasRebalanced = true;\n          }\n        });\n      }\n    });\n\n    // Add gov tokens balance to AUM\n    const govTokensPool = await this.functionsUtil.getGovTokenPool(null,null,'DAI');\n    if (govTokensPool){\n      aum = aum.plus(govTokensPool);\n    }\n\n    // Format AUM\n    aum = this.functionsUtil.formatMoney(parseFloat(aum));\n\n    let unlentBalance = await this.functionsUtil.getUnlentBalance(this.props.tokenConfig);\n    if (unlentBalance){\n      unlentBalance = this.functionsUtil.formatMoney(parseFloat(unlentBalance));\n    }\n\n    this.setStateSafe({\n      aum,\n      apr,\n      days,\n      delta,\n      apiResults,\n      rebalances,\n      govTokensPool,\n      unlentBalance,\n      apiResults_unfiltered\n    });\n  }\n\n  selectToken = async (strategy,token) => {\n    await this.props.setStrategyToken(strategy,token);\n    this.props.changeToken(token);\n  }\n\n  handleCarousel = action => {\n    let carouselIndex = this.state.carouselIndex;\n    if (action==='next' && carouselIndex<this.state.carouselMax){\n      carouselIndex++;\n    } else if (action==='back' && carouselIndex>0){\n      carouselIndex--;\n    }\n\n    const $element = window.jQuery(`#carousel-cursor > div:eq(${carouselIndex})`);\n    const carouselOffsetLeft = -parseFloat($element.position().left)+'px';\n\n    this.setStateSafe({\n      carouselIndex,\n      carouselOffsetLeft\n    });\n  }\n\n  render() {\n\n    const idleTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n    const showAPYDisclaimer = idleTokenEnabled && this.functionsUtil.getGlobalConfig(['govTokens','IDLE','showAPR']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n\n    if (!this.props.availableStrategies){\n      return (\n        <FlexLoader\n          textProps={{\n            textSize:4,\n            fontWeight:2\n          }}\n          loaderProps={{\n            mb:3,\n            size:'40px'\n          }}\n          flexProps={{\n            minHeight:'50vh',\n            flexDirection:'column'\n          }}\n          text={'Loading assets...'}\n        />\n      );\n    }\n\n    if (!this.props.selectedToken){\n      const strategies = this.functionsUtil.getGlobalConfig(['strategies']);\n      const enabledTokens = [];\n      const statsTokens = this.functionsUtil.getGlobalConfig(['stats','tokens']);\n      const statsProtocols = this.functionsUtil.getGlobalConfig(['stats','protocols']);\n      Object.keys(statsTokens).forEach(token => {\n        const tokenInfo = statsTokens[token];\n        if (tokenInfo.enabled){\n          enabledTokens.push(token);\n        }\n      });\n      return (\n        <Flex\n          mb={3}\n          width={1}\n          flexDirection={'column'}\n        >\n          <AssetsUnderManagement\n            {...this.props}\n          />\n          {\n            Object.keys(strategies).map(strategy => {\n              const strategyInfo = strategies[strategy];\n              const availableTokens = this.props.availableStrategies[strategy];\n              if (!availableTokens){\n                return false;\n              }\n              return (\n                <Box\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                  justifyContent={'center'}\n                  key={`strategy-container-${strategy}`}\n                >\n                  <Title\n                    mt={3}\n                    mb={[3,4]}\n                  >\n                    <Flex\n                      flexDirection={'row'}\n                      alignItems={'baseline'}\n                      justifyContent={'center'}\n                    >\n                      {strategyInfo.title}\n                      {\n                        strategyInfo.titlePostfix &&\n                          <Text\n                            ml={2}\n                            fontWeight={3}\n                            fontSize={[2,4]}\n                            color={'dark-gray'}\n                          >\n                            {strategyInfo.titlePostfix}\n                          </Text>\n                      }\n                    </Flex>\n                  </Title>\n                  <AssetsList\n                    enabledTokens={enabledTokens}\n                    handleClick={(props) => this.selectToken(strategy,props.token)}\n                    cols={[\n                      {\n                        title:'CURRENCY',\n                        props:{\n                          width:[0.26,0.15]\n                        },\n                        fields:[\n                          {\n                            name:'icon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2.3em']\n                            }\n                          },\n                          {\n                            name:'tokenName'\n                          }\n                        ]\n                      },\n                      {\n                        title:'POOL',\n                        props:{\n                          width:[0.22,0.14],\n                        },\n                        fields:[\n                          {\n                            name:'allocationChart',\n                            mobile:false,\n                            parentProps:{\n                              width:0.3\n                            },\n                            style:{\n                              overflow:'visible'\n                            },\n                            showLoader:false,\n                          },\n                          {\n                            name:'pool',\n                            props:{\n                              ml:1\n                            },\n                            parentProps:{\n                              width:[1,0.7]\n                            }\n                          }\n                        ]\n                      },\n                      {\n                        title:'APY',\n                        desc:showAPYDisclaimer ? apyLong : null,\n                        props:{\n                          width: [0.29,0.14],\n                        },\n                        parentProps:{\n                          flexDirection:'column',\n                          alignItems:'flex-start',\n                        },\n                        fields:[\n                          {\n                            name:'apy',\n                            showTooltip:true\n                          },\n                          {\n                            name:'idleDistribution',\n                            props:{\n                              decimals:this.props.isMobile ? 1 : 2,\n                              fontSize:this.props.isMobile ? '9px' : 0\n                            }\n                          },\n                        ]\n                      },\n                      {\n                        title:'RISK SCORE',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','riskScore']),\n                        mobile:false,\n                        props:{\n                          width:[0.27,0.16],\n                        },\n                        fields:[\n                          {\n                            name:'score'\n                          }\n                        ]\n                      },\n                      {\n                        title:'APR LAST WEEK',\n                        mobile:false,\n                        props:{\n                          width: 0.25,\n                        },\n                        parentProps:{\n                          width:1,\n                          pr:[2,4]\n                        },\n                        fields:[\n                          {\n                            name:'aprChart',\n                          }\n                        ]\n                      },\n                      {\n                        title:'',\n                        props:{\n                          width:[0.23,0.16],\n                        },\n                        parentProps:{\n                          width:1\n                        },\n                        fields:[\n                          {\n                            name:'button',\n                            label:this.props.isMobile ? 'View' : 'View stats',\n                            props:{\n                              width:1,\n                              fontSize:3,\n                              fontWeight:3,\n                              height:'45px',\n                              borderRadius:4,\n                              boxShadow:null,\n                              mainColor:'redeem',\n                              size: this.props.isMobile ? 'small' : 'medium',\n                              handleClick:(props) => this.selectToken(strategy,props.token)\n                            }\n                          }\n                        ]\n                      }\n                    ]}\n                    {...this.props}\n                    selectedStrategy={strategy}\n                    availableTokens={availableTokens}\n                  />\n                  {\n                    !this.props.isMobile &&\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-end'}\n                      >\n                        {\n                          Object.values(statsProtocols).filter( p => (p.legend) ).map( (p,index) => (\n                            <Flex\n                              mr={3}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              key={`legend_${index}`}\n                            >\n                              <Box\n                                mr={1}\n                                width={'10px'}\n                                height={'10px'}\n                                borderRadius={'50%'}\n                                backgroundColor={`rgb(${p.color.rgb.join(',')})`}\n                              >\n                              </Box>\n                              <Text.span\n                                fontSize={1}\n                                color={'cellText'}\n                              >\n                                {p.label}\n                              </Text.span>\n                            </Flex>\n                          ))\n                        }\n                      </Flex>\n                  }\n                </Box>\n              );\n            })\n          }\n        </Flex>\n      );\n    } else {\n      const versionsOptions = Object.keys(globalConfigs.stats.versions).filter( version => {\n        const versionInfo = this.getVersionInfo(version);\n        return versionInfo.enabledTokens.includes(this.props.selectedToken) && versionInfo.enabledStrategies.includes(this.props.selectedStrategy);\n      }).map( version => {\n        const versionInfo = this.getVersionInfo(version);\n        return {\n          value:version,\n          label:versionInfo.label\n        }\n      });\n\n      const versionInfo = this.getVersionInfo(this.state.idleVersion);\n\n      let performanceTooltip = null;\n      if (this.state.idleVersion && versionInfo){\n        const showPerformanceTooltip = this.functionsUtil.getGlobalConfig(['stats','versions',this.state.idleVersion,'showPerformanceTooltip']);\n        performanceTooltip = showPerformanceTooltip ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'performanceTooltip']) : null;\n      }\n\n      const versionDefaultValue = versionsOptions.find( v => (v.value === this.state.idleVersion) );\n\n      return (\n        <Flex\n          p={0}\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n          /*\n          }\n          <Flex position={['absolute','relative']} left={0} px={[3,0]} zIndex={10} width={1} flexDirection={'row'} mb={[0,3]}>\n            <Flex alignItems={'center'} width={[2/3,1/2]}>\n              <RouterLink to=\"/\">\n                <Image src=\"images/logo-gradient.svg\"\n                  height={['35px','48px']}\n                  position={'relative'} />\n              </RouterLink>\n              <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={3} lineHeight={'initial'} fontSize={[4,5]} ml={[1,2]}>\n                <Text.span fontSize={'80%'}>|</Text.span> Stats\n              </Heading.h3>\n            </Flex>\n            <Flex flexDirection={'row'} width={[1/3,1/2]} justifyContent={'flex-end'} alignItems={'center'}>\n              {\n                this.state.buttonGroups && \n                  this.props.isMobile ? (\n                    <ButtonGroup\n                      isMobile={this.props.isMobile}\n                      components={ this.state.buttonGroups.reduce((components,array) => components.concat(array),[]) }\n                      theme={'light'}\n                    />\n                  ) :\n                  this.state.buttonGroups.map((buttonGroup,i) => (\n                    <ButtonGroup\n                      key={`buttonGroup_${i}`}\n                      isMobile={this.props.isMobile}\n                      components={buttonGroup}\n                      theme={'light'}\n                    />\n                  ))\n              }\n            </Flex>\n          </Flex>\n          */\n          }\n          <Box\n            mb={[3,4]}\n          >\n            <Flex\n              flexDirection={['column','row']}\n            >\n              <Flex\n                width={[1,0.4]}\n              >\n                <Breadcrumb\n                  showPathMobile={true}\n                  text={'ASSETS OVERVIEW'}\n                  isMobile={this.props.isMobile}\n                  handleClick={ e => this.props.goToSection('stats') }\n                  path={[this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])]}\n                />\n              </Flex>\n              <Flex\n                mt={[3,0]}\n                width={[1,0.6]}\n                flexDirection={['column','row']}\n                justifyContent={['center','space-between']}\n              >\n                <Flex\n                  width={[1,0.26]}\n                  flexDirection={'column'}\n                >\n                  <GenericSelector\n                    innerProps={{\n                      p:1,\n                      height:['100%','46px'],\n                    }}\n                    name={'idle-version'}\n                    options={versionsOptions}\n                    defaultValue={versionDefaultValue}\n                    onChange={ v => this.setIdleVersion(v) }\n                  />\n                </Flex>\n                <Flex\n                  mt={[3,0]}\n                  width={[1,0.3]}\n                  flexDirection={'column'}\n                >\n                  <AssetSelector\n                    innerProps={{\n                      p:1\n                    }}\n                    {...this.props}\n                  />\n                </Flex>\n                <Flex\n                  mt={[3,0]}\n                  width={[1,0.39]}\n                  flexDirection={'column'}\n                >\n                  <DashboardCard\n                    cardProps={{\n                      p:1,\n                      display:'flex',\n                      alignItems:'center',\n                      height:['46px','100%'],\n                      justifyContent:'center'\n                    }}\n                    isInteractive={true}\n                    handleClick={ e => this.setDateRangeModal(true) }\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'copyColor'}\n                    >\n                    {\n                      this.state.quickSelection\n                      ?\n                        this.quickSelections[this.state.quickSelection]\n                      : this.state.startTimestampObj && this.state.endTimestampObj &&\n                        `${this.state.startTimestampObj.format('DD/MM/YY')} - ${this.state.endTimestampObj.format('DD/MM/YY')}`\n                    }\n                    </Text>\n                  </DashboardCard>\n                </Flex>\n              </Flex>\n            </Flex>\n          </Box>\n\n          {\n            this.state.idleVersion && (versionInfo.startTimestamp>parseInt(new Date().getTime()/1000)) ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    width:[1,0.5],\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={'AccessTime'}\n                    />\n                    <Text\n                      mt={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      Idle Stats {this.state.idleVersion} will be available shortly!\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            ) : (\n              <Box\n                width={1}\n              >\n                <Box\n                  mt={[3,0]}\n                  mb={[3,4]}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                    flexDirection={['column','row']}\n                  >\n                    <Flex\n                      mb={[2,0]}\n                      pr={[0,2]}\n                      width={[1,1/4]}\n                      flexDirection={'column'}\n                    >\n                      <StatsCard\n                        value={this.state.aum}\n                        title={'Asset Under Management'}\n                        label={ this.state.unlentBalance ? `Unlent funds: ${this.state.unlentBalance} ${this.props.selectedToken}` : this.props.selectedToken }\n                        labelTooltip={ this.state.unlentBalance ? this.functionsUtil.getGlobalConfig(['messages','cheapRedeem']) : null}\n                      />\n                    </Flex>\n                    <Flex\n                      mb={[2,0]}\n                      pr={[0,2]}\n                      width={[1,1/4]}\n                      flexDirection={'column'}\n                    >\n                      <StatsCard\n                        title={'Avg APY'}\n                        label={'Annualized'}\n                      >\n                        <Flex\n                          width={1}\n                          alignItems={'center'}\n                          flexDirection={['column','row']}\n                        >\n                          <VariationNumber\n                            direction={'up'}\n                            iconPos={'right'}\n                            iconSize={'1.8em'}\n                            justifyContent={'flex-start'}\n                            width={1}\n                            >\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'statValue'}\n                              fontSize={[4,5]}\n                            >\n                              {this.state.apr}\n                              <Text.span color={'statValue'} fontWeight={3} fontSize={['90%','70%']}>%</Text.span>\n                            </Text>\n                          </VariationNumber>\n                        </Flex>\n                      </StatsCard>\n                    </Flex>\n                    <Flex\n                      mb={[2,0]}\n                      pr={[0,2]}\n                      width={[1,1/4]}\n                      flexDirection={'column'}\n                    >\n                      <StatsCard\n                        title={'Overperformance on Compound'}\n                        label={'Annualized'}\n                      >\n                        {\n                          this.state.delta && !isNaN(this.state.delta) ? (\n                            <VariationNumber\n                              direction={'up'}\n                              iconPos={'right'}\n                              iconSize={'1.8em'}\n                              justifyContent={'flex-start'}\n                              >\n                              <Text\n                                lineHeight={1}\n                                fontSize={[4,5]}\n                                fontWeight={[3,4]}\n                                color={'statValue'}\n                              >\n                                {this.state.delta}\n                                <Text.span color={'statValue'} fontWeight={3} fontSize={['90%','70%']}>%</Text.span>\n                              </Text>\n                            </VariationNumber>\n                          ) : (\n                            <Text\n                              lineHeight={1}\n                              fontSize={[4,5]}\n                              fontWeight={[3,4]}\n                              color={'statValue'}\n                            >\n                              {this.state.delta}\n                            </Text>\n                          )\n                        }\n                      </StatsCard>\n                    </Flex>\n                    <Flex\n                      mb={[2,0]}\n                      pr={[0,2]}\n                      width={[1,1/4]}\n                      flexDirection={'column'}\n                    >\n                      <StatsCard\n                        label={' '}\n                        title={'Rebalances'}\n                        value={this.state.rebalances.toString()}\n                      />\n                    </Flex>\n                    {\n                    /*\n                    <Flex width={[1,1/4]} flexDirection={'column'} px={[0,2]}>\n                      <Card my={[2,2]} py={3} pl={0} pr={'10px'} borderRadius={'10px'} boxShadow={0}>\n                        <Flex alignItems={'center'} justifyContent={'center'} flexDirection={'column'} width={1}>\n                          <Text.span color={'copyColor'} fontWeight={2} fontSize={'90%'}>Current APR</Text.span>\n                          <Text lineHeight={1} mt={1} color={'copyColor'} fontSize={[4,'26px']} fontWeight={3} textAlign={'center'}>\n                            {this.state.currApr}\n                            <Text.span color={'copyColor'} fontWeight={3} fontSize={['90%','70%']}>%</Text.span>\n                          </Text>\n                        </Flex>\n                      </Card>\n                    </Flex>\n                    <Flex width={[1,1/4]} flexDirection={'column'} px={[0,2]}>\n                      <Card my={[2,2]} py={3} pl={0} pr={'10px'} borderRadius={'10px'} boxShadow={0}>\n                        <Flex alignItems={'center'} justifyContent={'center'} flexDirection={'column'} width={1}>\n                          <Text.span color={'copyColor'} fontWeight={2} fontSize={'90%'}>Days Live</Text.span>\n                          <Text lineHeight={1} mt={1} color={'copyColor'} fontSize={[4,'26px']} fontWeight={3} textAlign={'center'}>\n                            {this.state.days}\n                          </Text>\n                        </Flex>\n                      </Card>\n                    </Flex>\n                    */\n                    }\n                  </Flex>\n                </Box>\n\n                <DashboardCard\n                  title={'Historical Performance'}\n                  description={performanceTooltip}\n                  cardProps={{\n                    mb:[3,4]\n                  }}\n                >\n                  <Flex id='chart-PRICE' width={1} mb={3}>\n                    <StatsChart\n                      height={ 350 }\n                      {...this.state}\n                      parentId={'chart-PRICE'}\n                      isMobile={this.props.isMobile}\n                      contracts={this.props.contracts}\n                      apiResults={this.state.apiResults}\n                      idleVersion={this.state.idleVersion}\n                      apiResults_unfiltered={this.state.apiResults_unfiltered}\n                      chartMode={this.state.idleVersion === this.state.latestVersion ? 'PRICE_V4' : 'PRICE'}\n                    />\n                  </Flex>\n                </DashboardCard>\n\n                <DashboardCard\n                  cardProps={{\n                    pb:3,\n                    mb:[3,4]\n                  }}\n                >\n                  <Flex\n                    flexDirection={['column','row']}\n                    justifyContent={'space-between'}\n                  >\n                    {\n                      this.state.idleVersion === this.state.latestVersion && \n                      <Flex\n                        pt={2}\n                        width={[1,1/3]}\n                        id={'allocation-chart'}\n                        flexDirection={'column'}\n                        alignItems={'flex-start'}\n                        justifyContent={'flex-start'}\n                      >\n                        <AllocationChart\n                          height={310}\n                          {...this.props}\n                          parentId={'allocation-chart'}\n                        />\n                        <Rebalance\n                          {...this.props}\n                        />\n                      </Flex>\n                    }\n                    <Flex\n                      mb={[0,3]}\n                      id={'chart-ALL'}\n                      pl={[0,this.state.idleVersion === this.state.latestVersion ? 0 : 3]}\n                      width={[1, this.state.idleVersion === this.state.latestVersion ? 2/3 : 1]}\n                    >\n                      <Flex alignItems={'flex-start'} justifyContent={'flex-start'} flexDirection={'column'} width={1}>\n                        <Heading.h4\n                          mb={2}\n                          ml={3}\n                          mt={[3,4]}\n                          fontWeight={4}\n                          fontSize={[2,3]}\n                          textAlign={'left'}\n                          color={'dark-gray'}\n                          lineHeight={'initial'}\n                        >\n                          Allocations over time\n                        </Heading.h4>\n                        <StatsChart\n                          height={350}\n                          {...this.state}\n                          chartMode={'ALL'}\n                          parentId={'chart-ALL'}\n                          isMobile={this.props.isMobile}\n                          contracts={this.props.contracts}\n                          apiResults={this.state.apiResults}\n                          idleVersion={this.state.idleVersion}\n                          apiResults_unfiltered={this.state.apiResults_unfiltered}\n                        />\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n\n                <Flex\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    id={'carousel-container'}\n                    justifyContent={'flex-end'}\n                  >\n                    <RoundIconButton\n                      buttonProps={{\n                        mr:3\n                      }}\n                      iconName={'ArrowBack'}\n                      disabled={this.state.carouselIndex === 0}\n                      handleClick={ e => this.handleCarousel('back') }\n                    />\n                    <RoundIconButton\n                      iconName={'ArrowForward'}\n                      handleClick={ e => this.handleCarousel('next') }\n                      disabled={this.state.carouselIndex === this.state.carouselMax}\n                    />\n                  </Flex>\n                  <Flex\n                    mt={5}\n                    height={'400px'}\n                    position={'absolute'}\n                    id={'carousel-cursor'}\n                    width={['444%','200%']}\n                    justifyContent={'flex-start'}\n                    left={this.state.carouselOffsetLeft}\n                    style={{\n                      transition:'left 0.3s ease-in-out'\n                    }}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        mr:4,\n                        height:'fit-content',\n                        style:this.props.isMobile ? {width:'100%'} : {width:'32vw'}\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        id='chart-AUM'\n                      >\n                        <Flex\n                          mb={3}\n                          width={1}\n                          flexDirection={'column'}\n                          alignItems={'flex-start'}\n                          justifyContent={'center'}\n                        >\n                          <Heading.h4\n                            ml={3}\n                            mt={3}\n                            mb={2}\n                            fontWeight={4}\n                            fontSize={[2,3]}\n                            textAlign={'left'}\n                            color={'dark-gray'}\n                            lineHeight={'initial'}\n                          >\n                            Asset Under Management\n                          </Heading.h4>\n                          <StatsChart\n                            height={300}\n                            {...this.state}\n                            chartMode={'AUM'}\n                            parentId={'chart-AUM'}\n                            isMobile={this.props.isMobile}\n                            contracts={this.props.contracts}\n                            apiResults={this.state.apiResults}\n                            idleVersion={this.state.idleVersion}\n                            apiResults_unfiltered={this.state.apiResults_unfiltered}\n                          />\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        mr:4,\n                        height:'fit-content',\n                        style:this.props.isMobile ? {width:'100%'} : {width:'32vw'}\n                      }}\n                    >\n                      <Flex id='chart-APR' width={1}>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          flexDirection={'column'}\n                          alignItems={'flex-start'}\n                          justifyContent={'center'}\n                        >\n                          <Heading.h4\n                            mb={2}\n                            ml={3}\n                            mt={3}\n                            fontWeight={4}\n                            fontSize={[2,3]}\n                            textAlign={'left'}\n                            color={'dark-gray'}\n                            lineHeight={'initial'}\n                          >\n                            APRs\n                          </Heading.h4>\n                          <StatsChart\n                            height={300}\n                            {...this.state}\n                            chartMode={'APR'}\n                            parentId={'chart-APR'}\n                            isMobile={this.props.isMobile}\n                            contracts={this.props.contracts}\n                            apiResults={this.state.apiResults}\n                            idleVersion={this.state.idleVersion}\n                            apiResults_unfiltered={this.state.apiResults_unfiltered}\n                          />\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        mr:4,\n                        height:'fit-content',\n                        style:this.props.isMobile ? {width:'100%'} : {width:'32vw'}\n                      }}\n                      title={'Risk Score'}\n                      description={'Idle Risk Score is a weighted average of the underlying protocols risks assessed by DeFi Score'}\n                      titleParentProps={{\n                        ml:16,\n                        mt:16\n                      }}\n                    >\n                      <Flex id='chart-SCORE' width={1}>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          flexDirection={'column'}\n                          alignItems={'flex-start'}\n                          justifyContent={'center'}\n                        >\n                          <StatsChart\n                            height={300}\n                            {...this.state}\n                            chartMode={'SCORE'}\n                            parentId={'chart-SCORE'}\n                            isMobile={this.props.isMobile}\n                            contracts={this.props.contracts}\n                            apiResults={this.state.apiResults}\n                            idleVersion={this.state.idleVersion}\n                            apiResults_unfiltered={this.state.apiResults_unfiltered}\n                          />\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        mr:4,\n                        height:'fit-content',\n                        style:this.props.isMobile ? {width:'100%'} : {width:'32vw'}\n                      }}\n                    >\n                      <Flex id='chart-VOL' width={1}>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          flexDirection={'column'}\n                          alignItems={'flex-start'}\n                          justifyContent={'center'}\n                        >\n                          <Heading.h4\n                            mb={2}\n                            ml={3}\n                            mt={3}\n                            fontWeight={4}\n                            fontSize={[2,3]}\n                            textAlign={'left'}\n                            color={'dark-gray'}\n                            lineHeight={'initial'}\n                          >\n                            Volume\n                          </Heading.h4>\n                          <StatsChart\n                            height={300}\n                            {...this.state}\n                            chartMode={'VOL'}\n                            parentId={'chart-VOL'}\n                            isMobile={this.props.isMobile}\n                            contracts={this.props.contracts}\n                            apiResults={this.state.apiResults}\n                            idleVersion={this.state.idleVersion}\n                            apiResults_unfiltered={this.state.apiResults_unfiltered}\n                          />\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              </Box>\n            )\n          }\n\n          <DateRangeModal\n            minDate={this.state.minDate}\n            maxDate={this.state.maxDate}\n            handleSelect={this.setDateRange}\n            isOpen={this.state.dateRangeModalOpened}\n            closeModal={e => this.setDateRangeModal(false)}\n            startDate={this.state.startTimestampObj ? this.state.startTimestampObj._d : null}\n            endDate={this.state.endTimestampObj ? this.state.endTimestampObj._d : null}\n          />\n        </Flex>\n      );\n    }\n  }\n}\n\nexport default Stats;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport { Flex, Icon, Text, Box } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass Utils extends Component {\n\n  state = {\n\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const SubComponent = this.props.selectedSubsection && this.props.selectedSubsection.subComponent ? this.props.selectedSubsection.subComponent : null;\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.props.selectedSubsection ? (\n            <Box\n              width={1}\n            >\n              <Flex\n                width={1}\n              >\n                <Breadcrumb\n                  showPathMobile={true}\n                  isMobile={this.props.isMobile}\n                  path={[this.props.selectedSubsection.label]}\n                  text={this.props.selectedSection.label.toUpperCase()}\n                  handleClick={ e => this.props.goToSection(this.props.selectedSection.route) }\n                />\n              </Flex>\n              <Flex\n                my={[2,3]}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Title\n                  mb={2}\n                >\n                  {this.props.selectedSubsection.label}\n                </Title>\n                <Text\n                  textAlign={'center'}\n                >\n                  {this.props.selectedSubsection.desc}\n                </Text>\n              </Flex>\n              <SubComponent\n                {...this.props}\n                {...this.props.selectedSubsection.directProps}\n                toolProps={this.props.selectedSubsection.props}\n              />\n            </Box>\n          ) : (\n            <Flex\n              my={[2,3]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Title\n                mb={3}\n              >\n                Tools\n              </Title>\n              <Flex\n                width={1}\n                style={{\n                  flexWrap:'wrap'\n                }}\n              >\n              {\n                this.props.selectedSection.submenu.map( (tool,toolIndex) => (\n                  <DashboardCard\n                    isInteractive={true}\n                    key={`tool_${toolIndex}`}\n                    cardProps={{\n                      p:[3,4],\n                      mb:[3,3],\n                      mr:[0,'2%'],\n                      style:{\n                        flex: this.props.isMobile ? '1 1 100%' : '0 0 31%'\n                      },\n                      alignItems:'center',\n                      flexDirection:'column',\n                      justifyContent:'center'\n                    }}\n                    handleClick={ e => this.props.goToSection(this.props.selectedSection.route+'/'+tool.route) }\n                  >\n                    <Text\n                      fontSize={[3,4]}\n                      textAlign={'center'}\n                    >\n                      {tool.label}\n                    </Text>\n                    <Flex\n                      justifyContent={'center'}\n                    >\n                      <Icon\n                        my={[0,2]}\n                        size={'3em'}\n                        name={tool.icon}\n                      />\n                    </Flex>\n                    <Text\n                      fontSize={[2,2]}\n                      textAlign={'center'}\n                    >\n                      {tool.desc}\n                    </Text>\n                  </DashboardCard>\n                ) )\n              }\n              </Flex>\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Utils;\n","import theme from '../theme';\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport { Flex, Heading, Text } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\n\nclass FundsOverview extends Component {\n\n  state = {\n    govTokensAprs:null,\n    aggregatedValues:[],\n    govTokensTotalApr:null,\n    govTokensUserBalance:null,\n    govTokensDistribution:null,\n    govTokensTotalBalance:null,\n    govTokensTotalAprTooltip:null,\n    idleTokenUserDistribution:null,\n    govTokensDistributionTooltip:null,\n    govTokensTotalBalanceTooltip:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const [\n      govTokensAprs,\n      idleTokenUserDistribution,\n      govTokensUserBalance,\n      avgAPY,\n      days\n    ] = await Promise.all([\n      this.functionsUtil.getGovTokensAprs(this.props.selectedToken,this.props.tokenConfig),\n      this.idleGovToken.getUserDistribution(this.props.account,govTokenAvailableTokens,true),\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,null),\n      this.functionsUtil.loadAssetField('avgAPY',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadAssetField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    const govTokensTotalBalance = govTokensUserBalance ? Object.values(govTokensUserBalance).reduce( (totBalance,govTokenBalance) => {\n      return totBalance.plus(this.functionsUtil.BNify(govTokenBalance));\n    },this.functionsUtil.BNify(0)) : null;\n\n    const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n      const balance = govTokensUserBalance[govToken];\n      if (balance.gt(0)){\n        return `+${balance.toFixed(2)} ${govToken}`;\n      } else {\n        return null;\n      }\n    }).filter(v => (v !== null)) : null;\n\n    // console.log(govTokensTotalBalance,govTokensUserBalance,govTokensTotalBalanceTooltip);\n\n    const govTokensTotalApr = govTokensAprs ? Object.values(govTokensAprs).reduce( (totApr,govTokenApr) => {\n      return totApr.plus(this.functionsUtil.BNify(govTokenApr));\n    },this.functionsUtil.BNify(0)) : null;\n\n    const govTokensTotalAprTooltip = govTokensAprs ? Object.keys(govTokensAprs).map( govToken => {\n      const apr = govTokensAprs[govToken];\n      if (apr.gt(0)){\n        return `${govToken}: ${apr.toFixed(2)}%`;\n      }\n      return null;\n    }).filter(v => (v !== null)) : null;\n\n    /*\n    const govTokensDistributionTooltip = govTokensUserDistribution ? Object.keys(govTokensUserDistribution).map( govToken => {\n      const speed = govTokensUserDistribution[govToken];\n      if (speed.gt(0)){\n        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n        return `+${speed.toFixed(4)} ${govToken}/${distributionFrequency}`;\n      }\n      return null;\n    }).filter(v => (v !== null)) : null;\n    */\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '-') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <AssetField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    this.setState({\n      govTokensAprs,\n      aggregatedValues,\n      govTokensTotalApr,\n      govTokensUserBalance,\n      govTokensTotalBalance,\n      govTokensTotalAprTooltip,\n      idleTokenUserDistribution,\n      govTokensTotalBalanceTooltip\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Text\n                          mt={2}\n                          fontWeight={2}\n                          fontSize={[1,2]}\n                          color={'cellText'}\n                        >\n                          {v.props.title}\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          <Flex\n            width={1}\n            ml={[0,3]}\n            id={\"funds-overview\"}\n          >\n            <PortfolioEquity\n              {...this.props}\n              chartHeight={350}\n              parentId={'funds-overview'}\n              chartToken={this.props.selectedToken}\n              enabledTokens={[this.props.selectedToken]}\n              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n            />\n          </Flex>\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'amountLent',\n                  props:{\n                    decimals:4,\n                    maxPrecision:8,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'redeemableBalanceCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-9px'}\n              >\n                <AssetField\n                  {...this.props}\n                  token={this.props.selectedToken}\n                  fieldInfo={{\n                    name:'earningsPerc',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'earningsCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.govTokensTotalBalanceTooltip && this.state.govTokensTotalBalanceTooltip.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.govTokensTotalBalanceTooltip.map((govTokenBalance,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          mt={govTokenIndex ? 1 : 0}\n                          key={`govToken_${govTokenIndex}`}\n                        >\n                          {govTokenBalance}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                )/* : this.state.govTokensUserBalance && Object.keys(this.state.govTokensUserBalance).length>1 ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      + ${this.state.govTokensTotalBalance.toFixed(4)}\n                    </Text>\n                    <Tooltip\n                      placement={'top'}\n                      message={this.state.govTokensTotalBalanceTooltip.join(' / ')}\n                    >\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        color={'cellTitle'}\n                        name={\"InfoOutline\"}\n                      />\n                    </Tooltip>\n                  </Flex>\n                ) : null\n                */\n              }\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Fees\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'feesCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Current APY\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'apy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.idleTokenUserDistribution && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mt={1}\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      {this.state.idleTokenUserDistribution.toFixed(4)} {this.idleGovToken.tokenName}/{this.idleGovToken.tokenConfig.distributionFrequency}\n                    </Text>\n                  </Flex>\n                )\n                /*\n                this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length===1 ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      Object.keys(this.state.govTokensAprs).map((govToken,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          ml={govTokenIndex ? 2 : 0}\n                          key={`govToken_${govToken}`}\n                        >\n                          {this.state.govTokensAprs[govToken].toFixed(2)}% {govToken}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                ) : this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>1 ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      + {this.state.govTokensTotalApr.toFixed(2)}%\n                    </Text>\n                    <Tooltip\n                      placement={'top'}\n                      message={this.state.govTokensTotalAprTooltip.join('; ')}\n                    >\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        color={'cellTitle'}\n                        name={\"InfoOutline\"}\n                      />\n                    </Tooltip>\n                  </Flex>\n                ) : null\n                */\n              }\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Risk Score\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'score',\n                  props:{\n                    decimals:1,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverview;","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Flex, Text, Icon, Checkbox, Box, Link, Input, Tooltip } from \"rimble-ui\";\n\nclass CurveRedeem extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    maxSlippage:0.2,\n    tokenConfig:null,\n    unevenAmounts:null,\n    selectedToken:null,\n    availableTokens:null,\n    buttonDisabled:false,\n    showMaxSlippage:false,\n    curveTokenConfig:null,\n    curvePoolContract:null,\n    curveSwapContract:null,\n    curveTokenBalance:null,\n    curveTokensAmounts:null,\n    fastBalanceSelector:null,\n    redeemUnevenAmounts:false,\n    curveRedeemableIdleTokens:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.initToken();\n  }\n\n  showMaxSlippage = () => {\n    this.setState({\n      showMaxSlippage:true\n    });\n  }\n\n  toggleUnevenAmounts = (redeemUnevenAmounts) => {\n    this.setState({\n      redeemUnevenAmounts\n    });\n  }\n\n  async calculateSlippage(max_slippage=null){\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n\n    if (!inputValue || inputValue.lte(0)){\n      return false;\n    }\n\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.curvePoolContract.decimals);\n    const [curveTokensAmounts,curveIdleTokensAmounts] = await Promise.all([\n      this.functionsUtil.getCurveTokensAmounts(this.props.account,normalizedAmount,true),\n      this.functionsUtil.getCurveIdleTokensAmounts(this.props.account,normalizedAmount)\n    ])\n\n    const amounts = this.state.redeemUnevenAmounts ? curveIdleTokensAmounts : null;\n\n    let withdrawSlippage = await this.functionsUtil.getCurveSlippage(this.state.tokenConfig.idle.token,normalizedAmount,false,amounts);\n    if (withdrawSlippage){\n      withdrawSlippage = withdrawSlippage.times(100);\n    }\n\n    this.setState({\n      withdrawSlippage,\n      curveTokensAmounts,\n      curveIdleTokensAmounts\n    });\n\n    // Add max slippage but don't save in state\n    if (withdrawSlippage && max_slippage){\n      withdrawSlippage = withdrawSlippage.plus(max_slippage);\n    }\n\n    return withdrawSlippage;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.tokenConfig.idle.token !== this.props.tokenConfig.idle.token;\n    if (tokenChanged){\n      await this.initToken();\n    }\n\n    const redeemUnevenAmountsChanged = prevState.redeemUnevenAmounts !== this.state.redeemUnevenAmounts;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || redeemUnevenAmountsChanged){\n      this.setInputValue();\n    }\n\n    const inputChanged = prevState.inputValue !== this.state.inputValue;\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const maxSlippageChanged = parseFloat(prevState.maxSlippage) !== parseFloat(this.state.maxSlippage);\n    if (inputChanged || selectedTokenChanged || maxSlippageChanged){\n      this.calculateSlippage();\n    }\n  }\n\n  checkButtonDisabled = (amount=null) => {\n\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n\n    let buttonDisabled = false;\n\n    if (this.state.redeemUnevenAmounts){\n      buttonDisabled = !amount || amount.gt(this.state.curveTokenBalance);\n    } else {\n      buttonDisabled = !amount || amount.gt(this.state.redeemableBalance);\n    }\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    let inputValue = null;\n\n    if (this.state.redeemUnevenAmounts){\n      inputValue = this.state.curveTokenBalance ? this.functionsUtil.BNify(this.state.curveTokenBalance).times(selectedPercentage) : null;\n    } else {\n      inputValue = this.state.redeemableBalance ? this.functionsUtil.BNify(this.state.redeemableBalance).times(selectedPercentage) : null;\n    }\n\n    this.checkButtonDisabled(inputValue);\n\n    this.setState({\n      inputValue\n    });\n  }\n\n  changeToken = selectedToken => {\n    const tokenConfig = this.state.availableTokens[selectedToken];\n    this.setState({\n      tokenConfig,\n      selectedToken\n    });\n  }\n\n  initToken = async () => {\n    const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n    const curveTokenConfig = curveConfig.availableTokens[this.props.tokenConfig.idle.token];\n\n    const [curvePoolContract,curveSwapContract] = await Promise.all([\n      this.functionsUtil.getCurvePoolContract(),\n      this.functionsUtil.getCurveSwapContract()\n    ]);\n\n    const [\n      curveTokenPrice,\n      curveTokenBalance,\n      curveRedeemableIdleTokens,\n    ] = await Promise.all([\n      this.functionsUtil.getCurveTokenPrice(),\n      this.functionsUtil.getCurveTokenBalance(this.props.account),\n      this.functionsUtil.getCurveRedeemableIdleTokens(this.props.account)\n    ]);\n\n    const redeemableBalance = curveTokenBalance ? curveTokenBalance.times(curveTokenPrice) : this.functionsUtil.BNify(0);\n\n    // const max_burn_amount = this.functionsUtil.normalizeTokenAmount(curveTokenBalance,curvePoolContract.decimals).toString();\n    // const amounts = this.functionsUtil.getCurveAmounts(this.props.tokenConfig.idle.token,0);\n    // let redeemUnevenAmounts = await this.functionsUtil.getCurveUnevenTokenAmounts(amounts,max_burn_amount);\n\n    const unevenAmounts = [];\n\n    let tokenConfig = this.props.tokenConfig ? this.props.tokenConfig : this.state.tokenConfig;\n    let selectedToken = this.props.selectedToken ? this.props.selectedToken : this.state.selectedToken;\n    let availableTokens = this.state.availableTokens;\n\n    if (!availableTokens){\n      availableTokens = this.functionsUtil.getCurveAvailableTokens();\n      if (!selectedToken){\n        selectedToken = Object.keys(availableTokens)[0];\n        tokenConfig = availableTokens[selectedToken];\n      }\n    }\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      unevenAmounts,\n      curveTokenPrice,\n      availableTokens,\n      curveTokenConfig,\n      curvePoolContract,\n      curveSwapContract,\n      curveTokenBalance,\n      redeemableBalance,\n      curveRedeemableIdleTokens\n    });\n  }\n\n  redeem = async () => {\n\n    if (!this.state.curveTokenBalance){\n      return false;\n    }\n\n    const callbackRedeem = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveRedeem`,\n        eventAction: this.props.selectedToken,\n        eventValue: this.state.curveTokenBalance.toFixed()\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      }));\n\n      if (typeof this.props.callbackRedeem === 'function' && txSucceeded){\n        this.props.callbackRedeem(tx);\n      }\n    };\n\n    const callbackReceiptRedeem = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const contractName = this.state.curveSwapContract.name;\n    const withdrawSlippage = await this.calculateSlippage(this.state.maxSlippage);\n    const max_slippage = this.functionsUtil.BNify(this.state.maxSlippage).div(100);\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.curvePoolContract.decimals);\n    const curveTokenBalance = this.functionsUtil.normalizeTokenAmount(this.state.curveTokenBalance,this.state.curvePoolContract.decimals);\n\n    if (this.state.redeemUnevenAmounts){\n      const min_amounts = await this.functionsUtil.getCurveIdleTokensAmounts(this.props.account,_amount,max_slippage);\n      console.log('remove_liquidity',_amount.toString(),min_amounts);\n      this.props.contractMethodSendWrapper(contractName, 'remove_liquidity', [_amount, min_amounts], null, callbackRedeem, callbackReceiptRedeem);\n    } else {\n      const coin_index = this.state.curveTokenConfig.migrationParams.coinIndex;\n      const amounts = await this.functionsUtil.getCurveAmounts(this.props.tokenConfig.idle.token,_amount,false);\n      const min_amount = this.functionsUtil.normalizeTokenAmount(inputValue.minus(inputValue.times(withdrawSlippage.div(100))),this.state.curveTokenConfig.decimals);\n      let _token_amount = await this.functionsUtil.getCurveTokenAmount(amounts,false);\n      _token_amount = this.functionsUtil.BNify(_token_amount).isGreaterThan(curveTokenBalance) ? curveTokenBalance : this.functionsUtil.BNify(_token_amount);\n\n      console.log('remove_liquidity_one_coin',_amount,amounts,coin_index,_token_amount.toFixed(),min_amount);\n\n      // debugger;\n      this.props.contractMethodSendWrapper(contractName, 'remove_liquidity_one_coin', [_token_amount, coin_index, min_amount], null, callbackRedeem, callbackReceiptRedeem);\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  changeInputValue = (e) => {\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    this.checkButtonDisabled(inputValue);\n\n    const fastBalanceSelector = null;\n\n    this.setState((prevState) => ({\n      inputValue,\n      fastBalanceSelector,\n    }));\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  setMaxSlippage = (maxSlippage) => {\n    this.setState({\n      maxSlippage\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  render() {\n\n    const showSlippage = !this.state.buttonDisabled && this.state.withdrawSlippage;\n    const curveTokenName = this.functionsUtil.getGlobalConfig(['curve','poolContract','token']);\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          {\n            !this.state.curveTokenBalance ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3,\n                  minHeight:'195px',\n                  style:{\n                    display:'flex',\n                    alignItems:'center',\n                    justifyContent:'center'\n                  }\n                }}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Checking Curve Pool...'}\n                />\n              </DashboardCard>\n            ) : this.state.processing.loading ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  flexDirection={'column'}\n                >\n                  <TxProgressBar\n                    web3={this.props.web3}\n                    hash={this.state.processing.txHash}\n                    endMessage={`Finalizing redeem request...`}\n                    cancelTransaction={this.cancelTransaction.bind(this)}\n                    waitText={ this.props.waitText ? this.props.waitText : 'Redeem estimated in'}\n                  />\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Flex\n                width={1}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    mb:2\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'1.8em'}\n                      color={'cellText'}\n                      name={'FileUpload'}\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      Withdraw from the Curve Pool in a specific token or in uneven amounts of tokens (with no slippage).\n                    </Text>\n                    <Flex\n                      mt={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Checkbox\n                        required={false}\n                        label={`Redeem with no slippage`}\n                        checked={this.state.redeemUnevenAmounts}\n                        onChange={ e => this.toggleUnevenAmounts(e.target.checked) }\n                      />\n                      <Tooltip\n                        placement={'top'}\n                        message={`You will receive an uneven amounts of ${Object.keys(this.state.availableTokens).join(', ')} proportional to the token availailability in the Curve pool.`}\n                      >\n                        <Icon\n                          size={'1em'}\n                          color={'cellTitle'}\n                          name={\"InfoOutline\"}\n                        />\n                      </Tooltip>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n                {\n                  !this.state.redeemUnevenAmounts && (!this.props.selectedToken || (this.state.showMaxSlippage && showSlippage)) ? (\n                    <Box\n                      mb={3}\n                      width={1}\n                    >\n                      {\n                        !this.props.selectedToken && \n                          <Box\n                            width={1}\n                          >\n                            <Text\n                              mb={1}\n                            >\n                              Select destination token:\n                            </Text>\n                            <AssetSelector\n                              {...this.props}\n                              id={'token-from'}\n                              showBalance={false}\n                              onChange={this.changeToken}\n                              tokenConfig={this.state.tokenConfig}\n                              selectedToken={this.state.selectedToken}\n                              availableTokens={this.state.availableTokens}\n                            />\n                          </Box>\n                      }\n                      {\n                        this.state.showMaxSlippage && showSlippage && (\n                          <Box\n                            width={1}\n                            mt={ !this.props.selectedToken ? 2 : 0 }\n                          >\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text>\n                                Choose max slippage:\n                              </Text>\n                              <Tooltip\n                                placement={'top'}\n                                message={`Max additional slippage on top of the one shown below`}\n                              >\n                                <Icon\n                                  ml={1}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                  name={\"InfoOutline\"}\n                                />\n                              </Tooltip>\n                            </Flex>\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [0.2,0.5,1,5].map( slippage => (\n                                  <FastBalanceSelector\n                                    cardProps={{\n                                      p:1\n                                    }}\n                                    textProps={{\n                                      fontSize:1\n                                    }}\n                                    percentage={slippage}\n                                    key={`selector_${slippage}`}\n                                    onMouseDown={()=>this.setMaxSlippage(slippage)}\n                                    isActive={this.state.maxSlippage === parseFloat(slippage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Box>\n                        )\n                      }\n                    </Box>\n                  ) : this.state.redeemUnevenAmounts && this.state.curveTokensAmounts && !this.state.buttonDisabled && (\n                    <DashboardCard\n                      cardProps={{\n                        mt:1,\n                        mb:2,\n                        py:2,\n                        px:1\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          You will receive:\n                        </Text>\n                        <Flex\n                          mt={2}\n                          width={1}\n                          boxShadow={0}\n                          style={{\n                            flexWrap:'wrap'\n                          }}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                          >\n                            {\n                              Object.keys(this.state.curveTokensAmounts).map( token => {\n                                const balance = this.state.curveTokensAmounts[token];\n                                return (\n                                  <Flex\n                                    mb={1}\n                                    mx={1}\n                                    minWidth={'21%'}\n                                    flexDirection={'row'}\n                                    key={`tokenBalance_${token}`}\n                                    justifyContent={'flex-start'}\n                                  >\n                                    <AssetField\n                                      token={token}\n                                      tokenConfig={{\n                                        token:token\n                                      }}\n                                      fieldInfo={{\n                                        name:'icon',\n                                        props:{\n                                          mr:1,\n                                          width:['1.4em','1.6em'],\n                                          height:['1.4em','1.6em']\n                                        }\n                                      }}\n                                    />\n                                    <SmartNumber\n                                      fontSize={[0,1]}\n                                      fontWeight={500}\n                                      maxPrecision={4}\n                                      color={'cellText'}\n                                      number={balance.toString()}\n                                    />\n                                  </Flex>\n                                );\n                            })\n                          }\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                }\n                <Flex\n                  mb={3}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Flex\n                    mb={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'flex-end'}\n                  >\n                    {\n                      showSlippage && (\n                        <Flex\n                          width={1}\n                          maxWidth={'50%'}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text\n                            fontSize={1}\n                            fontWeight={3}\n                            textAlign={'right'}\n                            style={{\n                              whiteSpace:'nowrap'\n                            }}\n                            color={ this.state.withdrawSlippage.gt(0) ? this.props.theme.colors.transactions.status.failed : this.props.theme.colors.transactions.status.completed }\n                          >\n                            {\n                              parseFloat(this.state.withdrawSlippage.toFixed(2)) === 0 ?\n                                'No Slippage'\n                              : `${ this.state.withdrawSlippage.gt(0) ? 'Slippage: ' : 'Bonus: ' } ${this.state.withdrawSlippage.abs().toFixed(2)}%`\n                            }\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={ this.state.redeemUnevenAmounts ? `You will receive an uneven amounts of ${Object.keys(this.state.availableTokens).join(', ')} proportional to the token availailability in the Curve pool.` : this.state.withdrawSlippage.gt(0) ? 'Slippage comes from depositing too many coins not in balance, and current coin prices are additionally accounted for' : 'Bonus comes as an advantage from current coin prices which usually appears for coins which are high in balance'}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              color={'cellTitle'}\n                              name={\"InfoOutline\"}\n                            />\n                          </Tooltip>\n                          {\n                            !this.state.redeemUnevenAmounts &&\n                              <Link\n                                ml={1}\n                                color={'copyColor'}\n                                hoverColor={'primary'}\n                                onClick={this.showMaxSlippage}\n                              >\n                                change\n                              </Link>\n                          }\n                        </Flex>\n                      )\n                    }\n                    <Flex\n                      width={1}\n                      maxWidth={'50%'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                    >\n                      <Link\n                        fontSize={1}\n                        fontWeight={3}\n                        color={'dark-gray'}\n                        textAlign={'right'}\n                        hoverColor={'copyColor'}\n                        onClick={ (e) => this.setFastBalanceSelector(100) }\n                        style={{\n                          maxWidth:'100%',\n                          overflow:'hidden',\n                          whiteSpace:'nowrap',\n                          textOverflow:'ellipsis'\n                        }}\n                      >\n                        {\n                          this.state.redeemUnevenAmounts ? `${this.state.curveTokenBalance.toFixed(this.props.isMobile ? 2 : 4)} ${curveTokenName}` : `${this.state.redeemableBalance.toFixed(this.props.isMobile ? 2 : 4)} ${this.state.selectedToken}`\n                        }\n                      </Link>\n                    </Flex>\n                  </Flex>\n                  <Input\n                    min={0}\n                    type={\"number\"}\n                    required={true}\n                    height={'3.4em'}\n                    borderRadius={2}\n                    fontWeight={500}\n                    boxShadow={'none !important'}\n                    placeholder={`Insert amount`}\n                    onChange={this.changeInputValue.bind(this)}\n                    border={`1px solid ${this.props.theme.colors.divider}`}\n                    value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                  />\n                  <Flex\n                    mt={2}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    {\n                      [25,50,75,100].map( percentage => (\n                        <FastBalanceSelector\n                          percentage={percentage}\n                          key={`selector_${percentage}`}\n                          onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                          isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                        />\n                      ))\n                    }\n                  </Flex>\n                </Flex>\n                <Flex\n                  justifyContent={'center'}\n                >\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2],\n                      disabled:this.state.buttonDisabled\n                    }}\n                    handleClick={this.redeem}\n                  >\n                    Redeem\n                  </RoundButton>\n                </Flex>\n              </Flex>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CurveRedeem;","import React, { Component } from 'react';\nimport {\n  Button,\n  Flex,\n  Box,\n  Text\n} from \"rimble-ui\";\nimport styles from './TwitterShareButton.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TwitterShareButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  share = () => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Share',\n      eventAction: 'twitter',\n      eventLabel: this.props.parent\n    });\n\n    const w = Math.min(window.innerWidth,600);\n    const h = 350;\n    const x = (window.innerWidth-w)/2;\n    const y = 150;\n    window.open(`https://twitter.com/intent/tweet?text=${this.props.tweet}`,\"_blank\",`toolbar=yes,scrollbars=no,resizable=no,top=${y},left=${x},width=${w},height=${h}`);\n  }\n\n  render() {\n    return (\n        <Button\n          borderRadius={1}\n          mainColor={'#2aa6f2'}\n          contrastColor={'white'}\n          onClick={ e => { this.share() } }\n        >\n          <Flex flexDirection={'row'} alignItems={'center'} justifyContent={'center'}>\n            <Box className={styles.twitterIcon} />\n            <Text color={'white'} fontWeight={3} ml={2}>{ this.props.text ? this.props.text : 'Tweet' }</Text>\n          </Flex>\n        </Button>\n    );\n  }\n}\n\nexport default TwitterShareButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Link,\n  Flex\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport TwitterShareButton from '../../TwitterShareButton/TwitterShareButton.js';\nimport Confetti from 'react-confetti/dist/react-confetti';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ShareModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  closeModal = async (action) => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Share',\n        eventAction: action,\n        eventLabel: 'ShareModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n    const tweet = window.escape(this.props.tweet);\n    const customText = {__html: this.props.text};\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          {\n            this.props.confettiEnabled &&\n            <Confetti\n              style={{ position: 'fixed','zIndex':9999 }}\n              run={true}\n              recycle={true}\n              width={window.innerWidth}\n              height={window.innerHeight}\n            />\n          }\n          <ModalCard.Header title={this.props.title} icon={this.props.icon}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={3} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text color={'dark-gray'} textAlign={'center'} fontSize={3} mb={2} dangerouslySetInnerHTML={customText}></Text>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <TwitterShareButton tweet={tweet} text={'Share now'} parent={'ShareModal'} />\n              <Link mt={2} onClick={ e => this.closeModal('continue_without_sharing') } hoverColor={'blue'}>continue without sharing</Link>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ShareModal;","import theme from '../theme';\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport CurveRedeem from '../CurveRedeem/CurveRedeem';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport ShareModal from '../utilities/components/ShareModal';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Flex, Text, Input, Box, Icon, Link, Checkbox, Tooltip, Image } from \"rimble-ui\";\n\nclass DepositRedeem extends Component {\n\n  state = {\n    txError:{},\n    tokenAPY:'-',\n    inputValue:{},\n    processing:{},\n    curveAPY:null,\n    canRedeem:false,\n    maxSlippage:0.2,\n    canDeposit:false,\n    action:'deposit',\n    directMint:false,\n    activeModal:null,\n    showBuyFlow:false,\n    unlentBalance:null,\n    tokenApproved:false,\n    skipMigration:false,\n    showRedeemFlow:false,\n    contractPaused:false,\n    buttonDisabled:false,\n    canRedeemCurve:false,\n    showMaxSlippage:false,\n    redeemGovTokens:false,\n    canDepositCurve:false,\n    fastBalanceSelector:{},\n    actionProxyContract:{},\n    migrationEnabled:false,\n    componentMounted:false,\n    curveTokenBalance:null,\n    redeemCurveEnabled:false,\n    depositCurveBalance:null,\n    depositCurveEnabled:true,\n    showAdvancedOptions:false,\n    depositCurveSlippage:null,\n    metaTransactionsEnabled:true\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadProxyContracts();\n  }\n\n  async componentDidMount(){\n\n  }\n\n  setShowRedeemFlow = (showRedeemFlow) => {\n    this.setState({\n      showRedeemFlow\n    });\n  }\n\n  setShowBuyFlow = (showBuyFlow) => {\n    this.setState({\n      showBuyFlow\n    });\n  }\n\n  toggleShowAdvancedOptions = showAdvancedOptions => {\n    this.setState((prevState) => ({\n      showAdvancedOptions:!prevState.showAdvancedOptions\n    }));\n  }\n\n  toggleSkipMigration = skipMigration => {\n    this.setState({\n      skipMigration\n    });\n  }\n\n  toggleRedeemCurve = redeemCurveEnabled => {\n    this.setState({\n      redeemCurveEnabled\n    });\n  }\n\n  toggleDepositCurve = depositCurveEnabled => {\n    this.setState({\n      depositCurveEnabled\n    });\n  }\n\n  toggleSkipMint = (directMint) => {\n    this.setState({\n      directMint\n    });\n  }\n\n  toggleRedeemGovTokens = (redeemGovTokens) => {\n    this.setState({\n      redeemGovTokens\n    });\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  async loadProxyContracts(){\n    const actions = ['deposit','redeem'];\n    const newState = {\n      actionProxyContract:{}\n    };\n\n    await this.functionsUtil.asyncForEach(actions,async (action) => {\n      const mintProxyContractInfo = this.functionsUtil.getGlobalConfig(['contract','methods',action,'proxyContract']);\n      const hasProxyContract = mintProxyContractInfo && mintProxyContractInfo.enabled;\n      newState.actionProxyContract[action] = hasProxyContract ? mintProxyContractInfo : null;\n      if (hasProxyContract){\n        const proxyContract = await this.props.initContract(mintProxyContractInfo.name,mintProxyContractInfo.address,mintProxyContractInfo.abi);\n        newState.actionProxyContract[action].contract = proxyContract.contract;\n        newState.actionProxyContract[action].approved = await this.functionsUtil.checkTokenApproved(this.props.selectedToken,mintProxyContractInfo.address,this.props.account);\n      }\n    });\n\n    this.setState(newState);\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setActiveModal = activeModal => {\n    this.setState({\n      activeModal\n    });\n  }\n\n  async loadAPY(){\n    const tokenAprs = await this.functionsUtil.getTokenAprs(this.props.tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      const tokenAPY = this.functionsUtil.BNify(tokenAprs.avgApy).toFixed(2);\n\n      let curveAPY = null;\n      if (this.state.canDepositCurve){\n        curveAPY = await this.functionsUtil.getCurveAPY();\n        // console.log('curveAPY',curveAPY);\n        if (curveAPY){\n          curveAPY = curveAPY.plus(tokenAPY);\n        }\n      }\n      this.setState({\n        tokenAPY,\n        curveAPY\n      });\n    }\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    if (this.props.tokenBalance === null){\n      return false;\n    }\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance && this.props.tokenBalance !== null;\n\n    if (tokenChanged || tokenBalanceChanged){\n      await this.loadProxyContracts();\n      this.loadTokenInfo();\n      return false;\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const redeemGovTokensChanged = prevState.redeemGovTokens !== this.state.redeemGovTokens;\n    if (redeemGovTokensChanged || actionChanged){\n      this.checkButtonDisabled();\n    }\n\n    const depositCurveChanged = prevState.depositCurveEnabled !== this.state.depositCurveEnabled;\n    const metaTransactionsChanged = prevState.metaTransactionsEnabled !== this.state.metaTransactionsEnabled;\n    if (metaTransactionsChanged || depositCurveChanged){\n      const tokenApproved = await this.checkTokenApproved();\n      this.setState({\n        tokenApproved\n      });\n    }\n\n    const inputChanged = prevState.inputValue[this.state.action] !== this.state.inputValue[this.state.action];\n    if (inputChanged){\n      this.calculateCurveSlippage();\n    }\n  }\n\n  async calculateCurveSlippage(){\n    const amount = this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]) : null;\n\n    if (!amount || amount.lte(0)){\n      return false;\n    }\n\n    const curvePoolContractInfo = this.functionsUtil.getGlobalConfig(['curve','poolContract']);\n\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,curvePoolContractInfo.decimals);\n    const newState = {};\n\n    switch (this.state.action){\n      case 'deposit':\n        newState.depositCurveBalance = amount;\n        newState.depositCurveSlippage = await this.functionsUtil.getCurveSlippage(this.props.tokenConfig.idle.token,normalizedAmount,true);\n      break;\n      case 'redeem':\n        // newState.redeemBalance = amount;\n        // newState.withdrawSlippage = await this.functionsUtil.getCurveSlippage(this.props.tokenConfig.idle.token,normalizedAmount,true);\n      break;\n      default:\n      break;\n    }\n    // console.log('calculateCurveSlippage',newState);\n\n    this.setState(newState);\n  }\n\n  approveContract = async (callbackApprove,callbackReceiptApprove) => {\n    if (this.state.depositCurveEnabled){\n      const curveDepositContract = this.functionsUtil.getGlobalConfig(['curve','depositContract']);\n      this.functionsUtil.enableERC20(this.props.selectedToken,curveDepositContract.address,callbackApprove,callbackReceiptApprove);\n    } else {\n      const proxyContract = this.state.actionProxyContract[this.state.action];\n      if (proxyContract && this.state.metaTransactionsEnabled && this.props.biconomy){\n        this.functionsUtil.enableERC20(this.props.selectedToken,proxyContract.address,callbackApprove,callbackReceiptApprove);\n      } else {\n        this.functionsUtil.enableERC20(this.props.selectedToken,this.props.tokenConfig.idle.address,callbackApprove,callbackReceiptApprove);\n      }\n    }\n  }\n\n  checkTokenApproved = async () => {\n\n    let tokenApproved = false;\n\n    if (this.state.depositCurveEnabled){\n      const curveDepositContract = this.functionsUtil.getGlobalConfig(['curve','depositContract']);\n      tokenApproved = await this.functionsUtil.checkTokenApproved(this.props.selectedToken,curveDepositContract.address,this.props.account);\n    } else {\n      const proxyContract = this.state.actionProxyContract[this.state.action];\n      if (proxyContract && this.state.metaTransactionsEnabled && this.props.biconomy){\n        tokenApproved = await this.functionsUtil.checkTokenApproved(this.props.selectedToken,proxyContract.address,this.props.account);\n      } else {\n        tokenApproved = await this.functionsUtil.checkTokenApproved(this.props.selectedToken,this.props.tokenConfig.idle.address,this.props.account);\n      }\n    }\n    return tokenApproved;\n  }\n\n  approveToken = async () => {\n\n    // Check if the token is already approved\n    const tokenApproved = await this.checkTokenApproved();\n\n    if (tokenApproved){\n      return this.setState((prevState) => ({\n        tokenApproved,\n        processing: {\n          ...prevState.processing,\n          approve:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    }\n\n    const callbackApprove = (tx,error)=>{\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Approve',\n        eventAction: this.props.selectedToken,\n        eventLabel: tx.status,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        tokenApproved: (tx.status === 'success'), // True\n        processing: {\n          ...prevState.processing,\n          approve:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptApprove = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          approve:{\n            ...prevState.processing['approve'],\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.approveContract(callbackApprove,callbackReceiptApprove);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        approve:{\n          txHash:null,\n          loading:true\n        }\n      }\n    }));\n  }\n\n  loadTokenInfo = async () => {\n\n    if (this.state.componentMounted){\n      this.setState({\n        componentMounted:false\n      });\n    }\n\n    const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n    const curveTokenConfig = this.functionsUtil.getGlobalConfig(['curve','availableTokens',this.props.tokenConfig.idle.token]);\n    const curveTokenEnabled = curveConfig.enabled && curveTokenConfig && curveTokenConfig.enabled;\n\n    const [\n      tokenApproved,\n      contractPaused,\n      curveSwapContract,\n      curveDepositContract,\n      unlentBalance,\n      {migrationEnabled},\n      curveTokenBalance,\n    ] = await Promise.all([\n      this.checkTokenApproved(),\n      this.functionsUtil.checkContractPaused(),\n      this.functionsUtil.getCurveSwapContract(),\n      this.functionsUtil.getCurveDepositContract(),\n      this.functionsUtil.getUnlentBalance(this.props.tokenConfig),\n      this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account),\n      curveTokenEnabled ? this.functionsUtil.getCurveTokenBalance(this.props.account) : null\n    ]);\n\n    const canDeposit = this.props.tokenBalance && this.functionsUtil.BNify(this.props.tokenBalance).gt(0);\n    const canRedeem = this.props.idleTokenBalance && this.functionsUtil.BNify(this.props.idleTokenBalance).gt(0);\n\n    const canDepositCurve = curveTokenEnabled && canDeposit;\n    const depositCurveEnabled = canDepositCurve;\n\n    const canRedeemCurve = curveTokenEnabled && curveTokenBalance && curveTokenBalance.gt(0);\n    const redeemCurveEnabled = canRedeemCurve;\n\n    const newState = {...this.state};\n\n    // Check curve deposit enabled\n    if (newState.depositCurveEnabled && !curveTokenEnabled){\n      newState.depositCurveEnabled = false;\n    }\n    \n    newState.canRedeem = canRedeem;\n    newState.canDeposit = canDeposit;\n    newState.unlentBalance = unlentBalance;\n    newState.tokenApproved = tokenApproved;\n    newState.contractPaused = contractPaused;\n    newState.canRedeemCurve = canRedeemCurve;\n    newState.canDepositCurve = canDepositCurve;\n    newState.migrationEnabled = migrationEnabled;\n    newState.curveTokenBalance = curveTokenBalance;\n    newState.curveSwapContract = curveSwapContract;\n    newState.redeemCurveEnabled = redeemCurveEnabled;\n    newState.depositCurveEnabled = depositCurveEnabled;\n    newState.curveDepositContract = curveDepositContract;\n\n    newState.txError = {\n      redeem:false,\n      deposit:false\n    };\n    newState.processing = {\n      redeem:{\n        txHash:null,\n        loading:false\n      },\n      deposit:{\n        txHash:null,\n        loading:false\n      },\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      boost:{\n        txHash:null,\n        loading:false\n      }\n    };\n    newState.inputValue = {\n      boost:null,\n      redeem:null,\n      deposit:null\n    };\n    newState.fastBalanceSelector = {\n      boost:null,\n      redeem:null,\n      deposit:null\n    };\n\n    newState.componentMounted = true;\n\n    this.setState(newState,() => {\n      this.checkAction();\n      this.loadAPY();\n    });\n  }\n\n  cancelTransaction = async () => {\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        [this.state.action]:{\n          txHash:null,\n          loading:false\n        }\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    let contractSendResult = null;\n    const redeemGovTokens = this.state.redeemGovTokens;\n    const inputValue = this.state.inputValue[this.state.action];\n    const selectedPercentage = this.getFastBalanceSelector();\n\n    let loading = true;\n\n    switch (this.state.action){\n      case 'deposit':\n\n        if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n          return false;\n        }\n\n        if (!this.state.tokenApproved){\n          return this.approveToken();\n        }\n\n        if (localStorage){\n          this.functionsUtil.setLocalStorage('redirectToFundsAfterLogged',0);\n        }\n\n        this.setState({\n          lendingProcessing: this.props.account,\n          lendAmount: '',\n          genericError: '',\n        });\n\n        const callbackDeposit = (tx,error) => {\n\n          if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txError = tx.status === 'error';\n          const txSucceeded = tx.status === 'success';\n\n          const eventData = {\n            eventCategory: 'Deposit',\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              activeModal:'share',\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          } else if (this.state.metaTransactionsEnabled && txError){\n            this.setState({\n              txError:{\n                [this.state.action]: true\n              }\n            });\n          }\n        };\n\n        const callbackReceiptDeposit = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n        const curveTokenEnabled = curveConfig.enabled && this.functionsUtil.getGlobalConfig(['curve','availableTokens',this.props.tokenConfig.idle.token,'enabled']);\n\n        // Handle Curve Deposit\n        if (curveTokenEnabled && this.state.depositCurveEnabled){\n\n          const curvePoolContractInfo = this.functionsUtil.getGlobalConfig(['curve','poolContract']);\n          const tokensToDeposit = this.functionsUtil.normalizeTokenAmount(inputValue,curvePoolContractInfo.decimals);\n\n          const amounts = await this.functionsUtil.getCurveAmounts(this.props.tokenConfig.idle.token,tokensToDeposit);\n          let minMintAmount = await this.functionsUtil.getCurveTokenAmount(amounts);\n          if (this.state.maxSlippage){\n            minMintAmount = this.functionsUtil.BNify(minMintAmount);\n            minMintAmount = minMintAmount.minus(minMintAmount.times(this.functionsUtil.BNify(this.state.maxSlippage).div(100)));\n            minMintAmount = this.functionsUtil.integerValue(minMintAmount);\n          }\n          \n          const depositParams = [amounts,minMintAmount];\n\n          contractSendResult = await this.functionsUtil.contractMethodSendWrapper(this.state.curveDepositContract.name, 'add_liquidity', depositParams, callbackDeposit, callbackReceiptDeposit);\n        } else {\n          const tokensToDeposit = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n          const depositMetaTransactionsEnabled = this.functionsUtil.getGlobalConfig(['contract','methods','deposit','metaTransactionsEnabled']);\n          // const gasLimitDeposit = this.functionsUtil.BNify(1000000);\n          let depositParams = [];\n\n          // Use Proxy Contract if enabled\n          const mintProxyContractInfo = this.state.actionProxyContract[this.state.action];\n          if (depositMetaTransactionsEnabled && mintProxyContractInfo && this.props.biconomy && this.state.metaTransactionsEnabled){\n            const mintProxyContract = this.state.actionProxyContract[this.state.action].contract;\n            depositParams = [tokensToDeposit, this.props.tokenConfig.idle.address];\n            // console.log('mintProxyContract',mintProxyContractInfo.function,depositParams);\n            if (this.state.metaTransactionsEnabled){\n              const functionSignature = mintProxyContract.methods[mintProxyContractInfo.function](...depositParams).encodeABI();\n              contractSendResult = await this.functionsUtil.sendBiconomyTxWithPersonalSign(mintProxyContractInfo.name, functionSignature, callbackDeposit, callbackReceiptDeposit);\n            } else {\n              contractSendResult = await this.functionsUtil.contractMethodSendWrapper(mintProxyContractInfo.name, mintProxyContractInfo.function, depositParams, callbackDeposit, callbackReceiptDeposit);\n            }\n          // Use main contract if no proxy contract exists\n          } else {\n            let _skipMint = !this.state.directMint && this.functionsUtil.getGlobalConfig(['contract','methods','deposit','skipMint']);\n            _skipMint = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : _skipMint;\n\n            // Mint if someone mint over X amount\n            if (_skipMint){\n              let [\n                maxUnlentPerc,\n                totalAUM\n              ] = await Promise.all([\n                this.functionsUtil.genericContractCall('idleDAIYield', 'maxUnlentPerc'),\n                this.functionsUtil.loadAssetField('pool',this.props.selectedToken,this.props.tokenConfig,this.props.account)\n              ]);\n\n              if (maxUnlentPerc && totalAUM){\n                const depositPerc = inputValue.div(totalAUM).times(100);\n                maxUnlentPerc = this.functionsUtil.BNify(maxUnlentPerc).div(1e3);\n                if (depositPerc.gte(maxUnlentPerc.times(2))){\n                  _skipMint = false;\n                }\n                // console.log(maxUnlentPerc.toFixed(5),inputValue.toFixed(5),totalAUM.toFixed(5),depositPerc.toFixed(5),depositPerc.gte(maxUnlentPerc.times(2)),_skipMint);\n              }\n            }\n\n            depositParams = [tokensToDeposit, _skipMint, '0x0000000000000000000000000000000000000000'];\n            contractSendResult = await this.functionsUtil.contractMethodSendWrapper(this.props.tokenConfig.idle.token, 'mintIdleToken', depositParams, callbackDeposit, callbackReceiptDeposit);\n          }\n        }\n      break;\n      case 'redeem':\n\n        if (redeemGovTokens){\n          const callbackRedeem = (tx,error) => {\n            const txSucceeded = tx.status === 'success';\n\n            // Send Google Analytics event\n            const eventData = {\n              eventCategory: `Redeem_gov`,\n              eventAction: this.props.selectedToken,\n              eventLabel: tx.status,\n              eventValue: 0\n            };\n\n            if (error){\n              eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n            }\n\n            // Send Google Analytics event\n            if (error || eventData.status !== 'error'){\n              this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n            }\n\n            this.setState((prevState) => ({\n              processing: {\n                ...prevState.processing,\n                [this.state.action]:{\n                  txHash:null,\n                  loading:false\n                }\n              }\n            }));\n\n            if (txSucceeded){\n              this.setState((prevState) => ({\n                inputValue:{\n                  ...prevState.inputValue,\n                  [this.state.action]: this.functionsUtil.BNify(0)\n                }\n              }));\n            }\n          };\n\n          const callbackReceiptRedeem = (tx) => {\n            const txHash = tx.transactionHash;\n            this.setState((prevState) => ({\n              processing: {\n                ...prevState.processing,\n                [this.state.action]:{\n                  ...prevState.processing[this.state.action],\n                  txHash\n                }\n              }\n            }));\n          };\n\n          contractSendResult = await this.functionsUtil.contractMethodSendWrapper(this.props.tokenConfig.idle.token, 'redeemIdleToken', [0], callbackRedeem, callbackReceiptRedeem);\n          \n        } else {\n\n          if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n            return false;\n          }\n\n          const txData = {\n            value:this.functionsUtil.BNify(inputValue)\n          };\n\n          let idleTokenToRedeem = null;\n          if (selectedPercentage){\n            idleTokenToRedeem = this.functionsUtil.BNify(this.props.idleTokenBalance).times(selectedPercentage);\n          } else {\n            const idleTokenPrice = await this.functionsUtil.genericContractCall(this.props.tokenConfig.idle.token, 'tokenPrice');\n            idleTokenToRedeem = this.functionsUtil.BNify(this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals)).div(idleTokenPrice);\n          }\n\n          // Normalize number\n          idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(idleTokenToRedeem,18);\n\n          if (!idleTokenToRedeem){\n            return false;\n          }\n\n          const callbackRedeem = (tx,error) => {\n            const txSucceeded = tx.status === 'success';\n\n            // Send Google Analytics event\n            const eventData = {\n              eventCategory: `Redeem_partial`,\n              eventAction: this.props.selectedToken,\n              eventLabel: tx.status,\n              eventValue: parseInt(inputValue)\n            };\n\n            if (error){\n              eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n            }\n\n            // Send Google Analytics event\n            if (error || eventData.status !== 'error'){\n              this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n            }\n\n            this.setState((prevState) => ({\n              processing: {\n                ...prevState.processing,\n                [this.state.action]:{\n                  txHash:null,\n                  loading:false\n                }\n              }\n            }));\n\n            if (txSucceeded){\n              this.setState((prevState) => ({\n                inputValue:{\n                  ...prevState.inputValue,\n                  [this.state.action]: this.functionsUtil.BNify(0)\n                }\n              }));\n            }\n          };\n\n          const callbackReceiptRedeem = (tx) => {\n            const txHash = tx.transactionHash;\n            this.setState((prevState) => ({\n              processing: {\n                ...prevState.processing,\n                [this.state.action]:{\n                  ...prevState.processing[this.state.action],\n                  txHash\n                }\n              }\n            }));\n          };\n\n          let redeemParams = [idleTokenToRedeem];\n          // console.log(redeemParams,idleTokenToRedeem);\n\n          contractSendResult = await this.functionsUtil.contractMethodSendWrapper(this.props.tokenConfig.idle.token, 'redeemIdleToken', redeemParams, callbackRedeem, callbackReceiptRedeem, txData);\n        }\n      break;\n      default: // Reset loading if not handled action\n        loading = false;\n      break;\n    }\n\n    if (contractSendResult !== false){\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          [this.state.action]:{\n            ...prevState.processing[this.state.action],\n            loading\n          }\n        }\n      }));\n    }\n  }\n\n  setMaxSlippage = (maxSlippage) => {\n    this.setState({\n      maxSlippage\n    });\n  }\n\n  showMaxSlippage = () => {\n    this.setState({\n      showMaxSlippage:true\n    });\n  }\n\n  checkAction = () => {\n    let action = this.state.action;\n\n    switch(action){\n      case 'redeem':\n        if (!this.state.canRedeem){\n          action = 'deposit';\n        }\n      break;\n      default:\n      break;\n    }\n\n    if (action !== this.state.action){\n      this.setState({\n        action\n      },() => {\n        this.checkButtonDisabled();\n      });\n    } else {\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled = (amount=null) => {\n\n    if (!this.state.action){\n      return false;\n    }\n\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n\n    let buttonDisabled = false;\n\n    switch (this.state.action){\n      case 'deposit':\n        buttonDisabled = buttonDisabled || (amount && amount.gt(this.props.tokenBalance));\n      break;\n      case 'redeem':\n        buttonDisabled = !this.state.canRedeemCurve && !this.state.redeemGovTokens && ( buttonDisabled || (amount && amount.gt(this.props.redeemableBalance)) );\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n    let amount = null;\n\n    switch(this.state.action){\n      case 'deposit':\n        amount = this.props.tokenBalance ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n      break;\n      case 'redeem':\n        amount = this.props.redeemableBalance ? this.functionsUtil.BNify(this.props.redeemableBalance).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.checkButtonDisabled(amount);\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    this.checkButtonDisabled(amount);\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    switch (action.toLowerCase()){\n      case 'deposit':\n        \n      break;\n      case 'redeem':\n        if (!this.state.canRedeem && !this.state.canRedeemCurve){\n          action = null;\n        }\n      break;\n      default:\n        action = null;\n      break;\n    }\n\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  render(){\n\n    if (!this.props.selectedToken || !this.props.tokenConfig){\n      return null;\n    }\n\n    const govTokensDisabled = this.props.tokenConfig.govTokensDisabled;\n    const govTokensEnabled = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'govTokensEnabled']);\n    const skipMintForDepositEnabled = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : true;\n    const skipMintCheckboxEnabled = this.functionsUtil.getGlobalConfig(['contract','methods','deposit','skipMintCheckboxEnabled']) && skipMintForDepositEnabled;\n\n    const redeemGovTokenEnabled = this.functionsUtil.getGlobalConfig(['contract','methods','redeemGovTokens','enabled']) && !govTokensDisabled && govTokensEnabled;\n    const redeemGovTokens = redeemGovTokenEnabled && this.state.redeemGovTokens && this.state.action === 'redeem';\n\n    const metaTransactionsAvailable = this.props.biconomy && this.state.actionProxyContract[this.state.action];\n    const useMetaTx = metaTransactionsAvailable && this.state.metaTransactionsEnabled;\n    const totalBalance = this.state.action === 'deposit' ? this.props.tokenBalance : this.props.redeemableBalance;\n    const migrateText = this.state.migrationEnabled && this.props.tokenConfig.migration.message !== undefined ? this.props.tokenConfig.migration.message : null;\n\n    const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n    const curveTokenEnabled = curveConfig.enabled && this.functionsUtil.getGlobalConfig(['curve','availableTokens',this.props.tokenConfig.idle.token,'enabled']);\n\n    const depositCurve = curveTokenEnabled && this.state.depositCurveEnabled && this.state.action === 'deposit';\n\n    const showDepositOptions = this.state.action === 'deposit' && !this.state.contractPaused && (curveTokenEnabled || this.state.tokenApproved);\n\n    const canPerformAction = /*!depositCurve && !this.state.redeemCurveEnabled && */((this.state.action === 'deposit' && this.state.canDeposit) || (this.state.action === 'redeem' && this.state.canRedeem) || redeemGovTokens);\n    const showDepositCurve = showDepositOptions && curveTokenEnabled && this.state.componentMounted && (!this.state.migrationEnabled || this.state.skipMigration) && this.state.canDepositCurve && this.state.action === 'deposit';\n    const showRedeemCurve = curveTokenEnabled && this.state.componentMounted && (!this.state.migrationEnabled || this.state.skipMigration) && this.state.canRedeemCurve && this.state.action === 'redeem';\n\n    const showActionFlow = !redeemGovTokens && canPerformAction;\n    const showBuyFlow = this.state.componentMounted && (!showDepositCurve || this.state.showBuyFlow) && !this.state.depositCurveEnabled && this.state.tokenApproved && !this.state.contractPaused && (!this.state.migrationEnabled || this.state.skipMigration) && this.state.action === 'deposit' && !this.state.canDeposit;\n    const showRedeemFlow = this.state.canRedeem && (!this.state.redeemCurveEnabled || this.state.showRedeemFlow);\n\n    const showCurveSlippage = depositCurve && this.state.depositCurveSlippage && this.state.depositCurveBalance && !this.state.buttonDisabled;\n\n    const showRebalanceOption = showDepositOptions && this.state.canDeposit && skipMintCheckboxEnabled && this.state.action === 'deposit';\n    const showAdvancedDepositOptions = showDepositCurve || showRebalanceOption;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select your asset:\n            </Text>\n            <AssetSelector\n              {...this.props}\n            />\n          </Box>\n          <Migrate\n            {...this.props}\n            migrateTextBefore={migrateText}\n            migrateText={migrateText !== null ? '' : null}\n            toggleSkipMigration={this.toggleSkipMigration.bind(this)}\n          >\n            {\n              !this.props.account ? (\n                <ConnectBox\n                  {...this.props}\n                />\n              ) :\n              this.state.componentMounted ? (\n                this.state.action ? (\n                  <Box width={1}>\n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setAction('deposit');\n                            }\n                          }}\n                          isInteractive={true}\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setAction('redeem');\n                            }\n                          }}\n                          isInteractive={true}\n                          isActive={ this.state.action === 'redeem' }\n                          isDisabled={ !this.state.canRedeem && !this.state.canRedeemCurve }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Redeem\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    {\n                      showAdvancedDepositOptions ? (\n                        <DashboardCard\n                          cardProps={{\n                            pt:2,\n                            px:2,\n                            mt:3,\n                            display:'flex',\n                            alignItems:'center',\n                            flexDirection:'column',\n                            justifyContent:'center',\n                            pb:this.state.showAdvancedOptions ? 3 : 2,\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <Link\n                              ml={1}\n                              mainColor={'primary'}\n                              hoverColor={'primary'}\n                              onClick={this.toggleShowAdvancedOptions}\n                            >\n                              { this.state.showAdvancedOptions ? 'Hide' : 'Show' } advanced options\n                            </Link>\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={this.state.showAdvancedOptions ? 'ArrowDropUp' : 'ArrowDropDown'}\n                            />\n                          </Flex>\n                          {\n                            this.state.showAdvancedOptions &&\n                              <Flex\n                                mt={1}\n                                flexDirection={'column'}\n                              >\n                                {\n                                  showDepositCurve && \n                                    <Flex\n                                      alignItems={'center'}\n                                      justifyContent={'row'}\n                                    >\n                                      <Checkbox\n                                        required={false}\n                                        disabled={this.state.directMint}\n                                        label={`Deposit in the Curve Pool`}\n                                        checked={this.state.depositCurveEnabled}\n                                        onChange={ e => this.toggleDepositCurve(e.target.checked) }\n                                      />\n                                      <Link\n                                        mainColor={'primary'}\n                                        hoverColor={'primary'}\n                                        onClick={ e => this.props.openTooltipModal('How Curve works',this.functionsUtil.getGlobalConfig(['messages','curveInstructions'])) }\n                                      >\n                                        (read more)\n                                      </Link>\n                                    </Flex>\n                                }\n                                {\n                                  showRebalanceOption && \n                                    <Flex\n                                      alignItems={'center'}\n                                      justifyContent={'row'}\n                                    >\n                                      <Checkbox\n                                        required={false}\n                                        label={`Rebalance the pool`}\n                                        checked={this.state.directMint}\n                                        disabled={this.state.depositCurveEnabled}\n                                        onChange={ e => this.toggleSkipMint(e.target.checked) }\n                                      />\n                                      <Tooltip\n                                        placement={'bottom'}\n                                        message={this.functionsUtil.getGlobalConfig(['messages','directMint'])}\n                                      >\n                                        <Icon\n                                          size={'1em'}\n                                          color={'cellTitle'}\n                                          name={\"InfoOutline\"}\n                                        />\n                                      </Tooltip>\n                                    </Flex>\n                                }\n                              </Flex>\n                          }\n                        </DashboardCard>\n                      ) : (\n                        <Flex\n                          width={1}\n                          flexDirection={'column'}\n                        >\n                          {\n                            showDepositCurve && (\n                              <Flex\n                                width={1}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <DashboardCard\n                                  isRainbow={true}\n                                  cardProps={{\n                                    py:3,\n                                    px:2,\n                                    mt:3,\n                                    display:'flex',\n                                    alignItems:'center',\n                                    flexDirection:'column',\n                                    justifyContent:'center',\n                                  }}\n                                >\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Image\n                                      height={'1.8em'}\n                                      src={curveConfig.params.image}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      px={2}\n                                      fontSize={1}\n                                      color={'dark-gray'}\n                                      textAlign={'center'}\n                                    >\n                                      Deposit your tokens in the Curve Pool and boost your APY up to {this.state.curveAPY ? this.state.curveAPY.toFixed(2) : '-'}%.\n                                      <Link\n                                        ml={1}\n                                        mainColor={'primary'}\n                                        hoverColor={'primary'}\n                                        onClick={ e => this.props.openTooltipModal('How Curve works',this.functionsUtil.getGlobalConfig(['messages','curveInstructions'])) }\n                                      >\n                                        Read More\n                                      </Link>\n                                    </Text>\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={`Deposit in Curve`}\n                                      checked={this.state.depositCurveEnabled}\n                                      onChange={ e => this.toggleDepositCurve(e.target.checked) }\n                                    />\n                                  </Flex>\n                                </DashboardCard>\n                                {\n                                  (!this.state.showBuyFlow && !this.state.depositCurveEnabled && !this.state.canDeposit) &&\n                                    <Link\n                                      textAlign={'center'}\n                                      hoverColor={'primary'}\n                                      onClick={ e => this.setShowBuyFlow(true) }\n                                    >\n                                      I just want to deposit more {this.props.selectedToken}\n                                    </Link>\n                                }\n                              </Flex>\n                            )\n                          }\n                          {\n                            showRebalanceOption && (\n                              <DashboardCard\n                                cardProps={{\n                                  py:3,\n                                  px:2,\n                                  mt:3,\n                                  display:'flex',\n                                  alignItems:'center',\n                                  flexDirection:'column',\n                                  justifyContent:'center',\n                                }}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <Icon\n                                    size={'1.8em'}\n                                    color={'cellText'}\n                                    name={'InfoOutline'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    px={2}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    By checking this flag you can rebalance the pool and help all users gain an additional APR\n                                  </Text>\n                                </Flex>\n                                <Checkbox\n                                  mt={2}\n                                  required={false}\n                                  label={`Rebalance the pool`}\n                                  checked={this.state.directMint}\n                                  onChange={ e => this.toggleSkipMint(e.target.checked) }\n                                />\n                              </DashboardCard>\n                            )\n                          }\n                        </Flex>\n                      )\n                    }\n                    {\n                      (metaTransactionsAvailable && !showBuyFlow && !this.state.contractPaused) && \n                      <DashboardCard\n                        cardProps={{\n                          py:3,\n                          px:2,\n                          my:3,\n                          display:'flex',\n                          alignItems:'center',\n                          flexDirection:'column',\n                          justifyContent:'center',\n                        }}\n                      >\n                        {\n                          this.state.metaTransactionsEnabled && this.state.txError[this.state.action] && this.state.actionProxyContract[this.state.action].approved ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'Warning'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                Seems like you are having some trouble with Meta-Transactions... Disable them by unchecking the box below and try again!\n                              </Text>\n                            </Flex>\n                          ) : this.functionsUtil.getWalletProvider() === 'WalletConnect' && this.state.metaTransactionsEnabled ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'Warning'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                Please disable Meta-Transactions if you are using Argent Wallet to avoid failed transactions!\n                              </Text>\n                            </Flex>\n                          ) : (\n                            <Text\n                              mt={1}\n                              fontSize={1}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Meta-Transactions are {this.state.metaTransactionsEnabled ? 'available' : 'disabled'} for {this.state.action}s!<br />\n                              {\n                                this.state.metaTransactionsEnabled && !this.state.actionProxyContract[this.state.action].approved && `Please either enable the Smart-Contract to enjoy gas-less ${this.state.action} or just disable meta-tx.`\n                              }\n                            </Text>\n                          )\n                        }\n                        <Checkbox\n                          mt={2}\n                          required={false}\n                          checked={this.state.metaTransactionsEnabled}\n                          onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                          label={`${this.functionsUtil.capitalize(this.state.action)} with Meta-Transaction`}\n                        />\n                      </DashboardCard>\n                    }\n                    {\n                      showRedeemCurve && this.state.canRedeem && (\n                        <Flex\n                          width={1}\n                          flexDirection={'column'}\n                          justifyContent={'center'}\n                        >\n                          <DashboardCard\n                            isRainbow={true}\n                            cardProps={{\n                              py:3,\n                              px:2,\n                              mt:3,\n                              display:'flex',\n                              alignItems:'center',\n                              flexDirection:'column',\n                              justifyContent:'center',\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Image\n                                height={'1.8em'}\n                                src={curveConfig.params.image}\n                              />\n                              <Text\n                                mt={2}\n                                px={2}\n                                fontSize={1}\n                                color={'dark-gray'}\n                                textAlign={'center'}\n                              >\n                                Redeem your tokens from the Curve Pool.\n                                <Link\n                                  ml={1}\n                                  mainColor={'primary'}\n                                  hoverColor={'primary'}\n                                  onClick={ e => this.props.openTooltipModal('How Curve works',this.functionsUtil.getGlobalConfig(['messages','curveInstructions'])) }\n                                >\n                                  Read More\n                                </Link>\n                              </Text>\n                              {\n                                this.state.canRedeem &&\n                                  <Checkbox\n                                    mt={2}\n                                    required={false}\n                                    label={`Redeem from Curve`}\n                                    checked={this.state.redeemCurveEnabled}\n                                    onChange={ e => this.toggleRedeemCurve(e.target.checked) }\n                                  />\n                              }\n                            </Flex>\n                          </DashboardCard>\n                          {\n                            this.canRedeem &&\n                              <Link\n                                textAlign={'center'}\n                                hoverColor={'primary'}\n                                onClick={ e => this.setShowRedeemFlow(true) }\n                              >\n                                I just want to redeem my {this.props.selectedToken}\n                              </Link>\n                          }\n                        </Flex>\n                      )\n                    }\n                    {\n                      (this.state.action === 'redeem' && this.state.unlentBalance && showRedeemFlow) &&\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:2,\n                            mt:3,\n                            display:'flex',\n                            alignItems:'center',\n                            flexDirection:'column',\n                            justifyContent:'center',\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'LocalGasStation'}\n                            />\n                            <Text\n                              px={2}\n                              fontSize={1}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Available balance for Cheap Redeem\n                            </Text>\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'center'}\n                                hoverColor={'copyColor'}\n                              >\n                                {this.state.unlentBalance.toFixed(4)} {this.props.selectedToken}\n                              </Text>\n                              <Tooltip\n                                placement={'top'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','cheapRedeem'])}\n                              >\n                                <Icon\n                                  ml={1}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                  name={\"InfoOutline\"}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                    }\n                    {\n                      (this.state.action === 'redeem' && redeemGovTokenEnabled && showRedeemFlow) && (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:2,\n                            mt:3,\n                            display:'flex',\n                            alignItems:'center',\n                            flexDirection:'column',\n                            justifyContent:'center',\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'InfoOutline'}\n                            />\n                            <Text\n                              mt={1}\n                              px={2}\n                              fontSize={1}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              By redeeming your {this.props.selectedToken} you will automatically get also the proportional amount of governance tokens accrued{ this.props.govTokensBalance && this.props.govTokensBalance.gt(0) ? ` (~ $${this.props.govTokensBalance.toFixed(2)})` : null }.\n                            </Text>\n                          </Flex>\n                          <Checkbox\n                            mt={2}\n                            required={false}\n                            checked={this.state.redeemGovTokens}\n                            label={`Redeem governance tokens only`}\n                            onChange={ e => this.toggleRedeemGovTokens(e.target.checked) }\n                          />\n                        </DashboardCard>\n                      )\n                    }\n                    {\n                      (this.state.contractPaused && this.state.action === 'deposit') ? (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              name={'Warning'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Deposits for {this.props.selectedToken} are temporarily unavailable due to Smart-Contract maintenance. Redeems are always available.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : (!this.state.tokenApproved && this.state.action === 'deposit') ? (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          {\n                            this.state.processing['approve'] && this.state.processing['approve'].loading ? (\n                              <Flex\n                                flexDirection={'column'}\n                              >\n                                <TxProgressBar\n                                  web3={this.props.web3}\n                                  waitText={`Approve estimated in`}\n                                  endMessage={`Finalizing approve request...`}\n                                  hash={this.state.processing['approve'].txHash}\n                                  cancelTransaction={this.cancelTransaction.bind(this)}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'1.8em'}\n                                  name={'LockOpen'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={3}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  {\n                                    this.state.depositCurveEnabled ? \n                                      `To ${this.functionsUtil.capitalize(this.state.action)} your ${this.props.selectedToken} in the Curve Pool you need to approve the Smart-Contract first.`\n                                    : useMetaTx ?\n                                      `To ${this.functionsUtil.capitalize(this.state.action)} your ${this.props.selectedToken} into Idle using Meta-Transaction you need to approve our Smart-Contract first.`\n                                    :\n                                      `To ${this.functionsUtil.capitalize(this.state.action)} your ${this.props.selectedToken} into Idle you need to approve our Smart-Contract first.`\n                                  }\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:3,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.approveToken.bind(this)}\n                                >\n                                  Approve\n                                </RoundButton>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      ) : (!showBuyFlow && canPerformAction) && (\n                        !this.state.processing[this.state.action].loading ? (\n                          <Flex\n                            mt={2}\n                            flexDirection={'column'}\n                          >\n                            {\n                              showActionFlow && (\n                                <Flex\n                                  mb={3}\n                                  width={1}\n                                  flexDirection={'column'}\n                                >\n                                  {\n                                    /*\n                                    showCurveSlippage &&\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:3,\n                                          mb:2\n                                        }}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'column'}\n                                        >\n                                          <Icon\n                                            size={'1.8em'}\n                                            color={'cellText'}\n                                            name={'FileUpload'}\n                                          />\n                                          <Text\n                                            mt={2}\n                                            fontSize={2}\n                                            color={'cellText'}\n                                            textAlign={'center'}\n                                          >\n                                            You can deposit {this.state.depositCurveBalance.toFixed(4)} {this.props.selectedToken} in the Curve Pool{ this.state.depositCurveSlippage ? (this.state.depositCurveSlippage.gt(0) ? ` with ${this.state.depositCurveSlippage.times(100).toFixed(2)}% of slippage` : ` with ${Math.abs(parseFloat(this.state.depositCurveSlippage.times(100).toFixed(2)))}% of bonus`) : '' }.\n                                          </Text>\n                                        </Flex>\n                                      </DashboardCard>\n                                    */\n                                  }\n                                  {\n                                    (totalBalance || this.props.tokenFeesPercentage) && (\n                                      <Box\n                                        mb={1}\n                                        width={1}\n                                      >\n                                        {\n                                          this.state.showMaxSlippage && showCurveSlippage && (\n                                            <Box\n                                              mb={2}\n                                              width={1}\n                                            >\n                                              <Flex\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                              >\n                                                <Text>\n                                                  Choose max slippage:\n                                                </Text>\n                                                <Tooltip\n                                                  placement={'top'}\n                                                  message={`Max additional slippage on top of the one shown below`}\n                                                >\n                                                  <Icon\n                                                    ml={1}\n                                                    size={'1em'}\n                                                    color={'cellTitle'}\n                                                    name={\"InfoOutline\"}\n                                                  />\n                                                </Tooltip>\n                                              </Flex>\n                                              <Flex\n                                                mt={2}\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                                justifyContent={'space-between'}\n                                              >\n                                                {\n                                                  [0.2,0.5,1,5].map( slippage => (\n                                                    <FastBalanceSelector\n                                                      cardProps={{\n                                                        p:1\n                                                      }}\n                                                      textProps={{\n                                                        fontSize:1\n                                                      }}\n                                                      percentage={slippage}\n                                                      key={`selector_${slippage}`}\n                                                      onMouseDown={()=>this.setMaxSlippage(slippage)}\n                                                      isActive={this.state.maxSlippage === parseFloat(slippage)}\n                                                    />\n                                                  ))\n                                                }\n                                              </Flex>\n                                            </Box>\n                                          )\n                                        }\n                                        <Flex\n                                          width={1}\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                          justifyContent={'space-between'}\n                                        >\n                                        {\n                                          showCurveSlippage ? (\n                                            <Flex\n                                              width={1}\n                                              maxWidth={'50%'}\n                                              alignItems={'center'}\n                                              flexDirection={'row'}\n                                            >\n                                              <Text\n                                                fontSize={1}\n                                                fontWeight={3}\n                                                textAlign={'right'}\n                                                style={{\n                                                  whiteSpace:'nowrap'\n                                                }}\n                                                color={ this.state.depositCurveSlippage.gt(0) ? this.props.theme.colors.transactions.status.failed : this.props.theme.colors.transactions.status.completed }\n                                              >\n                                                {\n                                                  parseFloat(this.state.depositCurveSlippage.times(100).toFixed(2)) === 0 ?\n                                                    'No Slippage'\n                                                  : `${ this.state.depositCurveSlippage.gt(0) ? 'Slippage: ' : 'Bonus: ' } ${this.state.depositCurveSlippage.times(100).abs().toFixed(2)}%`\n                                                }\n                                              </Text>\n                                              <Tooltip\n                                                placement={'top'}\n                                                message={this.functionsUtil.getGlobalConfig(['messages','curveBonusSlippage'])}\n                                              >\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1em'}\n                                                  color={'cellTitle'}\n                                                  name={\"InfoOutline\"}\n                                                />\n                                              </Tooltip>\n                                              <Link\n                                                ml={1}\n                                                color={'copyColor'}\n                                                hoverColor={'primary'}\n                                                onClick={this.showMaxSlippage}\n                                              >\n                                                change\n                                              </Link>\n                                            </Flex>\n                                          ) : this.props.tokenFeesPercentage && (\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'row'}\n                                            >\n                                              <Text\n                                                fontSize={1}\n                                                fontWeight={3}\n                                                color={'dark-gray'}\n                                                textAlign={'right'}\n                                                hoverColor={'copyColor'}\n                                              >\n                                                Performance fee: {this.props.tokenFeesPercentage.times(100).toFixed(2)}%\n                                              </Text>\n                                              <Tooltip\n                                                placement={'top'}\n                                                message={`This fee is charged on positive returns generated by Idle`}\n                                              >\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1em'}\n                                                  color={'cellTitle'}\n                                                  name={\"InfoOutline\"}\n                                                />\n                                              </Tooltip>\n                                            </Flex>\n                                          )\n                                        }\n                                        {\n                                          totalBalance && (\n                                            <Link\n                                              fontSize={1}\n                                              fontWeight={3}\n                                              color={'dark-gray'}\n                                              textAlign={'right'}\n                                              hoverColor={'copyColor'}\n                                              onClick={ (e) => this.setFastBalanceSelector(100) }\n                                            >\n                                              {totalBalance.toFixed(6)} {this.props.selectedToken}\n                                            </Link>\n                                          )\n                                        }\n                                        </Flex>\n                                      </Box>\n                                    )\n                                  }\n                                  <Input\n                                    min={0}\n                                    type={\"number\"}\n                                    required={true}\n                                    height={'3.4em'}\n                                    borderRadius={2}\n                                    fontWeight={500}\n                                    boxShadow={'none !important'}\n                                    placeholder={`Insert amount`}\n                                    onChange={this.changeInputValue.bind(this)}\n                                    border={`1px solid ${theme.colors.divider}`}\n                                    value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                                  />\n                                  <Flex\n                                    mt={2}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'space-between'}\n                                  >\n                                    {\n                                      [25,50,75,100].map( percentage => (\n                                        <FastBalanceSelector\n                                          percentage={percentage}\n                                          key={`selector_${percentage}`}\n                                          onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                          isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                        />\n                                      ))\n                                    }\n                                  </Flex>\n                                </Flex>\n                              )\n                            }\n                            {\n                              canPerformAction && \n                                <Flex\n                                  justifyContent={'center'}\n                                  mt={ redeemGovTokens ? 2 : 0 }\n                                >\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:'auto',\n                                      minWidth:[1,1/2],\n                                      style:{\n                                        textTransform:'capitalize'\n                                      },\n                                      disabled:this.state.buttonDisabled\n                                    }}\n                                    handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                                  >\n                                    {this.state.action}{ redeemGovTokens ? ' Gov Tokens' : '' /*(depositCurve ? ' in Curve' : '')*/ }\n                                  </RoundButton>\n                                </Flex>\n                            }\n                          </Flex>\n                        ) : (\n                          <Flex\n                            mt={4}\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar\n                              web3={this.props.web3}\n                              cancelTransaction={this.cancelTransaction.bind(this)}\n                              hash={this.state.processing[this.state.action].txHash}\n                              endMessage={`Finalizing ${this.state.action} request...`}\n                              waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                            />\n                          </Flex>\n                        )\n                      )\n                    }\n                  </Box>\n                ) : null\n              ) : (\n                <Flex\n                  mt={4}\n                  flexDirection={'column'}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading asset info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Migrate>\n        </Flex>\n        {\n          /*\n          showDepositCurve && this.state.depositCurveEnabled ? (\n            <CurveDeposit\n              {...this.props}\n            />\n          ) :\n          */\n          showRedeemCurve && this.state.redeemCurveEnabled && (\n            <Box\n              mt={3}\n              width={1}\n            >\n              <CurveRedeem\n                {...this.props}\n              />\n            </Box>\n          )\n        }\n        {\n          showBuyFlow &&\n            <Flex\n              mt={3}\n              width={[1,0.5]}\n              alignItems={'stretch'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <BuyModal\n                {...this.props}\n                showInline={true}\n                availableMethods={[]}\n                buyToken={this.props.selectedToken}\n              />\n            </Flex>\n        }\n\n        <ShareModal\n          confettiEnabled={true}\n          icon={`images/medal.svg`}\n          title={`Congratulations!`}\n          account={this.props.account}\n          closeModal={this.resetModal}\n          tokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'share'}\n          text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.tokenAPY}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n          tweet={`I'm earning ${this.state.tokenAPY}% APY on my ${this.props.selectedToken} with @idlefinance! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])} and start earning now from your idle tokens!`}\n        />\n\n      </Flex>\n    );\n  }\n}\n\nexport default DepositRedeem;\n","import React, { Component } from 'react';\nimport { Flex, Text, Icon } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign({\n      py:1,\n      width:'auto',\n      px:['12px',3],\n    },this.props.cardProps);\n\n    return (\n       <DashboardCard\n         cardProps={cardProps}\n         isInteractive={true}\n         handleClick={this.props.handleClick}\n       >\n         <Flex\n           my={1}\n           alignItems={'center'}\n           flexDirection={'row'}\n           justifyContent={'center'}\n         >\n           <Flex\n             mr={2}\n             p={['4px','7px']}\n             borderRadius={'50%'}\n             alignItems={'center'}\n             justifyContent={'center'}\n             backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n           >\n             <Icon\n               align={'center'}\n               color={'redeem'}\n               name={this.props.icon}\n               size={ this.props.isMobile ? '1.2em' : '1.4em' }\n             />\n           </Flex>\n           <Text\n             fontWeight={3}\n             fontSize={[1,3]}\n           >\n             {this.props.text}\n           </Text>\n         </Flex>\n       </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;","import theme from '../theme';\nimport { Bar } from '@nivo/bar';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Text, Input, Icon, Tooltip } from \"rimble-ui\";\n\nclass EstimatedEarnings extends Component {\n\n  state = {\n    tokenApy:null,\n    chartData:null,\n    chartProps:null,\n    inputValue:1000,\n    maxInputValue:999999999999999\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    const tokenApy = await this.functionsUtil.getTokenApy(this.props.tokenConfig);\n    if (tokenApy && !tokenApy.isNaN()){\n      this.setState({\n        tokenApy\n      },() => {\n        this.loadChart();\n      });\n    }\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.componentDidMount();\n    }\n  }\n\n  loadChart(){\n\n    const amount = this.functionsUtil.BNify(this.state.inputValue);\n    const earningsYear = amount.times(this.state.tokenApy.div(100));\n\n    const amountMonth = parseFloat(earningsYear.div(12));\n    const amount3Months = parseFloat(earningsYear.div(4));\n    const amount6Months = parseFloat(earningsYear.div(2));\n    const amountYear = parseFloat(earningsYear.div(1));\n\n    const chartData = [\n      {\n        perc:1/12,\n        label:'MONTH',\n        value:amountMonth,\n        month:amountMonth,\n        color:this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','rgb']).join(','),\n        monthColor:'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','hsl']).join(',')+')',\n      },\n      {\n        perc:3/12,\n        label:'3 MONTHS',\n        value:amount3Months,\n        month3:amount3Months,\n        color:this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','rgb']).join(','),\n        month3Color:'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','hsl']).join(',')+')',\n      },\n      {\n        perc:6/12,\n        label:'6 MONTHS',\n        value:amount6Months,\n        month6:amount6Months,\n        color:this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','rgb']).join(','),\n        month6Color:'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','hsl']).join(',')+')',\n      },\n      {\n        perc:1,\n        label:'YEAR',\n        year:amountYear,\n        value:amountYear,\n        color:this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','rgb']).join(','),\n        yearColor:'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','hsl']).join(',')+')',\n      }\n    ];\n\n    let labelTextColorModifiers = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'chart','labelTextColorModifiers']);\n\n    const maxGridLines = 4;\n    const gridYStep = amountYear/maxGridLines;\n    const gridYValues = [0];\n    for (let i=1;i<=maxGridLines;i++){\n      const gridYValue = i*gridYStep;\n      gridYValues.push(gridYValue);\n    }\n\n    const chartProps = {\n      padding: 0.2,\n      animate: false,\n      indexBy: 'label',\n      // enableLabel: false,\n      labelSkipWidth: 16,\n      labelSkipHeight: 16,\n      keys: ['month','month3','month6','year'],\n      colors: ({ id, data }) => data[`${id}Color`],\n      label: d => this.functionsUtil.abbreviateNumber(d.value,2,4)+' '+this.props.selectedToken,\n      labelTextColor: labelTextColorModifiers ? { from: 'color', modifiers: [ labelTextColorModifiers ] } : null,\n      isInteractive:false,\n      minValue:0,\n      gridYValues,\n      // maxValue:amountYear,\n      axisLeft:{\n        format: v => this.functionsUtil.abbreviateNumber(v,1,3),\n        tickValues:gridYValues,\n        orient: 'left',\n        tickSize: 0,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: '',\n        legendPosition: 'middle'\n      },\n      axisBottom:{\n        legend: '',\n        tickSize:0,\n        tickPadding: 15,\n        orient: 'bottom',\n      },\n      theme:{\n        labels:{\n          text:{\n            fontSize:15,\n            fontWeight:600,\n            fill:theme.colors.counter,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        axis: {\n          ticks: {\n            text: {\n              fontSize:14,\n              fontWeight:600,\n              fill:theme.colors.legend,\n              fontFamily: theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: '#dbdbdb', strokeDasharray: '9 5'\n          }\n        },\n      },\n      margin: this.props.isMobile ? { top: 0, right: 0, bottom: 30, left: 0 } : { top: 10, right: 0, bottom: 50, left: 65 }\n    }\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  changeInputValue(e){\n    let inputValue = e.target.value.length && !isNaN(e.target.value) ? Math.min(this.state.maxInputValue,parseFloat(e.target.value)) : 0;\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    });\n  }\n\n  render() {\n\n    if (!this.props.selectedToken || !this.props.tokenConfig){\n      return null;\n    }\n\n    const idleTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n    const showAPYDisclaimer = idleTokenEnabled && this.functionsUtil.getGlobalConfig(['govTokens','IDLE','showAPR']);\n\n    return (\n      <DashboardCard\n        cardProps={{\n          p:[3,4]\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={['column','row']}\n        >\n          <Flex\n            width={[1,0.3]}\n            flexDirection={'column'}\n            justifyContent={'flex-start'}\n          >\n            <Flex\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <AssetField\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'icon',\n                  props:{\n                    mb:2,\n                    height:'2.5em'\n                  }\n                }}\n              />\n              <Text\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n              >\n                Set the amount and see your estimated earnings on time based on the current APY: { this.state.tokenApy ? `${this.state.tokenApy.toFixed(2)}%` : null}\n                {\n                  showAPYDisclaimer && \n                    <Flex\n                      style={{\n                        display:'inline-flex',\n                        verticalAlign:'middle'\n                      }}\n                    >\n                      <Tooltip\n                        placement={'top'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                      >\n                        <Icon\n                          ml={1}\n                          name={\"Info\"}\n                          size={'1em'}\n                          color={'cellTitle'}\n                        />\n                      </Tooltip>\n                    </Flex>\n                }\n              </Text>\n            </Flex>\n            <Flex\n              mt={3}\n              flexDirection={'column'}\n            >\n              <Input\n                min={0}\n                max={this.state.maxInputValue}\n                type={\"number\"}\n                required={true}\n                height={['3em','3.4em']}\n                borderRadius={2}\n                fontWeight={500}\n                textAlign={'center'}\n                boxShadow={'none !important'}\n                onChange={this.changeInputValue.bind(this)}\n                border={`1px solid ${theme.colors.divider}`}\n                placeholder={`Insert ${this.props.selectedToken.toUpperCase()} amount`}\n                value={this.state.inputValue && !isNaN(this.state.inputValue) ? this.state.inputValue : ''}\n              />\n            </Flex>\n            <Flex\n              mt={3}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                buttonProps={{\n                  width:[1,1/2],\n                }}\n                handleClick={this.loadChart.bind(this)}\n              >\n                CALCULATE\n              </RoundButton>\n            </Flex>\n          </Flex>\n          <Flex\n            mt={[3,0]}\n            width={[1,0.7]}\n            id={'estimated-earnings-chart'}\n          >\n            {\n              this.props.isMobile ? (\n                <Flex\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  {\n                    this.state.chartData !== null && this.state.chartData.map((v,index) => (\n                      <Flex\n                        py={2}\n                        my={2}\n                        width={1}\n                        flexDirection={'row'}\n                        key={`earnings_${index}`}\n                      >\n                        <Flex\n                          width={0.35}\n                          alignItems={'center'}\n                          justifyContent={'flex-start'}\n                        >\n                          <Text\n                            fontSize={1}\n                            fontWeight={3}\n                            color={'legend'}\n                          >\n                            {v.label}\n                          </Text>\n                        </Flex>\n                        <Flex\n                          width={0.65}\n                          position={'relative'}\n                          alignItems={'center'}\n                          minHeight={['20px','35px']}\n                          justifyContent={'center'}\n                        >\n                          <Flex\n                            zIndex={1}\n                            position={'relative'}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontSize={1}\n                              fontWeight={3}\n                              color={'counter'}\n                            >\n                              {this.functionsUtil.abbreviateNumber(v.value,2,4)} {this.props.selectedToken}\n                            </Text>\n                          </Flex>\n                          <Flex\n                            right={0}\n                            width={v.perc}\n                            position={'absolute'}\n                            height={['20px','35px']}\n                            borderRadius={['20px 0 0 20px','35px 0 0 35px']}\n                            style={{background:`linear-gradient(-90deg, rgba(${v.color},0) 0%, rgba(${v.color},1) 100%)`}}\n                          ></Flex>\n                        </Flex>\n                      </Flex>\n                    ))\n                  }\n                </Flex>\n              ) : (\n                <GenericChart\n                  type={Bar}\n                  height={250}\n                  showLoader={true}\n                  {...this.state.chartProps}\n                  data={this.state.chartData}\n                  parentId={'estimated-earnings-chart'}\n                />\n              )\n            }\n          </Flex>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default EstimatedEarnings;","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport AssetsList from '../AssetsList/AssetsList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport FundsOverview from '../FundsOverview/FundsOverview';\nimport DepositRedeem from '../DepositRedeem/DepositRedeem';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EstimatedEarnings from '../EstimatedEarnings/EstimatedEarnings';\n\nclass AssetPage extends Component {\n\n  state = {\n    tokenFees:{},\n    tokenBalance:{},\n    tokenApproved:{},\n    activeModal:null,\n    govTokensBalance:{},\n    idleTokenBalance:{},\n    redeemableBalance:{},\n    govTokensDisabled:{},\n    availableGovTokens:{},\n    tokenFeesPercentage:{},\n    componentMounted:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setActiveModal = activeModal => {\n    this.setState({\n      activeModal\n    });\n  }\n\n  async loadTokensInfo(){\n    if (this.props.account){\n      const newState = {...this.state};\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n        const tokenConfig = this.props.availableTokens[token];\n        const govTokenAvailableTokens = {};\n        govTokenAvailableTokens[token] = tokenConfig;\n\n        const [\n          tokenFeesPercentage,\n          tokenBalance,\n          tokenFees,\n          idleTokenPrice,\n          idleTokenBalance,\n          tokenApproved,\n          govTokensBalance\n        ] = await Promise.all([\n          this.functionsUtil.getTokenFees(tokenConfig),\n          this.functionsUtil.getTokenBalance(token,this.props.account),\n          this.functionsUtil.getUserTokenFees(tokenConfig,this.props.account),\n          this.functionsUtil.genericContractCall(tokenConfig.idle.token, 'tokenPrice'),\n          this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account),\n          this.functionsUtil.checkTokenApproved(token,tokenConfig.idle.address,this.props.account),\n          this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,govTokenAvailableTokens,'DAI')\n        ]);\n\n        newState.tokenFees[token] = tokenFees;\n        newState.tokenBalance[token] = tokenBalance;\n        newState.tokenApproved[token] = tokenApproved;\n        newState.idleTokenBalance[token] = idleTokenBalance;\n        newState.govTokensBalance[token] = govTokensBalance;\n        newState.tokenFeesPercentage[token] = tokenFeesPercentage;\n        newState.govTokensDisabled[token] = tokenConfig.govTokensDisabled;\n        newState.redeemableBalance[token] = idleTokenBalance ? this.functionsUtil.fixTokenDecimals(idleTokenBalance.times(idleTokenPrice),tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      });\n\n      newState.availableGovTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n\n      newState.componentMounted = true;\n      this.setState(newState);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokensInfo();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged || transactionsChanged){\n      this.loadTokensInfo();\n    }\n  }\n\n  render() {\n\n    const userHasFunds = this.props.account && this.state.idleTokenBalance[this.props.selectedToken] && this.functionsUtil.BNify(this.state.idleTokenBalance[this.props.selectedToken]).gt(0);\n\n    return (\n      <Box\n        width={1}\n      >\n        <Flex\n          width={1}\n          mb={[3,4]}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'flex-start'}\n        >\n          <Flex\n            width={0.5}\n          >\n            <Breadcrumb\n              isMobile={this.props.isMobile}\n              path={[this.props.selectedToken]}\n              handleClick={ e => this.props.goToSection(this.props.selectedStrategy) }\n              text={this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])}\n            />\n          </Flex>\n          <Flex\n            width={0.5}\n            justifyContent={'flex-end'}\n          >\n            <CardIconButton\n              icon={'Add'}\n              {...this.props}\n              text={'Add funds'}\n              handleClick={ e => this.setActiveModal('buy') }\n            />\n          </Flex>\n        </Flex>\n        <Title\n          mb={[3,4]}\n        >\n          Deposit / Redeem\n        </Title>\n        <Flex\n          width={1}\n        >\n          <DepositRedeem\n            {...this.props}\n            tokenFees={this.state.tokenFees[this.props.selectedToken]}\n            tokenBalance={this.state.tokenBalance[this.props.selectedToken]}\n            tokenApproved={this.state.tokenApproved[this.props.selectedToken]}\n            govTokensBalance={this.state.govTokensBalance[this.props.selectedToken]}\n            idleTokenBalance={this.state.idleTokenBalance[this.props.selectedToken]}\n            redeemableBalance={this.state.redeemableBalance[this.props.selectedToken]}\n            tokenFeesPercentage={this.state.tokenFeesPercentage[this.props.selectedToken]}\n          />\n        </Flex>\n        {\n          userHasFunds &&\n            <Flex\n              mb={[0,4]}\n              width={1}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Funds Overview</Title>\n              <FundsOverview\n                {...this.props}\n                tokenFees={this.state.tokenFees[this.props.selectedToken]}\n              />\n            </Flex>\n        }\n        {\n          userHasFunds && this.props.account && !this.state.govTokensDisabled[this.props.selectedToken] && Object.keys(this.state.availableGovTokens).length>0 && \n            <Flex\n              width={1}\n              id={\"yield-farming\"}\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Yield Farming</Title>\n              <AssetsList\n                enabledTokens={Object.keys(this.state.availableGovTokens)}\n                cols={[\n                  {\n                    title:'TOKEN',\n                    props:{\n                      width:[0.34,0.15]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2.3em']\n                        }\n                      },\n                      {\n                        name:'tokenName'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'BALANCE',\n                    props:{\n                      width:[0.33, 0.17],\n                    },\n                    fields:[\n                      {\n                        name:'tokenBalance',\n                        props:{\n                          decimals: this.props.isMobile ? 6 : 8\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    title:'REDEEMABLE',\n                    desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                    props:{\n                      width:[0.45,0.17],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'redeemableBalance',\n                        props:{\n                          decimals: this.props.isMobile ? 6 : 8\n                        }\n                      },\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'DISTRIBUTION',\n                    desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                    props:{\n                      width:[0.20,0.17],\n                    },\n                    fields:[\n                      {\n                        name:'userDistributionSpeed',\n                        props:{\n                          decimals:6\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    title:'APR',\n                    desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                    props:{\n                      width:[0.2,0.17],\n                    },\n                    fields:[\n                      {\n                        name:'apr',\n                      }\n                    ]\n                  },\n                  {\n                    title:'TOKEN PRICE',\n                    desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                    mobile:false,\n                    props:{\n                      width: 0.17,\n                    },\n                    parentProps:{\n                      width:1,\n                      pr:[2,4]\n                    },\n                    fields:[\n                      {\n                        name:'tokenPrice',\n                        props:{\n                          unit:'$',\n                          unitPos:'left',\n                          unitProps:{\n                            mr:1,\n                            fontWeight:3,\n                            fontSize:[0,2],\n                            color:'cellText'\n                          }\n                        }\n                      }\n                    ]\n                  },\n                ]}\n                {...this.props}\n                availableTokens={this.state.availableGovTokens}\n              />\n            </Flex>\n        }\n        {\n        this.props.account && \n          <Flex\n            mb={[3,4]}\n            width={1}\n            flexDirection={'column'}\n            id={'estimated-earnings-container'}\n          >\n            <Title my={[3,4]}>Estimated earnings</Title>\n            <EstimatedEarnings\n              {...this.props}\n            />\n          </Flex>\n        }\n        {\n        this.props.account && \n          <Flex\n            mb={[3,4]}\n            width={1}\n            flexDirection={'column'}\n            id={'transactions-container'}\n          >\n            <Title my={[3,4]}>Transactions</Title>\n            <TransactionsList\n              {...this.props}\n              enabledTokens={[this.props.selectedToken]}\n              cols={[\n                {\n                  title: this.props.isMobile ? '' : 'HASH',\n                  props:{\n                    width:[0.15,0.24]\n                  },\n                  fields:[\n                    {\n                      name:'icon',\n                      props:{\n                        mr:[0,2]\n                      }\n                    },\n                    {\n                      name:'hash',\n                      mobile:false\n                    }\n                  ]\n                },\n                {\n                  title:'ACTION',\n                  mobile:false,\n                  props:{\n                    width:0.15,\n                  },\n                  fields:[\n                    {\n                      name:'action'\n                    }\n                  ]\n                },\n                {\n                  title:'DATE',\n                  props:{\n                    width:[0.32,0.23],\n                  },\n                  fields:[\n                    {\n                      name:'date'\n                    }\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.18,0.22],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      name:'statusIcon',\n                      props:{\n                        mr:[0,2]\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'status'\n                    }\n                  ]\n                },\n                {\n                  title:'AMOUNT',\n                  props:{\n                    width:0.19,\n                  },\n                  fields:[\n                    {\n                      name:'amount'\n                    },\n                  ]\n                },\n                {\n                  title:'ASSET',\n                  props:{\n                    width:[0.15,0.20],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      name:'tokenIcon',\n                      props:{\n                        mr:[0,2],\n                        height:['1.4em','1.6em']\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'tokenName'\n                    },\n                  ]\n                },\n              ]}\n            />\n          </Flex>\n        }\n\n        <BuyModal\n          {...this.props}\n          closeModal={this.resetModal}\n          buyToken={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'buy'}\n        />\n      </Box>\n    );\n  }\n}\n\nexport default AssetPage;","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Tooltip } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass CurveDeposit extends Component {\n\n  state = {\n    maxSlippage:0.2,\n    tokenConfig:null,\n    depositSlippage:null,\n    redeemableBalance:null,\n    curveTokensBalance:null,\n    migrationSucceeded:false,\n    migrationContractApproved:false,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.initToken();\n  }\n\n  setMaxSlippage = (maxSlippage) => {\n    this.setState({\n      maxSlippage\n    });\n  }\n\n  async getMigrationParams(toMigrate){\n    const migrationParams = [];\n    const curveTokenConfig = this.functionsUtil.getGlobalConfig(['curve','availableTokens',this.props.tokenConfig.idle.token]);\n\n    if (!curveTokenConfig){\n      return false;\n    }\n    \n    const migrationContractParams = curveTokenConfig.migrationParams;\n    if (migrationContractParams.n_coins){\n      const amounts = await this.functionsUtil.getCurveAmounts(this.state.tokenConfig.idle.token,toMigrate,true);\n      let minMintAmount = await this.functionsUtil.getCurveTokenAmount(amounts);\n      if (this.state.maxSlippage){\n        minMintAmount = this.functionsUtil.BNify(minMintAmount);\n        minMintAmount = minMintAmount.minus(minMintAmount.times(this.functionsUtil.BNify(this.state.maxSlippage).div(100)));\n        minMintAmount = this.functionsUtil.integerValue(minMintAmount);\n      }\n\n      migrationParams.push(amounts);\n      migrationParams.push(minMintAmount);\n\n      // console.log(this.state.tokenConfig.idle.token,toMigrate,migrationParams);\n    }\n\n    return migrationParams;\n  }\n\n  async initToken(){\n\n    let migrationContractApproved = false;\n\n    // Init and check migration contract\n    const migrationContract = await this.functionsUtil.getCurveSwapContract();\n    if (migrationContract){\n      // Check migration contract\n      migrationContractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.idle.token,migrationContract.address,this.props.account);\n    }\n\n    let redeemableBalance = this.functionsUtil.BNify(this.props.idleTokenBalance);\n    if (redeemableBalance){\n      const idleTokenPrice = await this.functionsUtil.getIdleTokenPrice(this.props.tokenConfig);\n      if (idleTokenPrice){\n        redeemableBalance = redeemableBalance.times(idleTokenPrice);\n      }\n    } else {\n      redeemableBalance = this.functionsUtil.BNify(0);\n    }\n\n    const normalizeIdleTokenBalance = this.functionsUtil.normalizeTokenAmount(redeemableBalance,18);\n    const depositSlippage = await this.functionsUtil.getCurveSlippage(this.props.tokenConfig.idle.token,normalizeIdleTokenBalance);\n\n    // Copy token config\n    const tokenConfig = Object.assign({},this.props.tokenConfig);\n\n    // Add migration info\n    const oldContract = {\n      abi:this.props.tokenConfig.idle.abi,\n      name:this.props.tokenConfig.idle.token,\n      token:this.props.tokenConfig.idle.token,\n      address:this.props.tokenConfig.idle.address\n    };\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n    };\n\n    this.setState({\n      tokenConfig,\n      depositSlippage,\n      redeemableBalance,\n      migrationContractApproved\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const idleTokenBalanceChanged = prevProps.idleTokenBalance !== this.props.idleTokenBalance;\n    if (accountChanged || idleTokenBalanceChanged){\n      await this.initToken();\n    }\n  }\n\n  approveCallback = () => {\n    this.initToken();\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokenConfig){\n      return null;\n    }\n\n    const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n    const hasCurveTokens = this.state.curveTokensBalance && this.state.curveTokensBalance.gt(0);\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n            {\n              this.props.idleTokenBalance && this.props.idleTokenBalance.gt(0) && (\n                <Box\n                  width={1}\n                >\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <Icon\n                          size={'1.5em'}\n                          name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                          color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                        />\n                        <Text\n                          ml={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Approve the Curve contract\n                        </Text>\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <Icon\n                          size={'1.5em'}\n                          name={ hasCurveTokens ? 'CheckBox' : 'LooksTwo'}\n                          color={ hasCurveTokens ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                        />\n                        <Text\n                          ml={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Deposit your {this.props.tokenConfig.idle.token}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </DashboardCard>\n                  {\n                    this.state.migrationContractApproved && (\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Choose max slippage:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`Max additional slippage on top of the one shown below`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              color={'cellTitle'}\n                              name={\"InfoOutline\"}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <Flex\n                          mt={2}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          {\n                            [0.2,0.5,1,5].map( slippage => (\n                              <FastBalanceSelector\n                                cardProps={{\n                                  p:1\n                                }}\n                                textProps={{\n                                  fontSize:1\n                                }}\n                                percentage={slippage}\n                                key={`selector_${slippage}`}\n                                onMouseDown={()=>this.setMaxSlippage(slippage)}\n                                isActive={this.state.maxSlippage === parseFloat(slippage)}\n                              />\n                            ))\n                          }\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                </Box>\n              )\n            }\n          {\n            this.state.tokenConfig ? (\n              <Box width={1}>\n                <Migrate\n                  {...this.props}\n                  showActions={false}\n                  getTokenPrice={false}\n                  migrationTextProps={{\n                    fontWeight:500\n                  }}\n                  migrationImage={{\n                    mb:1,\n                    height:'1.8em',\n                    src:curveConfig.params.image\n                  }}\n                  isMigrationTool={true}\n                  waitText={'Deposit estimated in'}\n                  tokenConfig={this.state.tokenConfig}\n                  callbackApprove={this.approveCallback.bind(this)}\n                  migrationParams={this.getMigrationParams.bind(this)}\n                  migrationCallback={this.migrationCallback.bind(this)}\n                  approveText={`To deposit your ${this.props.tokenConfig.idle.token} you need to approve Curve smart-contract first.`}\n                  migrationText={`You can deposit ${this.state.redeemableBalance.toFixed(4)} ${this.props.tokenConfig.idle.token} in the Curve Pool ${ this.state.depositSlippage ? (this.state.depositSlippage.gte(0) ? ` with <span style=\"color:${this.props.theme.colors.transactions.status.failed}\">${this.state.depositSlippage.times(100).toFixed(2)}% of slippage</span>` : ` with <span style=\"color:${this.props.theme.colors.transactions.status.completed}\">${Math.abs(parseFloat(this.state.depositSlippage.times(100).toFixed(2)))}% of bonus</span>`) : '' }.`}\n                >\n                  {\n                    !this.props.account ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'Input'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={2}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Please connect with your wallet interact with Idle.\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:2,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.props.connectAndValidateAccount}\n                          >\n                            Connect\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.migrationSucceeded ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                size={'2.3em'}\n                                name={'DoneAll'}\n                                color={this.props.theme.colors.transactions.status.completed}\n                              />\n                              <Text\n                                mt={2}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You have successfully deposited your {this.props.tokenConfig.idle.token} in the Curve Pool!\n                              </Text>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                size={'2.3em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={2}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any {this.props.tokenConfig.idle.token} in your wallet.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                </Migrate>\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CurveDeposit;","import theme from '../theme';\nimport { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquityCurve extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const curveTxs = await this.functionsUtil.getCurveTxs(this.props.account,0,'latest',enabledTokens);\n\n    const chartData = [];\n    let tokensBalance = [];\n    const processedTxs = {};\n    let firstTxTimestamp = null;\n    let totalBalance = this.functionsUtil.BNify(0);\n    const curvePoolContract = this.functionsUtil.getGlobalConfig(['curve','poolContract']);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n        \n        firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n        const curveTokens = this.functionsUtil.BNify(tx.curveTokens);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            totalBalance = totalBalance.plus(curveTokens);\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          case 'CurveTransferOut':\n            totalBalance = totalBalance.minus(curveTokens);\n          break;\n          default:\n          break;\n        }\n\n        // Reset totalBalance if below zero\n        if (totalBalance.lt(0)){\n          totalBalance = this.functionsUtil.BNify(0);\n        }\n\n        const action = tx.action;\n        const balance = totalBalance;\n        const timeStamp = parseInt(tx.timeStamp);\n        const curveTokenPrice = this.functionsUtil.fixTokenDecimals(tx.curveTokenPrice,curvePoolContract.decimals);\n\n        // console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY/MM/DD HH:mm'),tx.hash,tx.action,curveTokens.toString(),totalBalance.toString());\n\n        if (!curveTokenPrice.isNaN() && !curveTokenPrice.isNaN()){\n          tokensBalance.push({\n            action,\n            balance,\n            timeStamp,\n            curveTokens,\n            curveTokenPrice\n          });\n\n          processedTxs[tx.hash].push(action);\n        }\n      });\n    }\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    let aggregatedBalance = this.functionsUtil.BNify(0);\n    // let curveTokenBalance = this.functionsUtil.BNify(0);\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = await this.functionsUtil.getTokenApiData(Object.values(this.props.availableTokens)[0].address,false,firstTxTimestamp,null,false,3600);\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      let foundBalances = {};\n      let tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      // eslint-disable-next-line\n      const filteredTokenData = tokensData.filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n\n      // eslint-disable-next-line\n      let filteredBalances = tokensBalance.filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n      \n      if (!filteredBalances.length){\n        if (prevBalances){\n          filteredBalances = prevBalances;\n          const lastFilteredTx = Object.values(filteredBalances).pop();\n          const currentBalance = parseFloat(lastFilteredTx.balance);\n\n          const lastTokenData = Object.values(filteredTokenData).pop();\n          let curveTokenPrice = null;\n          if (lastTokenData){\n            curveTokenPrice = await this.functionsUtil.getCurveTokenPrice(lastTokenData.blocknumber);\n          }\n\n          // Take idleToken price from API and calculate new balance\n          if (currentBalance>0 && timeStamp>firstTxTimestamp && curveTokenPrice){\n            // Set new curveTokenPrice\n            lastFilteredTx.curveTokenPrice = curveTokenPrice;\n            filteredBalances = [lastFilteredTx];\n          }\n        } else {\n          filteredBalances = [{\n            balance:this.functionsUtil.BNify(0),\n            curveTokenPrice:this.functionsUtil.BNify(0)\n          }];\n        }\n      }\n\n      const lastTx = Object.assign([],filteredBalances).pop();\n      let lastTxBalance = this.functionsUtil.BNify(lastTx.balance).times(lastTx.curveTokenPrice);\n\n      tokensBalances[curvePoolContract.token] = this.functionsUtil.BNify(lastTx.balance);\n      aggregatedBalance = lastTxBalance;\n\n      foundBalances = filteredBalances;\n\n      // console.log(momentDate.format('YYYY/MM/DD 00:00'),lastTx.balance.toString(),lastTx.curveTokenPrice.toString(),lastTxBalance.toString());\n\n      if (startDate === null || momentDate.isSameOrAfter(startDate)){\n        \n        if (momentDate.isAfter(new Date(),'day')){\n          momentDate = this.functionsUtil.strToMoment(new Date());\n        }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        const aggregatedBalanceParsed = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalanceParsed;\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalanceParsed : Math.min(minChartValue,aggregatedBalanceParsed);\n        maxChartValue = maxChartValue === null ? aggregatedBalanceParsed : Math.max(maxChartValue,aggregatedBalanceParsed);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    // Add token Data\n    chartData.push({\n      id:'USD',\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens','USD','color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      areaOpacity:0.1,\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:theme.colors.legend,\n              fontFamily: theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: '#dbdbdb', strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 50 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0 &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const tokenInfo = this.functionsUtil.getGlobalConfig(['stats','tokens',token]);\n                const tokenName = tokenInfo.name ? tokenInfo.name : token;\n                const color = tokenInfo.color.hex;\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={tokenName}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquityCurve;","import theme from '../theme';\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport { Flex, Heading, Text } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioEquityCurve from '../PortfolioEquityCurve/PortfolioEquityCurve';\n\nclass FundsOverviewCurve extends Component {\n\n  state = {\n    compAPR:null,\n    aggregatedValues:[],\n    govTokensUserBalance:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    await this.functionsUtil.getCurveAvgBuyPrice();\n\n    // debugger;\n\n    await this.functionsUtil.getCurveAvgSlippage();\n\n    // debugger;\n    /*\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const [govTokensUserBalance,avgAPY,days] = await Promise.all([\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,'DAI'),\n      this.functionsUtil.loadAssetField('avgAPY',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadAssetField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '-') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <AssetField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    let [tokenAllocation,compAPR] = await Promise.all([\n      this.functionsUtil.getTokenAllocation(this.props.tokenConfig,false,false),\n      this.functionsUtil.getCompAPR(this.props.selectedToken,this.props.tokenConfig)\n    ]);\n\n    if (tokenAllocation){\n      const compoundInfo = this.props.tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (compoundInfo){\n        if (tokenAllocation.protocolsAllocationsPerc[compoundInfo.address.toLowerCase()]){\n          const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[compoundInfo.address.toLowerCase()];\n          compAPR = compAPR.times(compoundAllocationPerc);\n        }\n      }\n    }\n\n    this.setState({\n      compAPR,\n      aggregatedValues,\n      govTokensUserBalance\n    });\n    */\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Text\n                          mt={2}\n                          fontWeight={2}\n                          fontSize={[1,2]}\n                          color={'cellText'}\n                        >\n                          {v.props.title}\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          <Flex\n            width={1}\n            ml={[0,3]}\n            id={\"funds-overview\"}\n          >\n            <PortfolioEquityCurve\n              {...this.props}\n              chartHeight={350}\n              parentId={'funds-overview'}\n              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n            />\n          </Flex>\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'amountLentCurve',\n                  props:{\n                    decimals:4,\n                    maxPrecision:8,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'redeemableBalanceCounterCurve',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-9px'}\n              >\n                <AssetField\n                  {...this.props}\n                  token={this.props.selectedToken}\n                  fieldInfo={{\n                    name:'earningsPercCurve',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'earningsCounterCurve',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            {\n              /*\n              <Flex\n                mb={[2,0]}\n                width={[1,1/5]}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'flex-start'}\n              >\n                <Title\n                  mb={2}\n                  fontSize={[3,4]}\n                  component={Heading.h3}\n                >\n                  Fees\n                </Title>\n                <AssetField\n                  {...this.props}\n                  token={this.props.selectedToken}\n                  fieldInfo={{\n                    name:'feesCounter',\n                    props:{\n                      decimals:7,\n                      maxPrecision:8,\n                      style:{\n                        fontWeight:300,\n                        fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                        color:theme.colors.counter\n                      },\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n              */\n            }\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Current APY\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'curveApy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Avg Slippage\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'curveAvgSlippage',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverviewCurve;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport CurveRedeem from '../CurveRedeem/CurveRedeem';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport CurveDeposit from '../CurveDeposit/CurveDeposit';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport FundsOverviewCurve from '../FundsOverviewCurve/FundsOverviewCurve';\n\nclass AssetPage extends Component {\n\n  state = {\n    inputValue:{},\n    processing:{},\n    tokenFees:null,\n    canRedeem:null,\n    canDeposit:null,\n    action:'deposit',\n    activeModal:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    tokenApproved:null,\n    selectedToken:null,\n    availableTokens:{},\n    redeemBalance:null,\n    depositBalance:null,\n    buttonDisabled:false,\n    curveTokenPrice:null,\n    depositSlippage:null,\n    idleTokenBalance:null,\n    withdrawSlippage:null,\n    govTokensBalance:null,\n    curveZapContract:null,\n    curveTokenConfig:null,\n    curveTokensAmounts:{},\n    govTokensDisabled:null,\n    componentMounted:false,\n    curvePoolContract:null,\n    curveSwapContract:null,\n    curveTokenBalance:null,\n    redeemableBalance:null,\n    fastBalanceSelector:{},\n    curveAvailableTokens:{},\n    tokenFeesPercentage:null,\n    redeemUnevenAmounts:false,\n    curveDepositContract:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setActiveModal = activeModal => {\n    this.setState({\n      activeModal\n    });\n  }\n\n  toggleUnevenAmounts = (redeemUnevenAmounts) => {\n    this.setState({\n      redeemUnevenAmounts\n    });\n  }\n\n  changeFromToken = (selectedToken) => {\n    const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n    this.props.goToSection(`${curveConfig.params.route}/${selectedToken}`);\n  }\n\n  getSelectedToken(){\n    const curveAvailableTokens = this.functionsUtil.getGlobalConfig(['curve','availableTokens']);\n    return this.props.urlParams.param1 && curveAvailableTokens[this.props.urlParams.param1] ? this.props.urlParams.param1 : Object.keys(curveAvailableTokens)[0];\n  }\n\n  setSelectedToken = async (selectedToken) => {\n    const availableTokens = this.functionsUtil.getCurveAvailableTokens();\n    const curveAvailableTokens = this.functionsUtil.getGlobalConfig(['curve','availableTokens']);\n    const curveTokenConfig = curveAvailableTokens[selectedToken];\n    const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      availableTokens,\n      curveTokenConfig\n    });\n  }\n\n  loadTokensInfo = async () => {\n\n    const curveAvailableTokens = this.functionsUtil.getGlobalConfig(['curve','availableTokens']);\n    this.setState({\n      curveAvailableTokens\n    });\n\n    const selectedToken = this.getSelectedToken();\n    // Check if token is set the query params\n    if (selectedToken && selectedToken !== this.props.urlParams.param1){\n      this.changeFromToken(selectedToken);\n      return await this.setSelectedToken(selectedToken);\n    } else if (selectedToken !== this.state.selectedToken){\n      await this.setSelectedToken(selectedToken);\n    }\n\n    const newState = {...this.state};\n\n    const availableTokens = this.functionsUtil.getCurveAvailableTokens();\n\n    if (newState.selectedToken !== selectedToken){\n      newState.selectedToken = selectedToken;\n    }\n\n    const curveTokenConfig = curveAvailableTokens[selectedToken];\n    const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n\n    const [\n      curveZapContract,\n      curvePoolContract,\n      curveSwapContract,\n      curveDepositContract\n    ] = await Promise.all([\n      this.functionsUtil.getCurveZapContract(),\n      this.functionsUtil.getCurvePoolContract(),\n      this.functionsUtil.getCurveSwapContract(),\n      this.functionsUtil.getCurveDepositContract()\n    ]);\n\n    newState.curveZapContract = curveZapContract;\n    newState.curvePoolContract = curvePoolContract;\n    newState.curveSwapContract = curveSwapContract;\n    newState.curveDepositContract = curveDepositContract;\n\n    newState.availableTokens = availableTokens;\n\n\n    // console.log('curveTokenPrice',newState.curveTokenPrice.toFixed(6),'curveTokenBalance',newState.curveTokenBalance.toFixed(6),'redeemableBalance',newState.redeemableBalance.toFixed(20),'tokenBalance',newState.tokenBalance.toFixed(20));\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[selectedToken] = tokenConfig;\n\n    newState.tokenConfig = tokenConfig;\n    newState.curveTokenConfig = curveTokenConfig;\n\n    if (this.props.account){\n      [\n        newState.curveTokenPrice,\n        newState.curveTokenBalance,\n        newState.tokenFeesPercentage,\n        newState.tokenFees,\n        newState.tokenBalance,\n        newState.idleTokenBalance,\n        newState.tokenApproved,\n      ] = await Promise.all([\n        this.functionsUtil.getCurveTokenPrice(),\n        this.functionsUtil.getCurveTokenBalance(),\n        this.functionsUtil.getTokenFees(tokenConfig),\n        this.functionsUtil.getUserTokenFees(tokenConfig,this.props.account),\n        this.functionsUtil.getTokenBalance(selectedToken,this.props.account),\n        this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account),\n        this.functionsUtil.checkTokenApproved(selectedToken,curveDepositContract.address,this.props.account),\n      ]);\n\n\n      newState.processing = {\n        redeem:{\n          txHash:null,\n          loading:false\n        },\n        deposit:{\n          txHash:null,\n          loading:false\n        },\n        approve:{\n          txHash:null,\n          loading:false\n        },\n      };\n      newState.inputValue = {\n        redeem:null,\n        deposit:null\n      };\n      newState.fastBalanceSelector = {\n        redeem:null,\n        deposit:null\n      };\n\n      newState.componentMounted = true;\n      newState.depositBalance = newState.tokenBalance;\n      newState.redeemBalance = newState.redeemableBalance;\n      newState.govTokensDisabled = tokenConfig.govTokensDisabled;\n      newState.canRedeem = newState.curveTokenBalance && newState.curveTokenBalance.gt(0);\n      newState.canDeposit = newState.idleTokenBalance && newState.idleTokenBalance.gt(0);\n      newState.redeemableBalance = newState.curveTokenBalance ? newState.curveTokenBalance.times(newState.curveTokenPrice) : this.functionsUtil.BNify(0);\n    }\n\n    this.setState(newState);\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokensInfo();\n  }\n\n  async calculateSlippage(){\n    const amount = this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]) : null;\n\n    if (!amount || amount.lte(0)){\n      return false;\n    }\n\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.curvePoolContract.decimals);\n    const newState = {};\n\n    switch (this.state.action){\n      case 'deposit':\n        newState.depositBalance = amount;\n        newState.depositSlippage = await this.functionsUtil.getCurveSlippage(this.state.tokenConfig.idle.token,normalizedAmount,true);\n      break;\n      case 'redeem':\n        newState.redeemBalance = amount;\n        newState.withdrawSlippage = await this.functionsUtil.getCurveSlippage(this.state.tokenConfig.idle.token,normalizedAmount,true);\n      break;\n      default:\n      break;\n    }\n    // console.log('calculateSlippage',newState);\n\n    this.setState(newState);\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenChanged = prevProps.urlParams.param1 !== this.props.urlParams.param1;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (accountChanged || transactionsChanged || tokenChanged){\n      await this.loadTokensInfo();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const redeemUnevenAmountsChanged = this.state.redeemUnevenAmounts !== prevState.redeemUnevenAmounts;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged || redeemUnevenAmountsChanged){\n      this.setInputValue();\n    }\n\n    if (actionChanged){\n      this.updateAssetSelector();\n    }\n\n    const inputChanged = prevState.inputValue[this.state.action] !== this.state.inputValue[this.state.action];\n    if (inputChanged){\n      this.calculateSlippage();\n    }\n  }\n\n  updateAssetSelector = async () => {\n    const newState = {};\n    switch (this.state.action){\n      case 'deposit':\n        this.loadTokensInfo();\n      break;\n      case 'redeem':\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['curve','poolContract']);\n        newState.curveAvailableTokens = {};\n        newState.curveTokenConfig = tokenConfig;\n        newState.selectedToken = tokenConfig.token;\n        newState.curveAvailableTokens[tokenConfig.token] = tokenConfig;\n      break;\n      default:\n      break;\n    }\n\n    this.setState(newState);\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n    let amount = null;\n\n    switch(this.state.action){\n      case 'deposit':\n        amount = this.state.tokenBalance ? this.functionsUtil.BNify(this.state.tokenBalance).times(selectedPercentage) : null;\n      break;\n      case 'redeem':\n        if (this.state.redeemUnevenAmounts){\n          amount = this.state.curveTokenBalance ? this.functionsUtil.BNify(this.state.curveTokenBalance).times(selectedPercentage) : null;\n        } else {\n          amount = this.state.redeemableBalance ? this.functionsUtil.BNify(this.state.redeemableBalance).times(selectedPercentage) : null;\n        }\n      break;\n      default:\n      break;\n    }\n\n    this.checkButtonDisabled(amount);\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    this.checkButtonDisabled(amount);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n\n    if (!this.state.action){\n      return false;\n    }\n\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n\n    let buttonDisabled = false;\n\n    switch (this.state.action){\n      case 'deposit':\n        buttonDisabled = buttonDisabled || (amount && amount.gt(this.state.tokenBalance));\n      break;\n      case 'redeem':\n        if (this.state.redeemUnevenAmounts){\n          buttonDisabled = !this.state.canRedeem || (buttonDisabled || (amount && amount.gt(this.state.curveTokenBalance)) );\n        } else {\n          buttonDisabled = !this.state.canRedeem || (buttonDisabled || (amount && amount.gt(this.state.redeemableBalance)) );\n        }\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  cancelTransaction = async () => {\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        [this.state.action]:{\n          txHash:null,\n          loading:false\n        }\n      }\n    }));\n  }\n\n  approveToken = async () => {\n\n    // Check if the token is already approved\n    const tokenApproved = this.state.tokenApproved;\n\n    if (tokenApproved){\n      return this.setState((prevState) => ({\n        tokenApproved,\n        processing: {\n          ...prevState.processing,\n          approve:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    }\n\n    const callbackApprove = (tx,error)=>{\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Approve',\n        eventAction: this.state.selectedToken,\n        eventLabel: tx.status,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        tokenApproved: (tx.status === 'success'), // True\n        processing: {\n          ...prevState.processing,\n          approve:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptApprove = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          approve:{\n            ...prevState.processing['approve'],\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.functionsUtil.enableERC20(this.state.selectedToken,this.state.curveDepositContract.address,callbackApprove,callbackReceiptApprove);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        approve:{\n          txHash:null,\n          loading:true\n        }\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    let contractSendResult = null;\n    const inputValue = this.state.inputValue[this.state.action];\n    const selectedPercentage = this.getFastBalanceSelector();\n\n    let loading = true;\n\n    switch (this.state.action){\n      // Handle deposit in curve\n      case 'deposit':\n\n        if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n          return false;\n        }\n\n        const tokensToDeposit = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.curvePoolContract.decimals);\n\n        const callbackDeposit = (tx,error) => {\n\n          if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txError = tx.status === 'error';\n          const txSucceeded = tx.status === 'success';\n\n          const eventData = {\n            eventCategory: 'Deposit',\n            eventAction: this.state.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              activeModal:'share',\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          } else if (this.state.metaTransactionsEnabled && txError){\n            this.setState({\n              txError:{\n                [this.state.action]: true\n              }\n            });\n          }\n        };\n\n        const callbackReceiptDeposit = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        const amounts = await this.functionsUtil.getCurveAmounts(this.state.tokenConfig.idle.token,tokensToDeposit);\n        const minMintAmount = await this.functionsUtil.genericContractCall(this.state.curveSwapContract.name,'calc_token_amount',[amounts,true]);\n        const depositParams = [amounts,minMintAmount];\n\n        // No need for callback atm\n        contractSendResult = await this.props.contractMethodSendWrapper(this.state.curveDepositContract.name, 'add_liquidity', depositParams, null, callbackDeposit, callbackReceiptDeposit);\n      break;\n      case 'redeem':\n\n        if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n          return false;\n        }\n\n        let curveTokensToRedeem = null;\n        if (selectedPercentage){\n          curveTokensToRedeem = this.functionsUtil.BNify(this.state.curveTokenBalance).times(selectedPercentage);\n        } else {\n          curveTokensToRedeem = this.functionsUtil.BNify(this.functionsUtil.normalizeTokenAmount(inputValue,this.state.curvePoolContract.decimals));\n          if (!this.state.redeemUnevenAmounts){\n            const curveTokenPrice = await this.functionsUtil.getCurveTokenPrice();\n            curveTokensToRedeem = curveTokensToRedeem.div(curveTokenPrice);\n          }\n        }\n\n        if (!curveTokensToRedeem){\n          return false;\n        }\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventLabel: tx.status,\n            eventCategory: `CurveRedeem`,\n            eventAction: this.state.selectedToken,\n            eventValue: curveTokensToRedeem.toFixed()\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        const _amount = this.functionsUtil.normalizeTokenAmount(curveTokensToRedeem,this.state.curvePoolContract.decimals).toString();\n        let min_amounts = await this.functionsUtil.getCurveAmounts(this.state.tokenConfig.idle.token,0);\n\n        const contractName = this.state.curveDepositContract.name;\n        if (this.state.redeemUnevenAmounts){\n          console.log('remove_liquidity_imbalance',this.functionsUtil.BNify(inputValue).toString(),_amount.toString(),min_amounts);\n          this.props.contractMethodSendWrapper(contractName, 'remove_liquidity_imbalance', [min_amounts, _amount], null, callbackRedeem, callbackReceiptRedeem);\n        } else {\n          min_amounts = await this.functionsUtil.getCurveAmounts(this.state.tokenConfig.idle.token,_amount);\n          console.log('remove_liquidity',this.functionsUtil.BNify(inputValue).toString(),_amount.toString(),min_amounts);\n          this.props.contractMethodSendWrapper(contractName, 'remove_liquidity', [_amount, min_amounts], null, callbackRedeem, callbackReceiptRedeem);\n        }\n      break;\n      default: // Reset loading if not handled action\n        loading = false;\n      break;\n    }\n\n    // console.log('contractSendResult',contractSendResult);\n\n    if (contractSendResult !== false){\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          [this.state.action]:{\n            ...prevState.processing[this.state.action],\n            loading\n          }\n        }\n      }));\n    }\n  }\n\n  setAction = (action) => {\n    switch (action.toLowerCase()){\n      case 'deposit':\n        \n      break;\n      case 'redeem':\n        if (!this.state.canRedeem){\n          action = null;\n        }\n      break;\n      default:\n        action = null;\n      break;\n    }\n\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  render(){\n\n    const userHasFunds = this.props.account && this.state.curveTokenBalance && this.functionsUtil.BNify(this.state.curveTokenBalance).gt(0);\n    const canPerformAction = true;\n\n    return (\n      <Box\n        width={1}\n      >\n        <Flex\n          width={1}\n          mb={[3,4]}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'flex-start'}\n        >\n          <Flex\n            width={0.5}\n          >\n            {\n              <Breadcrumb\n                isMobile={this.props.isMobile}\n                path={['Boost',this.state.selectedToken]}\n                handleClick={ e => this.props.goToSection('best') }\n                text={this.functionsUtil.getGlobalConfig(['strategies','best','title'])}\n              />\n            }\n          </Flex>\n        </Flex>\n        <Title\n          mb={[3,4]}\n        >\n          Curve Pool\n        </Title>\n        <Flex\n          width={1}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            <Flex\n              width={[1,0.36]}\n              alignItems={'stretch'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select your asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  onChange={this.changeFromToken}\n                  selectedToken={this.state.selectedToken}\n                  tokenConfig={this.state.curveTokenConfig}\n                  showBalance={this.state.action === 'deposit'}\n                  availableTokens={this.state.curveAvailableTokens}\n                />\n              </Box>\n              <Box\n                width={1}\n              >\n                {\n                  canPerformAction ? (\n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:[2,3],\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setAction('deposit');\n                            }\n                          }}\n                          isInteractive={true}\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:[1,3]\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:[2,3],\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setAction('redeem');\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canRedeem }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:[1,3]\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Redeem\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  ) : (\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    >\n                      <Icon\n                        size={'2.3em'}\n                        name={'MoneyOff'}\n                        color={'cellText'}\n                      />\n                      <Text\n                        mt={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'center'}\n                      >\n                        You don't have any {this.state.tokenConfig.idle.token} in your wallet.\n                      </Text>\n                    </Flex>\n                  )\n                }\n              </Box>\n            </Flex>\n            <Flex\n              width={1}\n              mt={ this.props.account ? 3 : 0 }\n            >\n            {\n              this.state.action === 'deposit' ? (\n                <CurveDeposit\n                  {...this.props}\n                  {...this.state}\n                />\n              ) : this.state.action === 'redeem' && (\n                <CurveRedeem\n                  {...this.props}\n                  {...this.state}\n                />\n              )\n            }\n            </Flex>\n          </Flex>\n        </Flex>\n        {\n          userHasFunds &&\n            <Flex\n              mb={[0,4]}\n              width={1}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Funds Overview</Title>\n              <FundsOverviewCurve\n                {...this.props}\n                tokenFees={this.state.tokenFees}\n                tokenConfig={this.state.tokenConfig}\n                selectedToken={this.state.selectedToken}\n                availableTokens={this.state.availableTokens}\n                enabledTokens={Object.keys(this.state.availableTokens)}\n              />\n            </Flex>\n        }\n        {\n          /*\n          this.props.account && !this.state.govTokensDisabled[this.state.selectedToken] && Object.keys(availableGovTokens).length>0 && \n            <Flex\n              width={1}\n              id=\"earnings-estimation\"\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Yield Farming</Title>\n              <AssetsList\n                enabledTokens={Object.keys(availableGovTokens)}\n                handleClick={(props) => {}}\n                cols={[\n                  {\n                    title:'TOKEN',\n                    props:{\n                      width:[0.33,0.22]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2.3em']\n                        }\n                      },\n                      {\n                        name:'tokenName'\n                      }\n                    ]\n                  },\n                  {\n                    title:'BALANCE',\n                    props:{\n                      width:[0.33, 0.26],\n                    },\n                    fields:[\n                      {\n                        name:'tokenBalance',\n                        props:{\n                          decimals: this.props.isMobile ? 6 : 8\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    title:'REDEEMABLE',\n                    props:{\n                      width:[0.33,0.26],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'redeemableBalance',\n                        props:{\n                          decimals: this.props.isMobile ? 6 : 8\n                        }\n                      },\n                      {\n                        name:'tooltip',\n                        props:{\n                          placement:'bottom',\n                          message:'The shown balance may be lower than the real one.',\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    title:'TOKEN PRICE',\n                    mobile:false,\n                    props:{\n                      width: 0.26,\n                    },\n                    parentProps:{\n                      width:1,\n                      pr:[2,4]\n                    },\n                    fields:[\n                      {\n                        name:'tokenPrice',\n                        props:{\n                          unit:'$',\n                          unitPos:'left',\n                          unitProps:{\n                            mr:1,\n                            fontWeight:3,\n                            fontSize:[0,2],\n                            color:'cellText'\n                          }\n                        }\n                      }\n                    ]\n                  },\n                ]}\n                {...this.props}\n                availableTokens={availableGovTokens}\n              />\n            </Flex>\n          */\n        }\n        {\n          /*\n          this.props.account && \n            <Flex\n              mb={[3,4]}\n              width={1}\n              flexDirection={'column'}\n              id={'estimated-earnings-container'}\n            >\n              <Title my={[3,4]}>Estimated earnings</Title>\n              <EstimatedEarnings\n                {...this.props}\n              />\n            </Flex>\n          */\n        }\n        {\n        this.props.account && \n          <Flex\n            mb={[3,4]}\n            width={1}\n            flexDirection={'column'}\n            id={'transactions-container'}\n          >\n            <Title my={[3,4]}>Transactions</Title>\n            <TransactionsList\n              {...this.props}\n              availableTokens={this.state.availableTokens}\n              enabledTokens={Object.keys(this.state.availableTokens)}\n              enabledActions={['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut']}\n              cols={[\n                {\n                  title: this.props.isMobile ? '' : 'HASH',\n                  props:{\n                    width:[0.15,0.24]\n                  },\n                  fields:[\n                    {\n                      name:'icon',\n                      props:{\n                        mr:[0,2]\n                      }\n                    },\n                    {\n                      name:'hash',\n                      mobile:false\n                    }\n                  ]\n                },\n                {\n                  title:'ACTION',\n                  mobile:false,\n                  props:{\n                    width:0.15,\n                  },\n                  fields:[\n                    {\n                      name:'action'\n                    }\n                  ]\n                },\n                {\n                  title:'DATE',\n                  props:{\n                    width:[0.32,0.23],\n                  },\n                  fields:[\n                    {\n                      name:'date'\n                    }\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.18,0.22],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      name:'statusIcon',\n                      props:{\n                        mr:[0,2]\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'status'\n                    }\n                  ]\n                },\n                {\n                  title:'AMOUNT',\n                  props:{\n                    width:0.19,\n                  },\n                  fields:[\n                    {\n                      name:'amount'\n                    },\n                  ]\n                },\n                {\n                  title:'ASSET',\n                  props:{\n                    width:[0.15,0.20],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      name:'tokenIcon',\n                      props:{\n                        mr:[0,2],\n                        height:['1.4em','1.6em']\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'tokenName'\n                    },\n                  ]\n                },\n              ]}\n            />\n          </Flex>\n        }\n\n        <BuyModal\n          {...this.props}\n          closeModal={this.resetModal}\n          buyToken={this.state.selectedToken}\n          isOpen={this.state.activeModal === 'buy'}\n        />\n      </Box>\n    );\n  }\n}\n\nexport default AssetPage;","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Button,\n  Form,\n  Icon,\n  Flex,\n  Link\n} from \"rimble-ui\";\nimport axios from 'axios';\nimport colors from '../../colors';\nimport ModalCard from './ModalCard';\nimport header_styles from './Header.module.scss';\nimport ButtonLoader from '../../ButtonLoader/ButtonLoader.js';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass WelcomeModal extends React.Component {\n\n  state = {\n    email:null,\n    error:false,\n    subscribed:false,\n    sendingForm:false\n  };\n\n  functionsUtil = null;\n\n  constructor(props) {\n    super(props);\n    this.functionsUtil = new FunctionsUtil(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleValidation = this.handleValidation.bind(this);\n  }\n\n  componentDidUpdate = async () => {\n    this.functionsUtil.setProps(this.props);\n  }\n\n  sendUserInfo = (sendEmail=true) => {\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const userInfo = {\n      address: this.props.account,\n      provider: walletProvider\n    };\n\n    if (sendEmail && this.state.email !== null){\n      userInfo.email = this.state.email;\n    }\n\n    this.functionsUtil.simpleIDPassUserInfo(userInfo);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    if (!this.state.email){\n      return false;\n    }\n\n    const callback = () => {\n      this.setState({\n        sendingForm:false,\n        subscribed:true\n      });\n      window.setTimeout(this.props.closeModal,2500);\n    };\n\n    this.sendUserInfo();\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'UI',\n      eventAction: 'send_email',\n      eventLabel: 'WelcomeModal'\n    });\n\n    axios.post(globalConfigs.newsletterSubscription.endpoint, {\n      'email': this.state.email\n    }).then(r => {\n      callback();\n    })\n    .catch(err => {\n      callback();\n    });\n\n    // Set signedUp in the localStorage\n    if (localStorage){\n      const walletAddress = this.props.account.toLowerCase();\n      let lastLogin = localStorage.getItem('lastLogin') ? JSON.parse(localStorage.getItem('lastLogin')) : null;\n      if (lastLogin && lastLogin[walletAddress] && !lastLogin[walletAddress].signedUp){\n        lastLogin[walletAddress].signedUp = true;\n        this.functionsUtil.setLocalStorage('lastLogin',JSON.stringify(lastLogin));\n      }\n    }\n\n    this.setState({\n      sendingForm:true\n    })\n  };\n\n  closeModal = async () => {\n\n    const closeModal = () => {\n      this.props.closeModal();\n    };\n\n    try{\n      // Prevent sending email\n      this.sendUserInfo(false);\n\n      // Send Google Analytics event\n      if (globalConfigs.analytics.google.events.enabled){\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'UI',\n          eventAction: 'continue_without_email',\n          eventLabel: 'WelcomeModal'\n        },closeModal);\n\n        // Call callback after 1 second if stuck\n        setTimeout(closeModal,1000);\n      } else {\n        closeModal();\n      }\n    } catch (err) {\n      closeModal();\n    }\n  }\n\n  handleValidation(e) {\n    if (e && e.target) {\n      this.setState({ email: e.target.value });\n      e.target.parentNode.classList.add(\"was-validated\");\n    }\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        {\n          this.state.subscribed ? (\n            <ModalCard\n              closeFunc={this.closeModal}\n            >\n              <ModalCard.Header title={'All done'} icon={`images/done.svg`}></ModalCard.Header>\n              <ModalCard.Body>\n                <Flex width={1} flexDirection={'column'} mb={3}>\n                  <Text color={'dark-gray'} textAlign={'center'} fontSize={3} my={0}>\n                    Thanks for subscribing!\n                  </Text>\n                  <Button\n                    my={3}\n                    width={'100%'}\n                    borderRadius={4}\n                    onClick={this.closeModal}\n                  >\n                    CLOSE\n                  </Button>\n                </Flex>\n              </ModalCard.Body>\n            </ModalCard>\n          ) : (\n            <ModalCard closeFunc={this.closeModal}>\n              <ModalCard.Header title={'Stay up-to-date!'} icon={`images/notification.svg`}>\n              </ModalCard.Header>\n              <ModalCard.Body>\n                <Form onSubmit={this.handleSubmit}>\n                  <Flex width={1} flexDirection={'column'} mb={3}>\n                    <Text color={'mid-gray'} textAlign={'left'} fontSize={3} my={0}>\n                      Add your e-mail to receive updates about:\n                    </Text>\n                  </Flex>\n                  <Flex width={1} flexDirection={'column'} mt={2}>\n                    <Flex my={2} flexDirection={'row'} alignItems={'center'}>\n                      <Icon\n                        name={'CheckCircle'}\n                        color={colors.green}\n                        size={'32'}\n                      />\n                      <Text color={'dark-gray'} textAlign={'left'} fontSize={3} fontWeight={2} my={0} ml={2}>\n                        Performance reports\n                      </Text>\n                    </Flex>\n                    <Flex my={2} flexDirection={'row'}>\n                      <Icon\n                        name={'CheckCircle'}\n                        color={colors.green}\n                        size={'32'}\n                      />\n                      <Text color={'dark-gray'} textAlign={'left'} fontSize={3} fontWeight={2} my={0} ml={2}>\n                        New Protocols & Tokens\n                      </Text>\n                    </Flex>\n                    <Flex my={2} flexDirection={'row'}>\n                      <Icon\n                        name={'CheckCircle'}\n                        color={colors.green}\n                        size={'32'}\n                      />\n                      <Text color={'dark-gray'} textAlign={'left'} fontSize={3} fontWeight={2} my={0} ml={2}>\n                        Latest updates\n                      </Text>\n                    </Flex>\n                    <Form.Field width={1} label={''}>\n                      <Form.Input\n                        type=\"email\"\n                        name=\"EMAIL\"\n                        width={1}\n                        outline={'none'}\n                        border={0}\n                        px={3}\n                        py={4}\n                        fontSize={3}\n                        textAlign={['center','left']}\n                        placeholder={'Enter your e-mail'}\n                        onChange={this.handleValidation}\n                        required\n                      />\n                    </Form.Field>\n                    <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n                      <ButtonLoader\n                        buttonText={'SUBMIT'}\n                        isLoading={this.state.sendingForm}\n                        buttonProps={{className:header_styles.gradientButton,width:'100%',type:'submit'}}\n                      >\n                      </ButtonLoader>\n                      <Link mt={2} onClick={this.closeModal} hoverColor={'blue'}>continue without e-mail</Link>\n                    </Flex>\n                  </Flex>\n                </Form>\n              </ModalCard.Body>\n            </ModalCard>\n          )\n        }\n      </Modal>\n    );\n  }\n}\n\nexport default WelcomeModal;\n","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass TooltipModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            title={this.props.title}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n                dangerouslySetInnerHTML={{ __html: this.props.content }}\n              >\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                GOT IT\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TooltipModal;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport header_styles from './Header.module.scss';\nimport AssetField from '../../AssetField/AssetField';\nimport { Text, Modal, Flex, Checkbox } from \"rimble-ui\";\nimport SmartNumber from '../../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport ButtonLoader from '../../ButtonLoader/ButtonLoader.js';\n\nclass MigrateModal extends React.Component {\n\n  state = {\n    dontShowAgain:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    const gaEventsEnabled = this.functionsUtil.getGlobalConfig(['globalConfigs','analytics','google','events','enabled']);\n    // Send Google Analytics event\n    if (gaEventsEnabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'UI',\n        eventAction: 'continue_without_migrate',\n        eventLabel: 'MigrateModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  toggleDontShowAgain = (dontShowAgain) => {\n\n    if (dontShowAgain){\n      this.functionsUtil.setLocalStorage('dontShowMigrateModal','true');\n    } else {\n      this.functionsUtil.removeStoredItem('dontShowMigrateModal');\n    }\n\n    this.setState({\n      dontShowAgain\n    });\n  }\n\n  migrate = () => {\n    const tokenMigrationRoute = this.functionsUtil.getGlobalConfig(['tools','tokenMigration','route']);\n    this.props.goToSection('tools/'+tokenMigrationRoute);\n    this.props.closeModal();\n  }\n\n  render() {\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[2,3],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','750px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            iconHeight={'40px'}\n            title={'Migrate to Idle'}\n            icon={`images/migrate.svg`}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              mb={0}\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                my={0}\n                fontSize={3}\n                color={'mid-gray'}\n                textAlign={'center'}\n              >\n                You can migrate your funds from Compound, Aave, Fulcrum, iEarn and Idle V2 with just one transaction and with no cost.\n              </Text>\n            </Flex>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Flex\n                my={3}\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                {\n                  this.props.protocolsTokensBalances && Object.keys(this.props.protocolsTokensBalances).map( token => (\n                    <Flex\n                      mb={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      key={`token_${token}`}\n                      justifyContent={'space-between'}\n                    >\n                      <AssetField\n                        token={token}\n                        fieldInfo={{\n                          name:'icon',\n                          props:{\n                            mr:2,\n                            height:'2.3em'\n                          }\n                        }}\n                        tokenConfig={this.props.protocolsTokensBalances[token].tokenConfig}\n                      />\n                      <SmartNumber\n                        mr={2}\n                        {...fieldProps}\n                        minPrecision={5}\n                        number={this.props.protocolsTokensBalances[token].balance} \n                      />\n                      <AssetField\n                        token={token}\n                        fieldInfo={{\n                          name:'tokenName',\n                          props:fieldProps\n                        }}\n                        tokenConfig={this.props.protocolsTokensBalances[token].tokenConfig}\n                      />\n                    </Flex>\n                  ) )\n                }\n              </Flex>\n              <Flex\n                mb={3}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <ButtonLoader\n                  buttonText={'MIGRATE'}\n                  handleClick={this.migrate}\n                  isLoading={this.state.sendingForm}\n                  buttonProps={{\n                    width:['100%','50%'],\n                    className:header_styles.gradientButton\n                  }}\n                >\n                </ButtonLoader>\n                {\n                /*\n                <Link mt={2} onClick={this.closeModal} hoverColor={'blue'}>continue without migrate</Link>\n                */\n                }\n                <Checkbox\n                  mt={2}\n                  required={false}\n                  color={'mid-gray'}\n                  checked={this.state.dontShowAgain}\n                  label={`Don't show this popup again`}\n                  onChange={ e => this.toggleDontShowAgain(e.target.checked) }\n                />\n              </Flex>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default MigrateModal;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport header_styles from './Header.module.scss';\nimport AssetField from '../../AssetField/AssetField';\nimport SmartNumber from '../../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\nimport { Text, Modal, Flex/*, Checkbox*/ } from \"rimble-ui\";\n\nclass UpgradeModal extends React.Component {\n\n  state = {\n    dontShowAgain:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    const gaEventsEnabled = this.functionsUtil.getGlobalConfig(['globalConfigs','analytics','google','events','enabled']);\n    // Send Google Analytics event\n    if (gaEventsEnabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'UI',\n        eventAction: 'close_upgrade_modal',\n        eventLabel: 'UpgradeModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  toggleDontShowAgain = (dontShowAgain) => {\n\n    if (dontShowAgain){\n      this.functionsUtil.setLocalStorage('dontShowUpgradeModal','true');\n    } else {\n      this.functionsUtil.removeStoredItem('dontShowUpgradeModal');\n    }\n\n    this.setState({\n      dontShowAgain\n    });\n  }\n\n  migrate = async (token,strategy=null) => {\n\n    if (!strategy){\n      strategy = this.props.selectedStrategy;\n    }\n\n    const gaEventsEnabled = this.functionsUtil.getGlobalConfig(['globalConfigs','analytics','google','events','enabled']);\n    // Send Google Analytics event\n    if (gaEventsEnabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'UpgradeModal',\n        eventAction: 'migrate',\n        eventLabel: `${this.props.selectedStrategy}_${token}`\n      });\n      this.props.goToSection(`${strategy}/${token}`);\n      this.props.closeModal();\n    } else {\n      this.props.goToSection(`${strategy}/${token}`);\n      this.props.closeModal();\n    }\n  }\n\n  convert = async (token) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    const gaEventsEnabled = this.functionsUtil.getGlobalConfig(['globalConfigs','analytics','google','events','enabled']);\n    // Send Google Analytics event\n    if (gaEventsEnabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'UpgradeModal',\n        eventAction: 'migrate',\n        eventLabel: `${this.props.selectedStrategy}_${token}`\n      });\n      this.props.goToSection(`tools/${convertTool.route}/${token}`);\n      this.props.closeModal();\n    } else {\n      this.props.goToSection(`tools/${convertTool.route}/${token}`);\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n\n    if (!this.props.availableStrategies || !this.props.availableTokens){\n      return null;\n    }\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[2,3],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','750px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            icon={`images/migrate.svg`}\n            title={'Upgrade Available'}\n            iconHeight={['35px','40px']}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              mb={0}\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                my={0}\n                fontSize={[2,3]}\n                color={'mid-gray'}\n                textAlign={'center'}\n              >\n                Idle now supports yield farming and governance tokens distribution, migrate now your portfolio with just one click!\n              </Text>\n            </Flex>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Flex\n                mt={[2,3]}\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <Flex\n                  fontSize={[2,3]}\n                  width={[0.5,0.28]}\n                  fontWeight={[4,5]}\n                  color={'copyColor'}\n                >\n                  {\n                    this.props.isMobile ? 'ASSET' : 'ASSET TO MIGRATE'\n                  }\n                </Flex>\n                {\n                  !this.props.isMobile && (\n                    <Flex\n                      width={0.19}\n                      fontWeight={[4,5]}\n                      color={'copyColor'}\n                      justifyContent={'center'}\n                    >\n                      BALANCE\n                    </Flex>\n                  )\n                }\n                {\n                  !this.props.isMobile && (\n                    <Flex\n                      width={0.19}\n                      fontWeight={[4,5]}\n                      color={'copyColor'}\n                      justifyContent={'center'}\n                    >\n                      OLD APY\n                    </Flex>\n                  )\n                }\n                <Flex\n                  fontSize={[2,3]}\n                  fontWeight={[4,5]}\n                  width={[0.25,0.19]}\n                  color={'copyColor'}\n                  justifyContent={'center'}\n                >\n                  {\n                    this.props.isMobile ? 'APY' : 'NEW APY'\n                  }\n                </Flex>\n                <Flex\n                  width={[0.25,0.15]}\n                >\n                  \n                </Flex>\n              </Flex>\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                {\n                  this.props.tokensToMigrate && Object.keys(this.props.tokensToMigrate).map( tokenKey => {\n                    const token = this.props.tokensToMigrate[tokenKey].token;\n                    const strategy = this.props.tokensToMigrate[tokenKey].strategy;\n                    const tokenConfig = this.props.tokensToMigrate[tokenKey].tokenConfig;\n                    const balance = this.props.tokensToMigrate[tokenKey].oldContractBalanceFormatted;\n                    return (\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        key={`token_${tokenKey}`}\n                        justifyContent={'space-between'}\n                      >\n                        <Flex\n                          width={[0.5,0.28]}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <AssetField\n                            fieldInfo={{\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.8em','2.3em']\n                              }\n                            }}\n                            tokenConfig={tokenConfig}\n                            token={tokenConfig.idle.token}\n                          />\n                          <AssetField\n                            fieldInfo={{\n                              name:'tokenName',\n                              props:fieldProps\n                            }}\n                            tokenConfig={tokenConfig}\n                            token={tokenConfig.idle.token}\n                          />\n                        </Flex>\n                        {\n                          !this.props.isMobile && (\n                            <Flex\n                              width={0.19}\n                              alignItems={'center'}\n                              justifyContent={'center'}\n                            >\n                              <SmartNumber\n                                {...fieldProps}\n                                minPrecision={5}\n                                number={balance}\n                                flexProps={{\n                                  justifyContent:'center'\n                                }}\n                              />\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.props.isMobile && (\n                            <Flex\n                              width={0.19}\n                              alignItems={'center'}\n                              justifyContent={'center'}\n                            >\n                              <AssetField\n                                {...this.props}\n                                fieldInfo={{\n                                  name:'oldApy',\n                                  props:fieldProps\n                                }}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                              />\n                            </Flex>\n                          )\n                        }\n                        <Flex\n                          width={[0.25,0.19]}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <AssetField\n                            {...this.props}\n                            fieldInfo={{\n                              name:'apy',\n                              props:fieldProps\n                            }}\n                            token={token}\n                            tokenConfig={tokenConfig}\n                          />\n                        </Flex>\n                        <Flex\n                          width={[0.25,0.15]}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <RoundButton\n                            handleClick={ e => this.migrate(token,strategy) }\n                            buttonProps={{\n                              size:'small',\n                              width:'100%',\n                              className:header_styles.gradientButton\n                            }}\n                          >\n                            MIGRATE\n                          </RoundButton>\n                        </Flex>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                {\n                  this.props.oldIdleTokensToMigrate && Object.keys(this.props.oldIdleTokensToMigrate).map( token => {\n                    const tokenConfig = this.props.oldIdleTokensToMigrate[token].tokenConfig;\n\n                    if (!tokenConfig){\n                      return null;\n                    }\n\n                    const balance = this.props.oldIdleTokensToMigrate[token].balance;\n                    let newTokenConfig = null;\n\n                    if (tokenConfig.availableStrategies && !this.props.availableTokens[tokenConfig.baseToken]){\n                      newTokenConfig = this.props.availableStrategies[tokenConfig.availableStrategies[0]][tokenConfig.baseToken];\n                    } else {\n                      newTokenConfig = this.props.availableTokens[tokenConfig.baseToken];\n                    }\n                    return (\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        key={`token_${token}`}\n                        justifyContent={'space-between'}\n                      >\n                        <Flex\n                          width={0.28}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <AssetField\n                            fieldInfo={{\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:'2.3em'\n                              }\n                            }}\n                            tokenConfig={tokenConfig}\n                            token={token}\n                          />\n                          <AssetField\n                            fieldInfo={{\n                              name:'tokenName',\n                              props:fieldProps\n                            }}\n                            tokenConfig={tokenConfig}\n                            token={token}\n                          />\n                        </Flex>\n                        <Flex\n                          width={0.19}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <SmartNumber\n                            {...fieldProps}\n                            minPrecision={5}\n                            number={balance}\n                            flexProps={{\n                              justifyContent:'center'\n                            }}\n                          />\n                        </Flex>\n                        <Flex\n                          width={0.19}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <AssetField\n                            {...this.props}\n                            fieldInfo={{\n                              name:'oldApy',\n                              props:fieldProps\n                            }}\n                            token={newTokenConfig.token}\n                            tokenConfig={newTokenConfig}\n                          />\n                        </Flex>\n                        <Flex\n                          width={0.19}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <AssetField\n                            {...this.props}\n                            fieldInfo={{\n                              name:'apy',\n                              props:fieldProps\n                            }}\n                            token={newTokenConfig.token}\n                            tokenConfig={newTokenConfig}\n                          />\n                        </Flex>\n                        <Flex\n                          width={0.15}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <RoundButton\n                            handleClick={ e => this.convert(token) }\n                            buttonProps={{\n                              size:'small',\n                              width:'100%',\n                              className:header_styles.gradientButton\n                            }}\n                          >\n                            MIGRATE\n                          </RoundButton>\n                        </Flex>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n              <Flex\n                my={3}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <RoundButton\n                  handleClick={this.closeModal}\n                  buttonProps={{\n                    fontSize:[2,3],\n                    width:['100%','40%'],\n                  }}\n                >\n                  MIGRATE LATER\n                </RoundButton>\n                {\n                  /*\n                  <Checkbox\n                    mt={2}\n                    required={false}\n                    color={'mid-gray'}\n                    checked={this.state.dontShowAgain}\n                    label={`Don't show this popup again`}\n                    onChange={ e => this.toggleDontShowAgain(e.target.checked) }\n                  />\n                  */\n                }\n              </Flex>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UpgradeModal;","import React from \"react\";\nimport {\n  Heading,\n  // Text,\n  Modal,\n  Box,\n  Flex,\n  // Image,\n  EthAddress\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport AssetField from '../../AssetField/AssetField.js';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport ButtonLoader from '../../ButtonLoader/ButtonLoader.js';\nimport styles from '../../CryptoInput/CryptoInput.module.scss';\n\nclass AccountModal extends React.Component {\n\n  state = {\n    logout: false,\n    balances: null\n  }\n\n  loadBalances = async () => {\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized || !this.props.account || this.state.balances !== null){\n      return false;\n    }\n\n    const balances = [];\n    const allTokens = Object.keys(this.props.availableStrategies.best);\n\n    // await this.functionsUtil.asyncForEach(allTokens, async (baseToken) => {\n    allTokens.forEach( baseToken => {\n      const tokens = [];\n      tokens.push(baseToken);\n      Object.keys(this.props.availableStrategies).forEach( strategy => {\n        const strategyToken = this.props.availableStrategies[strategy][baseToken];\n        if (strategyToken){\n          tokens.push(strategyToken.idle.token);\n        }\n      });\n\n      balances.push(tokens);\n      /*\n      const tokenBalances = {};\n\n      tokenBalances[baseToken] = await this.functionsUtil.getTokenBalance(baseToken,this.props.account);\n\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n        const strategyToken = this.props.availableStrategies[strategy][baseToken];\n        if (strategyToken){\n          tokenBalances[strategyToken.idle.token] = await this.functionsUtil.getTokenBalance(strategyToken.idle.token,this.props.account);\n        }\n      });\n\n      balances.push(tokenBalances);\n      */\n    });\n\n    this.setState({\n      balances\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n    this.loadBalances();\n  }\n\n  componentDidUpdate(prevProps) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.acccount !== this.props.account;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && this.props.availableStrategies;\n    if (availableStrategiesChanged || accountChanged || contractsInitialized){\n      this.loadBalances();\n    }\n  }\n\n  setConnector = async (connectorName) => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Connect',\n      eventAction: 'logout'\n    });\n\n    if (typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName);\n    }\n\n    return await this.props.context.setConnector(connectorName);\n  }\n\n  async logout(){\n    this.setState({\n      logout:true\n    });\n\n    this.props.logout();\n    await this.setConnector('Infura');\n    // this.props.closeModal();\n  }\n\n  render(){\n    if (this.props.account){\n      // let renderBalances = null;\n\n      const rows = (Object.keys(this.props.availableStrategies).length+1);\n      const renderBalances = this.state.balances && this.state.balances.map( (tokens,i) => {\n        return (\n          <Flex\n            mt={2}\n            width={1}\n            boxShadow={0}\n            key={'balance_'+i}\n            alignItems={'center'}\n            flexDirection={'row'}\n            >\n              {\n                tokens.map( (token,tokenIndex) => (\n                  <Flex\n                    width={1/rows}\n                    flexDirection={'row'}\n                    key={'balance_token_'+token}\n                    justifyContent={'flex-start'}\n                  >\n                    <AssetField\n                      token={token}\n                      tokenConfig={{\n                        token:token\n                      }}\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mr:[1,2],\n                          ml:[1,4],\n                          width:['1.4em','2em'],\n                          height:['1.4em','2em']\n                        }\n                      }}\n                    />\n                    <AssetField\n                      {...this.props}\n                      token={token}\n                      tokenConfig={{\n                        token:token\n                      }}\n                      fieldInfo={{\n                        name:'tokenBalance',\n                        props:{\n                          fontSize:[0,2],\n                          fontWeight:500,\n                          color:'cellText'\n                        }\n                      }}\n                    />\n                  </Flex>\n                ) )\n              }\n          </Flex>\n        );\n      });\n\n      return (\n        <Modal isOpen={this.props.isOpen}>\n          <ModalCard closeFunc={this.props.closeModal}>\n            <ModalCard.Header title={'Account overview'}></ModalCard.Header>\n            <ModalCard.Body>\n              <Flex\n                width={[\"auto\", \"40em\"]}\n                flexDirection={'column'}\n                alignItems={'center'}\n                justifyContent={'center'}>\n                <Flex\n                  flexDirection={'column'}\n                  alignItems={'center'}\n                  justifyContent={'center'}\n                  my={[2,3]}>\n                  <Box style={{'wordBreak': 'break-word'}}>\n                    <EthAddress address={this.props.account} />\n                  </Box>\n                </Flex>\n                <Flex\n                  mb={3}\n                  width={'100%'}\n                  alignItems={'center'}\n                  maxWidth={['100%','30em']}\n                  flexDirection={'column'}\n                >\n                  <Heading.h4\n                    textAlign={'center'}\n                  >\n                    Balances\n                  </Heading.h4>\n                  { renderBalances }\n                </Flex>\n              </Flex>\n            </ModalCard.Body>\n\n            <ModalCard.Footer>\n              {(this.props.context.active || (this.props.context.error && this.props.context.connectorName)) && (\n                <ButtonLoader\n                  buttonProps={{className:styles.gradientButton,borderRadius:'2rem',mt:[4,8],minWidth:['95px','145px'],size:['auto','medium']}}\n                  handleClick={ async () => { await this.logout() } }\n                  buttonText={'Logout wallet'}\n                  isLoading={this.state.logout}\n                >\n                </ButtonLoader>\n              )}\n            </ModalCard.Footer>\n          </ModalCard>\n        </Modal>\n      );\n    }\n    return null;\n  }\n}\n\nexport default AccountModal;\n","import React, { Component } from 'react';\nimport styles from './MenuAccount.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Icon, Image, Link, Text } from \"rimble-ui\";\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport AccountModal from \"../utilities/components/AccountModal\";\n\nclass MenuAccount extends Component {\n\n  state = {\n    isModalOpen: null,\n    idleTokenBalance: null\n  };\n\n  // Utils\n  idleGovToken = null;\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadIdleTokenBalance();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadIdleTokenBalance();\n    }\n  }\n\n  async loadIdleTokenBalance(){\n    const idleGovTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n    if (idleGovTokenEnabled){\n      let idleTokenBalance = this.functionsUtil.BNify(0);\n      const [\n        balance,\n        unclaimed\n      ] = await Promise.all([\n        this.idleGovToken.getBalance(this.props.account),\n        this.idleGovToken.getUnclaimedTokens(this.props.account)\n      ]);\n\n      if (balance && unclaimed){\n        idleTokenBalance = this.functionsUtil.BNify(balance).plus(unclaimed);\n      }\n\n      return this.setState({\n        idleTokenBalance\n      });\n    }\n    return null;\n  }\n\n  toggleModal = (modalName) => {\n    this.setState(state => ({...state, isModalOpen: (state.isModalOpen===modalName ? null : modalName) }));\n  }\n\n  render() {\n    const walletProvider = this.functionsUtil.getStoredItem('walletProvider',false,null);\n    const connectorInfo = walletProvider ? this.functionsUtil.getGlobalConfig(['connectors',walletProvider.toLowerCase()]) : null;\n    const walletIcon = connectorInfo && connectorInfo.icon ? connectorInfo.icon : walletProvider ? `${walletProvider.toLowerCase()}.svg` : null;\n\n    return (\n      this.props.account ? (\n        <Flex\n          width={1}\n          flexDirection={['column','row']}\n          alignItems={['flex-start','center']}\n        >\n          <Flex\n            p={0}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n            onClick={e => this.toggleModal('account')}\n          >\n            {\n              connectorInfo ? (\n                <Image\n                  width={'2em'}\n                  height={'2em'}\n                  mr={[2,'0.5rem']}\n                  display={'inline-flex'}\n                  src={`images/${walletIcon}`}\n                  alt={walletProvider.toLowerCase()}\n                />\n              ) : (\n                <Icon\n                  size={'2em'}\n                  mr={[0,'0.5rem']}\n                  color={'copyColor'}\n                  name={'AccountCircle'}\n                />\n              )\n            }\n            <ShortHash\n              fontSize={2}\n              fontWeight={3}\n              color={'copyColor'}\n              hash={this.props.account}\n            />\n          </Flex>\n          \n          {\n            this.state.idleTokenBalance && \n              <Flex\n                ml={[0,3]}\n                width={'auto'}\n              >\n                <Link\n                  style={{\n                    textDecoration:'none'\n                  }}\n                  className={styles.balanceButton}\n                  onClick={ e => this.props.setGovModal(true) }\n                >\n                  <Flex\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mr={1}\n                      width={'1.7em'}\n                      height={'1.7em'}\n                      display={'inline-flex'}\n                      src={`images/tokens/IDLE.png`}\n                    />\n                    <Text\n                      fontSize={2}\n                      color={'white'}\n                      fontWeight={500}\n                    >\n                      {this.state.idleTokenBalance.toFixed(2)} IDLE\n                    </Text>\n                  </Flex>\n                </Link>\n              </Flex>\n          }\n          <AccountModal\n            {...this.props}\n            isOpen={this.state.isModalOpen==='account'}\n            closeModal={e => this.toggleModal('account') }\n          />\n        </Flex>\n      ) : (\n        <Flex\n          width={1}\n          justifyContent={'flex-start'}\n        >\n          <CardIconButton\n            icon={'Power'}\n            {...this.props}\n            text={'Connect'}\n            handleClick={this.props.connectAndValidateAccount}\n          />\n        </Flex>\n      )\n    );\n  }\n}\n\nexport default MenuAccount;\n","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\nimport { Text, Modal, Flex, Image, Link, Icon } from \"rimble-ui\";\n\nclass GovModal extends React.Component {\n\n  state = {\n    total:null,\n    balance:null,\n    txStatus:null,\n    unclaimed:null,\n    processing: {\n      txHash:null,\n      loading:false\n    }\n  }\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  loadTokenInfo = async () => {\n    const [\n      balance,\n      unclaimed\n    ] = await Promise.all([\n      this.idleGovToken.getBalance(this.props.account),\n      this.idleGovToken.getUnclaimedTokens(this.props.account)\n    ]);\n\n    let total = this.functionsUtil.BNify(0);\n    if (balance && unclaimed){\n      total = this.functionsUtil.BNify(balance).plus(unclaimed);\n    }\n\n    this.setState({\n      total,\n      balance,\n      unclaimed\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n    this.loadTokenInfo();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    // const txStatusChanged = prevState.txStatus !== this.state.txStatus;\n    // if (txStatusChanged && this.state.txStatus === 'success'){\n    //   this.loadTokenInfo();\n    // }\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      txStatus:null,\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  claim = async () => {\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'claim',\n        eventCategory: 'Governance',\n        eventLabel: tx.status ? tx.status : error\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const newState = {\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx.status ? tx.status : 'error',\n      };\n\n      if (tx.status === 'success'){\n        newState.balance = this.state.unclaimed;\n        newState.unclaimed = this.BNify(0);\n\n        if (typeof this.props.claimCallback === 'function'){\n          this.props.claimCallback();\n        }\n      }\n\n      this.setState(newState);\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.idleGovToken.claimRewards(callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  closeModal = async (action) => {\n    this.props.closeModal();\n  }\n\n  render() {\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          bgLayer={true}\n          mainColor={'white'}\n          minWidth={['auto','420px']}\n          closeFunc={this.props.closeModal}\n          background={'radial-gradient(76.02% 75.41% at 1.84% 0%, rgb(162, 196, 246) 0%, rgb(10, 79, 176) 100%)'}\n        >\n          <ModalCard.Header\n            pt={3}\n            titleProps={{\n              color:'white'\n            }}\n            title={'Your IDLE balance'}\n            borderBottom={'1px solid rgba(255,255,255,0.2)'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body\n            px={3}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Image\n                mt={2}\n                width={'3em'}\n                height={'3em'}\n                src={'images/tokens/IDLE.png'}\n              />\n              <Text\n                mt={2}\n                fontSize={7}\n                color={'white'}\n                fontWeight={500}\n              >\n                {this.state.total ? this.state.total.toFixed(2) : '-'}\n              </Text>\n              <Text\n                mb={2}\n                fontSize={3}\n                color={'white'}\n                fontWeight={400}\n              >\n                {\n                  this.state.unclaimed && this.state.unclaimed.gt(0) ? 'You can now claim your IDLE tokens!' : 'You don\\'t have any IDLE to claim'\n                }\n              </Text>\n              <Flex\n                pb={2}\n                mb={3}\n                width={1}\n                flexDirection={'column'}\n                borderBottom={'1px solid rgba(255,255,255,0.2)'}\n              >\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    Balance:\n                  </Text>\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    {this.state.balance ? this.state.balance.toFixed(4) : '-'}\n                  </Text>\n                </Flex>\n                <Flex\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    Unclaimed:\n                  </Text>\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    {this.state.unclaimed ? this.state.unclaimed.toFixed(4) : '-'}\n                  </Text>\n                </Flex>\n                <Link\n                  href={`/#${this.functionsUtil.getGlobalConfig(['governance','baseRoute'])}`}\n                >\n                  <Flex\n                    zIndex={10}\n                    position={'relative'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontSize={2}\n                      color={'white'}\n                      fontWeight={400}\n                    >\n                      Go to governance\n                    </Text>\n                    <Icon\n                      ml={1}\n                      size={'1em'}\n                      color={'white'}\n                      name={\"OpenInNew\"}\n                    />\n                  </Flex>\n                </Link>\n              </Flex>\n              {\n                this.state.unclaimed && this.state.unclaimed.gt(0) && \n                  <Flex\n                    mb={3}\n                    width={1}\n                    zIndex={10}\n                    position={'relative'}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      // Sending transaction\n                      this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          textColor={'white'}\n                          web3={this.props.web3}\n                          cancelTextColor={'moon-gray'}\n                          cancelTextHoverColor={'white'}\n                          waitText={`Claim estimated in`}\n                          hash={this.state.processing.txHash}\n                          endMessage={`Finalizing Claim request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            color:'blue',\n                            width:[1,'45%'],\n                            mainColor:'white',\n                            contrastColor:'blue',\n                            disabled:!this.state.unclaimed || this.state.unclaimed.lte(0)\n                          }}\n                          handleClick={this.claim.bind(this)}\n                        >\n                          Claim\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n              }\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default GovModal;","import Batcher from 'web3-batched-send';\nimport FunctionsUtil from './FunctionsUtil';\nimport VesterABI from '../contracts/Vester.json';\n\n// const env = process.env;\n\nclass GovernanceUtil {\n  // Attributes\n  props = {};\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  getTotalSupply = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getTotalSupply`;\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n    let totalSupply = await this.functionsUtil.genericContractCall(contractName,'totalSupply');\n    if (totalSupply){\n      totalSupply = this.functionsUtil.fixTokenDecimals(totalSupply,18);\n    }\n\n    return this.functionsUtil.setCachedData(cachedDataKey,totalSupply);\n  }\n\n  getTokensBalance = async (account=null) => {\n\n    account = account ? account : this.props.account;\n    if (account){\n\n      // Check for cached data\n      const cachedDataKey = `getTokensBalance_${account}`;\n      const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n      if (cachedData !== null){\n        return cachedData;\n      }\n\n      const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n      const balance = await this.functionsUtil.getContractBalance(contractName, account);\n      if (balance){\n        return this.functionsUtil.setCachedData(cachedDataKey,this.functionsUtil.BNify(balance));\n      }\n    }\n    return null;\n  }\n\n  getVestingContract = async (account=null) => {\n    account = account ? account : this.props.account;\n    const vestingContract = await this.functionsUtil.genericContractCall('VesterFactory','vestingContracts',[account]);\n\n    if (parseInt(vestingContract) === 0){\n      return null;\n    }\n    // Init vesting contract\n    await this.props.initContract('VestingContract',vestingContract,VesterABI);\n    return vestingContract;\n  }\n\n  delegateVesting = async (account=null,delegate=null,callback=null,callbackReceipt=null) => {\n    account = account ? account : this.props.account;\n    const founderVesting = await this.getVestingContract(account);\n    if (founderVesting){\n      // await this.functionsUtil.contractMethodSendWrapper('IDLE','delegate',[delegate]);\n      return await this.functionsUtil.contractMethodSendWrapper('VestingContract','setDelegate',[delegate],callback,callbackReceipt);\n    }\n    return null;\n  }\n\n  getVestingAmount = async (account=null) => {\n    account = account ? account : this.props.account;\n    const founderVesting = await this.getVestingContract(account);\n    if (founderVesting){\n      let vestingAmount = await this.functionsUtil.genericContractCall('VestingContract','vestingAmount');\n      if (vestingAmount){\n        return this.functionsUtil.BNify(vestingAmount);\n      }\n    }\n    return null;\n  }\n\n  getCurrentDelegate = async (account=null) => {\n\n    account = account ? account : this.props.account;\n    if (account){\n\n      // Check for cached data\n      const cachedDataKey = `getCurrentDelegate_${account}`;\n      const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n      if (cachedData !== null){\n        return cachedData;\n      }\n\n      const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n      const delegate = await this.functionsUtil.genericContractCall(contractName, 'delegates', [account]);\n\n      return this.functionsUtil.setCachedData(cachedDataKey,delegate);\n    }\n\n    return null;\n  }\n\n  getCurrentVotes = async (account=null) => {\n\n    account = account ? account : this.props.account;\n    if (account){\n      // Check for cached data\n      const cachedDataKey = `getCurrentVotes_${account}`;\n      const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n      if (cachedData !== null){\n        return cachedData;\n      }\n\n      const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n      const votes = await this.functionsUtil.genericContractCall(contractName, 'getCurrentVotes', [account]);\n      if (votes){\n        return this.functionsUtil.setCachedData(cachedDataKey,this.functionsUtil.BNify(votes));\n      }\n    }\n\n    return null;\n  }\n\n  queueProposal = async (proposalId,callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    await this.functionsUtil.contractMethodSendWrapper(contractName,'queue',[this.functionsUtil.BNify(proposalId)],callback,callbackReceipt);\n  }\n\n  executeProposal = async (proposalId,callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    await this.functionsUtil.contractMethodSendWrapper(contractName,'execute',[this.functionsUtil.BNify(proposalId)],callback,callbackReceipt);\n  }\n\n  proposeAndVoteFor = async (targets, values, signatures, calldatas, description) => {\n    const batcher = new Batcher(this.props.web3,'0x741A4dCaD4f72B83bE9103a383911d78362611cf');\n\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    const contract = this.functionsUtil.getContractByName(contractName);\n\n    const txs = [\n      {\n        to:contract._address,\n        method:contract.methods.propose,\n        args:[targets, values, signatures, calldatas, description]\n      },\n      {\n        to:contract._address,\n        method:contract.methods.castVote,\n        args:[this.functionsUtil.BNify(3), true],\n      }\n    ];\n\n    batcher(txs);\n  }\n\n  propose = async (targets, values, signatures, calldatas, description, callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    return await this.props.contractMethodSendWrapper(contractName, 'propose', [targets, values, signatures, calldatas, description], null, callback, callbackReceipt);\n  }\n\n  castVote = async (proposalId,support,callback=null,callbackReceipt=null) => {\n    proposalId = this.functionsUtil.BNify(proposalId);\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    return await this.props.contractMethodSendWrapper(contractName, 'castVote', [proposalId, support], null, callback, callbackReceipt);\n  }\n\n  setDelegate = async (delegate,callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n    return await this.props.contractMethodSendWrapper(contractName, 'delegate', [delegate], null, callback, callbackReceipt);\n  }\n\n  getDelegates = async (limit=null) => {\n\n    // Check for cached data\n    const cachedDataKey = `getDelegates`;\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    const lastBlockNumber = await this.props.web3.eth.getBlockNumber();\n\n    const delegationsCalls = [];\n    const blocksPerCall = 100000;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['governance','startBlock']);\n    const delegatesContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n\n    for (var blockNumber = fromBlock; blockNumber < lastBlockNumber; blockNumber+=blocksPerCall) {\n      const toBlock = Math.min(blockNumber+blocksPerCall,lastBlockNumber);\n      delegationsCalls.push(this.functionsUtil.getContractPastEvents(delegatesContractName,'DelegateVotesChanged', {fromBlock: blockNumber, toBlock}))\n    }\n\n    const all_delegations = await Promise.all(delegationsCalls);\n\n    const delegations = all_delegations.reduce( (delegations,d) => {\n      delegations = delegations.concat(d);\n      return delegations;\n    },[]);\n\n    const delegateAccounts = {};\n\n    delegations.forEach(e => {\n      const { delegate, newBalance } = e.returnValues;\n      delegateAccounts[delegate] = newBalance;\n    });\n\n    let delegates = [];\n    Object.keys(delegateAccounts).forEach((account) => {\n      const votes = +delegateAccounts[account];\n      if (votes === 0) return;\n      delegates.push({\n        votes: votes/1e18,\n        delegate: account\n      });\n    });\n\n    delegates.sort((a, b) => {\n      return a.votes < b.votes ? 1 : -1;\n    });\n\n    const all_votes = await this.getVotes();\n\n    delegates.forEach( (d,index) => {\n      d.rank = index+1;\n      d.votes = d.votes.toFixed(6);\n      d.vote_weight = (100 * (d.votes / 10000000)).toFixed(4) + '%';\n      d.proposals = all_votes.filter( v => (v.voter.toLowerCase() === d.delegate.toLowerCase()) ).length;\n    });\n\n    this.functionsUtil.setCachedData(cachedDataKey,delegates)\n\n    if (limit !== null){\n      delegates = delegates.splice(0,limit);\n    }\n\n    return delegates;\n  }\n\n  getProposalParams = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getProposalParams`;\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    const govContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    let [\n      proposalThreshold,\n      proposalMaxOperations\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(govContractName,'proposalThreshold'),\n      this.functionsUtil.genericContractCall(govContractName,'proposalMaxOperations')\n    ]);\n\n    if (proposalThreshold){\n      proposalThreshold = this.functionsUtil.BNify(proposalThreshold);\n    }\n\n    const params = {\n      proposalThreshold,\n      proposalMaxOperations\n    };\n\n    return this.functionsUtil.setCachedData(cachedDataKey,params);\n  }\n\n  getVotes = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getVotes`;\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    const governanceContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n\n    let votes = await this.functionsUtil.getContractPastEvents(governanceContractName,'VoteCast', {fromBlock: 0, toBlock: 'latest'});\n\n    if (votes){\n      votes = votes.map( e => {\n        const {\n            voter,\n            votes,\n            support,\n            proposalId\n        } = e.returnValues;\n        return {\n          votes,\n          voter,\n          support,\n          proposalId\n        }\n      });\n    }\n\n    return this.functionsUtil.setCachedData(cachedDataKey,votes);\n  }\n\n  getProposals = async (voted_by=null) => {\n\n    // Check for cached data\n    const cachedDataKey = 'getProposals';\n    let cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      if (voted_by !== null){\n        cachedData = cachedData.filter( p => (p.votes.find( v => (v.voter.toLowerCase() === voted_by.toLowerCase()) )) );\n      }\n      return cachedData;\n    }\n\n    const enumerateProposalState = (state) => {\n      const proposalStates = ['Pending', 'Active', 'Canceled', 'Defeated', 'Succeeded', 'Queued', 'Expired', 'Executed'];\n      return proposalStates[state];\n    };\n\n    const governanceContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    const proposalCount = await this.functionsUtil.genericContractCall(governanceContractName,'proposalCount');\n\n    if (!proposalCount){\n      return [];\n    }\n\n    const proposalGets = [];\n    const proposalStateGets = [];\n    for (const i of Array.from(Array(parseInt(proposalCount)),(n,i) => i+1)) {\n      proposalGets.push(this.functionsUtil.genericContractCall(governanceContractName,'proposals',[i]));\n      proposalStateGets.push(this.functionsUtil.genericContractCall(governanceContractName,'state',[i]));\n    }\n\n    const [\n      votes,\n      proposals,\n      proposalStates,\n      proposalQueuedEvents,\n      proposalCreatedEvents,\n      proposalCanceledEvents,\n      proposalExecutedEvents,\n    ] = await Promise.all([\n      this.getVotes(),\n      Promise.all(proposalGets),\n      Promise.all(proposalStateGets),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalQueued', {fromBlock: 0, toBlock: 'latest'}),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalCreated', {fromBlock: 0, toBlock: 'latest'}),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalCanceled', {fromBlock: 0, toBlock: 'latest'}),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalExecuted', {fromBlock: 0, toBlock: 'latest'}),\n    ]);\n\n    /*\n    console.log(\n      votes,\n      proposals,\n      proposalStates,\n      proposalQueuedEvents,\n      proposalCreatedEvents,\n      proposalCanceledEvents,\n      proposalExecutedEvents\n    );\n    */\n\n    proposals.reverse();\n    proposalStates.reverse();\n    proposalQueuedEvents.reverse();\n    proposalCreatedEvents.reverse();\n    proposalCanceledEvents.reverse();\n    proposalExecutedEvents.reverse();\n\n    await this.functionsUtil.asyncForEach(proposals, async (p,i) => {\n      const proposalId = parseInt(p.id);\n\n      const createdEvent = proposalCreatedEvents[i];\n      const canceledEvent = proposalCanceledEvents.find( e => (parseInt(e.returnValues.id) === proposalId ) );\n      const executedEvent = proposalExecutedEvents.find( e => (parseInt(e.returnValues.id) === proposalId ) );\n      const queuedEvent = proposalQueuedEvents.find( e => (parseInt(e.returnValues.id) === proposalId ) );\n\n      // Init states array\n      p.states = [];\n\n      // Create created state\n      const createdBlockInfo = await this.props.web3.eth.getBlock(createdEvent.blockNumber);\n      const createdState = {\n        state: \"Pending\",\n        end_time: createdBlockInfo.timestamp,\n        start_time: createdBlockInfo.timestamp,\n        trx_hash: createdEvent.transactionHash\n      };\n      p.states.push(createdState);\n\n      // Push active state\n      const activeState = {\n        state: \"Active\",\n        end_time: null,\n        start_time: createdState.start_time,\n        trx_hash: null\n      };\n      p.states.push(activeState);\n\n      // Push canceled state\n      if (canceledEvent){\n        const canceledBlockInfo = await this.props.web3.eth.getBlock(canceledEvent.blockNumber);\n        const canceledState = {\n          state: \"Canceled\",\n          end_time: null,\n          start_time: canceledBlockInfo.timestamp,\n          trx_hash: canceledEvent.transactionHash\n        }\n        // Update previous state end_time\n        p.states[p.states.length-1].end_time = canceledBlockInfo.timestamp;\n        p.states.push(canceledState);\n      } else {\n        // Push queued state\n        if (queuedEvent){\n          const queuedBlockInfo = await this.props.web3.eth.getBlock(queuedEvent.blockNumber);\n          const succeededState = {\n            state: \"Succeeded\",\n            end_time: null,\n            trx_hash: null,\n            start_time: queuedBlockInfo.timestamp,\n          };\n\n          const queuedState = {\n            state: \"Queued\",\n            end_time: null,\n            start_time: queuedBlockInfo.timestamp,\n            trx_hash: queuedEvent.transactionHash\n          };\n\n          // Update previous state end_time\n          p.states[p.states.length-1].end_time = queuedBlockInfo.timestamp;\n          // Push Succeeded state\n          p.states.push(succeededState);\n          // Push queued state\n          p.states.push(queuedState);\n        }\n\n        // Push executed state\n        if (executedEvent){\n          const executedBlockInfo = await this.props.web3.eth.getBlock(executedEvent.blockNumber);\n          const executedState = {\n            state: \"Executed\",\n            end_time: null,\n            start_time: executedBlockInfo.timestamp,\n            trx_hash: executedEvent.transactionHash\n          }\n          // Update previous state end_time\n          p.states[p.states.length-1].end_time = executedBlockInfo.timestamp;\n          p.states.push(executedState);\n        }\n      }\n\n      // Check for defeated or expired\n      p.state = enumerateProposalState(proposalStates[i]);\n      const foundState = p.states.find( s => (s.state === p.state) );\n      if (!foundState){\n        const endBlockInfo = await this.props.web3.eth.getBlock(p.endBlock);\n        const endState = {\n          state: p.state,\n          end_time: null,\n          trx_hash: null,\n          start_time: endBlockInfo.timestamp,\n        }\n        // Update previous state end_time\n        p.states[p.states.length-1].end_time = endBlockInfo.timestamp;\n        p.states.push(endState);\n      }\n\n      p.votes = votes.filter( v => (parseInt(v.proposalId)===proposalId) );\n\n      const { description, signatures, targets, values, calldatas } = createdEvent.returnValues;\n      p.timestamp = createdBlockInfo ? createdBlockInfo.timestamp : null;\n\n      \n      // Idle\n      p.title = description.split(/# |\\n|↵/g)[0].replace(/^#/,'') || 'Untitled';\n      p.description = description.split(/\\n|↵/g);\n      p.description.shift();\n      p.description = p.description.join(\"\\n\");\n\n      // Compound\n      // p.title = description.split(/# |\\n/g)[1] || 'Untitled';\n      // p.description = description.split(/# |\\n/g)[2] || 'No description.';\n\n      // Save proposal\n      proposals[i] = {\n        eta:p.eta,\n        actions:{\n          values,\n          targets,\n          calldatas,\n          signatures\n        },\n        id:proposalId,\n        title:p.title,\n        state:p.state,\n        votes:p.votes,\n        states:p.states,\n        executed:p.executed,\n        endBlock:p.endBlock,\n        canceled:p.canceled,\n        forVotes:p.forVotes,\n        proposer:p.proposer,\n        timestamp:p.timestamp,\n        startBlock:p.startBlock,\n        description:p.description,\n        againstVotes:p.againstVotes\n      };\n    });\n\n    this.functionsUtil.setCachedData(cachedDataKey,proposals)\n    \n    if (voted_by === null) {\n      return proposals;\n    } else {\n      return proposals.filter( p => (p.votes.find( v => (v.voter.toLowerCase() === voted_by.toLowerCase()) )) );\n    }\n  }\n}\n\nexport default GovernanceUtil;","import React, { Component } from 'react';\nimport { Flex, Text, Button, Icon } from \"rimble-ui\";\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass DelegateVesting extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    priorVotes:null,\n    vestingAmount:null,\n    currentDelegate:null,\n    idleTokenDelegated:false,\n    vestingContractDelegated:false\n  };\n\n  // Utils\n  idleGovToken = null;\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async loadData(){\n    const idleGovTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n    if (idleGovTokenEnabled && this.props.account){\n      const [\n        priorVotes,\n        currentDelegate,\n        vestingContract\n      ] = await Promise.all([\n        this.idleGovToken.getPriorVotes(this.props.account),\n        this.governanceUtil.getCurrentDelegate(this.props.account),\n        this.governanceUtil.getVestingContract(this.props.account)\n      ]);\n\n      let vestingAmount = null;\n      if (vestingContract){\n        vestingAmount = await this.governanceUtil.getVestingAmount(this.props.account);\n      }\n\n      const idleTokenDelegated = currentDelegate && currentDelegate.toLowerCase() === this.props.account.toLowerCase();\n      const vestingContractDelegated = priorVotes && vestingAmount && priorVotes.eq(vestingAmount);\n\n      return this.setState({\n        priorVotes,\n        vestingAmount,\n        currentDelegate,\n        idleTokenDelegated,\n        vestingContractDelegated\n      });\n    }\n    return null;\n  }\n\n  async delegateTokens(){\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Governance',\n        eventAction: 'delegateTokens',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx.status === 'success';\n      if (txSucceeded){\n        this.loadData();\n      }\n\n      this.setState({\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        vestingContractDelegated:txSucceeded ? true : false\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.governanceUtil.setDelegate(this.props.account,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  async delegateVesting(){\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Governance',\n        eventAction: 'delegateVesting',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx.status === 'success';\n      if (txSucceeded){\n        this.loadData();\n      }\n\n      this.setState({\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        idleTokenDelegated:txSucceeded ? true : false\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.governanceUtil.delegateVesting(this.props.account,this.props.account,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadData();\n    }\n  }\n\n  render() {\n    return this.state.vestingAmount && (!this.state.idleTokenDelegated || !this.state.vestingContractDelegated) ? (\n      <Flex\n        p={2}\n        mt={3}\n        width={1}\n        borderRadius={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'#f3f6ff'}\n        boxShadow={'0px 0px 0px 1px rgba(0,54,255,0.3)'}\n      >\n        <Text\n          mb={1}\n          fontSize={3}\n          fontWeight={500}\n          color={'#3f4e9a'}\n          textAlign={'center'}\n        >\n          You have {this.state.vestingAmount.div(1e18).toFixed(5)} {this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])} in the Vesting Contract!\n        </Text>\n\n        <Text\n          fontWeight={500}\n          color={'#3f4e9a'}\n          fontSize={'15px'}\n          textAlign={'center'}\n        >\n          Follow the next steps to delegate your tokens:\n        </Text>\n\n        <Flex\n          mt={1}\n          mb={2}\n          alignItems={'center'}\n          flexDirection={'column'}\n        > \n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Icon\n              size={'1.5em'}\n              name={ this.state.idleTokenDelegated ? 'CheckBox' : 'LooksOne'}\n              color={ this.state.idleTokenDelegated ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n            />\n            <Text\n              ml={1}\n              fontWeight={500}\n              fontSize={'15px'}\n              color={'#3f4e9a'}\n              textAlign={'left'}\n            >\n              Delegate Tokens\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Icon\n              size={'1.5em'}\n              name={ this.state.vestingContractDelegated ? 'CheckBox' : 'LooksTwo'}\n              color={ this.state.vestingContractDelegated ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n            />\n            <Text\n              ml={1}\n              fontWeight={500}\n              fontSize={'15px'}\n              color={'#3f4e9a'}\n              textAlign={'left'}\n            >\n              Delegate Vesting\n            </Text>\n          </Flex>\n        </Flex>\n        {\n          this.state.processing && this.state.processing.loading ? (\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <TxProgressBar\n                web3={this.props.web3}\n                waitText={`Vote estimated in`}\n                hash={this.state.processing.txHash}\n                endMessage={`Finalizing vote request...`}\n                cancelTransaction={this.cancelTransaction.bind(this)}\n              />\n            </Flex>\n          ) : !this.state.idleTokenDelegated ? (\n            <Button\n              size={'small'}\n              onClick={this.delegateTokens.bind(this)}\n            >\n              DELEGATE TOKENS\n            </Button>\n          ) : (!this.state.vestingContractDelegated && this.state.idleTokenDelegated) && (\n            <Button\n              size={'small'}\n              onClick={this.delegateVesting.bind(this)}\n            >\n              DELEGATE VESTING\n            </Button>\n          )\n        }\n      </Flex>\n    ) : null;\n  }\n}\n\nexport default DelegateVesting;\n","import theme from '../theme';\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport MenuAccount from '../MenuAccount/MenuAccount';\nimport RoundButton from '../RoundButton/RoundButton';\nimport GovModal from \"../utilities/components/GovModal\";\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport { Box, Flex, Text, Icon, Button } from \"rimble-ui\";\nimport DelegateVesting from '../DelegateVesting/DelegateVesting';\n\nclass DashboardHeader extends Component {\n\n  state = {\n    unclaimed:null,\n    vestingAmount:null,\n    govModalOpened:false\n  }\n\n  // Utils\n  idleGovToken = null;\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    const idleGovTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n    if (idleGovTokenEnabled && this.props.account){\n      const unclaimed = await this.idleGovToken.getUnclaimedTokens(this.props.account);\n      return this.setState({\n        unclaimed\n      });\n    }\n    return null;\n  }\n\n  setConnector = async (connectorName) => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventAction: 'logout',\n      eventCategory: 'Connect'\n    });\n\n    if (typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName);\n    }\n\n    return await this.props.context.setConnector(connectorName);\n  }\n\n  async exit(){\n    this.props.goToSection('/',false);\n  }\n\n  setGovModal(govModalOpened){\n    this.setState({\n      govModalOpened\n    });\n  }\n\n  render() {\n    const isDashboard = this.props.isDashboard;\n    const isGovernance = this.props.isGovernance;\n    const governanceRoute = this.functionsUtil.getGlobalConfig(['governance','baseRoute']);\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const dashboardRoute = this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])+'/'+Object.keys(this.props.availableStrategies)[0];\n    return (\n      <Box\n        mb={3}\n      >\n        <Flex\n          pb={2}\n          width={1}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n          alignItems={['flex-end','center']}\n          borderBottom={`1px solid ${theme.colors.divider}`}\n        >\n          <MenuAccount\n            {...this.props}\n            setGovModal={this.setGovModal.bind(this)}\n          />\n          <Flex\n            mr={2}\n            flexDirection={['column','row']}\n            alignItems={['flex-end','center']}\n          >\n            {\n              governanceEnabled && isDashboard ? (\n                <RoundButton\n                  buttonProps={{\n                    mainColor:'redeem',\n                    size:this.props.isMobile ? 'small' : 'medium'\n                  }}\n                  handleClick={ (e) => { this.props.goToSection(governanceRoute,false) } }\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      mr={[1,2]}\n                      size={'1.6em'}\n                      color={'white'}\n                      name={'ExitToApp'}\n                    />\n                    <Text\n                      fontWeight={3}\n                      color={'white'}\n                      fontSize={[2,3]}\n                    >\n                      Governance\n                    </Text>\n                  </Flex>\n                </RoundButton>\n              ) : isGovernance && (\n                <RoundButton\n                  buttonProps={{\n                    mainColor:'redeem',\n                    size:this.props.isMobile ? 'small' : 'medium'\n                  }}\n                  handleClick={ (e) => { this.props.goToSection(dashboardRoute,false) } }\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      mr={[1,2]}\n                      size={'1.6em'}\n                      color={'white'}\n                      name={'ExitToApp'}\n                    />\n                    <Text\n                      fontWeight={3}\n                      color={'white'}\n                      fontSize={[2,3]}\n                    >\n                      Dashboard\n                    </Text>\n                  </Flex>\n                </RoundButton>\n              )\n            }\n            {\n              /*\n              <Link\n                display={'flex'}\n                onClick={ (e) => { this.exit() } }\n                style={{\n                  alignItems:'center',\n                  justifyContent:['flex-end','space-between']\n                }}\n              >\n                <Icon\n                  mr={2}\n                  size={'1.6em'}\n                  name={'ExitToApp'}\n                  color={'copyColor'}\n                />\n                <Text\n                  fontSize={2}\n                  fontWeight={3}\n                  color={'copyColor'}\n                >\n                  Exit\n                </Text>\n              </Link>\n              */\n            }\n          </Flex>\n        </Flex>\n        {\n          this.state.unclaimed && this.state.unclaimed.gt(0) &&\n            <Flex\n              p={2}\n              mt={3}\n              width={1}\n              borderRadius={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n              backgroundColor={'#f3f6ff'}\n              flexDirection={['column','row']}\n              boxShadow={'0px 0px 0px 1px rgba(0,54,255,0.3)'}\n            >\n              <Text\n                fontWeight={500}\n                color={'#3f4e9a'}\n                fontSize={'15px'}\n                textAlign={'center'}\n              >\n                IDLE Governance Token is now available, \n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n                >\n                  discover more\n                </ExtLink>! You have {this.state.unclaimed.toFixed(4)} IDLE tokens to claim.\n              </Text>\n              <Button\n                ml={[0,2]}\n                mt={[2,0]}\n                size={'small'}\n                onClick={ e => this.setGovModal(true) }\n              >\n                CLAIM NOW\n              </Button>\n            </Flex>\n        }\n        <DelegateVesting\n          {...this.props}\n        />\n        <GovModal\n          {...this.props}\n          isOpen={this.state.govModalOpened}\n          claimCallback={this.loadData.bind(this)}\n          closeModal={e => this.setGovModal(false) }\n        />\n      </Box>\n    );\n  }\n}\n\nexport default DashboardHeader;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Card, Icon, Text } from 'rimble-ui';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardMenu from '../DashboardMenu/DashboardMenu';\n\n// Import page components\nimport Stats from '../Stats/Stats';\nimport Utils from '../Utils/Utils';\nimport AssetPage from '../AssetPage/AssetPage';\nimport RoundButton from '../RoundButton/RoundButton';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CurveStrategy from '../CurveStrategy/CurveStrategy';\nimport WelcomeModal from \"../utilities/components/WelcomeModal\";\nimport TooltipModal from \"../utilities/components/TooltipModal\";\nimport MigrateModal from \"../utilities/components/MigrateModal\";\nimport UpgradeModal from \"../utilities/components/UpgradeModal\";\nimport DashboardHeader from '../DashboardHeader/DashboardHeader';\n\nclass Dashboard extends Component {\n  state = {\n    menu:[],\n    baseRoute:null,\n    activeModal:null,\n    currentRoute:null,\n    pageComponent:null,\n    currentSection:null,\n    selectedSection:null,\n    tokensToMigrate:null,\n    showResetButton:false,\n    selectedSubsection:null,\n    oldIdleTokensToMigrate:null,\n    protocolsTokensBalances:null,\n  };\n\n  timeoutId = null;\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    window.functionsUtil = this.functionsUtil;\n  }\n\n  async loadMenu() {\n    const baseRoute = this.functionsUtil.getGlobalConfig(['dashboard','baseRoute']);\n    const strategies = this.functionsUtil.getGlobalConfig(['strategies']);\n    const menu = Object.keys(strategies).filter( s => ( !strategies[s].comingSoon ) ).map(strategy => ({\n        submenu:[],\n        color:'#fff',\n        selected:false,\n        route:baseRoute+'/'+strategy,\n        label:strategies[strategy].title,\n        image:strategies[strategy].icon,\n        imageInactive:strategies[strategy].iconInactive,\n        bgColor:strategies[strategy].color,\n        component:strategies[strategy].component\n      })\n    );\n\n\n    const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n\n    // Add Curve\n    if (curveConfig.enabled){\n      const curveParams = Object.assign({\n        submenu:[],\n        selected:false,\n        component:CurveStrategy,\n      },curveConfig.params);\n\n      menu.push(curveParams);\n    }\n\n    // Add Stats\n    menu.push(\n      {\n        icon:'Equalizer',\n        label:'Stats',\n        bgColor:'#21f36b',\n        color:'dark-gray',\n        component:Stats,\n        selected:false,\n        route:'/dashboard/stats',\n        submenu:[]\n      }\n    );\n\n    // Add tools\n    menu.push(\n      {\n        icon:'Build',\n        label:'Tools',\n        color:'dark-gray',\n        component:Utils,\n        selected:false,\n        route:'/dashboard/tools',\n        bgColor:this.props.theme.colors.primary,\n        submenu:Object.values(this.functionsUtil.getGlobalConfig(['tools'])).filter( u => (u.enabled) )\n      }\n    );\n\n    await this.setState({\n      menu\n    });\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  openTooltipModal = (modalTitle,modalContent) => {\n\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'UI',\n      eventAction: modalTitle,\n      eventLabel: 'TooltipModal'\n    });\n\n    this.setState({\n      modalTitle,\n      modalContent\n    },() => {\n      this.setActiveModal('tooltip');\n    })\n  }\n\n  setActiveModal = (activeModal) => {\n    this.setState({\n      activeModal\n    });\n  }\n\n  async loadParams() {\n    const { match: { params } } = this.props;\n\n    const baseRoute = this.functionsUtil.getGlobalConfig(['dashboard','baseRoute']);\n    let currentRoute = baseRoute;\n\n    let pageComponent = null;\n    let selectedToken = null;\n    let currentSection = null;\n    let selectedStrategy = null;\n\n    // Set strategy\n    if (params.section){\n      currentSection = params.section;\n      const param1 = params.param1;\n      const param2 = params.param2;\n\n      const section_is_strategy = Object.keys(this.props.availableStrategies).includes(currentSection.toLowerCase());\n      const param1_is_strategy = param1 && Object.keys(this.props.availableStrategies).includes(param1.toLowerCase());\n\n      if (section_is_strategy || param1_is_strategy){\n        selectedStrategy = section_is_strategy ? currentSection : param1;\n        currentRoute += '/'+selectedStrategy;\n\n        // Set token\n        const param1_is_token = param1 && Object.keys(this.props.availableStrategies[selectedStrategy]).includes(param1.toUpperCase());\n        const param2_is_token = param2 && Object.keys(this.props.availableStrategies[selectedStrategy]).includes(param2.toUpperCase());\n        if (param1_is_token || param2_is_token){\n          selectedToken = param1_is_token ? param1.toUpperCase() : param2.toUpperCase();\n          currentRoute += '/'+selectedToken;\n\n          if (section_is_strategy){\n            pageComponent = AssetPage;\n          }\n        }\n      } else {\n        currentRoute += '/'+params.section;\n\n        if (params.param1 && params.param1.length){\n          currentRoute += '/'+params.param1;\n        }\n\n        // if (params.param2 && params.param2.length){\n        //   currentRoute += '/'+params.param2;\n        // }\n      }\n    }\n\n    const menu = this.state.menu;\n\n    let selectedSection = null;\n    let selectedSubsection = null;\n\n    menu.forEach(m => {\n      m.selected = false;\n      const sectionRoute = baseRoute+'/'+params.section;\n      if (currentRoute.toLowerCase() === m.route.toLowerCase() || ( !m.submenu.length && m.route.toLowerCase() === sectionRoute.toLowerCase() )){\n        m.selected = true;\n        if (pageComponent === null){\n          pageComponent = m.component;\n        }\n      } else if (m.submenu.length) {\n        m.submenu.forEach(subm => {\n          subm.selected = false;\n          const submRoute = m.route+'/'+subm.route;\n          if (submRoute.toLowerCase() === currentRoute.toLowerCase()){\n            m.selected = true;\n            subm.selected = true;\n\n            // Set component, if null use parent\n            if (pageComponent === null){\n              if (subm.component){\n                pageComponent = subm.component;\n              } else {\n                pageComponent = m.component;\n              }\n            }\n          }\n\n          // Set selected subsection\n          if (subm.selected){\n            selectedSubsection = subm;\n          }\n\n        });\n      }\n\n      // Set selected section\n      if (m.selected){\n        selectedSection = m;\n      }\n    });\n\n    // console.log('pageComponent',params,pageComponent);\n\n    // Exit if no strategy and token selected\n    if (!pageComponent){\n      return this.goToSection('/',false);\n    }\n\n    // console.log('loadParams',selectedStrategy,selectedToken);\n    await this.props.setStrategyToken(selectedStrategy,selectedToken);\n\n    await this.setState({\n      menu,\n      params,\n      baseRoute,\n      currentRoute,\n      pageComponent,\n      currentSection,\n      selectedSection,\n      selectedSubsection\n    });\n  }\n\n  componentWillUnmount(){\n    if (this.timeoutId){\n      window.clearTimeout(this.timeoutId);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n    await this.loadMenu();\n    this.loadParams();\n  }\n\n  async componentDidMount() {\n\n    this.timeoutId = window.setTimeout(() => {\n      if (!this.props.accountInizialized || !this.props.contractsInitialized){\n        this.setState({\n          showResetButton:true\n        });\n      }\n    },20000);\n\n    if (!this.props.web3){\n      return this.props.initWeb3();\n    } else if (!this.props.accountInizialized){\n      return this.props.initAccount();\n    } else if (!this.props.contractsInitialized){\n      return this.props.initializeContracts();\n    }\n\n    this.loadUtils();\n    await this.loadMenu();\n    this.loadParams();\n    this.checkModals();\n  }\n\n  async componentDidUpdate(prevProps,prevState) {\n\n    this.loadUtils();\n\n    const prevParams = prevProps.match.params;\n    const params = this.props.match.params;\n\n    if (JSON.stringify(prevParams) !== JSON.stringify(params)){\n      await this.setState({\n        pageComponent:null\n      }, () => {\n        this.loadParams();\n      });\n    }\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const strategyChanged = this.props.selectedStrategy && prevProps.selectedStrategy !== this.props.selectedStrategy;\n    const accountInizialized = this.props.accountInizialized && prevProps.accountInizialized !== this.props.accountInizialized;\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n\n    if (accountChanged || accountInizialized || contractsInitialized || strategyChanged){\n      this.checkModals();\n    }\n  }\n\n  async checkModals(){\n\n    if (this.props.selectedToken || !this.props.accountInizialized || !this.props.contractsInitialized || !this.props.availableStrategies || !this.props.availableTokens){\n      return null;\n    }\n\n    await this.checkTokensToMigrate();\n    await this.checkWelcomeModal();\n    await this.checkProtocolsTokensBalances();\n  }\n\n  async checkTokensToMigrate(){\n\n    const showUpgradeModal = this.functionsUtil.getStoredItem('dontShowUpgradeModal',false,null) !== null ? false : true;\n    if (this.props.selectedToken || !showUpgradeModal || !this.props.availableTokens){\n      return null;\n    }\n\n    const tokensToMigrate = await this.functionsUtil.getTokensToMigrate();\n    const oldIdleTokensToMigrate = await this.functionsUtil.getProtocolsTokensBalances('idle');\n\n    // console.log('tokensToMigrate',tokensToMigrate);\n    \n    if ((tokensToMigrate && Object.keys(tokensToMigrate).length>0) || (oldIdleTokensToMigrate && Object.keys(oldIdleTokensToMigrate).length>0)){\n      const activeModal = 'upgrade';\n      if (activeModal !== this.state.activeModal){\n        this.setState({\n          activeModal,\n          tokensToMigrate,\n          oldIdleTokensToMigrate\n        });\n\n        return activeModal;\n      }\n    }\n\n    return null;\n  }\n\n  async checkWelcomeModal(){\n    if (!this.props.account || !this.props.accountInizialized || !this.props.contractsInitialized){\n      return null;\n    }\n\n    // Show welcome modal\n    if (this.props.account && this.state.activeModal === null){\n      let welcomeIsOpen = false;\n\n      const welcomeModalProps = this.functionsUtil.getGlobalConfig(['modals','welcome']);\n\n      if (welcomeModalProps.enabled && localStorage){\n\n        // Check the last login of the wallet\n        const currTime = new Date().getTime();\n        const walletAddress = this.props.account.toLowerCase();\n        let lastLogin = localStorage.getItem('lastLogin') ? JSON.parse(localStorage.getItem('lastLogin')) : {};\n\n        // First login\n        if (!lastLogin[walletAddress]){\n          lastLogin[walletAddress] = {\n            'signedUp':false,\n            'lastTime':currTime\n          };\n          welcomeIsOpen = true;\n        // User didn't sign up\n        } else if (!lastLogin[walletAddress].signedUp) {\n          const lastTime = parseInt(lastLogin[walletAddress].lastTime);\n          const timeFromLastLogin = (currTime-lastTime)/1000;\n          welcomeIsOpen = timeFromLastLogin>=welcomeModalProps.frequency; // 1 day since last login\n        }\n\n        if (welcomeIsOpen){\n          lastLogin[walletAddress].lastTime = currTime;\n          this.functionsUtil.setLocalStorage('lastLogin',JSON.stringify(lastLogin));\n        }\n      }\n\n      const activeModal = welcomeIsOpen ? 'welcome' : this.state.activeModal;\n      if (this.state.activeModal !== activeModal){\n        this.setState({\n          activeModal\n        });\n\n        return activeModal;\n      }\n    }\n\n    return null;\n  }\n\n  async checkProtocolsTokensBalances() {\n\n    if (!this.props.account || !this.props.accountInizialized || !this.props.contractsInitialized){\n      return null;\n    }\n\n    // Show migration modal if no other modals are opened\n    const migrateModalEnabled = this.functionsUtil.getGlobalConfig(['modals','migrate','enabled']);\n    const showMigrateModal = this.functionsUtil.getStoredItem('dontShowMigrateModal',false,null) !== null ? false : true;\n\n    if (this.state.activeModal === null && migrateModalEnabled && showMigrateModal && !this.state.protocolsTokensBalances){\n      const protocolsTokensBalances = await this.functionsUtil.getProtocolsTokensBalances();\n      const activeModal = protocolsTokensBalances && Object.keys(protocolsTokensBalances).length>0 ? 'migrate' : null;\n      const newState = {\n        activeModal,\n        protocolsTokensBalances\n      };\n      this.setState(newState);\n      return activeModal;\n    }\n\n    return null;\n  }\n\n  goToSection(section,isDashboard=true){\n\n    // Remove dashboard route\n    if (isDashboard){\n      section = section.replace(this.state.baseRoute +'/','');\n    }\n\n    const newRoute = isDashboard ? this.state.baseRoute +'/' + section : section;\n    window.location.hash=newRoute;\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'UI',\n      eventAction: 'goToSection',\n      eventLabel: newRoute\n    });\n\n    window.scrollTo(0, 0);\n  }\n\n  logout = async () => {\n    this.props.setConnector('Infura','Infura');\n    await this.props.initWeb3('Infura');\n  }\n\n  changeToken(selectedToken){\n    selectedToken = selectedToken.toUpperCase();\n    if (Object.keys(this.props.availableTokens).includes(selectedToken)){\n      const routeParts = [];\n\n      // Add section\n      if (this.state.currentSection.toLowerCase() !== this.props.selectedStrategy.toLowerCase()){\n        routeParts.push(this.state.currentSection);\n      }\n\n      // Add strategy\n      routeParts.push(this.props.selectedStrategy); \n\n      // Add token\n      routeParts.push(selectedToken);\n\n      this.goToSection(routeParts.join('/'));\n    }\n  }\n\n  render() {\n    const PageComponent = this.state.pageComponent ? this.state.pageComponent : null;\n    return (\n      <Flex\n        width={'100%'}\n        position={'fixed'}\n        flexDirection={'row'}\n        height={[(window.innerHeight-61)+'px','100vh']}\n        backgroundColor={['dashboardBg','white']}\n      >\n        <Flex\n          bottom={0}\n          zIndex={1}\n          width={[1,1/6]}\n          flexDirection={'column'}\n          position={['fixed','relative']}\n        >\n          <Card\n            p={[0,3]}\n            width={['100vw','auto']}\n            height={['auto','100vh']}\n            >\n            <DashboardMenu\n              {...this.props}\n              menu={this.state.menu}\n            />\n          </Card>\n        </Flex>\n        <Flex\n          py={3}\n          px={[3,5]}\n          mb={0}\n          width={[1,5/6]}\n          style={{\n            overflowY:'scroll',\n            overflowX:'hidden'\n          }}\n          flexDirection={'columns'}\n          backgroundColor={'dashboardBg'}\n        >\n          {\n            !this.props.accountInizialized || !this.props.contractsInitialized || !PageComponent ? (\n              <Flex\n                width={1}\n                minHeight={'50vg'}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                {\n                  !this.state.showResetButton ? (\n                    <FlexLoader\n                      textProps={{\n                        textSize:4,\n                        fontWeight:2\n                      }}\n                      loaderProps={{\n                        mb:3,\n                        size:'40px'\n                      }}\n                      flexProps={{\n                        my:3,\n                        flexDirection:'column'\n                      }}\n                      text={ !this.props.accountInizialized ? 'Loading account...' : ( !this.props.contractsInitialized ? 'Loading contracts...' : 'Loading assets...' )}\n                    />\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3,\n                        width:[1,0.35]\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Idle can't connect to your wallet!<br />Make sure that your wallet is unlocked and try again.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:3,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.logout.bind(this)}\n                        >\n                          Logout\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                }\n              </Flex>\n            ) : (\n              <Flex\n                width={1}\n                flexDirection={'column'}\n              >\n                <DashboardHeader\n                  goToSection={this.goToSection.bind(this)}\n                  {...this.props}\n                />\n                {\n                  PageComponent &&\n                    <PageComponent\n                      {...this.props}\n                      match={{ params:{} }}\n                      urlParams={this.state.params}\n                      changeToken={this.changeToken.bind(this)}\n                      goToSection={this.goToSection.bind(this)}\n                      selectedSection={this.state.selectedSection}\n                      selectedSubsection={this.state.selectedSubsection}\n                      openTooltipModal={this.openTooltipModal.bind(this)}\n                      />\n                }\n              </Flex>\n            )\n          }\n        </Flex>\n        <UpgradeModal\n          {...this.props}\n          closeModal={this.resetModal}\n          goToSection={this.goToSection.bind(this)}\n          tokensToMigrate={this.state.tokensToMigrate}\n          isOpen={this.state.activeModal === 'upgrade'}\n          oldIdleTokensToMigrate={this.state.oldIdleTokensToMigrate}\n        />\n        <MigrateModal\n          {...this.props}\n          closeModal={this.resetModal}\n          goToSection={this.goToSection.bind(this)}\n          isOpen={this.state.activeModal === 'migrate'}\n          protocolsTokensBalances={this.state.protocolsTokensBalances}\n        />\n        <TooltipModal\n          closeModal={this.resetModal}\n          title={this.state.modalTitle}\n          content={this.state.modalContent}\n          isOpen={this.state.activeModal === 'tooltip'}\n        >\n        </TooltipModal>\n        <WelcomeModal\n          closeModal={this.resetModal}\n          account={this.props.account}\n          simpleID={this.props.simpleID}\n          network={this.props.network.current}\n          tokenName={this.props.selectedToken}\n          initSimpleID={this.props.initSimpleID}\n          baseTokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'welcome'}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default Dashboard;","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      backgroundColor: \"white\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              You should be on the {this.props.network.required.name} Ethereum\n              network. You are currently connected to the{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                {this.props.network.current.name}\n              </Text.span>{\" \"}\n              Network - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isCorrectNetwork === false && this.props.web3\n          ?\n            <WrongNetworkBanner\n              network={this.props.network}\n            />\n          :\n            null\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  const buttons = basicConnectorsName.map(connectorName => {\n\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                style={{\n                  flex:'0 100%',\n                  justifyContent:'flex-start'\n                }}\n              >\n                <ImageButton\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageSrc={`images/${walletIcon}`}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/browser-wallet.png`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex flexDirection={'row'} flexWrap={'wrap'} justifyContent={'space-between'}>\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Modal,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    currentSection:null,\n    showTxFees: false,\n    closeRemainingTime:null,\n    newToEthereumChoice: null,\n    showInstructions: false\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      newToEthereumChoice:null,\n      showInstructions: false,\n      currentSection:null\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Connect',\n      eventAction: 'select_wallet',\n      eventLabel: walletProvider\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'blue'} style={{textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const newToEthereum = this.state.currentSection === 'new';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons isMobile={this.props.isMobile} connectionCallback={ this.closeModal } setConnector={ this.setConnector } width={1/2} size={ this.props.isMobile ? 'medium' : 'large' } />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton isMobile={this.props.isMobile} imageSrc={'images/email.svg'} imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}} caption={'Use e-mail'} subcaption={'Powered by Portis'} handleClick={ e => this.setConnector('Portis','Portis') } />\n                    <ImageButton isMobile={this.props.isMobile} imageSrc={'images/mobile.svg'} imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}} caption={'Use phone number'} subcaption={'Powered by Fortmatic'} handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }/>\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n              <Box mb={3}>\n                <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex mb={[2,3]} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                <ImageButton isMobile={ this.props.isMobile } imageSrc={'images/ethereum-wallet.svg'} imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'} } caption={`Ethereum wallet`} subcaption={'Choose your favourite'} handleClick={ e => this.setCurrentSection(e,'wallet') } />\n                <ImageButton isMobile={ this.props.isMobile } imageSrc={'images/new-wallet.png'} imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'} } caption={`New wallet`} subcaption={'Use email / phone'} handleClick={ e => this.setCurrentSection(e,'new') } />\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { (!this.state.currentSection) ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      await this.props.context.setFirstValidConnector(['Infura']);\n      this.props.setConnector('Infura',null);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                borderRadius={4}\n                my={2}\n                mx={[0, 2]}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enaugh funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                borderRadius={4}\n                my={2}\n                mx={[0, 2]}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport Biconomy from \"@biconomy/mexa\";\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\nimport { TerminalHttpProvider, SourceType } from '@terminal-packages/sdk';\n\nrequire('dotenv').config();\nconst INFURA_KEY = process.env[\"REACT_APP_INFURA_KEY\"];\n\nconst RimbleTransactionContext = React.createContext({\n  contracts: [],\n  account: {},\n  accountBalance: {},\n  accountBalanceToken: {},\n  accountBalanceLow: {},\n  tokenConfig: {},\n  web3: {},\n  web3Infura: {},\n  initWeb3: () => {},\n  biconomy: {},\n  simpleID: {},\n  initSimpleID: () => {},\n  transactions: {},\n  checkPreflight: () => {},\n  initContract: () => {},\n  initAccount: () => {},\n  initializeContracts: () => {},\n  getAccountBalance: () => {},\n  getTokenDecimals: () => {},\n  rejectAccountConnect: () => {},\n  accountValidated: {},\n  accountValidationPending: {},\n  rejectValidation: () => {},\n  validateAccount: () => {},\n  accountInizialized: false,\n  contractsInitialized: false,\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  network: {\n    required: {},\n    current: {},\n    isCorrectNetwork: null,\n    checkNetwork: () => {}\n  },\n  modals: {\n    data: {\n      noWeb3BrowserModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      connectionModalIsOpen: {},\n      accountConnectionPending: {},\n      userRejectedConnect: {},\n      accountValidationPending: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n      lowFundsModalIsOpen: {},\n      connectionError: {}\n    },\n    methods: {\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeLowFundsModal: () => {},\n      openLowFundsModal: () => {}\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils = () => {\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentDidMount = async () => {\n    this.initSimpleID();\n\n    // this.functionsUtil.customLog('RimbleWeb3 componentDidMount');\n    this.initWeb3();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.type = \"contract\";\n      transaction.status = status;\n      transaction.params = params;\n      transaction.transactionHash = hash;\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n\n    // window.initWeb3 = this.initWeb3;\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // this.functionsUtil.customLog('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    if (prevProps.connectorName !== this.props.connectorName && this.props.connectorName){\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect') {\n        this.initWeb3();\n      }\n    } else if ( (this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      this.initWeb3();\n    }\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    const availableStrategiesChanged = prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies));\n\n    // Reset tokenDecimals if token is changed\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    if (tokenChanged/* || availableTokensChanged*/ || availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Suppress console warning\n    if (window.ethereum && window.ethereum.autoRefreshOnNetworkChange) {\n      window.ethereum.autoRefreshOnNetworkChange = false;\n    }\n\n    const context = this.props.context;\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(globalConfigs.network.providers.infura[globalConfigs.network.requiredNetwork]+INFURA_KEY));\n\n    let web3 = context.library;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorNameChanged,context.connectorName,connectorName,setConnectorName);\n\n    if (!context.active || connectorNameChanged) {\n      // Select preferred web3 provider\n      if (connectorName && connectorNameChanged){\n        // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n        setConnectorName = connectorName;\n        await context.setConnector(connectorName);\n        // await context.setFirstValidConnector([connectorName, 'Infura']);\n        return web3;\n      }\n      /*\n      else if (setConnectorName){\n        // Catch WalletConnect unexpected disconnect and fallback to Infura\n        if (connectorName === 'WalletConnect' && connectorName === setConnectorName && last_context && last_context.active && last_context.connectorName==='WalletConnect' && !context.connectorName){\n          this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          this.functionsUtil.removeStoredItem('walletProvider');\n          this.functionsUtil.removeStoredItem('connectorName');\n          this.functionsUtil.setLocalStorage('context',JSON.stringify({active:context.active,connectorName:context.connectorName}));\n          setConnectorName = null;\n          await context.setConnector('Infura');\n          if (context.connector && typeof context.connector.disable === 'function'){\n            await context.connector.disable();\n          }\n        }\n\n        this.functionsUtil.customLog('initWeb3 skip due to setConnectorName ('+setConnectorName+') already set');\n        return web3;\n      }\n      */\n    }\n    /* else if (context.connectorName === \"WalletConnect\") {\n      if (!context.account) {\n\n        // WalletConnect already opened\n        if (document.getElementById('walletconnect-wrapper')){\n          return web3;\n        }\n\n        WalletConnectQRCodeModal.open(\n          context.connector.walletConnector.uri,\n          async () => {\n            document.getElementById('walletconnect-wrapper').remove();\n            this.props.setConnector('Infura',null);\n            await context.setConnector('Infura');\n            setConnectorName = null;\n          }\n        );\n      } else {\n        try {\n          WalletConnectQRCodeModal.close();\n        } catch {}\n      }\n    // Reset web3 if Infura\n    } */\n    /*\n    else if (context.active && (connectorName === 'Infura' || context.connectorName === \"Infura\")){\n      if (typeof web3.currentProvider.disable === 'function'){\n        await web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        await context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n    */\n\n    let web3Host = null;\n    let web3Provider = null;\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = globalConfigs.network.providers.infura[globalConfigs.network.requiredNetwork]+INFURA_KEY;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if (connectorName === 'Infura' && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = globalConfigs.network.providers.infura[globalConfigs.network.requiredNetwork]+INFURA_KEY;\n        forceCallback = true;\n      }\n    }\n\n    const terminalInfo = globalConfigs.network.providers.terminal;\n\n    if (terminalInfo && terminalInfo.enabled && terminalInfo.supportedNetworks.indexOf(globalConfigs.network.requiredNetwork) !== -1 ){\n      const TerminalHttpProviderParams = terminalInfo.params;\n      const terminalSourceType = localStorage && localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : SourceType.Infura;\n      TerminalHttpProviderParams.source = terminalSourceType;\n\n      if (web3Provider){\n        TerminalHttpProviderParams.customHttpProvider = web3Provider;\n      } else if (web3Host){\n        TerminalHttpProviderParams.host = web3Host;\n      }\n\n      const terminalHttpProvider = new TerminalHttpProvider(TerminalHttpProviderParams);\n      web3 = new Web3(terminalHttpProvider);\n    } else {\n      // Injected web3 provider\n      if (web3Provider){\n        web3 = new Web3(web3Provider);\n      // Infura\n      } else if (web3Host) {\n        web3 = new Web3(new Web3.providers.HttpProvider(web3Host));\n        if (connectorName !== 'Infura'){\n          this.props.setConnector('Infura',null);\n        }\n      }\n    }\n\n    const web3Callback = async () => {\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // After setting the web3 provider, check network\n      try {\n        await this.checkNetwork();\n        if (this.state.network.isCorrectNetwork){\n\n          if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          }\n\n          if (context.account){\n\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n            await this.setState({\n              accountInizialized: true,\n              account: this.props.customAddress\n            });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(globalConfigs.network.requiredNetwork) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      if (this.state.biconomy === null){\n        const biconomyWeb3Provider = web3Provider ? web3Provider : web3Host;\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || this.state.biconomy === biconomy){\n              return false;\n            }\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura\n            };\n            if (web3 !== this.state.web3){\n              this.setState(newState, web3Callback);\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            // this.functionsUtil.customLog('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                web3Infura,\n                biconomy:false\n              }, web3Callback);\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            web3Infura,\n            biconomy:false\n          }, web3Callback);\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3,\n          web3Infura,\n        }, web3Callback);\n      } else if (context.account || forceCallback){\n        web3Callback();\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`Init contract: ${name}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`creating contract ${name} - addr: ${address}`);\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : this.state.web3;\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      this.setState(state => ({\n        ...state,\n        contracts: [...state.contracts, {name, contract}]\n      }));\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(globalConfigs.network.requiredNetwork) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n\n    this.functionsUtil.customLog('initAccount',account);\n\n    if (this.props.customAddress){\n\n      // Set custom account\n      this.setState({\n        accountInizialized: true,\n        account: this.props.customAddress\n      });\n\n      // After account is complete, get the balance\n      this.getAccountBalance();\n\n      return false;\n    }\n\n    try {\n      if (!account){\n        const wallets = await this.state.web3.eth.getAccounts();\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account || this.state.account === account){\n        this.setState({\n          accountInizialized: true\n        });\n        return false;\n      }\n\n      // Request account access if needed\n      if (account){\n\n        const walletProvider = localStorage && localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        /*\n        // Unsubscribes to all subscriptions\n        if (this.state.web3SocketProvider && typeof this.state.web3SocketProvider.clearSubscriptions === 'function'){\n          this.functionsUtil.customLog('Clear all web3SocketProvider subscriptions');\n          this.state.web3SocketProvider.clearSubscriptions();\n        }\n\n        const networkName = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork].toLowerCase();\n        const web3SocketProvider = new Web3(new Web3.providers.WebsocketProvider(`wss://${networkName}.infura.io/ws/v3/${INFURA_KEY}`));\n\n        // Subscribe to logs\n        const addressTopic = '0x00000000000000000000000'+account.toLowerCase().replace('x','');\n\n        // Subscribe for payment methods\n        const paymentProviders = Object.keys(globalConfigs.payments.providers).filter((providerName,i) => { const providerInfo = globalConfigs.payments.providers[providerName]; return providerInfo.enabled && providerInfo.web3Subscription && providerInfo.web3Subscription.enabled  })\n        if (paymentProviders && paymentProviders.length){\n          paymentProviders.forEach((providerName,i) => {\n            const providerInfo = globalConfigs.payments.providers[providerName];\n\n            this.functionsUtil.customLog(`Subscribe to ${providerName} logs`);\n\n            // Subscribe for deposit transactions\n            web3SocketProvider.eth.subscribe('logs', {\n                address: [account,providerInfo.web3Subscription.contractAddress],\n                topics: [null,[addressTopic]]\n            }, function(error, result){\n              \n            })\n            .on(\"data\", async (log) => {\n              this.functionsUtil.customLog(providerName,'logs',log);\n\n              if (log){\n                const txHash = log.transactionHash;\n                const subscribedTransactions = this.state.subscribedTransactions;\n                const walletAddressFound = log.topics.filter((addr,i) => { return addr.toLowerCase().includes(addressTopic); });\n\n                this.functionsUtil.customLog(providerName,txHash,walletAddressFound);\n\n                if (!subscribedTransactions[txHash] && walletAddressFound.length){\n                  const decodedLogs = web3SocketProvider.eth.abi.decodeLog(providerInfo.web3Subscription.decodeLogsData,log.data,log.topics);\n\n                  this.functionsUtil.customLog(providerName,txHash,decodedLogs);\n\n                  if (decodedLogs && decodedLogs._tokenAmount && decodedLogs._tokenAddress && decodedLogs._tokenAddress.toLowerCase() === this.props.tokenConfig.address.toLowerCase()){\n\n                    const receiptCallback = async (tx,decodedLogs) => {\n                      const tokenDecimals = await this.getTokenDecimals();\n                      const tokenAmount = this.functionsUtil.BNify(decodedLogs._tokenAmount);\n                      const tokenAmountFixed = this.functionsUtil.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      const tokenAmountFormatted = parseFloat(tokenAmountFixed.toString()).toFixed(2);\n                      const isProviderTx = tx.from.toLowerCase() === account.toLowerCase() && tx.to.toLowerCase() === providerInfo.web3Subscription.contractAddress.toLowerCase();\n\n                      if (isProviderTx){\n\n                        // Mined\n                        if (tx.blockNumber && tx.status){\n                          // Toast message\n                          window.showToastMessage({\n                            variant:'success',\n                            message:'Deposit completed',\n                            secondaryMessage:`${providerName} sent you ${tokenAmountFormatted} ${this.props.selectedToken}`,\n                          });\n\n                          // Update User Balance\n                          this.getAccountBalance(tokenAmount);\n                        } else {\n                          // Toast message\n                          window.showToastMessage({\n                            variant:'processing',\n                            message:'Deposit pending',\n                            secondaryMessage:`${providerName} is sending ${tokenAmountFormatted} ${this.props.selectedToken}`,\n                          });\n                        }\n                      }\n                    }\n\n                    let checkTransactionReceiptTimeoutID = null;\n\n                    const checkTransactionReceipt = (txHash,decodedLogs) => {\n                      if (checkTransactionReceiptTimeoutID){\n                        window.clearTimeout(checkTransactionReceiptTimeoutID);\n                      }\n                      web3SocketProvider.eth.getTransactionReceipt(txHash,(err,txReceipt)=>{\n                        if (!err){\n                          if (txReceipt){\n                            receiptCallback(txReceipt,decodedLogs);\n                          } else{\n                            checkTransactionReceiptTimeoutID = window.setTimeout(() => { checkTransactionReceipt(txHash,decodedLogs) },3000);\n                          }\n                        }\n                      });\n                    }\n\n                    checkTransactionReceipt(txHash,decodedLogs);\n\n                    subscribedTransactions[txHash] = log;\n                    this.setState({subscribedTransactions});\n                  }\n                }\n              }\n            });\n          })\n        }\n\n        // Subscribe for deposit transactions\n        web3SocketProvider.eth.subscribe('logs', {\n            address: [account,this.props.tokenConfig.address],\n            topics: [null,null,[addressTopic]]\n        }, function(error, result){\n\n        })\n        .on(\"data\", async (log) => {\n          if (log){\n            const txHash = log.transactionHash;\n            const subscribedTransactions = this.state.subscribedTransactions;\n            const walletAddressFound = log.topics.filter((addr,i) => { return addr.toLowerCase().includes(addressTopic); });\n\n            if (!subscribedTransactions[txHash] && walletAddressFound.length){\n              const decodedLogs = web3SocketProvider.eth.abi.decodeLog([\n                {\n                  \"internalType\": \"uint256\",\n                  \"name\": \"_tokenAmount\",\n                  \"type\": \"uint256\"\n                },\n              ],log.data,log.topics);\n\n              if (decodedLogs && decodedLogs._tokenAmount){\n\n                const receiptCallback = async (tx,decodedLogs) => {\n                  const tokenDecimals = await this.getTokenDecimals();\n                  const tokenAmount = this.functionsUtil.BNify(decodedLogs._tokenAmount);\n                  const tokenAmountFixed = this.functionsUtil.fixTokenDecimals(tokenAmount,tokenDecimals);\n                  const tokenAmountFormatted = parseFloat(tokenAmountFixed.toString()).toFixed(2);\n                  const isDepositTokenTx = tx.to.toLowerCase() === this.props.tokenConfig.address.toLowerCase();\n\n                  if (isDepositTokenTx){\n\n                    // Mined\n                    if (tx.blockNumber && tx.status){\n                      // Toast message\n                      window.showToastMessage({\n                        message:'Deposit completed',\n                        secondaryMessage: `${tokenAmountFormatted} ${this.props.selectedToken} has been deposited`,\n                        variant: \"success\",\n                      });\n\n                      // Update User Balance\n                      this.getAccountBalance(tokenAmount);\n                    } else {\n                      // Toast message\n                      window.showToastMessage({\n                        message:'Deposit pending',\n                        secondaryMessage: `${tokenAmountFormatted} ${this.props.selectedToken} are on the way`,\n                        variant: \"processing\",\n                      });\n                    }\n                  }\n                }\n\n                let checkTransactionReceiptTimeoutID = null;\n\n                const checkTransactionReceipt = (txHash,decodedLogs) => {\n                  if (checkTransactionReceiptTimeoutID){\n                    window.clearTimeout(checkTransactionReceiptTimeoutID);\n                  }\n                  web3SocketProvider.eth.getTransactionReceipt(txHash,(err,txReceipt)=>{\n                    if (!err){\n                      if (txReceipt){\n                        receiptCallback(txReceipt,decodedLogs);\n                      } else{\n                        checkTransactionReceiptTimeoutID = window.setTimeout(() => { checkTransactionReceipt(txHash,decodedLogs) },3000);\n                      }\n                    }\n                  });\n                }\n\n                checkTransactionReceipt(txHash,decodedLogs);\n\n                subscribedTransactions[txHash] = log;\n                this.setState({subscribedTransactions});\n              }\n            }\n          }\n        })\n        .on(\"changed\", log => {\n          \n        });\n        */\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // this.functionsUtil.customLog(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    const contracts = this.functionsUtil.getGlobalConfig(['contracts']);\n    await this.functionsUtil.asyncForEach(Object.keys(contracts),async (contractName) => {\n      const contractInfo = contracts[contractName];\n      if (contractInfo.address !== null && contractInfo.abi !== null){\n        this.functionsUtil.customLog('initializeContracts, init contract', contractName, contractInfo.address);\n        await this.initContract(contractName, contractInfo.address, contractInfo.abi);\n      }\n    });\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    await this.functionsUtil.asyncForEach(Object.keys(govTokens),async (token) => {\n      const govTokenConfig = govTokens[token];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      // Initialize govToken contracts\n      let foundGovTokenContract = this.state.contracts.find(c => c.name === token);\n      if (!foundGovTokenContract) {\n        this.functionsUtil.customLog('initializeContracts, init contract', token, govTokenConfig.address);\n        await this.initContract(token, govTokenConfig.address, govTokenConfig.abi);\n      }\n    });\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n        \n        const availableTokens = this.props.availableStrategies[strategy];\n\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          let foundTokenContract = this.state.contracts.find(c => c.name === token);\n          if (!foundTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            await this.initContract(token, tokenConfig.address, tokenConfig.abi);\n          }\n\n          // Initialize idleTokens contracts\n          let foundIdleTokenContract = this.state.contracts.find(c => c.name === tokenConfig.idle.token);\n          if (!foundIdleTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            await this.initContract(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi);\n          }\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n            if (!foundProtocolContract) {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              await this.initContract(p.token, p.address, p.abi);\n            }\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              await this.initContract(oldContract.name, oldContract.address, oldContract.abi);\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n                if (!foundProtocolContract) {\n                  this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                  await this.initContract(p.token, p.address, p.abi);\n                }\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              await this.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n            }\n          }\n        })\n      });\n    }\n\n    return this.setState({\n      contractsInitialized:true\n    });\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n\n    const networkId =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.requiredNetwork !== \"undefined\"\n        ? this.props.config.requiredNetwork\n        : globalConfigs.network.requiredNetwork;\n\n    let networkName = globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId] : 'unknown';\n\n    let requiredNetwork = {\n      name: networkName,\n      id: networkId\n    };\n\n    let network = { ...this.state.network };\n    network.required = requiredNetwork;\n\n    this.setState({ network });\n  }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = { ...this.state.network };\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  getNetworkName = async () => {\n    try {\n      return this.state.web3.eth.net.getNetworkType((error, networkName) => {\n        let current = { ...this.state.network.current };\n        current.name = networkName;\n        let network = { ...this.state.network };\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network Name: \", error);\n    }\n  }\n\n  checkNetwork = async () => {\n    this.getRequiredNetwork();\n\n    await Promise.all([\n      this.getNetworkId(),\n      this.getNetworkName()\n    ]);\n\n    let network = { ...this.state.network };\n    network.isCorrectNetwork = this.state.network.current.id === this.state.network.required.id;\n\n    // To do, check window.web3.currentProvider.networkVersion to see if Metamask is in the requiredNetwork\n\n    this.setState({ network });\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // if (call_callback){\n        //   alert('confirmationCallback')\n        // }\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas  } : { from: account, gas })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          // this.functionsUtil.customLog('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      // this.functionsUtil.customLog('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.created = Date.now();\n    transaction.lastUpdated = Date.now();\n    transaction.status = \"initialized\";\n    transaction.confirmationCount = 0;\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // this.functionsUtil.customLog('updateTransaction',transactions);\n\n    // Save transactions in localStorage only if pending or succeeded\n    if (['pending','success','confirmed'].includes(transaction.status.toLowerCase())){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n\n    // this.functionsUtil.customLog('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n\n    modals.data.connectionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    transactions: {},\n    CrispClient: null,\n    tokenDecimals:null,\n    accountBalance: null,\n    web3Subscription: null,\n    accountValidated: null,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    accountInizialized:false,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider value={this.state} {...this.props} />\n        <ConnectionModalUtil\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          network={this.state.network}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React, { Component } from 'react';\nimport { Flex, Text, Icon } from \"rimble-ui\";\nimport SmartNumber from '../../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ProposalField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const proposal = Object.assign({},this.props.proposal);\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n\n    switch (fieldInfo.name){\n      case 'date':\n        const formattedDate = this.functionsUtil.strToMoment(proposal.timestamp*1000).format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        const state = fieldInfo.state ? fieldInfo.state : proposal.state;\n        switch (state) {\n          case 'Pending':\n            icon = \"HourglassEmpty\";\n            color = '#a5a5a5';\n          break;\n          case 'Active':\n            icon = \"Adjust\";\n            color = '#a5a5a5';\n          break;\n          case 'Canceled':\n            icon = \"Cancel\";\n            color = '#fa0000';\n          break;\n          case 'Defeated':\n            icon = \"Block\";\n            color = '#fa0000';\n          break;\n          case 'Succeeded':\n            icon = \"Done\";\n            color = '#00b84a';\n          break;\n          case 'Queued':\n            icon = \"Timelapse\";\n            color = '#ff9900';\n          break;\n          case 'Expired':\n            icon = \"ErrorOutline\";\n            color = '#a5a5a5';\n          break;\n          case 'Executed':\n            icon = \"CheckCircle\";\n            color = '#00b84a';\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            {...fieldProps}\n            alignItems={'center'}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ fieldProps.size ? fieldProps.size : (this.props.isMobile ? '1em' : '1.8em') }\n            />\n          </Flex>\n        );\n      break;\n      case 'id':\n        output = (\n          <Text {...fieldProps}>{proposal.id}</Text>\n        );\n      break;\n      case 'title':\n        output = (\n          <Text {...fieldProps}>{proposal.title}</Text>\n        );\n      break;\n      case 'votes':\n        const forVotes = this.functionsUtil.BNify(proposal.forVotes).div(1e18);\n        const againstVotes = this.functionsUtil.BNify(proposal.againstVotes).div(1e18);\n        const totalVotes = forVotes.plus(againstVotes);\n        output = (\n          <Text {...fieldProps}>{this.functionsUtil.formatMoney(totalVotes.toFixed(0,1),0)}</Text>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{proposal.state}</Text>\n        );\n      break;\n      case 'support':\n        let support = null;\n        if (this.props.delegate){\n          const delegate = this.props.delegate.delegate.toLowerCase();\n          const vote = proposal.votes.find( v => (v.voter.toLowerCase() === delegate) );\n          if (vote){\n            support = vote.support;\n          }\n        }\n        output = (\n          <Text {...fieldProps}>{ support === null ? 'NONE' : (support ? 'FOR' : 'AGAINST') }</Text>\n        );\n      break;\n      case 'forVotes':\n        output = (\n          <SmartNumber {...fieldProps} number={proposal.forVotes} />\n        );\n      break;\n      case 'againstVotes':\n        output = (\n          <SmartNumber {...fieldProps} number={proposal.againstVotes} />\n        );\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default ProposalField;\n","import React, { Component } from 'react';\nimport styles from './ProposalListFilters.module.scss';\nimport DashboardCard from '../../DashboardCard/DashboardCard';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\nimport TableCellHeader from '../../TableCellHeader/TableCellHeader';\n\nclass ProposalListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${this.props.theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ProposalListFilters;","import React, { Component } from 'react';\nimport TableRow from '../../TableRow/TableRow';\nimport FlexLoader from '../../FlexLoader/FlexLoader';\nimport TableHeader from '../../TableHeader/TableHeader';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport ProposalField from '../ProposalField/ProposalField';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport ProposalListFilters from '../ProposalListFilters/ProposalListFilters';\n\nclass ProposalsList extends Component {\n\n  state = {\n    page:1,\n    loading:true,\n    rowsPerPage:10,\n    totalRows:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n    },\n    filters:{\n      status:{\n        pending:'Pending',\n        active:'Active',\n        canceled:'Canceled',\n        defeated:'Defeated',\n        succeeded:'Succeeded',\n        queued:'Queued',\n        expired:'Expired',\n        executed:'Executed'\n      },\n    },\n    processedRows:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);\n    this.processList(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.processList();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processList();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n      }\n    },() => {\n      this.processList();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const pageChanged = prevState.page !== this.state.page;\n    const proposalsChanged = JSON.stringify(prevProps.proposals) !== JSON.stringify(this.props.proposals);\n    if (pageChanged || proposalsChanged){\n      this.processList();\n    }\n  }\n\n  processList = (page=null) => {\n\n    if (!this.props.proposals){\n      return false;\n    }\n\n    page = page ? page : this.state.page;\n\n    const rowsPerPage = this.props.rowsPerPage ? this.props.rowsPerPage : this.state.rowsPerPage;\n\n    // Sort Proposals by timeStamp\n    const proposals = Object.values(this.props.proposals)\n                        .filter(p => (\n                          (this.state.activeFilters.status === null || p.state.toLowerCase() === this.state.activeFilters.status.toLowerCase())\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timestamp > b.timestamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalRows = proposals.length;\n    const totalPages = Math.ceil(totalRows/rowsPerPage);\n\n    const processedRows = [];\n\n    proposals.forEach((p, i) => {\n      if (i>=((page-1)*rowsPerPage) && i<((page-1)*rowsPerPage)+rowsPerPage) {\n        processedRows.push(p);\n      }\n    });\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalRows,\n      totalPages,\n      processedRows\n    });\n  }\n\n  render() {\n\n    const filtersEnabled = typeof this.props.filtersEnabled === 'undefined' || this.props.filtersEnabled;\n    const hasActiveFilters = filtersEnabled && Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n    const processedRows = this.state.processedRows ? Object.values(this.state.processedRows) : null;\n    const hasRows = processedRows && processedRows.length>0;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          (this.state.loading || !this.state.processedRows === null) ? (\n            <FlexLoader\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'row'\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading Proposals...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'proposals-list-container'}\n              pt={[0, (!filtersEnabled || !hasRows ? 0 : hasActiveFilters ? '116px' : 5) ] }\n            >\n              {\n                hasRows ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    {\n                      filtersEnabled &&\n                        <ProposalListFilters\n                          {...this.props}\n                          filters={this.state.filters}\n                          activeFilters={this.state.activeFilters}\n                          resetFilters={this.resetFilters.bind(this)}\n                          applyFilters={this.applyFilters.bind(this)}\n                        />\n                    }\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'proposals-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedRows.map( (proposal,index) => {\n                          const proposalId = proposal.id;\n                          const handleClick = (e) => {\n                            return (proposalId ? this.props.goToSection(`proposals/${proposalId}`) : null);\n                          };\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              id={proposalId}\n                              proposal={proposal}\n                              handleClick={handleClick}\n                              key={`proposal-${proposalId}`}\n                              fieldComponent={ProposalField}\n                              rowId={`proposal-col-${proposalId}`}\n                              cardId={`proposal-card-${proposalId}`}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'proposals-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                    fontFamily={'sansSerif'}\n                  >\n                    There are no proposals\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ProposalsList;\n","import React, { Component } from 'react';\nimport { Flex, Text, Blockie } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass DelegateField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const delegate = Object.assign({},this.props.delegate);\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'avatar':\n        output = (\n          <Flex\n            {...fieldProps}\n            alignItems={'center'}\n            justifyContent={'center'}\n          >\n            <Blockie\n              opts={{\n                size: 7,\n                color: \"#dfe\",\n                bgcolor: \"#a71\",\n                spotcolor: \"#000\",\n                seed: delegate.delegate,\n              }}\n            />\n          </Flex>\n        );\n      break;\n      case 'rank':\n      case 'votes':\n      case 'delegate':\n      case 'proposals':\n      case 'vote_weight':\n        let value = delegate[fieldInfo.name];\n        if (fieldInfo.name === 'votes'){\n          value = this.functionsUtil.formatMoney(this.functionsUtil.BNify(value).toFixed(2,1),2);\n        }\n        output = (\n          <Text\n            {...fieldProps}\n          >\n            {value}\n          </Text>\n        );\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default DelegateField;\n","import React, { Component } from 'react';\nimport TableRow from '../../TableRow/TableRow';\nimport FlexLoader from '../../FlexLoader/FlexLoader';\nimport TableHeader from '../../TableHeader/TableHeader';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport DelegateField from '../DelegateField/DelegateField';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\n\nclass DelegatesList extends Component {\n\n  state = {\n    page:1,\n    filters:{},\n    loading:true,\n    rowsPerPage:10,\n    totalRows:null,\n    totalPages:null,\n    activeFilters:{},\n    processedRows:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);\n    this.processList(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.processList();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processList();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n      }\n    },() => {\n      this.processList();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const pageChanged = prevState.page !== this.state.page;\n    const delegatesChanged = JSON.stringify(prevProps.delegates) !== JSON.stringify(this.props.delegates);\n    if (pageChanged || delegatesChanged){\n      this.processList();\n    }\n  }\n\n  processList = (page=null) => {\n\n    if (!this.props.delegates){\n      return false;\n    }\n\n    page = page ? page : this.state.page;\n\n    const rowsPerPage = this.props.rowsPerPage ? this.props.rowsPerPage : this.state.rowsPerPage;\n\n    // Sort Proposals by timeStamp\n    let delegates = Object.values(this.props.delegates)\n                        .sort((a,b) => (a.timestamp > b.timestamp) ? -1 : 1 );\n\n    if (this.props.maxRows !== null && this.props.maxRows>0){\n      delegates = delegates.splice(0,this.props.maxRows);\n    }\n\n    // Calculate max number of pages\n    const totalRows = delegates.length;\n    const totalPages = Math.ceil(totalRows/rowsPerPage);\n\n    const processedRows = [];\n\n    delegates.forEach((p, i) => {\n      if (i>=((page-1)*rowsPerPage) && i<((page-1)*rowsPerPage)+rowsPerPage) {\n        processedRows.push(p);\n      }\n    });\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalRows,\n      totalPages,\n      processedRows\n    });\n  }\n\n  render() {\n\n    const processedRows = this.state.processedRows ? Object.values(this.state.processedRows) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          (this.state.loading || !this.state.processedRows === null) ? (\n            <FlexLoader\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'row'\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading Leaderboard...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'delegates-list-container'}\n            >\n              {\n                processedRows && processedRows.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'delegates-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedRows.map( (delegate,index) => {\n                          const delegateId = delegate.delegate;\n                          const handleClick = (e) => {\n                            return (delegateId ? this.props.goToSection(`leaderboard/${delegateId}`) : null);\n                          };\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              id={delegateId}\n                              delegate={delegate}\n                              key={`delegate-${index}`}\n                              handleClick={handleClick}\n                              fieldComponent={DelegateField}\n                              rowId={`delegate-col-${index}`}\n                              cardId={`delegate-card-${index}`}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'delegates-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                    fontFamily={'sansSerif'}\n                  >\n                    There are no delegates\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default DelegatesList;\n","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport StatsCard from '../StatsCard/StatsCard';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport ProposalsList from './ProposalsList/ProposalsList';\nimport DelegatesList from './DelegatesList/DelegatesList';\n\nclass Overview extends Component {\n\n  state = {\n    delegates:[],\n    proposals:[],\n    totalSupply:0,\n    dataLoaded:false,\n    votesDelegated:0,\n  };\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    const [\n      delegates,\n      proposals,\n      totalSupply\n    ] = await Promise.all([\n      this.governanceUtil.getDelegates(),\n      this.governanceUtil.getProposals(),\n      this.governanceUtil.getTotalSupply()\n    ]);\n\n    const votesDelegated = delegates.reduce( (votesDelegated,d) => {\n      votesDelegated = votesDelegated+parseFloat(d.votes);\n      return votesDelegated;\n    },0);\n\n    const dataLoaded = true;\n\n    this.setState({\n      delegates,\n      proposals,\n      dataLoaded,\n      totalSupply,\n      votesDelegated\n    });\n  }\n\n  render() {\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={[3,4]}\n        >\n          Governance Overview\n        </Title>\n        {\n          !this.state.dataLoaded ? (\n            <FlexLoader\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'row'\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading Data...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              <Flex\n                width={1}\n                mb={[3,4]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <Flex\n                  mb={[2,0]}\n                  pr={[0,1]}\n                  width={[1,1/4]}\n                  flexDirection={'column'}\n                >\n                  <StatsCard\n                    label={null}\n                    labelTooltip={null}\n                    title={'Votes Delegated'}\n                    minHeight={['130px','143px']}\n                    titleMinHeight={['auto','50px']}\n                    value={this.functionsUtil.formatMoney(this.state.votesDelegated.toFixed(2,1),2)}\n                  />\n                </Flex>\n                <Flex\n                  mb={[2,0]}\n                  pl={[0,1]}\n                  pr={[0,1]}\n                  width={[1,1/4]}\n                  flexDirection={'column'}\n                >\n                  <StatsCard\n                    label={null}\n                    labelTooltip={null}\n                    title={'Voting Addresses'}\n                    minHeight={['130px','143px']}\n                    titleMinHeight={['auto','50px']}\n                    value={this.state.delegates.length}\n                  />\n                </Flex>\n                <Flex\n                  mb={[2,0]}\n                  pl={[0,1]}\n                  pr={[0,1]}\n                  width={[1,1/4]}\n                  flexDirection={'column'}\n                >\n                  <StatsCard\n                    label={null}\n                    labelTooltip={null}\n                    title={'Proposals'}\n                    minHeight={['130px','143px']}\n                    titleMinHeight={['auto','50px']}\n                    value={this.state.proposals.length}\n                  />\n                </Flex>\n                <Flex\n                  pl={[0,1]}\n                  mb={[2,0]}\n                  width={[1,1/4]}\n                  flexDirection={'column'}\n                >\n                  <StatsCard\n                    label={null}\n                    labelTooltip={null}\n                    title={'IDLE Circulating'}\n                    minHeight={['130px','143px']}\n                    titleMinHeight={['auto','50px']}\n                    value={this.functionsUtil.formatMoney(this.state.totalSupply,0)}\n                  />\n                </Flex>\n              </Flex>\n              <Box\n                width={1}\n                mt={[4,5]}\n              >\n                <Title\n                  mb={[3,4]}\n                >\n                  Recent Proposals\n                </Title>\n                <Flex\n                  mb={[3,4]}\n                  width={1}\n                  id={'transactions'}\n                  flexDirection={'column'}\n                >\n                  <ProposalsList\n                    {...this.props}\n                    rowsPerPage={5}\n                    filtersEnabled={false}\n                    proposals={this.state.proposals}\n                    cols={[\n                      {\n                        title: '#',\n                        props:{\n                          width:[0.1,0.05]\n                        },\n                        fields:[\n                          {\n                            name:'id',\n                            props:{\n                            }\n                          },\n                        ]\n                      },\n                      {\n                        title:'DATE',\n                        mobile:false,\n                        props:{\n                          width:[0.15,0.12],\n                        },\n                        fields:[\n                          {\n                            name:'date'\n                          }\n                        ]\n                      },\n                      {\n                        title:'TITLE',\n                        props:{\n                          width:[0.75,0.60],\n                        },\n                        fields:[\n                          {\n                            name:'title'\n                          }\n                        ]\n                      },\n                      {\n                        mobile:false,\n                        title:'VOTES',\n                        props:{\n                          width:[0.11,0.11],\n                        },\n                        fields:[\n                          {\n                            name:'votes'\n                          }\n                        ]\n                      },\n                      {\n                        title:'STATUS',\n                        props:{\n                          width:[0.15,0.12],\n                          alignItems:['center','flex-start'],\n                          justifyContent:['center','flex-start']\n                        },\n                        parentProps:{\n                          justifyContent:['center','flex-start']\n                        },\n                        fields:[\n                          {\n                            name:'statusIcon',\n                            props:{\n                              mr:[0,2],\n                            },\n                          },\n                          {\n                            mobile:false,\n                            name:'status'\n                          }\n                        ]\n                      },\n                    ]}\n                  />\n                </Flex>\n              </Box>\n              <Box\n                width={1}\n              >\n                <Title\n                  mb={[3,4]}\n                >\n                  Leaderboard\n                </Title>\n                <Flex\n                  mb={[3,4]}\n                  width={1}\n                  id={'transactions'}\n                  flexDirection={'column'}\n                >\n                  <DelegatesList\n                    maxRows={100}\n                    {...this.props}\n                    rowsPerPage={5}\n                    delegates={this.state.delegates}\n                    cols={[\n                      {\n                        title: 'RANK',\n                        props:{\n                          width:[0.13,0.08]\n                        },\n                        fields:[\n                          {\n                            name:'rank'\n                          },\n                        ]\n                      },\n                      {\n                        title:'ADDRESS',\n                        props:{\n                          width:[0.60,0.50],\n                        },\n                        fields:[\n                          {\n                            mobile:false,\n                            name:'avatar',\n                            props:{\n                              mr:2\n                            }\n                          },\n                          {\n                            name:'delegate'\n                          }\n                        ]\n                      },\n                      {\n                        title:'VOTES',\n                        props:{\n                          width:[0.27,0.12],\n                        },\n                        fields:[\n                          {\n                            name:'votes'\n                          }\n                        ]\n                      },\n                      {\n                        mobile:false,\n                        title:'VOTE WEIGHT',\n                        props:{\n                          width:[0.15,0.15],\n                        },\n                        fields:[\n                          {\n                            name:'vote_weight',\n                            parentProps:{\n                              alignItems:'center'\n                            }\n                          }\n                        ]\n                      },\n                      {\n                        mobile:false,\n                        title:'PROPOSALS VOTED',\n                        props:{\n                          width:[0.15,0.15],\n                        },\n                        fields:[\n                          {\n                            name:'proposals',\n                            parentProps:{\n                              alignItems:'center'\n                            }\n                          }\n                        ]\n                      },\n                    ]}\n                  />\n                </Flex>\n              </Box>\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Overview;\n","import React, { Component } from 'react';\nimport ConnectBox from '../../ConnectBox/ConnectBox';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport GovernanceUtil from '../../utilities/GovernanceUtil';\nimport DashboardCard from '../../DashboardCard/DashboardCard';\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\nimport { Flex, Text, Input, Button, Box, EthAddress } from \"rimble-ui\";\n\nclass DelegateVote extends Component {\n\n  state = {\n    newDelegate:'',\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  }\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  checkNewDelegate = () => {\n    return this.functionsUtil.checkAddress(this.state.newDelegate) && this.state.newDelegate.toLowerCase() !== this.props.currentDelegate.toLowerCase();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  setDelegate(address){\n    const addressOk = this.functionsUtil.checkAddress(address);\n\n    if (addressOk){\n\n      const callback = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventCategory: 'Delegate',\n          eventAction: address,\n          eventLabel: tx.status\n        };\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        if (typeof this.props.loadUserData === 'function' && tx.status === 'success'){\n          this.props.loadUserData();\n        }\n\n        this.setState({\n          processing: {\n            txHash:null,\n            loading:false\n          }\n        });\n      };\n\n      const callbackReceipt = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      this.governanceUtil.setDelegate(address,callback,callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    }\n    return null;\n  }\n\n  changeDelegate = (e) => {\n    const newDelegate = e.target.value;\n    this.setState({\n      newDelegate\n    });\n  }\n\n  render() {\n\n    const isUndelegated = parseInt(this.props.currentDelegate) === 0;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n        !this.props.account ? (\n          <Flex\n            width={[1,0.36]}\n            alignItems={'stretch'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            <ConnectBox\n              {...this.props}\n            />\n          </Flex>\n        ) : \n        // Has balance\n        this.props.balance && this.props.balance.gt(0) ? (\n          <DashboardCard\n            cardProps={{\n              mb:2,\n              py:[2,3],\n              px:[3,4],\n              width:[1,0.5],\n              position:'relative',\n            }}\n            isInteractive={false}\n          >\n            {\n              this.props.canClose &&\n                <Box\n                  top={'0'}\n                  zIndex={1}\n                  right={'0'}\n                  position={'absolute'}\n                >\n                  <Button.Text\n                    icononly\n                    icon={'Close'}\n                    size={'2.5em'}\n                    mainColor={'statValue'}\n                    onClick={this.props.closeFunc}\n                  />\n                </Box>\n            }\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                mb={2}\n                fontWeight={3}\n                fontSize={[2,3]}\n                color={'dark-gray'}\n                textAlign={'center'}\n              >\n                You have {this.functionsUtil.fixTokenDecimals(this.props.balance,18).toFixed(4)} {this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])} available.\n              </Text>\n              <Text\n                mb={1}\n                fontWeight={3}\n                color={'statValue'}\n                textAlign={'center'}\n              >\n                Current Delegate:\n              </Text>\n              <Flex\n                mb={3}\n                width={1}\n                alignItems={'center'}\n                justifyContent={isUndelegated ? 'center' : 'stretch'}\n              >\n                {\n                  isUndelegated ? (\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'dark-gray'}\n                      textAlign={'center'}\n                    >\n                      Undelegated\n                    </Text>\n                  ) : (\n                    <EthAddress\n                      width={1}\n                      address={this.props.account}\n                    />\n                  )\n                }\n              </Flex>\n              {\n                this.state.processing && this.state.processing.loading ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      web3={this.props.web3}\n                      waitText={`Delegate estimated in`}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing delegate request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                    />\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mb={1}\n                      fontWeight={3}\n                      color={'statValue'}\n                      textAlign={'center'}\n                    >\n                      Set New Delegate:\n                    </Text>\n                    <Input\n                      min={0}\n                      type={'text'}\n                      width={'100%'}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      textAlign={'center'}\n                      boxShadow={'none !important'}\n                      value={this.state.newDelegate}\n                      placeholder={`Insert delegate address`}\n                      onChange={this.changeDelegate.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                    />\n                    <Flex\n                      mt={3}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          mx:1,\n                          fontSize:[1,2],\n                          width:['auto','10em'],\n                          disabled:!this.checkNewDelegate()\n                        }}\n                        handleClick={ e => this.setDelegate(this.state.newDelegate) }\n                      >\n                        Delegate\n                      </RoundButton>\n                      <RoundButton\n                        buttonProps={{\n                          mx:1,\n                          fontSize:[1,2],\n                          width:['auto','10em'],\n                          mainColor:this.props.theme.colors.redeem,\n                          disabled:this.props.currentDelegate.toLowerCase() === this.props.account.toLowerCase()\n                        }}\n                        handleClick={ e => this.setDelegate(this.props.account) }\n                      >\n                        Self-delegate\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                )\n              }\n            </Flex>\n          </DashboardCard>\n        ) : (\n          <Text\n            fontWeight={2}\n            fontSize={[2,3]}\n            color={'dark-gray'}\n            textAlign={'center'}\n          >\n            You don't have any {this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])} token to delegate.\n          </Text>\n        )\n       } \n      </Flex>\n    );\n  }\n}\n\nexport default DelegateVote;","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport DelegateVote from './DelegateVote/DelegateVote';\n\nclass Delegate extends Component {\n\n  render() {\n    return (\n      <Box\n        width={1}\n      >\n        <Flex\n          mb={3}\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'flex-start'}\n        >\n          <Breadcrumb\n            {...this.props}\n            text={'Governance'}\n            path={['Delegate votes']}\n            isMobile={this.props.isMobile}\n            handleClick={ e => this.props.goToSection('') }\n          />\n        </Flex>\n        <Box\n          width={1}\n        >\n          <Title\n            mb={[3,4]}\n          >\n            Delegate Votes\n          </Title>\n          <Flex\n            px={[0,3]}\n            mb={[3,4]}\n            width={1}\n            flexDirection={'column'}\n            id={'delegate-container'}\n          >\n            <DelegateVote\n              {...this.props}\n            />\n          </Flex>\n        </Box>\n      </Box>\n    );\n  }\n}\n\nexport default Delegate;\n","import Title from '../../Title/Title';\nimport React, { Component } from 'react';\nimport styles from './NewProposal.module.scss';\nimport DelegateVote from '../DelegateVote/DelegateVote';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport GovernanceUtil from '../../utilities/GovernanceUtil';\nimport DashboardCard from '../../DashboardCard/DashboardCard';\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\nimport { Flex, Text, Heading, Input, Form, Field, Textarea, Icon, Select, Link } from \"rimble-ui\";\n\nclass NewProposal extends Component {\n\n  state = {\n    title:'',\n    actions:[],\n    txError:false,\n    actionValue:0,\n    customABI:null,\n    description:'',\n    processing: {\n      txHash:null,\n      loading:false\n    },\n    validated:false,\n    newAction:false,\n    editAction:null,\n    actionInputs:null,\n    actionValid:false,\n    customAddress:null,\n    contractOptions:[],\n    proposalCreated:false,\n    functionsOptions:null,\n    selectedContract:null,\n    selectedFunction:null,\n    selectedSignature:null,\n    availableFunctions:null,\n    availableContracts:null\n  }\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const customABIChanged = prevState.customABI !== this.state.customABI;\n    // console.log('customABIChanged',customABIChanged,this.state.selectedContract);\n    if (customABIChanged && this.state.selectedContract === 'custom'){\n      this.loadFunctionsOptions();\n    }\n  }\n\n  loadData(){\n    const availableContracts = this.functionsUtil.getGlobalConfig(['governance','props','availableContracts']);\n    const contractOptions = [\n      {label:'Select a Contract',value:null}\n    ];\n\n    Object.keys(availableContracts).forEach( contractName => {\n      contractOptions.push({label:contractName,value:contractName});\n    });\n\n    contractOptions.push({label:'Custom',value:'custom'});\n\n    this.setState({\n      contractOptions,\n      availableContracts\n    });\n  }\n\n  handleInput(field,e,type=null){\n    let value = e.target.value;\n    this.setState({\n      [field]:value\n    });\n  }\n\n  validateForm(){\n    const validated = this.state.title.length>0 && this.state.description.length>0 && Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getContractABI(selectedContract=null){\n    selectedContract = selectedContract ? selectedContract : this.state.selectedContract;\n\n    let contractABI = null;\n    try {\n      contractABI = selectedContract === 'custom' ? JSON.parse(this.state.customABI) : this.state.availableContracts[selectedContract];\n    } catch (err) {\n      \n    }\n    return contractABI;\n  }\n\n  loadFunctionsOptions(selectedContract=null){\n    let actionInputs = null;\n    let functionsOptions = null;\n    let selectedFunction = null;\n    let selectedSignature = null;\n    let availableFunctions = null;\n\n    const contractABI = this.getContractABI(selectedContract);\n    if (contractABI){\n      availableFunctions = contractABI.filter( f => (!f.constant && f.type === 'function' && f.inputs.length>0 && ['nonpayable','payable'].includes(f.stateMutability)) )\n      functionsOptions = availableFunctions.map( (f,index) => ({\n                          label:f.name,\n                          value:index\n                        }));\n\n      // Add default option\n      functionsOptions.unshift({label:'Select a Function',value:null});\n    }\n\n    // console.log('loadFunctionsOptions',contractABI,functionsOptions);\n\n    this.setState({\n      actionInputs,\n      functionsOptions,\n      selectedFunction,\n      selectedSignature,\n      availableFunctions\n    });\n  }\n\n  changeContract(e){\n    const selectedContract = e.target.value;\n    const selectedContractChanged = selectedContract !== this.state.selectedContract;\n\n    if (selectedContractChanged){\n\n      // Reset function\n      let selectedFunction = null;\n      let selectedSignature = null;\n\n      const newState = {\n        selectedContract,\n        selectedFunction,\n        selectedSignature\n      };\n\n      // Load contract functions\n      if (selectedContract !== null){\n        const contractABI = this.getContractABI(selectedContract);\n        if (contractABI){\n          this.loadFunctionsOptions(selectedContract);\n        } else {\n          newState.functionsOptions = null;\n        }\n      }\n\n      // console.log('changeContract',newState);\n\n      this.setState(newState);\n    }\n  }\n\n  changeFunction(e){\n    const actionValue = 0;\n    let actionInputs = null;\n    const selectedSignature = e.target.value;\n    let selectedFunction = this.state.availableFunctions.find( (f,index) => (index === parseInt(selectedSignature)) );\n\n    if (selectedFunction){\n      actionInputs = new Array(selectedFunction.inputs.length);\n    } else {\n      selectedFunction  = null;\n    }\n\n    this.setState({\n      actionValue,\n      actionInputs,\n      selectedFunction,\n      selectedSignature\n    })\n  }\n  validateField(value,type){\n    if (value===null){\n      return false;\n    }\n    let valid = true;\n    if (type === 'json'){\n      valid = this.functionsUtil.isValidJSON(value);\n    } else {\n      const fieldPattern = this.getPatternByFieldType(type);\n      if (fieldPattern){\n        valid = value.toString().match(fieldPattern) !== null;\n      }\n    }\n    return valid;\n  }\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs || !this.state.selectedFunction){\n      return false;\n    }\n\n    const inputs = this.state.selectedFunction.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    // Check custom token\n    if (actionValid && this.state.selectedContract === 'custom'){\n      actionValid = actionValid && this.validateField(this.state.customABI,'json') && this.validateField(this.state.customAddress,'address');\n    }\n\n    // console.log('actionValid',this.state.selectedContract,this.validateField(this.state.customABI,'json'),this.state.customAddress,this.validateField(this.state.customAddress,'address'),actionValid);\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n        const selectedContract = null;\n        const selectedFunction = null;\n        const selectedSignature = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs,\n          selectedContract,\n          selectedFunction,\n          selectedSignature\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.selectedFunction.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.BNify(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.BNify(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.selectedFunction.inputs.length){\n      return false;\n    }\n\n    // Check contract\n    let target = null;\n    if (this.state.selectedContract !== 'custom'){\n      const contract = this.functionsUtil.getContractByName(this.state.selectedContract);\n      if (!contract){\n        return false;\n      } else {\n        target = contract._address;\n      }\n    } else {\n      const contractABIValid = this.functionsUtil.isValidJSON(this.state.customABI);\n      if (!contractABIValid){\n        return false;\n      } else {\n        target = this.state.customAddress;\n      }\n    }\n    \n    const customABI = this.state.customABI;\n    const customAddress = this.state.customAddress;\n    const inputTypes = this.state.selectedFunction.inputs.map( i => (i.type) );\n    const calldata = this.props.web3.eth.abi.encodeParameters(inputTypes,inputs);\n    const signature = this.state.selectedFunction.name+'('+inputTypes.join(',')+')';\n    const value = this.state.actionValue ? this.functionsUtil.BNify(this.state.actionValue).toFixed(0) : this.functionsUtil.BNify(0).toFixed(0);\n\n    const action = {\n      params:{\n        value,\n        target,\n        calldata,\n        signature\n      },\n      customABI,\n      customAddress,\n      inputs:this.state.actionInputs,\n      function:this.state.selectedFunction,\n      contract:this.state.selectedContract,\n      signature:this.state.selectedSignature\n    };\n\n    console.log(inputs,action);\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n    const customABI = action.customABI;\n    const actionValue = action.params.value;\n    const selectedContract = action.contract;\n    const selectedFunction = action.function;\n    const customAddress = action.customAddress;\n    const selectedSignature = action.signature;\n\n    this.setState({\n      customABI,\n      newAction,\n      editAction,\n      actionValue,\n      actionInputs,\n      customAddress,\n      selectedContract,\n      selectedFunction,\n      selectedSignature\n    });\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n    const selectedContract = null;\n    const selectedFunction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n      selectedContract,\n      selectedFunction\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  handleSubmit(e){\n    e.preventDefault();\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventAction: 'propose',\n        eventCategory: 'Proposal',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx.status === 'success';\n\n      const newState = {\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      };\n      \n      if (txSucceeded){\n        newState.actionValue = 0;\n        newState.customABI = null;\n        newState.newAction = null;\n        newState.editAction = null;\n        newState.actionInputs = null;\n        newState.customAddress = null;\n        newState.proposalCreated = true;\n        newState.selectedContract = null;\n        newState.functionsOptions = null;\n        newState.selectedFunction = null;\n        newState.selectedSignature = null;\n      } else {\n        newState.txError = true;\n      }\n\n      this.setState(newState);\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const targets = [];\n    const values = [];\n    const signatures = [];\n    const calldatas = [];\n    const description = '#'+this.state.title+\"\\n\"+this.state.description;\n\n    Object.values(this.state.actions).forEach( action => {\n      values.push(action.params.value);\n      targets.push(action.params.target);\n      calldatas.push(action.params.calldata);\n      signatures.push(action.params.signature);\n    });\n\n    this.governanceUtil.propose(targets, values, signatures, calldatas, description, callback, callbackReceipt);\n    // this.governanceUtil.proposeAndVoteFor(targets, values, signatures, calldatas, description, callback, callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  formValidated(){\n\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Title\n          mb={[3,4]}\n        >\n          Create Proposal\n        </Title>\n        {\n        this.state.proposalCreated ? (\n          <DashboardCard\n            cardProps={{\n              py:3,\n              px:4,\n              width:[1,'auto']\n            }}\n          >\n            <Flex\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Icon\n                name={'Done'}\n                align={'center'}\n                size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                color={this.props.theme.colors.transactions.status.completed}\n              />\n              <Text\n                mt={1}\n                fontWeight={3}\n                fontSize={[2,3]}\n                color={'dark-gray'}\n                textAlign={'center'}\n              >\n                The proposal has been successfully created\n              </Text>\n            </Flex>\n          </DashboardCard>\n        ) : \n        // Has balance\n        this.props.votes && this.props.votes.gte(this.props.proposalThreshold) ? (\n          <Form\n            width={1}\n            validated={this.state.validated}\n            onSubmit={this.handleSubmit.bind(this)}\n          >\n            <Flex\n              mb={2}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={['center','space-between']}\n            >\n              <Flex\n                width={[1,0.48]}\n                flexDirection={'column'}\n              >\n                <Flex\n                  pb={2}\n                  width={1}\n                  mb={[2,3]}\n                  borderColor={'divider'}\n                  borderBottom={'1px solid transparent'}\n                >\n                  <Heading.h4\n                    fontSize={[2,3]}\n                    fontWeight={[2,3]}\n                  >\n                    Proposal Description\n                  </Heading.h4>\n                </Flex>\n                <Flex\n                  flexDirection={'column'}\n                >\n                  <Field\n                    width={1}\n                    label={\"Title\"}\n                    validated={this.state.validated}\n                  >\n                    <Input\n                      required\n                      width={1}\n                      type={'text'}\n                      className={styles.input}\n                      value={this.state.title}\n                      placeholder={'Title of your proposal'}\n                      onChange={ e => this.handleInput('title',e) }\n                    />\n                  </Field>\n                </Flex>\n                <Flex\n                  flexDirection={'column'}\n                >\n                  <Field\n                    width={1}\n                    label={'Description'}\n                    validated={this.state.validated}\n                  >\n                    <Textarea\n                      required\n                      rows={8}\n                      width={1}\n                      className={styles.input}\n                      value={this.state.description}\n                      placeholder={'Description of your proposal'}\n                      onChange={ e => this.handleInput('description',e) }\n                    />\n                  </Field>\n                </Flex>\n              </Flex>\n\n              <Flex\n                width={[1,0.48]}\n                flexDirection={'column'}\n              >\n                <Flex\n                  pb={2}\n                  width={1}\n                  mb={[2,3]}\n                  borderColor={'divider'}\n                  borderBottom={'1px solid transparent'}\n                >\n                  <Heading.h4\n                    fontSize={[2,3]}\n                    fontWeight={[2,3]}\n                  >\n                    Actions\n                  </Heading.h4>\n                </Flex>\n                <Flex\n                  flexDirection={'column'}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          handleClick={ e => this.setEditAction(actionIndex) }\n                          title={ this.state.editAction === actionIndex ? 'Edit Action' : null }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Field\n                                  style={{\n                                    width:'100%',\n                                    display:'flex',\n                                    alignItems:'stretch',\n                                    flexDirection:'column'\n                                  }}\n                                  label={\"Select Contract\"}\n                                >\n                                  <Select\n                                    style={{\n                                      width:'100%'\n                                    }}\n                                    required={true}\n                                    value={this.state.selectedContract}\n                                    options={this.state.contractOptions}\n                                    onChange={this.changeContract.bind(this)}\n                                  />\n                                </Field>\n                                {\n                                  this.state.selectedContract && this.state.selectedContract === 'custom' &&\n                                  (\n                                    <Flex\n                                      width={1}\n                                      flexDirection={'column'}\n                                    >\n                                      <Field\n                                        width={1}\n                                        label={\"Contract Address\"}\n                                        validated={this.state.validated}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={'text'}\n                                          className={styles.input}\n                                          placeholder={'Custom contract address'}\n                                          pattern={this.getPatternByFieldType('address',true)}\n                                          onChange={ e => this.handleInput('customAddress',e,'address') }\n                                          value={this.state.customAddress ? this.state.customAddress : ''}\n                                        />\n                                      </Field>\n                                      <Field\n                                        width={1}\n                                        label={'Custom ABI'}\n                                        validated={this.state.validated}\n                                      >\n                                        <Textarea\n                                          required\n                                          rows={8}\n                                          width={1}\n                                          className={styles.input}\n                                          placeholder={'Insert the ABI of your contract'}\n                                          onChange={ e => this.handleInput('customABI',e,'json') }\n                                          value={this.state.customABI ? this.state.customABI : ''}\n                                        />\n                                      </Field>\n                                    </Flex>\n                                  )\n                                }\n                                {\n                                  this.state.selectedContract && this.state.functionsOptions &&\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      label={\"Select Function\"}\n                                    >\n                                      <Select\n                                        style={{\n                                          width:'100%'\n                                        }}\n                                        required={true}\n                                        options={this.state.functionsOptions}\n                                        onChange={this.changeFunction.bind(this)}\n                                        value={this.state.selectedSignature ? this.state.selectedSignature : ''}\n                                      />\n                                    </Field>\n                                }\n                                {\n                                  this.state.selectedFunction && this.state.selectedFunction.payable && (\n                                    <Field\n                                      label={`Value`}\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={'number'}\n                                        className={styles.input}\n                                        placeholder={`Enter ETH value`}\n                                        onChange={ e => this.valueChange(e) }\n                                        value={this.state.actionValue ? this.state.actionValue : 0}\n                                      />\n                                    </Field>\n                                  )\n                                }\n                                {\n                                  this.state.selectedFunction &&\n                                    this.state.selectedFunction.inputs.map( (input,inputIndex) => {\n                                      const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                      const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                      return (\n                                        <Field\n                                          style={{\n                                            width:'100%',\n                                            display:'flex',\n                                            alignItems:'stretch',\n                                            flexDirection:'column'\n                                          }}\n                                          key={`input_${inputIndex}`}\n                                          label={`${input.name} (${input.type})`}\n                                        >\n                                          <Input\n                                            required\n                                            width={1}\n                                            type={fieldType}\n                                            pattern={fieldPattern}\n                                            className={styles.input}\n                                            placeholder={`${input.name} (${input.type})`}\n                                            onChange={ e => this.inputChange(e,inputIndex) }\n                                            value={this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                          />\n                                        </Field>\n                                      )\n                                    })\n                                }\n                                {\n                                  this.state.selectedContract && this.state.selectedFunction &&\n                                    <Flex\n                                      mb={2}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'column'}\n                                      justifyContent={'center'}\n                                    >\n                                      <RoundButton\n                                        buttonProps={{\n                                          px:[0,4],\n                                          width:[1,'auto'],\n                                          type:'button',\n                                          disabled:!this.state.actionValid\n                                        }}\n                                        handleClick={this.addAction.bind(this)}\n                                      >\n                                        Save Action\n                                      </RoundButton>\n                                      <Link\n                                        mt={2}\n                                        color={'red'}\n                                        hoverColor={'red'}\n                                        onClick={this.deleteAction.bind(this)}\n                                      >\n                                        Delete Action\n                                      </Link>\n                                    </Flex>\n                                }\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {action.contract} - {action.params.signature}\n                                </Text>\n                                <Flex\n                                  p={['4px','7px']}\n                                  borderRadius={'50%'}\n                                  alignItems={'center'}\n                                  justifyContent={'center'}\n                                  backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                >\n                                  <Icon\n                                    name={'Edit'}\n                                    align={'center'}\n                                    color={'redeem'}\n                                    size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                  />\n                                </Flex>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.actions || Object.values(this.state.actions).length<this.props.proposalMaxOperations) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Action' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={\"Select Contract\"}\n                              >\n                                <Select\n                                  style={{\n                                    width:'100%'\n                                  }}\n                                  required={true}\n                                  options={this.state.contractOptions}\n                                  onChange={this.changeContract.bind(this)}\n                                />\n                              </Field>\n                              {\n                                this.state.selectedContract && this.state.selectedContract === 'custom' &&\n                                (\n                                  <Flex\n                                    width={1}\n                                    flexDirection={'column'}\n                                  >\n                                    <Field\n                                      width={1}\n                                      label={\"Contract Address\"}\n                                      validated={this.state.validated}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={'text'}\n                                        className={styles.input}\n                                        placeholder={'Custom contract address'}\n                                        pattern={this.getPatternByFieldType('address',true)}\n                                        onChange={ e => this.handleInput('customAddress',e,'address') }\n                                        value={this.state.customAddress ? this.state.customAddress : ''}\n                                      />\n                                    </Field>\n                                    <Field\n                                      width={1}\n                                      label={'Custom ABI'}\n                                      validated={this.state.validated}\n                                    >\n                                      <Textarea\n                                        required\n                                        rows={8}\n                                        width={1}\n                                        className={styles.input}\n                                        placeholder={'Insert the ABI of your contract'}\n                                        onChange={ e => this.handleInput('customABI',e,'json') }\n                                        value={this.state.customABI ? this.state.customABI : ''}\n                                      />\n                                    </Field>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.selectedContract && this.state.functionsOptions && \n                                  <Field\n                                    style={{\n                                      width:'100%',\n                                      display:'flex',\n                                      alignItems:'stretch',\n                                      flexDirection:'column'\n                                    }}\n                                    label={\"Select Function\"}\n                                  >\n                                    <Select\n                                      style={{\n                                        width:'100%'\n                                      }}\n                                      required={true}\n                                      options={this.state.functionsOptions}\n                                      onChange={this.changeFunction.bind(this)}\n                                      value={this.state.selectedSignature ? this.state.selectedSignature : ''}\n                                    />\n                                  </Field>\n                              }\n                              {\n                                this.state.selectedFunction && this.state.selectedFunction.payable && (\n                                  <Field\n                                    label={`Value`}\n                                    style={{\n                                      width:'100%',\n                                      display:'flex',\n                                      alignItems:'stretch',\n                                      flexDirection:'column'\n                                    }}\n                                  >\n                                    <Input\n                                      required\n                                      width={1}\n                                      type={'number'}\n                                      className={styles.input}\n                                      placeholder={`Enter ETH value`}\n                                      onChange={ e => this.valueChange(e) }\n                                      value={this.state.actionValue ? this.state.actionValue : 0}\n                                    />\n                                  </Field>\n                                )\n                              }\n                              {\n                                this.state.selectedFunction &&\n                                  this.state.selectedFunction.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          className={styles.input}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                              }\n                              {\n                                this.state.selectedContract && this.state.selectedFunction &&\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                  >\n                                    <RoundButton\n                                      buttonProps={{\n                                        px:[0,4],\n                                        type:'button',\n                                        width:[1,'auto'],\n                                        disabled:!this.state.actionValid\n                                      }}\n                                      handleClick={this.addAction.bind(this)}\n                                    >\n                                      Add Action\n                                    </RoundButton>\n                                  </Flex>\n                              }\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Action\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n\n                </Flex>\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                // Sending transaction\n                this.state.processing && this.state.processing.loading ? (\n                  <TxProgressBar\n                    web3={this.props.web3}\n                    hash={this.state.processing.txHash}\n                    waitText={`Proposal creation estimated in`}\n                    endMessage={`Finalizing proposal creation request...`}\n                    cancelTransaction={this.cancelTransaction.bind(this)}\n                  />\n                ) : (\n                  <RoundButton\n                    buttonProps={{\n                      type:'submit',\n                      width:[1,'15em'],\n                      disabled:!this.state.validated\n                    }}\n                  >\n                    Submit Proposal\n                  </RoundButton>\n                )\n              }\n            </Flex>\n          </Form>\n        ) : this.props.balance && this.props.balance.gte(this.props.proposalThreshold) ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            <Text\n              mb={3}\n              fontWeight={2}\n              fontSize={[2,3]}\n              color={'dark-gray'}\n              textAlign={'center'}\n            >\n              Please delegate your votes to yourself to create a new proposal.\n            </Text>\n            <DelegateVote\n              {...this.props}\n            />\n          </Flex>\n        ) : (\n          <Text\n            fontWeight={2}\n            fontSize={[2,3]}\n            color={'dark-gray'}\n            textAlign={'center'}\n          >\n            You need at least {this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(this.props.proposalThreshold,18),0)} delegated votes to send a new proposal.\n          </Text>\n        )\n       }\n      </Flex>\n    );\n  }\n}\n\nexport default NewProposal;","import React, { Component } from 'react';\nimport { Flex, Text, Box, Link } from \"rimble-ui\";\nimport FlexLoader from '../../FlexLoader/FlexLoader';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport DelegateVote from '../DelegateVote/DelegateVote';\nimport ProposalField from '../ProposalField/ProposalField';\nimport GovernanceUtil from '../../utilities/GovernanceUtil';\nimport DashboardCard from '../../DashboardCard/DashboardCard';\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\n\nclass CastVote extends Component {\n\n  state = {\n    vote:null,\n    loaded:false,\n    userVote:null,\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    voteSucceed:false,\n    showDelegateBox:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    if (this.props.account){\n      const userVote = this.props.proposal.votes.find( v => (v.voter.toLowerCase() === this.props.account.toLowerCase()) );\n      this.setState({\n        userVote,\n        loaded:true\n      });\n    }\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  toggleDelegateBox(showDelegateBox){\n    this.setState({\n      showDelegateBox\n    });\n  }\n\n  castVote(){\n\n    if (this.state.vote === null){\n      return false;\n    }\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Proposal',\n        eventAction: 'CastVote',\n        eventLabel: this.state.vote\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      let userVote = null;\n      const txSucceeded = tx.status === 'success';\n      if (txSucceeded){\n        userVote = {\n          voter:this.props.account,\n          votes:this.props.votes.toString(),\n          support:this.state.vote === 'for',\n          proposalId:this.props.proposal.id,\n        };\n\n        if (typeof this.props.callback === 'function'){\n          this.props.callback();\n        }\n      }\n\n\n      this.setState({\n        userVote,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const vote = this.state.vote === 'for';\n    const proposalId = this.props.proposal.id;\n\n    console.log(proposalId,vote);\n\n    this.governanceUtil.castVote(proposalId,vote,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  setVote = (vote) => {\n    this.setState({\n      vote\n    });\n  }\n\n  render() {\n    return this.state.userVote ? (\n\n        <Flex\n          p={3}\n          width={1}\n          mb={[2,3]}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Text\n            mb={2}\n            fontWeight={4}\n            fontSize={[2,3]}\n            color={'dark-gray'}\n            textAlign={'center'}\n          >\n            You have voted for the proposal #{this.props.proposal.id}:\n          </Text>\n          <DashboardCard\n            cardProps={{\n              mb:2,\n              py:[2,3],\n              px:[3,4],\n              width:'auto'\n            }}\n            isInteractive={false}\n          >\n            <Flex\n              my={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <ProposalField\n                fieldInfo={{\n                  name:'statusIcon',\n                  state: this.state.userVote.support ? 'Executed' : 'Canceled',\n                  props:{\n                    mr:2\n                  }\n                }}\n              />\n              <Text\n                fontWeight={3}\n                fontSize={[2,3]}\n              >\n                {this.state.userVote.support ? 'For' : 'Against'}\n              </Text>\n            </Flex>\n          </DashboardCard>\n          <Text\n            fontSize={1}\n            fontWeight={500}\n            color={'statValue'}\n            textAlign={'center'}\n          >\n            voted with {this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(this.state.userVote.votes,18).toFixed(0,1),0)} votes\n          </Text>\n        </Flex>\n      ) : this.props.proposal.state === 'Active' && (\n        <Box\n          p={3}\n          width={1}\n          mb={[2,3]}\n        >\n          {\n            // Data not loaded yet\n            !this.state.loaded ? (\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row',\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading data...'}\n              />\n            ) :\n            // No votes delegated\n            (!this.props.votes || this.props.votes.lte(0) || this.state.showDelegateBox) ? (\n              <DelegateVote\n                {...this.props}\n                canClose={this.state.showDelegateBox}\n                closeFunc={ e => this.toggleDelegateBox(false) }\n              />\n            ) : (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text\n                  mb={2}\n                  fontWeight={4}\n                  fontSize={[2,3]}\n                  color={'dark-gray'}\n                  textAlign={'center'}\n                >\n                  Cast your vote for the proposal #{this.props.proposal.id}:\n                </Text>\n                {\n                  this.state.processing && this.state.processing.loading ? (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        web3={this.props.web3}\n                        waitText={`Vote estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing vote request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Flex\n                        mb={2}\n                        width={[1,0.4]}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:[2,3],\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setVote('for');\n                            }\n                          }}\n                          isInteractive={true}\n                          isActive={ this.state.vote === 'for' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <ProposalField\n                              fieldInfo={{\n                                name:'statusIcon',\n                                state:'Executed',\n                                props:{\n                                  mr:2\n                                }\n                              }}\n                            />\n                            <Text\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                            >\n                              For\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:[2,3],\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setVote('against');\n                            }\n                          }}\n                          isInteractive={true}\n                          isActive={ this.state.vote === 'against' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <ProposalField\n                              fieldInfo={{\n                                name:'statusIcon',\n                                state:'Canceled',\n                                props:{\n                                  mr:2\n                                }\n                              }}\n                            />\n                            <Text\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                            >\n                              Against\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Text\n                        mb={0}\n                        fontSize={1}\n                        fontWeight={500}\n                        color={'statValue'}\n                        textAlign={'center'}\n                      >\n                        You have {this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(this.props.votes,18).toFixed(0,1),0)} votes delegated\n                      </Text>\n                      {\n                        this.props.balance && this.props.balance.gt(0) &&\n                          <Link\n                            mt={0}\n                            mainColor={'primary'}\n                            hoverColor={'primary'}\n                            onClick={ e => this.toggleDelegateBox(true) }\n                          >\n                            change delegate\n                          </Link>\n                      }\n                      <RoundButton\n                        buttonProps={{\n                          mt:2,\n                          width:[1,0.2],\n                          disabled:this.state.vote === null\n                        }}\n                        handleClick={this.castVote.bind(this)}\n                      >\n                        Vote\n                      </RoundButton>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            )\n          }\n        </Box>\n      );\n  }\n}\n\nexport default CastVote;","import Title from '../../Title/Title';\nimport React, { Component } from 'react';\nimport CastVote from '../CastVote/CastVote';\nimport StatsCard from '../../StatsCard/StatsCard';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport { Box, Flex, Blockie, Text, Link } from \"rimble-ui\";\nimport ProposalField from '../ProposalField/ProposalField';\nimport GovernanceUtil from '../../utilities/GovernanceUtil';\nimport ShortHash from \"../../utilities/components/ShortHash\";\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../../DashboardCard/DashboardCard';\n\nclass ProposalDetails extends Component {\n\n  state = {\n    showActionParams:null,\n    processing:{\n      action:null,\n      txHash:null,\n      loading:false\n    },\n  };\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  toggleShowParams(showActionParams){\n    // Reset show action params\n    if (this.state.showActionParams === showActionParams){\n      showActionParams = null;\n    }\n    this.setState({\n      showActionParams\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        action:null,\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async queueProposal(){\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'queue',\n        eventCategory: 'Governance',\n        eventLabel: this.props.proposal.id\n      };\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      if (typeof this.props.loadData === 'function' && tx.status === 'success'){\n        this.props.loadData();\n      }\n\n      this.setState({\n        processing: {\n          action:null,\n          txHash:null,\n          loading:false\n        }\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.governanceUtil.queueProposal(this.props.proposal.id,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true,\n        action:'Queue'\n      }\n    }));\n  }\n\n  async executeProposal(){\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'execute',\n        eventCategory: 'Governance',\n        eventLabel: this.props.proposal.id\n      };\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      if (typeof this.props.loadData === 'function' && tx.status === 'success'){\n        this.props.loadData();\n      }\n\n      this.setState({\n        processing: {\n          action:null,\n          txHash:null,\n          loading:false\n        }\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.governanceUtil.executeProposal(this.props.proposal.id,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true,\n        action:'Execute'\n      }\n    }));\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n\n    window.loadData = this.props.loadData;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    let proposal = this.props.proposal;\n    const lastState = Object.values(proposal.states).pop();\n    const hasVotes = proposal.votes && proposal.votes.length>0;\n    const forVotes = this.functionsUtil.BNify(proposal.forVotes).div(1e18);\n    const againstVotes = this.functionsUtil.BNify(proposal.againstVotes).div(1e18);\n    const totalVotes = forVotes.plus(againstVotes);\n    const forVotesPerc = forVotes.div(totalVotes).times(100).toFixed(2);\n    const againstVotesPerc = againstVotes.div(totalVotes).times(100).toFixed(2);\n    const forVotesAddrs = proposal.votes.filter( v => (v.support) ).sort( (a,b) => (this.functionsUtil.BNify(a.votes).lt(this.functionsUtil.BNify(b.votes)) ? 1 : -1) );\n    const againstVotesAddrs = proposal.votes.filter( v => (!v.support) ).sort( (a,b) => (this.functionsUtil.BNify(a.votes).lt(this.functionsUtil.BNify(b.votes)) ? 1 : -1) );\n\n    const canQueue = proposal.state.toLowerCase() === 'succeeded'; \n    const canExecute = proposal.state.toLowerCase() === 'queued';\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={[3,4]}\n        >\n          {proposal.title}\n        </Title>\n        <Flex\n          mb={3}\n          width={1}\n          alignItems={'center'}\n          justifyContent={'center'}\n          flexDirection={['column','row']}\n        >\n          <Flex\n            mb={[2,0]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              labelTooltip={null}\n              title={'Proposal ID'}\n              value={`#${proposal.id}`}\n              minHeight={['110px','143px']}\n              titleMinHeight={['auto','50px']}\n              label={`Created on ${this.functionsUtil.strToMoment(proposal.states[0].start_time*1000).format('DD MMM, YYYY')}`}\n            />\n          </Flex>\n          <Flex\n            mb={[2,0]}\n            pl={[0,1]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              titleMinHeight={['auto','50px']}\n              minHeight={['110px','143px']}\n              labelTooltip={ null }\n              title={'Proposer'}\n              label={null}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Blockie\n                  opts={{\n                    size: 12,\n                    color: \"#dfe\",\n                    bgcolor: \"#a71\",\n                    spotcolor: \"#000\",\n                    seed: proposal.address,\n                  }}\n                />\n                <ShortHash\n                  ml={2}\n                  lineHeight={1}\n                  fontSize={[3,4]}\n                  fontWeight={[3,4]}\n                  color={'statValue'}\n                  hash={proposal.proposer}\n                />\n              </Flex>\n            </StatsCard>\n          </Flex>\n          <Flex\n            mb={[2,0]}\n            pl={[0,1]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              title={'Status'}\n              labelTooltip={ null }\n              minHeight={['110px','143px']}\n              titleMinHeight={['auto','50px']}\n              label={`Updated on ${this.functionsUtil.strToMoment(lastState.start_time*1000).format('DD MMM, YYYY')}`}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <ProposalField\n                  {...this.props}\n                  proposal={proposal}\n                  fieldInfo={{\n                    name:'statusIcon',\n                    props:{\n                      size: this.props.isMobile ? '1.7em' : '2em'\n                    }\n                  }}\n                />\n                <Text\n                  ml={2}\n                  lineHeight={1}\n                  fontSize={[4,5]}\n                  fontWeight={[3,4]}\n                  color={'statValue'}\n                >\n                  {proposal.state}\n                </Text>\n              </Flex>\n            </StatsCard>\n          </Flex>\n          <Flex\n            pl={[0,1]}\n            mb={[2,0]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              label={null}\n              title={'Total Votes'}\n              labelTooltip={ null }\n              minHeight={['110px','143px']}\n              titleMinHeight={['auto','50px']}\n              value={this.functionsUtil.formatMoney(totalVotes.toFixed(0,1),0)}\n            />\n          </Flex>\n        </Flex>\n        <CastVote\n          {...this.props}\n          callback={this.props.loadData}\n        />\n        <Flex\n          width={1}\n          mb={[2,3]}\n          id={'details-container'}\n          justifyContent={'space-between'}\n          flexDirection={['column','row']}\n        >\n          <DashboardCard\n            cardProps={{\n              p:3,\n              mb:[2,0],\n              mr:[0,1],\n              width:[1,1/2]\n            }}\n            title={'Actions'}\n            titleParentProps={{\n              mt:0,\n              ml:0\n            }}\n          >\n            <Flex\n              pt={2}\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                proposal.actions.signatures.map( (action,actionIndex) => {\n                  const data = proposal.actions.calldatas[actionIndex];\n                  // const targetAddr = proposal.actions.targets[actionIndex];\n\n                  let decodedParams = null;\n                  let attrs = action.match(/\\(([a-z0-9,]+(\\[\\])?)\\)/i);\n                  attrs = attrs ? attrs[1].split(',') : null;\n\n                  if (attrs){\n                    decodedParams = this.props.web3.eth.abi.decodeParameters(attrs,data);\n                    if (decodedParams){\n                      decodedParams = Object.values(decodedParams).splice(0,attrs.length);\n                    }\n                  }\n\n                  return (\n                    <Flex\n                      py={1}\n                      width={1}\n                      flexDirection={'column'}\n                      alignItems={'flex-start'}\n                      key={`action_${actionIndex}`}\n                      justifyContent={'flex-start'}\n                      borderBottom={`1px solid ${this.props.theme.colors['near-white']}`}\n                    >\n                      <Flex\n                        mb={1}\n                        width={1}\n                        flexDirection={['column','row']}\n                        alignItems={['flex-start','center']}\n                      >\n                        <Flex\n                          flexDirection={'row'}\n                        >\n                          <Text\n                            fontSize={1}\n                            fontWeight={3}\n                            color={'dark-gray'}\n                          >\n                            {parseInt(actionIndex)+1}\n                          </Text>\n                          <Text\n                            ml={2}\n                            fontSize={1}\n                            fontWeight={2}\n                            color={'dark-gray'}\n                          >\n                            {action}\n                          </Text>\n                        </Flex>\n                        {\n                          decodedParams &&\n                            <Link\n                              mt={[1,0]}\n                              ml={[0,1]}\n                              fontSize={1}\n                              fontWeight={2}\n                              textAlign={'left'}\n                              lineHeight={'initial'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.toggleShowParams(actionIndex) }\n                            >\n                              {\n                                this.state.showActionParams === actionIndex ? '(hide params)' : '(show params)'\n                              }\n                            </Link>\n                        }\n                      </Flex>\n                      {\n                        decodedParams && this.state.showActionParams === actionIndex &&\n                          <Flex\n                            pl={[0,3]}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            {\n                              decodedParams.map( (param,paramIndex) => (\n                                <Text\n                                  fontSize={0}\n                                  color={'statValue'}\n                                  key={`param_${paramIndex}`}\n                                >\n                                  {param}\n                                </Text>\n                              ))\n                            }\n                          </Flex>\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n          </DashboardCard>\n          <DashboardCard\n            cardProps={{\n              p:3,\n              ml:[0,1],\n              width:[1,1/2]\n            }}\n          >\n            <Flex\n              mb={2}\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n              >\n                Proposal History\n              </Text>\n              <Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n              >\n                Date\n              </Text>\n            </Flex>\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                proposal.states.map( (stateInfo,stateIndex) => {\n                  return (\n                    <Flex\n                      py={2}\n                      width={1}\n                      alignItems={'center'}\n                      key={`state_${stateIndex}`}\n                      justifyContent={'space-between'}\n                      borderBottom={`1px solid ${this.props.theme.colors['near-white']}`}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <ProposalField\n                          {...this.props}\n                          proposal={proposal}\n                          fieldInfo={{\n                            name:'statusIcon',\n                            state:stateInfo.state,\n                            props:{\n                              size: this.props.isMobile ? '1.3em' : '1.5em'\n                            }\n                          }}\n                        />\n                        <Link\n                          ml={2}\n                          fontSize={1}\n                          fontWeight={2}\n                          target={'_blank'}\n                          textAlign={'left'}\n                          color={'dark-gray'}\n                          lineHeight={'initial'}\n                          hoverColor={'primary'}\n                          rel={'nofollow noopener noreferrer'}\n                          href={this.functionsUtil.getEtherscanTransactionUrl(stateInfo.trx_hash)}\n                        >\n                          {stateInfo.state}\n                        </Link>\n                      </Flex>\n                      <Text\n                        fontSize={1}\n                        fontWeight={2}\n                        textAlign={'left'}\n                        color={'dark-gray'}\n                        lineHeight={'initial'}\n                      >\n                        {this.functionsUtil.strToMoment(stateInfo.start_time*1000).format('DD MMM, YYYY')}\n                      </Text>\n                    </Flex>\n                  );\n                })\n              }\n              {\n                this.state.processing && this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      web3={this.props.web3}\n                      hash={this.state.processing.txHash}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.state.processing.action} estimated in`}\n                      endMessage={`Finalizing ${this.state.processing.action.toLowerCase()} request...`}\n                    />\n                  </Flex>\n                ) : canQueue ? (\n                  <RoundButton\n                    buttonProps={{\n                      mt:3,\n                      width:[1,'auto'],\n                    }}\n                    handleClick={this.queueProposal.bind(this)}\n                  >\n                    Queue Proposal\n                  </RoundButton>\n                ) : canExecute && (\n                  <RoundButton\n                    buttonProps={{\n                      mt:3,\n                      width:[1,'auto'],\n                    }}\n                    handleClick={this.executeProposal.bind(this)}\n                  >\n                    Execute Proposal\n                  </RoundButton>\n                )\n              }\n            </Flex>\n          </DashboardCard>\n        </Flex>\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mb:[2,3]\n          }}\n          title={'Details'}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n        >\n          <Text\n            mt={2}\n            fontSize={[1,2]}\n            style={{\n              wordBreak:'break-word'\n            }}\n            dangerouslySetInnerHTML={{\n              __html:proposal.description.replace(/\\n/g,\"<br />\")\n            }}\n          >\n          </Text>\n        </DashboardCard>\n        {\n          hasVotes && \n            <DashboardCard\n              cardProps={{\n                p:3,\n                mb:[2,3]\n              }}\n            >\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={2}\n                  width={1}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <Text\n                    fontWeight={4}\n                    fontSize={[2,3]}\n                    textAlign={'left'}\n                    color={'dark-gray'}\n                    lineHeight={'initial'}\n                  >\n                    For ({forVotesPerc}%)\n                  </Text>\n                  <Text\n                    fontWeight={4}\n                    fontSize={[2,3]}\n                    textAlign={'left'}\n                    color={'dark-gray'}\n                    lineHeight={'initial'}\n                  >\n                    Against ({againstVotesPerc}%)\n                  </Text>\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  height={'20px'}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  id={'votes-cursor-container'}\n                >\n                  <Flex\n                    width={1/2}\n                    height={'100%'}\n                    justifyContent={'flex-end'}\n                    borderRadius={'20px 0 0 20px'}\n                    style={{background:'rgba(0, 211, 149, 0.1)'}}\n                  >\n                    <Flex\n                      height={'100%'}\n                      width={`${forVotesPerc}%`}\n                      borderRadius={'20px 0 0 20px'}\n                      style={{background:'rgba(0, 211, 149, 1)'}}\n                    >\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1/2}\n                    height={'100%'}\n                    justifyContent={'flex-start'}\n                    borderRadius={'0 20px 20px 0'}\n                    style={{background:'rgba(211, 0, 0, 0.1)'}}\n                  >\n                    <Flex\n                      height={'100%'}\n                      width={`${againstVotesPerc}%`}\n                      borderRadius={'0 20px 20px 0'}\n                      style={{background:'rgba(211, 0, 0, 1)'}}\n                    >\n                    </Flex>\n                  </Flex>\n                </Flex>\n                <Flex\n                  width={1}\n                  height={'20px'}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  id={'votes-number-container'}\n                >\n                  <Flex\n                    width={1/2}\n                    height={'100%'}\n                    justifyContent={'flex-end'}\n                  >\n                    <Flex\n                      height={'100%'}\n                      width={`${forVotesPerc}%`}\n                      justifyContent={'flex-start'}\n                    >\n                      <Text\n                        fontWeight={3}\n                        fontSize={[1,2]}\n                        textAlign={'left'}\n                        color={'statValue'}\n                        lineHeight={'initial'}\n                      >\n                        {this.functionsUtil.formatMoney(forVotes.toFixed(0,1),0)}\n                      </Text>\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1/2}\n                    height={'100%'}\n                    justifyContent={'flex-start'}\n                  >\n                    <Flex\n                      height={'100%'}\n                      minWidth={'10%'}\n                      width={`${againstVotesPerc}%`}\n                      justifyContent={parseFloat(againstVotesPerc)<=10 ? 'flex-start' : 'flex-end'}\n                    >\n                      <Text\n                        fontWeight={3}\n                        fontSize={[1,2]}\n                        textAlign={'right'}\n                        color={'statValue'}\n                        lineHeight={'initial'}\n                      >\n                        {this.functionsUtil.formatMoney(againstVotes.toFixed(0,1),0)}\n                      </Text>\n                    </Flex>\n                  </Flex>\n                </Flex>\n              </Flex>\n            </DashboardCard>\n        }\n        {\n          hasVotes && \n            <Flex\n              mb={4}\n              width={1}\n              id={'votes-addresses-container'}\n              justifyContent={'space-between'}\n              flexDirection={['column','row']}\n            >\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mb:[2,0],\n                  mr:[0,1],\n                  width:[1,1/2]\n                }}\n                id={'for-votes-addresses-container'}\n              >\n                <Flex\n                  width={1}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  justifyContent={'center'}\n                >\n                  <Flex\n                    mb={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <Text\n                      fontWeight={4}\n                      fontSize={[2,3]}\n                      textAlign={'left'}\n                      color={'dark-gray'}\n                      lineHeight={'initial'}\n                    >\n                      For Addresses ({forVotesAddrs.length})\n                    </Text>\n                    <Text\n                      fontWeight={4}\n                      fontSize={[2,3]}\n                      textAlign={'left'}\n                      color={'dark-gray'}\n                      lineHeight={'initial'}\n                    >\n                      Votes\n                    </Text>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    style={{\n                      overflow:'scroll'\n                    }}\n                    maxHeight={'400px'}\n                    flexDirection={'column'}\n                  >\n                    {\n                      forVotesAddrs.map( (voteInfo,voteIndex) => {\n                        const votes = this.functionsUtil.formatMoney(this.functionsUtil.BNify(voteInfo.votes).div(1e18).toFixed(4,1),4);\n                        return (\n                          <Flex\n                            py={2}\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`vote_for_${voteIndex}`}\n                            justifyContent={'space-between'}\n                            borderBottom={`1px solid ${this.props.theme.colors['near-white']}`}\n                          >\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Blockie\n                                opts={{\n                                  size: 7,\n                                  color: \"#dfe\",\n                                  bgcolor: \"#a71\",\n                                  spotcolor: \"#000\",\n                                  seed: voteInfo.voter,\n                                }}\n                              />\n                              <Link\n                                ml={2}\n                                fontSize={1}\n                                fontWeight={2}\n                                target={'_blank'}\n                                textAlign={'left'}\n                                color={'statValue'}\n                                lineHeight={'initial'}\n                                hoverColor={'primary'}\n                                rel={'nofollow noopener noreferrer'}\n                                href={`/#/governance/leaderboard/${voteInfo.voter}`}\n                              >\n                                {\n                                  this.props.isMobile ? (\n                                    <ShortHash\n                                      fontSize={1}\n                                      fontWeight={2}\n                                      textAlign={'left'}\n                                      color={'statValue'}\n                                      hash={voteInfo.voter}\n                                      lineHeight={'initial'}\n                                    />\n                                  ) : voteInfo.voter\n                                }\n                              </Link>\n                            </Flex>\n                            <Text\n                              fontSize={1}\n                              fontWeight={2}\n                              textAlign={'left'}\n                              color={'statValue'}\n                              lineHeight={'initial'}\n                            >\n                              {votes}\n                            </Text>\n                          </Flex>\n                        )\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  ml:[0,1],\n                  width:[1,1/2]\n                }}\n                id={'against-votes-addresses-container'}\n              >\n                <Flex\n                  mb={2}\n                  width={1}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <Text\n                    fontWeight={4}\n                    fontSize={[2,3]}\n                    textAlign={'left'}\n                    color={'dark-gray'}\n                    lineHeight={'initial'}\n                  >\n                    Against Addresses ({againstVotesAddrs.length})\n                  </Text>\n                  <Text\n                    fontWeight={4}\n                    fontSize={[2,3]}\n                    textAlign={'left'}\n                    color={'dark-gray'}\n                    lineHeight={'initial'}\n                  >\n                    Votes\n                  </Text>\n                </Flex>\n                <Flex\n                  width={1}\n                  style={{\n                    overflow:'scroll'\n                  }}\n                  maxHeight={'400px'}\n                  flexDirection={'column'}\n                >\n                  {\n                    againstVotesAddrs.map( (voteInfo,voteIndex) => {\n                      const votes = this.functionsUtil.formatMoney(this.functionsUtil.BNify(voteInfo.votes).div(1e18).toFixed(4,1),4);\n                      return (\n                        <Flex\n                          py={2}\n                          width={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          key={`vote_against_${voteIndex}`}\n                          borderBottom={`1px solid ${this.props.theme.colors['near-white']}`}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'flex-start'}\n                          >\n                            <Blockie\n                              opts={{\n                                size: 7,\n                                color: \"#dfe\",\n                                bgcolor: \"#a71\",\n                                spotcolor: \"#000\",\n                                seed: voteInfo.voter,\n                              }}\n                            />\n                            <Link\n                              ml={2}\n                              fontSize={1}\n                              fontWeight={2}\n                              target={'_blank'}\n                              textAlign={'left'}\n                              color={'statValue'}\n                              lineHeight={'initial'}\n                              hoverColor={'primary'}\n                              rel={'nofollow noopener noreferrer'}\n                              href={`/#/governance/leaderboard/${voteInfo.voter}`}\n                            >\n                              {voteInfo.voter}\n                            </Link>\n                          </Flex>\n                          <Text\n                            fontSize={1}\n                            fontWeight={2}\n                            textAlign={'left'}\n                            color={'statValue'}\n                            lineHeight={'initial'}\n                          >\n                            {votes}\n                          </Text>\n                        </Flex>\n                      )\n                    })\n                  }\n                </Flex>\n              </DashboardCard>\n            </Flex>\n        }\n      </Box>\n    );\n  }\n}\n\nexport default ProposalDetails;","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport NewProposal from './NewProposal/NewProposal';\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport ProposalsList from './ProposalsList/ProposalsList';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport ProposalDetails from './ProposalDetails/ProposalDetails';\n\nclass Proposals extends Component {\n  state = {\n    proposals:null,\n    addProposal:false,\n    selectedProposal:null\n  };\n\n  // Utils\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n    if (contractsInitialized){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.contractsInitialized){\n      return false;\n    }\n\n    const proposals = await this.governanceUtil.getProposals();\n\n    const { match: { params } } = this.props;\n      \n    // Look if proposalId exists\n    let addProposal = false;\n    let selectedProposal = null;\n    if (params.item_id && parseInt(params.item_id)){\n      const proposalId = parseInt(params.item_id);\n      const foundProposal = proposals.find( p => parseInt(p.id) === proposalId );\n      // Set selected proposal\n      if (foundProposal){\n        selectedProposal = foundProposal;\n      }\n    } else if (params.item_id && params.item_id.toLowerCase() === 'new'){\n      addProposal = true;\n    }\n\n    this.setState({\n      proposals,\n      addProposal,\n      selectedProposal\n    });\n  }\n\n  render() {\n    return (\n      <Box\n        width={1}\n      >\n        <Flex\n          mb={3}\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={(this.state.selectedProposal || this.state.addProposal) ? 'space-between' : 'flex-end'}\n        >\n          {\n            this.state.selectedProposal ? (\n              <Flex\n                alignItems={'center'}\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Governance'}\n                  pathLink={['proposals']}\n                  isMobile={this.props.isMobile}\n                  handleClick={ e => this.props.goToSection('/') }\n                  path={['Proposals',this.state.selectedProposal.title]}\n                />\n              </Flex>\n            ) : this.state.addProposal ? (\n              <Flex\n                alignItems={'center'}\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Governance'}\n                  pathLink={['proposals']}\n                  isMobile={this.props.isMobile}\n                  path={['Proposals','Add proposal']}\n                  handleClick={ e => this.props.goToSection('/') }\n                />\n              </Flex>\n            ) : (\n              <Flex\n                alignItems={'center'}\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Governance'}\n                  path={['Proposals']}\n                  isMobile={this.props.isMobile}\n                  handleClick={ e => this.props.goToSection('/') }\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.state.addProposal && \n              <Flex\n                width={0.5}\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <CardIconButton\n                  icon={'Add'}\n                  {...this.props}\n                  text={'New Proposal'}\n                  handleClick={ e => this.props.goToSection(`proposals/new`) }\n                />\n              </Flex>\n          }\n        </Flex>\n        {\n          this.state.selectedProposal ? (\n            <Box\n              width={1}\n            >\n              <ProposalDetails\n                {...this.props}\n                loadData={this.loadData.bind(this)}\n                proposal={this.state.selectedProposal}\n              />\n            </Box>\n          ) : this.state.addProposal ? (\n            <Box\n              width={1}\n            >\n              <NewProposal\n                {...this.props}\n              />\n            </Box>\n          ) : (\n            <Box\n              width={1}\n            >\n              <Title\n                mb={[3,4]}\n              >\n                Governance Proposals\n              </Title>\n              <Flex\n                mb={3}\n                width={1}\n                id={'proposals'}\n                flexDirection={'column'}\n              >\n                <ProposalsList\n                  {...this.props}\n                  proposals={this.state.proposals}\n                  cols={[\n                    {\n                      title: '#',\n                      props:{\n                        width:[0.1,0.05]\n                      },\n                      fields:[\n                        {\n                          name:'id',\n                          props:{\n                          }\n                        },\n                      ]\n                    },\n                    {\n                      title:'DATE',\n                      mobile:false,\n                      props:{\n                        width:[0.15,0.12],\n                      },\n                      fields:[\n                        {\n                          name:'date'\n                        }\n                      ]\n                    },\n                    {\n                      title:'TITLE',\n                      props:{\n                        width:[0.75,0.60],\n                      },\n                      fields:[\n                        {\n                          name:'title'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'VOTES',\n                      props:{\n                        width:[0.11,0.11],\n                      },\n                      fields:[\n                        {\n                          name:'votes'\n                        }\n                      ]\n                    },\n                    {\n                      title:'STATUS',\n                      props:{\n                        width:[0.15,0.12],\n                        alignItems:['center','flex-start'],\n                        justifyContent:['center','flex-start']\n                      },\n                      parentProps:{\n                        justifyContent:['center','flex-start']\n                      },\n                      fields:[\n                        {\n                          name:'statusIcon',\n                          props:{\n                            mr:[0,2],\n                          },\n                        },\n                        {\n                          mobile:false,\n                          name:'status'\n                        }\n                      ]\n                    },\n                  ]}\n                />\n              </Flex>\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Proposals;\n","import Title from '../../Title/Title';\nimport React, { Component } from 'react';\nimport { Box, Flex, Blockie } from \"rimble-ui\";\nimport StatsCard from '../../StatsCard/StatsCard';\nimport ProposalsList from '../ProposalsList/ProposalsList';\nimport GovernanceUtil from '../../utilities/GovernanceUtil';\nimport ShortHash from \"../../utilities/components/ShortHash\";\n\nclass DelegateDetails extends Component {\n\n  state = {\n    proposals:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadProposals();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const delegateChanged = JSON.stringify(prevProps.delegate) !== JSON.stringify(this.props.delegate);\n    if (delegateChanged){\n      this.loadProposals();\n    }\n  }\n\n  async loadProposals(){\n    const delegate = this.props.delegate;\n    const proposals = await this.governanceUtil.getProposals(delegate.delegate);\n\n    this.setState({\n      proposals\n    });\n  }\n\n  render() {\n\n    const delegate = this.props.delegate;\n\n    // rank\n    // votes\n    // delegate\n    // proposals\n    // vote_weight\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={[3,4]}\n        >\n          Delegate Details\n        </Title>\n        <Flex\n          mb={3}\n          width={1}\n          alignItems={'center'}\n          justifyContent={'center'}\n          flexDirection={['column','row']}\n        >\n          <Flex\n            mb={[2,0]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              label={null}\n              title={'Rank'}\n              value={delegate.rank}\n              labelTooltip={ null }\n              minHeight={['100px','143px']}\n              titleMinHeight={['auto','50px']}\n            />\n          </Flex>\n          <Flex\n            mb={[2,0]}\n            pl={[0,1]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              titleMinHeight={['auto','50px']}\n              minHeight={['100px','143px']}\n              labelTooltip={ null }\n              title={'Address'}\n              label={null}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Blockie\n                  opts={{\n                    size: 12,\n                    color: \"#dfe\",\n                    bgcolor: \"#a71\",\n                    spotcolor: \"#000\",\n                    seed: delegate.delegate,\n                  }}\n                />\n                <ShortHash\n                  ml={2}\n                  lineHeight={1}\n                  fontSize={[3,4]}\n                  fontWeight={[3,4]}\n                  color={'statValue'}\n                  hash={delegate.delegate}\n                />\n              </Flex>\n            </StatsCard>\n          </Flex>\n          <Flex\n            mb={[2,0]}\n            pl={[0,1]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              label={null}\n              title={'Votes'}\n              labelTooltip={null}\n              minHeight={['100px','143px']}\n              titleMinHeight={['auto','50px']}\n              value={this.functionsUtil.formatMoney(this.functionsUtil.BNify(delegate.votes).toFixed(2,1),2)}\n            />\n          </Flex>\n          <Flex\n            pl={[0,1]}\n            mb={[2,0]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              label={null}\n              labelTooltip={ null }\n              title={'Proposals Voted'}\n              value={delegate.proposals}\n              minHeight={['100px','143px']}\n              titleMinHeight={['auto','50px']}\n            />\n          </Flex>\n        </Flex>\n        <Box\n          width={1}\n          mt={[4,5]}\n        >\n          <Title\n            mb={[2,3]}\n          >\n            Voting History\n          </Title>\n          <Flex\n            mb={[3,4]}\n            width={1}\n            id={'transactions'}\n            flexDirection={'column'}\n          >\n            <ProposalsList\n              {...this.props}\n              rowsPerPage={5}\n              delegate={delegate}\n              filtersEnabled={false}\n              proposals={this.state.proposals}\n              cols={[\n                {\n                  title: '#',\n                  props:{\n                    width:[0.08,0.05]\n                  },\n                  fields:[\n                    {\n                      name:'id',\n                      props:{\n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'DATE',\n                  mobile:false,\n                  props:{\n                    width:0.12,\n                  },\n                  fields:[\n                    {\n                      name:'date'\n                    }\n                  ]\n                },\n                {\n                  title:'TITLE',\n                  props:{\n                    width:[0.66,0.57],\n                  },\n                  fields:[\n                    {\n                      name:'title'\n                    }\n                  ]\n                },\n                {\n                  title:'VOTE',\n                  props:{\n                    width:[0.14,0.14],\n                    textAlign:'center'\n                  },\n                  fields:[\n                    {\n                      name:'support',\n                      parentProps:{\n                        alignItems:'center'\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.12,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  parentProps:{\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      name:'statusIcon',\n                      props:{\n                        mr:[0,2]\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'status'\n                    }\n                  ]\n                },\n              ]}\n            />\n          </Flex>\n        </Box>\n      </Box>\n    );\n  }\n}\n\nexport default DelegateDetails;","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport DelegatesList from './DelegatesList/DelegatesList';\nimport DelegateDetails from './DelegateDetails/DelegateDetails';\n\nclass Leaderboard extends Component {\n  state = {\n    maxRows:100,\n    delegates:null,\n    selectedDelegate:null\n  };\n\n  // Utils\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    const delegates = await this.governanceUtil.getDelegates();\n\n    const { match: { params } } = this.props;\n\n    // Select delegate\n    let selectedDelegate = null;\n    if (params.item_id){\n      const delegateId = params.item_id.toLowerCase();\n      const foundProposal = delegates.find( d => d.delegate.toLowerCase() === delegateId );\n      if (foundProposal){\n        selectedDelegate = foundProposal;\n      }\n    }\n\n    this.setState({\n      delegates,\n      selectedDelegate\n    });\n  }\n\n  render() {\n\n    return (\n      <Box\n        width={1}\n      >\n        {\n          this.state.selectedDelegate ? (\n            <Box\n              width={1}\n            >\n              <Flex\n                mb={3}\n                width={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'flex-start'}\n              >\n                <Flex\n                  width={1}\n                >\n                  <Breadcrumb\n                    {...this.props}\n                    text={'Governance'}\n                    pathLink={['leaderboard']}\n                    isMobile={this.props.isMobile}\n                    handleClick={ e => this.props.goToSection('') }\n                    path={['Leaderboard',this.state.selectedDelegate.delegate]}\n                  />\n                </Flex>\n              </Flex>\n              <DelegateDetails\n                {...this.props}\n                delegate={this.state.selectedDelegate}\n              />\n            </Box>\n          ) : (\n            <Box\n              width={1}\n            >\n              <Flex\n                mb={3}\n                width={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'flex-start'}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Governance'}\n                  path={['Leaderboard']}\n                  isMobile={this.props.isMobile}\n                  handleClick={ e => this.props.goToSection('') }\n                />\n              </Flex>\n              <Title\n                mb={[3,4]}\n              >\n                Governance Leaderboard\n              </Title>\n              <Flex\n                mb={3}\n                width={1}\n                id={'leaderboard'}\n                flexDirection={'column'}\n              >\n                <DelegatesList\n                  {...this.props}\n                  delegates={this.state.delegates}\n                  cols={[\n                    {\n                      title: 'RANK',\n                      props:{\n                        width:[0.13,0.08]\n                      },\n                      fields:[\n                        {\n                          name:'rank'\n                        },\n                      ]\n                    },\n                    {\n                      title:'ADDRESS',\n                      props:{\n                        width:[0.60,0.50],\n                      },\n                      fields:[\n                        {\n                          mobile:false,\n                          name:'avatar',\n                          props:{\n                            mr:2\n                          }\n                        },\n                        {\n                          name:'delegate'\n                        }\n                      ]\n                    },\n                    {\n                      title:'VOTES',\n                      props:{\n                        width:[0.27,0.12],\n                      },\n                      fields:[\n                        {\n                          name:'votes'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'VOTE WEIGHT',\n                      props:{\n                        width:[0.15,0.15],\n                      },\n                      fields:[\n                        {\n                          name:'vote_weight',\n                          parentProps:{\n                            alignItems:'center'\n                          }\n                        }\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'PROPOSALS VOTED',\n                      props:{\n                        width:[0.15,0.15],\n                      },\n                      fields:[\n                        {\n                          name:'proposals',\n                          parentProps:{\n                            alignItems:'center'\n                          }\n                        }\n                      ]\n                    },\n                  ]}\n                />\n              </Flex>\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Leaderboard;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Card, Icon, Text } from 'rimble-ui';\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport DashboardMenu from '../DashboardMenu/DashboardMenu';\n\n// Import page components\nimport Overview from './Overview';\nimport Delegate from './Delegate';\nimport Proposals from './Proposals';\nimport Leaderboard from './Leaderboard';\nimport RoundButton from '../RoundButton/RoundButton';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TooltipModal from \"../utilities/components/TooltipModal\";\nimport DashboardHeader from '../DashboardHeader/DashboardHeader';\n\nclass Dashboard extends Component {\n  state = {\n    menu:[],\n    votes:null,\n    balance:null,\n    baseRoute:null,\n    modalTitle:null,\n    activeModal:null,\n    currentRoute:null,\n    modalContent:null,\n    pageComponent:null,\n    currentSection:null,\n    selectedSection:null,\n    currentDelegate:null,\n    proposalThreshold:null,\n    selectedSubsection:null,\n    proposalMaxOperations:null\n  };\n\n  timeoutId = null;\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    window.governanceUtil = this.governanceUtil;\n    window.functionsUtil = this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async loadMenu() {\n    const menu = [];\n    const baseRoute = this.functionsUtil.getGlobalConfig(['governance','baseRoute']);\n\n    // Add Proposals\n    menu.push(\n      {\n        submenu:[],\n        selected:true,\n        route:baseRoute,\n        icon:'Dashboard',\n        label:'Overview',\n        color:'dark-gray',\n        component:Overview,\n        bgColor:this.props.theme.colors.primary,\n      }\n    );\n\n    // Add Proposals\n    menu.push(\n      {\n        submenu:[],\n        selected:false,\n        label:'Proposals',\n        bgColor:'#00acff',\n        color:'dark-gray',\n        icon:'LightbulbOutline',\n        component:Proposals,\n        route:`${baseRoute}/proposals`,\n      }\n    );\n\n    // Add tools\n    menu.push(\n      {\n        submenu:[],\n        selected:false,\n        bgColor:'#ff0000',\n        color:'dark-gray',\n        label:'Leaderboard',\n        component:Leaderboard,\n        icon:'FormatListNumbered',\n        route:`${baseRoute}/leaderboard`,\n      }\n    );\n\n    // Add tools\n    menu.push(\n      {\n        submenu:[],\n        selected:false,\n        label:'Delegate',\n        color:'dark-gray',\n        bgColor:'#ff0000',\n        component:Delegate,\n        icon:'CompareArrows',\n        route:`${baseRoute}/delegate`,\n      }\n    );\n\n    // Add tools\n    menu.push(\n      {\n        submenu:[],\n        icon:'Forum',\n        mobile:false,\n        label:'Forum',\n        selected:false,\n        component:null,\n        color:'dark-gray',\n        bgColor:'#ff0000',\n        isExternalLink:true,\n        route:`https://gov.idle.finance`,\n      }\n    );\n\n    await this.setState({\n      menu,\n      baseRoute\n    });\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  openTooltipModal = (modalTitle,modalContent) => {\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'UI',\n      eventAction: modalTitle,\n      eventLabel: 'TooltipModal'\n    });\n\n    this.setState({\n      modalTitle,\n      modalContent\n    },() => {\n      this.setActiveModal('tooltip');\n    })\n  }\n\n  setActiveModal = (activeModal) => {\n    this.setState({\n      activeModal\n    });\n  }\n\n  async loadParams() {\n    const { match: { params } } = this.props;\n\n    const baseRoute = this.state.baseRoute;\n    const currentRoute = window.location.hash.substr(1);\n\n    let pageComponent = null;\n    let currentSection = null;\n\n    const menu = this.state.menu;\n\n    let selectedSection = null;\n    let selectedSubsection = null;\n\n    menu.forEach( m => {\n      m.selected = false;\n      const sectionRoute = baseRoute+'/'+params.section;\n      if (currentRoute.toLowerCase() === m.route.toLowerCase() || ( !m.submenu.length && m.route.toLowerCase() === sectionRoute.toLowerCase() )){\n        m.selected = true;\n        if (pageComponent === null){\n          pageComponent = m.component;\n        }\n      } else if (m.submenu.length) {\n        m.submenu.forEach(subm => {\n          subm.selected = false;\n          const submRoute = m.route+'/'+subm.route;\n          if (submRoute.toLowerCase() === currentRoute.toLowerCase()){\n            m.selected = true;\n            subm.selected = true;\n\n            // Set component, if null use parent\n            if (pageComponent === null){\n              if (subm.component){\n                pageComponent = subm.component;\n              } else {\n                pageComponent = m.component;\n              }\n            }\n          }\n\n          // Set selected subsection\n          if (subm.selected){\n            selectedSubsection = subm;\n          }\n\n        });\n      }\n\n      // Set selected section\n      if (m.selected){\n        selectedSection = m;\n      }\n    });\n\n    // Exit if no strategy and token selected\n    if (!pageComponent){\n      return this.goToSection('/',false);\n    }\n\n    await this.setState({\n      menu,\n      params,\n      baseRoute,\n      currentRoute,\n      pageComponent,\n      currentSection,\n      selectedSection,\n      selectedSubsection\n    });\n  }\n\n  componentWillUnmount(){\n    if (this.timeoutId){\n      window.clearTimeout(this.timeoutId);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n\n    // const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    // if (!governanceEnabled){\n    //   this.goToSection('/',false);\n    // }\n\n    await this.loadMenu();\n    this.loadParams();\n  }\n\n  async componentDidMount() {\n    this.timeoutId = window.setTimeout(() => {\n      if (!this.props.accountInizialized || !this.props.contractsInitialized){\n        this.setState({\n          showResetButton:true\n        });\n      }\n    },20000);\n\n    /*\n    if (!this.props.web3){\n      return this.props.initWeb3();\n    } else if (!this.props.accountInizialized){\n      return this.props.initAccount();\n    } else if (!this.props.contractsInitialized){\n      return this.props.initializeContracts();\n    }\n    */\n\n    this.loadUtils();\n    await this.loadMenu();\n    this.loadParams();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState) {\n\n    this.loadUtils();\n\n    const prevParams = prevProps.match.params;\n    const params = this.props.match.params;\n\n    if (JSON.stringify(prevParams) !== JSON.stringify(params)){\n      await this.setState({\n        pageComponent:null\n      }, () => {\n        this.loadParams();\n      });\n    }\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const accountInizialized = this.props.accountInizialized && prevProps.accountInizialized !== this.props.accountInizialized;\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n\n    if (accountChanged || accountInizialized || contractsInitialized){\n      this.loadData();\n    }\n  }\n\n  goToSection(section,isGovernance=true){\n\n    // Remove dashboard route\n    if (isGovernance){\n      section = section.replace(this.state.baseRoute+'/','');\n    }\n\n    const newRoute = (isGovernance ? this.state.baseRoute+(section.length>0 ? '/'+section : '') : section).replace(/[/]+$/,'');\n    window.location.hash = newRoute;\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'UI',\n      eventLabel: newRoute,\n      eventAction: 'goToSection'\n    });\n\n    window.scrollTo(0, 0);\n  }\n\n  async loadData(){\n    if (this.props.account){\n      const [\n        {\n          proposalThreshold, proposalMaxOperations\n        },\n        votes,\n        balance,\n        currentDelegate\n      ] = await Promise.all([\n        this.governanceUtil.getProposalParams(),\n        this.governanceUtil.getCurrentVotes(this.props.account),\n        this.governanceUtil.getTokensBalance(this.props.account),\n        this.governanceUtil.getCurrentDelegate(this.props.account)\n      ]);\n\n      this.setState({\n        votes,\n        balance,\n        currentDelegate,\n        proposalThreshold,\n        proposalMaxOperations\n      });\n    }\n  }\n\n  logout = async () => {\n    this.props.setConnector('Infura','Infura');\n    await this.props.initWeb3('Infura');\n  }\n\n  render() {\n    const PageComponent = this.state.pageComponent ? this.state.pageComponent : null;\n    return (\n      <Flex\n        width={'100%'}\n        position={'fixed'}\n        flexDirection={'row'}\n        height={[(window.innerHeight-61)+'px','100vh']}\n        backgroundColor={['dashboardBg','white']}\n      >\n        <Flex\n          bottom={0}\n          zIndex={1}\n          width={[1,1/6]}\n          flexDirection={'column'}\n          position={['fixed','relative']}\n        >\n          <Card\n            p={[0,3]}\n            width={['100vw','auto']}\n            height={['auto','100vh']}\n            >\n            <DashboardMenu\n              {...this.props}\n              menu={this.state.menu}\n            />\n          </Card>\n        </Flex>\n        <Flex\n          py={3}\n          px={[3,5]}\n          mb={0}\n          width={[1,5/6]}\n          style={{\n            overflowY:'scroll',\n            overflowX:'hidden'\n          }}\n          flexDirection={'columns'}\n          backgroundColor={'dashboardBg'}\n        >\n          {\n            !this.props.accountInizialized || !this.props.contractsInitialized || !PageComponent ? (\n              <Flex\n                width={1}\n                minHeight={'50vg'}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                {\n                  !this.state.showResetButton ? (\n                    <FlexLoader\n                      textProps={{\n                        textSize:4,\n                        fontWeight:2\n                      }}\n                      loaderProps={{\n                        mb:3,\n                        size:'40px'\n                      }}\n                      flexProps={{\n                        my:3,\n                        flexDirection:'column'\n                      }}\n                      text={ !this.props.accountInizialized ? 'Loading account...' : ( !this.props.contractsInitialized ? 'Loading contracts...' : 'Loading assets...' )}\n                    />\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3,\n                        width:[1,0.35]\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Idle can't connect to your wallet!<br />Make sure that your wallet is unlocked and try again.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:3,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.logout.bind(this)}\n                        >\n                          Logout\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                }\n              </Flex>\n            ) : (\n              <Flex\n                width={1}\n                flexDirection={'column'}\n              >\n                <DashboardHeader\n                  goToSection={this.goToSection.bind(this)}\n                  {...this.props}\n                />\n                {\n                  PageComponent &&\n                    <PageComponent\n                      {...this.props}\n                      votes={this.state.votes}\n                      balance={this.state.balance}\n                      urlParams={this.state.params}\n                      loadUserData={this.loadData.bind(this)}\n                      goToSection={this.goToSection.bind(this)}\n                      currentDelegate={this.state.currentDelegate}\n                      selectedSection={this.state.selectedSection}\n                      proposalThreshold={this.state.proposalThreshold}\n                      selectedSubsection={this.state.selectedSubsection}\n                      openTooltipModal={this.openTooltipModal.bind(this)}\n                      proposalMaxOperations={this.state.proposalMaxOperations}\n                      />\n                }\n              </Flex>\n            )\n          }\n        </Flex>\n        <TooltipModal\n          closeModal={this.resetModal}\n          title={this.state.modalTitle}\n          content={this.state.modalContent}\n          isOpen={this.state.activeModal === 'tooltip'}\n        >\n        </TooltipModal>\n      </Flex>\n    );\n  }\n}\n\nexport default Dashboard;","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                position={'relative'}\n                src={'images/logo.svg'}\n                height={['35px','48px']}\n              />\n            </RouterLink>\n          </Flex>\n            <Flex\n              width={[0.5,8/12]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={\"flex-end\"}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    mr={4}\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile &&\n                  <>\n                    <Link\n                      mr={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n              }\n            </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","import ERC20 from '../abis/tokens/DAI.js';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  42:{\n    best:{\n      DAI:{\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk:{\n\n    }\n  },\n  1:{ // Mainnet\n    best:{\n      DAI:{\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:true,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xc11b1268c1a384e55c48c2391d8d480264a3a7f4',\n            token:'cWBTC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:true,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            token:'aWBTC',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    },\n    risk:{\n      DAI:{\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\nimport { ToastMessage } from \"rimble-ui\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = 'light';\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from 'jquery';\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport connectors from './connectors';\nimport Web3Provider from 'web3-react';\nimport React, { Component } from \"react\";\nimport Landing from \"../Landing/Landing\";\nimport { Web3Consumer } from 'web3-react';\nimport Dashboard from '../Dashboard/Dashboard';\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport Governance from '../Governance/Governance';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from '../configs/availableTokens';\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from 'rimble-ui';\n\nclass App extends Component {\n  state = {\n    cachedData:{},\n    buyToken: null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  closeToastMessage = (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps:null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps:props\n    });\n  }\n\n  processCustomParam = (props,prevProps) => {\n    const params = props ? props.match.params : null;\n    const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n  }\n\n  clearCachedData = () => {\n    this.setState({\n      cachedData:{}\n    });\n    return true;\n  }\n\n  setCachedData = (key,data,TTL=null) => {\n    if (!this.state.cachedData[key.toLowerCase()] || JSON.stringify(this.state.cachedData[key.toLowerCase()]) !== JSON.stringify(data)){\n      const expirationDate = TTL ? parseInt(new Date().getTime()/1000)+(TTL) : null;\n      // console.log('setCachedData',key);\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [key.toLowerCase()]:{\n            data,\n            expirationDate\n          }\n        }\n      }));\n      return true;\n    }\n    return false;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)){\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress){\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw:false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({...state, selectedTab: tabIndex}));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const requiredNetwork = globalConfigs.network.requiredNetwork;\n\n    // Load available strategies\n    Object.keys(availableTokens[requiredNetwork]).forEach((strategy) => {\n      availableStrategies[strategy] = availableTokens[requiredNetwork][strategy];\n    });\n\n    newState.availableStrategies = availableStrategies;\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && this.state.availableStrategies[selectedStrategy]){\n      newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]){\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy,selectedToken){\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    const newState = {\n      tokenConfig:!selectedToken ? null : this.state.tokenConfig,\n      availableTokens:!selectedToken ? null : this.state.availableTokens,\n      selectedToken:!selectedToken ? selectedToken :this.state.selectedToken,\n      selectedStrategy:!selectedStrategy ? selectedStrategy :this.state.selectedStrategy,\n    };\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken) {\n      if ( this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase()) ){\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',newState);\n\n    await this.setState(newState,callback);\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      },callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      },callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())){\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState,callback);\n    } else if(!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig:null\n      },callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction){\n      window.console.error = () => {};\n      window.console.warn = () => {};\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage){\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version',false);\n      if (version !== globalConfigs.version){\n        this.functionsUtil.clearStoredData(['walletProvider','connectorName']);\n        this.functionsUtil.setLocalStorage('version',globalConfigs.version);\n      }\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i=0;i<iFrames.length;i++){\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w){\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadAvailableTokens();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n\n    if (tokenChanged || strategyChanged){\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n    // Close iFrame\n    if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n      window.parent.closeIframe(window.self);\n    }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage){\n      const connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      const walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      this.setConnector(connectorName,walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width:this.state.width,\n      height:this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged){\n      if (widthChanged){\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged){\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  // Optional parameters to pass into RimbleWeb3\n  config = globalConfigs.network;\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e){\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken:null,\n      buyModalOpened:false\n    });\n  }\n\n  openBuyModal(e,buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened:true\n    });\n  }\n\n  async logout(){\n    this.functionsUtil.clearStoredData();\n  }\n\n  setConnector(connectorName,walletProvider){\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider){\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    if ( (connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if ( connectorName === 'Injected' ){\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider){\n        case 'Metamask':\n          if (!hasMetamask && hasDapper){\n            walletProvider = 'Dapper';\n          }\n        break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask){\n            walletProvider = 'Metamask';\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider theme={theme}>\n          <Web3Provider\n            connectors={connectors}\n            libraryName={'web3.js'}\n            web3Api={Web3}\n          >\n            <Web3Consumer>\n              {context => {\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    config={this.config}\n                    connectors={connectors}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        transactions,\n                        initSimpleID,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        accountBalanceLow,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper\n                      }) => {\n                        return (\n                        <Box>\n                          <Switch>\n                            <Route\n                              path=\"/dashboard/:section?/:param1?/:param2?\"\n                              render={\n                                (props) => <Dashboard\n                                              {...props}\n                                              web3={web3}\n                                              theme={theme}\n                                              modals={modals}\n                                              network={network}\n                                              context={context}\n                                              account={account}\n                                              isDashboard={true}\n                                              initWeb3={initWeb3}\n                                              biconomy={biconomy}\n                                              isMobile={isMobile}\n                                              simpleID={simpleID}\n                                              contracts={contracts}\n                                              initAccount={initAccount}\n                                              initSimpleID={initSimpleID}\n                                              initContract={initContract}\n                                              transactions={transactions}\n                                              buyToken={this.state.buyToken}\n                                              logout={this.logout.bind(this)}\n                                              accountBalance={accountBalance}\n                                              validateAccount={validateAccount}\n                                              connecting={this.state.connecting}\n                                              cachedData={this.state.cachedData}\n                                              setToken={this.setToken.bind(this)}\n                                              accountValidated={accountValidated}\n                                              getTokenDecimals={getTokenDecimals}\n                                              rejectValidation={rejectValidation}\n                                              tokenConfig={this.state.tokenConfig}\n                                              getAccountBalance={getAccountBalance}\n                                              accountBalanceLow={accountBalanceLow}\n                                              accountInizialized={accountInizialized}\n                                              selectedToken={this.state.selectedToken}\n                                              connectorName={this.state.connectorName}\n                                              setStrategy={this.setStrategy.bind(this)}\n                                              userRejectedConnect={userRejectedConnect}\n                                              accountBalanceToken={accountBalanceToken}\n                                              initializeContracts={initializeContracts}\n                                              walletProvider={this.state.walletProvider}\n                                              buyModalOpened={this.state.buyModalOpened}\n                                              contractsInitialized={contractsInitialized}\n                                              openBuyModal={this.openBuyModal.bind(this)}\n                                              rejectAccountConnect={rejectAccountConnect}\n                                              handleMenuClick={this.selectTab.bind(this)}\n                                              setConnector={this.setConnector.bind(this)}\n                                              availableTokens={this.state.availableTokens}\n                                              closeBuyModal={this.closeBuyModal.bind(this)}\n                                              setCachedData={this.setCachedData.bind(this)}\n                                              selectedStrategy={this.state.selectedStrategy}\n                                              userRejectedValidation={userRejectedValidation}\n                                              setStrategyToken={this.setStrategyToken.bind(this)}\n                                              accountValidationPending={accountValidationPending}\n                                              availableStrategies={this.state.availableStrategies}\n                                              connectAndValidateAccount={connectAndValidateAccount}\n                                              contractMethodSendWrapper={contractMethodSendWrapper}\n                                              setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                            />\n                              }\n                            >\n                            </Route>\n                            {\n                              governanceEnabled && \n                                <Route\n                                  path=\"/governance/:section?/:item_id?\"\n                                  render={\n                                    (props) => <Governance\n                                                  {...props}\n                                                  web3={web3}\n                                                  theme={theme}\n                                                  modals={modals}\n                                                  network={network}\n                                                  context={context}\n                                                  account={account}\n                                                  initWeb3={initWeb3}\n                                                  biconomy={biconomy}\n                                                  isMobile={isMobile}\n                                                  simpleID={simpleID}\n                                                  isGovernance={true}\n                                                  contracts={contracts}\n                                                  initAccount={initAccount}\n                                                  initSimpleID={initSimpleID}\n                                                  initContract={initContract}\n                                                  transactions={transactions}\n                                                  buyToken={this.state.buyToken}\n                                                  logout={this.logout.bind(this)}\n                                                  accountBalance={accountBalance}\n                                                  validateAccount={validateAccount}\n                                                  connecting={this.state.connecting}\n                                                  cachedData={this.state.cachedData}\n                                                  setToken={this.setToken.bind(this)}\n                                                  accountValidated={accountValidated}\n                                                  getTokenDecimals={getTokenDecimals}\n                                                  rejectValidation={rejectValidation}\n                                                  tokenConfig={this.state.tokenConfig}\n                                                  getAccountBalance={getAccountBalance}\n                                                  accountBalanceLow={accountBalanceLow}\n                                                  accountInizialized={accountInizialized}\n                                                  selectedToken={this.state.selectedToken}\n                                                  connectorName={this.state.connectorName}\n                                                  setStrategy={this.setStrategy.bind(this)}\n                                                  userRejectedConnect={userRejectedConnect}\n                                                  accountBalanceToken={accountBalanceToken}\n                                                  initializeContracts={initializeContracts}\n                                                  walletProvider={this.state.walletProvider}\n                                                  buyModalOpened={this.state.buyModalOpened}\n                                                  contractsInitialized={contractsInitialized}\n                                                  openBuyModal={this.openBuyModal.bind(this)}\n                                                  rejectAccountConnect={rejectAccountConnect}\n                                                  handleMenuClick={this.selectTab.bind(this)}\n                                                  setConnector={this.setConnector.bind(this)}\n                                                  availableTokens={this.state.availableTokens}\n                                                  closeBuyModal={this.closeBuyModal.bind(this)}\n                                                  setCachedData={this.setCachedData.bind(this)}\n                                                  selectedStrategy={this.state.selectedStrategy}\n                                                  userRejectedValidation={userRejectedValidation}\n                                                  setStrategyToken={this.setStrategyToken.bind(this)}\n                                                  accountValidationPending={accountValidationPending}\n                                                  availableStrategies={this.state.availableStrategies}\n                                                  connectAndValidateAccount={connectAndValidateAccount}\n                                                  contractMethodSendWrapper={contractMethodSendWrapper}\n                                                  setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                                />\n                                  }\n                                >\n                                </Route>\n                            }\n                            <Route>\n                              <Header\n                                modals={modals}\n                                network={network}\n                                context={context}\n                                account={account}\n                                initWeb3={initWeb3}\n                                isMobile={isMobile}\n                                contracts={contracts}\n                                initAccount={initAccount}\n                                initContract={initContract}\n                                buyToken={this.state.buyToken}\n                                accountBalance={accountBalance}\n                                logout={this.logout.bind(this)}\n                                validateAccount={validateAccount}\n                                connecting={this.state.connecting}\n                                accountValidated={accountValidated}\n                                getTokenDecimals={getTokenDecimals}\n                                rejectValidation={rejectValidation}\n                                tokenConfig={this.state.tokenConfig}\n                                getAccountBalance={getAccountBalance}\n                                accountBalanceLow={accountBalanceLow}\n                                selectedToken={this.state.selectedToken}\n                                connectorName={this.state.connectorName}\n                                userRejectedConnect={userRejectedConnect}\n                                accountBalanceToken={accountBalanceToken}\n                                walletProvider={this.state.walletProvider}\n                                buyModalOpened={this.state.buyModalOpened}\n                                contractsInitialized={contractsInitialized}\n                                openBuyModal={this.openBuyModal.bind(this)}\n                                rejectAccountConnect={rejectAccountConnect}\n                                handleMenuClick={this.selectTab.bind(this)}\n                                setConnector={this.setConnector.bind(this)}\n                                availableTokens={this.state.availableTokens}\n                                closeBuyModal={this.closeBuyModal.bind(this)}\n                                userRejectedValidation={userRejectedValidation}\n                                accountValidationPending={accountValidationPending}\n                                connectAndValidateAccount={connectAndValidateAccount}\n                                setToken={ e => { this.setToken(e) } }\n                              />\n\n                              {this.state.route === \"onboarding\" ? (\n                                <Web3Debugger\n                                  web3={web3}\n                                  account={account}\n                                  accountBalance={accountBalance}\n                                  accountBalanceToken={accountBalanceToken}\n                                  accountBalanceLow={accountBalanceLow}\n                                  initAccount={initAccount}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountValidated={accountValidated}\n                                  accountValidationPending={accountValidationPending}\n                                  rejectValidation={rejectValidation}\n                                  userRejectedValidation={userRejectedValidation}\n                                  validateAccount={validateAccount}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  modals={modals}\n                                  network={network}\n                                  transaction={transaction}\n                                />\n                              ) : null}\n\n                              {this.state.route === \"default\" ? (\n                                <Switch>\n                                  <Route exact path=\"/\"\n                                    render={ (props) =>\n                                      <>\n                                        <Landing\n                                          {...props}\n                                          web3={web3}\n                                          theme={theme}\n                                          network={network}\n                                          account={account}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          contracts={contracts}\n                                          innerWidth={this.state.width}\n                                          logout={this.logout.bind(this)}\n                                          innerHeight={this.state.height}\n                                          accountBalance={accountBalance}\n                                          connecting={this.state.connecting}\n                                          selectedTab={this.state.selectedTab}\n                                          tokenConfig={this.state.tokenConfig}\n                                          accountBalanceLow={accountBalanceLow}\n                                          getAccountBalance={getAccountBalance}\n                                          customAddress={this.state.customAddress}\n                                          selectedToken={this.state.selectedToken}\n                                          accountBalanceToken={accountBalanceToken}\n                                          closeToastMessage={this.closeToastMessage}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          processCustomParam={this.processCustomParam}\n                                          availableTokens={this.state.availableTokens}\n                                          updateSelectedTab={this.selectTab.bind(this)}\n                                          toastMessageProps={this.state.toastMessageProps}\n                                          availableStrategies={this.state.availableStrategies}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          setToken={ e => { this.setToken(e) } }\n                                        />\n                                        <CookieConsent\n                                          expires={365}\n                                          buttonText={\"Ok\"}\n                                          location={\"bottom\"}\n                                          acceptOnScroll={true}\n                                          cookieName={\"cookieAccepted\"}\n                                          acceptOnScrollPercentage={5}\n                                          style={{background: \"rgba(255,255,255,0.95)\",zIndex:'9999999'}}\n                                          buttonStyle={{display: isMobile ? \"block\" : \"none\", backgroundColor:'#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\"}}\n                                        >\n                                          <Flex flexDirection={'row'} alignItems={['flex-start','center']} justifyContent={'flex-start'} maxHeight={['150px','initial']} style={ isMobile ? {overflowY:'scroll'} : null }>\n                                            <Image display={['none','block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                            <Text pl={[0,3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                              This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                              You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                            </Text>\n                                          </Flex>\n                                        </CookieConsent>\n                                      </>\n                                    }\n                                  ></Route>\n                                  <Route exact path=\"/terms-of-service\">\n                                    <Tos />\n                                  </Route>\n                                  <Route>\n                                    <PageNotFound />\n                                  </Route>\n                                </Switch>\n                              ) : null}\n                            </Route>\n                          </Switch>\n                          <TransactionToastUtil transactions={transactions} />\n                        </Box>\n                      )}}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__1fxux\",\"link\":\"Footer_link__2ZyxW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__3LsWh\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__3buhf\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__1ZEqc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bulletCard\":\"HowItWorks_bulletCard__3FM3y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__ShSGs\",\"genericSelector\":\"GenericSelector_genericSelector__36y-l\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__16UDZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainViewport\":\"Landing_mainViewport__6-FCa\",\"headerContainer\":\"Landing_headerContainer__2su89\",\"bgContainer\":\"Landing_bgContainer__srd1P\",\"button\":\"Landing_button__37B6t\",\"graySection\":\"Landing_graySection__1Qz0S\",\"whiteSection\":\"Landing_whiteSection__1mX5m\",\"howItWork\":\"Landing_howItWork__2sVu4\",\"skewBg\":\"Landing_skewBg__d4FEJ\",\"bgHeart\":\"Landing_bgHeart__1Ylz-\",\"platformLogo\":\"Landing_platformLogo__3kL_M\",\"bulletCard\":\"Landing_bulletCard__z5toL\",\"bulletCardFirst\":\"Landing_bulletCardFirst__1kr7D\",\"bulletCardActive\":\"Landing_bulletCardActive__1-c54\",\"bulletPoint\":\"Landing_bulletPoint__sXkeK\",\"bulletRight\":\"Landing_bulletRight__24r1L\",\"bulletTop\":\"Landing_bulletTop__1D98q\",\"bulletLeft\":\"Landing_bulletLeft__Yeirx\",\"bulletBottom\":\"Landing_bulletBottom__OdDmd\",\"bulletBottomLeft\":\"Landing_bulletBottomLeft__WOkHg\",\"bulletBottomBottom\":\"Landing_bulletBottomBottom__1t9j_\",\"bulletMobile\":\"Landing_bulletMobile__2_A1d\",\"carouselItem\":\"Landing_carouselItem__iAvJJ\",\"pos1\":\"Landing_pos1__BEcBQ\",\"carouselItemMobile\":\"Landing_carouselItemMobile__9dvMX\",\"pos2\":\"Landing_pos2__2VA0X\",\"pos3\":\"Landing_pos3__2cKcn\",\"bentTube\":\"Landing_bentTube__10LD1\",\"bounceArrow\":\"Landing_bounceArrow__1mS5k\",\"bounce\":\"Landing_bounce__3i1p8\",\"rebalanceCircle\":\"Landing_rebalanceCircle__5B-sA\",\"spin\":\"Landing_spin__itue9\",\"carouselDesc\":\"Landing_carouselDesc__10ELo\",\"selected\":\"Landing_selected__3Tblg\",\"carouselNav\":\"Landing_carouselNav__1KJNZ\",\"footer\":\"Landing_footer__U-Goi\",\"socialIcon\":\"Landing_socialIcon__1AsMX\",\"gradientBackground\":\"Landing_gradientBackground__3tbgP\",\"bentTubeLeft\":\"Landing_bentTubeLeft__3pniz\",\"bentTubeRight\":\"Landing_bentTubeRight__17O9r\",\"bentTubeActive\":\"Landing_bentTubeActive__1ZzDg\",\"bg1\":\"Landing_bg1__xhb36\"};"],"sourceRoot":""}