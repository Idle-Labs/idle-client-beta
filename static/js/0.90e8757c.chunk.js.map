{"version":3,"sources":["TableCellHeader/TableCellHeader.js","TableRow/TableRow.js","TableHeader/TableHeader.js","TableCellHeader/TableCellHeader.module.scss","AssetsList/AssetsList.js"],"names":["TableCellHeader","_this","this","ColTitle","props","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","h4","Object","assign","fontWeight","color","style","width","whiteSpace","fontSize","lineHeight","children","desc","length","alignItems","cursor","onClick","e","openTooltipModal","title","placement","message","ml","name","className","styles","tooltip","size","isMobile","Component","TableRow","FieldComponent","fieldComponent","isInteractive","handleClick","react__WEBPACK_IMPORTED_MODULE_6___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","cardProps","mb","px","py","id","cardId","rowProps","token","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","flexDirection","rowId","cols","map","colInfo","colIndex","visible","mobile","key","concat","parentProps","fields","fieldInfo","fieldIndex","height","justifyContent","overflow","colProps","parentId","TableHeader","pb","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","module","exports","AssetsList","state","functionsUtil","setProps","FunctionsUtil","loadUtils","prevProps","prevState","_this2","enabledTokens","keys","availableTokens","react__WEBPACK_IMPORTED_MODULE_8___default","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","tokenConfig","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","AssetField"],"mappings":"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","file":"static/js/0.90e8757c.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={ isInteractive ? e => this.props.handleClick(this.props) : null }\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={ fieldInfo.style ? fieldInfo.style : {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            <FieldComponent\n                              {...this.props}\n                              fieldInfo={fieldInfo}\n                              colProps={colInfo.props}\n                              parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            />\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens[token];\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n"],"sourceRoot":""}