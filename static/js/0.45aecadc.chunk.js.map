{"version":3,"sources":["DashboardMenu/DashboardMenu.js","utilities/GovernanceUtil.js","StatsCard/StatsCard.js","utilities/components/TooltipModal.js","CryptoInput/CryptoInput.module.scss","Notifications/Notifications.js","utilities/components/AccountModal.js","MenuAccount/MenuAccount.js","utilities/components/GovModal.js","DelegateVesting/DelegateVesting.js","DashboardHeader/DashboardHeader.js","MenuAccount/MenuAccount.module.scss","Notifications/Notifications.module.scss"],"names":["DashboardMenu","state","buyModalOpened","functionsUtil","this","setProps","props","FunctionsUtil","setState","loadUtils","prevProps","prevState","_this2","menu","length","visibleLinks","filter","menuLink","isVisible","undefined","visible","showMobile","mobile","isMobile","isDarkTheme","themeMode","isOriginUrl","checkUrlOrigin","darkModeEnabled","getGlobalConfig","react__WEBPACK_IMPORTED_MODULE_8___default","a","createElement","rimble_ui__WEBPACK_IMPORTED_MODULE_11__","p","height","flexDirection","mb","alignItems","justifyContent","react_router_dom__WEBPACK_IMPORTED_MODULE_9__","to","position","src","map","menuIndex","LinkComponent","isExternalLink","ExtLink","RouterLink","inactiveImage","imageInactiveDark","imageInactive","width","my","key","concat","route","href","onClick","closeMenu","style","textDecoration","py","px","borderRadius","border","selected","backgroundColor","image","mr","ml","align","icon","name","size","color","bgColor","fontSize","fontWeight","textAlign","whiteSpace","label","e","setThemeMode","Component","GovernanceUtil","_this","Object","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","getTotalSupply","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","mark","_callee","cachedDataKey","cachedData","contractName","totalSupply","wrap","_context","prev","next","getCachedDataWithLocalStorage","BNify","isNaN","abrupt","genericContractCall","sent","fixTokenDecimals","setCachedDataWithLocalStorage","stop","getTokensBalance","_callee2","account","balance","_args2","arguments","_context2","getContractBalance","getVestingContract","_callee3","vestingContract","_args3","_context3","parseInt","initContract","VesterABI","delegateVesting","_callee4","delegate","callback","callbackReceipt","_args4","_context4","contractMethodSendWrapper","getVestingAmount","_callee5","vestingAmount","_args5","_context5","getCurrentDelegate","_callee6","_args6","_context6","getCurrentVotes","_callee7","votes","_args7","_context7","getVotingPeriod","_callee8","votingPeriod","_context8","getTimelockDelay","_callee9","delay","_context9","queueProposal","_ref10","_callee10","proposalId","_args10","_context10","toBN","_x","apply","executeProposal","_ref11","_callee11","_args11","_context11","_x2","proposeAndVoteFor","_ref12","_callee12","targets","values","signatures","calldatas","description","batcher","contract","txs","_context12","Batcher","web3","getContractByName","_address","method","methods","propose","args","castVote","_x3","_x4","_x5","_x6","_x7","_ref13","_callee13","_args13","_context13","_x8","_x9","_x10","_x11","_x12","_ref14","_callee14","support","_args14","_context14","_x13","_x14","setDelegate","_ref15","_callee15","_args15","_context15","_x15","getDelegatesChanges","_callee16","lastBlockNumber","delegationsCalls","fromBlock","delegatesContractName","blockNumber","toBlock","all_delegations","_context16","eth","getBlockNumber","Math","min","push","getContractPastEvents","Promise","all","reduce","delegations","d","getDelegatesVotesChanges","_callee17","_context17","getDelegates","_callee18","limit","_ref19","_ref20","all_votes","delegateAccounts","delegates","_args18","_context18","getVotes","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","forEach","_e$returnValues","returnValues","newBalance","keys","sort","b","index","rank","toFixed","vote_weight","parseFloat","proposals","v","voter","toLowerCase","splice","getProposalParams","_callee19","govContractName","_ref22","_ref23","proposalThreshold","proposalMaxOperations","params","_context19","getCachedData","setCachedData","_callee20","governanceContractName","_context20","_e$returnValues2","getProposals","_callee22","voted_by","filter_by_state","startBlock","enumerateProposalState","proposalCount","proposalGets","proposalStateGets","_arr","_i","i","_ref26","_ref27","proposalStates","proposalQueuedEvents","proposalCreatedEvents","proposalCanceledEvents","proposalExecutedEvents","_args22","_context22","find","Array","from","n","reverse","asyncForEach","_ref28","_callee21","createdEvent","canceledEvent","executedEvent","queuedEvent","_ref29","_ref30","endBlockInfo","queuedBlockInfo","createdBlockInfo","canceledBlockInfo","executedBlockInfo","createdState","activeState","canceledState","succeededState","queuedState","executedState","endState","_createdEvent$returnV","proposalDetails","_context21","id","endBlock","getBlockInfo","states","end_time","timestamp","start_time","trx_hash","transactionHash","s","title","split","replace","shift","join","attr","eta","actions","executed","canceled","forVotes","proposer","againstVotes","_x16","_x17","StatsCard","react__WEBPACK_IMPORTED_MODULE_7___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","cardProps","minHeight","rimble_ui__WEBPACK_IMPORTED_MODULE_10__","titleMinHeight","h4","lineHeight","value","toString","assign","valueProps","children","mt","labelTooltip","placement","message","TooltipModal","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","componentDidUpdate","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","closeModal","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","isOpen","_ModalCard__WEBPACK_IMPORTED_MODULE_8__","maxWidth","closeFunc","Header","pt","Body","dangerouslySetInnerHTML","__html","content","_RoundButton_RoundButton_js__WEBPACK_IMPORTED_MODULE_11__","handleClick","buttonProps","React","module","exports","newLink","newPill","ethInput","ethInputDark","mainInput","button","gradientButton","input","newPillContainerAnim","Notifications","tabOpened","notifications","mouseOverBell","unreadNotifications","lastOpenTimestamp","mouseOverNotifications","governanceUtil","loadNotifications","clickEvent","sendGoogleAnalyticsEvent","eventCategory","eventAction","eventLabel","updateLastOpenTimestamp","notificationsChanged","JSON","stringify","Date","now","notificationsParams","getStoredItem","setLocalStorage","requiredNetwork","isMainnet","blocksPerWeek","div","oneWeekAgoBlock","minus","getSubstackLatestFeed","getSnapshotProposals","latestFeed","activeSnapshotProposals","governanceProposals","batchedDeposits","enabled","start","currTime","end","latestFeedDate","strToMoment","isoDate","isAfter","subtract","link","_d","getTime","htmlDecode","text","date","utc","format","snapshotProposalBaseUrl","_this3","msg","payload","body","authorIpfsHash","governanceProposalUrl","iconProps","hash","batchDepositConfig","batchDepositBaseUrl","batchToken","batchInfo","lastExecution","timeStamp","batchRedeems","theme","colors","transactions","status","completed","notification","openWindow","window","location","_this4","hasUnreadNotifications","iconColor","react_default","index_es","zIndex","flexProps","onMouseOut","setMouseOverBell","onMouseOver","toggleTab","bind","className","styles","bell","ring","active","counter","DashboardCard","right","maxHeight","overflow","top","minWidth","setMouseOverNotifications","openNotification","dark","borderBottom","divider","textOverflow","AccountModal","logout","balances","loadBalances","regenerator_default","availableStrategies","contractsInitialized","best","baseToken","tokens","strategy","strategyToken","idle","token","setConnector","connectorName","context","accountChanged","acccount","section","goToSection","viewOnly","rows","renderBalances","boxShadow","tokenIndex","AssetField","tokenConfig","objectSpread","fieldInfo","ModalCard","address","toolName","toolConfig","CardIconButton","mx","Footer","ButtonLoader","buttonText","isLoading","asyncToGenerator","MenuAccount","isModalOpen","idleTokenBalance","idleGovToken","toggleModal","modalName","getIdleGovToken","loadIdleTokenBalance","getBalance","getUnclaimedTokens","unclaimed","plus","walletProvider","connectorInfo","walletIcon","governanceRoute","governanceEnabled","dashboardRoute","toggleMenu","menuOpened","display","isInteractive","alt","ShortHash","src_Notifications_Notifications","flex","balanceButton","setGovModal","isDashboard","RoundButton","mainColor","isGovernance","components_AccountModal","connectAndValidateAccount","GovModal","total","txStatus","processing","txHash","loading","loadTokenInfo","_ref2","_ref3","slicedToArray","claim","tx","error","eventData","getTransactionError","newState","claimCallback","claimRewards","action","bgLayer","background","titleProps","gt","pb","TxProgressBar","textColor","cancelTextColor","cancelTextHoverColor","waitText","endMessage","cancelTransaction","contrastColor","disabled","lte","DelegateVesting","newDelegate","delegatee","currentDelegate","delegateAddressValid","delegateDifferentWallet","vestingContractDelegated","delegatesChanges","lastDelegateTx","delegator","pop","toDelegate","revoke","repeat","checkAddress","loadData","target","type","required","borderColor","placeholder","onChange","changeDelegate","checked","setDelegateDifferentWallet","DashboardHeader","activeNews","govModalOpened","stakingConfig","nexusMutualConfig","flashNews","url","getDashboardSectionUrl","floor","random","src_MenuAccount_MenuAccount","isActive","hoverColor","src_DelegateVesting_DelegateVesting","components_GovModal","list"],"mappings":"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","file":"static/js/0.45aecadc.chunk.js","sourcesContent":["import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport { Link as RouterLink } from \"react-router-dom\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Icon, Text, Image, Link } from 'rimble-ui';\n\nclass DashboardMenu extends Component {\n  state = {\n    buyModalOpened:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setBuyModalOpened(buyModalOpened){\n    this.setState({\n      buyModalOpened\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    if (!this.props.menu.length){\n      return null;\n    }\n\n    const visibleLinks = this.props.menu.filter(menuLink => {\n      const isVisible = menuLink.visible === undefined || menuLink.visible;\n      const showMobile = menuLink.mobile === undefined || menuLink.mobile;\n      return isVisible && (!this.props.isMobile || showMobile);\n    });\n\n    if (!visibleLinks.length){\n      return null;\n    }\n\n    const isDarkTheme = this.props.themeMode === 'dark';\n    const isOriginUrl = this.functionsUtil.checkUrlOrigin();\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard','theme','darkModeEnabled']);\n\n    return (\n      <Flex\n        p={0}\n        height={'100%'}\n        flexDirection={'column'}\n      >\n        <Flex\n          p={3}\n          mb={3}\n          flexDirection={'row'}\n          alignItems={'center'}\n          justifyContent={'center'}\n        >\n          <RouterLink to=\"/\">\n            <Image\n              height={'42px'}\n              position={'relative'}\n              src={ isOriginUrl ? (!isDarkTheme ? 'images/logo-gradient.svg' : 'images/logo-white.svg') : (!isDarkTheme ? 'images/logo-gradient-beta.png' : 'images/logo-white-beta.png')}\n            />\n          </RouterLink>\n        </Flex>\n        {\n          visibleLinks.map((menuLink,menuIndex) => {\n            const isExternalLink = menuLink.isExternalLink;\n            const LinkComponent = isExternalLink ? ExtLink : RouterLink;\n            const inactiveImage = isDarkTheme && menuLink.imageInactiveDark ? menuLink.imageInactiveDark : menuLink.imageInactive;\n            return (\n              <Box\n                width={'auto'}\n                my={[2,'12px']}\n                key={`menu-${menuIndex}`}\n              >\n                <LinkComponent\n                  to={menuLink.route}\n                  href={menuLink.route}\n                  onClick={this.props.closeMenu}\n                  style={{textDecoration:'none'}}\n                >\n                  <Flex\n                    py={3}\n                    px={3}\n                    borderRadius={2}\n                    flexDirection={'row'}\n                    alignItems={'center'}\n                    border={menuLink.selected ? 2 : null}\n                    backgroundColor={ menuLink.selected ? 'menuHover' : 'transparent' }\n                  >\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-start'}\n                    >\n                      {menuLink.image &&\n                        <Image\n                          mr={3}\n                          ml={2}\n                          mb={0}\n                          align={'center'}\n                          height={'1.6em'}\n                          src={ menuLink.selected ? menuLink.image : inactiveImage}\n                        />\n                      }\n                      {menuLink.icon &&\n                        <Icon\n                          mr={3}\n                          ml={2}\n                          mb={0}\n                          align={'center'}\n                          name={menuLink.icon}\n                          size={ this.props.isMobile ? '1.4em' : '1.6em' }\n                          color={ menuLink.selected ? menuLink.bgColor : 'copyColor' }\n                        />\n                      }\n                      <Text\n                        fontSize={2}\n                        fontWeight={3}\n                        color={'copyColor'}\n                        textAlign={'center'}\n                        style={{\n                          whiteSpace:'nowrap'\n                        }}\n                      >\n                        {menuLink.label}\n                      </Text>\n                    </Flex>\n                  </Flex>\n                </LinkComponent>\n              </Box>\n            );\n          })\n        }\n        {\n          darkModeEnabled && (\n            <Flex\n              my={2}\n              width={'auto'}\n              height={'100%'}\n              flexDirection={'column'}\n              justifyContent={'flex-end'}\n            >\n              <Link\n                style={{textDecoration:'none'}}\n                onClick={ e => this.props.setThemeMode(this.props.themeMode === 'light' ? 'dark' : 'light') }\n              >\n                <Flex\n                  p={2}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'flex-end'}\n                >\n                  <Icon\n                    mr={2}\n                    ml={2}\n                    size={'1.4em'}\n                    align={'center'}\n                    color={'copyColor'}\n                    name={'Brightness2'}\n                  />\n                  <Flex\n                    px={'0.2em'}\n                    width={'3.4em'}\n                    height={'1.6em'}\n                    alignItems={'center'}\n                    borderRadius={'1.6em'}\n                    backgroundColor={'cellText'}\n                    justifyContent={this.props.themeMode === 'light' ? 'flex-end' : 'flex-start'}\n                  >\n                    <Box\n                      width={'1.3em'}\n                      height={'1.3em'}\n                      borderRadius={'1.3em'}\n                      backgroundColor={'copyColor'}\n                    >\n                    </Box>\n                  </Flex>\n                  <Icon\n                    ml={2}\n                    size={'1.4em'}\n                    align={'center'}\n                    name={'WbSunny'}\n                    color={'copyColor'}\n                  />\n                </Flex>\n              </Link>\n              {\n                /*\n                  <Link\n                    style={{textDecoration:'none'}}\n                    onClick={ e => this.props.setThemeMode(this.props.themeMode === 'light' ? 'dark' : 'light') }\n                  >\n                    <Flex\n                      py={[2,3]}\n                      px={[2,3]}\n                      borderRadius={[0,2]}\n                      flexDirection={'row'}\n                      alignItems={'center'}\n                      backgroundColor={'transparent'}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={['column','row']}\n                        justifyContent={['center','flex-start']}\n                      >\n                        {\n                          this.props.themeMode === 'light' ? (\n                            <Icon\n                              mr={[0,3]}\n                              ml={[0,2]}\n                              mb={[1,0]}\n                              size={'1.6em'}\n                              align={'center'}\n                              color={'copyColor'}\n                              name={'Brightness2'}\n                            />\n                          ) : (\n                            <Icon\n                              mr={[0,3]}\n                              ml={[0,2]}\n                              mb={[1,0]}\n                              size={'1.6em'}\n                              name={'WbSunny'}\n                              align={'center'}\n                              color={'copyColor'}\n                            />\n                          )\n                        }\n                        <Text\n                          fontWeight={3}\n                          color={'copyColor'}\n                          textAlign={'center'}\n                          fontSize={['11px',2]}\n                          style={{\n                            whiteSpace:'nowrap'\n                          }}\n                        >\n                          {this.props.themeMode === 'light' ? 'Dark Mode' : 'Back to Light'}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Link>\n                */\n              }\n            </Flex>\n          )\n        }\n        {\n        /*\n        !this.props.isMobile  &&\n          <Box\n            width={'auto'}\n            borderTop={`1px solid ${theme.colors.divider}`}\n          >\n            <Flex\n              p={[2,3]}\n              style={{\n                cursor:'pointer'\n              }}\n              borderRadius={[0,2]}\n              flexDirection={'row'}\n              alignItems={'center'}\n              onClick={ e => this.setBuyModalOpened(true) }\n            >\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={['column','row']}\n                justifyContent={['center','flex-start']}\n              >\n                <Icon\n                  mr={[0,3]}\n                  ml={[0,2]}\n                  mb={[1,0]}\n                  size={'1.6em'}\n                  align={'center'}\n                  color={'copyColor'}\n                  name={'AddCircleOutline'}\n                />\n                <Text\n                  fontWeight={3}\n                  fontSize={[0,2]}\n                  color={'copyColor'}\n                  textAlign={'center'}\n                  style={{\n                    whiteSpace:'nowrap'\n                  }}\n                >\n                  Add Funds\n                </Text>\n              </Flex>\n            </Flex>\n          </Box>\n        <BuyModal\n          {...this.props}\n          isOpen={this.state.buyModalOpened}\n          closeModal={ e => this.setBuyModalOpened(false) }\n        />\n        */\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default DashboardMenu;","import Batcher from 'web3-batched-send';\nimport FunctionsUtil from './FunctionsUtil';\nimport VesterABI from '../contracts/Vester.json';\n\n// const env = process.env;\n\nclass GovernanceUtil {\n  // Attributes\n  props = {};\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  getTotalSupply = async () => {\n\n    // Check for cached data\n    const cachedDataKey = 'getTotalSupply';\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n    let totalSupply = await this.functionsUtil.genericContractCall(contractName,'totalSupply');\n    if (totalSupply){\n      totalSupply = this.functionsUtil.fixTokenDecimals(totalSupply,18);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,totalSupply,null);\n    }\n\n    return null;\n  }\n\n  getTokensBalance = async (account=null) => {\n\n    account = account ? account : this.props.account;\n    if (account){\n\n      // Check for cached data\n      const cachedDataKey = `getTokensBalance_${account}`;\n      const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.functionsUtil.BNify(cachedData).isNaN()){\n        return cachedData;\n      }\n\n      const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n      const balance = await this.functionsUtil.getContractBalance(contractName, account);\n      if (balance && !this.functionsUtil.BNify(balance).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,this.functionsUtil.BNify(balance));\n      }\n    }\n    return null;\n  }\n\n  getVestingContract = async (account=null) => {\n    account = account ? account : this.props.account;\n    const vestingContract = await this.functionsUtil.genericContractCall('VesterFactory','vestingContracts',[account]);\n\n    if (parseInt(vestingContract) === 0){\n      return null;\n    }\n    // Init vesting contract\n    await this.props.initContract('VestingContract',vestingContract,VesterABI);\n    return vestingContract;\n  }\n\n  delegateVesting = async (account=null,delegate=null,callback=null,callbackReceipt=null) => {\n    account = account ? account : this.props.account;\n    const founderVesting = await this.getVestingContract(account);\n    if (founderVesting){\n      // await this.functionsUtil.contractMethodSendWrapper('IDLE','delegate',[delegate]);\n      return await this.functionsUtil.contractMethodSendWrapper('VestingContract','setDelegate',[delegate],callback,callbackReceipt);\n    }\n    return null;\n  }\n\n  getVestingAmount = async (account=null) => {\n    account = account ? account : this.props.account;\n    const founderVesting = await this.getVestingContract(account);\n    if (founderVesting){\n      let vestingAmount = await this.functionsUtil.genericContractCall('VestingContract','vestingAmount');\n      if (vestingAmount){\n        return this.functionsUtil.BNify(vestingAmount);\n      }\n    }\n    return null;\n  }\n\n  getCurrentDelegate = async (account=null) => {\n\n    account = account ? account : this.props.account;\n    if (account){\n\n      // Check for cached data\n      const cachedDataKey = `getCurrentDelegate_${account}`;\n      const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData){\n        return cachedData;\n      }\n\n      const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n      const delegate = await this.functionsUtil.genericContractCall(contractName, 'delegates', [account]);\n\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,delegate);\n    }\n\n    return null;\n  }\n\n  getCurrentVotes = async (account=null) => {\n\n    account = account ? account : this.props.account;\n    if (account){\n      // Check for cached data\n      const cachedDataKey = `getCurrentVotes_${account}`;\n      const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData){\n        return cachedData;\n      }\n\n      const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n      const votes = await this.functionsUtil.genericContractCall(contractName, 'getCurrentVotes', [account]);\n      if (votes && !this.functionsUtil.BNify(votes).isNaN() ){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,this.functionsUtil.BNify(votes));\n      }\n    }\n\n    return null;\n  }\n\n  getVotingPeriod = async () => {\n    // Check for cached data\n    const cachedDataKey = `votingPeriod`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    let votingPeriod = await this.functionsUtil.genericContractCall(contractName,'votingPeriod');\n    if (votingPeriod){\n      votingPeriod = this.functionsUtil.BNify(votingPeriod);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,votingPeriod,null);\n    }\n\n    return null;\n  }\n\n  getTimelockDelay = async () => {\n    // Check for cached data\n    const cachedDataKey = `getTimelockDelay`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    let delay = await this.functionsUtil.genericContractCall('Timelock','delay');\n    if (delay){\n      delay = this.functionsUtil.BNify(delay);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,delay,null);\n    }\n\n    return null;\n  }\n\n  queueProposal = async (proposalId,callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    await this.functionsUtil.contractMethodSendWrapper(contractName,'queue',[this.functionsUtil.toBN(proposalId)],callback,callbackReceipt);\n  }\n\n  executeProposal = async (proposalId,callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    await this.functionsUtil.contractMethodSendWrapper(contractName,'execute',[this.functionsUtil.toBN(proposalId)],callback,callbackReceipt);\n  }\n\n  proposeAndVoteFor = async (targets, values, signatures, calldatas, description) => {\n    const batcher = new Batcher(this.props.web3,'0x741A4dCaD4f72B83bE9103a383911d78362611cf');\n\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    const contract = this.functionsUtil.getContractByName(contractName);\n\n    const txs = [\n      {\n        to:contract._address,\n        method:contract.methods.propose,\n        args:[targets, values, signatures, calldatas, description]\n      },\n      {\n        to:contract._address,\n        method:contract.methods.castVote,\n        args:[this.functionsUtil.BNify(3), true],\n      }\n    ];\n\n    batcher(txs);\n  }\n\n  propose = async (targets, values, signatures, calldatas, description, callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    return await this.props.contractMethodSendWrapper(contractName, 'propose', [targets, values, signatures, calldatas, description], null, callback, callbackReceipt);\n  }\n\n  castVote = async (proposalId,support,callback=null,callbackReceipt=null) => {\n    proposalId = this.functionsUtil.toBN(proposalId);\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    return await this.props.contractMethodSendWrapper(contractName, 'castVote', [proposalId, support], null, callback, callbackReceipt);\n  }\n\n  setDelegate = async (delegate,callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n    return await this.props.contractMethodSendWrapper(contractName, 'delegate', [delegate], null, callback, callbackReceipt);\n  }\n\n  getDelegatesChanges = async () => {\n\n    const lastBlockNumber = await this.props.web3.eth.getBlockNumber();\n\n    const delegationsCalls = [];\n    const blocksPerCall = 100000;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['governance','startBlock']);\n    const delegatesContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n\n    for (var blockNumber = fromBlock; blockNumber < lastBlockNumber; blockNumber+=blocksPerCall) {\n      const toBlock = Math.min(blockNumber+blocksPerCall,lastBlockNumber);\n      delegationsCalls.push(this.functionsUtil.getContractPastEvents(delegatesContractName,'DelegateChanged', {fromBlock: blockNumber, toBlock}))\n    }\n\n    const all_delegations = await Promise.all(delegationsCalls);\n\n    return all_delegations.reduce( (delegations,d) => {\n      delegations = delegations.concat(d);\n      return delegations;\n    },[]);\n  }\n\n  getDelegatesVotesChanges = async () => {\n\n    const lastBlockNumber = await this.props.web3.eth.getBlockNumber();\n\n    const delegationsCalls = [];\n    const blocksPerCall = 100000;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['governance','startBlock']);\n    const delegatesContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n\n    for (var blockNumber = fromBlock; blockNumber < lastBlockNumber; blockNumber+=blocksPerCall) {\n      const toBlock = Math.min(blockNumber+blocksPerCall,lastBlockNumber);\n      delegationsCalls.push(this.functionsUtil.getContractPastEvents(delegatesContractName,'DelegateVotesChanged', {fromBlock: blockNumber, toBlock}))\n    }\n\n    const all_delegations = await Promise.all(delegationsCalls);\n\n    return all_delegations.reduce( (delegations,d) => {\n      delegations = delegations.concat(d);\n      return delegations;\n    },[]);\n  }\n\n  getDelegates = async (limit=null) => {\n\n    // Check for cached data\n    const cachedDataKey = `getDelegates`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const [\n      all_votes,\n      totalSupply,\n      delegations,\n    ] = await Promise.all([\n      this.getVotes(),\n      this.getTotalSupply(),\n      this.getDelegatesVotesChanges()\n    ]);\n\n    const delegateAccounts = {};\n    delegations.forEach(e => {\n      const { delegate, newBalance } = e.returnValues;\n      delegateAccounts[delegate] = newBalance;\n    });\n\n    let delegates = [];\n    Object.keys(delegateAccounts).forEach((account) => {\n      const votes = +delegateAccounts[account];\n      if (votes === 0) return;\n      delegates.push({\n        votes: votes/1e18,\n        delegate: account\n      });\n    });\n\n    delegates.sort((a, b) => {\n      return a.votes < b.votes ? 1 : -1;\n    });\n\n    delegates.forEach( (d,index) => {\n      d.rank = index+1;\n      d.votes = d.votes.toFixed(6);\n      d.vote_weight = (100 * (d.votes / parseFloat(totalSupply))).toFixed(4) + '%';\n      d.proposals = all_votes.filter( v => (v.voter && d.delegate && v.voter.toLowerCase() === d.delegate.toLowerCase()) ).length;\n    });\n\n    this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,delegates);\n\n    if (limit !== null){\n      delegates = delegates.splice(0,limit);\n    }\n\n    return delegates;\n  }\n\n  getProposalParams = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getProposalParams`;\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    let [\n      proposalThreshold,\n      proposalMaxOperations\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(govContractName,'proposalThreshold'),\n      this.functionsUtil.genericContractCall(govContractName,'proposalMaxOperations')\n    ]);\n\n    if (proposalThreshold){\n      proposalThreshold = this.functionsUtil.BNify(proposalThreshold);\n    }\n\n    const params = {\n      proposalThreshold,\n      proposalMaxOperations\n    };\n\n    return this.functionsUtil.setCachedData(cachedDataKey,params);\n  }\n\n  getVotes = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getVotes`;\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const fromBlock = this.functionsUtil.getGlobalConfig(['governance','startBlock']);\n    const governanceContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n\n    let votes = await this.functionsUtil.getContractPastEvents(governanceContractName,'VoteCast', {fromBlock, toBlock: 'latest'});\n\n    if (votes){\n      votes = votes.map( e => {\n        const {\n            voter,\n            votes,\n            support,\n            proposalId\n        } = e.returnValues;\n        return {\n          votes,\n          voter,\n          support,\n          proposalId\n        }\n      });\n    }\n\n    return this.functionsUtil.setCachedData(cachedDataKey,votes);\n  }\n\n  getProposals = async (voted_by=null,filter_by_state=null,startBlock=null) => {\n\n    // Check for cached data\n    const cachedDataKey = `getProposals`;\n    let cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      if (filter_by_state){\n        cachedData = cachedData.filter( p => (p && p.state && p.state.toLowerCase() === filter_by_state.toLowerCase() ) );\n      }\n      if (voted_by){\n        cachedData = cachedData.filter( p => (p && p.votes.find( v => (v.voter && v.voter.toLowerCase() === voted_by.toLowerCase()) )) );\n      }\n      if (startBlock){\n        cachedData = cachedData.filter( p => parseInt(p.startBlock)>=parseInt(startBlock) );\n      }\n      return cachedData;\n    }\n\n    const enumerateProposalState = (state) => {\n      const proposalStates = ['Pending', 'Active', 'Canceled', 'Defeated', 'Succeeded', 'Queued', 'Expired', 'Executed'];\n      return proposalStates[state];\n    };\n\n    const governanceContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    const proposalCount = await this.functionsUtil.genericContractCall(governanceContractName,'proposalCount');\n\n    if (!proposalCount){\n      return [];\n    }\n\n    const proposalGets = [];\n    const proposalStateGets = [];\n    for (const i of Array.from(Array(parseInt(proposalCount)),(n,i) => i+1)) {\n      proposalGets.push(this.functionsUtil.genericContractCall(governanceContractName,'proposals',[i]));\n      proposalStateGets.push(this.functionsUtil.genericContractCall(governanceContractName,'state',[i]));\n    }\n\n    const fromBlock = this.functionsUtil.getGlobalConfig(['governance','startBlock']);\n\n    let [\n      votes,\n      proposals,\n      proposalStates,\n      proposalQueuedEvents,\n      proposalCreatedEvents,\n      proposalCanceledEvents,\n      proposalExecutedEvents,\n    ] = await Promise.all([\n      this.getVotes(),\n      Promise.all(proposalGets),\n      Promise.all(proposalStateGets),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalQueued', {fromBlock, toBlock: 'latest'}),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalCreated', {fromBlock, toBlock: 'latest'}),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalCanceled', {fromBlock, toBlock: 'latest'}),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalExecuted', {fromBlock, toBlock: 'latest'}),\n    ]);\n\n    if (!proposals){\n      return false;\n    }\n\n    proposals.reverse();\n    proposalStates.reverse();\n    proposalQueuedEvents.reverse();\n    proposalCreatedEvents.reverse();\n    proposalCanceledEvents.reverse();\n    proposalExecutedEvents.reverse();\n\n    // await this.functionsUtil.asyncForEach(proposals, async (p,i) => {\n    await this.functionsUtil.asyncForEach(proposalCreatedEvents, async (createdEvent,i) => {\n      const p = proposals[i];\n\n      if (!p || !p.id){\n        return;\n      }\n\n      const proposalId = parseInt(p.id);\n      const canceledEvent = proposalCanceledEvents.find( e => (parseInt(e.returnValues.id) === proposalId ) );\n      const executedEvent = proposalExecutedEvents.find( e => (parseInt(e.returnValues.id) === proposalId ) );\n      const queuedEvent = proposalQueuedEvents.find( e => (parseInt(e.returnValues.id) === proposalId ) );\n\n      const [\n        endBlockInfo,\n        queuedBlockInfo,\n        createdBlockInfo,\n        canceledBlockInfo,\n        executedBlockInfo,\n      ] = await Promise.all([\n        p.endBlock ? this.functionsUtil.getBlockInfo(p.endBlock) : null,\n        queuedEvent ? this.functionsUtil.getBlockInfo(queuedEvent.blockNumber) : null,\n        createdEvent ? this.functionsUtil.getBlockInfo(createdEvent.blockNumber) : null,\n        canceledEvent ? this.functionsUtil.getBlockInfo(canceledEvent.blockNumber) : null,\n        executedEvent ? this.functionsUtil.getBlockInfo(executedEvent.blockNumber) : null,\n      ]);\n\n      // Init states array\n      p.states = [];\n\n      // Create created state\n      const createdState = {\n        state: \"Pending\",\n        blockNumber: createdEvent.blockNumber,\n        end_time: createdBlockInfo.timestamp,\n        start_time: createdBlockInfo.timestamp,\n        trx_hash: createdEvent.transactionHash\n      };\n      p.states.push(createdState);\n\n      // Push active state\n      const activeState = {\n        end_time: null,\n        trx_hash: null,\n        state: \"Active\",\n        blockNumber: createdEvent.blockNumber,\n        start_time: createdState.start_time\n      };\n      p.states.push(activeState);\n\n      // Push canceled state\n      if (canceledEvent){\n        const canceledState = {\n          end_time: null,\n          state: \"Canceled\",\n          blockNumber: canceledEvent.blockNumber,\n          start_time: canceledBlockInfo.timestamp,\n          trx_hash: canceledEvent.transactionHash\n        }\n        // Update previous state end_time\n        p.states[p.states.length-1].end_time = canceledBlockInfo.timestamp;\n        p.states.push(canceledState);\n      } else {\n        // Push queued state\n        if (queuedEvent){\n          const succeededState = {\n            end_time: null,\n            trx_hash: null,\n            state: \"Succeeded\",\n            blockNumber: queuedEvent.blockNumber,\n            start_time: queuedBlockInfo.timestamp,\n          };\n\n          const queuedState = {\n            end_time: null,\n            state: \"Queued\",\n            blockNumber: queuedEvent.blockNumber,\n            trx_hash: queuedEvent.transactionHash,\n            start_time: queuedBlockInfo.timestamp,\n          };\n\n          // Update previous state end_time\n          p.states[p.states.length-1].end_time = queuedBlockInfo.timestamp;\n          // Push Succeeded state\n          p.states.push(succeededState);\n          // Push queued state\n          p.states.push(queuedState);\n        }\n\n        // Push executed state\n        if (executedEvent){\n          const executedState = {\n            end_time: null,\n            state: \"Executed\",\n            blockNumber: executedEvent.blockNumber,\n            start_time: executedBlockInfo.timestamp,\n            trx_hash: executedEvent.transactionHash\n          }\n          // Update previous state end_time\n          p.states[p.states.length-1].end_time = executedBlockInfo.timestamp;\n          p.states.push(executedState);\n        }\n      }\n\n      // Check for defeated or expired\n      p.state = enumerateProposalState(proposalStates[i]);\n      const foundState = p.states.find( s => (s.state === p.state) );\n      if (!foundState){\n        const endState = {\n          state: p.state,\n          end_time: null,\n          trx_hash: null,\n          blockNumber: p.endBlock,\n          start_time: endBlockInfo.timestamp,\n        }\n        // Update previous state end_time\n        p.states[p.states.length-1].end_time = endBlockInfo.timestamp;\n        p.states.push(endState);\n      }\n\n      p.votes = votes.filter( v => (parseInt(v.proposalId)===proposalId) );\n\n      const { description, signatures, targets, values, calldatas } = createdEvent.returnValues;\n      p.timestamp = createdBlockInfo ? createdBlockInfo.timestamp : null;\n\n\n      // Idle\n      p.title = description.split(/# |\\n|↵/g)[0].replace(/^#/,'') || 'Untitled';\n      p.description = description.split(/\\n|↵/g);\n      p.description.shift();\n      p.description = p.description.join(\"\\n\");\n      p.description = p.description.replace(/\\n/g,\"<br />\")\n\n      // Overwrite proposal details\n      const proposalDetails = this.functionsUtil.getGlobalConfig(['governance','proposals',proposalId]);\n      if (proposalDetails){\n        Object.keys(proposalDetails).forEach( attr => {\n          p[attr] = proposalDetails[attr];\n        });\n      }\n\n      // Save proposal\n      proposals[i] = {\n        eta:p.eta,\n        actions:{\n          values,\n          targets,\n          calldatas,\n          signatures\n        },\n        id:proposalId,\n        title:p.title,\n        state:p.state,\n        votes:p.votes,\n        states:p.states,\n        executed:p.executed,\n        endBlock:p.endBlock,\n        canceled:p.canceled,\n        forVotes:p.forVotes,\n        proposer:p.proposer,\n        timestamp:p.timestamp,\n        startBlock:p.startBlock,\n        description:p.description,\n        againstVotes:p.againstVotes\n      };\n    });\n\n    this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,proposals,3600);\n\n    // console.log('getProposals',filter_by_state,cachedData);\n\n    if (filter_by_state){\n      proposals = proposals.filter( p => (p && p.state && p.state.toLowerCase() === filter_by_state.toLowerCase() ) );\n    }\n\n    if (voted_by){\n      proposals = proposals.filter( p => (p && p.votes.find( v => (v.voter && v.voter.toLowerCase() === voted_by.toLowerCase()) )) );\n    }\n\n    if (startBlock){\n      proposals = proposals.filter( p => parseInt(p.startBlock)>=parseInt(startBlock) );\n    }\n    \n    return proposals;\n  }\n}\n\nexport default GovernanceUtil;","import React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\n\nclass StatsCard extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          minHeight:this.props.minHeight ? this.props.minHeight : ['130px','153px']\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'flex-start'}\n          flexDirection={'column'}\n          justifyContent={'flex-start'}\n        >\n          <Flex\n            alignItems={'flex-start'}\n            minHeight={ this.props.titleMinHeight ? this.props.titleMinHeight : ['auto','60px'] }\n          >\n            <Heading.h4\n              mb={[3,0]}\n              fontWeight={4}\n              fontSize={[2,3]}\n              textAlign={'left'}\n              color={'dark-gray'}\n              lineHeight={'initial'}\n            >\n              {this.props.title}\n            </Heading.h4>\n          </Flex>\n          {\n            (typeof this.props.value !== 'undefined' && this.props.value !== null && this.props.value.toString().length>0) &&\n              <Text\n                lineHeight={1}\n                fontSize={[4,5]}\n                fontWeight={[3,4]}\n                color={'statValue'}\n                {...this.props.valueProps}\n              >\n                {this.props.value}\n              </Text>\n          }\n          {\n            this.props.children ?\n              this.props.children\n            : null\n          }\n          {\n            (typeof this.props.label !== 'undefined' && this.props.label !== null && this.props.label.toString().length>0) && (\n              <Flex\n                mt={[3,2]}\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <Text\n                  fontSize={1}\n                  fontWeight={3}\n                  color={'legend'}\n                >\n                  {this.props.label}\n                </Text>\n                {\n                  (this.props.labelTooltip && this.props.labelTooltip.length>0) && (\n                    <Tooltip\n                      placement={'top'}\n                      message={this.props.labelTooltip}\n                    >\n                      <Icon\n                        ml={2}\n                        name={\"Info\"}\n                        size={'1em'}\n                        color={'cellTitle'}\n                      />\n                    </Tooltip>\n                  )\n                }\n              </Flex>\n            )\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default StatsCard;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass TooltipModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            title={this.props.title}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n                dangerouslySetInnerHTML={{ __html: this.props.content }}\n              >\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                GOT IT\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TooltipModal;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newLink\":\"CryptoInput_newLink__35W_s\",\"newPill\":\"CryptoInput_newPill__2Q8cA\",\"ethInput\":\"CryptoInput_ethInput__3j2LJ\",\"ethInputDark\":\"CryptoInput_ethInputDark__R8OoA\",\"mainInput\":\"CryptoInput_mainInput__1zffg\",\"button\":\"CryptoInput_button__1N9EQ\",\"gradientButton\":\"CryptoInput_gradientButton__2kh5r\",\"input\":\"CryptoInput_input__3X3pI\",\"newPillContainerAnim\":\"CryptoInput_newPillContainerAnim__RvOCw\"};","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Notifications.module.scss';\nimport { Flex, Icon, Box, Text, Image } from \"rimble-ui\";\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass Notifications extends Component {\n\n  state = {\n    tabOpened:false,\n    notifications:[],\n    mouseOverBell:false,\n    unreadNotifications:0,\n    lastOpenTimestamp:null,\n    mouseOverNotifications:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadNotifications();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const clickEventChanged = prevProps.clickEvent !== this.props.clickEvent;\n    if (clickEventChanged && this.props.clickEvent && !this.state.mouseOverNotifications && !this.state.mouseOverBell && this.state.tabOpened){\n      this.setState({\n        tabOpened:false\n      });\n    }\n\n    const tabOpenedChanged = prevState.tabOpened !== this.state.tabOpened;\n    if (tabOpenedChanged && this.state.tabOpened && this.state.notifications.length>0){\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Notifications',\n        eventAction: 'open_tab',\n        eventLabel: ''\n      });\n\n      this.updateLastOpenTimestamp();\n    }\n\n    const notificationsChanged = JSON.stringify(prevState.notifications) !== JSON.stringify(this.state.notifications);\n    const lastOpenTimestampChanged = prevState.lastOpenTimestamp !== this.state.lastOpenTimestamp;\n    if (lastOpenTimestampChanged || notificationsChanged){\n      const unreadNotifications = this.state.lastOpenTimestamp ? this.state.notifications.filter( n => n.timestamp>this.state.lastOpenTimestamp ).length  : this.state.notifications.length;\n      this.setState({\n        unreadNotifications\n      });\n    }\n  }\n\n  updateLastOpenTimestamp(){\n    const lastOpenTimestamp = Date.now();\n    \n    // Set Notification params in localStorage\n    const notificationsParams = this.functionsUtil.getStoredItem('notificationsParams',true,{});\n    notificationsParams.lastOpenTimestamp = lastOpenTimestamp;\n    this.functionsUtil.setLocalStorage('notificationsParams',notificationsParams,true);\n\n    this.setState({\n      lastOpenTimestamp\n    });\n  }\n\n  async loadNotifications(){\n\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const isMainnet = requiredNetwork === 1;\n\n    // Get stored lastOpenTimestamp for notifications\n    const notificationsParams = this.functionsUtil.getStoredItem('notificationsParams',true,{});\n    const lastOpenTimestamp = notificationsParams.lastOpenTimestamp || null;\n\n    const blockNumber = this.functionsUtil.BNify(await this.functionsUtil.getBlockNumber());\n    const blocksPerWeek = this.functionsUtil.BNify(this.functionsUtil.getGlobalConfig(['network','blocksPerYear'])).div(52.1429);\n    const oneWeekAgoBlock = parseInt(blockNumber.minus(blocksPerWeek));\n\n    // Get active snapshot proposals\n    const [\n      latestFeed,\n      activeSnapshotProposals,\n      governanceProposals,\n      batchedDeposits,\n    ] = await Promise.all([\n      this.functionsUtil.getSubstackLatestFeed(),\n      this.functionsUtil.getSnapshotProposals(true),\n      (isMainnet && !this.props.isMobile) ? this.governanceUtil.getProposals(null,'Active',oneWeekAgoBlock) : [],\n      [],// (isMainnet && !this.props.isMobile) ? this.functionsUtil.getBatchedDeposits(this.props.account,'executed') : []\n    ]);\n\n    let notifications = this.functionsUtil.getGlobalConfig(['notifications']).filter( n => (n.enabled && n.start<=currTime && n.end>currTime) );\n\n    // Show latest Substack for 1 week\n    if (latestFeed){\n      const latestFeedDate = this.functionsUtil.strToMoment(latestFeed.isoDate);\n      if (latestFeedDate.isAfter(this.functionsUtil.strToMoment().subtract(7,'d'))){\n        notifications.push(\n          {\n            link:latestFeed.link,\n            image:'/images/substack.png',\n            timestamp:latestFeedDate._d.getTime(),\n            title:this.functionsUtil.htmlDecode(latestFeed.title),\n            text:this.functionsUtil.htmlDecode(latestFeed.content),\n            date:latestFeedDate.utc().format('MMM DD, YYYY HH:mm UTC'),\n          }\n        );\n      }\n    }\n\n    const currTime = Date.now();\n\n    // Add snapshot proposals\n    const snapshotProposalBaseUrl = this.functionsUtil.getGlobalConfig(['network','providers','snapshot','urls','proposals']);\n\n    if (activeSnapshotProposals){\n      activeSnapshotProposals.forEach( p => {\n          const text = this.functionsUtil.htmlDecode(p.msg.payload.body.replace(/^[#]*/,''));\n          // const text = p.msg.payload.name.replace(/^[#]*/,'');\n          notifications.push({\n            text,\n            image:'/images/snapshot.png',\n            timestamp:p.msg.payload.start*1000,\n            link:snapshotProposalBaseUrl+p.authorIpfsHash,\n            title:this.functionsUtil.htmlDecode(p.msg.payload.name),\n            date:this.functionsUtil.strToMoment(p.msg.payload.start*1000).utc().format('MMM DD, YYYY HH:mm UTC'),\n          });\n      });\n    }\n\n    // Add governance proposals\n    if (governanceProposals){\n      const governanceProposalUrl = this.functionsUtil.getGlobalConfig(['governance','baseRoute'])+'/proposals/';\n      governanceProposals.forEach( p => {\n        notifications.push(\n          {\n            text:p.title,\n            iconProps:{\n              color:'#00acff'\n            },\n            icon:'LightbulbOutline',\n            timestamp:p.timestamp*1000,\n            title:'Governance Proposal',\n            hash:governanceProposalUrl+p.id,\n            date:this.functionsUtil.strToMoment(p.timestamp*1000).utc().format('MMM DD, YYYY HH:mm UTC'),\n          }\n        );\n      });\n    }\n\n    // Add Executed Batch Deposits\n    if (batchedDeposits){\n      const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n      const batchDepositBaseUrl = this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])+`/tools/${batchDepositConfig.route}/`;\n      Object.keys(batchedDeposits).forEach( batchToken => {\n        const batchInfo = batchedDeposits[batchToken];\n        const timestamp = batchInfo.lastExecution.timeStamp*1000;\n        const text = `You can claim ${batchInfo.batchRedeems.toFixed(4)} ${batchToken}`;\n        notifications.push({\n          text,\n          timestamp,\n          icon:'DoneAll',\n          title:'Batch Deposit Executed',\n          hash:batchDepositBaseUrl+batchToken,\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          date:this.functionsUtil.strToMoment(timestamp).utc().format('MMM DD, YYYY HH:mm UTC')\n        });\n      });\n    }\n\n    notifications = notifications.sort((a,b) => (a.timestamp < b.timestamp ? 1 : -1));\n\n    this.setState({\n      notifications,\n      lastOpenTimestamp\n    });\n  }\n\n  setMouseOverBell(mouseOverBell){\n    this.setState({\n      mouseOverBell\n    });\n  }\n\n  setMouseOverNotifications(mouseOverNotifications){\n    this.setState({\n      mouseOverNotifications\n    });\n  }\n\n  toggleTab(){\n    this.setState((prevState) => ({\n      tabOpened:!prevState.tabOpened\n    }));\n  }\n\n  openNotification(notification){\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Notifications',\n      eventAction: 'open_notification',\n      eventLabel: notification.link || notification.hash\n    });\n\n    if (notification.link){\n      return this.functionsUtil.openWindow(notification.link);\n    } else if (notification.hash) {\n      return window.location.hash = notification.hash;\n    }\n\n    return false;\n  }\n\n  render() {\n    const hasUnreadNotifications = this.state.unreadNotifications>0;\n    const iconColor = hasUnreadNotifications ? '#ffdc00' : 'cellText';\n    return (\n      <Flex\n        zIndex={999}\n        position={'relative'}\n        {...this.props.flexProps}\n      >\n        <Box\n          width={1}\n          position={'relative'}\n          onMouseOut={(e) => this.setMouseOverBell(false)}\n          onMouseOver={(e) => this.setMouseOverBell(true)}\n        >\n          <Icon\n            size={'2.4em'}\n            color={iconColor}\n            name={'Notifications'}\n            onClick={this.toggleTab.bind(this)}\n            className={[styles.bell,(hasUnreadNotifications ? styles.ring : null),(this.state.tabOpened || this.state.notifications.length>0 ? styles.active : null)]}\n          />\n          {\n            hasUnreadNotifications && \n              <Box\n                className={styles.counter}\n              >\n                {this.state.notifications.length}\n              </Box>\n          }\n        </Box>\n        {\n          this.state.tabOpened &&\n            <DashboardCard\n              cardProps={{\n                style:{\n                  right:0,\n                  maxHeight:'21em',\n                  overflow:'scroll',\n                  position:'absolute',\n                  top:this.props.isMobile ? '2.8em' : '3em',\n                },\n                minWidth:['91vw','22em'],\n                onMouseOut:(e) => this.setMouseOverNotifications(false),\n                onMouseOver:(e) => this.setMouseOverNotifications(true),\n              }}\n            >\n              <Flex\n                width={1}\n                flexDirection={'column'}\n              >\n              {\n                this.state.notifications.length>0 ?\n                  this.state.notifications.map( (n,index) => (\n                    <ExtLink\n                      style={{\n                        textDecoration:'none'\n                      }}\n                      key={`notification_${index}`}\n                      onClick={ e => this.openNotification(n) }\n                    >\n                      <Flex\n                        py={2}\n                        px={1}\n                        flexDirection={'row'}\n                        className={[styles.notification,this.props.themeMode === 'dark' ? styles.dark : null]}\n                        borderBottom={index<this.state.notifications.length-1 ? `1px solid ${this.props.theme.colors.divider}` : null}\n                      >\n                        <Flex\n                          minWidth={'2em'}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          {\n                            n.icon ? (\n                              <Icon\n                                name={n.icon}\n                                size={'1.6em'}\n                                color={'copyColor'}\n                                {...n.iconProps}\n                              />\n                            ) : n.image && (\n                              <Image\n                                src={n.image}\n                                width={'1.6em'}\n                                height={'1.6em'}\n                              />\n                            )\n                          }\n                        </Flex>\n                        <Flex\n                          ml={1}\n                          overflow={'hidden'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={1}\n                            lineHeight={1.3}\n                            color={'primary'}\n                            style={{\n                              overflow:'hidden',\n                              whiteSpace:'nowrap',\n                              textOverflow:'ellipsis'\n                            }}\n                          >\n                            {n.title}\n                          </Text>\n                          <Text\n                            fontSize={1}\n                            lineHeight={1.3}\n                            color={'copyColor'}\n                            style={{\n                              overflow:'hidden',\n                              whiteSpace:'nowrap',\n                              textOverflow:'ellipsis'\n                            }}\n                          >\n                            {n.text}\n                          </Text>\n                          <Text\n                            fontSize={0}\n                            lineHeight={1.3}\n                            color={'cellText'}\n                          >\n                            {n.date}\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </ExtLink>\n                  ))\n                : (\n                  <Text\n                    py={2}\n                    textAlign={'center'}\n                  >\n                    There are no notifications.\n                  </Text>\n                )\n              }\n              </Flex>\n            </DashboardCard>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Notifications;\n","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport AssetField from '../../AssetField/AssetField.js';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport { Heading, Modal, Flex, EthAddress } from \"rimble-ui\";\nimport ButtonLoader from '../../ButtonLoader/ButtonLoader.js';\nimport styles from '../../CryptoInput/CryptoInput.module.scss';\nimport CardIconButton from '../../CardIconButton/CardIconButton';\n\nclass AccountModal extends React.Component {\n\n  state = {\n    logout: false,\n    balances: null\n  }\n\n  loadBalances = async () => {\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized || !this.props.account || this.state.balances !== null){\n      return false;\n    }\n\n    const balances = [];\n    const allTokens = Object.keys(this.props.availableStrategies.best);\n\n    allTokens.forEach( baseToken => {\n      const tokens = [];\n      tokens.push(baseToken);\n      Object.keys(this.props.availableStrategies).forEach( strategy => {\n        const strategyToken = this.props.availableStrategies[strategy][baseToken];\n        if (strategyToken){\n          tokens.push(strategyToken.idle.token);\n        }\n      });\n\n      balances.push(tokens);\n    });\n\n    this.setState({\n      balances\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n    this.loadBalances();\n  }\n\n  componentDidUpdate(prevProps) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.acccount !== this.props.account;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && this.props.availableStrategies;\n    if (availableStrategiesChanged || accountChanged || contractsInitialized){\n      this.loadBalances();\n    }\n  }\n\n  setConnector = async (connectorName) => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Connect',\n      eventAction: 'logout'\n    });\n\n    if (typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName);\n    }\n\n    return await this.props.context.setConnector(connectorName);\n  }\n\n  async logout(){\n    this.setState({\n      logout:true\n    });\n\n    this.props.logout();\n    await this.setConnector('Infura');\n    // this.props.closeModal();\n  }\n\n  goToSection(section){\n    this.props.goToSection(section);\n    this.props.closeModal();\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n\n    if (this.props.account){\n\n      const rows = (Object.keys(this.props.availableStrategies).length+1);\n      const renderBalances = this.state.balances && this.state.balances.map( (tokens,i) => {\n        return (\n          <Flex\n            mt={2}\n            width={1}\n            boxShadow={0}\n            key={'balance_'+i}\n            alignItems={'center'}\n            flexDirection={'row'}\n            >\n              {\n                tokens.map( (token,tokenIndex) => (\n                  <Flex\n                    width={1/rows}\n                    flexDirection={'row'}\n                    key={'balance_token_'+token}\n                    justifyContent={'flex-start'}\n                  >\n                    <AssetField\n                      token={token}\n                      tokenConfig={{\n                        token:token\n                        ,...this.functionsUtil.getGlobalConfig(['stats','tokens',token])\n                      }}\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mr:[1,2],\n                          ml:[1,4],\n                          width:['1.4em','2em'],\n                          height:['1.4em','2em']\n                        }\n                      }}\n                    />\n                    <AssetField\n                      {...this.props}\n                      token={token}\n                      tokenConfig={{\n                        token:token\n                      }}\n                      fieldInfo={{\n                        name:'tokenBalance',\n                        props:{\n                          fontSize:[0,2],\n                          fontWeight:500,\n                          color:'cellText'\n                        }\n                      }}\n                    />\n                  </Flex>\n                ) )\n              }\n          </Flex>\n        );\n      });\n\n      const showTools = ['addFunds','tokenSwap'];\n\n      return (\n        <Modal isOpen={this.props.isOpen}>\n          <ModalCard closeFunc={this.props.closeModal}>\n            <ModalCard.Header title={'Account overview'}></ModalCard.Header>\n            <ModalCard.Body>\n              <Flex\n                alignItems={'center'}\n                width={[\"auto\", \"40em\"]}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  width={1}\n                  mb={[2,3]}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  maxWidth={['100%','30em']}\n                  justifyContent={'stretch'}\n                >\n                  <EthAddress\n                    width={1}\n                    address={this.props.account}\n                    className={ this.props.themeMode === 'light' ? styles.ethInput : styles.ethInputDark }\n                  />\n                </Flex>\n                <Flex\n                  width={1}\n                  mb={[2,3]}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  maxWidth={['100%','30em']}\n                >\n                  <Heading.h4\n                    color={'copyColor'}\n                    textAlign={'center'}\n                  >\n                    Balances:\n                  </Heading.h4>\n                  { renderBalances }\n                </Flex>\n                {\n                  !viewOnly && (\n                    <Flex\n                      width={1}\n                      mb={[2,3]}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Heading.h4\n                        mb={2}\n                        color={'copyColor'}\n                        textAlign={'center'}\n                      >\n                        Tools:\n                      </Heading.h4>\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        justifyContent={'center'}\n                        flexDirection={['column','row']}\n                      >\n                        {\n                          showTools.map( toolName => {\n                            const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                            return (\n                              <CardIconButton\n                                {...this.props}\n                                key={`tool_${toolName}`}\n                                cardProps={{\n                                  mx:[0,2],\n                                  my:[2,0],\n                                  width:'auto',\n                                  minWidth:['50%','auto']\n                                }}\n                                icon={toolConfig.icon}\n                                text={toolConfig.label}\n                                handleClick={ e => this.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            )\n                          })\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            </ModalCard.Body>\n\n            <ModalCard.Footer>\n              <ButtonLoader\n                buttonText={'Logout wallet'}\n                isLoading={this.state.logout}\n                handleClick={ async () => { await this.logout() } }\n                buttonProps={{className:styles.gradientButton,borderRadius:'2rem',mt:[4,8],minWidth:['95px','145px'],size:['auto','medium']}}\n              >\n              </ButtonLoader>\n            </ModalCard.Footer>\n          </ModalCard>\n        </Modal>\n      );\n    }\n    return null;\n  }\n}\n\nexport default AccountModal;\n","import React, { Component } from 'react';\nimport styles from './MenuAccount.module.scss';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Icon, Image, Link, Text } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport Notifications from '../Notifications/Notifications';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport AccountModal from \"../utilities/components/AccountModal\";\n\nclass MenuAccount extends Component {\n\n  state = {\n    isModalOpen:null,\n    idleTokenBalance:null\n  };\n\n  // Utils\n  idleGovToken = null;\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadIdleTokenBalance();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.setState({\n        isModalOpen:null\n      },() => {\n        this.loadIdleTokenBalance();\n      });\n    }\n  }\n\n  async loadIdleTokenBalance(){\n    const idleGovTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n    if (idleGovTokenEnabled){\n      let idleTokenBalance = this.functionsUtil.BNify(0);\n      const [\n        balance,\n        unclaimed\n      ] = await Promise.all([\n        this.idleGovToken.getBalance(this.props.account),\n        this.idleGovToken.getUnclaimedTokens(this.props.account)\n      ]);\n\n      if (balance && unclaimed){\n        idleTokenBalance = this.functionsUtil.BNify(balance).plus(unclaimed);\n      }\n\n      return this.setState({\n        idleTokenBalance\n      });\n    }\n    return null;\n  }\n\n  toggleModal = (modalName) => {\n    this.setState(state => ({...state, isModalOpen: (state.isModalOpen===modalName ? null : modalName) }));\n  }\n\n  render() {\n    const walletProvider = this.functionsUtil.getStoredItem('walletProvider',false,null);\n    const connectorInfo = walletProvider ? this.functionsUtil.getGlobalConfig(['connectors',walletProvider.toLowerCase()]) : null;\n    const walletIcon = connectorInfo && connectorInfo.icon ? connectorInfo.icon : walletProvider ? `${walletProvider.toLowerCase()}.svg` : null;\n\n    const governanceRoute = this.functionsUtil.getGlobalConfig(['governance','baseRoute']);\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const dashboardRoute = this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])+'/'+Object.keys(this.props.availableStrategies)[0];\n\n    return (\n      this.props.account ? (\n        <Flex\n          width={1}\n          flexDirection={['column','row']}\n          alignItems={['flex-start','center']}\n        >\n          <Flex\n            mb={[2,0]}\n            flexDirection={'row'}\n            alignItems={'center'}\n            width={[1,'fit-content']}\n            justifyContent={'space-between'}\n          >\n            {\n              this.props.isMobile && (\n                <Flex\n                  mr={2}\n                >\n                  <Icon\n                    size={'2.4em'}\n                    color={'copyColor'}\n                    onClick={this.props.toggleMenu}\n                    name={ this.props.menuOpened ? 'Close' : 'Menu'}\n                  />\n                </Flex>\n              )\n            }\n            <DashboardCard\n              {...this.props}\n              cardProps={{\n                py:1,\n                px:[1,2],\n                mr:[2,0],\n                display:'flex',\n                width:[1,'auto']\n              }}\n              isInteractive={true}\n              handleClick={e => this.toggleModal('account')}\n            >\n              <Flex\n                p={0}\n                width={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={['center','flex-start']}\n              >\n                {\n                  connectorInfo ? (\n                    <Image\n                      mr={[1,2]}\n                      width={'2em'}\n                      height={'2em'}\n                      display={'inline-flex'}\n                      alt={walletProvider.toLowerCase()}\n                      src={`images/connectors/${walletIcon}`}\n                    />\n                  ) : (\n                    <Icon\n                      mr={[1,2]}\n                      size={'2em'}\n                      color={'copyColor'}\n                      name={'AccountCircle'}\n                    />\n                  )\n                }\n                <ShortHash\n                  fontSize={2}\n                  fontWeight={3}\n                  {...this.props}\n                  color={'copyColor'}\n                  hash={this.props.account}\n                />\n              </Flex>\n            </DashboardCard>\n            {\n              this.props.isMobile &&\n                <Notifications\n                  {...this.props}\n                />\n            }\n          </Flex>\n          <Flex\n            ml={[0,3]}\n            style={{\n              flex:'1 1 auto'\n            }}\n            width={[1,'auto']}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={this.state.idleTokenBalance ? 'space-between' : 'flex-end'}\n          >\n            {\n              this.state.idleTokenBalance && \n                <Link\n                  style={{\n                    textDecoration:'none'\n                  }}\n                  px={2}\n                  className={styles.balanceButton}\n                  onClick={ e => this.props.setGovModal(true) }\n                >\n                  <Flex\n                    alignItems={'center'}\n                    height={['38px','42px']}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mr={1}\n                      width={'1.7em'}\n                      height={'1.7em'}\n                      display={'inline-flex'}\n                      src={`images/tokens/IDLE.png`}\n                    />\n                    <Text\n                      color={'white'}\n                      fontSize={[1,2]}\n                      fontWeight={500}\n                    >\n                      {this.state.idleTokenBalance.toFixed(2)} IDLE\n                    </Text>\n                  </Flex>\n                </Link>\n            }\n            <Flex\n              width={'auto'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-end'}\n            >\n              {\n                governanceEnabled && this.props.isDashboard ? (\n                  <RoundButton\n                    buttonProps={{\n                      mainColor:'redeem',\n                      style:{\n                        width:'auto',\n                        height:this.props.isMobile ? '38px' : '45px'\n                      },\n                      size:this.props.isMobile ? 'small' : 'medium'\n                    }}\n                    handleClick={ (e) => { this.props.goToSection(governanceRoute,false) } }\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        mr={[1,2]}\n                        size={'1.6em'}\n                        color={'white'}\n                        name={'ExitToApp'}\n                      />\n                      <Text\n                        fontWeight={3}\n                        color={'white'}\n                        fontSize={[2,3]}\n                      >\n                        Governance\n                      </Text>\n                    </Flex>\n                  </RoundButton>\n                ) : this.props.isGovernance && (\n                  <RoundButton\n                    buttonProps={{\n                      mainColor:'redeem',\n                      style:{\n                        width:'auto',\n                        height:this.props.isMobile ? '38px' : '45px'\n                      },\n                      size:this.props.isMobile ? 'small' : 'medium'\n                    }}\n                    handleClick={ (e) => { this.props.goToSection(dashboardRoute,false) } }\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        mr={[1,2]}\n                        size={'1.6em'}\n                        color={'white'}\n                        name={'ExitToApp'}\n                      />\n                      <Text\n                        fontWeight={3}\n                        color={'white'}\n                        fontSize={[2,3]}\n                      >\n                        Dashboard\n                      </Text>\n                    </Flex>\n                  </RoundButton>\n                )\n              }\n              {\n                !this.props.isMobile &&\n                  <Notifications\n                    {...this.props}\n                    flexProps={{\n                      ml:2\n                    }}\n                  />\n              }\n            </Flex>\n          </Flex>\n          <AccountModal\n            {...this.props}\n            isOpen={this.state.isModalOpen==='account'}\n            closeModal={e => this.toggleModal('account') }\n          />\n        </Flex>\n      ) : (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        >\n          {\n            this.props.isMobile && (\n              <Flex\n                mr={2}\n              >\n                <Icon\n                  size={'2.4em'}\n                  color={'copyColor'}\n                  onClick={this.props.toggleMenu}\n                  name={ this.props.menuOpened ? 'Close' : 'Menu'}\n                />\n              </Flex>\n            )\n          }\n          <CardIconButton\n            icon={'Power'}\n            {...this.props}\n            text={'Connect'}\n            handleClick={this.props.connectAndValidateAccount}\n          />\n        </Flex>\n      )\n    );\n  }\n}\n\nexport default MenuAccount;\n","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\nimport { Text, Modal, Flex, Image, Link, Icon } from \"rimble-ui\";\n\nclass GovModal extends React.Component {\n\n  state = {\n    total:null,\n    balance:null,\n    txStatus:null,\n    unclaimed:null,\n    processing: {\n      txHash:null,\n      loading:false\n    }\n  }\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  loadTokenInfo = async () => {\n    const [\n      balance,\n      unclaimed\n    ] = await Promise.all([\n      this.idleGovToken.getBalance(this.props.account),\n      this.idleGovToken.getUnclaimedTokens(this.props.account)\n    ]);\n\n    let total = this.functionsUtil.BNify(0);\n    if (balance && unclaimed){\n      total = this.functionsUtil.BNify(balance).plus(unclaimed);\n    }\n\n    this.setState({\n      total,\n      balance,\n      unclaimed\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n    this.loadTokenInfo();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    // const txStatusChanged = prevState.txStatus !== this.state.txStatus;\n    // if (txStatusChanged && this.state.txStatus === 'success'){\n    //   this.loadTokenInfo();\n    // }\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      txStatus:null,\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  claim = async () => {\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'claim',\n        eventCategory: 'Governance',\n        eventLabel: tx.status ? tx.status : error\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const newState = {\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx.status ? tx.status : 'error',\n      };\n\n      if (tx.status === 'success'){\n        newState.balance = this.state.unclaimed;\n        newState.unclaimed = this.functionsUtil.BNify(0);\n\n        if (typeof this.props.claimCallback === 'function'){\n          this.props.claimCallback();\n        }\n      }\n\n      this.setState(newState);\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.idleGovToken.claimRewards(callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  closeModal = async (action) => {\n    this.props.closeModal();\n  }\n\n  render() {\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          bgLayer={true}\n          mainColor={'white'}\n          maxWidth={['auto','420px']}\n          closeFunc={this.props.closeModal}\n          background={'radial-gradient(76.02% 75.41% at 1.84% 0%, rgb(162, 196, 246) 0%, rgb(10, 79, 176) 100%)'}\n        >\n          <ModalCard.Header\n            pt={3}\n            titleProps={{\n              color:'white'\n            }}\n            title={'Your IDLE balance'}\n            borderBottom={'1px solid rgba(255,255,255,0.2)'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body\n            px={3}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Image\n                mt={2}\n                width={'3em'}\n                height={'3em'}\n                src={'images/tokens/IDLE.png'}\n              />\n              <Text\n                mt={2}\n                fontSize={7}\n                color={'white'}\n                fontWeight={500}\n              >\n                {this.state.total ? this.state.total.toFixed(2) : '-'}\n              </Text>\n              <Text\n                mb={2}\n                fontSize={3}\n                color={'white'}\n                fontWeight={400}\n                textAlign={'center'}\n              >\n                {\n                  this.state.unclaimed && this.state.unclaimed.gt(0) ? 'You can now claim your IDLE tokens from the Early LPs Program!' : 'You don\\'t have any IDLE to claim from the Early LPs Program'\n                }\n              </Text>\n              <Flex\n                pb={2}\n                mb={3}\n                width={1}\n                flexDirection={'column'}\n                borderBottom={'1px solid rgba(255,255,255,0.2)'}\n              >\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    Balance:\n                  </Text>\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    {this.state.balance ? this.state.balance.toFixed(4) : '-'}\n                  </Text>\n                </Flex>\n                <Flex\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    Unclaimed:\n                  </Text>\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    {this.state.unclaimed ? this.state.unclaimed.toFixed(4) : '-'}\n                  </Text>\n                </Flex>\n                <Link\n                  href={`/#${this.functionsUtil.getGlobalConfig(['governance','baseRoute'])}`}\n                >\n                  <Flex\n                    zIndex={10}\n                    position={'relative'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontSize={2}\n                      color={'white'}\n                      fontWeight={400}\n                    >\n                      Go to governance\n                    </Text>\n                    <Icon\n                      ml={1}\n                      size={'1em'}\n                      color={'white'}\n                      name={\"OpenInNew\"}\n                    />\n                  </Flex>\n                </Link>\n              </Flex>\n              {\n                <Flex\n                  mb={3}\n                  width={1}\n                  zIndex={10}\n                  position={'relative'}\n                  alignItems={'center'}\n                  justifyContent={'center'}\n                >\n                  {\n                    this.state.unclaimed && this.state.unclaimed.gt(0) ? \n                      // Sending transaction\n                      this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          textColor={'white'}\n                          cancelTextColor={'moon-gray'}\n                          cancelTextHoverColor={'white'}\n                          waitText={`Claim estimated in`}\n                          hash={this.state.processing.txHash}\n                          endMessage={`Finalizing Claim request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            color:'blue',\n                            width:[1,'45%'],\n                            mainColor:'white',\n                            contrastColor:'blue',\n                            disabled:!this.state.unclaimed || this.state.unclaimed.lte(0)\n                          }}\n                          handleClick={this.claim.bind(this)}\n                        >\n                          Claim\n                        </RoundButton>\n                      )\n                    : (\n                      <RoundButton\n                        buttonProps={{\n                          color:'blue',\n                          width:[1,'45%'],\n                          mainColor:'white',\n                          contrastColor:'blue',\n                        }}\n                        handleClick={this.closeModal.bind(this)}\n                      >\n                        Close\n                      </RoundButton>\n                    )\n                  }\n                </Flex>\n              }\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default GovModal;","import React, { Component } from 'react';\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport { Flex, Text, Button, Icon, Checkbox, Input } from \"rimble-ui\";\n\nclass DelegateVesting extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    newDelegate:'',\n    delegatee:null,\n    vestingAmount:null,\n    currentDelegate:null,\n    delegateAddressValid:false,\n    delegateDifferentWallet:false,\n    vestingContractDelegated:false\n  };\n\n  // Utils\n  idleGovToken = null;\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async loadData(){\n    const idleGovTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n    if (idleGovTokenEnabled && this.props.account){\n      const [\n        delegatesChanges,\n        currentDelegate,\n        vestingContract,\n      ] = await Promise.all([\n        this.governanceUtil.getDelegatesChanges(),\n        this.governanceUtil.getCurrentDelegate(this.props.account),\n        this.governanceUtil.getVestingContract(this.props.account)\n      ]);\n\n      // Init flags\n      let delegatee = null;\n      let vestingAmount = null;\n      let vestingContractDelegated = false;\n\n      if (vestingContract){\n        // Take vesting amount\n        vestingAmount = await this.governanceUtil.getVestingAmount(this.props.account);\n\n        // Check Vesting Contract Delegated\n        const lastDelegateTx = delegatesChanges.filter( d => (d.returnValues.delegator.toLowerCase() === vestingContract.toLowerCase() ) ).pop();\n        delegatee = lastDelegateTx ? lastDelegateTx.returnValues.toDelegate : false;\n        vestingContractDelegated = delegatee && delegatee !== '0x0000000000000000000000000000000000000000';\n      }\n\n      return this.setState({\n        delegatee,\n        vestingAmount,\n        currentDelegate,\n        vestingContractDelegated\n      });\n    }\n    return null;\n  }\n\n  /*\n  async delegateTokens(){\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Governance',\n        eventAction: 'delegateTokens',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n\n      const newState = {\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      };\n\n      const txSucceeded = tx.status === 'success';\n      if (txSucceeded){\n        newState.idleTokenDelegated = true;\n        this.loadData();\n      }\n\n      this.setState(newState);\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.governanceUtil.setDelegate(this.props.account,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n  */\n\n  async delegateVesting(revoke=false){\n\n    let delegate = this.state.delegateDifferentWallet ? this.state.newDelegate : this.props.account;\n    if (revoke){\n      delegate = '0x'+'0'.repeat(40);\n    }\n\n    const delegateValid = this.functionsUtil.checkAddress(delegate);\n    if (!delegateValid){\n      return false;\n    }\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Governance',\n        eventAction: 'delegateVesting',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const newState = {\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      };\n\n      const txSucceeded = tx.status === 'success';\n      if (txSucceeded){\n        newState.delegatee=delegate;\n        newState.delegateDifferentWallet=false;\n        newState.vestingContractDelegated=!revoke;\n        this.loadData();\n      }\n\n      this.setState(newState);\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.governanceUtil.delegateVesting(this.props.account,delegate,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  changeDelegate(e){\n    const newDelegate = e.target.value;\n    const delegateAddressValid = this.functionsUtil.checkAddress(newDelegate);\n    this.setState({\n      newDelegate,\n      delegateAddressValid\n    });\n  }\n\n  setDelegateDifferentWallet(delegateDifferentWallet){\n    this.setState({\n      delegateDifferentWallet\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadData();\n    }\n  }\n\n  render() {\n    return this.state.vestingAmount ? (\n      <Flex\n        p={2}\n        mt={3}\n        width={1}\n        border={2}\n        borderRadius={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'cardBgHover'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Text\n            mb={1}\n            fontSize={3}\n            fontWeight={500}\n            color={'flashColor'}\n            textAlign={'center'}\n          >\n            You have {this.state.vestingAmount.div(1e18).toFixed(5)} {this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])} in the Vesting Contract\n          </Text>\n          {\n            (this.state.vestingContractDelegated && this.state.delegatee && !this.state.delegateDifferentWallet) ? (\n              <Text\n                mb={1}\n                fontWeight={500}\n                color={'flashColor'}\n                fontSize={'15px'}\n                textAlign={'center'}\n              >\n                Currently your votes are delegated to {this.state.delegatee}\n              </Text>\n            ) : (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text\n                  mb={1}\n                  fontWeight={500}\n                  fontSize={'15px'}\n                  color={'flashColor'}\n                  textAlign={'center'}\n                >\n                  {\n                    this.state.delegateDifferentWallet ? 'Follow the next steps to delegate your tokens:' : 'Press the button below to delegate the votes in the vesting contract to yourself:'\n                  }\n                </Text>\n                {\n                  this.state.delegateDifferentWallet && (\n                    <Flex\n                      mb={2}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <Icon\n                          size={'1.5em'}\n                          name={ this.state.delegateAddressValid ? 'CheckBox' : 'LooksOne'}\n                          color={ this.state.delegateAddressValid ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                        />\n                        <Text\n                          ml={1}\n                          fontWeight={500}\n                          fontSize={'15px'}\n                          textAlign={'left'}\n                          color={'flashColor'}\n                        >\n                          Insert delegate address\n                        </Text>\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <Icon\n                          size={'1.5em'}\n                          name={'LooksTwo'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          ml={1}\n                          fontWeight={500}\n                          fontSize={'15px'}\n                          color={'flashColor'}\n                          textAlign={'left'}\n                        >\n                          Delegate Vesting\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            )\n          }\n        </Flex>\n        {\n          this.state.delegateDifferentWallet && (\n            <Input\n              mb={2}\n              min={0}\n              type={'text'}\n              required={true}\n              borderRadius={2}\n              fontWeight={500}\n              textAlign={'center'}\n              width={['100%','30em']}\n              borderColor={'cardBorder'}\n              backgroundColor={'cardBg'}\n              boxShadow={'none !important'}\n              value={this.state.newDelegate}\n              placeholder={`Insert delegate address`}\n              onChange={this.changeDelegate.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n            />\n          )\n        }\n        {\n          this.state.processing && this.state.processing.loading ? (\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <TxProgressBar\n                {...this.props}\n                waitText={`Delegate estimated in`}\n                hash={this.state.processing.txHash}\n                endMessage={`Finalizing delegate request...`}\n                cancelTransaction={this.cancelTransaction.bind(this)}\n              />\n            </Flex>\n          ) : (this.state.vestingContractDelegated && !this.state.delegateDifferentWallet) ? (\n            <Button\n              size={'small'}\n              mainColor={'red'}\n              onClick={ e => this.delegateVesting(true) }\n            >\n              REVOKE DELEGATE\n            </Button>\n          )\n          /*\n          : !this.state.idleTokenDelegated && !this.state.delegateDifferentWallet ? (\n            <Button\n              size={'small'}\n              onClick={ e => this.delegateTokens() }\n            >\n              DELEGATE TOKENS\n            </Button>\n          )*/\n          : (!this.state.vestingContractDelegated || this.state.delegateDifferentWallet) && (\n            <Button\n              size={'small'}\n              mainColor={'blue'}\n              onClick={ e => this.delegateVesting(false) }\n              disabled={ this.state.delegateDifferentWallet && !this.state.delegateAddressValid }\n            >\n              DELEGATE VESTING\n            </Button>\n          )\n        }\n        <Checkbox\n          mt={1}\n          required={false}\n          color={'#f3f6ff'}\n          label={`Delegate to different wallet`}\n          checked={this.state.delegateDifferentWallet}\n          onChange={ e => this.setDelegateDifferentWallet(e.target.checked) }\n        />\n      </Flex>\n    ) : null;\n  }\n}\n\nexport default DelegateVesting;\n","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport MenuAccount from '../MenuAccount/MenuAccount';\nimport GovModal from \"../utilities/components/GovModal\";\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport { Box, Flex, Text, Icon, Button } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport DelegateVesting from '../DelegateVesting/DelegateVesting';\n\nclass DashboardHeader extends Component {\n\n  state = {\n    unclaimed:null,\n    activeNews:null,\n    vestingAmount:null,\n    govModalOpened:false\n  }\n\n  // Utils\n  idleGovToken = null;\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      await this.loadData();\n    }\n  }\n\n  async loadData(){\n    const idleGovTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n    if (idleGovTokenEnabled && this.props.account){\n      const unclaimed = await this.idleGovToken.getUnclaimedTokens(this.props.account);\n      this.setState({\n        unclaimed\n      });\n    }\n\n    const stakingConfig = this.functionsUtil.getGlobalConfig(['tools','stake']);\n    const nexusMutualConfig = this.functionsUtil.getGlobalConfig(['tools','nexusMutual']);\n\n    const flashNews = [\n      {\n        name:'Governance Forum',\n        icon:'LightbulbOutline',\n        text:`Do you have any idea to improve the Idle Protocol? Let's discuss it in our`,\n        link:{\n          text:`Governance Forum`,\n          url:this.functionsUtil.getGlobalConfig(['forumURL'])\n        }\n      },\n      {\n        icon:stakingConfig.icon,\n        name:stakingConfig.label,\n        text:`You can now stake your $IDLE token and take part of the fee-sharing for long-term holders.`,\n        link:{\n          text:`Stake Now`,\n          url:this.functionsUtil.getDashboardSectionUrl(`tools/${stakingConfig.route}`)\n        }\n      },\n      {\n        icon:nexusMutualConfig.icon,\n        name:nexusMutualConfig.label,\n        text:`Protect your funds against smart-contract attacks with Nexus Mutual.`,\n        link:{\n          text:`Get Covered`,\n          url:this.functionsUtil.getDashboardSectionUrl(`tools/${this.functionsUtil.getGlobalConfig(['tools','nexusMutual','route'])}`)\n        }\n      }\n    ];\n\n    const activeNews = flashNews[Math.floor(Math.random()*flashNews.length)];\n    this.setState({\n      activeNews\n    });\n\n    return null;\n  }\n\n  setConnector = async (connectorName) => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventAction: 'logout',\n      eventCategory: 'Connect'\n    });\n\n    if (typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName);\n    }\n\n    return await this.props.context.setConnector(connectorName);\n  }\n\n  async exit(){\n    this.props.goToSection('/',false);\n  }\n\n  setGovModal(govModalOpened){\n    this.setState({\n      govModalOpened\n    });\n  }\n\n  render() {\n    return (\n      <Box\n        mb={3}\n      >\n        <Flex\n          pb={2}\n          width={1}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n          alignItems={['flex-end','center']}\n          borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n        >\n          <MenuAccount\n            {...this.props}\n            setGovModal={this.setGovModal.bind(this)}\n          />\n        </Flex>\n        {\n          this.state.unclaimed && this.state.unclaimed.gt(0) ? (\n            <DashboardCard\n              cardProps={{\n                p:2,\n                mt:3,\n                width:1,\n              }}\n              isActive={true}\n              isInteractive={false}\n            >\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <Text\n                  fontWeight={500}\n                  fontSize={'15px'}\n                  color={'flashColor'}\n                  textAlign={'center'}\n                >\n                  IDLE Governance Token is now available, \n                  <ExtLink\n                    ml={1}\n                    fontWeight={500}\n                    color={'primary'}\n                    fontSize={'15px'}\n                    hoverColor={'primary'}\n                    href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n                  >\n                    discover more\n                  </ExtLink>! You have {this.state.unclaimed.toFixed(4)} IDLE tokens to claim.\n                </Text>\n                <Button\n                  ml={[0,2]}\n                  mt={[2,0]}\n                  size={'small'}\n                  mainColor={'blue'}\n                  onClick={ e => this.setGovModal(true) }\n                >\n                  CLAIM NOW\n                </Button>\n              </Flex>\n            </DashboardCard>\n          ) : this.props.isDashboard && this.state.activeNews && (\n            <DashboardCard\n              cardProps={{\n                p:2,\n                mt:3,\n                width:1,\n              }}\n              isActive={true}\n              isInteractive={false}\n            >\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <Icon\n                  mr={1}\n                  size={'1.2em'}\n                  color={'flashColor'}\n                  name={this.state.activeNews.icon}\n                />\n                <Text\n                  fontWeight={500}\n                  fontSize={'15px'}\n                  color={'flashColor'}\n                  textAlign={'center'}\n                >\n                  {this.state.activeNews.text}\n                </Text>\n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={this.state.activeNews.link.url}\n                  onClick={ e => this.functionsUtil.sendGoogleAnalyticsEvent({\n                    eventCategory: 'UI',\n                    eventAction: 'flashNews',\n                    eventLabel: this.state.activeNews.name\n                  })}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    {this.state.activeNews.link.text}\n                    <Icon\n                      ml={1}\n                      size={'0.9em'}\n                      color={'primary'}\n                      name={'OpenInNew'}\n                    />\n                    .\n                  </Flex>\n                </ExtLink>\n              </Flex>\n            </DashboardCard>\n          )\n        }\n        {\n          this.props.isGovernance && \n            <DelegateVesting\n              {...this.props}\n            />\n        }\n        <GovModal\n          {...this.props}\n          isOpen={this.state.govModalOpened}\n          claimCallback={this.loadData.bind(this)}\n          closeModal={e => this.setGovModal(false) }\n        />\n      </Box>\n    );\n  }\n}\n\nexport default DashboardHeader;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balanceButton\":\"MenuAccount_balanceButton__3t7wZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bell\":\"Notifications_bell__5m9tk\",\"active\":\"Notifications_active__2Mwzv\",\"ring\":\"Notifications_ring__1ir3w\",\"counter\":\"Notifications_counter__3EbuS\",\"list\":\"Notifications_list__2pkAk\",\"notification\":\"Notifications_notification__TMlFX\",\"dark\":\"Notifications_dark__14hO4\"};"],"sourceRoot":""}