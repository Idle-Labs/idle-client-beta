{"version":3,"sources":["AssetField/AssetField.js","SmartNumber/SmartNumber.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","PageNotFound/PageNotFound.module.scss","utilities/components/ShortHash.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","AllocationChart/AllocationChart.js","FlexLoader/FlexLoader.js","PortfolioEquity/PortfolioEquity.js","ChartCustomTooltip/ChartCustomTooltip.js","ImageButton/ImageButton.js","RoundButton/RoundButton.js","ExtLink/ExtLink.js","theme.js","SendTxWithBalance/SendTxWithBalance.module.scss","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","utilities/components/ModalCard.module.scss","Migrate/Migrate.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","TxProgressBar/TxProgressBar.js","AssetSelector/AssetSelector.js","Tos/Tos.module.scss","TransactionField/TransactionField.js","utilities/components/Header.module.scss","GenericSelector/GenericSelector.js","Title/Title.js","GenericChart/GenericChart.js","DashboardCard/DashboardCard.module.scss","FastBalanceSelector/FastBalanceSelector.js","TokenSwap/TokenSwap.js","IconBox/IconBox.js","SendTxWithBalance/SendTxWithBalance.js","ETHWrapper/ETHWrapper.js","NexusMutual/NexusMutual.js","CustomField/CustomField.js","CustomList/CustomList.js","PortfolioDonut/PortfolioDonut.js","TotalEarningsCounter/TotalEarningsCounter.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","configs/globalConfigs.js","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","DashboardCard/DashboardCard.js","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","TableRow/TableRow.js","TableHeader/TableHeader.js","Migrate/Migrate.js","AssetsList/AssetsList.js","Footer/Footer.module.scss","colors.js","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","utilities/components/BuyModal.js","utilities/components/ModalCard.js","Footer/Footer.js","TableCellHeader/TableCellHeader.js","CardIconButton/CardIconButton.js"],"names":["AssetField","state","ready","functionsUtil","componentUnmounted","loadField","_callee","fieldName","isRisk","setState","fieldInfo","fieldProps","decimals","addGovTokens","output","govTokens","getGovTokensDistributionSpeed","tokenPrice","_ref2","oldContractBalanceFormatted","_ref3","redeemableBalanceCurveEnd","redeemableBalanceCurveStart","_ref4","redeemableBalanceEnd","redeemableBalanceStart","_ref5","_ref6","earningsCounter","feePercentage","feesStart","feesEnd","_ref7","_ref8","curveApy","earningsCurveStart","amountLentCurve","earningsCurveEnd","_ref9","_ref10","tokenAPY2","earningsStart","amountLent2","earningsEnd","tokenScore","tokenAPR","oldTokenConfig","tokenAPY","govTokensAprs","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","aprChartData","cachedDataKey","cachedData","startTimestamp","y","i","mDate","x","frequencySeconds","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","path","_args","arguments","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","wrap","_context","prev","next","length","undefined","_this","props","token","tokenConfig","abrupt","selectedStrategy","name","isMobile","t0","loadAssetField","account","sent","setStateSafe","tokenBalance","toString","getTokenGovTokens","showPrice","fee","checkMigration","amountToMigrate","amountLent","idleTokenBalance","earnings","Promise","all","getTokenFees","Object","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","times","getCurveAPY","gt","div","plus","redeemableBalance","getTokenScore","score","poolSize","earningsPercCurveDirection","parseFloat","earningsPercCurve","toFixed","earningsPercDirection","earningsPerc","showAPR","migration","oldContract","assign","idle","protocols","values","oldProtocols","forEach","oldProtocol","foundProtocol","find","p","protocolPos","indexOf","isNaN","oldAPY","tokenAPYNoGov","curveAvgSlippage","showTooltip","getGovTokensAprs","t1","allocationChartRowElement","document","getElementById","parentId","rowId","$allocationChartRowElement","window","jQuery","innerWidth","css","innerHeight","parseInt","Math","min","removeEventListener","bind","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","addEventListener","getGlobalConfig","max","strToMoment","Date","format","subtract","_d","getTime","concat","address","getCachedData","id","color","join","data","add","random","push","getFrequencySeconds","getTokenApiData","d","timestamp","fixTokenDecimals","idleRate","setCachedData","aprChartRowElement","$aprChartRowElement","Line","pointSize","lineWidth","useMesh","axisLeft","animate","curve","axisBottom","enableArea","areaOpacity","enableGridX","enableGridY","pointBorderWidth","enableSlices","isInteractive","colors","defs","linearGradientDef","offset","fill","match","margin","top","right","bottom","left","chartProps","keys","PerformanceChartRowElement","$PerformanceChartRowElement","clone","map","idlePrice","minus","blocknumber","pointLabelYOffset","getArrayPath","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","stop","this","setProps","FunctionsUtil","loadUtils","newState","callback","prevProps","prevState","tokenChanged","accountChanged","mobileChanged","themeModeChanged","themeMode","fieldChanged","contractInitialized","contractsInitialized","transactionsChanged","transactions","filter","tx","status","_this2","oldState","_this3","loader","showLoader","react__WEBPACK_IMPORTED_MODULE_12___default","createElement","rimble_ui__WEBPACK_IMPORTED_MODULE_19__","size","fontWeight","fontSize","flexProps","justifyContent","funcProps","maxPrecision","minPrecision","icon1","icon","placement","message","tooltipProps","src","icon2","strategyIcon","strategy","strategyName","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","number","react_countup__WEBPACK_IMPORTED_MODULE_11___default","delay","decimal","separator","useEasing","duration","end","start","formattingFn","n","abbreviateNumber","_ref11","countUpRef","style","ref","_ref12","_ref13","_ref14","_ref15","width","alignItems","flexDirection","govTokenConfig","govTokenIndex","key","distributionFrequency","borderRadius","position","height","ml","zIndex","boxShadow","showDirection","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_17__","direction","earningsCurve","governanceTokenName","idleTokenConfig","idleDistribution","userDistributionSpeed","distributionSpeed","iconProps","govToken","tooltipMode","value","buttonLabel","label","onClick","handleClick","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","type","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_18__","loaderProps","loaderText","selectedToken","inline","CustomComponent","customValue","BNify","SmartNumber","Icon","customFieldName","pop","customFieldProps","Text","formattedValue","_isBigNumber","Component","formattedNumber","formatMoney","precision","showUnit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","unit","unitProps","ChartCustomTooltipRow","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","mb","pr","flexBasis","flex","mr","backgroundColor","textAlign","textTransform","whiteSpace","dangerouslySetInnerHTML","__html","module","exports","headerContainer","headerBgFiller","bgContainer","list","textContainer","ShortHash","shortenHash","hash","shortHash","txStart","substr","txEnd","react__WEBPACK_IMPORTED_MODULE_5___default","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","display","React","LoadingSpinner","react_default","index_es","className","styles","mx","ButtonLoader","buttonProps","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","TransactionListFilters","maxWidth","minWidth","maxHeight","isOpened","activeFilters","assets","actions","setFilter","objectSpread","defineProperty","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","DashboardCard","cardProps","py","px","transition","cursor","overflow","mt","borderTop","theme","divider","filters","filterCategory","filterValues","TableCellHeader","pb","toUpperCase","filterValue","filterLabel","isChecked","my","checked","radioBtn","onChange","e","mainColor","v","filterName","hoverColor","TransactionsList","page","prevTxs","txsPerPage","loading","totalTxs","totalPages","deposit","redeem","send","receive","migrate","swap","swapout","withdraw","completed","pending","failed","renderedTxs","processedTxs","lastBlockNumber","processTxs","availableActions","action","toLowerCase","txsIndexes","includes","sort","b","timeStamp","ceil","availableTokens","date","getTxAction","parsedValue","tokenAmount","amount","momentDate","preventDefault","loadTxs","JSON","stringify","enabledTokens","count","firstBlockNumber","enabledActions","getEtherscanTxs","etherscanTxs","hashKey","lastTx","blockNumber","_this4","hasActiveFilters","m","FlexLoader","minHeight","textProps","text","pt","src_TransactionListFilters_TransactionListFilters","TableHeader","cols","index","txHash","txHashKey","TableRow","rowProps","transaction","open","cardId","fieldComponent","TransactionField","prevPage","nextPage","h3","fontFamily","AllocationChart","chartData","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","loadData","getTokenAllocation","padAngle","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","onMouseEnter","onMouseLeave","tooltipFormat","sliceLabel","radialLabel","tooltip","container","background","cardBg","labels","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","protocolInfo","protocolName","protocolAddr","protocolAllocationPercParsed","globalConfigs","stats","hsl","capitalize","protocolIcon","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","componentDidMount","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","mark","_callee3","filteredTxs","_context3","lt","balance","idleTokens","_x3","apply","currentDate","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","tokensData","_callee4","_context4","_x4","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","filteredTokenData","tokenDecimals","filteredBalances","lastFilteredTx","newBalance","lastTxBalance","tokenUsdConversionRate","conversionRateField","chartToken","conversionRate","isSameOrAfter","isAfter","formattedDate","_loop","aggregatedBalances","balances","itemIndex","item","itemPos","floor","yFormatDecimals","gridYStep","gridYValues","gridYValue","daysCount","daysFrequency","xScale","yScale","stacked","xFormat","yFormat","legend","tickSize","tickPadding","orient","legendOffset","legendPosition","tickValues","tickRotation","pointLabel","areaBaselineValue","pointColor","axis","ticks","grid","line","stroke","lineChartStroke","strokeDasharray","sliceTooltip","slideData","point","slice","points","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","serieId","yFormatted","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","parentIdHeight","ChartCustomTooltip","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","xFormatted","children","ImageButton","image","imageSrc","imageProps","iconName","caption","isActive","contrastColor","buttonStyle","Fragment","badge","bgColor","captionPos","subcaption","split","lineHeight","RoundButton","react__WEBPACK_IMPORTED_MODULE_6___default","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","ExtLink","target","rel","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","fontSizes","fontWeights","letterSpacings","lineHeights","solid","title","copy","serif","counter","space","radii","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","disabled","primary","blue","base","gradient-bg","primary-light","light","primary-dark","dark","bgBlue","dark-blue","skyBlue","lightBlue","copyColor","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","menuBg","menuHover","flashColor","menuRightBorder","cardHoverShadow","cardBgHover","cardBorder","boost","curvein","default","curveout","curvedepositin","curvedepositout","actionBg","blacks","whites","zIndices","messageStyle","shade","tint","success","green","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","input","bg","button","TxProgressBar","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","initProgressBar","getTransaction","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","customLog","web3","eth","err","_x","_x2","getBlockTime","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txProgressBarData","_context7","localStorage","getItem","parse","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","href","cancelTransaction","cancelTextColor","cancelTextHoverColor","AssetSelector","options","defaultValue","CustomOptionValue","CustomValueContainer","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","showCustomField","showBalance","selectProps","innerProps","loadComponents","selectedTokenChanged","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","isSearchable","changeToken","hashChanged","textOverflow","rimble_ui__WEBPACK_IMPORTED_MODULE_11__","align","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_12__","border","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","tokenSymbol","gradientButton","empty","select","selectDark","GenericSelector","optionsChanged","defaultValueChanged","componentsChanged","ControlComponent","menuIsOpen","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","CustomIndicatorSeparator","CustomMenu","CustomInputContainer","searchInput","searchInputHidden","CustomOption","selectedValue","o","genericSelector","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","Title","HeadingComponent","component","Heading","h1","GenericChart","handleWindowSizeChange","chartContainer","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","defaultOpacity","hidden","interactive","rainbow","FastBalanceSelector","onMouseDown","replaceArrayProps","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","baseToken","regenerator_default","selectDestToken","getGlobalConfigs","paymentProvider","providerInfo","initProps","buttonId","initParams","getInitParams","render","sendGoogleAnalyticsEvent","eventCategory","eventAction","eventLabel","enabled","remoteResources","url","j","scriptID","script","remoteResourceParams","precall","readyState","onreadystatechange","onload","async","parentElement","appendChild","head","stylesheetId","loadTokens","toolProps","asyncToGenerator","getContractByName","abi","initContract","fromTokenChanged","destTokenChanged","loadKyberWidget","IconBox","SendTxWithBalance","inputValue","txSucceeded","buttonDisabled","contractApproved","fastBalanceSelector","changeInputValue","setInputValue","selectedPercentage","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","lte","approve","callbackApprove","callbackReceiptApprove","checkContractApproved","eventData","getTransactionError","transactionHash","enableERC20","contractInfo","executeTx","_amount","params","callbackReceipt","methodName","methodParams","contractName","normalizeTokenAmount","getTransactionParams","eventValue","contractMethodSendWrapper","approveCallback","actionChanged","tokenBalanceChanged","contractChanged","tokenConfigChanged","changeInputCallback","approveEnabled","checkTokenApproved","infoBox","src_IconBox_IconBox","steps","step","stepIndex","link","description","balanceSelectorInfo","required","placeholder","approveDescription","ETHWrapper","balanceETH","balanceWETH","loadBalance","updateActionData","contract","getETHBalance","getTokenBalance","mintLog","txReceipt","logs","log","mintedAmount","withdrawLog","withdrawnAmount","fullWidth","depositOnly","CardIconButton","iconColor","iconBgColor","setAction","src_SendTxWithBalance_SendTxWithBalance","transactionSucceeded","connectAndValidateAccount","NexusMutual","1","2","3","amountValue","periodValue","quoteResponse","changeAmount","changePeriod","makeRequest","textDecoration","activeColor","changeSelectedToken","getQuote","CustomField","componentHasChildren","fieldType","fieldPath","row","Image","Button","CustomList","rows","rowIndex","PortfolioDonut","totalFunds","parentWidth","selectedTokenConfig","loadPortfolio","portfolio","getIdleTokenPrice","convertTokenBalance","getGovTokensUserBalances","govTokensUserBalances","govTokenBalance","tokenPercentage","tokenColorHsl","round","radialLabelsLinkOffset","itemWidth","itemHeight","translateY","symbolSize","anchor","itemTextColor","symbolShape","effects","on","convertToken","TotalEarningsCounter","loadTotalEarnings","availableStrategies","counterStyle","getAccountPortfolio","depositedTokens","avgAPY","totalEarnings","totalAmountLent","tokenAprs","tokenEarnings","tokenWeight","amountLentToken","getTokenAprs","getAmountLent","slicedToArray","avgApy","totalBalance","build_default","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","90","2 Years","5 Years","loadEarnings","amountLents","aggregatedEarnings","earningsYear","avgBuyPrice","idleTokenPrice","earningsPercStep","possibleSteps","maxPossibleStep","getAvgBuyPrice","avgApr","orderedTokensEarnings","estimationStep","option","setEstimationStepsPerc","tokenIndex","estimationStepPerc","finalEarnings","cursorPerc","tokenRGBColor","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","gte","pl","src_TotalEarningsCounter_TotalEarningsCounter","estimationLabel","DashboardIconButton","StrategyPage","tokensToMigrate","aggregatedValues","activeCoverages","remainingTokens","batchedDeposits","portfolioLoaded","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","portfolioEquityQuickSelection","getActiveCoverages","getBatchedDeposits","getTokensToMigrate","c","statusColors","statusIcon","statusColor","portfolioCoverage","statusIconProps","reduce","batchInfo","deposited","batchDeposits","redeemable","batchRedeems","avgScore","getGovTokensUserTotalBalance","govTokensTotalBalance","govTokensUserBalance","govTokensTotalBalanceTooltip","apyLong","riskScore","yieldFarming","batchDepositConfig","coverProtocolConfig","titleProps","src_PortfolioDonut_PortfolioDonut","aligItems","setPortfolioEquityQuickSelection","AssetsList","fields","mobile","parentProps","goToSection","route","borderBottom","h4","desc","toolName","toolIndex","toolConfig","src_DashboardIconButton_DashboardIconButton","src_CustomList_CustomList","fileClaimUrl","openWindow","src_EarningsEstimation_EarningsEstimation","textSize","BatchDeposit","canClaim","batchTotals","canDeposit","execute","claim","usePermit","lastExecution","permitEnabled","hasDeposited","permitSigned","showPermitBox","currBatchIndex","batchCompleted","claimSucceeded","executeSucceeded","migrationEnabled","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","urlParams","param2","selectToken","executeSucceededChanged","contractApprovedChanged","callbackExecute","callbackReceiptExecute","migrationContract","migrationContractInfo","getBatchedDepositExecutions","genericContractCall","batchExecutions","functions","functionInfo","nonceMethod","permitContract","methods","batchIndex","batchTotal","batchRedeem","batchDeposit","batchDepositInfo","depositEnabled","availableStrategiesKeys","strategyConfig","selectStrategy","obj","baseTokenConfig","strategyAvailableTokens","migrateFunction","setStrategyToken","_this5","batchId","callbackClaim","_this6","callbackReceiptClaim","_this7","canExecuteBatch","strategyDefaultValue","s","openTooltipModal","isDisabled","togglePermitEnabled","Migrate","showActions","getTokenPrice","isMigrationTool","showBalanceSelector","migrationIcon","migrationParams","toMigrate","callbackPermit","migrationText","utc","CoverProtocol","swapInfo","selectedAction","successMessage","defaultCoverage","selectedCoverage","collateral","selectedActionChanged","inputValueChanged","swapInfoChanged","updateData","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","pow","expirationTimestamp","integerValue","balancerTokenConfig","tokens","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","apy","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","isClaim","now","apyPrice","currTime","coverages","expirationDate","selectCoverage","coverage","isMint","isBuyClaim","isBuyNoClaim","txAction","BuyModal","showInline","availableMethods","buyToken","TokenMigration","changeFromToken","convertTool","tokenInfo","destTokenConfig","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","env","process","appName","version","baseURL","forumURL","betaURL","countries","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","errorsEnabled","messagesEnabled","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","fortmatic","portis","authereum","torus","trezor","ledger","newsletterSubscription","endpoint","messages","scoreShort","apyShort","cheapRedeem","curveBonusSlippage","directMint","performanceFee","govTokenApr","govTokenRedeemableBalance","riskScoreShort","batchDepositExecutionSchedule","curveInstructions","analytics","google","events","debugEnabled","addPostfixForTestnet","modals","first_deposit_referral","first_deposit_share","welcome","frequency","dashboard","baseRoute","mode","darkModeEnabled","governance","test","startBlock","tokenName","availableContracts","IDLE","PriceOracle","GovernorAlpha","EcosystemFund","IdleController","contracts","delegates","n_coins","imageInactive","rates","poolContract","CurvePool","depositContract","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","coinIndex","idleUSDCYield","idleUSDTYield","permit","DAI","EIPVersion","USDC","showAUM","protocol","aprTooltipMode","disabledTokens","COMP","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","UniswapRouter","UniswapV2Router02","BalancerExchangeProxy","zeroExInstant","orderSource","assetData","affiliateInfo","feeRecipient","strategies","best","comingSoon","titlePostfix","govTokensEnabled","chartColor","iconInactive","iconInactiveDark","descLong","descShort","risk","new","TTL","scores","versions","v3","additionalProtocols","endTimestamp","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","rgb","hex","chart","labelTextColorModifiers","performanceTooltip","USD","USDT","TUSD","SUSD","WBTC","WETH","idleDAI+idleUSDC+idleUSDT","compound","compoundWithCOMP","rateField","fulcrum","dsr","dydx","iearn","aave","0xfc1e690f61efd961294b3e1ce3313fbd8aa4f85d","9599092","9599138","9599263","9599267","9599295","9599299","9599307","9599315","9599579","9599866","9600156","9600433","9600704","9600982","9601051","9601073","9601077","9601345","9601619","9601891","9602144","9602429","9602724","9602993","9603272","9603536","9603826","9603840","9604038","9604182","9604457","9604701","9604979","9605247","9605505","9605793","9606073","9606368","9606639","9606896","9607147","9607406","9607722","9608130","9608395","9608656","9608959","9609544","9609811","9610073","9610341","9610601","9610871","9611120","9611386","9611665","9611949","9612210","9612487","9612758","9613012","9613276","9613542","9613824","9614069","9614327","9614596","9614864","9615111","9615394","9615679","9615958","9616245","9616531","9616803","9617053","9617326","0x9ba00d6856a4edf4665bca2c2309936572473b7e","9598633","9598646","9598684","9598823","9598869","9598915","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","skipMintCheckboxEnabled","proxyContract","IdleProxyMinter","function","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","network","availableNetworks","4","42","1337","isForked","requiredNetwork","blocksPerYear","requiredConfirmations","accountBalanceMinimum","providers","infura","etherscan","endpoints","snapshot","proposals","urls","biconomy","enableLogin","supportedNetworks","disabledWallets","limits","debug","apiKey","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","apiId","terminal","REACT_APP_TERMINAL_KEY","projectId","REACT_APP_TERMINAL_PROJECT_ID","source","web3Version","Web3Versions","one","simpleID","getNetwork","networkId","networkName","appOrigin","location","origin","appId","renderNotifications","notifications","tools","ethWrapper","subComponent","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","permitName","batchMigration","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","oldAddresses","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","directProps","showAllTokens","insurance","ETH","ens","tokenSwap","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","payments","bank","defaultProvider","showDefaultOnly","card","wallet","wyre","supportedMethods","supportedCountries","supportedTokens","envParams","accountId","prod","getInfo","selectedMethod","buyParams","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","innerHTML","body","wyreStyle","ramp","hostAppName","userAddress","hostApiKey","REACT_APP_RAMP_KEY","variant","hostLogoUrl","swapAsset","RampInstantSDK","event","getAccountBalance","getTokenDecimals","payload","purchase","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","selectedCountry","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","onSuccess","onClose","tokenParams","connectorName","RimbleWeb3_context","chainId","provider","connector","ethereum","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","contractAddress","decodeLogsData","internalType","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","IdleGovToken","classCallCheck","getBalance","claimRewards","getPriorVotes","priorVotes","_args3","refreshIdleSpeed","getUnclaimedTokens","rewards","getAPR","IDLETokenConfig","APR","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","getDistribution","getUniswapConversionRate","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","totalSpeed","_args10","_context10","_callee9","idleSpeed","userPoolShare","tokenSpeed","_context9","getUserPoolShare","_x7","fixDistributionSpeed","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","idleGovToken","trimEth","toBN","utils","BN","toEth","wei","fromWei","toWei","BNify_obj","BigNumber","String","_len","Array","_key","moment","customLogError","_console","_len2","_key2","console","normalizeSimpleIDNotification","replace","str","arr1","arr2","stripHtml","html","tmp","textContent","innerText","scrollTo","to","scrollY","change","currentTime","easeInOutQuad","t","animateScroll","val","depositProxyContractInfo","migrationContractAddr","migrationContractOldAddrs","batchMigrationContractAddr","isMigrationTx","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","orderedTokensBalance","_args2","getCurveAvgSlippage","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","getCurveAvgBuyPrice","_args4","prevAvgBuyPrice","_args5","idleTokensBalance","getFirstDepositTx","deposits","firstDepositTx","getDepositTimestamp","firstDepositTxs","_args7","acc","getAmountDeposited","userAvgPrice","amountDeposited","_args9","getEtherscanBaseTxs","endBlockNumber","firstIdleBlockNumber","etherscanInfo","results","etherscanBaseTxs","etherscanBaseEndpoint","etherscanApiUrl","lastCachedTx","lastCachedBlockNumber","etherscanEndpointLastBlock","latestTxs","latestBlockNumbers","txs","REACT_APP_ETHERSCAN_KEY","getCachedRequest","result","makeCachedRequest","filterEtherscanTxs","toConsumableArray","saveEtherscanTxs","_args11","filterCurveTxs","txsToStore","cachedRequest","saveCachedRequest","allAvailableTokens","processStoredTxs","_callee13","_args13","_context13","_callee14","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args14","_context14","tokenMigrationToolParams","curveTokenConfig","idleToken","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenDecimal","tokenValue","newValue","iTxs","withdrawnValue","processEtherscanTransactions","addStoredTransaction","txKey","tokenKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_callee19","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args19","_context19","baseTokenAddress","_ref19","_callee18","minedTxs","_context18","_ref20","_callee17","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context17","getCurveTokenPrice","_ref21","_callee15","_context15","getTransactionReceipt","_x10","_x11","topics","baseTokensConfig","t2","_ref22","_callee16","_context16","_x12","_x13","_x9","_ref23","_callee25","txsToProcess","_args25","_context25","_ref24","_callee24","_context24","_ref25","_callee23","isStoredTx","allowedMethods","pendingStatus","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context23","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","method","created","_ref26","_callee20","_context20","_x18","_x19","_ref27","_callee21","_context21","_x20","_x21","raw","_ref28","_callee22","_context22","_x22","_x23","decodeLog","_token","_x16","_x17","_x15","_x14","alias","cachedRequests","_ref29","_callee26","error_callback","config","_args26","_context26","catch","_x24","_ref30","_callee27","return_data","_args27","_context27","_x25","code","errorCode","array","prop","shift","configs","checkUrlOrigin","checkUrlBeta","_ref31","_callee29","googleEventsInfo","originOk","currentNetwork","_args29","_context29","ga","_ref32","_callee28","_context28","hitCallback","hitCallbackFail","_x27","_x28","_x26","createContract","_ref33","_callee30","_context30","Contract","_x29","_x30","_x31","getWalletProvider","simpleIDPassUserInfo","userInfo","email","initSimpleID","passUserInfo","getEtherscanTransactionUrl","tx_address","getEtherscanAddressUrl","decimalCount","thousands","abs","negativeSign","Number","getSnapshotProposals","_callee33","activeOnly","validProposals","_args33","_context33","msg","_ref35","_callee32","checkedStrategies","_context32","metadata","_ref36","_callee31","_context31","symbol","_x33","_x32","_ref37","_callee34","forceStartTimestamp","order","limit","filteredCachedData","_filteredData","apiInfo","filteredData","_args34","_context34","_x34","_ref38","_callee35","_context35","_x35","aprs","allocations","aprWeighted","allocation","apr","quantity","hour","day","week","getProtocolInfoByAddress","addr","ROUND_FLOOR","normalizeTokenDecimals","normalizedTokenDecimals","exchangeRate","checkContractPaused","_callee36","contractPaused","_args36","_context36","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref40","_callee39","rebalancer","idleRebalancerInstance","allocationsPromises","availableTokensPromises","protocolIndex","nextAllocations","newTotalAllocation","newProtocolsAllocations","shouldRebalance","_context39","allocationPromise","_ref41","_callee37","_context37","lastAmounts","call","_x37","_x38","availableTokenPromise","_ref42","_callee38","_context38","_x39","_x40","accumulator","availableTokenInfo","nextAllocation","protocolAllocation","protocolAllocationPerc","newProtocolAllocation","_x36","_ref43","_callee40","oldContractBalance","oldContractTokenDecimals","oldContractName","_context40","getContractBalance","_x41","_x42","_ref44","_callee41","signedParameters","callback_receipt","_contract$methods","_context41","getGasPrice","once","confirmationNumber","receipt","_x43","_x44","_x45","_x46","_x47","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref45","_callee42","biconomyInfo","res","_context42","headers","x-api-key","_x48","sendTxWithPermit","_ref46","_callee43","_contract$methods2","messageToSign","_this$getSignaturePar","_context43","encodeABI","_address","personal","sign","_x49","_x50","_x51","_x52","_x53","_x54","sendBiconomyTxWithPersonalSign","_ref47","_callee44","_this$getSignaturePar2","_context44","getNonce","_x55","_x56","_x57","_x58","signPermitEIP2612","_ref48","_callee45","erc20Name","owner","spender","deadline","domain","domainData","_context45","getChainId","verifyingContract","types","EIP712Domain","Permit","primaryType","currentProvider","jsonrpc","substring","_x59","_x60","_x61","_x62","_x63","_x64","_x65","_x66","signPermit","_ref49","_callee46","baseContractName","holder","spenderContractName","expiry","callback_permit","baseContract","spenderContract","permitConfig","_args46","_context46","net","getId","allowed","response","permitParams","methodAbi","_jsonInterface","f","useNonce","inputs","unshift","_x67","_x68","_x69","_x70","_x71","_x72","_x73","_x74","_x75","sendSignedTx","_ref50","_callee47","MetaTransaction","dataToSign","_context47","_x76","_x77","_x78","_x79","_x80","_ref51","_callee48","contractAddr","walletAddr","allowance","_context48","getAllowance","_x81","_x82","_x83","_ref52","_callee49","_context49","_x84","_x85","_x86","txData","disableERC20","toTwosComplement","_ref53","_callee50","field","addCurveApy","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref54","_ref55","curveAvgBuyPrice","curveTokenBalance","_ref56","_ref57","amountLentCurve1","redeemableBalanceCurve","_ref58","_ref59","earningPerYear","_ref60","_ref61","amountLent1","redeemableBalance1","depositTimestamp","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref62","_ref63","tokenPriceFirstDeposit","_ref64","_ref65","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref66","_ref67","tokenAPY1","_earningPerYear","_govTokenConfig2","_ref68","_ref69","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","_ref70","_ref71","amountLentCurve2","redeemableBalanceCurve1","_ref72","_ref73","redeemableBalance2","_args50","_context50","getCurveTokenBalance","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getIdleGovToken","t3","getCompDistribution","t4","getCompAvgApr","t5","t6","t7","getUserTokenFees","t8","t9","getGovTokenUserBalance","_x87","_x88","_x89","_x90","getIdleTokenSupply","_ref74","_callee51","idleTokenSupply","_args51","_context51","_x91","_ref75","_callee52","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args52","_context52","_x92","clearCachedData","useLocalStorage","_ref76","_callee53","_ref77","_ref78","idleTokensTotalSupply","userShare","_context53","_x93","_x94","_callee55","_args55","_context55","_ref80","_callee54","coverageTokens","protocolImage","_context54","_x95","_ref81","_callee56","etherscanEndpoint","_context56","_x96","_callee58","filter_by_status","_args58","_context58","_ref83","_callee57","_ref84","_ref85","_context57","_x97","_ref86","_callee59","fixDecimals","_args59","_context59","_x98","_ref87","_callee60","_ref88","_ref89","_args60","_context60","_x99","_x100","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","attr","isValidJSON","checkAddress","_ref90","_callee61","_args61","_context61","_x101","_x102","getProtocolBalance","_ref91","_callee62","_context62","_x103","_x104","getAprs","_ref92","_callee63","_context63","_x105","genericIdleCall","_ref93","_callee64","callParams","_args64","_context64","_x106","estimateGas","_ref94","_callee65","_contract$methods3","_args65","_context65","_x107","_x108","getTxDecodedLogs","_ref95","_callee67","logAddr","decodeLogs","internalTransfers","_context67","_ref96","_callee66","_context66","_x113","_x114","_x109","_x110","_x111","_x112","blocksToSeconds","blocks","blocksPerSeconds","getBlockNumber","_callee68","_context68","getContractPastEvents","_ref98","_callee69","_args69","_context69","getPastEvents","_x115","_x116","_ref99","_callee70","_contract$methods4","_args70","_context70","_x117","_x118","_ref100","_callee71","_args71","_context71","_x119","_x120","apr2apy","getUnlentBalance","_ref101","_callee72","unlentBalance","_context72","_x121","_ref102","_callee73","_args73","_context73","_x122","_ref103","_callee75","protocolsAprs","exchangeRates","protocolsBalances","govTokensBalances","_args75","_context75","totalAllocationConverted","totalAllocationWithUnlentConverted","_ref104","_callee74","_ref105","_ref106","protocolBalance","_context74","_x124","_x125","getGovTokensBalances","total","getTokenConversionRate","_x123","getUniswapConversionRate_path","_ref107","_callee76","unires","_context76","_x126","_ref108","_callee77","tokenConfigFrom","tokenConfigDest","WETHAddr","_context77","_x127","_x128","getCurveDepositedTokens","_ref109","_callee78","idleTokensBalances","remainingCurveTokens","_args78","_context78","_x129","getCurveUnevenTokenAmounts","_ref110","_callee79","amounts","max_burn_amount","unevenAmounts","_context79","getCurveDepositContract","_x130","_x131","_callee80","curveRatesInfo","_context80","strategyTokens","getCurveAPYContract","_callee81","blocksForPrevTokenPrice","_ref113","_ref114","prevTokenPrice","blocksMultiplier","curveAPR","_context81","getCurveTokenSupply","_callee82","_context82","getCurvePoolContract","_callee83","_args83","_context83","_callee84","_args84","_context84","_ref118","_callee85","_ref119","_ref120","_context85","_x132","_callee86","depositContractInfo","_context86","getCurveZapContract","_callee87","zapContractInfo","_context87","_callee88","poolContractInfo","_context88","getCurveSwapContract","_callee89","_context89","getCurveIdleTokensAmounts","_callee91","max_slippage","curveTokenSupply","curveTokenShare","_args91","_context91","_ref126","_callee90","curveIdleTokens","_context90","_x133","getCurveTokensAmounts","_callee93","useCoinIndex","_args93","_context93","_ref128","_callee92","_ref129","_ref130","totalTokenSupply","_context92","_x134","getCurveAmounts","_ref131","_callee95","_args95","_context95","_ref132","_callee94","_context94","_x137","_x135","_x136","getCurveTokenAmount","_ref133","_callee96","_args96","_context96","_x138","getCurveSlippage","_ref134","_callee97","uneven_amounts","_ref135","_ref136","virtualPrice","Sv","_args97","_context97","_x139","_x140","getCompAPR","_ref137","_callee98","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args98","_context98","_x141","_x142","getCompSpeed","_ref138","_callee99","cTokenAddress","compSpeed","_context99","_x143","_ref139","_callee100","annualize","cTokenInfo","compoundAllocationPerc","_ref140","_ref141","cTokenTotalSupply","compoundPoolShare","_args100","_context100","_x144","_callee102","_args102","_context102","_ref143","_callee101","_ref144","_ref145","_context101","_x145","_callee104","_args104","_context104","_ref147","_callee103","_ref148","_ref149","compApr","_context103","_x146","getTokensCsv","_callee107","csv","_context107","prototype","sum","pv","cv","avg","_ref151","_callee106","_context106","_ref152","_callee105","header","aprAvg","scoreAvg","lastRow","_context105","protocolsData","p1","p2","rate","idleScore","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","_x148","_x147","_callee109","_args109","_context109","_ref154","_callee108","compTokenBalance","_context108","_x149","speed","getGovTokensUserDistributionSpeed","_ref155","_callee111","govTokensUserDistribution","_args111","_context111","_ref156","_callee110","_context110","_x151","_x150","_ref157","_callee113","govTokensDistribution","_args113","_context113","_ref158","_callee112","govSpeed","_context112","_x153","_x152","_ref159","_callee115","_args115","_context115","_ref160","_callee114","_ref161","_ref162","compoundInfo","_context114","_x156","_x154","_x155","_callee117","_args117","_context117","_ref164","_callee116","tokenConversionRate","fromTokenConfig","_context116","_x157","getGovTokenConfigByAddress","_callee118","checkShowBalance","govTokensEarnings","_args118","_context118","govTokenAmount","_callee121","govTokenConfigForced","_args121","_context121","_ref167","_callee120","govTokensAmounts","_context120","_ref168","_callee119","govTokenAddress","_context119","_x159","_x160","_x158","_callee122","_args122","_context122","_callee123","_ref171","_ref172","gain","fees","_args123","_context123","_ref173","_callee124","_args124","_context124","_x161","getTotalTVL","_callee125","tokensTVL","_context125","getTokensTVL","totalTVL","tokenTVL","_callee129","_context129","_ref176","_callee128","_context128","_ref177","_callee127","oldTokenTVL","idleTokenName","_ref178","_ref179","totalSupply","_ref183","_ref184","oldTokenPrice","oldTotalSupply","_context127","_ref180","_callee126","_ref181","_ref182","govTokenConversionRate","govTokenBalanceConverted","_context126","_x164","_x163","_x162","getAggregatedStats","_callee133","avgAPR","totalAUM","_args133","_context133","_ref186","_callee132","_context132","_ref187","_callee131","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context131","_ref188","_callee130","_ref189","_ref190","tokenBalanceConverted","_context130","_x167","_x166","_x165","getTokenApy","_ref191","_callee134","_context134","_x168","_callee137","_args137","_context137","_ref193","_callee136","_context136","_ref194","_callee135","_ref195","_context135","_x170","_x169","getProtocolsTokensBalances","_callee139","tokenBalances","minTokenBalance","protocolsTokens","_args139","_context139","_ref197","_callee138","tokenContract","_context138","_x171","_ref198","_callee140","_args140","_context140","_x172","_x173","_x174","getAvgAPYStats","_ref199","_callee141","apiResults","_args141","_context141","_x175","_x176","_ref200","_callee142","_conversionRate","_args142","_context142","_x177","_x178","_ref201","_callee143","_ref202","_ref203","_context143","protocolScore","getTokenScoreApi","_x179","_x180","_ref204","_callee144","_context144","_x181","_x182","_ref205","_callee146","Aprs","addresses","protocolsApys","idleGovTokenShowAPR","idleAPR","_args146","_context146","_ref206","_callee145","addrIndex","protocolApr","protocolApy","_context145","_x184","_x185","_x183","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","mouseOver","isVisible","isRainbow","active","onMouseOut","setMouseOver","onMouseOver","titleParentProps","Tos","h2","listStyle","Footer","theme_dark","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","possibleConstructorReturn","getPrototypeOf","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","close","WalletConnectConnector","WalletConnectProvider","infuraId","defaultNetwork","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","REACT_APP_INFURA_KEY","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","WrongNetworkBanner","current","NetworkUtil","isCorrectNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","bold","isOpen","ModalCard","closeFunc","closeModal","Body","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","Header","subtitle","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","walletProvider","connectionCallback","unsetConnector","isMetamask","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","connectorInfo","walletIcon","flexWrap","ConnectionModal","currentSection","showTxFees","closeRemainingTime","newToEthereumChoice","showInstructions","toggleShowTxFees","setStoredSection","componentDidUpdate","resetModal","closeCountdown","setWalletChoice","choice","setCurrentSection","renderModalContent","TOSacceptance","react_router_dom","showConnectionButtons","newToEthereum","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","INFURA_KEY","RimbleTransactionContext","createContext","web3Infura","accountBalance","initWeb3","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","accountInizialized","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","testTransaction","createTransaction","addTransaction","updateTransaction","errorMessage","isWalletConnectClosedModalError","availableStrategiesChanged","customAddress","metamaskProvider","connectorNameChanged","web3Host","web3Provider","forceCallback","terminalInfo","TerminalHttpProviderParams","terminalSourceType","terminalHttpProvider","web3Callback","originalWeb3","biconomyWeb3Provider","detectEthereumProvider","autoRefreshOnNetworkChange","Web3","HttpProvider","library","SourceType","customHttpProvider","TerminalHttpProvider","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","$crisp","notificationId","content","Sentry","increaseAmount","balanceOf","determineAccountLowBalance","openConnectionModal","getRequiredNetwork","getNetworkId","getNetworkName","getNetworkType","contractMethod","gasLimit","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","_args24","confirmationCount","call_callback","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","constant","outputs","payable","stateMutability","anonymous","indexed","ERC20","govTokensDisabled","defiPrime","IdleTokenV4","cToken","yToken","iToken","aToken","CHAI","skipMintForDeposit","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","then","Dashboard","Governance","App","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","prevParams","customParam","setCustomAddress","cachedKeyFound","storedCachedData","widthChanged","heightChanged","tabIndex","loadAvailableTokens","warn","setThemeMode","closeIframe","w","iFrames","getElementsByTagName","iframe","contentWindow","parents","strategyChanged","self","parent","hasMetamask","store","themeDark","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","RimbleWeb3","needsPreflight","react_router","react","fallback","isDashboard","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","registration","unregister","FieldComponent","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","colInfo","colIndex","visible","fieldIndex","colProps","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","tokenApproved","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","useMetaTx","_skipRebalance","_migrationContract$me","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","footer","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","VariationNumber","IconDirection","iconSize","iconPos","loading-dots","loading-dots--dot","dot-keyframes","selectedProvider","availableProviders","renderPaymentMethod","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","goBack","componentWillMount","getProviderInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","providerSupportToken","defaultPaymentProvider","selectProvider","ethAvailable","tokenAvailable","selectMethod","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","countryCode","methodInfo","loadAvailableMethods","InnerComponent","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","noOptionsMessage","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","iconHeight","subtitleProps","BackButton","currYear","getFullYear","columnWidth","react__WEBPACK_IMPORTED_MODULE_9___default","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","ColTitle","useIconOnly"],"mappings":"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","file":"static/js/main.341cb2ee.chunk.js","sourcesContent":["import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          const [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPerc:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              // if (isRisk){\n              //   debugger;\n              // }\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                aprChartData[0].data.push({ x, y });\n              });\n            }\n\n            this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n          }\n\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            curve:'monotoneX',\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            enableSlices:false,\n            isInteractive:false,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = this.props.tokenConfig && this.props.tokenConfig.icon ? this.props.tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = this.props.tokenConfig && this.props.tokenConfig.icon ? this.props.tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        // console.log('score',this.state.score);\n        output = this.state.score !== undefined && this.state.score !== null ? (\n          <SmartNumber {...fieldProps} decimals={1} number={this.state.score} />\n        ) : loader\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            const customFieldName = Object.values(fieldInfo.path).pop();\n            if (this.props.tokenConfig[`${customFieldName}Props`]){\n              const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n              // Replace props\n              if (customFieldProps && Object.keys(customFieldProps).length){\n                Object.keys(customFieldProps).forEach(p => {\n                  fieldProps[p] = customFieldProps[p];\n                });\n              }\n            }\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          this.props.unit && unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          this.props.unit && unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import React from \"react\";\nimport { Text } from \"rimble-ui\";\n\nclass ShortHash extends React.Component {\n  shortenHash = hash => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, 7);\n    const txEnd = shortHash.substr(shortHash.length - 4);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  };\n  render() {\n    const shortHash = this.shortenHash(this.props.hash);\n\n    return <Text display={'inline'} {...this.props}>{shortHash}</Text>;\n  }\n}\n\nexport default ShortHash;\n","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from 'react';\nimport {\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner.js';\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n       <Button\n        onClick={this.props.handleClick}\n         {...this.props.buttonProps}\n       >\n        <Flex flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n          <Flex width={1} display={ this.props.isLoading ? 'flex' : 'none' }>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={ this.props.isLoading ? 'none' : 'flex' }>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n       </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.status = tx.status ? tx.status : 'Completed';\n      tx.action = action;\n      tx.momentDate = momentDate;\n      tx.amount = amount;\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(`https://etherscan.io/tx/${txHash}`) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    // console.log('AllocationChart',this.props.token,totalAllocation,protocolsAllocations,protocolsAllocationsPerc);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.label.toLowerCase()] && globalConfigs.stats.protocols[this.state.selectedSlice.label.toLowerCase()].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.label.toLowerCase()].icon : `${this.state.selectedSlice.label.toLowerCase()}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    // debugger;\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null;\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || momentDate.isSameOrAfter(startDate)){\n        \n        if (momentDate.isAfter(new Date(),'day')){\n          momentDate = this.functionsUtil.strToMoment(new Date());\n        }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            typeof point.data.balances === 'object' && Object.keys(point.data.balances).length &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontSize:3,\n      fontWeight:3,\n      height:'45px',\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #eee','1px solid #b6c2ff'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgba(0,54,255,0.3)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: blue.base,\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#3F3D4B',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    arrowActive:'#4f4f4f',\n    arrowInactive:'#d8d8d8',\n    selectBgFocused:'#fbfbfb',\n    selectBg:'#ffffff',\n    backButtonBg:'#ffffff',\n    lineChartStroke:'#dbdbdb',\n    dashboardBg: '#f9fafd',\n    statValue: '#959595',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a3a4a5',\n    cellText: '#a6a6a6',\n    divider: '#d8d8d8',\n    counter: '#5d5d5d',\n    redeem: '#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    menuBg:'#fff',\n    menuHover:'#f3f6ff',\n    cardBg:'#fff',\n    flashColor:'#3f4e9a',\n    menuRightBorder:'#eee',\n    cardHoverShadow:'0px 0px 0px 1px rgba(0, 54, 255, 0.3)',\n    cardBgHover:'#f7f8ff',\n    cardBorder:'#eee',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, '#AAA'),\n      backgroundColor: tint(0.9, '#AAA'),\n      borderColor: '#AAA',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: '#f3f6ff',\n      borderColor: '#b6c2ff',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SendTxWithBalance_input__h-oUv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Migrate_input__FS2vB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      this.functionsUtil.customLog('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    let prediction = null;\n    if (this.state.predictTable){\n      this.state.predictTable.forEach((p,i) => {\n        if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n          prediction = p;\n          return true;\n        }\n      });\n    }\n\n    if (this.state.blockTime && prediction){\n      const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n      const blocksWait = pdValues[0];\n      const blockInterval = this.state.blockTime.block_time;\n      let txMeanSecs = blocksWait * blockInterval;\n      txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n      this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n      return txMeanSecs; // Customized\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              href={`https://etherscan.io/tx/${this.props.hash}`}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in Etherscan\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\nimport ShortHash from \"../utilities/components/ShortHash\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    let bgColor = theme.colors.transactions.actionBg.default;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={`https://etherscan.io/tx/${transaction.hash}`}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n        output = (\n          <Image src={`images/tokens/${transaction.tokenSymbol.toUpperCase()}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{transaction.tokenSymbol}</Text>\n        );\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\"};","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged){\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents(){\n    \n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p:2,\n          width:1,\n          style:{cursor:'pointer'}\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen){\n        cardProps.boxShadow = 4;\n      }\n      return (\n        <DashboardCard\n          isInteractive={true}\n          cardProps={cardProps}\n        >\n          <Flex\n            width={1}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps,{\n        mt:2,\n        zIndex:1,\n        boxShadow:null,\n        position:'absolute'\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable){\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput,this.props.themeMode==='dark' ? styles.dark : null,!props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map( o => o.value ).indexOf(selectedValue) === -1 && this.props.defaultValue){\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value){\n        return null;\n      }\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{cursor:'pointer'}}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={ props.isFocused ? 'selectBgFocused' : 'selectBg' }\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={ v => this.props.onChange(v.value) }\n        components={{\n            Menu: this.state.CustomMenu,\n            Option: this.state.CustomOption,\n            Control: this.state.ControlComponent,\n            Input: this.state.CustomInputContainer,\n            SingleValue: this.state.CustomValueContainer,\n            IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'legend'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport styles from './SendTxWithBalance.module.scss';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Link, Input } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (actionChanged || accountChanged || tokenBalanceChanged || contractChanged || tokenConfigChanged){\n      await this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    this.setState((prevState) => ({\n      inputValue,\n      fastBalanceSelector\n    }));\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n    this.setState({\n      inputValue\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n    const params = await this.props.getTransactionParams(_amount);\n\n    const callback = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveDeposit`,\n        eventValue: inputValue.toFixed(),\n        eventAction: this.props.tokenConfig.token,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    if (params){\n      const {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n\n      const contractName = this.props.contractInfo.name;\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(){\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n\n    const contractInfo = await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n    if (contractInfo){\n      const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n      return contractApproved;\n    }\n    return null;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const contractApproved = await this.checkContractApproved();\n    this.setState({\n      inputValue,\n      contractApproved\n    });\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.tokenConfig && this.props.tokenBalance && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              {\n                !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        web3={this.props.web3}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3,\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.props.approveDescription}\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:3,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      web3={this.props.web3}\n                      waitText={`Deposit estimated in`}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing deposit request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                              >\n                                {this.props.balanceSelectorInfo.text}\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                        {\n                          this.props.tokenBalance && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.props.tokenBalance.toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        className={styles.input}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled\n                          }}\n                          handleClick={this.executeTx.bind(this)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass ETHWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceETH:null,\n    balanceWETH:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadBalance();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevState.action !== this.state.action;\n    if (actionChanged){\n      this.updateActionData();\n    }\n  }\n\n  async loadBalance(){\n\n    // Init Contract\n    await this.props.initContract(this.props.toolProps.contract.name,this.props.toolProps.contract.address,this.props.toolProps.contract.abi);\n\n    // Load Balances\n    const [\n      balanceETH,\n      balanceWETH\n    ] = await Promise.all([\n      this.functionsUtil.getETHBalance(this.props.account),\n      this.functionsUtil.getTokenBalance('WETH',this.props.account)\n    ]);\n\n    const action = this.state.action || 'wrap';\n    const tokenBalance = action === 'wrap' ? balanceETH : balanceWETH;\n\n    this.setState({\n      action,\n      balanceETH,\n      balanceWETH,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        selectedToken = 'ETH';\n        approveEnabled = true;\n        tokenConfig = {\n          token:'ETH',\n          decimals:18\n        };\n        tokenBalance = this.state.balanceETH;\n        approveDescription = 'To Mint new WETH you need to approve the Smart-Contract first';\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ETH and get WETH with a 1:1 ratio`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = 'WETH';\n        approveEnabled = false;\n        tokenBalance = this.state.balanceWETH;\n        tokenConfig = this.props.toolProps.contract;\n        approveDescription = 'To withdraw your ETH you need to approve the Smart-Contract first';\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your WETH and get back ETH with a 1:1 ratio`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.contract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} WETH</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.contract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ETH</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = 'deposit';\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = 'withdraw';\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n    const depositOnly = !!this.props.depositOnly;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !depositOnly && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'wrap'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.contract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                        }}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </DashboardCard>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ETHWrapper;\n","import React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport { Flex, Box, Text, Input, Link, Progress } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    steps:{\n      1:'Get Quote',\n      2:'Enable NXS',\n      3:'Buy Cover'\n    },\n    loading:false,\n    amountValue:'',\n    periodValue:'',\n    quoteResponse:null,\n    selectedToken:'DAI'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async changeSelectedToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    this.setState({\n      amountValue\n    });\n  }\n\n  changePeriod = (e) => {\n\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    this.setState({\n      periodValue\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    let quoteResponse = await this.functionsUtil.makeRequest(`https://api.nexusmutual.io/getQuote/${this.state.amountValue}/${this.state.selectedToken}/${this.state.periodValue}/0x78751B12Da02728F467A44eAc40F5cbc16Bd7934/M1`);\n\n    const newState = {\n      loading:false\n    };\n\n    if (quoteResponse){\n      newState.quoteResponse = quoteResponse.data;\n    }\n\n    this.setState({\n      quoteResponse\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Flex\n            mb={1}\n            width={1}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n          >\n            {\n              Object.keys(this.state.steps).map( stepIndex => (\n                <Link\n                  style={{\n                    flexBasis:'0',\n                    flex:'1 1 0px',\n                    textDecoration:'none',\n                    cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                  }}\n                  fontSize={2}\n                  textAlign={'center'}\n                  key={`step_${stepIndex}`}\n                  color={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                  hoverColor={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                  activeColor={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                >\n                  {this.state.steps[stepIndex]}\n                </Link>\n              ) )\n            }\n          </Flex>\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Progress\n              style={{\n                width:'100%',\n                height:'15px'\n              }}\n              value={(1/Object.keys(this.state.steps).length)*this.state.step}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}>\n              Select asset:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              selectedToken={this.state.selectedToken}\n              onChange={this.changeSelectedToken.bind(this)}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              How much do you want to cover?\n            </Text>\n            <Input\n              min={0}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              boxShadow={'none !important'}\n              value={this.state.amountValue}\n              onChange={this.changeAmount.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n              placeholder={`Insert ${this.state.selectedToken.toUpperCase()} amount`}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              For how many days?\n            </Text>\n            <Input\n              min={0}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              boxShadow={'none !important'}\n              value={this.state.periodValue}\n              placeholder={'Insert days of coverage'}\n              onChange={this.changePeriod.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n            />\n          </Box>\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <ButtonLoader\n              buttonProps={{\n                my:2,\n                mx:[0, 2],\n                size:'medium',\n                borderRadius:4,\n                mainColor:'blue',\n                disabled:(!this.state.amountValue || !this.state.selectedToken || !this.state.periodValue)\n              }}\n              buttonText={'GET QUOTE'}\n              isLoading={this.state.loading}\n              handleClick={ e => this.getQuote(e) }\n            />\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;","import React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport { Text, Icon, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = this.functionsUtil.BNify(customValue).toString();\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue){\n      return null;\n    }\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : null;\n  }\n}\n\nexport default CustomField;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.props.rows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n          value:Math.round(tokenPercentage),\n          color:'hsl('+tokenColorHsl+')'\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsTextColor:'#333',\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken,'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n    let avgAPY = this.functionsUtil.BNify(0);\n    let totalEarnings = this.functionsUtil.BNify(0);\n    let totalAmountLent = this.functionsUtil.BNify(0);\n\n    await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        tokenAprs,\n        amountLent,\n        tokenEarnings\n      ] = await Promise.all([\n        this.functionsUtil.getTokenAprs(tokenConfig),\n        this.functionsUtil.getAmountLent([token],this.props.account),\n        this.functionsUtil.loadAssetField('earnings',token,tokenConfig,this.props.account,false),\n      ]);\n\n      const tokenAPY = this.functionsUtil.BNify(tokenAprs.avgApy);\n      const tokenWeight = portfolio.tokensBalance[token].tokenBalance.div(portfolio.totalBalance);\n      const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent[token],token,tokenConfig,isRisk);\n\n      if (tokenEarnings){\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY){\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken){\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n    });\n\n    const earningsStart = totalEarnings;\n    const earningsEnd = totalAmountLent.times(avgAPY.div(100));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n    const maxPrecision = this.props.maxPrecision || 10;\n    const minPrecision = this.props.minPrecision || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let tokensEarnings = {};\n    let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n    const amountLents = await this.functionsUtil.getAmountLent(this.props.enabledTokens,this.props.account);\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(Object.keys(amountLents),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountLents[token],token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n      estimationStepsPerc = Math.max(estimationStepsPerc,maxPossibleStep);\n\n      // console.log(token,amountLent.toFixed(5),earnings.toFixed(5),earningsYear.toFixed(5),tokenConfig,tokenAprs,tokenAPR.toFixed(5),tokenAPY.toFixed(5),earningsPercStep,maxPossibleStep,estimationStepsPerc);\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const orderedTokensEarnings = {};\n    Object.keys(amountLents).forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    // console.log(estimationStepsOptions,estimationStepsDefaultOption)\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings)));\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={`images/tokens/${token}.svg`} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\nimport CustomList from '../CustomList/CustomList';\n// import RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    activeCoverages:null,\n    depositedTokens:null,\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    /*\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (themeModeChanged){\n      this.loadPortfolio();\n    }\n    */\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load data\n      const [\n        activeCoverages,\n        batchedDeposits,\n        tokensToMigrate,\n        portfolio\n      ] = await Promise.all([\n        // Load active coverages\n        this.functionsUtil.getActiveCoverages(this.props.account),\n        // Load claimable batches\n        this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load tokens to be migrated\n        this.functionsUtil.getTokensToMigrate(this.props.selectedStrategy),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n        // Load and process Etherscan Txs\n        this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.activeCoverages = activeCoverages && activeCoverages.length>0 ? activeCoverages.map( c => {\n        const statusColors = this.props.theme.colors.transactions.status;\n        const statusIcon = c.status === 'Expired' ? 'Error' : 'VerifiedUser';\n        const statusColor = c.status === 'Expired' ? statusColors.failed : statusColors.completed;\n        const portfolioCoverage = portfolio.totalBalance.gt(0) ? c.balance.div(portfolio.totalBalance).times(100).toFixed(2)+'%' : 'N/A';\n        const statusIconProps = {\n          color:statusColor\n        };\n        return Object.assign(c,{\n          statusIcon,\n          statusIconProps,\n          portfolioCoverage\n        });\n      }) : null;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountLent([token],this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent[token],token,tokenConfig,isRisk);\n\n          const tokenAPY = this.functionsUtil.BNify(tokenAprs.avgApy);\n          const tokenWeight = portfolio.tokensBalance[token].tokenBalance.div(portfolio.totalBalance);\n\n          if (tokenAPY){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          if (tokenScore){\n            avgScore = avgScore.plus(tokenScore.times(tokenWeight));\n          }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        newState.avgScore = avgScore;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.tokensToMigrate = tokensToMigrate;\n      newState.portfolioLoaded = true;\n\n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const riskScore = this.functionsUtil.getGlobalConfig(['messages','riskScore']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const coverProtocolConfig = this.functionsUtil.getGlobalConfig(['tools','coverProtocol']);\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])} strategy\n        </Title>\n        {\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,4],\n                            mb:[2,0]\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,4],\n                            mb:[2,0]\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalEarningsCounter\n                                    {...this.props} \n                                    portfolio={this.state.portfolio}\n                                  />\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Earnings\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total earnings does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,4],\n                            mb:[2,0]\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgScore ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgScore.toFixed(2) }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg Risk Score\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.33]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.66]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                /*\n                !this.state.activeCoverages && coverProtocolConfig.enabled && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    mt={[3,4]}\n                    alignItems={'center'}\n                    id={'no-active-cover'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:[3,4],\n                        width:[1,'auto'],\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Image\n                          mb={2}\n                          height={['1.8em','2.2em']}\n                          src={coverProtocolConfig.image}\n                        />\n                        <Text\n                          mb={1}\n                          fontSize={[2,4]}\n                          fontWeight={500}\n                          textAlign={'center'}\n                        >\n                          You don't have an active coverage\n                        </Text>\n                        <Text\n                          mb={2}\n                          color={'blue'}\n                          fontSize={[1,2]}\n                          fontWeight={500}\n                          hoverColor={'blue'}\n                          textAlign={'center'}\n                        >\n                          Cover Protocol provides coverage against Smart-Contract attacks\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:1,\n                            width:'auto',\n                            minHeight:'40px',\n                            mainColor:'redeem',\n                            size:this.props.isMobile ? 'small' : 'medium'\n                          }}\n                          handleClick={ e => this.props.goToSection(`tools/${coverProtocolConfig.route}`) }\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              color={'white'}\n                              fontSize={[1,2]}\n                              fontWeight={500}\n                            >\n                              Get Covered\n                            </Text>\n                            <Icon\n                              ml={1}\n                              size={'1.3em'}\n                              name={'KeyboardArrowRight'}\n                            />\n                          </Flex>\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                )\n                */\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.29,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:false,\n                            props:{\n                              width:[0.12,0.09],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.10],\n                            },\n                            parentProps:{\n                              alignItems:['center','flex-start'],\n                            },\n                            fields:[\n                              {\n                                name:'score',\n                              }\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.13],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.13],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.10],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,this.state.depositedTokens.length>0 ? 0.14 : 0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.22,0.10],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                this.props.account && coverProtocolConfig.enabled && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','coverProtocol','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              width={[1,1/3]}\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(govTokens)}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.activeCoverages && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Coverages</Title>\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <CustomList\n                        rows={this.state.activeCoverages}\n                        handleClick={ this.props.isMobile ? (props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl) : null }\n                        cols={[\n                          {\n                            title:'PROTOCOL',\n                            props:{\n                              width:[0.42,0.17]\n                            },\n                            fields:[\n                              {\n                                type:'image',\n                                path:['protocolImage'],\n                                props:{\n                                  mr:[1,2],\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                type:'text',\n                                path:['protocolName'],\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            props:{\n                              width:[0.34, 0.15],\n                            },\n                            fields:[\n                              {\n                                type:'number',\n                                path:['balance'],\n                                props:{\n                                  decimals: 4,\n                                }\n                              },\n                              {\n                                type:'text',\n                                path:['token'],\n                                props:{\n                                  ml:[1,2],\n                                  style:{\n                                    textTransform:'uppercase'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EXPIRATION DATE',\n                            props:{\n                              width:0.23,\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'text',\n                                path:['expirationDate'],\n                                props:{\n                                  \n                                }\n                              },\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'COVERAGE',\n                            props:{\n                              width:0.15,\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'text',\n                                path:['portfolioCoverage'],\n                                props:{\n                                  \n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.24,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:[1,2],\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                type:'button',\n                                name:'custom',\n                                label:'File Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.row.status==='Expired')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchDeposit`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                {\n                  /*\n                  <IconBox\n                    cardProps={{\n                      mt:3\n                    }}\n                    text={'You will start earning gov tokens after the batch is executed'}\n                  />\n                  */\n                }\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                        color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                      {\n                        /*\n                        <Tooltip\n                          placement={'top'}\n                          message={`Batches are executed twice a week`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.1em'}\n                            color={'cellTitle'}\n                            name={'InfoOutline'}\n                          />\n                        </Tooltip>\n                        */\n                      }\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.1em'}\n                            color={'cellTitle'}\n                            name={'InfoOutline'}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                                {\n                                  /*\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                    <Text.span\n                                      fontWeight={500}\n                                      display={'block'}\n                                      color={'copyColor'}\n                                      textAlign={'center'}\n                                    >\n                                      Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedToken}\n                                    </Text.span>\n                                  */\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar web3={this.props.web3} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import IDLE from '../contracts/IDLE.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport COMP from '../abis/compound/COMP.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport ETHWrapper from '../ETHWrapper/ETHWrapper';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from '../abis/curve/CurvePool.json';\nimport NexusMutual from '../NexusMutual/NexusMutual';\nimport CoverMint from '../abis/cover/CoverMint.json';\nimport LockedIDLE from '../contracts/LockedIDLE.json';\nimport { Web3Versions } from '@terminal-packages/sdk';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PriceOracle from '../contracts/PriceOracle.json';\nimport IdleTokenV2 from '../contracts/IdleTokenV2.json';\nimport StrategyPage from '../StrategyPage/StrategyPage';\nimport BuyModal from '../utilities/components/BuyModal';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport BatchDeposit from '../BatchDeposit/BatchDeposit';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport IdleBatchConverter from '../contracts/IdleBatchConverter.json';\nimport UniswapV2Router02 from '../abis/uniswap/UniswapV2Router02.json';\nimport BalancerExchangeProxy from '../abis/balancer/BalancerExchangeProxy.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: 'Idle',\n  version: 'v5.6',\n  baseToken: 'ETH',\n  baseURL: 'https://idle.finance',\n  forumURL:'https://gov.idle.finance',\n  betaURL: 'https://beta.idle.finance',\n  countries:{\n    'USA':'United States of America',\n    'GBR':'United Kingdom',\n    'AUS':'Australia',\n    'BRA':'Brazil',\n    'CHN':'China',\n    'CAN':'Canada',\n    'EUR':'Europe',\n    'HKG':'Hong Kong',\n    'IND':'India',\n    'MEX':'Mexico',\n    'RUS':'Russia',\n    'ZAF':'South Africa',\n    'KOR':'South Korea'\n  },\n  logs:{ // Enable logs levels\n    errorsEnabled:false,\n    messagesEnabled:false,\n  },\n  connectors:{ // Connectors props\n    metamask:{\n      enabled:true,\n      subcaption:'Browser extension'\n    },\n    opera:{\n      enabled:true,\n      subcaption:'Opera injected wallet'\n    },\n    dapper:{\n      enabled:true,\n      icon:'dapper.png',\n      subcaption:'Browser extension',\n    },\n    coinbase:{\n      enabled:true,\n      icon:'coinbase.png',\n      subcaption:'Connect with Coinbase wallet'\n    },\n    trustwallet:{\n      enabled:true,\n      subcaption:'Connect with Trust Wallet'\n    },\n    walletconnect:{\n      enabled:true,\n      iconModal:'walletconnect.png',\n      subcaption:'Connect with QR code'\n    },\n    walletlink:{\n      enabled:true,\n      icon:'coinbase.png',\n      name:'Coinbase Wallet',\n      subcaption:'Connect with QR code'\n    },\n    fortmatic:{\n      enabled:true,\n      subcaption:'Login with phone-number'\n    },\n    portis:{\n      enabled:true,\n      subcaption:'Login with e-mail'\n    },\n    authereum:{\n      enabled:true,\n      subcaption:'Cross-device wallet'\n    },\n    torus:{\n      enabled:true,\n      icon:'torus.png',\n      subcaption:'One-Click login for Web 3.0'\n    },\n    trezor:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    ledger:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    }\n  },\n  newsletterSubscription:{\n    endpoint:'https://dev.lapisgroup.it/idle/newsletter.php'\n  },\n  messages:{\n    scoreShort:'Protocol Risk Score',\n    apyShort:'Annual Percentage Yield',\n    tokenPrice:'The token price is calculated using Uniswap spot prices.',\n    cheapRedeem:'Amount of unlent funds available for low gas fees redeem',\n    curveBonusSlippage:'Slippage or bonus depending on if the coin is low or high in the Curve Pool',\n    distributionSpeed:'The distribution indicates the amount of tokens distributed for the entire pool.',\n    directMint:'Pay an additional gas fee to rebalance the pool and help all users gain an additional APR',\n    performanceFee:'This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE',\n    govTokenApr:'Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.',\n    userDistributionSpeed:'The distribution indicates the amount of tokens distributed for your account based on your current pool share.',\n    govTokenRedeemableBalance:'The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.',\n    riskScoreShort:'It\\'s a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.',\n    batchDepositExecutionSchedule:'Batches are executed twice a week, usually on sunday and wednesday. The time of each execution will vary depending on the gas price of the Ethereum network.',\n    apyLong:'APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.',\n    yieldFarming:'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\">Read more here</a>.',\n    riskScore:`It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions:`<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`\n  },\n  analytics:{\n    google:{\n      events:{\n        enabled:true, // Enable Google Analytics events\n        debugEnabled:false, // Enable sending for test environments\n        addPostfixForTestnet:true // Append testnet to eventCategory\n      }\n    }\n  },\n  modals:{ // Enable modals\n    first_deposit_referral:false, // Referral share modal\n    first_deposit_share:true, // First deposit share modal\n    migrate:{\n      enabled:true\n    },\n    welcome:{ // Welcome modal\n      enabled:true,\n      frequency:604800 // One week\n    }\n  },\n  dashboard:{\n    baseRoute:'/dashboard',\n    theme:{\n      mode:'light',\n      darkModeEnabled:true\n    },\n  },\n  governance:{\n    test:false,\n    enabled:true,\n    startBlock:11333729,\n    baseRoute:'/governance',\n    props:{\n      tokenName:'IDLE',\n      availableContracts:{\n        IDLE,\n        PriceOracle,\n        GovernorAlpha,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    contracts:{\n      delegates:'IDLE',\n      governance:'GovernorAlpha',\n    }\n  },\n  curve:{\n    enabled:false,\n    params:{\n      n_coins:3,\n      label:'Curve',\n      route:'/dashboard/curve',\n      image:'images/protocols/curve.svg',\n      imageInactive:'images/protocols/curve-off.svg',\n    },\n    rates:{\n      path:['apy','day','idle'],\n      endpoint:'https://www.curve.fi/raw-stats/apys.json'\n    },\n    poolContract:{\n      decimals:18,\n      abi:CurvePool,\n      name:'idleDAI+idleUSDC+idleUSDT',\n      token:'idleDAI+idleUSDC+idleUSDT',\n      address:'0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05'\n    },\n    depositContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7'\n    },\n    gaugeContract:{\n      abi:LiquidityGaugeV2,\n      name:'LiquidityGaugeV2',\n      address:'0xd69ac8d9D25e99446171B5D0B3E4234dAd294890'\n    },\n    zapContract:{\n      abi:CurveZap,\n      name:'idleCurveZap',\n      address:'0x456974df1042ba7a46fd49512a8778ac3b840a21'\n    },\n    migrationContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7',\n      functions:[\n        {\n          label:'Deposit',\n          name:'add_liquidity'\n        },\n      ]\n    },\n    availableTokens:{\n      idleDAIYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'DAI',\n        token:'idleDAIYield',\n        address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:0\n        },\n      },\n      idleUSDCYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDC',\n        token:'idleUSDCYield',\n        address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:1\n        },\n      },\n      idleUSDTYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDT',\n        token:'idleUSDTYield',\n        address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:2\n        },\n      },\n    }\n  },\n  permit:{\n    DAI:{\n      version:1,\n      EIPVersion:null,\n      nonceMethod:'nonces',\n      name:'Dai Stablecoin',\n      type:[\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" },\n      ]\n    },\n    USDC:{\n      version:2,\n      name:'USD Coin',\n      EIPVersion:2612,\n      nonceMethod:'nonces',\n      type:[\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ]\n    }\n  },\n  govTokens:{\n    IDLE:{\n      abi:IDLE,\n      decimals:18,\n      token:'IDLE',\n      enabled:true,\n      showAUM:false, // Include IDLE balance in AUM\n      showAPR:false, // Include IDLE Apr\n      protocol:'idle',\n      showPrice:false, // Show price in Yield Farming section\n      showBalance:false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode:false,\n      distributionFrequency:'day', // Multiply distribution per block\n      color:'hsl(162, 100%, 41%)',\n      icon:'images/tokens/IDLE.png',\n      disabledTokens:['idleWETHYield'], // Disable IDLE distribution for idleToken\n      address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e' // MAIN\n      // address:'0xAB6Bdb5CCF38ECDa7A92d04E86f7c53Eb72833dF', // KOVAN\n    },\n    COMP:{\n      abi:COMP,\n      decimals:18,\n      token:'COMP',\n      enabled:true,\n      showAUM:true, // Include IDLE balance in AUM\n      showAPR:true, // Include COMP Apr\n      showPrice:true,\n      showBalance:true, // Include COMP balance in Portfolio Donut\n      disabledTokens:[],\n      protocol:'compound',\n      aprTooltipMode:false,\n      distributionFrequency:'day',\n      color:'hsl(162, 100%, 41%)',\n      address:'0xc00e94cb662c3520282e6f5717214004a7f26888', // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    }\n  },\n  contracts:{\n    LockedIDLE:{\n      abi:LockedIDLE,\n      address:'0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n    },\n    PriceOracle:{\n      abi:PriceOracle,\n      address:'0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n      // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n    },\n    Timelock:{\n      abi:Timelock,\n      address:'0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n      // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n    },\n    EcosystemFund:{\n      abi:EcosystemFund,\n      address:'0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n      // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n    },\n    VesterFactory:{\n      abi:VesterFactory,\n      address:'0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n      // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n    },\n    IdleController:{\n      abi:IdleController,\n      address:'0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n      // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n    },\n    EarlyRewards:{\n        abi:EarlyRewards,\n        address:'0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n    },\n    GovernorAlpha:{\n      abi:GovernorAlpha,\n      address:'0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n      // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n    },\n    Comptroller:{\n      abi:Comptroller,\n      address:'0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n      // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n    },\n    UniswapRouter:{\n      abi:UniswapV2Router02,\n      address:'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n    },\n    BalancerExchangeProxy:{\n      abi:BalancerExchangeProxy,\n      address:'0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n    }\n  },\n  tokens:{\n    DAI:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n    USDC:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n  },\n  strategies:{\n    best:{\n      token:'DAI',\n      color:'#f32121',\n      comingSoon:false,\n      addGovTokens:true,\n      titlePostfix:null,\n      title:'Best-Yield',\n      iconName:'Whatshot',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(40,95%,59%)',\n      icon:'images/strategies/best-on.svg',\n      iconInactive:'images/strategies/best-off.svg',\n      iconInactiveDark:'images/strategies/best-white.svg',\n      desc:'Maximize your returns across DeFi protocols',\n      descLong:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.',\n      descShort:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.'\n    },\n    risk:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:false,\n      titlePostfix:null,\n      addGovTokens:true,\n      iconName:'Security',\n      title:'Risk-Adjusted',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/risk-on.svg',\n      iconInactive:'images/strategies/risk-off.svg',\n      iconInactiveDark:'images/strategies/risk-white.svg',\n      desc:'Optimize your risk exposure across DeFi protocols',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    },\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n  },\n  stats:{\n    enabled:true, // Enable endpoint\n    rates:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/rates/'\n    },\n    scores:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/scores/'\n    },\n    versions:{\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3:{\n        label:'Idle V3',\n        additionalProtocols:[],\n        endTimestamp:1597237542,\n        startTimestamp:1589801874,\n        showPerformanceTooltip:false,\n        strategiesParams:{\n          risk:{\n            endTimestamp:1597233922,\n          }\n        },\n        enabledStrategies:['best','risk'],\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n      },\n      v4:{\n        label:'Idle V4',\n        endTimestamp:null,\n        startTimestamp:1597442400, // 1598220000\n        enabledStrategies:['best','risk'],\n        showPerformanceTooltip:true,\n        strategiesParams:{\n          risk:{\n            startTimestamp:1599183170,\n          }\n        },\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH'],\n        additionalProtocols:[\n          {\n            decimals:16,\n            protocol:'compound',\n            name:'compoundWithCOMP',\n          }\n        ]\n      }\n    },\n    tokens:{\n      DAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          rgb:[250,184,51],\n          hex:'#F7B24A',\n          hsl:['40', '95%', '59%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 2]\n        },\n        startTimestamp:'2020-02-11',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USD:{\n        enabled:true,\n        color:{\n          hex:'#85bb65',\n          rgb:[133, 187, 101],\n          hsl:['98', '39%', '56%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        address:null,\n        startTimestamp:'2020-02-04',\n      },\n      USDC:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#2875C8',\n          rgb:[40,117,200],\n          hsl:['211', '67%', '47%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USDT:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#22a079',\n          rgb:[34, 160, 121],\n          hsl:['161', '65%', '38%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      TUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#002868',\n          rgb:[0, 40, 104],\n          hsl:['217', '100%', '20%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n      },\n      SUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#1e1a31',\n          rgb:[30, 26, 49],\n          hsl:['250', '31%', '15%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n      },\n      WBTC:{\n        decimals:8,\n        enabled:true,\n        color:{\n          hex:'#eb9444',\n          rgb:[235, 148, 68],\n          hsl:['29', '81%', '59%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'wbtcDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      WETH:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#ee1f79',\n          rgb:[238, 31, 121],\n          hsl:['334', '86%', '53%']\n        },\n        startTimestamp:'2021-02-16',\n        conversionRateField:'wethDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      COMP:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#00d395',\n          rgb:[0, 211, 149],\n          hsl:['162', '100%', '41%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0xc00e94cb662c3520282e6f5717214004a7f26888',\n      },\n      IDLE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#0d55bb',\n          rgb:[13, 85, 187],\n          hsl:['215', '87%', '39%']\n        },\n        startTimestamp:'2020-11-10',\n        icon:'images/tokens/IDLE.png',\n        conversionRateField:'idleDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0xc00e94cb662c3520282e6f5717214004a7f26888',\n      },\n      'idleDAI+idleUSDC+idleUSDT':{\n        decimals:18,\n        enabled:false,\n        name:'Curve.fi',\n        color:{\n          hex:'#ff0000',\n          rgb:[255, 0, 0],\n          hsl:['0', '100%', '50%']\n        },\n        startTimestamp:'2020-06-15',\n      },\n    },\n    protocols:{\n      compound:{\n        legend:true,\n        label:'Compound',\n        color:{\n          rgb:[0, 209, 146],\n          hsl:['162', '100%', '41%']\n        }\n      },\n      compoundWithCOMP:{\n        rateField:['rate','compoundAdditionalAPR'],\n        label:'Compound + COMP',\n        color:{\n          rgb:[0, 153, 107],\n          hsl:['162', '100%', '30%']\n        }\n      },\n      fulcrum:{\n        legend:false,\n        label:'Fulcrum',\n        color:{\n          rgb:[2, 138, 192],\n          hsl:['197', '98%', '38%']\n        }\n      },\n      dsr:{\n        label:'DSR',\n        icon:'CHAI.png',\n        color:{\n          rgb:[222, 52, 67],\n          hsl:['355', '72%', '54%']\n        }\n      },\n      dydx:{\n        label:'DyDx',\n        legend:true,\n        color:{\n          rgb:[87, 87, 90],\n          hsl:['240', '2%', '35%']\n        }\n      },\n      iearn:{\n        label:'Yearn'\n      },\n      aave:{\n        label:'Aave',\n        legend:true,\n        color:{\n          rgb:[230, 131, 206],\n          hsl:['315', '66%', '71%']\n        },\n        data:{\n          '0xfc1e690f61efd961294b3e1ce3313fbd8aa4f85d':{},\n          '0x9ba00d6856a4edf4665bca2c2309936572473b7e':{\"9598633\":\"1000000\",\"9598646\":\"1000001\",\"9598684\":\"1000002\",\"9598823\":\"1000003\",\"9598869\":\"1000004\",\"9598915\":\"1000005\",\"9599092\":\"1000008\",\"9599138\":\"1000009\",\"9599263\":\"1000011\",\"9599267\":\"1000011\",\"9599295\":\"1000012\",\"9599299\":\"1000012\",\"9599307\":\"1000012\",\"9599315\":\"1000012\",\"9599579\":\"1000017\",\"9599866\":\"1000022\",\"9600156\":\"1000026\",\"9600433\":\"1000031\",\"9600704\":\"1000036\",\"9600982\":\"1000042\",\"9601051\":\"1000044\",\"9601073\":\"1000045\",\"9601077\":\"1000045\",\"9601345\":\"1000053\",\"9601619\":\"1000058\",\"9601891\":\"1000063\",\"9602144\":\"1000068\",\"9602429\":\"1000073\",\"9602724\":\"1000078\",\"9602993\":\"1000083\",\"9603272\":\"1000088\",\"9603536\":\"1000093\",\"9603826\":\"1000098\",\"9603840\":\"1000098\",\"9604038\":\"1000102\",\"9604182\":\"1000104\",\"9604457\":\"1000109\",\"9604701\":\"1000114\",\"9604979\":\"1000119\",\"9605247\":\"1000124\",\"9605505\":\"1000129\",\"9605793\":\"1000134\",\"9606073\":\"1000139\",\"9606368\":\"1000144\",\"9606639\":\"1000149\",\"9606896\":\"1000153\",\"9607147\":\"1000158\",\"9607406\":\"1000163\",\"9607722\":\"1000168\",\"9608130\":\"1000175\",\"9608395\":\"1000180\",\"9608656\":\"1000185\",\"9608959\":\"1000190\",\"9609544\":\"1000260\",\"9609811\":\"1000293\",\"9610073\":\"1000314\",\"9610341\":\"1000331\",\"9610601\":\"1000332\",\"9610871\":\"1000333\",\"9611120\":\"1000335\",\"9611386\":\"1000336\",\"9611665\":\"1000337\",\"9611949\":\"1000339\",\"9612210\":\"1000340\",\"9612487\":\"1000341\",\"9612758\":\"1000343\",\"9613012\":\"1000344\",\"9613276\":\"1000346\",\"9613542\":\"1000347\",\"9613824\":\"1000349\",\"9614069\":\"1000351\",\"9614327\":\"1000353\",\"9614596\":\"1000355\",\"9614864\":\"1000356\",\"9615111\":\"1000358\",\"9615394\":\"1000360\",\"9615679\":\"1000361\",\"9615958\":\"1000363\",\"9616245\":\"1000365\",\"9616531\":\"1000367\",\"9616803\":\"1000369\",\"9617053\":\"1000371\",\"9617326\":\"1000373\"}\n        }\n      },\n      curve:{\n        label:'',\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      },\n      idle:{\n        label:'Idle',\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      }\n    }\n  },\n  contract:{\n    methods:{\n      redeem:{\n        skipRebalance:true,\n        metaTransactionsEnabled:false\n      },\n      deposit:{\n        skipMint:true,\n        minAmountForMint:5000,\n        skipMintCheckboxEnabled:true,\n        metaTransactionsEnabled:false,\n        proxyContract:{\n          enabled:false,\n          abi:IdleProxyMinter,\n          name:'IdleProxyMinter',\n          function:'mintIdleTokensProxy',\n          address:'0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a',\n        }\n      },\n      migrate:{\n        skipRebalance:true,\n        minAmountForRebalance:10000,\n        minAmountForRebalanceMetaTx:10000\n      },\n      redeemGovTokens:{\n        enabled:true\n      },\n      rebalance:{\n        enabled:true,\n        abi:IdleRebalancerV3\n      }\n    }\n  },\n  network:{ // Network configurations\n    availableNetworks:{\n      1:'Mainnet',\n      3:'Ropsten',\n      4:'Rinkeby',\n      42:'Kovan',\n      1337:'Hardhat'\n    },\n    isForked:false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork:1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear:2371428,\n    firstBlockNumber:8119247,\n    requiredConfirmations: 1,\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers:{\n      infura:{\n        42: 'https://kovan.infura.io/v3/',\n        1: 'https://mainnet.infura.io/v3/',\n        1337: 'https://mainnet.infura.io/v3/'\n      },\n      etherscan:{\n        enabled:true, // False for empty txs list (try new wallet)\n        endpoints:{\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        }\n      },\n      snapshot:{\n        endpoints:{\n          proposals:'https://hub.snapshot.page/api/idlefinance.eth/proposals'\n        },\n        urls:{\n          proposals:'https://signal.idle.finance/#/idlefinance.eth/proposal/'\n        }\n      },\n      biconomy:{\n        enabled:false,\n        enableLogin:false,\n        supportedNetworks:[1,42],\n        disabledWallets:['authereum'],\n        endpoints:{\n          limits:'https://api.biconomy.io/api/v1/dapp/checkLimits'\n        },\n        params:{\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY,\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: '36572ec9-ae5c-4c4a-9530-f3ae7c7ac829'\n        }\n      },\n      terminal:{\n        enabled:false,\n        supportedNetworks:[1,42],\n        params:{\n          apiKey: env.REACT_APP_TERMINAL_KEY,\n          projectId: env.REACT_APP_TERMINAL_PROJECT_ID,\n          source: null,\n          web3Version: Web3Versions.one\n        }\n      },\n      simpleID:{\n        enabled:false,\n        supportedNetworks:[1],\n        getNetwork:(networkId,availableNetworks) => {\n          let networkName = null;\n          switch (networkId){\n            case 1:\n              networkName = 'mainnet';\n            break;\n            default:\n              networkName = availableNetworks[networkId] ? availableNetworks[networkId].toLowerCase() : 'mainnet';\n            break;\n          }\n          return networkName;\n        },\n        params:{\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: 'mainnet'\n        }\n      }\n    }\n  },\n  notifications:[\n    {\n      enabled:false,\n      end:1612282726374,\n      start:1611677841027,\n      date:'Jan 26, 2021 16:18 UTC',\n      title:'Cover Protocol Available',\n      hash:'/dashboard/tools/cover-protocol',\n      image:'/images/protocols/cover-logo.svg',\n      text:'Protect your portfolio with Cover Protocol',\n    }\n  ],\n  tools:{\n    ethWrapper:{\n      enabled:true,\n      label:'ETH Wrapper',\n      route:'eth-wrapper',\n      subComponent:ETHWrapper,\n      image:'images/tokens/WETH.svg',\n      desc:'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props:{\n        contract:{\n          abi:WETH,\n          name:'WETH',\n          decimals:18,\n          token:'WETH',\n          address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    coverProtocol:{\n      enabled:true,\n      label:'Cover Protocol',\n      route:'cover-protocol',\n      subComponent:CoverProtocol,\n      image:'images/protocols/cover-logo.svg',\n      desc:'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl:'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props:{\n        contract:{\n          decimals:18,\n          abi:CoverMint,\n          name:'CoverMint',\n          address:'0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages:[\n          {\n            collateral:'DAI',\n            expirationTimestamp:1614470400,\n            tokens:{\n              Claim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                address:'0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                  address:'0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c',\n                }\n              },\n              NoClaim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                address:'0x53df0bfa014b7522299c129c5a7b318f02adb469',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                  address:'0xce0e9e7a1163badb7ee79cfe96b5148e178cab73',\n                }\n              }\n            }\n          },\n        ],\n      }\n    },\n    batchDeposit:{\n      enabled:true,\n      icon:'Storage',\n      claimEnabled:true,\n      depositEnabled:true,\n      route:'batch-deposit',\n      label:'Batch Deposit',\n      subComponent:BatchDeposit,\n      desc:'Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            strategy:'best',\n            baseToken:'DAI',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAI',\n              address:'0x633fb4d38B24dC890b11Db2AE2B248D13F996A79', // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  usePermit:true,\n                  label:'Deposit',\n                  permitName:'permitAndDeposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:6,\n            strategy:'best',\n            baseToken:'USDC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDC',\n              address:'0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B', // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                  permitName:'permitEIP2612AndDepositUnlimited'\n                },\n              ]\n            },\n          },\n          /*\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  usePermit:true,\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n          */\n        }\n      }\n    },\n    batchMigration:{\n      enabled:true,\n      claimEnabled:true,\n      depositEnabled:false,\n      icon:'FileDownload',\n      route:'batch-migration',\n      label:'Batch Migration',\n      subComponent:BatchMigration,\n      desc:'Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'DAI',\n            name:'idleDAIYieldV3',\n            token:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAI',\n              address:'0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDC',\n            name:'idleUSDCYieldV3',\n            token:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDC',\n              address:'0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            name:'idleUSDTYieldV3',\n            token:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            name:'idleSUSDYieldV3',\n            token:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            name:'idleTUSDYieldV3',\n            token:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            name:'idleWBTCYieldV3',\n            token:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            name:'idleDAISafeV3',\n            token:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            name:'idleUSDCSafeV3',\n            token:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            name:'idleUSDTSafeV3',\n            token:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n        }\n      }\n    },\n    tokenMigration:{\n      enabled:true,\n      icon:'SwapHoriz',\n      route:'convert',\n      label:'Token Migration',\n      desc:'Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle',\n      subComponent:TokenMigration,\n      props:{\n        migrationContract:{\n          name:'IdleConverterV4',\n          abi:IdleConverterPersonalSignV4,\n          address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n          oldAddresses:[],\n          functions:[\n            {\n              label:'Migrate',\n              name:'migrateFromToIdle'\n            },\n          ]\n        },\n        availableStrategies:['best','risk'],\n        availableTokens:{\n          idleDAIv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            baseToken:'DAI',\n            abi:IdleTokenV2,\n            token:'idleDAIOld',\n            icon:'images/tokens/idleDAI.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0x10eC0D497824e342bCB0EDcE00959142aAa766dD',\n          },\n          cDAI:{\n            decimals:8,\n            enabled:true,\n            token:\"cDAI\",\n            baseToken:'DAI',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\",\n          },\n          iDAI:{\n            decimals:18,\n            enabled:false,\n            token:\"iDAI\",\n            baseToken:'DAI',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x493c57c4763932315a328269e1adad09653b9081\",\n          },\n          aDAI:{\n            decimals:18,\n            enabled:true,\n            token:\"aDAI\",\n            protocol:\"aave\",\n            baseToken:'DAI',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\",\n          },\n          yDAIv3:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv3\",\n            abi:yDAIv3.abi,\n            baseToken:'DAI',\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xC2cB1040220768554cf699b0d863A3cd4324ce32\",\n          },\n          yDAIv2:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv2\",\n            baseToken:'DAI',\n            abi:yDAIv3.abi,\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\",\n          },\n          idleUSDCv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            abi:IdleTokenV2,\n            baseToken:'USDC',\n            token:'idleUSDCOld',\n            icon:'images/tokens/idleUSDC.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0xeB66ACc3d011056B00ea521F8203580C2E5d3991',\n          },\n          cUSDC:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDC\",\n            baseToken:'USDC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x39aa39c021dfbae8fac545936693ac917d5e7563\",\n          },\n          iUSDC:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDC\",\n            baseToken:'USDC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\",\n          },\n          aUSDC:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDC\",\n            protocol:\"aave\",\n            baseToken:'USDC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\",\n          },\n          yUSDCv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv3\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x26EA744E5B887E5205727f55dFBE8685e3b21951\",\n          },\n          yUSDCv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv2\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\",\n          },\n          cUSDT:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDT\",\n            baseToken:'USDT',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\",\n          },\n          iUSDT:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDT\",\n            baseToken:'USDT',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x8326645f3aa6de6420102fdb7da9e3a91855045b\",\n          },\n          aUSDT:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDT\",\n            protocol:\"aave\",\n            baseToken:'USDT',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\",\n          },\n          yUSDTv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv3\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\",\n          },\n          yUSDTv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv2\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\",\n          },\n          idleSUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'SUSD',\n            token:'idleSUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleSUSDYield.svg',\n            address:'0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5',\n          },\n          aSUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aSUSD\",\n            protocol:\"aave\",\n            baseToken:'SUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x625aE63000f46200499120B906716420bd059240\",\n          },\n          ySUSDv3:{\n            decimals:18,\n            enabled:true,\n            token:\"ySUSDv3\",\n            abi:ySUSDv3,\n            baseToken:'SUSD',\n            protocol:\"iearn\",\n            availableStrategies:['best'],\n            icon:'images/tokens/ySUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xf61718057901f84c4eec4339ef8f0d86d2b45600\",\n          },\n          idleTUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'TUSD',\n            token:'idleTUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleTUSDYield.svg',\n            address:'0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6',\n          },\n          aTUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aTUSD\",\n            protocol:\"aave\",\n            baseToken:'TUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x4DA9b813057D04BAef4e5800E36083717b4a0341\",\n          },\n          yTUSDv3:{\n            decimals:18,\n            enabled:true,\n            abi:yTUSDv3,\n            token:\"yTUSDv3\",\n            baseToken:'TUSD',\n            protocol:\"iearn\",\n            icon:'images/tokens/yTUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x73a052500105205d34daf004eab301916da8190f\",\n          },\n          cWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"cWBTC\",\n            baseToken:'WBTC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\",\n          },\n          iWBTC:{\n            decimals:8,\n            enabled:false,\n            token:\"iWBTC\",\n            baseToken:'WBTC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\",\n          },\n          aWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"aWBTC\",\n            protocol:\"aave\",\n            baseToken:'WBTC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\",\n          },\n        }\n      }\n    },\n    addFunds:{\n      enabled:true,\n      icon:'AddCircleOutline',\n      route:'add-funds',\n      label:'Add Funds',\n      desc:'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent:BuyModal,\n      directProps:{\n        showInline:true,\n        showAllTokens:true\n      }\n    },\n    insurance:{\n      enabled:false,\n      icon:'Security',\n      route:'nexus-mutual',\n      label:'Nexus Mutual',\n      desc:'Buy tokens with Bank account or Credit card',\n      subComponent:NexusMutual,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n        }\n      },\n      directProps:{\n        ens:'idlefinancev3.nexusmutual.eth',\n        address:'0x78751B12Da02728F467A44eAc40F5cbc16Bd7934'\n      }\n    },\n    tokenSwap:{\n      enabled:true,\n      icon:'Sync',\n      route:'token-swap',\n      label:'Token Swap',\n      desc:'Easily swap your tokens using Kyber Swap widget',\n      subComponent:TokenSwap,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n          \"SUSD\":{\"token\":\"SUSD\"},\n          \"TUSD\":{\"token\":\"TUSD\"},\n          \"USDC\":{\"token\":\"USDC\"},\n          \"USDS\":{\"token\":\"USDS\"},\n          \"USDT\":{\"token\":\"USDT\"},\n          \"WBTC\":{\"token\":\"WBTC\"},\n          \"WETH\":{\"token\":\"WETH\"},\n          \"BUSD\":{\"token\":\"BUSD\"},\n          \"EURS\":{\"token\":\"EURS\"},\n          \"2KEY\":{\"token\":\"2KEY\"},\n          \"ABT\":{\"token\":\"ABT\"},\n          \"ABYSS\":{\"token\":\"ABYSS\"},\n          \"AMPL\":{\"token\":\"AMPL\"},\n          \"ANT\":{\"token\":\"ANT\"},\n          \"BAM\":{\"token\":\"BAM\"},\n          \"BAND\":{\"token\":\"BAND\"},\n          \"BAT\":{\"token\":\"BAT\"},\n          \"BLZ\":{\"token\":\"BLZ\"},\n          \"BNT\":{\"token\":\"BNT\"},\n          \"BQX\":{\"token\":\"BQX\"},\n          \"BTU\":{\"token\":\"BTU\"},\n          \"CDT\":{\"token\":\"CDT\"},\n          \"CVC\":{\"token\":\"CVC\"},\n          \"DAT\":{\"token\":\"DAT\"},\n          \"DGX\":{\"token\":\"DGX\"},\n          \"EKG\":{\"token\":\"EKG\"},\n          \"ELF\":{\"token\":\"ELF\"},\n          \"ENJ\":{\"token\":\"ENJ\"},\n          \"EQUAD\":{\"token\":\"EQUAD\"},\n          \"FXC\":{\"token\":\"FXC\"},\n          \"GDC\":{\"token\":\"GDC\"},\n          \"GEN\":{\"token\":\"GEN\"},\n          \"GHT\":{\"token\":\"GHT\"},\n          \"GNO\":{\"token\":\"GNO\"},\n          \"IOST\":{\"token\":\"IOST\"},\n          \"KEY\":{\"token\":\"KEY\"},\n          \"KNC\":{\"token\":\"KNC\"},\n          \"LEND\":{\"token\":\"LEND\"},\n          \"LINK\":{\"token\":\"LINK\"},\n          \"LOOM\":{\"token\":\"LOOM\"},\n          \"LRC\":{\"token\":\"LRC\"},\n          \"MANA\":{\"token\":\"MANA\"},\n          \"MCO\":{\"token\":\"MCO\"},\n          \"MET\":{\"token\":\"MET\"},\n          \"MFG\":{\"token\":\"MFG\"},\n          \"MKR\":{\"token\":\"MKR\"},\n          \"MLN\":{\"token\":\"MLN\"},\n          \"MTL\":{\"token\":\"MTL\"},\n          \"MYB\":{\"token\":\"MYB\"},\n          \"NEXXO\":{\"token\":\"NEXXO\"},\n          \"NPXS\":{\"token\":\"NPXS\"},\n          \"OGN\":{\"token\":\"OGN\"},\n          \"OMG\":{\"token\":\"OMG\"},\n          \"OST\":{\"token\":\"OST\"},\n          \"PAX\":{\"token\":\"PAX\"},\n          \"PBTC\":{\"token\":\"PBTC\"},\n          \"PLR\":{\"token\":\"PLR\"},\n          \"PNK\":{\"token\":\"PNK\"},\n          \"POLY\":{\"token\":\"POLY\"},\n          \"POWR\":{\"token\":\"POWR\"},\n          \"PT\":{\"token\":\"PT\"},\n          \"QKC\":{\"token\":\"QKC\"},\n          \"QNT\":{\"token\":\"QNT\"},\n          \"RAE\":{\"token\":\"RAE\"},\n          \"REN\":{\"token\":\"REN\"},\n          \"REP\":{\"token\":\"REP\"},\n          \"REQ\":{\"token\":\"REQ\"},\n          \"RLC\":{\"token\":\"RLC\"},\n          \"RSR\":{\"token\":\"RSR\"},\n          \"RSV\":{\"token\":\"RSV\"},\n          \"SAN\":{\"token\":\"SAN\"},\n          \"SNT\":{\"token\":\"SNT\"},\n          \"SNX\":{\"token\":\"SNX\"},\n          \"SPIKE\":{\"token\":\"SPIKE\"},\n          \"SPN\":{\"token\":\"SPN\"},\n          \"TKN\":{\"token\":\"TKN\"},\n          \"TKX\":{\"token\":\"TKX\"},\n          \"TRYB\":{\"token\":\"TRYB\"},\n          \"UBT\":{\"token\":\"UBT\"},\n          \"UPP\":{\"token\":\"UPP\"},\n          \"ZRX\":{\"token\":\"ZRX\"}\n        }\n      },\n      directProps:{\n      }\n    }\n  },\n  payments: { // Payment methods & providers\n    methods:{\n      bank:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/bank.png',\n          caption:'Bank Account'\n        }\n      },\n      card:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/debit-card.png',\n          caption:'Credit Card'\n        }\n      },\n      wallet:{\n        defaultProvider:'zeroExInstant',\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/ethereum-wallet.svg',\n          caption:'Ethereum Wallet',\n          imageProps:{\n            padding:['0','5px']\n          }\n        }\n      },\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: 'images/payments/wyre.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.75% fee ~',\n        supportedMethods:['card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        remoteResources:{},\n        env:'prod',\n        envParams:{\n          test:{\n            accountId:'AC_Q2Y4AARC3TP'\n          },\n          prod:{\n            accountId:'AC_PQQBX33XVEQ'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n              break;\n              case 'card':\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = 'https://pay.sendwyre.com/purchase';\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken ),\n            referrerAccountId,\n            redirectUrl:globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const wyreWidget = document.getElementById('wyre-widget');\n          if (!wyreWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById('wyreWidget_style')){\n              const wyreStyle = document.createElement('style');\n              wyreStyle.id = 'wyreWidget_style';\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        },\n      },\n      ramp: {\n        enabled:true,\n        imageSrc: 'images/payments/ramp.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods:['bank','card'],\n        badge: {\n          text:'NO ID REQUIRED',\n          color:'#fff',\n          bgColor:'#0cade4'\n        },\n        supportedTokens:['ETH','DAI','USDC'],\n        supportedCountries:['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'],\n        getInfo: (props) => {\n          const info = {};\n            switch (props.selectedMethod){\n              case 'bank':\n                info.supportedCountries = ['GBR','EUR'];\n                info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n              case 'card':\n                info.supportedCountries = ['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'];\n                info.subcaption = `~ 2.90% fee ~`;\n              break;\n              default:\n              break;\n            }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n        \treturn {\n\t          hostAppName: 'Idle',\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? 'mobile' : 'desktop',\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset ? props.tokenConfig.ramp.swapAsset : props.selectedToken )\n        \t};\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on('*', async (event) => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type){\n                case 'PURCHASE_SUCCESSFUL':\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil.BNify(tokenAmount.toString()).div(functionsUtil.BNify(Math.pow(10,parseInt(tokenDecimals)).toString())).toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: 'light',\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\",\n                  });\n\n                break;\n                default:\n                break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled:true,\n        imageSrc: 'images/payments/transak.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods:['bank','card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR','IND'],\n        supportedTokens:['ETH','DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n        remoteResources:{'https://global.transak.com/v1/widget.js':{}},\n        env:'prod',\n        badge:{\n          text:'INSTANT',\n          bgColor:'#0069ee'\n        },\n        envParams:{\n          test:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_TEST,\n            url:'https://global.transak.com'\n          },\n          prod:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_PROD,\n            url:'https://global.transak.com'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === 'bank' ? '1.5%' : '4.5%';\n\n          if (props.selectedCountry && props.selectedCountry.value){\n            switch (props.selectedCountry.value.toUpperCase()){\n              case 'GBR':\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n              break;\n              case 'IND':\n                fee = '1.0%';\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n              break;\n              case 'EUR':\n                if (selectedMethod === 'bank'){\n                  info.badge = {\n                    text:'SEPA',\n                    color:'#f7cb05 ',\n                    bgColor:'#10288a'\n                  };\n                } else {\n                  info.badge = {\n                    text:'INSTANT',\n                    bgColor:'#0069ee'\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams = globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value){\n            switch (buyParams.selectedCountry.value.toUpperCase()){\n              case 'IND':\n                fiatCurrency = 'INR';\n              break;\n              case 'GBR':\n                fiatCurrency = 'GBP';\n              break;\n              case 'EUR':\n                fiatCurrency = 'EUR';\n              break;\n              case 'USA':\n                fiatCurrency = 'USD';\n              break;\n              default:\n                fiatCurrency = 'GBP';\n              break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.transak && props.tokenConfig.transak.currencyCode ? props.tokenConfig.transak.currencyCode : props.selectedToken);\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width:'100%',\n            height:'100%'\n            // email,\n          };\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          if (window.transakGlobal){\n\n            const transakWidget = document.getElementById('transak-widget');\n            if (!transakWidget){\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById('transakWidget_style')){\n                const transakStyle = document.createElement('style');\n                transakStyle.id = 'transakWidget_style';\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, 'transak-widget-container');\n          }\n        }\n      },\n      moonpay: {\n        enabled:true,\n        imageSrc: 'images/payments/moonpay.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 4.5% fee ~',\n        supportedMethods:['card','bank'],\n        supportedCountries:['GBR','EUR','AUS','BRA','CHN','MEX','CAN','HKG','RUS','ZAF','KOR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        env:'prod',\n        envParams:{\n          test:{\n            url:'https://buy-staging.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod:{\n            url:'https://buy.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                if (props.selectedCountry && props.selectedCountry.value){\n                  switch (props.selectedCountry.value.toUpperCase()){\n                    case 'EUR':\n                      info.badge = {\n                        text:'SEPA',\n                        color:'#f7cb05 ',\n                        bgColor:'#10288a'\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                    break;\n                    case 'GBR':\n                      info.badge = {\n                        text:'GBP',\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                    break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                    break;\n                  }\n                }\n              break;\n              case 'card':\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams = globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.moonpay && props.tokenConfig.moonpay.currencyCode ? props.tokenConfig.moonpay.currencyCode : props.selectedToken.toLowerCase()),\n            walletAddress:props.account,\n            baseCurrencyCode:'USD',\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            'bank':{\n              'GBR':'gbp_bank_transfer',\n              'EUR':'sepa_bank_transfer'\n            },\n            'card':'credit_debit_card'\n          };\n\n          const selectedCountry = buyParams.selectedCountry && buyParams.selectedCountry.value ? buyParams.selectedCountry.value.toUpperCase() : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod){\n            switch (buyParams.selectedMethod){\n              case 'bank':\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod]['EUR'];\n                switch (selectedCountry){\n                  case 'GBR':\n                  case 'EUR':\n                    params.enabledPaymentMethods = methods[buyParams.selectedMethod][selectedCountry];\n                  break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(methods[buyParams.selectedMethod]).join(',');\n                  break;\n                }\n              break;\n              case 'card':\n              default:\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod];\n              break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry){\n            case 'GBR':\n              params.baseCurrencyCode = 'GBP';\n            break;\n            case 'EUR':\n              params.baseCurrencyCode = 'EUR';\n            break;\n            default:\n              params.baseCurrencyCode = 'USD';\n            break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (!document.cookie.match(/^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/)) {\n              document.cookie = \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const moonpayWidget = document.getElementById('moonpay-widget');\n          if (!moonpayWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById('moonpayWidget_style')){\n              const moonpayStyle = document.createElement('style');\n              moonpayStyle.id = 'moonpayWidget_style';\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: 'images/payments/zeroexinstant.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        remoteResources:{'https://instant.0x.org/v3/instant.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onSuccess,onClose) => {\n\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context ? window.RimbleWeb3_context.connectorName : null;\n\n          if (!tokenParams.zeroExInstant){\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider: connectorName && connectorName!=='Injected' && window.RimbleWeb3_context.connector[connectorName.toLowerCase()] ? window.RimbleWeb3_context.connector[window.RimbleWeb3_context.connectorName.toLowerCase()].provider : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount) => {\n          if (window.zeroExInstant && initParams){\n            if (amount){\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, 'body');\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: 'images/payments/kyber.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Swap with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['WETH','USDC','DAI','USDT','TUSD','SUSD','WBTC'],\n        web3Subscription:{ // Data for web3 subscription\n          enabled: true,\n          contractAddress: '0x818e6fecd516ecc3849daf6845e3ec868087b755',\n          decodeLogsData: [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_startAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_tokenAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_startAmount\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_tokenAmount\",\n              \"type\": \"uint256\"\n            },\n          ],\n        },\n        remoteResources:{\n          'https://widget.kyber.network/v0.7.5/widget.css':{},\n          'https://widget.kyber.network/v0.7.5/widget.js':{\n            parentElement:document.body,\n            precall: (props,globalConfigs,providerInfo) => {\n\n              // Remove previous elements\n              const buttons = document.querySelectorAll('.kyber-widget-button');\n              for (let i=0;i<buttons.length;i++){\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll('.script_kyberSwap');\n              for (let i=0;i<scripts.length;i++){\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId ? props.buttonId : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)){\n                const a = document.createElement('a');\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props,globalConfigs);\n                a.target = '_blank';\n                a.rel = 'nofollow noopener noreferrer';\n                a.className = 'kyber-widget-button theme-ocean theme-supported';\n                a.title = 'Swap with Kyber';\n                a.style = 'display:none;';\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props,globalConfigs,buyParams=null) => {\n          const baseToken = props.baseToken ? props.baseToken : 'ETH';\n          const params = {\n            lang:'en',\n            type:'swap',\n            mode:'iframe',\n            theme:'theme-ocean',\n            paramForwarding:true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens:`${baseToken}_${props.selectedToken}`,\n            title:`Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair:`${baseToken}_${props.selectedToken}`,\n            commissionId:'0x4215606a720477178AdFCd5A59775C63138711e8',\n            network: globalConfigs.network.requiredNetwork === 1 ? 'mainnet' : 'test',\n          };\n\n          const url  = 'https://widget.kyber.network/v0.7.5/';\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props) => {\n          const buttonId = props.buttonId ? props.buttonId :`kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a){\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n                      \n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: 'images/payments/airswap.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://cdn.airswap.io/airswap-instant-widget.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            env: 'production',\n            mode: 'buy',\n            token: props.tokenConfig.address,\n            baseToken: 'ETH',\n            onComplete: onComplete ? onComplete : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.AirSwapInstant){\n            if (amount){\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams,'body');\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: 'images/payments/totle.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://widget.totle.com/latest/dist.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null,\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.TotleWidget){\n            const nodeId = 'totle-widget';\n            if (!document.getElementById(nodeId)){\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(initParams,document.getElementById(nodeId));\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      if (this.tokenConfig && this.tokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport globalConfigs from '../configs/globalConfigs';\n\nconst ethereumjsABI = require('ethereumjs-abi');\nconst env = process.env;\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber( typeof s === 'object' ? s : String(s) )\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'),...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'),...props); }\n  getContractByName = (contractName) => {\n    const contract = this.props.contracts.find(c => c.name === contractName);\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g,\"\\n\")\n            .replace(/<p>/g,\"\")\n            .replace(/<br>/g,\"\")\n            .replace(/&nbsp;/g,\" \")\n            .replace(/<\\/p>/g,\"\");\n  }\n  capitalize = (str) => {\n    return str.substr(0,1).toUpperCase()+str.substr(1);\n  }\n  strToMoment = (date,format=null) => {\n    return moment(date,format);\n  }\n  replaceArrayProps = (arr1,arr2) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  stripHtml = (html) => {\n     var tmp = document.createElement(\"DIV\");\n     tmp.innerHTML = html;\n     return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d/2;\n      if (t < 1) return c/2*t*t + b;\n      t--;\n      return -c/2 * (t*(t-2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n        currentTime += increment;\n        var val = Math.easeInOutQuad(currentTime, start, change, duration);\n        window.scrollTo(0,val);\n        if(currentTime < duration) {\n          window.setTimeout(animateScroll, increment);\n        }\n    };\n\n    animateScroll();\n  }\n  getTxAction = (tx,tokenConfig) => {\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();    \n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1 ) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx){\n      action = 'Deposit';\n    } else if (isRedeemTx){\n      action = 'Redeem';\n    } else if (isMigrationTx){\n      action = 'Migrate';\n    } else if (isSendTransferTx){\n      action = 'Send';\n    } else if (isReceiveTransferTx){\n      action = 'Receive';\n    } else if (isSwapTx){\n      action = 'Swap';\n    } else if (isSwapTx){\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  getAccountPortfolio = async (availableTokens=null,account=null) => {\n    const portfolio = {\n      tokensBalance:{},\n      totalBalance:this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens){\n      return portfolio;\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const idleTokenBalance = await this.getTokenBalance(tokenConfig.idle.token,account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()){\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach( token => {\n      if (portfolio.tokensBalance[token]){\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    return portfolio;\n  }\n  getCurveAvgSlippage = async (enabledTokens=[],account=null,fixDecimals=true) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]){\n              processedTxs[tx.hash] = {\n                price:null,\n                received:null,\n                slippage:null,\n                deposited:this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null){\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]){\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)){\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach( tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens=[],account=null) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n        \n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)){\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    enabledTokens.forEach( selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance= this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice){\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action){\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n            break;\n            default:\n            break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)){\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx){\n                firstDepositTx = tx;\n              }\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  getDepositTimestamp = async (enabledTokens=[],account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens,account);\n    if (firstDepositTxs){\n      return Object.keys(firstDepositTxs).reduce( (acc,token) => {\n        if (firstDepositTxs[token]){\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      },{});\n    }\n\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig,account) => {\n    let [tokenBalance,userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,account),\n      this.genericContractCall(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice){\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice,tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return amountDeposited;\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens=[],account) => {\n\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    return amountLents;\n  }\n  getEtherscanBaseTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network','firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber,firstBlockNumber);\n\n    const requiredNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n\n    let results = [];\n    let etherscanBaseTxs = null;\n    let etherscanBaseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      etherscanBaseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      etherscanBaseTxs = this.getCachedRequest(etherscanBaseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (etherscanBaseTxs && etherscanBaseTxs.data.result && Object.values(etherscanBaseTxs.data.result).length){\n\n        const lastCachedTx = Object.values(etherscanBaseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber)+1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length){\n          \n          latestTxs = await this.filterEtherscanTxs(latestTxs.data.result,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.blockNumber)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with etherscanBaseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(etherscanBaseTxs.data.result).includes(tx.hashKey);\n                if (!txFound){\n                  etherscanBaseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanBaseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        etherscanBaseTxs = null;\n      }\n\n      let txs = etherscanBaseTxs;\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(etherscanBaseEndpoint);\n      }\n\n      if (txs && txs.data && txs.data.result){\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    };\n  }\n  getCurveTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const results = await this.getEtherscanTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results,enabledTokens);\n  }\n  saveEtherscanTxs = (endpoint,txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')){\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data:{\n        result:txsToStore\n      }\n    };\n    this.saveCachedRequest(endpoint,false,cachedRequest);\n  }\n  getEtherscanTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    } = await this.getEtherscanBaseTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n\n    // Initialize prevTxs\n    let etherscanTxs = {};\n    if (etherscanBaseTxs){\n      // Filter txs for token\n      etherscanTxs = await this.processStoredTxs(results,enabledTokens);\n    } else {\n      const allAvailableTokens = Object.keys(this.props.availableTokens);\n      // Save base endpoint with all available tokens\n      etherscanTxs = await this.filterEtherscanTxs(results,allAvailableTokens);\n\n      // Store filtered txs\n      if (etherscanTxs && Object.keys(etherscanTxs).length){\n        this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanTxs);\n      }\n    }\n\n    return Object\n            .values(etherscanTxs)\n            .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n            .sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  filterCurveTxs = async (results,enabledTokens=[]) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter( tx => (enabledTokens.includes(tx.token) && ['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut'].includes(tx.action)) );\n\n    if (curveTxs.length){\n      curveTxs.sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  filterEtherscanTxs = async (results,enabledTokens=[],processTxs=true,processStoredTxs=true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools','tokenMigration','props','migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',tokenConfig.idle.token]);\n\n      results.forEach( tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length>1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length>0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find( iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 )) );\n        const isRedeemInternalTx = isRightToken && internalTxs.find( iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase() );\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase()) ) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 ));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length>1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase()) ).length>0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find( tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase()) ) );\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut){\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx){\n            action = 'Deposit';\n          } else if (isRedeemTx){\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx){\n            action = 'Migrate';\n          } else if (isSendTransferTx){\n            action = 'Send';\n          } else if (isReceiveTransferTx){\n            action = 'Receive';\n          } else if (isSwapTx){\n            action = 'Swap';\n          } else if (isSwapOutTx){\n            action = 'SwapOut';\n          } else if (isWithdrawTx){\n            action = 'Withdraw';\n          } else if (isCurveDepositTx){\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx){\n            action = 'CurveOut';\n          } else if (isCurveZapIn){\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut){\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn){\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut){\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn){\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut){\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx){\n            hashKey += '_'+tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value,curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)){\n              hashKey+='_'+action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()){\n            tokenDecimals = 18;\n          } else if (isCurveTx){\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]){\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action){\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx){\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value,tokenDecimals);\n                }\n              break;\n              default:\n                if (!curveTx){\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value,tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n              break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut){\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTokens = this.fixTokenDecimals(tx.value,curvePoolContract.decimals);\n                curveTransfersTxs.push({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n              }\n            } else {\n              etherscanTxs[hashKey] = ({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action){\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length>0){\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value,iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                break;\n                default:\n                break;\n              }\n            }   \n          }\n        }\n      });\n    });\n    \n    curveTransfersTxs.forEach( tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n  \n    if (processTxs){\n      etherscanTxs = await this.processEtherscanTransactions(etherscanTxs,enabledTokens,processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey,transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]){\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]){\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]){\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions',JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account=null,tokenKey=null,selectedToken=null) => {\n    const storedTxs = this.getStoredItem('transactions',true,{});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account){\n      if (storedTxs[account]){\n        output = storedTxs[account];\n        if (tokenKey){\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken){\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()){\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processEtherscanTransactions = async (etherscanTxs,enabledTokens=[],processStoredTxs=true) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object'){\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n    Object.keys(curveAvailableTokens).forEach( token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats','tokens',curveTokenConfig.baseToken]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object'){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = {...storedTxs[this.props.account][tokenKey]};\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        await this.asyncForEach(filteredTxs,async (tx,index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n          \n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()){\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig,tx.blockNumber,tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash){\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action){\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n            break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount){\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n            break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n            break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n            break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n            break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount){\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length-1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x','').toLowerCase()}` ) );\n\n                  this.customLog('filteredLogs',filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length){\n                    filteredLogs.forEach( log => {\n                      let tokenAmount = parseInt(log.data,16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount ('+tx.hash+')',baseTokensConfig.token,tokenAmount.toFixed(5),storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n            break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens){\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n                  const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (log.address.toLowerCase()===idleTokenAddress ) );\n                  if (filteredLogs && filteredLogs.length){\n                    idleTokens = parseInt(filteredLogs[0].data,16);\n                    idleTokens = this.fixTokenDecimals(idleTokens,idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n            break;\n            default:\n            break;\n          }\n            \n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs){\n        etherscanTxs = await this.processStoredTxs(etherscanTxs,[selectedToken],this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs,enabledTokens=[],txsToProcess=null) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions',true,{})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]){\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({},etherscanTxs);\n\n    const networkId = this.getGlobalConfig(['network','requiredNetwork']);\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account,tokenKey,selectedToken);\n      \n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess),async (txKey,i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))){\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken:'Deposit',\n          redeemIdleToken:'Redeem',\n          migrateFromToIdle:'Migrate',\n          mintIdleTokensProxy:'Deposit',\n          migrateFromAaveToIdle:'Migrate',\n          migrateFromIearnToIdle:'Migrate',\n          executeMetaTransaction:'Migrate',\n          migrateFromFulcrumToIdle:'Migrate',\n          migrateFromCompoundToIdle:'Migrate',\n        };\n        const pendingStatus = ['pending','started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice){\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length){\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status:'Pending',\n            token:selectedToken,\n            action:allowedMethods[tx.method],\n            timeStamp:parseInt(tx.created/1000),\n            hash:txHash ? tx.transactionHash : null,\n            tokenSymbol:isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0],decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed){\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx){\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise( async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash,(err,txReceipt)=>{\n              if (err){\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())){\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig,realTx.blockNumber,realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created/1000);\n\n        let txValue = null;\n        switch (tx.method){\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()){\n              // Remove wrong contract tx\n              if (isStoredTx){\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0],tokenConfig.decimals).toString() : 0;\n            if (!txValue){\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n          break;\n          case 'redeemIdleToken':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice){\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0],18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n          break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt){\n              executeMetaTransactionReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract','deposit','proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo){\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x','').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length){\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data,16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data,16) : null;\n\n            if (!metaTxValue){\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue,tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n          break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract){\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt){\n              migrationTxReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x','');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x','');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length>=3 && tx.topics[tx.topics.length-2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length){\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ],migrationInternalTransfer.data,migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token){\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue,tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n          break;\n          default:\n          break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx){\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint,alias=false,data) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    const timestamp = parseInt(Date.now()/1000);\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCachedRequest = (endpoint,alias=false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]){\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  makeRequest = async(endpoint,error_callback=false,config=null) => {\n    const data = await axios\n                  .get(endpoint,config)\n                  .catch(err => {\n                    if (typeof error_callback === 'function'){\n                      error_callback(err);\n                    }\n                  });\n    return data;\n  }\n  makeCachedRequest = async (endpoint,TTL=60,return_data=false,alias=false) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp-cachedRequests[key].timestamp<TTL){\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makeRequest(endpoint);\n\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)){\n      const errorCode = parseInt(error.code);\n      switch (errorCode){\n        case 4001:\n          output = 'denied';\n        break;\n        default:\n          output = `error_${errorCode}`;\n        break;\n      }\n    } else if (error.message){\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path,array) => {\n    path = Object.assign([],path);\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path,array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path,configs=false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return configs[prop] ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path,configs[prop]);\n      }\n    }\n    return null;\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsEvent = async (eventData,callback=null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && ( debugEnabled || originOk)){\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet){\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1){\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n        // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise( async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function'){\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function'){\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\",name,address,error);\n    }\n    return null;\n  }\n  getWalletProvider = () => {\n    return this.getStoredItem('walletProvider',false,null);\n  }\n  simpleIDPassUserInfo = (userInfo,simpleID) => {\n    if (!userInfo.address && this.props.account){\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider){\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email){\n      delete userInfo.email;\n    }\n    if (!userInfo.address){\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID){\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (tx_address) => {\n    return tx_address ? 'https://etherscan.io/tx/'+tx_address : null;\n  }\n  getEtherscanAddressUrl = (address) => {\n    return address ? 'https://etherscan.io/address/'+address : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly=false) => {\n\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const endpoint = this.getGlobalConfig(['network','providers','snapshot','endpoints','proposals']);\n    let proposals = await this.makeCachedRequest(endpoint,1440,true);\n\n    if (proposals){\n      proposals = Object.values(proposals);\n\n      const currTime = parseInt(Date.now()/1000);\n      if (activeOnly){\n        proposals =  proposals.filter( p => (p.msg.payload.start<=currTime && p.msg.payload.end>currTime) );\n      }\n\n      // console.log(proposals);\n\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        // Add proposal if ended\n        if (p.msg.payload.end<=currTime){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.msg.payload.snapshot;\n\n          let checkedStrategies = false;\n          await this.asyncForEach( p.msg.payload.metadata.strategies, async (s) => {\n            if (checkedStrategies){\n              return;\n            }\n            if (s.name==='erc20-balance-of'){\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract){\n                const tokenBalance = await this.getTokenBalance(tokenName,p.address,true,blockNumber);\n                // console.log(tokenName,blockNumber,p.address,this.BNify(tokenBalance).toFixed());\n                if (tokenBalance && this.BNify(tokenBalance).gt(0)){\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              checkedStrategies = true;\n            }\n          });\n\n          // Add proposal is passed token balances check\n          if (checkedStrategies){\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey,validProposals);\n    }\n\n  }\n  getTokenApiData = async (address,isRisk=null,startTimestamp=null,endTimestamp=null,forceStartTimestamp=false,frequency=null,order=null,limit=null) => {\n    if (globalConfigs.network.requiredNetwork!==1 || !globalConfigs.stats.enabled){\n      return [];\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData){\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter( c => ( (c.startTimestamp===null || (startTimestamp && c.startTimestamp<=startTimestamp)) && (c.endTimestamp===null || (endTimestamp && c.endTimestamp>=endTimestamp)) ) )\n\n      if (filteredCachedData && filteredCachedData.length>0){\n        const filteredData = filteredCachedData.pop().data;\n        if (filteredData){\n          return filteredData.filter( d => ((!startTimestamp || d.timestamp>=startTimestamp) && (!endTimestamp || d.timestamp<=endTimestamp)) );\n        }\n        return null;\n      }\n    // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    let endpoint = `${apiInfo.endpoint}${address}`;\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null){\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)){\n        if (forceStartTimestamp){\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp-(60*60*24*2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)){\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null){\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)){\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null){\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)){\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length){\n        endpoint += '?'+params.join('&');\n      }\n    }\n\n    let output = await this.makeRequest(endpoint);\n    if (!output){\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null){\n      filteredData = data.filter( d => ( d.isRisk === isRisk ) );\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data:filteredData,\n    });\n\n    this.setCachedData(cachedDataKey,cachedData);\n\n    return data;\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName ? contractName : this.props.selectedToken;\n    return await this.genericContractCall(contractName,'decimals');\n  }\n  getAvgApr = (aprs,allocations,totalAllocation) => {\n    if (aprs && allocations && totalAllocation){\n      let avgApr = Object.keys(aprs).reduce((aprWeighted,protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      },0);\n\n      if (avgApr){\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency,quantity=1) => {\n    const frequency_seconds = {\n      hour:3600,\n      day:86400,\n      week:604800\n    };\n    return frequency_seconds[frequency]*quantity;\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance,tokenDecimals,round=true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance,tokenDecimals,exchangeRate) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()){\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName=null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCall(contractName, 'paused', [], {}).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key,parse_json=true,return_default=null) => {\n    let output = return_default;\n    if (window.localStorage){\n      const item = localStorage.getItem(key);\n      if (item){\n        output = item;\n        if (parse_json){\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output){\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys=[]) => {\n    if (window.localStorage){\n\n      if (!excludeKeys || !excludeKeys.length){\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i=0;i<window.localStorage.length;i++){\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)){\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage){\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key,value,stringify=false) => {\n    if (window.localStorage){\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key,value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n\n    if (!globalConfigs.contract.methods.rebalance.enabled || !tokenConfig){\n      return false;\n    }\n\n    const rebalancer = await this.genericContractCall(tokenConfig.idle.token, 'rebalancer');\n\n    if (!rebalancer){\n      return false;\n    }\n\n    const idleRebalancerInstance = await this.createContract('idleRebalancerInstance',rebalancer,globalConfigs.contract.methods.rebalance.abi);\n\n\n    if (!idleRebalancerInstance || !idleRebalancerInstance.contract){\n      return false;\n    }\n\n    // Take next protocols allocations\n    const allocationsPromises = [];\n    const availableTokensPromises = [];\n\n    for (let protocolIndex=0;protocolIndex<tokenConfig.protocols.length;protocolIndex++){\n      const allocationPromise = new Promise( async (resolve, reject) => {\n        try{\n          const allocation = await idleRebalancerInstance.contract.methods.lastAmounts(protocolIndex).call();\n          resolve({\n            allocation,\n            protocolIndex\n          });\n        } catch (error){\n          resolve(null);\n        }\n      });\n      allocationsPromises.push(allocationPromise);\n\n      const availableTokenPromise = new Promise( async (resolve, reject) => {\n        try {\n          const protocolAddr = await this.genericContractCall(tokenConfig.idle.token, 'allAvailableTokens', [protocolIndex]);\n          resolve({\n            protocolAddr,\n            protocolIndex\n          });\n        } catch (error){\n          resolve(null);\n        }\n      });\n      availableTokensPromises.push(availableTokenPromise);\n    }\n\n    let nextAllocations = null;\n    let allAvailableTokens = null;\n\n    try{\n      nextAllocations = await Promise.all(allocationsPromises);\n      allAvailableTokens = await Promise.all(availableTokensPromises);\n    } catch (error){\n      \n    }\n\n    nextAllocations = nextAllocations && nextAllocations.length ? nextAllocations.filter(v => (v !== null)) : null;\n    allAvailableTokens = allAvailableTokens && allAvailableTokens.length ? allAvailableTokens.filter(v => (v !== null)) : null;\n\n    if ((!allAvailableTokens || !allAvailableTokens.length) || (!nextAllocations || !nextAllocations.length)){\n      return false;\n    }\n\n    // Merge nextAllocations and allAvailableTokens\n    let newTotalAllocation = this.BNify(0);\n    const newProtocolsAllocations = allAvailableTokens.reduce((accumulator,availableTokenInfo) => {\n      if (availableTokenInfo.protocolAddr){\n        const nextAllocation = nextAllocations.find(v => { return v.protocolIndex === availableTokenInfo.protocolIndex; });\n        if (nextAllocation){\n          const allocation = this.BNify(nextAllocation.allocation);\n          accumulator[availableTokenInfo.protocolAddr.toLowerCase()] = allocation;\n          newTotalAllocation = newTotalAllocation.plus(allocation);\n        }\n      }\n      return accumulator;\n    },{});\n\n    // Check if newAllocations differs from currentAllocations\n    let shouldRebalance = false;\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig);\n    const protocolsAllocationsPerc = tokenAllocation ? tokenAllocation.protocolsAllocationsPerc : null;\n\n    if (typeof protocolsAllocationsPerc === 'object'){\n      Object.keys(protocolsAllocationsPerc).forEach((protocolAddr) => {\n\n        // Get current protocol allocation percentage\n        const protocolAllocation = protocolsAllocationsPerc[protocolAddr];\n        const protocolAllocationPerc = parseFloat(protocolAllocation).toFixed(3);\n        \n        // Calculate new protocol allocation percentage\n        const newProtocolAllocation = newProtocolsAllocations[protocolAddr.toLowerCase()] ? newProtocolsAllocations[protocolAddr.toLowerCase()] : this.BNify(0);\n        const newProtocolAllocationPerc = newProtocolAllocation ? parseFloat(newProtocolAllocation.div(newTotalAllocation)).toFixed(3) : this.BNify(0);\n\n        // this.customLog(protocolAddr,protocolAllocation.toString(),newProtocolAllocation.toString(),newTotalAllocation.toString(),protocolAllocationPerc,newProtocolAllocationPerc);\n\n        if (protocolAllocationPerc !== newProtocolAllocationPerc){\n          shouldRebalance = true;\n        }\n      });\n    }\n\n    return shouldRebalance;\n  }\n  checkMigration = async (tokenConfig,account) => {\n\n    if (!tokenConfig || !account){\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled){\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract){\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName,account);\n\n        if (oldContractBalance){\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function(hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function(confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\",receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null,error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\",\"address\",\"uint256\",\"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network','providers','biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`,null,{\n      headers:{\n        'x-api-key':biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data){\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName,methodName,methodParams,nonce,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]){\n      callback(null,'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try{\n      const userAddress = this.props.account;\n      const chainId = this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName,functionSignature,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    try{\n\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, nonce, expiry, callback, callback_receipt, callback_permit=null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit',baseContractName]);\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion){\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        const value = this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n      break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n      break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    this.props.web3.currentProvider.send({\n      from: holder,\n      jsonrpc: '2.0',\n      params: [holder, data],\n      method: 'eth_signTypedData_v4',\n      id: Date.now().toString().substring(9),\n    }, (error, response) => {\n      if (error || (response && response.error)) {\n        return callback(null,error);\n      } else if (response && response.result) {\n        if (typeof callback_permit === 'function'){\n          callback_permit();\n        }\n        const signedParameters = this.getSignatureParameters_v4(response.result);\n        const { r, s, v } = signedParameters;\n        const permitParams = [expiry, v, r, s];\n\n        const methodAbi = spenderContract._jsonInterface.find( f => f.name === methodName );\n        const useNonce = methodAbi ? methodAbi.inputs.find( i => i.name === 'nonce' ) : true;\n        if (!isNaN(parseInt(nonce)) && useNonce){\n          permitParams.unshift(nonce);\n        }\n        const params = methodParams.concat(permitParams);\n        this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n      }\n    });\n  }\n\n  sendSignedTx = async (contractName,contractAddress,functionSignature,callback,callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null,error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n            \n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName,contractAddr,walletAddr) => {\n    const value = this.props.web3.utils.toWei('0','ether');\n    const allowance = await this.getAllowance(contractName,contractAddr,walletAddr);\n    return allowance && this.BNify(allowance).gt(this.BNify(value.toString()));\n  }\n  getAllowance = async (contractName,contractAddr,walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr){\n      return false;\n    }\n    this.customLog('getAllowance',contractName,contractAddr,walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapper = (contractName,methodName,params,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  disableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  loadAssetField = async (field,token,tokenConfig,account,addGovTokens=true,addCurveApy=false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies',this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined'){\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken){\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig){\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)){\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field){\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([],account),\n          this.getCurveTokenBalance(account,true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance){\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage){\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n      break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1,redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)){\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n      break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n      break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n      break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n      break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy',token,tokenConfig,account),\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve){\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n      break;\n      case 'earningsPerc':\n        let [amountLent1,redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)){\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n      break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp',token,tokenConfig,account);\n        if (depositTimestamp){\n          const currTimestamp = parseInt(Date.now()/1000);\n          output = (currTimestamp-depositTimestamp)/86400;\n        }\n      break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig,addGovTokens);\n        }\n      break;\n      case 'userDistributionSpeed':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account,govTokenAvailableTokens);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n          if (output){\n            output = this.fixDistributionSpeed(output,tokenConfig.distributionFrequency);\n          }\n        }\n      break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance','props','tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens',tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output){\n\n          output = this.fixTokenDecimals(output,govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency){\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n            break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n            break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n            break;\n            case 'year':\n              output = output.times(blocksPerYear);\n            break;\n            default:\n            break;\n          }\n        }\n      break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token){\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n        }\n      break;\n      case 'apr':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n          break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n            if (tokenAprs && tokenAprs.avgApr !== null){\n              output = tokenAprs.avgApr;\n            }\n          break;\n        }\n      break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n\n        // console.log('apr',token,tokenApys.avgApr ? tokenApys.avgApr.toString() : null,tokenApys.avgApy ? tokenApys.avgApy.toString() : null);\n\n        if (tokenApys && tokenApys.avgApy !== null){\n          output = tokenApys.avgApy;\n\n          if (addCurveApy){\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY){\n              output = output.plus(curveAPY);\n            }\n          }\n        }\n      break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token],account),\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]){\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig,firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n      break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account),\n          this.loadAssetField('earningsPerc',token,tokenConfig,account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc){\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n      break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token],account) : false;\n        if (depositTimestamps && depositTimestamps[token]){\n          output = depositTimestamps[token];\n        }\n      break;\n      case 'amountLent':\n        // output = account ? await this.getAmountDeposited(tokenConfig,account) : false;\n        const amountLents = account ? await this.getAmountLent([token],account) : false;\n        if (amountLents && amountLents[token]){\n          output = amountLents[token];\n        }\n      break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig,govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()){\n            output = '-';\n          }\n        } else {\n          output = await this.genericContractCall(tokenConfig.idle.token, 'tokenPrice');\n        }\n      break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig,account);\n      break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getTokenBalance(token,account);\n          if (!output || output.isNaN()){\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token,account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()){\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n      break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token,account) : false;\n        if (idleTokenBalance){\n          output = idleTokenBalance;\n        }\n      break;\n      case 'redeemableBalanceCounter':\n        let [tokenAPY1,amountLent2,redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy',token,tokenConfig,account,false),\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false),\n        ]);\n\n        let redeemableBalanceEnd = null;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2){\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        // this.customLog('redeemableBalanceCounter',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd));\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n      break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig,account,govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance',token,tokenConfig,account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account,govTokenAvailableTokens,token) : null,\n          ]);\n\n          if (idleTokenBalance2 && idleTokenPrice1){\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n\n            let redeemableBalance = tokenBalance;\n\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()){\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n\n            output = redeemableBalance;\n\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n        }\n      break;\n      case 'earningsCurve':\n        let [amountLentCurve2,redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (!amountLentCurve2){\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1){\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n      break;\n      case 'earnings':\n        let [amountLent,redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (!amountLent){\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2){\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))){\n          output = this.BNify(0);\n        }\n      break;\n      default:\n      break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken,blockNumber='latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.genericContractCall(idleToken,'totalSupply',[],{},blockNumber);\n    if (idleTokenSupply){\n      idleTokenSupply = this.BNify(idleTokenSupply);\n      return this.setCachedDataWithLocalStorage(cachedDataKey,idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPrice = async (tokenConfig,blockNumber='latest',timestamp=false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    // if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    // }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCall(tokenConfig.idle.token,'tokenPrice',[],{},blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp){\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp)-(60*60);\n      const endTimestamp = parseInt(timestamp)+(60*60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,endTimestamp,true);\n\n      let beforePrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      let afterPrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      tokenData.forEach( d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp)-parseInt(timestamp));\n        if (parseInt(d.timestamp)<parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff<beforePrice.timeDiff)){\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp)>parseInt(timestamp) && !afterPrice.timeDiff){\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data){\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()){\n      tokenPrice = this.fixTokenDecimals(tokenPrice,decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)){\n      tokenPrice = this.BNify(1);\n    }\n\n    // if (blockNumber !== 'latest'){\n      this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice);\n    // }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = () => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function'){\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData();\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 5 minutes\n  */\n  setCachedData = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL,true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key,defaultValue=null) => {\n    return this.getCachedData(key,defaultValue,true);\n  }\n  getCachedData = (key,defaultValue=null,useLocalStorage=false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[key]){\n      cachedData = this.props.cachedData[key];\n    // Get cache from local storage\n    } else if (useLocalStorage) {\n      cachedData = this.getStoredItem('cachedData');\n      if (cachedData && cachedData[key]){\n        cachedData = cachedData[key];\n      } else {\n        cachedData = null;\n      }\n    }\n\n    if (cachedData && cachedData.data && (!cachedData.expirationDate || cachedData.expirationDate>=parseInt(Date.now()/1000))){\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr,tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,walletAddr,false),\n      this.genericContractCall(tokenConfig.idle.token,'totalSupply')\n    ]);\n\n    let userShare = this.BNify(0);\n    if (idleTokensBalance && idleTokensTotalSupply){\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url,'_blank','noopener');\n  }\n  getActiveCoverages = async (account=null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account){\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now()/1000);\n    const coverProtocolConfig = this.getGlobalConfig(['tools','coverProtocol']);\n    if (coverProtocolConfig.enabled){\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name,account);\n        if (balance && balance.gt(0)){\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const fileClaimUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp<=currTimestamp ? 'Expired' : 'Active';\n          const expirationDate = moment(coverage.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            collateral,\n            protocolName,\n            fileClaimUrl,\n            protocolImage,\n            expirationDate\n          });\n        }\n      });\n    }\n\n    return activeCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint,1800,true);\n      if (transactions && typeof transactions.result === 'object'){\n        return transactions.result.filter( tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase() );\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account=null,filter_by_status=null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools','batchDeposit']);\n    if (!batchDepositConfig.enabled){\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name,migrationContract.address,migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name,'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name,'batchTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null){\n          batchTotals = this.fixTokenDecimals(batchTotal,tokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchRedeem = this.fixTokenDecimals(batchRedeem,18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit,tokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)){\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status){\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,batchedDeposits);\n  }\n  getETHBalance = async (walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName,walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName,walletAddr,blockNumber)\n    ]);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ',contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function'){\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url,props,callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props){\n      Object.keys(props).forEach((attr,i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function'){\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function() {\n          if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)){\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address !== null ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getContractBalance = async (contractName,address,blockNumber='latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    return await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n  }\n  getProtocolBalance = async (contractName,address) => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    return await this.genericContractCall(contractName, 'balanceOf', [address]);\n  }\n  getAprs = async (contractName) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    return await this.genericContractCall(contractName, 'getAPRs');\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxDecodedLogs = async (tx,logAddr,decodeLogs,storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt){\n      txReceipt = await (new Promise( async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n          if (err){\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt){\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length){\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs,internalTransfers[0].data,internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getContractPastEvents = async (contractName,methodName,params = {}) => {\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.getPastEvents(methodName, params);\n  }\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest') => {\n\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try{\n      this.customLog(`genericContractCall - ${contractName} - ${methodName}`);\n      const value = await contract.methods[methodName](...params).call(callParams,blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      this.customLog(`genericContractCall - ${contractName} - ${methodName} : ${value}`);\n      return value;\n    } catch (error) {\n      this.customLog(\"genericContractCall error\", error);\n    }\n  }\n  asyncForEach = async (array, callback, async=true) => {\n    if (async){\n      await Promise.all(array.map( (c,index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        await callback(array[index], index, array);\n      }\n    }\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(12))).pow(12).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token,tokenConfig.idle.address);\n    if (unlentBalance){\n      unlentBalance = this.fixTokenDecimals(unlentBalance,tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig,addGovTokens=true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN() ) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent){\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPool);\n      }\n    }\n\n    return null;\n  }\n  /*\n  Get idleToken allocation between protocols\n  */\n  getTokenAllocation = async (tokenConfig,protocolsAprs=false,addGovTokens=true) => {\n\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    let totalAllocation = this.BNify(0);\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance:null,\n      totalAllocation:null,\n      protocolsBalances:{},\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null,\n      totalAllocationConverted:null,\n      totalAllocationWithUnlent:null,\n      totalAllocationWithUnlentConverted:null,\n    };\n\n    const exchangeRates = {};\n    const protocolsBalances = {};\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const contractName = protocolInfo.token;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n\n      let [\n        tokenDecimals,\n        protocolBalance,\n        exchangeRate\n      ] = await Promise.all([\n        this.getTokenDecimals(contractName),\n        this.getProtocolBalance(contractName,tokenConfig.idle.address),\n        ( protocolInfo.functions.exchangeRate ? this.genericContractCall(contractName,protocolInfo.functions.exchangeRate.name,protocolInfo.functions.exchangeRate.params) : null )\n      ]);\n\n      if (!protocolBalance){\n        return;\n      }\n\n      if (exchangeRate && protocolInfo.decimals){\n        exchangeRates[protocolAddr] = exchangeRate;\n        exchangeRate = this.fixTokenDecimals(exchangeRate,protocolInfo.decimals);\n      }\n\n      let protocolAllocation = this.fixTokenDecimals(protocolBalance,tokenDecimals,exchangeRate);\n\n      if (protocolAllocation.lt(this.BNify(0.00000001))){\n        protocolBalance = this.BNify(0);\n        protocolAllocation = this.BNify(0);\n      }\n\n      protocolsBalances[protocolAddr] = protocolBalance;\n      protocolsAllocations[protocolAddr] = protocolAllocation;\n      totalAllocation = totalAllocation.plus(protocolAllocation);\n\n      // console.log('getTokenAllocation',contractName,protocolAddr,protocolAllocation.toFixed(5),exchangeRate ? exchangeRate.toFixed(5) : null,totalAllocation.toFixed(5));\n    });\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = this.BNify(totalAllocation);\n\n    // Add unlent balance to the pool\n    let unlentBalance = await this.getUnlentBalance(tokenConfig);\n    if (unlentBalance){\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    // console.log('totalAllocationWithUnlent 1',addGovTokens,tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n\n    Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n      const protocolAllocation = protocolsAllocations[protocolAddr];\n      const protocolAllocationPerc = protocolAllocation.div(totalAllocation);\n      protocolsAllocationsPerc[protocolAddr] = protocolAllocationPerc;\n    });\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    if (addGovTokens){\n      const govTokensBalances = await this.getGovTokensBalances(tokenConfig.idle.address);\n\n      // Sum gov tokens balances\n      if (govTokensBalances.total){\n        const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,false);\n        if (tokenUsdConversionRate){\n          govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n        }\n\n        tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n\n        // console.log('totalAllocationWithUnlent 2',govTokensBalances.total.toFixed(5),tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n      }\n    }\n\n    tokenAllocation.totalAllocationConverted = await this.convertTokenBalance(tokenAllocation.totalAllocation,tokenConfig.token,tokenConfig);\n    tokenAllocation.totalAllocationWithUnlentConverted = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,tokenConfig.token,tokenConfig);\n\n    if (protocolsAprs){\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    return this.setCachedData(cachedDataKey,tokenAllocation);\n  }\n  getUniswapConversionRate_path = async (path) => {\n    const one = this.normalizeTokenDecimals(18);\n    const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n    return unires;\n  }\n  getUniswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2';\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      // console.log('getUniswapConversionRate',tokenConfigFrom,tokenConfigDest,path,unires);\n\n      if (unires){\n        const price = this.BNify(unires[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account,enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach( tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]){\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action){\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n        break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])){\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)){\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n        break;\n        default:\n        break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)){\n        Object.keys(idleTokensBalances).forEach( token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)){\n            if (tokenBalance.gt(remainingCurveTokens)){\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts,max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve','rates']);\n    if (curveRatesInfo){\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data){\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path,results.data);\n        if (curveApy){\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies){\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve','availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce( (availableTokens,token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled){\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    },{});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber){\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice,prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price'),\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price',[],{},blockNumber-blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice){\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      return await this.genericContractCall(curvePoolContract.name,'totalSupply');\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account=null,fixDecimals=true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name,account,fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber='latest',fixDecimals=true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCall(migrationContract.name,'get_virtual_price',[],{},blockNumber);\n    if (curveTokenPrice){\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals){\n        const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice,curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice,curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice){\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve','depositContract']);\n    if (depositContractInfo){\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi){\n        curveDepositContract = await this.props.initContract(depositContractInfo.name,depositContractInfo.address,depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve','zapContract']);\n    if (zapContractInfo){\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi){\n        curveZapContract = await this.props.initContract(zapContractInfo.name,zapContractInfo.address,zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve','poolContract']);\n    if (poolContractInfo){\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi){\n        curvePoolContract = await this.props.initContract(poolContractInfo.name,poolContractInfo.address,poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve','migrationContract']);\n    if (migrationContractInfo){\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi){\n        migrationContract = await this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account=null,curveTokenBalance=null,max_slippage=null) => {\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage){\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]);\n        if (curveIdleTokens){\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage){\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account=null,curveTokenBalance=null,fixDecimals=false,useCoinIndex=false) => {\n\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals){\n          tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token,amount,deposit=false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount)>0){\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount,18);\n        if (!deposit){\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount,curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts,deposit=true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract){\n      return await this.genericContractCall(migrationContract.name,'calc_token_amount',[amounts,deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token,amount,deposit=true,uneven_amounts=null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract){\n\n      const n_coins = this.getGlobalConfig(['curve','params','n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)){\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins){\n        amounts = await this.getCurveAmounts(token,amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name,'get_virtual_price'),\n        this.genericContractCall(depositContract.name,'calc_token_amount',[amounts,deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount){\n        amount = this.fixTokenDecimals(amount,18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice,18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount,18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit){\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit){\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getCompAPR = async (token,tokenConfig,cTokenIdleSupply=null,compConversionRate=null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens','COMP']);\n    if (!COMPTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig,cTokenIdleSupply);\n\n    if (compDistribution){\n\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get COMP conversion rate\n      if (!compConversionRate){\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig,COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()){\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCall('Comptroller','compSpeeds',[cTokenAddress]);\n    if (compSpeed){\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig,cTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n    if (cTokenInfo){\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)){\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.genericContractCall(cTokenInfo.token,'totalSupply'),\n        ]);\n\n        if (compSpeed && cTokenTotalSupply){\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply){\n            cTokenIdleSupply = await this.genericContractCall(cTokenInfo.token,'balanceOf',[tokenConfig.idle.address]);\n          }\n\n          if (cTokenIdleSupply){\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network','blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize){\n              compDistribution = compDistribution.div(1e18).times(this.BNify(blocksPerYear));\n            }\n\n            if (!this.BNify(compDistribution).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (cTokenInfo){\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getCompDistribution(tokenConfig,null,false),\n        ]);\n\n        if (compDistribution && userPoolShare){\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens=null) => {\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr,tokenAllocation] = await Promise.all([\n        this.getCompAPR(token,tokenConfig),\n        this.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (compApr && tokenAllocation){\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function() {\n      return this.reduce(function(pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function() {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function() {\n      return this.sum()/this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,7200,'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length-1];\n\n        rates.forEach( r => {\n          if (!protocols){\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach( p1 => {\n              const foundProtocol = tokenConfig.protocols.find( p2 => ( p2.address.toLowerCase() === p1.protocolAddr.toLowerCase() ) );\n              if (foundProtocol){\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach( p => {\n              header.push('APR '+p.name);\n              header.push('SCORE '+p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp*1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach( pInfo => {\n            const pData = r.protocolsData.find( p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()) );\n            let pRate = '';\n            let pScore = '';\n            if (pData){\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined'){\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()){\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n                if (!isNaN(parseFloat(pRate))){\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))){\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach( p => {\n          const avgRate = aprAvg[p].sum()/aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach( p => {\n          const avgScore = scoreAvg[p].sum()/scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken=null,availableTokens=null,convertToken=null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address,convertToken,enabledTokens);\n      if (compTokenBalance && compTokenBalance.total){\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken){\n      this.idleGovToken = new IdleGovToken(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach( govToken => {\n      const govTokenConfig = govTokens[govToken];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      if (govTokenConfig.protocol === 'idle'){\n        if (!govTokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n          output[govToken] = govTokenConfig;\n        }\n      } else {\n        const foundProtocol = tokenConfig.protocols.find( p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()) )\n        if (foundProtocol){\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed,frequency) => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()){\n      switch (frequency){\n        case 'day':\n          const blocksPerDay = blocksPerYear.div(365.242199);\n          speed = speed.times(blocksPerDay);\n        break;\n        case 'week':\n          const blocksPerWeek = blocksPerYear.div(52.1429);\n          speed = speed.times(blocksPerWeek);\n        break;\n        case 'month':\n          const blocksPerMonth = blocksPerYear.div(12);\n          speed = speed.times(blocksPerMonth);\n        break;\n        case 'year':\n          speed = speed.times(blocksPerYear);\n        break;\n        default:\n        break;\n      }\n      return speed;\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account,tokenConfig=null,enabledTokens=null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken){\n        case 'COMP':\n          output = await this.getCompUserDistribution(account,availableTokens);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account,availableTokens);\n        break;\n        default:\n        break;\n      }\n\n      if (output){\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig,enabledTokens=null) => {\n    const govTokensDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      let govSpeed = null;\n      switch (govToken){\n        case 'COMP':\n          const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n          if (cTokenInfo){\n            govSpeed = await this.getCompDistribution(tokenConfig,null,false);\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n        break;\n        default:\n        break;\n      }\n\n      if (govSpeed){\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          govSpeed = this.fixDistributionSpeed(govSpeed,govTokenConfig.distributionFrequency);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token,tokenConfig,enabledTokens=null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false){\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken){\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getCompAPR(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation){\n                const compoundInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n                if (compoundInfo){\n                  if (tokenAllocation.protocolsAllocationsPerc[compoundInfo.address.toLowerCase()]){\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[compoundInfo.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode){\n            case 'apr':\n              output = await idleGovToken.getAPR(token,tokenConfig);\n            break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output){\n                output = this.fixTokenDecimals(output,18);\n                output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency);\n              }\n            break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n            break;\n            default:\n            break;\n          }\n        break;\n        default:\n        break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)){\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address=null,convertToken='DAI',enabledTokens=null) => {\n    if (!address){\n      address = this.props.tokenConfig.idle.address;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)){\n        return;\n      }\n      \n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token,address);\n\n      if (govTokenBalance){\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken){\n          const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n          } catch (error) {\n            \n          }\n        }\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = this.fixTokenDecimals(govTokenBalance,govTokens[token].decimals,tokenConversionRate);\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total){\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return govTokensBalances;\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address){\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find( tokenConfig => (tokenConfig.enabled && tokenConfig.address.toLowerCase() === address.toLowerCase()) );\n  }\n  getGovTokensUserTotalBalance = async (account=null,availableTokens=null,convertToken=null,checkShowBalance=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${JSON.stringify(availableTokens)}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,null,checkShowBalance);\n    if (govTokensUserBalances){\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce( (acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensUserBalances = async (account=null,availableTokens=null,convertToken=null,govTokenConfigForced=null,checkShowBalance=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.genericContractCall(idleTokenConfig.token,'getGovTokensAmounts',[account]);\n\n      if (govTokensAmounts){\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.genericContractCall(idleTokenConfig.token,'govTokens',[govTokenIndex]);\n\n          if (govTokenAddress){\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()){\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken){\n                const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n                if (fromTokenConfig){\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n                  } catch (error) {\n                    \n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount,govTokenConfig.decimals,tokenConversionRate);\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]){\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCall(tokenConfig.idle.token, 'fee');\n    if (fee){\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig=null,account=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig){\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent',tokenConfig.token,tokenConfig,account),\n      this.loadAssetField('redeemableBalance',tokenConfig.token,tokenConfig,account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance){\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig,account=null,availableTokens=null,convertToken=null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce( (totalTVL,tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()){\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    },this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens:{},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(tokenConfig)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply,18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL,token,tokenConfig,isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (govTokenBalance && govTokenConversionRate){\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance,govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()){\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply){\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply,18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL,token,oldTokenConfig,isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()){\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getAggregatedStats = async (addGovTokens=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())){\n      return {\n        avgAPR:this.BNify(cachedData.avgAPR),\n        avgAPY:this.BNify(cachedData.avgAPY),\n        totalAUM:this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig,tokenAllocation,addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()){\n          const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig,isRisk);\n          totalAUM = totalAUM.plus(tokenAUM);\n          // console.log(tokenConfig.idle.token+'V4',totalAllocation.toFixed(5));\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()){\n            avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (tokenBalance && tokenConversionRate){\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance,govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()){\n                // console.log(tokenConfig.idle.token+'V4',govToken,tokenBalanceConverted.toFixed(5));\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig,false,false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()){\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation,token,oldTokenConfig,isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy=null) => {\n\n    if (!this.props.availableStrategies || !this.props.account){\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy){\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig,this.props.account);\n        \n        if (migrationEnabled){\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol=null) => {\n    if (!this.props.account){\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools','tokenMigration','props','availableTokens']);\n    if (protocolsTokens){\n      await this.asyncForEach(Object.keys(protocolsTokens),async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase() ){\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi){\n          tokenContract = await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n        }\n        if (tokenContract){\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token,this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)){\n            tokenBalances[token] = {\n              tokenConfig,\n              balance:tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance,token,tokenConfig,isRisk=false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,isRisk);\n      if (tokenUsdConversionRate){\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n\n  getAvgAPYStats = async (address,isRisk,startTimestamp=null,endTimestamp=null) => {\n\n    const apiResults = await this.getTokenApiData(address,isRisk,startTimestamp,endTimestamp,true,7200);\n\n    if (apiResults && apiResults.length){\n      const apr = apiResults.reduce( (sum,r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate,18);\n        return sum.plus(idleRate);\n      },this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return null;\n  }\n\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig,isRisk,conversionRateField=null,count=0) => {\n\n    if (!conversionRateField){\n      conversionRateField = this.getGlobalConfig(['stats','tokens',tokenConfig.token,'conversionRateField']);\n      if (!conversionRateField){\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      // console.log('CACHED -',count,cachedDataKey,this.BNify(cachedData).toFixed());\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,null,'desc',1);\n\n    // console.log('TOKEN DATA - ',tokenConfig.address,isRisk,tokenData);\n\n    if (tokenData && tokenData.length){\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()){\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField],18);\n        if (!this.BNify(conversionRate).isNaN()){\n          // console.log('NOT CACHED -',count,cachedDataKey,this.BNify(conversionRate).toFixed());\n          return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n        }\n      }\n    } else {\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n      const conversionRate = await this.getUniswapConversionRate(DAITokenConfig,tokenConfig);\n      if (!this.BNify(conversionRate).isNaN()){\n        // console.log('NOT CACHED -',count,cachedDataKey,this.BNify(conversionRate).toFixed());\n        return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n      }\n    }\n\n    if (count<3){\n      return await this.getTokenConversionRate(tokenConfig,isRisk,conversionRateField,count+1); \n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint,apiInfo.TTL,true),\n      this.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenData && tokenAllocation){\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach( protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001) && tokenData.length>0){\n          const protocolInfo = tokenData[0].protocolsData.find( p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase()) );\n          if (protocolInfo){\n            const protocolScore = this.BNify(protocolInfo.defiScore);\n            if (!protocolScore.isNaN()){\n              tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n              // this.customLog(protocolAddr,tokenAllocation.protocolsAllocationsPerc[protocolAddr].toFixed(6),protocolScore.toFixed(6),tokenScore.toFixed(6));\n            }\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)){\n      tokenScore = this.getTokenScoreApi(tokenConfig,isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.scores;\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}`;\n    let tokenData = await this.makeCachedRequest(endpoint,apiInfo.TTL,true);\n\n    if (tokenData){\n      let tokenScore = this.BNify(tokenData[0].idleScore);\n      if (tokenScore && tokenScore.gt(0)){\n        // Set cached data\n        return this.setCachedData(cachedDataKey,tokenScore);\n      // Take latest historical valid score\n      } else {\n        const timestamp = parseInt(Date.now()/1000);\n        const startTimestamp = parseInt(timestamp)-(60*60*24);\n        tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,null,true,null,'DESC');\n\n        const filteredTokenData = tokenData.filter( d => (this.BNify(d.idleScore).gt(0)) );\n        if (filteredTokenData.length){\n          tokenScore = this.BNify(filteredTokenData[0].idleScore);\n          if (!this.BNify(tokenScore).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig,tokenAllocation=false,addGovTokens=true) => {\n\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgApr && !this.BNify(cachedData.avgApr).isNaN()) && (cachedData.avgApy && !this.BNify(cachedData.avgApy).isNaN()) ){\n      return {\n        avgApr:this.BNify(cachedData.avgApr),\n        avgApy:this.BNify(cachedData.avgApy)\n      };\n    }\n\n    const Aprs = await this.getAprs(tokenConfig.idle.token);\n\n    if (!Aprs){\n      return false;\n    }\n\n    if (!tokenAllocation){\n      tokenAllocation = await this.getTokenAllocation(tokenConfig);\n    }\n\n    if (!tokenAllocation){\n      return false;\n    }\n\n    const addresses = Aprs.addresses.map((addr,i) => { return addr.toString().toLowerCase() });\n    const aprs = Aprs.aprs;\n\n    const protocolsAprs = {};\n    const protocolsApys = {};\n    let compAPR = null;\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const protocolAddr = protocolInfo.address.toString().toLowerCase();\n      const addrIndex = addresses.indexOf(protocolAddr);\n      if ( addrIndex !== -1 ) {\n        let protocolApr = this.BNify(+this.toEth(aprs[addrIndex]));\n        let protocolApy = this.apr2apy(protocolApr.div(100)).times(100);\n\n        if (addGovTokens && protocolInfo.name === 'compound'){\n          compAPR = await this.getCompAPR(tokenConfig.token,tokenConfig);\n        }\n\n        protocolsApys[protocolAddr] = protocolApy;\n        protocolsAprs[protocolAddr] = protocolApr;\n      }\n    });\n\n    const tokenAprs = {\n      avgApr: null,\n      avgApy: null\n    };\n\n    if (tokenAllocation){\n      tokenAprs.avgApr = this.getAvgApr(protocolsAprs,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n      tokenAprs.avgApy = this.getAvgApr(protocolsApys,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n\n      if (compAPR){\n        tokenAprs.avgApr = tokenAprs.avgApr.plus(compAPR);\n        tokenAprs.avgApy = tokenAprs.avgApy.plus(compAPR);\n      }\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = this.getGlobalConfig(['govTokens','IDLE','showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens','IDLE','enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR){\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token,tokenConfig);\n        if (idleAPR){\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n      return this.setCachedDataWithLocalStorage(cachedDataKey,tokenAprs);\n    }\n\n    return null;\n  }\n  abbreviateNumber(value,decimals=3,maxPrecision=5,minPrecision=0){\n\n    const isNegative = parseFloat(value)<0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\",\"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1,maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value>=1000){\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2,decimals) : null;\n      newValue = parseInt(newValue).toString()+( decimalPart ? '.'+decimalPart : '' );\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue>=1 && (newValue.length-1)>maxPrecision){\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length-1)<minPrecision) {\n      const difference = minPrecision-(newValue.length-1);\n      const append = this.BNify(value).abs().toString().replace('.','').substr((newValue.length-1),difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative){\n      newValue = '-'+newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance,label,decimals,maxLen,highlightedDecimals){\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.','').length;\n    if (numLen>maxLen){\n      decimals = Math.max(0,decimals-(numLen-maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance%1).toPrecision(decimals).substr(2,decimals);;\n    decPart = (decPart+(\"0\".repeat(decimals))).substr(0,decimals);\n\n    if (highlightedDecimals){\n      const highlightedDec = decPart.substr(0,highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? ( <>{highlightedIntPart}<small style={{fontSize:'70%'}}>{decPart}</small> <Text.span fontSize={[1,2]}>{label}</Text.span></> ) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? ( <>{intPart}<small>.{decPart}</small>{ label !== '%' ? ' ' : null }{ label ? <Text.span fontSize={[1,2]}>{label}</Text.span> : null }</> ) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver:false\n  }\n\n  setMouseOver(mouseOver){\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p:0,\n      border:1,\n      boxShadow:1,\n      borderRadius:2,\n      borderColor:null,\n      position:'relative',\n      minHeight:'initial',\n      backgroundColor:'cardBg'\n    };\n\n    if (isActive || (isInteractive && this.state.mouseOver)){\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length){\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]){\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length>0 &&\n            <Flex\n              mt={[3,4]}\n              ml={[3,4]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              {...this.props.titleParentProps}\n            >\n              <Heading.h4\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n                {...this.props.titleProps}\n              >\n                {this.props.title}\n              </Heading.h4>\n              {\n                this.props.description && this.props.description.length>0 &&\n                  <Tooltip\n                    placement={'top'}\n                    message={this.props.description}\n                  >\n                    <Icon\n                      ml={2}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n              }\n            </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034','1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    arrowActive:'#d8d8d8',\n    arrowInactive:'#4f4f4f',\n    selectBgFocused:'#1e3657',\n    selectBg:'#162e4d',\n    backButtonBg:'#162e4d',\n    lineChartStroke:'#a4aec6',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg:'#162e4d',\n    menuBg:'#162e4d',\n    menuHover:'#1e3657',\n    flashColor:'#bac5ff',\n    cardBgHover:'#1e3657',\n    cardBorder:'#0d2034',\n    menuRightBorder:'#0d2034',\n    cardHoverShadow:'0px 0px 0px 1px rgb(45 74 114)',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    // console.log('onActivation',this.provider);\n\n    if (this.provider){\n\n      await this.provider.enable();\n\n      /*\n      // Subscribe to accounts change\n      this.provider.on(\"accountsChanged\", (accounts) => {\n        console.log('accountsChanged',accounts);\n      });\n\n      // Subscribe to chainId change\n      this.provider.on(\"chainChanged\", (chainId) => {\n        console.log('chainChanged',chainId);\n      });\n\n      // Subscribe to networkId change\n      this.provider.on(\"networkChanged\", (networkId) => {\n        console.log('networkChanged',networkId);\n      });\n\n      // Subscribe to session connection/open\n      this.provider.on(\"open\", () => {\n        console.log('open');\n      });\n\n      // Subscribe to session disconnection/close\n      this.provider.on(\"close\", (code, reason) => {\n        console.log('close',code, reason);\n      });\n      */\n\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura).forEach((networkId,index) => {\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: [defaultNetwork]\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: globalConfigs.network.providers.infura[defaultNetwork]+env.REACT_APP_INFURA_KEY\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      backgroundColor: \"white\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              You should be on the {this.props.network.required.name} Ethereum\n              network. You are currently connected to the{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                {this.props.network.current.name}\n              </Text.span>{\" \"}\n              Network - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isCorrectNetwork === false && this.props.web3\n          ?\n            <WrongNetworkBanner\n              network={this.props.network}\n            />\n          :\n            null\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  const buttons = basicConnectorsName.map(connectorName => {\n\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                style={{\n                  flex:'0 100%',\n                  justifyContent:'flex-start'\n                }}\n              >\n                <ImageButton\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageSrc={`images/${walletIcon}`}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/browser-wallet.png`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex flexDirection={'row'} flexWrap={'wrap'} justifyContent={'space-between'}>\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Modal,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    currentSection:null,\n    showTxFees: false,\n    closeRemainingTime:null,\n    newToEthereumChoice: null,\n    showInstructions: false\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      newToEthereumChoice:null,\n      showInstructions: false,\n      currentSection:null\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Connect',\n      eventAction: 'select_wallet',\n      eventLabel: walletProvider\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'blue'} style={{textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const newToEthereum = this.state.currentSection === 'new';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons isMobile={this.props.isMobile} connectionCallback={ this.closeModal } setConnector={ this.setConnector } width={1/2} size={ this.props.isMobile ? 'medium' : 'large' } />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton isMobile={this.props.isMobile} imageSrc={'images/email.svg'} imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}} caption={'Use e-mail'} subcaption={'Powered by Portis'} handleClick={ e => this.setConnector('Portis','Portis') } />\n                    <ImageButton isMobile={this.props.isMobile} imageSrc={'images/mobile.svg'} imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}} caption={'Use phone number'} subcaption={'Powered by Fortmatic'} handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }/>\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n              <Box mb={3}>\n                <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex mb={[2,3]} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                <ImageButton isMobile={ this.props.isMobile } imageSrc={'images/ethereum-wallet.svg'} imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'} } caption={`Ethereum wallet`} subcaption={'Choose your favourite'} handleClick={ e => this.setCurrentSection(e,'wallet') } />\n                <ImageButton isMobile={ this.props.isMobile } imageSrc={'images/new-wallet.png'} imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'} } caption={`New wallet`} subcaption={'Use email / phone'} handleClick={ e => this.setCurrentSection(e,'new') } />\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { (!this.state.currentSection) ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      await this.props.context.setFirstValidConnector(['Infura']);\n      this.props.setConnector('Infura',null);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                borderRadius={4}\n                my={2}\n                mx={[0, 2]}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                borderRadius={4}\n                my={2}\n                mx={[0, 2]}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport Biconomy from \"@biconomy/mexa\";\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\nimport { TerminalHttpProvider, SourceType } from '@terminal-packages/sdk';\n\nrequire('dotenv').config();\nconst INFURA_KEY = process.env[\"REACT_APP_INFURA_KEY\"];\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  tokenConfig: {},\n  transactions: {},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    window.initWeb3 = this.initWeb3;\n  }\n\n  componentDidMount = async () => {\n    this.initSimpleID();\n\n    // this.functionsUtil.customLog('RimbleWeb3 componentDidMount');\n    this.initWeb3();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.type = \"contract\";\n      transaction.status = status;\n      transaction.params = params;\n      transaction.transactionHash = hash;\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // this.functionsUtil.customLog('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    if (prevProps.connectorName !== this.props.connectorName && this.props.connectorName){\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect') {\n        this.initWeb3();\n      }\n    } else if ( (this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      this.initWeb3();\n    }\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    const availableStrategiesChanged = prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies));\n\n    // Reset tokenDecimals if token is changed\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    if (tokenChanged/* || availableTokensChanged*/ || availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    const metamaskProvider = await detectEthereumProvider();\n    if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n      window.ethereum = metamaskProvider;\n    }\n\n    // Suppress console warning\n    if (window.ethereum && window.ethereum.autoRefreshOnNetworkChange) {\n      window.ethereum.autoRefreshOnNetworkChange = false;\n    }\n\n    const context = this.props.context;\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(globalConfigs.network.providers.infura[globalConfigs.network.requiredNetwork]+INFURA_KEY));\n\n    let web3 = context.library;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorNameChanged,context.connectorName,connectorName,setConnectorName);\n\n    if (!context.active || connectorNameChanged) {\n      // Select preferred web3 provider\n      if (connectorName && connectorNameChanged){\n        // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n        setConnectorName = connectorName;\n        await context.setConnector(connectorName);\n        // await context.setFirstValidConnector([connectorName, 'Infura']);\n        return web3;\n      }\n      /*\n      else if (setConnectorName){\n        // Catch WalletConnect unexpected disconnect and fallback to Infura\n        if (connectorName === 'WalletConnect' && connectorName === setConnectorName && last_context && last_context.active && last_context.connectorName==='WalletConnect' && !context.connectorName){\n          this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          this.functionsUtil.removeStoredItem('walletProvider');\n          this.functionsUtil.removeStoredItem('connectorName');\n          this.functionsUtil.setLocalStorage('context',JSON.stringify({active:context.active,connectorName:context.connectorName}));\n          setConnectorName = null;\n          await context.setConnector('Infura');\n          if (context.connector && typeof context.connector.disable === 'function'){\n            await context.connector.disable();\n          }\n        }\n\n        this.functionsUtil.customLog('initWeb3 skip due to setConnectorName ('+setConnectorName+') already set');\n        return web3;\n      }\n      */\n    }\n    /* else if (context.connectorName === \"WalletConnect\") {\n      if (!context.account) {\n\n        // WalletConnect already opened\n        if (document.getElementById('walletconnect-wrapper')){\n          return web3;\n        }\n\n        WalletConnectQRCodeModal.open(\n          context.connector.walletConnector.uri,\n          async () => {\n            document.getElementById('walletconnect-wrapper').remove();\n            this.props.setConnector('Infura',null);\n            await context.setConnector('Infura');\n            setConnectorName = null;\n          }\n        );\n      } else {\n        try {\n          WalletConnectQRCodeModal.close();\n        } catch {}\n      }\n    // Reset web3 if Infura\n    } */\n    /*\n    else if (context.active && (connectorName === 'Infura' || context.connectorName === \"Infura\")){\n      if (typeof web3.currentProvider.disable === 'function'){\n        await web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        await context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n    */\n\n    let web3Host = null;\n    let web3Provider = null;\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = globalConfigs.network.providers.infura[globalConfigs.network.requiredNetwork]+INFURA_KEY;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = globalConfigs.network.providers.infura[globalConfigs.network.requiredNetwork]+INFURA_KEY;\n        forceCallback = true;\n      }\n    }\n\n    const terminalInfo = globalConfigs.network.providers.terminal;\n\n    if (terminalInfo && terminalInfo.enabled && terminalInfo.supportedNetworks.indexOf(globalConfigs.network.requiredNetwork) !== -1 ){\n      const TerminalHttpProviderParams = terminalInfo.params;\n      const terminalSourceType = localStorage && localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : SourceType.Infura;\n      TerminalHttpProviderParams.source = terminalSourceType;\n\n      if (web3Provider){\n        TerminalHttpProviderParams.customHttpProvider = web3Provider;\n      } else if (web3Host){\n        TerminalHttpProviderParams.host = web3Host;\n      }\n\n      const terminalHttpProvider = new TerminalHttpProvider(TerminalHttpProviderParams);\n      web3 = new Web3(terminalHttpProvider);\n    } else {\n      // Injected web3 provider\n      if (web3Provider){\n        web3 = new Web3(web3Provider);\n      // Infura\n      } else if (web3Host) {\n        web3 = new Web3(new Web3.providers.HttpProvider(web3Host));\n        if (connectorName !== 'Infura'){\n          this.props.setConnector('Infura',null);\n        }\n      }\n    }\n\n    const web3Callback = async () => {\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // After setting the web3 provider, check network\n      try {\n        await this.checkNetwork();\n        if (this.state.network.isCorrectNetwork){\n\n          if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          }\n\n          if (context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n            await this.setState({\n              accountInizialized: true,\n              account: this.props.customAddress\n            });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(globalConfigs.network.requiredNetwork) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      if (this.state.biconomy === null){\n        const biconomyWeb3Provider = web3Provider ? web3Provider : web3Host;\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || this.state.biconomy === biconomy){\n              return false;\n            }\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura\n            };\n            if (web3 !== this.state.web3){\n              this.setState(newState, web3Callback);\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            // this.functionsUtil.customLog('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                web3Infura,\n                biconomy:false\n              }, web3Callback);\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            web3Infura,\n            biconomy:false\n          }, web3Callback);\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3,\n          web3Infura,\n        }, web3Callback);\n      } else if (context.account || forceCallback){\n        web3Callback();\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`Init contract: ${name}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`creating contract ${name} - addr: ${address}`);\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : this.state.web3;\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      this.setState(state => ({\n        ...state,\n        contracts: [...state.contracts, {name, contract}]\n      }));\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(globalConfigs.network.requiredNetwork) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n\n    this.functionsUtil.customLog('initAccount',account);\n\n    if (this.props.customAddress){\n\n      // Set custom account\n      this.setState({\n        accountInizialized: true,\n        account: this.props.customAddress\n      });\n\n      // After account is complete, get the balance\n      this.getAccountBalance();\n\n      return false;\n    }\n\n    try {\n      if (!account){\n        const wallets = await this.state.web3.eth.getAccounts();\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account || this.state.account === account){\n        this.setState({\n          accountInizialized: true\n        });\n        return false;\n      }\n\n      // Request account access if needed\n      if (account){\n\n        const walletProvider = localStorage && localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        /*\n        // Unsubscribes to all subscriptions\n        if (this.state.web3SocketProvider && typeof this.state.web3SocketProvider.clearSubscriptions === 'function'){\n          this.functionsUtil.customLog('Clear all web3SocketProvider subscriptions');\n          this.state.web3SocketProvider.clearSubscriptions();\n        }\n\n        const networkName = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork].toLowerCase();\n        const web3SocketProvider = new Web3(new Web3.providers.WebsocketProvider(`wss://${networkName}.infura.io/ws/v3/${INFURA_KEY}`));\n\n        // Subscribe to logs\n        const addressTopic = '0x00000000000000000000000'+account.toLowerCase().replace('x','');\n\n        // Subscribe for payment methods\n        const paymentProviders = Object.keys(globalConfigs.payments.providers).filter((providerName,i) => { const providerInfo = globalConfigs.payments.providers[providerName]; return providerInfo.enabled && providerInfo.web3Subscription && providerInfo.web3Subscription.enabled  })\n        if (paymentProviders && paymentProviders.length){\n          paymentProviders.forEach((providerName,i) => {\n            const providerInfo = globalConfigs.payments.providers[providerName];\n\n            this.functionsUtil.customLog(`Subscribe to ${providerName} logs`);\n\n            // Subscribe for deposit transactions\n            web3SocketProvider.eth.subscribe('logs', {\n                address: [account,providerInfo.web3Subscription.contractAddress],\n                topics: [null,[addressTopic]]\n            }, function(error, result){\n              \n            })\n            .on(\"data\", async (log) => {\n              this.functionsUtil.customLog(providerName,'logs',log);\n\n              if (log){\n                const txHash = log.transactionHash;\n                const subscribedTransactions = this.state.subscribedTransactions;\n                const walletAddressFound = log.topics.filter((addr,i) => { return addr.toLowerCase().includes(addressTopic); });\n\n                this.functionsUtil.customLog(providerName,txHash,walletAddressFound);\n\n                if (!subscribedTransactions[txHash] && walletAddressFound.length){\n                  const decodedLogs = web3SocketProvider.eth.abi.decodeLog(providerInfo.web3Subscription.decodeLogsData,log.data,log.topics);\n\n                  this.functionsUtil.customLog(providerName,txHash,decodedLogs);\n\n                  if (decodedLogs && decodedLogs._tokenAmount && decodedLogs._tokenAddress && decodedLogs._tokenAddress.toLowerCase() === this.props.tokenConfig.address.toLowerCase()){\n\n                    const receiptCallback = async (tx,decodedLogs) => {\n                      const tokenDecimals = await this.getTokenDecimals();\n                      const tokenAmount = this.functionsUtil.BNify(decodedLogs._tokenAmount);\n                      const tokenAmountFixed = this.functionsUtil.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      const tokenAmountFormatted = parseFloat(tokenAmountFixed.toString()).toFixed(2);\n                      const isProviderTx = tx.from.toLowerCase() === account.toLowerCase() && tx.to.toLowerCase() === providerInfo.web3Subscription.contractAddress.toLowerCase();\n\n                      if (isProviderTx){\n\n                        // Mined\n                        if (tx.blockNumber && tx.status){\n                          // Toast message\n                          window.showToastMessage({\n                            variant:'success',\n                            message:'Deposit completed',\n                            secondaryMessage:`${providerName} sent you ${tokenAmountFormatted} ${this.props.selectedToken}`,\n                          });\n\n                          // Update User Balance\n                          this.getAccountBalance(tokenAmount);\n                        } else {\n                          // Toast message\n                          window.showToastMessage({\n                            variant:'processing',\n                            message:'Deposit pending',\n                            secondaryMessage:`${providerName} is sending ${tokenAmountFormatted} ${this.props.selectedToken}`,\n                          });\n                        }\n                      }\n                    }\n\n                    let checkTransactionReceiptTimeoutID = null;\n\n                    const checkTransactionReceipt = (txHash,decodedLogs) => {\n                      if (checkTransactionReceiptTimeoutID){\n                        window.clearTimeout(checkTransactionReceiptTimeoutID);\n                      }\n                      web3SocketProvider.eth.getTransactionReceipt(txHash,(err,txReceipt)=>{\n                        if (!err){\n                          if (txReceipt){\n                            receiptCallback(txReceipt,decodedLogs);\n                          } else{\n                            checkTransactionReceiptTimeoutID = window.setTimeout(() => { checkTransactionReceipt(txHash,decodedLogs) },3000);\n                          }\n                        }\n                      });\n                    }\n\n                    checkTransactionReceipt(txHash,decodedLogs);\n\n                    subscribedTransactions[txHash] = log;\n                    this.setState({subscribedTransactions});\n                  }\n                }\n              }\n            });\n          })\n        }\n\n        // Subscribe for deposit transactions\n        web3SocketProvider.eth.subscribe('logs', {\n            address: [account,this.props.tokenConfig.address],\n            topics: [null,null,[addressTopic]]\n        }, function(error, result){\n\n        })\n        .on(\"data\", async (log) => {\n          if (log){\n            const txHash = log.transactionHash;\n            const subscribedTransactions = this.state.subscribedTransactions;\n            const walletAddressFound = log.topics.filter((addr,i) => { return addr.toLowerCase().includes(addressTopic); });\n\n            if (!subscribedTransactions[txHash] && walletAddressFound.length){\n              const decodedLogs = web3SocketProvider.eth.abi.decodeLog([\n                {\n                  \"internalType\": \"uint256\",\n                  \"name\": \"_tokenAmount\",\n                  \"type\": \"uint256\"\n                },\n              ],log.data,log.topics);\n\n              if (decodedLogs && decodedLogs._tokenAmount){\n\n                const receiptCallback = async (tx,decodedLogs) => {\n                  const tokenDecimals = await this.getTokenDecimals();\n                  const tokenAmount = this.functionsUtil.BNify(decodedLogs._tokenAmount);\n                  const tokenAmountFixed = this.functionsUtil.fixTokenDecimals(tokenAmount,tokenDecimals);\n                  const tokenAmountFormatted = parseFloat(tokenAmountFixed.toString()).toFixed(2);\n                  const isDepositTokenTx = tx.to.toLowerCase() === this.props.tokenConfig.address.toLowerCase();\n\n                  if (isDepositTokenTx){\n\n                    // Mined\n                    if (tx.blockNumber && tx.status){\n                      // Toast message\n                      window.showToastMessage({\n                        message:'Deposit completed',\n                        secondaryMessage: `${tokenAmountFormatted} ${this.props.selectedToken} has been deposited`,\n                        variant: \"success\",\n                      });\n\n                      // Update User Balance\n                      this.getAccountBalance(tokenAmount);\n                    } else {\n                      // Toast message\n                      window.showToastMessage({\n                        message:'Deposit pending',\n                        secondaryMessage: `${tokenAmountFormatted} ${this.props.selectedToken} are on the way`,\n                        variant: \"processing\",\n                      });\n                    }\n                  }\n                }\n\n                let checkTransactionReceiptTimeoutID = null;\n\n                const checkTransactionReceipt = (txHash,decodedLogs) => {\n                  if (checkTransactionReceiptTimeoutID){\n                    window.clearTimeout(checkTransactionReceiptTimeoutID);\n                  }\n                  web3SocketProvider.eth.getTransactionReceipt(txHash,(err,txReceipt)=>{\n                    if (!err){\n                      if (txReceipt){\n                        receiptCallback(txReceipt,decodedLogs);\n                      } else{\n                        checkTransactionReceiptTimeoutID = window.setTimeout(() => { checkTransactionReceipt(txHash,decodedLogs) },3000);\n                      }\n                    }\n                  });\n                }\n\n                checkTransactionReceipt(txHash,decodedLogs);\n\n                subscribedTransactions[txHash] = log;\n                this.setState({subscribedTransactions});\n              }\n            }\n          }\n        })\n        .on(\"changed\", log => {\n          \n        });\n        */\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // this.functionsUtil.customLog(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    const contracts = this.functionsUtil.getGlobalConfig(['contracts']);\n    await this.functionsUtil.asyncForEach(Object.keys(contracts),async (contractName) => {\n      const contractInfo = contracts[contractName];\n      if (contractInfo.address !== null && contractInfo.abi !== null){\n        this.functionsUtil.customLog('initializeContracts, init contract', contractName, contractInfo.address);\n        await this.initContract(contractName, contractInfo.address, contractInfo.abi);\n      }\n    });\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    await this.functionsUtil.asyncForEach(Object.keys(govTokens),async (token) => {\n      const govTokenConfig = govTokens[token];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      // Initialize govToken contracts\n      let foundGovTokenContract = this.state.contracts.find(c => c.name === token);\n      if (!foundGovTokenContract) {\n        this.functionsUtil.customLog('initializeContracts, init contract', token, govTokenConfig.address);\n        await this.initContract(token, govTokenConfig.address, govTokenConfig.abi);\n      }\n    });\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n        \n        const availableTokens = this.props.availableStrategies[strategy];\n\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          let foundTokenContract = this.state.contracts.find(c => c.name === token);\n          if (!foundTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            await this.initContract(token, tokenConfig.address, tokenConfig.abi);\n          }\n\n          // Initialize idleTokens contracts\n          let foundIdleTokenContract = this.state.contracts.find(c => c.name === tokenConfig.idle.token);\n          if (!foundIdleTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            await this.initContract(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi);\n          }\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n            if (!foundProtocolContract) {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              await this.initContract(p.token, p.address, p.abi);\n            }\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              await this.initContract(oldContract.name, oldContract.address, oldContract.abi);\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n                if (!foundProtocolContract) {\n                  this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                  await this.initContract(p.token, p.address, p.abi);\n                }\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              await this.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n            }\n          }\n        })\n      });\n    }\n\n    return this.setState({\n      contractsInitialized:true\n    });\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n\n    const networkId =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.requiredNetwork !== \"undefined\"\n        ? this.props.config.requiredNetwork\n        : globalConfigs.network.requiredNetwork;\n\n    let networkName = globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId] : 'unknown';\n\n    let requiredNetwork = {\n      name: networkName,\n      id: networkId\n    };\n\n    let network = { ...this.state.network };\n    network.required = requiredNetwork;\n\n    this.setState({ network });\n  }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = { ...this.state.network };\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  getNetworkName = async () => {\n    try {\n      return this.state.web3.eth.net.getNetworkType((error, networkName) => {\n        let current = { ...this.state.network.current };\n        current.name = networkName;\n        let network = { ...this.state.network };\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network Name: \", error);\n    }\n  }\n\n  checkNetwork = async () => {\n    this.getRequiredNetwork();\n\n    await Promise.all([\n      this.getNetworkId(),\n      this.getNetworkName()\n    ]);\n\n    let network = { ...this.state.network };\n    network.isCorrectNetwork = this.state.network.current.id === this.state.network.required.id;\n\n    // To do, check window.web3.currentProvider.networkVersion to see if Metamask is in the requiredNetwork\n\n    this.setState({ network });\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1, networkId } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas } : { from: account, gas })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.lastUpdated = Date.now();\n    transaction.status = \"initialized\";\n    transaction.confirmationCount = 0;\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // this.functionsUtil.customLog('updateTransaction',transactions);\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction.transactionHash,transaction.status.toLowerCase());\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n\n    // this.functionsUtil.customLog('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n\n    modals.data.connectionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    transactions: {},\n    CrispClient: null,\n    tokenDecimals:null,\n    accountBalance: null,\n    web3Subscription: null,\n    accountValidated: null,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    accountInizialized:false,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider value={this.state} {...this.props} />\n        <ConnectionModalUtil\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          network={this.state.network}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                position={'relative'}\n                src={'images/logo.svg'}\n                height={['35px','48px']}\n              />\n            </RouterLink>\n          </Flex>\n            <Flex\n              width={[0.5,8/12]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={\"flex-end\"}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    mr={4}\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile &&\n                  <>\n                    <Link\n                      mr={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n              }\n            </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n    },\n  },\n  1337:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:true,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:USDC,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n    }\n  },\n  1:{ // Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:true,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xc11b1268c1a384e55c48c2391d8d480264a3a7f4',\n            token:'cWBTC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:true,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            token:'aWBTC',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from 'jquery';\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from './connectors';\nimport Web3Provider from 'web3-react';\nimport { Web3Consumer } from 'web3-react';\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from '../configs/availableTokens';\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from 'rimble-ui';\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import('../Dashboard/Dashboard'));\nconst Governance = React.lazy(() => import('../Governance/Governance'));\n\nclass App extends Component {\n  state = {\n    cachedData:{},\n    buyToken: null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode:'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme:theme,\n    currentSection:null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  closeToastMessage = (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps:null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps:props\n    });\n  }\n\n  processCustomParam = (props,prevProps) => {\n    const params = props ? props.match.params : null;\n    const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n  }\n\n  clearCachedData = () => {\n    this.functionsUtil.setLocalStorage('cachedData',{},true);\n    this.setState({\n      cachedData:{}\n    });\n    return true;\n  }\n\n  setCachedData = (key,data,TTL=null,useLocalStorage=false) => {\n\n    key = key.toLowerCase();\n    const cachedKeyFound = this.state.cachedData[key];\n    const currentTime = parseInt(Date.now()/1000);\n\n    const update_key = !cachedKeyFound || ( (!cachedKeyFound.expirationDate || cachedKeyFound.expirationDate>=currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data));\n\n    let output = false;\n\n    if (update_key){\n      const expirationDate = TTL ? currentTime+(TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage){\n        let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n        if (!storedCachedData){\n          storedCachedData = {};\n        }\n        storedCachedData = {\n          ...storedCachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        };\n        // console.log('STORED CACHE - INSERT KEY',key,data);\n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        }\n      }));\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)){\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress){\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw:false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({...state, selectedTab: tabIndex}));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const requiredNetwork = globalConfigs.network.requiredNetwork;\n\n    // Load available strategies\n    Object.keys(availableTokens[requiredNetwork]).forEach((strategy) => {\n      availableStrategies[strategy] = availableTokens[requiredNetwork][strategy];\n    });\n\n    newState.availableStrategies = availableStrategies;\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && this.state.availableStrategies[selectedStrategy]){\n      newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]){\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy,selectedToken){\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    const newState = {\n      tokenConfig:!selectedToken ? null : this.state.tokenConfig,\n      availableTokens:!selectedToken ? null : this.state.availableTokens,\n      selectedToken:!selectedToken ? selectedToken :this.state.selectedToken,\n      selectedStrategy:!selectedStrategy ? selectedStrategy :this.state.selectedStrategy,\n    };\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken) {\n      if ( this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase()) ){\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',newState);\n\n    await this.setState(newState,callback);\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      },callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      },callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())){\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState,callback);\n    } else if(!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig:null\n      },callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction){\n      window.console.error = () => {};\n      window.console.warn = () => {};\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage){\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version',false);\n      if (version !== globalConfigs.version){\n        this.functionsUtil.clearStoredData(['walletProvider','connectorName']);\n        this.functionsUtil.setLocalStorage('version',globalConfigs.version);\n      }\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode',false);\n    if (themeMode){\n      this.setThemeMode(themeMode);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i=0;i<iFrames.length;i++){\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w){\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadAvailableTokens();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged){\n      if (this.state.currentSection === 'landing'){\n        this.setThemeMode('light',false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode',false) || this.functionsUtil.getGlobalConfig(['dashboard','theme','mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n\n    if (tokenChanged || strategyChanged){\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n      window.parent.closeIframe(window.self);\n    }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage){\n      const connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      const walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      this.setConnector(connectorName,walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width:this.state.width,\n      height:this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged){\n      if (widthChanged){\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged){\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  // Optional parameters to pass into RimbleWeb3\n  config = globalConfigs.network;\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e){\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken:null,\n      buyModalOpened:false\n    });\n  }\n\n  openBuyModal(e,buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened:true\n    });\n  }\n\n  async logout(){\n    this.functionsUtil.clearStoredData();\n  }\n\n  setConnector(connectorName,walletProvider){\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider){\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    if ( (connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if ( connectorName === 'Injected' ){\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider){\n        case 'Metamask':\n          if (!hasMetamask && hasDapper){\n            walletProvider = 'Dapper';\n          }\n        break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask){\n            walletProvider = 'Metamask';\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    });\n  }\n\n  setThemeMode(themeMode,store=true){\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard','theme','darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled){\n      themeMode = 'light';\n    }\n\n    switch (themeMode){\n      default:\n      case 'light':\n        selectedTheme = theme;\n      break;\n      case 'dark':\n        selectedTheme = themeDark;\n      break;\n    }\n\n    if (store){\n      this.functionsUtil.setLocalStorage('themeMode',themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection){\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize:4,\n            fontWeight:2\n          }}\n          loaderProps={{\n            mb:3,\n            size:'80px',\n            color:'blue'\n          }}\n          flexProps={{\n            my:3,\n            flexDirection:'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer>\n              {context => {\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    config={this.config}\n                    connectors={connectors}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        transactions,\n                        initSimpleID,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        accountBalanceLow,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper\n                      }) => {\n                        return (\n                        <Box>\n                          <Switch>\n                            <Route\n                              path=\"/dashboard/:section?/:param1?/:param2?\"\n                              render={\n                                (props) => \n                                  <Suspense\n                                    fallback={SuspenseLoader}\n                                  >\n                                    <Dashboard\n                                      {...props}\n                                      web3={web3}\n                                      modals={modals}\n                                      network={network}\n                                      context={context}\n                                      account={account}\n                                      isDashboard={true}\n                                      initWeb3={initWeb3}\n                                      biconomy={biconomy}\n                                      isMobile={isMobile}\n                                      simpleID={simpleID}\n                                      contracts={contracts}\n                                      initAccount={initAccount}\n                                      initSimpleID={initSimpleID}\n                                      initContract={initContract}\n                                      transactions={transactions}\n                                      buyToken={this.state.buyToken}\n                                      logout={this.logout.bind(this)}\n                                      accountBalance={accountBalance}\n                                      themeMode={this.state.themeMode}\n                                      theme={this.state.selectedTheme}\n                                      validateAccount={validateAccount}\n                                      connecting={this.state.connecting}\n                                      cachedData={this.state.cachedData}\n                                      setToken={this.setToken.bind(this)}\n                                      accountValidated={accountValidated}\n                                      getTokenDecimals={getTokenDecimals}\n                                      rejectValidation={rejectValidation}\n                                      tokenConfig={this.state.tokenConfig}\n                                      getAccountBalance={getAccountBalance}\n                                      accountBalanceLow={accountBalanceLow}\n                                      accountInizialized={accountInizialized}\n                                      selectedToken={this.state.selectedToken}\n                                      connectorName={this.state.connectorName}\n                                      setStrategy={this.setStrategy.bind(this)}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountBalanceToken={accountBalanceToken}\n                                      initializeContracts={initializeContracts}\n                                      walletProvider={this.state.walletProvider}\n                                      buyModalOpened={this.state.buyModalOpened}\n                                      contractsInitialized={contractsInitialized}\n                                      openBuyModal={this.openBuyModal.bind(this)}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      handleMenuClick={this.selectTab.bind(this)}\n                                      setConnector={this.setConnector.bind(this)}\n                                      setThemeMode={this.setThemeMode.bind(this)}\n                                      availableTokens={this.state.availableTokens}\n                                      closeBuyModal={this.closeBuyModal.bind(this)}\n                                      setCachedData={this.setCachedData.bind(this)}\n                                      selectedStrategy={this.state.selectedStrategy}\n                                      userRejectedValidation={userRejectedValidation}\n                                      clearCachedData={this.clearCachedData.bind(this)}\n                                      setStrategyToken={this.setStrategyToken.bind(this)}\n                                      accountValidationPending={accountValidationPending}\n                                      availableStrategies={this.state.availableStrategies}\n                                      setCurrentSection={this.setCurrentSection.bind(this)}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      contractMethodSendWrapper={contractMethodSendWrapper}\n                                      setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                    />\n                                  </Suspense>\n\n                              }\n                            >\n                            </Route>\n                            {\n                              governanceEnabled && \n                                <Route\n                                  path=\"/governance/:section?/:item_id?\"\n                                  render={\n                                    (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Governance\n                                          {...props}\n                                          web3={web3}\n                                          modals={modals}\n                                          network={network}\n                                          context={context}\n                                          account={account}\n                                          initWeb3={initWeb3}\n                                          biconomy={biconomy}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          isGovernance={true}\n                                          contracts={contracts}\n                                          initAccount={initAccount}\n                                          initSimpleID={initSimpleID}\n                                          initContract={initContract}\n                                          transactions={transactions}\n                                          buyToken={this.state.buyToken}\n                                          logout={this.logout.bind(this)}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          validateAccount={validateAccount}\n                                          connecting={this.state.connecting}\n                                          cachedData={this.state.cachedData}\n                                          setToken={this.setToken.bind(this)}\n                                          accountValidated={accountValidated}\n                                          getTokenDecimals={getTokenDecimals}\n                                          rejectValidation={rejectValidation}\n                                          tokenConfig={this.state.tokenConfig}\n                                          getAccountBalance={getAccountBalance}\n                                          accountBalanceLow={accountBalanceLow}\n                                          accountInizialized={accountInizialized}\n                                          selectedToken={this.state.selectedToken}\n                                          connectorName={this.state.connectorName}\n                                          setStrategy={this.setStrategy.bind(this)}\n                                          userRejectedConnect={userRejectedConnect}\n                                          accountBalanceToken={accountBalanceToken}\n                                          initializeContracts={initializeContracts}\n                                          walletProvider={this.state.walletProvider}\n                                          buyModalOpened={this.state.buyModalOpened}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          rejectAccountConnect={rejectAccountConnect}\n                                          handleMenuClick={this.selectTab.bind(this)}\n                                          setConnector={this.setConnector.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          availableTokens={this.state.availableTokens}\n                                          closeBuyModal={this.closeBuyModal.bind(this)}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          selectedStrategy={this.state.selectedStrategy}\n                                          userRejectedValidation={userRejectedValidation}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          setStrategyToken={this.setStrategyToken.bind(this)}\n                                          accountValidationPending={accountValidationPending}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          contractMethodSendWrapper={contractMethodSendWrapper}\n                                          setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        />\n                                      </Suspense>\n                                  }\n                                >\n                                </Route>\n                            }\n                            <Route>\n                              <Header\n                                modals={modals}\n                                network={network}\n                                context={context}\n                                account={account}\n                                initWeb3={initWeb3}\n                                isMobile={isMobile}\n                                contracts={contracts}\n                                initAccount={initAccount}\n                                initContract={initContract}\n                                buyToken={this.state.buyToken}\n                                accountBalance={accountBalance}\n                                logout={this.logout.bind(this)}\n                                validateAccount={validateAccount}\n                                connecting={this.state.connecting}\n                                accountValidated={accountValidated}\n                                getTokenDecimals={getTokenDecimals}\n                                rejectValidation={rejectValidation}\n                                tokenConfig={this.state.tokenConfig}\n                                getAccountBalance={getAccountBalance}\n                                accountBalanceLow={accountBalanceLow}\n                                selectedToken={this.state.selectedToken}\n                                connectorName={this.state.connectorName}\n                                userRejectedConnect={userRejectedConnect}\n                                accountBalanceToken={accountBalanceToken}\n                                walletProvider={this.state.walletProvider}\n                                buyModalOpened={this.state.buyModalOpened}\n                                contractsInitialized={contractsInitialized}\n                                openBuyModal={this.openBuyModal.bind(this)}\n                                rejectAccountConnect={rejectAccountConnect}\n                                handleMenuClick={this.selectTab.bind(this)}\n                                setConnector={this.setConnector.bind(this)}\n                                availableTokens={this.state.availableTokens}\n                                closeBuyModal={this.closeBuyModal.bind(this)}\n                                userRejectedValidation={userRejectedValidation}\n                                accountValidationPending={accountValidationPending}\n                                connectAndValidateAccount={connectAndValidateAccount}\n                                setToken={ e => { this.setToken(e) } }\n                              />\n\n                              {this.state.route === \"onboarding\" ? (\n                                <Web3Debugger\n                                  web3={web3}\n                                  account={account}\n                                  accountBalance={accountBalance}\n                                  accountBalanceToken={accountBalanceToken}\n                                  accountBalanceLow={accountBalanceLow}\n                                  initAccount={initAccount}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountValidated={accountValidated}\n                                  accountValidationPending={accountValidationPending}\n                                  rejectValidation={rejectValidation}\n                                  userRejectedValidation={userRejectedValidation}\n                                  validateAccount={validateAccount}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  modals={modals}\n                                  network={network}\n                                  transaction={transaction}\n                                />\n                              ) : null}\n\n                              {this.state.route === \"default\" ? (\n                                <Switch>\n                                  <Route exact path=\"/\"\n                                    render={ (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Landing\n                                          {...props}\n                                          web3={web3}\n                                          network={network}\n                                          account={account}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          contracts={contracts}\n                                          innerWidth={this.state.width}\n                                          logout={this.logout.bind(this)}\n                                          innerHeight={this.state.height}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          cachedData={this.state.cachedData}\n                                          connecting={this.state.connecting}\n                                          selectedTab={this.state.selectedTab}\n                                          tokenConfig={this.state.tokenConfig}\n                                          accountBalanceLow={accountBalanceLow}\n                                          getAccountBalance={getAccountBalance}\n                                          customAddress={this.state.customAddress}\n                                          selectedToken={this.state.selectedToken}\n                                          accountBalanceToken={accountBalanceToken}\n                                          closeToastMessage={this.closeToastMessage}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          processCustomParam={this.processCustomParam}\n                                          availableTokens={this.state.availableTokens}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          updateSelectedTab={this.selectTab.bind(this)}\n                                          toastMessageProps={this.state.toastMessageProps}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          setToken={ e => { this.setToken(e) } }\n                                        />\n                                        <CookieConsent\n                                          expires={365}\n                                          buttonText={\"Ok\"}\n                                          location={\"bottom\"}\n                                          acceptOnScroll={true}\n                                          cookieName={\"cookieAccepted\"}\n                                          acceptOnScrollPercentage={5}\n                                          style={{background: \"rgba(255,255,255,0.95)\",zIndex:'9999999'}}\n                                          buttonStyle={{display: isMobile ? \"block\" : \"none\", backgroundColor:'#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\"}}\n                                        >\n                                          <Flex flexDirection={'row'} alignItems={['flex-start','center']} justifyContent={'flex-start'} maxHeight={['150px','initial']} style={ isMobile ? {overflowY:'scroll'} : null }>\n                                            <Image display={['none','block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                            <Text pl={[0,3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                              This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                              You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                            </Text>\n                                          </Flex>\n                                        </CookieConsent>\n                                      </Suspense>\n                                    }\n                                  ></Route>\n                                  <Route exact path=\"/terms-of-service\">\n                                    <Tos />\n                                  </Route>\n                                  <Route>\n                                    <PageNotFound />\n                                  </Route>\n                                </Switch>\n                              ) : null}\n                            </Route>\n                          </Switch>\n                          <TransactionToastUtil\n                            transactions={transactions}\n                            themeMode={this.state.themeMode}\n                          />\n                        </Box>\n                      )}}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={ isInteractive ? e => this.props.handleClick(this.props) : null }\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={ fieldInfo.style ? fieldInfo.style : {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            <FieldComponent\n                              {...this.props}\n                              fieldInfo={fieldInfo}\n                              colProps={colInfo.props}\n                              parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            />\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.props.tokenConfig.name,'nonceMethod']);\n          if (this.props.usePermit && permitContract){\n            const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n            const nonce = nonceMethod ? await permitContract.methods[nonceMethod](this.props.account).call() : null;\n            this.functionsUtil.signPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, nonce, expiry, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            web3={this.props.web3}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              className={styles.input}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          web3={this.props.web3}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      web3={this.props.web3}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens[token];\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                return (\n                  <ImageButton\n                    caption={token}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    imageSrc={`images/tokens/${token}.svg`}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} my={0}>\n                {\n                  this.props.showInline && this.props.buyToken ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `How do you prefer to buy ${this.state.selectedToken}?`\n                }\n              </Text>\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  maxWidth={ this.props.showInline ? '35em' : 'initial' }\n                  width={ (this.props.showInline && !this.props.isMobile) ? 0.72 : 1 }\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={`images/tokens/${token}.svg`} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink pb={[3,2]} href={'https://developers.idle.finance'} textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>Developers</ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>Terms of Service</Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink pb={[3,2]} href={'https://www.iubenda.com/privacy-policy/61211749'} textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>Privacy Policy</ExtLink>\n                <ExtLink pb={[3,2]} href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>Cookie Policy</ExtLink>\n                <ExtLink pb={[3,2]} href={'https://www.notion.so/idlelabs/Idle-Finance-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'} textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>Brand Assets</ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>Overview</Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>Proposals</Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>Leaderboard</Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>Forum</Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>info@idle.finance</Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import React, { Component } from 'react';\nimport { Flex, Text, Icon } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign({\n      py:1,\n      width:'auto',\n      px:['12px',3],\n    },this.props.cardProps);\n\n    return (\n       <DashboardCard\n         cardProps={cardProps}\n         isInteractive={true}\n         isActive={this.props.isActive}\n         handleClick={this.props.handleClick}\n       >\n         <Flex\n           my={1}\n           alignItems={'center'}\n           flexDirection={'row'}\n           justifyContent={'center'}\n         >\n          {\n            this.props.useIconOnly ? (\n              <Icon\n                align={'center'}\n                name={this.props.icon}\n                size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n              />\n            ) : (\n             <Flex\n               mr={2}\n               p={['4px','7px']}\n               borderRadius={'50%'}\n               alignItems={'center'}\n               justifyContent={'center'}\n               backgroundColor={ this.props.iconBgColor ? this.props.iconBgColor : this.props.theme.colors.transactions.actionBg.redeem }\n             >\n               <Icon\n                 align={'center'}\n                 name={this.props.icon}\n                 size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                 color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n               />\n             </Flex>\n            )\n          }\n           <Text\n             fontWeight={3}\n             fontSize={[1,3]}\n             {...this.props.textProps}\n           >\n             {this.props.text}\n           </Text>\n         </Flex>\n       </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;"],"sourceRoot":""}