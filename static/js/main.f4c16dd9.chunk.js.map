{"version":3,"sources":["AssetField/AssetField.js","PageNotFound/PageNotFound.module.scss","Breadcrumb/Breadcrumb.js","utilities/components/ShortHash.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","RoundIconButton/RoundIconButton.js","ImageButton/ImageButton.js","ExtLink/ExtLink.js","CustomTooltip/CustomTooltip.js","AllocationChart/AllocationChart.js","CustomTooltip/CustomTooltipRow.js","Faquestion/Faquestion.js","PortfolioEquity/PortfolioEquity.js","SmartNumber/SmartNumber.js","RoundButton/RoundButton.js","Title/Title.js","CardIconButton/CardIconButton.js","TxProgressBar/TxProgressBar.js","TwitterShareButton/TwitterShareButton.js","utilities/components/ShareModal.js","CustomList/CustomList.js","ActiveCoverages/ActiveCoverages.js","GenericSelector/GenericSelector.js","theme.js","utilities/components/ModalCard.module.scss","TwitterShareButton/TwitterShareButton.module.scss","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","TrancheField/TrancheField.js","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","IconBox/IconBox.js","GenericChart/GenericChart.js","AssetSelector/AssetSelector.js","utilities/components/Header.module.scss","Tos/Tos.module.scss","TransactionField/TransactionField.js","ExecuteTransaction/ExecuteTransaction.js","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","DashboardCard/DashboardCard.module.scss","TableRow/TableRow.js","TableHeader/TableHeader.js","FastBalanceSelector/FastBalanceSelector.js","DashboardCard/DashboardCard.js","Staking/Staking.js","GenericFaqs/GenericFaqs.js","TrancheBox/TrancheBox.js","TrancheWelcome/TrancheWelcome.js","SendTxWithBalance/SendTxWithBalance.js","TrancheDetails/TrancheDetails.js","TranchePage/TranchePage.js","TranchesList/TranchesList.js","GenericPieChart/GenericPieChart.js","TotalBalanceCounter/TotalBalanceCounter.js","TotalEarningsCounter/TotalEarningsCounter.js","PortfolioEquityTranches/PortfolioEquityTranches.js","Tranches/Tranches.js","TokenSwap/TokenSwap.js","LpStaking/LpStaking.js","IdleStaking/IdleStaking.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","PortfolioDonut/PortfolioDonut.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","DeployB2BVesting/DeployB2BVesting.js","configs/globalConfigs.js","utilities/components/BuyModal.js","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/GnosisSafeConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","configs/availableTranches.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","ConnectBox/ConnectBox.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","Migrate/Migrate.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","AssetsList/AssetsList.js","Footer/Footer.module.scss","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","utilities/components/ModalCard.js","Footer/Footer.js","TableCellHeader/TableCellHeader.js","ChartCustomTooltip/ChartCustomTooltip.js","CustomField/CustomField.js","colors.js","FlexLoader/FlexLoader.js"],"names":["AssetField","state","ready","functionsUtil","componentUnmounted","loadField","_callee","fieldName","isRisk","setState","fieldInfo","fieldProps","decimals","addGovTokens","output","govTokens","getGovTokensDistributionSpeed","tokenPrice","_ref2","oldContractBalanceFormatted","_ref3","redeemableBalanceCurveEnd","redeemableBalanceCurveStart","_ref4","redeemableBalanceEnd","redeemableBalanceStart","_ref5","_ref6","earningsCounter","feePercentage","feesStart","feesEnd","_ref7","_ref8","curveApy","earningsCurveStart","amountLentCurve","earningsCurveEnd","_ref9","_ref10","tokenAPY2","earningsStart","amountLent2","earningsEnd","tokenScore","tokenAPR","oldTokenConfig","tokenAPY","govTokensAprs","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","aprChartData","cachedDataKey","cachedData","startTimestamp","y","i","mDate","x","frequencySeconds","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","path","_args","arguments","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","wrap","_context","prev","next","length","undefined","_this","props","token","tokenConfig","abrupt","selectedStrategy","name","isMobile","t0","loadAssetField","account","sent","setStateSafe","tokenBalance","toString","getTokenGovTokens","showPrice","fee","checkMigration","amountToMigrate","amountLent","idleTokenBalance","earnings","Promise","all","getTokenFees","Object","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","times","getCurveAPY","gt","div","plus","redeemableBalance","getTokenScore","score","poolSize","earningsPercCurveDirection","parseFloat","earningsPercCurve","toFixed","earningsPerc","earningsPercDirection","showAPR","migration","oldContract","assign","idle","protocols","values","oldProtocols","forEach","oldProtocol","foundProtocol","find","p","protocolPos","indexOf","isNaN","oldAPY","tokenAPYNoGov","curveAvgSlippage","showTooltip","getGovTokensAprs","t1","allocationChartRowElement","document","getElementById","parentId","rowId","$allocationChartRowElement","window","jQuery","innerWidth","css","innerHeight","parseInt","Math","min","removeEventListener","bind","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","addEventListener","getGlobalConfig","max","strToMoment","Date","format","subtract","_d","getTime","concat","address","getCachedData","id","color","join","data","add","random","push","getFrequencySeconds","getTokenApiData","d","timestamp","fixTokenDecimals","idleRate","setCachedData","aprChartRowElement","$aprChartRowElement","Line","pointSize","lineWidth","useMesh","axisLeft","animate","axisBottom","enableArea","areaOpacity","curve","enableGridX","enableGridY","pointBorderWidth","isInteractive","colors","defs","linearGradientDef","offset","enableSlices","yFormat","value","fill","match","margin","top","right","bottom","left","sliceTooltip","slideData","slice","point","points","react__WEBPACK_IMPORTED_MODULE_12___default","createElement","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_17__","map","protocolName","serieId","protocolEarning","yFormatted","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","key","label","chartProps","keys","PerformanceChartRowElement","$PerformanceChartRowElement","clone","idlePrice","minus","blocknumber","pointLabelYOffset","getArrayPath","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","stop","this","setProps","FunctionsUtil","loadUtils","newState","callback","prevProps","prevState","tokenChanged","accountChanged","mobileChanged","themeModeChanged","themeMode","fieldChanged","contractInitialized","contractsInitialized","transactionsChanged","transactions","filter","tx","status","_this2","oldState","_this3","loader","showLoader","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","size","fontWeight","fontSize","flexProps","justifyContent","funcProps","maxPrecision","minPrecision","icon1","icon","placement","message","tooltipProps","src","icon2","strategyIcon","strategy","strategyName","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","number","react_countup__WEBPACK_IMPORTED_MODULE_11___default","delay","decimal","separator","useEasing","duration","end","start","formattingFn","n","abbreviateNumber","_ref11","countUpRef","style","ref","_ref12","_ref13","_ref14","_ref15","width","alignItems","flexDirection","govTokenConfig","govTokenIndex","distributionFrequency","borderRadius","position","height","ml","zIndex","boxShadow","BNify","lte","showDirection","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_18__","direction","earningsCurve","governanceTokenName","idleTokenConfig","idleDistribution","userDistributionSpeed","distributionSpeed","iconProps","govToken","tooltipMode","buttonLabel","onClick","handleClick","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","type","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_19__","loaderProps","loaderText","selectedToken","inline","CustomComponent","customValue","SmartNumber","Icon","customFieldName","pop","customFieldProps","Text","formattedValue","_isBigNumber","Component","module","exports","headerContainer","headerBgFiller","bgContainer","list","textContainer","Breadcrumb","showPathMobile","react__WEBPACK_IMPORTED_MODULE_5___default","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","_RoundIconButton_RoundIconButton__WEBPACK_IMPORTED_MODULE_7__","buttonProps","border","iconSize","iconName","text","hoverColor","index","link","pathLink","Link","pl","maxWidth","overflow","whiteSpace","textOverflow","borderLeft","theme","divider","e","goToSection","ShortHash","loadData","resolveAddress","shortenHash","hash","getENSName","ensName","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","display","LoadingSpinner","react_default","index_es","className","styles","mx","ButtonLoader","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","RoundIconButton","mainColor","disabled","minWidth","react__WEBPACK_IMPORTED_MODULE_6___default","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_7__","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","ImageButton","image","imageSrc","imageProps","caption","textAlign","px","py","my","isActive","contrastColor","buttonStyle","Fragment","badge","backgroundColor","bgColor","mr","captionPos","subcaption","split","v","lineHeight","ExtLink","target","rel","children","CustomTooltip","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","cardProps","itemPos","xFormatted","mb","AllocationChart","chartData","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","getTokenAllocation","padAngle","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","onMouseEnter","onMouseLeave","tooltipFormat","sliceLabel","radialLabel","tooltip","container","background","cardBg","labels","fontFamily","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","protocolInfo","protocolAddr","toLowerCase","protocolAllocationPercParsed","globalConfigs","stats","hsl","capitalize","protocolIcon","react__WEBPACK_IMPORTED_MODULE_8___default","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","unitProps","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","CustomTooltipRow","pr","flexBasis","flex","textTransform","dangerouslySetInnerHTML","__html","Faquestion","isShowingAnswer","preventDefault","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","isOpened","cursor","h4","question","answer","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","JSON","stringify","enabledTokens","componentDidMount","availableTokens","getEtherscanTxs","etherscanTxs","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","mark","_callee3","filteredTxs","_context3","timeStamp","tokenAmount","action","lt","balance","idleTokens","_x3","apply","currentDate","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","tokensData","_callee4","_context4","_x4","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","filteredTokenData","tokenDecimals","filteredBalances","lastFilteredTx","newBalance","lastTx","lastTxBalance","tokenUsdConversionRate","conversionRateField","chartToken","conversionRate","momentDate","isSameOrAfter","isSameOrBefore","formattedDate","_loop","aggregatedBalances","date","balances","itemIndex","item","floor","toUpperCase","yFormatDecimals","gridYStep","gridYValues","gridYValue","daysCount","daysFrequency","ceil","xScale","yScale","stacked","xFormat","formatMoney","legend","tickSize","tickPadding","orient","legendOffset","legendPosition","tickValues","tickRotation","pointLabel","areaBaselineValue","pointColor","axis","ticks","grid","line","stroke","lineChartStroke","strokeDasharray","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","parentIdHeight","formattedNumber","precision","showUnit","unitPos","unit","RoundButton","Title","HeadingComponent","component","Heading","h1","CardIconButton","isDisabled","align","useIconOnly","iconColor","iconBgColor","actionBg","redeem","textProps","TxProgressBar","txCount","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","initProgressBar","getTransaction","transaction","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","web3","eth","err","_x","_x2","getBlockTime","pt","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","customLog","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","blockNumber","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txHash","txProgressBarData","_context7","localStorage","getItem","parse","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","substr","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","mt","href","getEtherscanTransactionUrl","cancelTransaction","cancelTextColor","cancelTextHoverColor","TwitterShareButton","share","sendGoogleAnalyticsEvent","eventCategory","eventAction","eventLabel","parent","w","open","tweet","twitterIcon","ShareModal","closeModal","regenerator_default","getGlobalConfigs","analytics","google","events","enabled","escape","customText","isOpen","ModalCard","closeFunc","confettiEnabled","react_confetti_default","run","recycle","Header","title","Body","src_TwitterShareButton_TwitterShareButton","React","CustomList","TableHeader","cols","rows","row","rowIndex","TableRow","fieldComponent","CustomField","cardId","Base","loaded","activeCoverages","loadCoverages","getActiveCoverages","coverages","c","includes","collateral","statusColors","statusIcon","statusColor","completed","failed","pending","statusIconProps","portfolioCoverage","titleProps","src_CustomList_CustomList","fileClaimUrl","openWindow","fields","mobile","parentProps","actionLabel","actionDisabled","actionUrl","GenericSelector","loadComponents","selectedTokenChanged","optionsChanged","options","defaultValueChanged","defaultValue","componentsChanged","CustomOptionValue","CustomValueContainer","ControlComponent","innerProps","menuIsOpen","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","CustomIndicatorSeparator","CustomMenu","selectProps","CustomInputContainer","isSearchable","fontSizes","copyColor","fontWeights","searchInput","dark","searchInputHidden","CustomOption","selectedValue","o","genericSelector","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","onChange","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","letterSpacings","lineHeights","solid","copy","serif","counter","space","radii","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","primary","blue","base","gradient-bg","primary-light","light","primary-dark","bgBlue","dark-blue","skyBlue","lightBlue","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","alert","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","deposit","migrate","menuBg","menuHover","flashColor","menuRightBorder","cardHoverShadow","cardBgHover","cardBorder","pageActive","pageInactive","send","swap","boost","swapout","curvein","receive","default","curveout","withdraw","curvedepositin","curvedepositout","blacks","whites","zIndices","messageStyle","shade","tint","success","green","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","bg","radioBtn","TrancheField","protocol","loadTrancheField","tranche","trancheConfig","trancheChanged","protocolChanged","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","trancheDetails","rgb","hex","_CustomField_CustomField__WEBPACK_IMPORTED_MODULE_10__","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","button","IconBox","isVisible","GenericChart","handleWindowSizeChange","chartContainer","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","minHeight","AssetSelector","showCustomField","showBalance","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","changeToken","gradientButton","empty","select","selectDark","input","TransactionField","hashChanged","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_11__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","amount","tokenSymbol","iconSrc","Image","ExecuteTransaction","txStatus","loading","console","log","eventData","methodName","contractName","getTransactionError","callbackReceipt","transactionHash","params","getTransactionParams","getTransactionParamsAsync","sendRawTransaction","contractMethodSendWrapper","ExecuteComponent","react__WEBPACK_IMPORTED_MODULE_9___default","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_11__","network","progressBarProps","execute","componentProps","IdleGovToken","classCallCheck","tokenName","getBalance","asyncToGenerator","getTokenBalance","claimRewards","getPriorVotes","priorVotes","_args3","genericContractCall","refreshIdleSpeed","getUnclaimedTokens","getAPR","IDLETokenConfig","APR","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","getDistribution","slicedToArray","getUniswapConversionRate","convertTokenBalance","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","blocksPerYear","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","totalSpeed","_args10","_context10","availableStrategies","_callee9","idleSpeed","userPoolShare","tokenSpeed","_context9","disabledTokens","getUserPoolShare","_x7","fixDistributionSpeed","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","env","process","profiler","idleGovToken","trimEth","toBN","utils","BN","toEth","wei","fromWei","toWei","htmlDecode","innerHTML","childNodes","nodeValue","BNify_obj","s","BigNumber","String","_len","Array","_key","logs","messagesEnabled","moment","customLogError","_console","_len2","_key2","errorsEnabled","getContractByName","contract","contracts","normalizeSimpleIDNotification","replace","str","replaceArrayProps","arr1","arr2","stripHtml","html","tmp","textContent","innerText","scrollTo","to","scrollY","change","currentTime","easeInOutQuad","t","b","animateScroll","val","getQueryStringParameterByName","url","location","results","RegExp","exec","decodeURIComponent","getTxAction","depositProxyContractInfo","migrationContractAddr","migrationContract","migrationContractOldAddrs","oldAddresses","batchMigration","batchMigrationContractAddr","isMigrationTx","contractAddress","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","shortHash","txStart","txEnd","networkId","ensConfig","TTL","provider","ens","addressCheck","current","supportedNetworks","checkAddress","currentProvider","ENS","ensAddress","getEnsAddress","getName","getAddress","getAccountPortfolioTranches","availableTranches","portfolio","tranches","avgAPY","totalEarnings","totalAmountLent","totalEarningsPerc","_args5","tranchesBalance","totalBalance","protocolConfig","trancheTokenBalance","tranchePrice","trancheUserInfo","trancheApy","amountDeposited","trancheEarnings","loadTrancheFieldRaw","getTrancheUserInfo","toConsumableArray","trancheInfo","trancheWeight","getAccountPortfolio","orderedTokensBalance","depositedTokens","_args8","totalBalanceConverted","tokenBalanceConverted","getIdleTokenPrice","tokenAprs","tokenWeight","amountLentToken","tokenEarnings","getAmountDeposited","getTokenAprs","avgApy","getCurveAvgSlippage","processedTxs","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","_args9","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","deposited","getCurveAvgBuyPrice","avgBuyPrice","prevAvgBuyPrice","getAvgBuyPrice","_args11","idleTokensBalance","getFirstDepositTx","deposits","firstDepositTx","getDashboardSectionUrl","section","origin","asyncTimeout","ms","getDepositTimestamp","_callee13","firstDepositTxs","_args13","_context13","reduce","acc","getTrancheRewardTokensInfo","_callee15","stakingRewards","tokensDistribution","_context15","_ref19","_callee14","eventFilters","transfers","previousHarvest","latestHarvest","previousBlock","_ref20","_ref21","prevBlockInfo","lastBlockInfo","lastBlockPoolSize","elapsedBlocks","elapsedSeconds","transferAmount","tokensPerBlock","tokensPerSecond","tokensPerYear","convertedTokensPerYear","tokenApr","tokenApy","_context14","CDO","CDORewards","getContractEvents","fromBlock","toBlock","getBlockInfo","genericContractCallCached","returnValues","apr2apy","apr","apy","_x9","_ref22","_callee17","defaultEventsConfig","underlyingEventsConfig","underlyingEventsFilters","_ref23","_ref24","underlying_transfers","trancheToken_transfers","totalAmountDeposited","_context17","_ref25","_callee16","trancheTokenTransferEvent","tokenTransferEvent","trancheTokenAmount","blockInfo","hashKey","_context16","trancheTokens","_x13","_x10","_x11","_x12","getTrancheUserTransactions","_ref26","_callee18","_context18","_x14","_x15","_x16","getAmountDepositedTranche","_ref27","_callee19","_context19","_x17","_x18","_x19","_ref28","_callee20","_ref29","_ref30","userAvgPrice","_context20","_x20","_x21","getAmountLent","_callee21","amountLents","_args21","_context21","getEtherscanBaseTxs","_callee22","firstBlockNumber","endBlockNumber","debug","firstIdleBlockNumber","requiredNetwork","etherscanInfo","etherscanBaseTxs","etherscanBaseEndpoint","etherscanApiUrl","lastCachedTx","lastCachedBlockNumber","etherscanEndpointLastBlock","latestTxs","latestBlockNumbers","txs","requestCount","requestStatus","cachedRequests","_args22","_context22","endpoints","REACT_APP_ETHERSCAN_KEY","getCachedRequest","result","makeCachedRequest","filterEtherscanTxs","saveEtherscanTxs","makeRequest","now","_callee23","_args23","_context23","filterCurveTxs","endpoint","txsToStore","cachedRequest","saveCachedRequest","_callee24","_ref35","allAvailableTokens","_args24","_context24","processStoredTxs","sort","_ref36","_callee25","_args25","_context25","_x22","_ref37","_callee26","processTxs","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args26","_context26","tokenMigrationToolParams","curveTokenConfig","idleToken","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenDecimal","tokenValue","newValue","objectSpread","iTxs","withdrawnValue","processEtherscanTransactions","_x23","addStoredTransaction","txKey","tokenKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref38","_callee31","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args31","_context31","baseTokenConfig","baseToken","baseTokenAddress","_ref39","_callee30","minedTxs","_context30","_ref40","_callee29","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context29","getCurveTokenPrice","_ref41","_callee27","_context27","getTransactionReceipt","_x28","_x29","topics","baseTokensConfig","t2","_ref42","_callee28","_context28","_x30","_x31","_x26","_x27","_x25","_x24","_ref43","_callee37","txsToProcess","_args37","_context37","_ref44","_callee36","_context36","_ref45","_callee35","isStoredTx","allowedMethods","pendingStatus","txSucceeded","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context35","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","method","created","_ref46","_callee32","_context32","txReceipt","_x36","_x37","_ref47","_callee33","_context33","_x38","_x39","raw","_ref48","_callee34","_context34","_x40","_x41","abi","decodeLog","internalType","_token","_x34","_x35","_x33","_x32","alias","getCustomAddress","setCustomAddress","customAddress","_ref49","_callee38","error_callback","config","_args38","_context38","catch","_x42","makeEtherscanApiRequest","_ref50","_callee39","apiKeyIndex","apiKey","_args39","_context39","_x43","_ref51","_callee40","return_data","_args40","_context40","_x44","code","errorCode","array","prop","shift","configs","checkUrlOrigin","baseURL","checkUrlBeta","betaURL","sendGoogleAnalyticsPageview","_callee41","page","googlePageviewInfo","isOrigin","_args41","_context41","ga","_ref53","_callee43","googleEventsInfo","debugEnabled","originOk","currentNetwork","_args43","_context43","addPostfixForTestnet","availableNetworks","_ref54","_callee42","_context42","hitCallback","hitCallbackFail","_x46","_x47","_x45","createContract","_ref55","_callee44","_context44","Contract","_x48","_x49","_x50","getWalletProvider","defaultProvider","simpleIDPassUserInfo","userInfo","simpleID","email","initSimpleID","passUserInfo","baseurl","getEtherscanAddressUrl","decimalCount","thousands","abs","negativeSign","Number","j","getSnapshotProposals","_callee47","activeOnly","whitelist","proposals","currTime","validProposals","_args47","_context47","addr","msg","payload","_ref57","_callee46","checkedStrategies","_context46","snapshot","metadata","strategies","_ref58","_callee45","_context45","symbol","_x52","_x51","_ref59","_callee48","endTimestamp","forceStartTimestamp","frequency","order","limit","filteredCachedData","_filteredData","apiInfo","filteredData","_args48","_context48","rates","_x53","getTokenExchangeRate","_ref60","_callee49","exchangeRateParams","exchangeRate","_context49","_x54","_x55","getTokenDecimals","_ref61","_callee50","_context50","_x56","aprs","allocations","avgApr","aprWeighted","allocation","quantity","hour","day","week","getIdleStakingRewardsTxs","_callee51","feeDistributorConfig","etherscanEndpoint","etherscanTxlist","_context51","getProtocolInfoByAddress","integerValue","ROUND_FLOOR","normalizeTokenDecimals","normalizeTokenAmount","normalizedTokenDecimals","checkContractPaused","_callee52","contractPaused","_args52","_context52","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref64","_callee54","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context54","lastAllocationsPromise","_ref65","_callee53","lastAllocations","_context53","_x58","_x59","alloc","_x57","_ref66","_callee55","migrationEnabled","oldContractBalance","oldContractTokenDecimals","oldContractName","_context55","getContractBalance","_x60","_x61","_ref67","_callee56","eventName","_args56","_context56","getContractPastEvents","_x62","_x63","estimateMethodGasUsage","_ref68","_callee57","methodParams","_contract$methods","functionCall","gasLimit","_ref69","_ref70","_args57","_context57","methods","getGasPrice","estimateGas","_x64","_x65","_ref71","_callee58","userAddress","signedParameters","callback_receipt","_contract$methods2","_context58","on","once","confirmationNumber","receipt","_x66","_x67","_x68","_x69","_x70","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","chainId","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref72","_callee59","biconomyInfo","res","_context59","limits","apiId","headers","x-api-key","_x71","sendTxWithPermit","_ref73","_callee60","_contract$methods3","messageToSign","_this$getSignaturePar","_context60","encodeABI","_address","personal","sign","_x72","_x73","_x74","_x75","_x76","_x77","buildBiconomyErc20ForwarderTx","_ref74","_callee61","tokenAddress","permitType","callData","buildParams","_context61","txGas","erc20ForwarderClient","buildTx","_x78","_x79","_x80","_x81","_x82","_ref75","_callee63","_context63","_ref76","_callee62","_context62","_x84","_x85","_x83","sendBiconomyTxWithErc20Forwarder","_ref77","_callee64","req","metaInfo","txResponse","fetchReceiptIntervalId","_context64","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x86","_x87","_x88","_x89","sendBiconomyTxWithPersonalSign","_ref78","_callee65","_this$getSignaturePar2","_context65","getNonce","call","_x90","_x91","_x92","_x93","signPermitEIP2612","_ref79","_callee66","erc20Name","owner","spender","deadline","domain","permit","domainData","_context66","getChainId","version","verifyingContract","types","EIP712Domain","Permit","primaryType","jsonrpc","substring","_x94","_x95","_x96","_x97","_x98","_x99","_x100","_x101","signPermit","_ref80","_callee67","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","expiry","EIPVersion","permitName","_args67","_context67","net","getId","round","nonceMethod","pow","allowed","response","_x102","_x103","_x104","_ref81","_callee68","permitParams","methodAbi","useNonce","_args68","_context68","_jsonInterface","f","inputs","unshift","_x105","_x106","_x107","_x108","_x109","_x110","_x111","sendSignedTx","_ref82","_callee69","MetaTransaction","dataToSign","_context69","_x112","_x113","_x114","_x115","_x116","checkTokenApproved","_ref83","_callee70","contractAddr","walletAddr","_ref84","_ref85","allowance","_context70","getAllowance","gte","_x117","_x118","_x119","_ref86","_callee71","_context71","_x120","_x121","_x122","contractMethodSendWrapperWithValue","txData","disableERC20","toTwosComplement","enableERC20","getTrancheStakedBalance","_ref87","_callee72","stakedBalance","_args72","_context72","_x123","_x124","_ref88","_callee73","field","_args73","_context73","_x125","_x126","_x127","_x128","_x129","_x130","_x131","_x132","_ref89","_callee74","formatValue","strategyConfig","idleStrategyAddress","_ref90","_ref91","totalSupply","virtualPrice","_ref92","_ref93","staked1","lastPrice1","_ref94","_ref95","deposited1","lastPrice","idleGovTokenConfig","rewardsTokensInfo","_ref96","_ref97","rewardsTokens","incentiveTokens","_args74","_context74","Strategy","initContract","AA","BB","getTokenTotalSupply","IDLE","rewardTokenAddr","govTokenAddress","getGovTokenConfigByAddress","_x133","_x134","_x135","_x136","_x137","_x138","_x139","_ref98","_callee75","addCurveApy","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref99","_ref100","curveAvgBuyPrice","curveTokenBalance","_ref101","_ref102","amountLentCurve1","redeemableBalanceCurve","_ref103","_ref104","earningPerYear","_ref105","_ref106","amountLent1","redeemableBalance1","depositTimestamp","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","selectedTokenConfig","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref107","_ref108","tokenPriceFirstDeposit","_ref109","_ref110","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref111","_ref112","tokenAPY1","_earningPerYear","_govTokenConfig2","_ref113","_ref114","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","_ref115","_ref116","amountLentCurve2","redeemableBalanceCurve1","_ref117","_ref118","redeemableBalance2","_args75","_context75","getCurveTokenBalance","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getStkAaveUserDistribution","getIdleGovToken","distributionMode","t3","getCompDistribution","getStkAaveDistribution","t4","getCompAvgApr","t5","t6","t7","getTokenPrice","getUserTokenFees","t8","t9","getGovTokenUserBalance","getGovTokensUserTotalBalance","_x140","_x141","_x142","_x143","getIdleTokenSupply","_ref119","_callee76","idleTokenSupply","_args76","_context76","_x144","getIdleTokenPriceWithFee","_ref120","_callee77","_ref121","_ref122","priceWFee","_args77","_context77","eq","_x145","_x146","_ref123","_callee78","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args78","_context78","_x147","clearCachedData","useLocalStorage","expirationDate","_ref124","_callee79","_ref125","_ref126","idleTokensTotalSupply","userShare","_context79","_x148","_x149","_callee81","coverProtocolConfig","nexusMutualConfig","_args81","_context81","_ref128","_callee80","coverage","coverageTokens","protocolImage","_context80","tokens","expirationTimestamp","utc","_x150","getNexusMutualCoverages","sumAssured","coverAssetConfig","yieldTokenConfig","collateralIcon","incident","claimId","protocolImageDark","coverDetails","validUntil","route","_ref129","_callee83","incidentsInfo","_ref130","_ref131","coverBoughtEvents","claimSubmittedEvents","nexusMutualCoverages","_context83","directProps","startBlock","contractInfo","buyer","_ref132","_callee82","cover","coverId","claimSubmittedEvent","_ref133","_ref134","incidentEvents","matchedIncidents","matchedIncident","expiryDate","payoutOutcome","claimedAmount","claimTxReceipt","claimedAmountLog","claimableAmount","claimablePrice","maxCoveredAmount","coveredTokenAmount","_ref135","_ref136","_context82","claim","productId","incidentDate","yieldTokenCoverGracePeriod","curr","priceBefore","underlying","underlyingConfig","coverAsset","findIndex","_x152","_x151","getBatchedDepositExecutions","_ref137","_callee84","_context84","_x153","getBatchedDeposits","_callee86","filter_by_status","batchDepositConfig","batchedDeposits","_args86","_context86","_ref139","_callee85","currBatchIndex","batchIndex","_ref140","_ref141","batchExecutions","batchTotal","batchRedeem","batchDeposit","batchTotals","batchRedeems","batchDeposits","lastExecution","_context85","_x154","getETHBalance","_ref142","_callee87","fixDecimals","_args87","_context87","_x155","_ref143","_callee88","_ref144","_ref145","_args88","_context88","_x156","_x157","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","script","attr","readyState","onreadystatechange","onload","body","appendChild","isValidJSON","_ref146","_callee89","_args89","_context89","_x158","_ref147","_callee90","_args90","_context90","_x159","_ref148","_callee91","_args91","_context91","_x160","_x161","getProtocolBalance","_ref149","_callee92","_context92","_x162","_x163","getAprs","_ref150","_callee93","_context93","addresses","_x164","genericIdleCall","_ref151","_callee94","callParams","_args94","_context94","_x165","_ref152","_callee95","_contract$methods4","_args95","_context95","_x166","_x167","getTxDecodedLogs","_ref153","_callee97","logAddr","decodeLogs","internalTransfers","_context97","_ref154","_callee96","_context96","_x172","_x173","_x168","_x169","_x170","_x171","blocksToSeconds","blocks","blocksPerSeconds","getBlockNumber","_callee98","_context98","_ref156","_callee99","_context99","getBlock","_x174","_ref157","_callee100","_args100","_context100","getPastEvents","_x175","_x176","_ref158","_callee101","_args101","_context101","_x177","_x178","_ref159","_callee102","_contract$methods5","_args102","_context102","_x179","_x180","_ref160","_callee103","_args103","_context103","_x181","_x182","getUnlentBalance","_ref161","_callee104","unlentBalance","_context104","_x183","_ref162","_callee105","_args105","_context105","_x184","_ref163","_callee107","protocolsAprs","exchangeRates","protocolsBalances","govTokensBalances","_ref167","_ref168","_args107","_context107","totalAllocationConverted","totalAllocationWithUnlentConverted","_ref164","_callee106","_ref165","_ref166","protocolBalance","protocolAllocation","_context106","functions","_x186","_x187","protocolAllocationPerc","getGovTokensBalances","total","getTokenConversionRate","_x185","getSushiswapPoolTokenPrice","_ref169","_callee108","pairAddresses","_ref170","_ref171","token0_address","token1_address","poolReserves","token0_config","token1_config","_ref172","_ref173","token0_price","token1_price","token0_pool","token1_pool","totalPoolSize","poolTokenPrice","_context108","getSushiswapConversionRate","_x188","_x189","_ref174","_callee109","tokenConfigFrom","tokenConfigDest","WETHAddr","one","_context109","_x190","_x191","_ref175","_callee110","unires","_context110","addressForPrice","_x192","_x193","getCurveDepositedTokens","_ref176","_callee111","idleTokensBalances","remainingCurveTokens","_args111","_context111","_x194","getCurveUnevenTokenAmounts","_ref177","_callee112","amounts","max_burn_amount","unevenAmounts","_context112","getCurveDepositContract","_x195","_x196","_callee113","curveRatesInfo","_context113","strategyTokens","getCurveAPYContract","_callee114","blocksForPrevTokenPrice","_ref180","_ref181","prevTokenPrice","blocksMultiplier","curveAPR","_context114","getCurveTokenSupply","_callee115","_context115","getCurvePoolContract","_callee116","_args116","_context116","_callee117","_args117","_context117","_ref185","_callee118","_ref186","_ref187","_context118","_x197","_callee119","depositContractInfo","_context119","getCurveZapContract","_callee120","zapContractInfo","_context120","_callee121","poolContractInfo","_context121","getCurveSwapContract","_callee122","migrationContractInfo","_context122","getCurveIdleTokensAmounts","_callee124","max_slippage","curveTokenSupply","curveTokenShare","n_coins","_args124","_context124","_ref193","_callee123","coinIndex","curveIdleTokens","_context123","migrationParams","_x198","getCurveTokensAmounts","_callee126","useCoinIndex","_args126","_context126","_ref195","_callee125","_ref196","_ref197","idleTokenPrice","totalTokenSupply","_context125","_x199","getCurveAmounts","_ref198","_callee128","_args128","_context128","_ref199","_callee127","_context127","_x202","_x200","_x201","getCurveTokenAmount","_ref200","_callee129","_args129","_context129","_x203","getCurveSlippage","_ref201","_callee130","uneven_amounts","depositContract","_ref202","_ref203","Sv","_args130","_context130","_x204","_x205","_ref204","_callee131","aTokenIdleSupply","annualize","aaveDistribution","stkAAVETokenConfig","aTokenConfig","aaveIncentivesController_address","IAaveIncentivesController_name","_ref205","_ref206","aTokenTotalSupply","assetData","aaveAllocationPerc","aaveSpeed","secondsPerYear","aavePoolShare","_args131","_context131","_x206","_callee133","_args133","_context133","_ref208","_callee132","_ref209","_ref210","_context132","_x207","getStkAaveApr","_ref211","_callee134","aaveConversionRate","stkAaveAPR","destTokenConfig","stkAaveValue","_args134","_context134","_x208","_x209","getCompAPR","_ref212","_callee135","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args135","_context135","_x210","_x211","getCompSpeed","_ref213","_callee136","cTokenAddress","compSpeed","_context136","_x212","_ref214","_callee137","cTokenInfo","compoundAllocationPerc","_ref215","_ref216","cTokenTotalSupply","compoundPoolShare","_args137","_context137","_x213","_callee139","_args139","_context139","_ref218","_callee138","_ref219","_ref220","_context138","_x214","_callee141","_args141","_context141","_ref222","_callee140","_ref223","_ref224","compApr","_context140","_x215","getTokensCsv","_callee144","csv","_context144","prototype","sum","pv","cv","avg","_ref226","_callee143","_context143","_ref227","_callee142","header","aprAvg","scoreAvg","lastRow","_context142","protocolsData","p1","p2","rate","idleScore","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","avgScore","_x217","_x216","_callee146","convertToken","_args146","_context146","_ref229","_callee145","compTokenBalance","_context145","_x218","speed","mode","multipliers","block","second","month","year","getGovTokensUserDistributionSpeed","_ref230","_callee148","govTokensUserDistribution","_args148","_context148","_ref231","_callee147","_context147","_x220","_x219","_ref232","_callee150","govTokensDistribution","tokenGovTokens","_args150","_context150","_ref233","_callee149","govSpeed","_context149","_x222","_x221","_ref234","_callee152","_args152","_context152","_ref235","_callee151","_ref236","_ref237","_ref238","_ref239","cTokenConfig","_context151","aprTooltipMode","_x225","_x223","_x224","_callee154","_args154","_context154","_ref241","_callee153","govTokenBalance","tokenConversionRate","fromTokenConfig","_context153","_x226","_callee155","checkShowBalance","govTokensUserBalances","govTokensEarnings","_args155","_context155","getGovTokensUserBalances","govTokenAmount","getGovTokensIndexes","_ref243","_callee157","govTokensAmounts","_context157","getGovTokensUserAmounts","_ref244","_callee156","_context156","getGovTokenAddessByIndex","_x229","_x230","_x227","_x228","_ref245","_callee158","_context158","_x231","_x232","_ref246","_callee159","_context159","_x233","_x234","_callee162","govTokenConfigForced","_args162","_context162","_ref248","_callee161","_context161","_ref249","_callee160","_context160","_x236","_x237","_x235","_callee163","_args163","_context163","_callee164","_ref252","_ref253","gain","fees","_args164","_context164","_ref254","_callee165","_args165","_context165","_x238","getTotalTVL","_callee166","tokensTVL","_context166","getTokensTVL","totalTVL","tokenInfo","tokenTVL","_callee170","_context170","_ref257","_callee169","_context169","_ref258","_callee168","oldTokenTVL","idleTokenName","_ref259","_ref260","_ref264","_ref265","oldTokenPrice","oldTotalSupply","_context168","showAUM","_ref261","_callee167","_ref262","_ref263","govTokenConversionRate","govTokenBalanceConverted","_context167","_x241","_x240","_x239","getSubstackLatestFeed","_callee171","endpointInfo","idleSubstackFeed","latestFeed","_context171","items","getAggregatedStats","_callee172","tvls","totalAUM","_args172","_context172","getAggregatedStats_chain","_callee176","avgAPR","_args176","_context176","_ref269","_callee175","_context175","_ref270","_callee174","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context174","_ref271","_callee173","_ref272","_ref273","_context173","_x244","_x243","_x242","getTokenApy","_ref274","_callee177","_context177","_x245","getTokensToMigrate","_callee180","tokensToMigrate","_args180","_context180","_ref276","_callee179","_context179","_ref277","_callee178","_ref278","_context178","_x247","_x246","getProtocolsTokensBalances","_callee182","tokenBalances","minTokenBalance","protocolsTokens","_args182","_context182","_ref280","_callee181","tokenContract","_context181","_x248","_ref281","_callee183","_args183","_context183","_x249","_x250","_x251","getAvgAPYStats","_ref282","_callee184","apiResults","_args184","_context184","_x252","_x253","_ref283","_callee185","count","_conversionRate","_args185","_context185","_x254","_x255","_ref284","_callee186","_ref285","_ref286","_context186","protocolScore","getTokenScoreApi","_x256","_x257","_ref287","_callee187","scores","_context187","_x258","_x259","_ref288","_callee190","Aprs","protocolsApys","idleGovTokenShowAPR","idleAPR","_args190","_context190","_ref289","_callee189","addrIndex","protocolApr","protocolApy","govTokenAPR","_context189","_ref290","_callee188","_context188","_x263","_x261","_x262","_x260","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","defaultOpacity","hidden","interactive","rainbow","FieldComponent","rowProps","colInfo","colIndex","visible","fieldIndex","colProps","pb","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","desc","FastBalanceSelector","onMouseDown","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","DashboardCard","mouseOver","isRainbow","active","onMouseOut","setMouseOver","onMouseOver","titleParentProps","description","Staking","selectedOption","toolProps","SelectedComponent","selectToken","FlexLoader","GenericFaqs","openedAnswer","selectedSection","questions","setSection","showSections","isSelected","borderBottom","q","toggleAnswer","baseName","long","features","feature","selectTrancheType","tranchesDetails","trancheType","TrancheBox","SendTxWithBalance","inputValue","permitEnabled","showPermitBox","approveEnabled","buttonDisabled","contractApproved","fastBalanceSelector","changeInputValue","call_callback","changeInputCallback","setInputValue","selectedPercentage","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","approve","callbackApprove","callbackReceiptApprove","checkContractApproved","executeTx","_amount","_params","eventValue","getPermitTransactionParams","approveCallback","actionChanged","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","contractChanged","tokenConfigChanged","viewOnly","connectorName","infoBox","steps","step","stepIndex","required","checked","togglePermitEnabled","approveDescription","balanceSelectorInfo","placeholder","ConnectBox","TrancheDetails","infoText","canUnstake","canWithdraw","activeModal","balanceProp","trancheBalance","selectedAction","userHasAvailableFunds","resetModal","loadActionData","selectedProtocol","selectedTranche","trancheAPY","cdoConfig","cantUnstake","cantWithdraw","otherTrancheType","otherTrancheDetails","flexWrap","setSelectedAction","src_SendTxWithBalance_SendTxWithBalance","transactionSucceeded","contractApprovedCallback","BuyModal","showInline","availableMethods","buyToken","TranchePage","loadTransactions","filteredTranchesTypes","src_TrancheDetails_TrancheDetails","TrancheWelcome","src_GenericFaqs_GenericFaqs","","TransactionsList","transactionsList","availableActions","TranchesList","enabledProtocols","GenericPieChart","showLegend","itemWidth","itemHeight","translateY","symbolSize","anchor","itemTextColor","symbolShape","effects","defaultImage","defaultLabel","TotalBalanceCounter","counterEnd","counterStart","loadTotalEarnings","counterStyle","build_default","TotalEarningsCounter","PortfolioEquityTranches","ChartCustomTooltip","ChartCustomTooltipRow","Tranches","trancheRoute","userHasFunds","useTrancheType","portfolioLoaded","allocationChartData","portfolioEquityQuickSelection","loadPortfolio","then","urlParams","param1","param3","param2","availableTranchesChanged","tranchesConfig","tranchesTokens","tranchesBalances","weight","_this4","portfolioDonutData","balanceValue","trancheName","balanceInfo","_this5","breadcrumbPath","goBack","src_TranchePage_TranchePage","src_TotalBalanceCounter_TotalBalanceCounter","src_TotalEarningsCounter_TotalEarningsCounter","src_GenericPieChart_GenericPieChart","aligItems","setPortfolioEquityQuickSelection","src_PortfolioEquityTranches_PortfolioEquityTranches","src_TranchesList_TranchesList","selectTranche","textSize","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","selectDestToken","paymentProvider","providerInfo","initProps","buttonId","initParams","getInitParams","render","remoteResources","scriptID","remoteResourceParams","precall","async","parentElement","head","stylesheetId","loadTokens","fromTokenChanged","destTokenChanged","loadKyberWidget","LpStaking","globalStats","statsLoaded","rewardMultiplier","accountingData","successMessage","rewardTokenPrice","tokenWrapperProps","showTokenWrapperEnabled","updateData","selectedActionChanged","contractApprovedChanged","contractInfoChanged","userStakedBalance","totalStakedBalance","totalStakingShares","userTotalStakingShare","rewardsPerDay","stakedBalanceUSD","rewardsPerYearUSD","rewardToken","normalizedInputValue","unstakeRewards","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalRewards","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","programDuration","initialLockedShares","durationSec","stakingShare","maxMultiplier","distributionSpeedMultiplier","maxBonusDays","currentRewards","stakedTokensLog","stakedTokens","unstakedTokensLog","unstakedTokens","rewardTokenConfig","receivedRewardsLog","receivedRewards","startContract","wrapMethod","destContract","unwrapMethod","_this6","loadStats","_this7","StatsCard","isStake","isUnstake","isStats","txAction","poolLink","statInfo","setAction","IdleStaking","maxApr","lockPeriods","lockedEnd","lockExpired","claimedRewards","increaseAction","lockPeriodInput","internalInfoBox","distributedRewards","selectedLockPeriod","lockPeriodTimestamp","lockEndDateIsMaxEndDate","feeDistributor","lockPeriodChanged","increaseActionChanged","calculateStkIDLEAmount","minLockPeriod","maxLockPeriod","minDate","maxDate","isAfter","endDate","endDateTime","maxDateTime","stkIDLEAmount","_value","_unlock_time","etherscanRewardsTxs","tokenTotalSupply","claimableRewards","lockedInfo","tokenUserBalance","claimable","claimEvents","depositEvents","totalRewardsDays","totalClaimedUser","recipient","totalLockedFunds","stkTokenTotalSupply","claimableRewardsFormatted","totalRewardsFormatted","userDeposited","totalCollectedRewards","stakeStartTime","stakedTime","event","ts","depositValue","stakePeriod","currentProfit","stakePeriodWeeks","lockEndDate","currDate","isValid","lockedTokensLog","lockedTokens","increaseAmountTokensLog","increaseTokens","_this8","isLock","isClaim","isIncrease","canIncrease","reward","setIncreaseAction","changelockPeriodInput","selectLockPeriod","Button","getIncreaseTimeParams","NexusMutual","quote","1","2","periodOptions","30","60","90","365","capacity","coverCost","amountValue","periodValue","yearlyCost","maxCapacity","amountValid","periodValid","claimableCovers","tokenApproved","selectedPeriod","maxPriceWithFee","transactionParams","transactionValue","yieldTokenBalance","selectedUnderlying","yieldTokenApproved","claimButtonDisabled","selectedCoverToClaim","defaultClaimableCover","selectedUnderlyingConfig","changeAmount","changePeriod","selectPeriod","approveSucceeded","yieldTokenApproveSucceeded","claimInputChange","normalizedAmount","getClaimTransactionParams","realAddress","claimTransactionSucceeded","loadContracts","buyCoverTransactionSucceeded","validClaimableCoverFromParam","paramIsValidToken","changeSelectedToken","baseEndpoint","selectedUnderlyingChanged","loadTokenData","isETH","getPoolCapacity","coverData","period","coverAmount","currency","asset","quoteURL","encodeParameters","priceInNXM","expiresAt","generatedAt","COVER_TYPE","basePrice","priceWithFee","mul","divn","amountInWei","textDecoration","activeColor","reset","changeSelectedUnderlying","setMaxCoverAmount","borderStyle","periodInfo","getQuote","selectCoverToClaim","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","mintLog","mintedAmount","withdrawLog","withdrawnAmount","fullWidth","connectAndValidateAccount","PortfolioDonut","totalFunds","parentWidth","tokenPercentage","tokenColorHsl","radialLabelsLinkOffset","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","2 Years","5 Years","loadEarnings","stepsCount","aggregatedEarnings","earningsYear","earningsPercStep","possibleSteps","maxPossibleStep","maxCountStep","orderedTokensEarnings","estimationStep","option","setEstimationStepsPerc","tokenIndex","estimationStepPerc","finalEarnings","cursorPerc","tokenIcon","tokenRGBColor","borderTop","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","estimationLabel","DashboardIconButton","StrategyPage","aggregatedValues","remainingTokens","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","availableTokensChanged","batchInfo","redeemable","totalBalanceWithScore","govTokensTotalBalance","govTokensUserBalance","govTokensTotalBalanceTooltip","apyLong","riskScore","yieldFarming","src_PortfolioDonut_PortfolioDonut","toolName","toolIndex","toolConfig","src_DashboardIconButton_DashboardIconButton","ActiveCoverages","AssetsList","src_EarningsEstimation_EarningsEstimation","BatchDeposit","canClaim","canDeposit","usePermit","hasDeposited","permitSigned","batchCompleted","claimSucceeded","componentLoaded","executeSucceeded","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","executeSucceededChanged","callbackExecute","callbackReceiptExecute","functionInfo","permitContract","batchDepositInfo","depositEnabled","availableStrategiesKeys","selectStrategy","obj","strategyAvailableTokens","migrateFunction","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","canExecuteBatch","strategyDefaultValue","openTooltipModal","Migrate","useMetaTx","showActions","isMigrationTool","showBalanceSelector","migrationIcon","toMigrate","callbackPermit","migrationText","minPoolSize","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","balancerTokenConfig","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","apyPrice","selectCoverage","isMint","isBuyClaim","isBuyNoClaim","TokenMigration","changeFromToken","convertTool","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","DeployB2BVesting","actions","actionIndex","validated","viewAction","editAction","newAction","maxContracts","actionValid","actionInputs","claimedTokens","deployedContracts","contractDeployed","validateForm","checkInputs","vesterImplementation","proxyCreated","deployedContractsAddresses","implementation","proxy","vestingPeriod","availableBalance","depositAmounts","claimedTokensLog","returnString","fieldPattern","inputIndex","inputInfo","getPatternByFieldType","inputValid","actionValue","defineProperty","txError","deployedContract","idleAddress","isLastAction","clonedVesterAddress","ProxyCreated","ownerAddress","recipientAddress","initData","depositContracts","claimContracts","onSubmit","handleSubmit","setEditAction","fieldType","pattern","inputChange","addAction","deleteAction","setNewAction","setViewAction","readOnly","depositCallback","claimCallback","appName","forumURL","darkModeEnabled","countries","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","gnosis","fortmatic","portis","authereum","torus","trezor","ledger","ledgerlive","custom","newsletterSubscription","messages","scoreShort","apyShort","cheapRedeem","curveBonusSlippage","directMint","performanceFee","govTokenApr","govTokenRedeemableBalance","riskScoreShort","redeemSkipGov","batchDepositExecutionSchedule","curveInstructions","pageView","modals","first_deposit_referral","first_deposit_share","welcome","dashboard","baseRoute","governance","test","availableContracts","FeeTreasury","PriceOracle","GovernorAlpha","EcosystemFund","IdleController","7","delegates","imageInactive","poolContract","CurvePool","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","idleUSDCYield","idleUSDTYield","DAI","USDC","SLP","COMP","stkAAVE","aToken","ProxyFactory","MinimalInitializableProxyFactory","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","SushiswapRouter","SushiV2Router02","UniswapRouter","UniswapV2Router02","BalancerExchangeProxy","zeroExInstant","orderSource","affiliateInfo","feeRecipient","stake","unstake","comingSoon","titlePostfix","govTokensEnabled","chartColor","iconInactive","iconInactiveDark","best","descLong","descShort","risk","substack","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","chart","labelTextColorModifiers","performanceTooltip","USD","USDT","TUSD","SUSD","WBTC","WETH","RAI","disabledCharts","FEI","idleDAI+idleUSDC+idleUSDT","compound","aavev2WithStkAAVE","rateField","compoundWithCOMP","fulcrum","dsr","dydx","iearn","aave","aavev2","cream","fuse","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","3","4","42","1337","isForked","requiredConfirmations","enabledNetworks","accountBalanceMinimum","providers","infura","nexus","etherscan","REACT_APP_ETHERSCAN_KEY2","REACT_APP_ETHERSCAN_KEY3","REACT_APP_ETHERSCAN_KEY4","baseUrl","urls","biconomy","enableLogin","disabledWallets","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","getNetwork","networkName","appOrigin","appId","renderNotifications","notifications","tools","subComponent","stkIDLE","StakingFeeDistributor","LpStakingAbi","SushiLiquidityPool","nexusMutual","IdleTokenV4","ERC20","NexusMutualDistributor","NexusMutualIncidents","b2bVesting","B2BVester","ethWrapper","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","showAllTokens","tokenSwap","ETH","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","insurance","imageDark","payments","bank","showDefaultOnly","card","wallet","wyre","supportedMethods","supportedCountries","supportedTokens","envParams","accountId","prod","getInfo","selectedMethod","buyParams","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","wyreStyle","ramp","hostAppName","hostApiKey","REACT_APP_RAMP_KEY","variant","hostLogoUrl","swapAsset","RampInstantSDK","getAccountBalance","purchase","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","selectedCountry","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","onSuccess","onClose","tokenParams","RimbleWeb3_context","connector","ethereum","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","decodeLogsData","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","selectedProvider","availableProviders","renderPaymentMethod","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","componentWillMount","getProviderInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","providerSupportToken","defaultPaymentProvider","selectProvider","ethAvailable","tokenAvailable","selectMethod","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","countryCode","methodInfo","loadAvailableMethods","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","InnerComponent","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","noOptionsMessage","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","Footer","Tos","h2","h3","listStyle","theme_dark","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","possibleConstructorReturn","getPrototypeOf","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","GnosisSafeConnector","SafeAppConnector","safeLoaded","checkSafeApp","activate","getAccount","getSafeInfo","isSafeApp","deactivate","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","disconnect","close","WalletConnectConnector","WalletConnectProvider","infuraId","defaultNetwork","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","REACT_APP_INFURA_KEY","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","WrongNetworkBanner","NetworkUtil","isCorrectNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","bold","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","subtitle","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","walletProvider","connectionCallback","unsetConnector","isMetamask","isGnosisSafe","safe","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","injectedIndex","splice","gnosisIndex","connectorInfo","walletIcon","ConnectionModal","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","componentDidUpdate","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","maxHeight","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","INFURA_KEY","RimbleTransactionContext","createContext","web3Infura","permitClient","accountBalance","initWeb3","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","accountInizialized","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","connectGnosisSafe","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","availableStrategiesChanged","gnosisSafeLoaded","setNetwork","metamaskProvider","connectorNameChanged","web3Host","web3Provider","forceCallback","web3Callback","originalWeb3","biconomyWeb3Provider","_args4","detectEthereumProvider","Web3","HttpProvider","library","IFrameEthereumProvider","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","_args7","race","$crisp","notificationId","content","Sentry","increaseAmount","balanceOf","determineAccountLowBalance","openConnectionModal","getRequiredNetwork","getNetworkId","getNetworkName","getNetworkType","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","confirmationCount","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","constant","outputs","payable","stateMutability","anonymous","indexed","govTokensDisabled","defiPrime","cToken","yToken","iToken","CHAI","skipMintForDeposit","enabledEnvs","crToken","fToken","IdleCDO","IdleStrategy","IdleCDOTrancheRewards","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","Dashboard","Governance","App","currentEnv","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","storedCachedData","cachedKeyFound","widthChanged","heightChanged","tabIndex","envEnabled","loadAvailableTokens","warn","setThemeMode","closeIframe","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCustomAddress","loadCurrentEnvironment","strategyChanged","networkChanged","hasMetamask","store","themeDark","_this9","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","RimbleWeb3","needsPreflight","react_router","react","fallback","isDashboard","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","registration","unregister","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_10__","TransactionListFilters","activeFilters","assets","setFilter","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","transition","filters","filterCategory","filterValues","TableCellHeader","filterValue","filterLabel","isChecked","filterName","prevTxs","txsPerPage","totalTxs","totalPages","renderedTxs","lastBlockNumber","txsIndexes","parsedValue","loadTxs","enabledActions","hasActiveFilters","m","src_TransactionListFilters_TransactionListFilters","txHashKey","prevPage","nextPage","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","_skipRebalance","_migrationContract$me","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","footer","VariationNumber","IconDirection","iconPos","loading-dots","loading-dots--dot","dot-keyframes","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","iconHeight","subtitleProps","BackButton","currYear","getFullYear","columnWidth","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","role","aria-label","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","ColTitle","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","componentHasChildren","fieldPath","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor"],"mappings":"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","file":"static/js/main.f4c16dd9.chunk.js","sourcesContent":["import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          let [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              // if (isRisk){\n              //   debugger;\n              // }\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                aprChartData[0].data.push({ x, y });\n              });\n            }\n\n            this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n          }\n\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    const tokenConfig = this.props.tokenConfig || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens && Object.keys(this.state.govTokens).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state.govTokens ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        output = this.state.score !== undefined && this.state.score !== null && this.functionsUtil.BNify(this.state.score).gt(0) ? (\n          <SmartNumber {...fieldProps} decimals={2} number={this.state.score} />\n        ) : this.functionsUtil.BNify(this.state.score).lte(0) ? '-' : loader\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            const customFieldName = Object.values(fieldInfo.path).pop();\n            if (this.props.tokenConfig[`${customFieldName}Props`]){\n              const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n              // Replace props\n              if (customFieldProps && Object.keys(customFieldProps).length){\n                Object.keys(customFieldProps).forEach(p => {\n                  fieldProps[p] = customFieldProps[p];\n                });\n              }\n            }\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import React, { Component } from 'react';\nimport { Flex, Link, Text } from \"rimble-ui\";\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\n\nclass Breadcrumb extends Component {\n  render() {\n\n    const showPathMobile = !!this.props.showPathMobile;\n\n    return (\n      <Flex\n        width={1}\n        id={'breadcrumb'}\n        alignItems={'center'}\n      >\n        {\n          this.props.handleClick && \n           <RoundIconButton\n             buttonProps={{\n               border:2,\n               width:'35px',\n               height:'35px'\n             }}\n             iconSize={'1.2em'}\n             iconName={'ArrowBack'}\n             handleClick={this.props.handleClick}\n           />\n        }\n        {\n          this.props.text && this.props.text.length>0 &&\n           <Link\n             ml={[2,3]}\n             fontSize={[1,2]}\n             fontWeight={3}\n             color={'cellText'}\n             hoverColor={'copyColor'}\n             onClick={this.props.handleClick}\n           >\n            {this.props.text}\n           </Link>\n        }\n        {\n          (!this.props.isMobile || showPathMobile) && this.props.path && this.props.path.length>0 &&\n            this.props.path.map((path,index) => {\n              const link = this.props.pathLink ? (this.props.pathLink[index] || null) : null;\n              const Component = link ? Link : Text;\n              return (\n                <Component\n                  pl={[1,3]}\n                  ml={[1,3]}\n                  fontWeight={3}\n                  fontSize={[1,2]}\n                  hoverColor={'copyColor'}\n                  style={ !this.props.isMobile ? {\n                    maxWidth:'30%',\n                    overflow: 'hidden',\n                    whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                    borderLeft: `1px solid ${this.props.theme.colors.divider}`\n                  } : null }\n                  key={`breadcrumb_path_${index}`}\n                  color={link ? 'cellText' : 'statValue'}\n                  onClick={link ? e => this.props.goToSection(link) : null}\n                >\n                  {path}\n                </Component>\n              );\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Breadcrumb;","import React, { Component } from 'react';\nimport { Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ShortHash extends Component {\n\n  state = {\n    text:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    const resolveAddress = this.props.resolveAddress !== false;\n    let text = this.functionsUtil.shortenHash(this.props.hash);\n    const ensName = resolveAddress ? await this.functionsUtil.getENSName(this.props.hash) : null;\n    // console.log('ShortHash',resolveAddress,this.props.hash,ensName);\n    if (ensName){\n      text = ensName;\n    }\n    this.setState({\n      text\n    });\n  }\n\n  render() {\n    const loader = (<Loader size=\"20px\" />);\n    return this.state.text ? <Text display={'inline'} {...this.props}>{this.state.text}</Text> : loader;\n  }\n}\n\nexport default ShortHash;","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from 'react';\nimport {\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner.js';\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n       <Button\n        onClick={this.props.handleClick}\n         {...this.props.buttonProps}\n       >\n        <Flex flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n          <Flex width={1} display={ this.props.isLoading ? 'flex' : 'none' }>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={ this.props.isLoading ? 'none' : 'flex' }>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n       </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import { Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\n\nclass RoundIconButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      p:0,\n      border:1,\n      width:'40px',\n      height:'40px',\n      borderRadius:'50%',\n      mainColor:'backButtonBg',\n      disabled:this.props.disabled\n    },this.props.buttonProps);\n\n    buttonProps.minWidth = buttonProps.width;\n\n    return (\n       <RoundButton\n         buttonProps={buttonProps}\n         handleClick={this.props.handleClick}\n       >\n         <Icon\n           color={'copyColor'}\n           name={this.props.iconName}\n           size={ this.props.iconSize ? this.props.iconSize : '1.3em'}\n         />\n       </RoundButton>\n    );\n  }\n}\n\nexport default RoundIconButton;","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import React, { Component } from 'react';\nimport { Box, Flex, Icon, Text, Heading } from 'rimble-ui'\n// import styles from './Faquestion.module.scss';\n\nclass Faquestion extends Component {\n  state = {\n    isShowingAnswer: false\n  };\n  toggleAnswer(e) {\n    e.preventDefault();\n    this.setState(state => ({...state, isShowingAnswer: !state.isShowingAnswer}));\n  };\n  render() {\n    return (\n      <Flex\n        my={[3,3]}\n        py={[3,3]}\n        px={[4,4]}\n        flexDirection={'column'}\n        alignItems={'baseline'}\n        justifyContent={'center'}\n        backgroundColor={'cardBg'}\n        borderRadius={ this.props.isOpened ? '30px' : '50px' }\n        boxShadow={1}\n      >\n        <Flex flexDirection={'row'} alignItems={'center'} width={1} onClick={this.props.handleClick} style={{cursor: 'pointer'}}>\n          <Box width={4/5}>\n            <Heading.h4\n              my={0}\n              fontWeight={3}\n              fontSize={[1,2]}\n              fontFamily={'sansSerif'}\n              color={this.props.isOpened ? 'link' : 'dark-gray'}\n            >\n              {this.props.question}\n            </Heading.h4>\n          </Box>\n          <Flex\n            width={1/5}\n            justifyContent={'flex-end'}\n          >\n            <Icon\n              size={\"1.5em\"}\n              color={this.props.isOpened ? 'link' : 'copyColor'}\n              name={this.props.isOpened ? 'KeyboardArrowUp' : 'KeyboardArrowDown'}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n        >\n          {this.props.isOpened &&\n            <Text.p\n              textAlign={'justify'}\n              fontSize={[1,2]}\n              dangerouslySetInnerHTML={{ __html: this.props.answer }}\n            >\n            </Text.p>\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faquestion;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    // debugger;\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          this.props.unit && unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          this.props.unit && unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontSize:3,\n      fontWeight:3,\n      height:'45px',\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","import React, { Component } from 'react';\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign({\n      py:1,\n      width:'auto',\n      px:['12px',3],\n    },this.props.cardProps);\n\n    return (\n       <DashboardCard\n         cardProps={cardProps}\n         isInteractive={true}\n         isActive={this.props.isActive}\n         isDisabled={this.props.isDisabled}\n         handleClick={this.props.handleClick}\n       >\n         <Flex\n           my={1}\n           alignItems={'center'}\n           flexDirection={'row'}\n           justifyContent={'center'}\n         >\n          {\n            this.props.image ? (\n              <Image\n                align={'center'}\n                src={this.props.image}\n                height={ this.props.isMobile ? '1.2em' : '1.4em' }\n                width={ this.props.isMobile ? '1.2em' : '1.4em' }\n                {...this.props.imageProps}\n              />\n            ) : this.props.useIconOnly ? (\n              <Icon\n                align={'center'}\n                name={this.props.icon}\n                size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n                {...this.props.iconProps}\n              />\n            ) : (\n             <Flex\n               mr={2}\n               p={['4px','7px']}\n               borderRadius={'50%'}\n               alignItems={'center'}\n               justifyContent={'center'}\n               backgroundColor={ this.props.iconBgColor ? this.props.iconBgColor : this.props.theme.colors.transactions.actionBg.redeem }\n             >\n               <Icon\n                 align={'center'}\n                 name={this.props.icon}\n                 size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                 color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n                 {...this.props.iconProps}\n               />\n             </Flex>\n            )\n          }\n           <Text\n             fontWeight={3}\n             fontSize={[1,3]}\n             {...this.props.textProps}\n           >\n             {this.props.text}\n           </Text>\n         </Flex>\n       </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    txCount:0,\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n\n    window.initProgressBar = this.initProgressBar;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      // console.log('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    // console.log('getTransaction',transaction);\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    let prediction = null;\n    if (this.state.predictTable){\n      this.state.predictTable.forEach((p,i) => {\n        if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n          prediction = p;\n          return true;\n        }\n      });\n    }\n\n    if (this.state.blockTime && prediction){\n      const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n      const blocksWait = pdValues[0];\n      const blockInterval = this.state.blockTime.block_time;\n      let txMeanSecs = blocksWait * blockInterval;\n      txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n      this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n      return txMeanSecs; // Customized\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    // console.log('initProgressBar',this.state.txCount,this.props.hash);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    } else {\n      const txCount = this.state.txCount++;\n      if (txCount<5){\n        this.setState({\n          txCount\n        },() => {\n          window.setTimeout(() => {\n            this.initProgressBar();\n          },1000);\n        });\n      }\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(this.props.hash)}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in Etherscan\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import React, { Component } from 'react';\nimport {\n  Button,\n  Flex,\n  Box,\n  Text\n} from \"rimble-ui\";\nimport styles from './TwitterShareButton.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TwitterShareButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  share = () => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Share',\n      eventAction: 'twitter',\n      eventLabel: this.props.parent\n    });\n\n    const w = Math.min(window.innerWidth,600);\n    const h = 350;\n    const x = (window.innerWidth-w)/2;\n    const y = 150;\n    window.open(`https://twitter.com/intent/tweet?text=${this.props.tweet}`,\"_blank\",`toolbar=yes,scrollbars=no,resizable=no,top=${y},left=${x},width=${w},height=${h}`);\n  }\n\n  render() {\n    return (\n        <Button\n          borderRadius={1}\n          mainColor={'#2aa6f2'}\n          contrastColor={'white'}\n          onClick={ e => { this.share() } }\n        >\n          <Flex flexDirection={'row'} alignItems={'center'} justifyContent={'center'}>\n            <Box className={styles.twitterIcon} />\n            <Text color={'white'} fontWeight={3} ml={2}>{ this.props.text ? this.props.text : 'Tweet' }</Text>\n          </Flex>\n        </Button>\n    );\n  }\n}\n\nexport default TwitterShareButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Link,\n  Flex\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport TwitterShareButton from '../../TwitterShareButton/TwitterShareButton.js';\nimport Confetti from 'react-confetti/dist/react-confetti';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ShareModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  closeModal = async (action) => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Share',\n        eventAction: action,\n        eventLabel: 'ShareModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n    const tweet = window.escape(this.props.tweet);\n    const customText = {__html: this.props.text};\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          {\n            this.props.confettiEnabled &&\n            <Confetti\n              style={{ position: 'fixed','zIndex':9999 }}\n              run={true}\n              recycle={true}\n              width={window.innerWidth}\n              height={window.innerHeight}\n            />\n          }\n          <ModalCard.Header title={this.props.title} icon={this.props.icon}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={3} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text color={'dark-gray'} textAlign={'center'} fontSize={3} mb={2} dangerouslySetInnerHTML={customText}></Text>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <TwitterShareButton tweet={tweet} text={'Share now'} parent={'ShareModal'} />\n              <Link mt={2} onClick={ e => this.closeModal('continue_without_sharing') } hoverColor={'blue'}>continue without sharing</Link>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ShareModal;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.props.rows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass Base extends Component {\n\n  state = {\n    loaded:false,\n    activeCoverages:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadCoverages();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadCoverages();\n    }\n  }\n\n  async loadCoverages(){\n    if (!this.props.account){\n      return false;\n    }\n\n    const coverages = await this.functionsUtil.getActiveCoverages(this.props.account);\n    const activeCoverages = [];\n    if (coverages && coverages.length>0){\n      coverages.forEach( c => {\n        if (!this.props.availableTokens || !this.props.availableTokens.length || this.props.availableTokens.includes(c.collateral)){\n          const statusColors = this.props.theme.colors.transactions.status;\n          let statusIcon = 'VerifiedUser';\n          let statusColor = statusColors.completed;\n          switch (c.status){\n            case 'Expired':\n              statusIcon = 'Error';\n              statusColor = statusColors.failed;\n            break;\n            case 'Claimed':\n              statusIcon = 'Error';\n              statusColor = statusColors.pending;\n            break;\n            default:\n            case 'Active':\n              statusIcon = 'VerifiedUser';\n              statusColor = statusColors.completed;\n            break;\n          }\n\n          const statusIconProps = {\n            color:statusColor\n          };\n\n          const portfolioCoverage = c.portfolioCoverage || 'N/A';\n\n          activeCoverages.push(Object.assign(c,{\n            statusIcon,\n            statusIconProps,\n            portfolioCoverage\n          }));\n        }\n      })\n    }\n\n    this.setState({\n      loaded:true,\n      activeCoverages\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.activeCoverages && this.state.activeCoverages.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.activeCoverages && this.state.activeCoverages.length>0 ? (\n            <CustomList\n              rows={this.state.activeCoverages}\n              handleClick={ this.props.isMobile ? (props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl) : null }\n              cols={[\n                {\n                  title:'PROTOCOL',\n                  props:{\n                    width:[0.28,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:[this.props.themeMode === 'dark' ? 'protocolImageDark' : 'protocolImage']\n                    },\n                    {\n                      type:'text',\n                      path:['protocolName'],\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.33,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:['collateralIcon']\n                    },\n                    {\n                      type:'text',\n                      path:['collateral'],\n                    }\n                  ]\n                },\n                {\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.24, 0.12],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['balance'],\n                      props:{\n                        decimals: this.props.isMobile ? 2 :  4,\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                      props:{\n                        ml:[1,2],\n                        style:{\n                          textTransform:'uppercase'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'EXPIRATION DATE',\n                  props:{\n                    width:0.19,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['expirationDate'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'COVERED FUNDS',\n                  props:{\n                    width:0.14,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['portfolioCoverage'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.15,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      name:'custom',\n                      path:['statusIcon'],\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'',\n                  mobile:false,\n                  props:{\n                    width:0.17,\n                  },\n                  parentProps:{\n                    width:1\n                  },\n                  fields:[\n                    {\n                      type:'button',\n                      name:'custom',\n                      funcProps:{\n                        label:(props) => (props.row.actionLabel),\n                        disabled:(props) => (props.row.actionDisabled)\n                      },\n                      props:{\n                        width:1,\n                        fontSize:3,\n                        fontWeight:3,\n                        height:'45px',\n                        borderRadius:4,\n                        boxShadow:null,\n                        mainColor:'redeem',\n                        size: this.props.isMobile ? 'small' : 'medium',\n                        handleClick:(props) => props.row.status!=='Expired' && props.row.actionUrl && this.functionsUtil.openWindow(props.row.actionUrl)\n                      }\n                    }\n                  ]\n                }\n              ]}\n              {...this.props}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default Base;\n","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged){\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents(){\n    \n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p:2,\n          width:1,\n          style:{cursor:'pointer'}\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen){\n        cardProps.boxShadow = 4;\n      }\n      return (\n        <DashboardCard\n          isInteractive={true}\n          cardProps={cardProps}\n        >\n          <Flex\n            width={1}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps,{\n        mt:2,\n        zIndex:1,\n        boxShadow:null,\n        position:'absolute'\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable){\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput,this.props.themeMode==='dark' ? styles.dark : null,!props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map( o => o.value ).indexOf(selectedValue) === -1 && this.props.defaultValue){\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value){\n        return null;\n      }\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{cursor:'pointer'}}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={ props.isFocused ? 'selectBgFocused' : 'selectBg' }\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={ v => this.props.onChange(v.value) }\n        components={{\n            Menu: this.state.CustomMenu,\n            Option: this.state.CustomOption,\n            Control: this.state.ControlComponent,\n            Input: this.state.CustomInputContainer,\n            SingleValue: this.state.CustomValueContainer,\n            IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #eee','1px solid #b6c2ff'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgba(0,54,255,0.3)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: blue.base,\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#3F3D4B',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    alert:'#ff9900',\n    arrowActive:'#4f4f4f',\n    arrowInactive:'#d8d8d8',\n    selectBgFocused:'#fbfbfb',\n    selectBg:'#ffffff',\n    backButtonBg:'#ffffff',\n    lineChartStroke:'#dbdbdb',\n    wrongNetworkBannerBg:'#ffffff',\n    dashboardBg: '#f9fafd',\n    statValue: '#959595',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a3a4a5',\n    cellText: '#a6a6a6',\n    divider: '#d8d8d8',\n    counter: '#5d5d5d',\n    redeem: '#00a9fe',\n    link:'#0036ff',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    menuBg:'#fff',\n    menuHover:'#f3f6ff',\n    cardBg:'#fff',\n    flashColor:'#3f4e9a',\n    menuRightBorder:'#eee',\n    cardHoverShadow:'0px 0px 0px 1px rgba(0, 54, 255, 0.3)',\n    cardBgHover:'#f7f8ff',\n    cardBorder:'#eee',\n    pageActive:'#4f4f4f',\n    pageInactive:'#d8d8d8',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, '#AAA'),\n      backgroundColor: tint(0.9, '#AAA'),\n      borderColor: '#AAA',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: '#f3f6ff',\n      borderColor: '#b6c2ff',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"twitterIcon\":\"TwitterShareButton_twitterIcon__2QCmn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// import { Line } from '@nivo/line';\n// import CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport CustomField from '../CustomField/CustomField';\n// import SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import GenericChart from '../GenericChart/GenericChart';\n// import CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport { Image, Text, Loader, Button, Flex, Icon } from \"rimble-ui\";\n// import VariationNumber from '../VariationNumber/VariationNumber';\n// import AllocationChart from '../AllocationChart/AllocationChart';\n// import CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\n\nclass TrancheField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const trancheChanged = prevProps.tranche !== this.props.tranche;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const protocolChanged = prevProps.protocol !== this.props.protocol;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || protocolChanged || trancheChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      // console.log('componentDidUpdate-1',fieldChanged,tokenChanged,protocolChanged,trancheChanged,accountChanged,transactionsChanged,(contractInitialized && !this.state.ready));\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      // console.log('componentDidUpdate-2',mobileChanged,themeModeChanged);\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n\n    if (this.componentUnmounted || !this.props.protocol || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    // console.log('TrancheField - loadField',fieldName,this.componentUnmounted,this.props.protocol,this.props.token,this.props.tokenConfig);\n\n    const fieldProps = fieldInfo.props;\n    // const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        default:\n          output = await this.functionsUtil.loadTrancheField(fieldName,fieldProps,this.props.protocol,this.props.token,this.props.tranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    // const tokenConfig = this.props.tokenConfig;// || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n    // const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    // console.log('TrancheField',fieldInfo.name,fieldProps);\n    const flexProps = fieldProps.flexProps;\n    delete fieldProps.flexProps;\n\n    switch (fieldInfo.name){\n      case 'protocolIcon':\n        output = (\n          <Image src={`images/protocols/${this.props.protocol}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'trancheTypeIcon':\n        const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.tranche]);\n        output = (\n          <Flex\n            p={'6px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={`rgba(${trancheDetails.color.rgb.join(',')},0.2)`}\n            {...flexProps}\n          >\n            <Icon\n              {...fieldProps}\n              align={'center'}\n              name={trancheDetails.icon}\n              color={trancheDetails.color.hex}\n            />\n          </Flex>\n        );\n      break;\n      case 'tokenIcon':\n        output = (\n          <Image src={`images/tokens/${this.props.token}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'custom':\n        output = (\n          <CustomField\n            row={this.props}\n            fieldInfo={fieldInfo}\n          />\n        );\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = this.state[fieldInfo.name] && Object.keys(this.state[fieldInfo.name]).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n            {...fieldInfo.parentProps}\n          >\n            {\n              Object.values(this.state[fieldInfo.name]).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.4em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state[fieldInfo.name]).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TrancheField;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n        isVisible={this.props.isVisible}\n        isInteractive={this.props.isInteractive}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n          if (!newState.width){\n            newState.width = chartHeight;\n          }\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    newState.height = newState.height || newState.width;\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        case 'custom':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n    let bgColor = theme.colors.transactions.actionBg.default;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={`https://etherscan.io/tx/${transaction.hash}`}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                resolveAddress={false}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n        const tokenSymbol = transaction.tokenSymbol.toUpperCase();\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        const iconSrc = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${tokenSymbol}.svg`;\n        output = (\n          <Image src={iconSrc} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{transaction.tokenSymbol.toUpperCase()}</Text>\n        );\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.functionsUtil.getArrayPath(fieldInfo.path,this.props.transaction);\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n            customValue = null;\n          break;\n          case 'image':\n            CustomComponent = Image;\n            fieldProps.src = customValue;\n            customValue = null;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            customValue = null;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : <CustomComponent {...fieldProps} />\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async execute(){\n\n    const callback = (tx,error) => {\n\n      console.log('callback',tx,error);\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx && tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx);\n        }\n      }\n\n      this.setState({\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx ? tx.status : null\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    let params = this.props.params;\n    if (typeof this.props.getTransactionParams === 'function'){\n      params = this.props.getTransactionParams();\n    } else if (typeof this.props.getTransactionParamsAsync === 'function'){\n      params = await this.props.getTransactionParamsAsync();\n    }\n\n    if (!params){\n      this.setState((prevState) => ({\n        txStatus:null,\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n      return false;\n    }\n\n    // console.log('ExecuteTransaction',this.props.contractName,this.props.methodName,params);\n\n    if (this.props.sendRawTransaction){\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt,null,true,params);\n    } else {\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt);\n    }\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              network={this.props.network}\n              {...this.props.progressBarProps}\n              hash={this.state.processing.txHash}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n              waitText={`${this.functionsUtil.capitalize(this.props.action)} estimated in`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds,1800);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      if (this.tokenConfig && this.tokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ENS, { getEnsAddress } from '@ensdomains/ensjs';\n\nconst ethereumjsABI = require('ethereumjs-abi');\nconst env = process.env;\n\nwindow.profiler = {};\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber( typeof s === 'object' ? s : String(s) )\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'),...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'),...props); }\n  getContractByName = (contractName) => {\n    const contract = this.props.contracts.find(c => c.name === contractName);\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g,\"\\n\")\n            .replace(/<p>/g,\"\")\n            .replace(/<br>/g,\"\")\n            .replace(/&nbsp;/g,\" \")\n            .replace(/<\\/p>/g,\"\");\n  }\n  capitalize = (str) => {\n    return str ? str.substr(0,1).toUpperCase()+str.substr(1) : '';\n  }\n  strToMoment = (date,format=null) => {\n    return moment(date,format);\n  }\n  replaceArrayProps = (arr1,arr2) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  stripHtml = (html) => {\n     var tmp = document.createElement(\"DIV\");\n     tmp.innerHTML = html;\n     return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d/2;\n      if (t < 1) return c/2*t*t + b;\n      t--;\n      return -c/2 * (t*(t-2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n        currentTime += increment;\n        var val = Math.easeInOutQuad(currentTime, start, change, duration);\n        window.scrollTo(0,val);\n        if(currentTime < duration) {\n          window.setTimeout(animateScroll, increment);\n        }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n        results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx,tokenConfig) => {\n\n    if (!tokenConfig.idle){\n      return null;\n    }\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();    \n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1 ) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx){\n      action = 'Deposit';\n    } else if (isRedeemTx){\n      action = 'Redeem';\n    } else if (isMigrationTx){\n      action = 'Migrate';\n    } else if (isSendTransferTx){\n      action = 'Send';\n    } else if (isReceiveTransferTx){\n      action = 'Receive';\n    } else if (isSwapTx){\n      action = 'Swap';\n    } else if (isSwapTx){\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  shortenHash = hash => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, 7);\n    const txEnd = shortHash.substr(shortHash.length - 4);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  }\n  getENSName = async (address) => {\n\n    const networkId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const ensConfig = this.getGlobalConfig(['network','providers','ens']);\n\n    if (!ensConfig.enabled || !ensConfig.supportedNetworks.includes(networkId)){\n      return null;\n    }\n\n    if (!this.checkAddress(address) || !this.props.web3){\n      return null;\n    }\n\n    const cachedDataKey = `getENSName_${address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const TTL = 3600;\n    const provider = this.props.web3.currentProvider;\n    if (networkId === 1){\n      const ens = new ENS({ provider, ensAddress: getEnsAddress(networkId.toString()) });\n      const ensName = await ens.getName(address);\n      if (ensName && ensName.name){\n        const addressCheck = await ens.name(ensName.name).getAddress();\n        if (addressCheck && address.toLowerCase() === addressCheck.toLowerCase()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,ensName.name,TTL);\n        }\n      }\n    }\n\n    return null;\n  }\n  getAccountPortfolioTranches = async (availableTranches=null,account=null) => {\n    const portfolio = {\n      transactions:[],\n      tranchesBalance:[],\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n    };\n\n    availableTranches = availableTranches ? availableTranches : this.props.availableTranches;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTranches){\n      return portfolio;\n    }\n\n    const tranches = this.getGlobalConfig(['tranches']);\n\n    await this.asyncForEach(Object.keys(availableTranches),async (protocol) => {\n      const protocolConfig = availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig),async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(Object.keys(tranches),async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          const trancheTokenBalance = await this.loadTrancheFieldRaw('trancheDeposited',{},protocol,token,tranche,tokenConfig,trancheConfig,account);\n          if (trancheTokenBalance){\n            const tranchePrice = await this.loadTrancheFieldRaw('tranchePrice',{},protocol,token,tranche,tokenConfig,trancheConfig,account);\n            const tokenBalance = trancheTokenBalance.times(tranchePrice);\n\n            if (!this.BNify(tranchePrice).isNaN() && !this.BNify(tokenBalance).isNaN()){\n              const [\n                trancheUserInfo,\n                trancheApy,\n              ] = await Promise.all([\n                this.getTrancheUserInfo(tokenConfig,trancheConfig,account),\n                this.loadTrancheFieldRaw('trancheApy',{},protocol,token,tranche,tokenConfig,trancheConfig,account),\n              ]);\n\n              const amountDeposited = trancheUserInfo.amountDeposited;\n              const trancheEarnings = tokenBalance.minus(amountDeposited);\n\n              // console.log('trancheBalance',protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(),'tranchePrice',tranchePrice.toFixed(),'tokenBalance',tokenBalance.toFixed(),'trancheApy',trancheApy.toFixed(),'amountDeposited',amountDeposited.toFixed());\n              portfolio.transactions = [...portfolio.transactions,...trancheUserInfo.transactions];\n\n              portfolio.tranchesBalance.push({\n                token,\n                tranche,\n                protocol,\n                trancheApy,\n                tranchePrice,\n                tokenBalance,\n                trancheEarnings,\n                amountDeposited, \n                trancheTokenBalance\n              });\n\n              // console.log(protocol,token,tranche,amountDeposited.toFixed(),tokenBalance.toFixed(),trancheEarnings.toFixed());\n\n              // Increment total balance\n              portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n            }\n          }\n        });\n      });\n    });\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n\n    // Calculate aggregated data\n    portfolio.tranchesBalance.forEach( trancheInfo => {\n      const trancheApy = this.BNify(trancheInfo.trancheApy);\n      const trancheWeight = trancheInfo.tokenBalance.div(portfolio.totalBalance);\n\n      // Add tranche weight\n      trancheInfo.trancheWeight = trancheWeight;\n\n      if (trancheInfo.trancheEarnings){\n        totalEarnings = totalEarnings.plus(trancheInfo.trancheEarnings);\n      }\n\n      if (trancheApy){\n        avgAPY = avgAPY.plus(trancheApy.times(trancheWeight));\n      }\n\n      if (trancheInfo.amountDeposited){\n        totalAmountLent = totalAmountLent.plus(trancheInfo.amountDeposited);\n      }\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    return portfolio;\n  }\n  getAccountPortfolio = async (availableTokens=null,account=null) => {\n    const portfolio = {\n      tokensBalance:{},\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n      totalBalanceConverted:this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens){\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const idleTokenBalance = await this.getTokenBalance(tokenConfig.idle.token,account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance,token,tokenConfig,isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()){\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach( token => {\n      if (portfolio.tokensBalance[token]){\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens,async (token) => {\n      const tokenConfig = availableTokens[token];\n      const amountDeposited = await this.getAmountDeposited(tokenConfig,account);\n\n      // console.log(token,'amountDeposited',amountDeposited.toString(),'amountLent',amountLents[token].toString());\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n      const [\n        tokenAprs\n        // tokenEarnings\n      ] = await Promise.all([\n        this.getTokenAprs(tokenConfig)\n        // this.loadAssetField('earnings',token,tokenConfig,this.props.account,false),\n      ]);\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings){\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY){\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken){\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // debugger;\n\n    return portfolio;\n  }\n  getCurveAvgSlippage = async (enabledTokens=[],account=null,fixDecimals=true) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]){\n              processedTxs[tx.hash] = {\n                price:null,\n                received:null,\n                slippage:null,\n                deposited:this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null){\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]){\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)){\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach( tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens=[],account=null) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n        \n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)){\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    enabledTokens.forEach( selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance= this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice){\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action){\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n            break;\n            default:\n            break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)){\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx){\n                firstDepositTx = tx;\n              }\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  getDashboardSectionUrl = (section) => {\n    return `${window.location.origin}/#${this.getGlobalConfig(['dashboard','baseRoute'])}/${section}`;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens=[],account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens,account);\n    if (firstDepositTxs){\n      return Object.keys(firstDepositTxs).reduce( (acc,token) => {\n        if (firstDepositTxs[token]){\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      },{});\n    }\n    return null;\n  }\n  getTrancheRewardTokensInfo = async (tokenConfig,trancheConfig) => {\n    const stakingRewards = await this.loadTrancheField('stakingRewards',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig);\n    // console.log('getTrancheTokensDistribution',stakingRewards);\n    const tokensDistribution = {};\n    await this.asyncForEach(Object.keys(stakingRewards),async (token) => {\n      const eventFilters = {\n        from:tokenConfig.CDO.address,\n        to:trancheConfig.CDORewards.address\n      }\n      const transfers = await this.getContractEvents(token,'Transfer',{fromBlock: tokenConfig.blockNumber,toBlock:'latest',filter:eventFilters});\n\n      if (transfers && transfers.length>0){\n        const previousHarvest = transfers.length>1 ? transfers[transfers.length-2] : null;\n        const latestHarvest = transfers[transfers.length-1];\n        const previousBlock = previousHarvest ? previousHarvest.blockNumber : tokenConfig.blockNumber;\n\n        const govTokenConfig = this.getGlobalConfig(['govTokens',token]);\n        const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        const [\n          prevBlockInfo,\n          lastBlockInfo,\n          conversionRate,\n          lastBlockPoolSize\n        ] = await Promise.all([\n          this.getBlockInfo(previousBlock),\n          this.getBlockInfo(latestHarvest.blockNumber),\n          this.getUniswapConversionRate(DAITokenConfig,govTokenConfig),\n          this.genericContractCallCached(tokenConfig.CDO.name,'getContractValue',[],{},latestHarvest.blockNumber)\n        ]);\n        if (prevBlockInfo && lastBlockInfo){\n          const poolSize = this.fixTokenDecimals(lastBlockPoolSize,tokenConfig.CDO.decimals);\n\n          const elapsedBlocks = latestHarvest.blockNumber-previousBlock;\n          const elapsedSeconds = lastBlockInfo.timestamp-prevBlockInfo.timestamp;\n          const transferAmount = this.fixTokenDecimals(latestHarvest.returnValues.value,govTokenConfig.decimals);\n          const tokensPerBlock = transferAmount.div(elapsedBlocks);\n          const tokensPerSecond = transferAmount.div(elapsedSeconds);\n          const tokensPerYear = tokensPerSecond.times(this.getGlobalConfig(['network','secondsPerYear']));\n          const convertedTokensPerYear = tokensPerYear.times(conversionRate);\n          const tokenApr = convertedTokensPerYear.div(poolSize);\n          const tokenApy = this.apr2apy(tokenApr);\n\n          tokensDistribution[token] = {\n            apr:tokenApr,\n            apy:tokenApy,\n            tokensPerYear,\n            tokensPerBlock,\n            tokensPerSecond,\n            convertedTokensPerYear\n          };\n        }\n      }\n    });\n\n    // console.log('tokensDistribution',tokensDistribution);\n\n    return tokensDistribution;\n  }\n  getTrancheUserInfo = async (tokenConfig,trancheConfig,account) => {\n    account = account || this.props.account;\n    const cachedDataKey = `amountDepositedTranche_${tokenConfig.token}_${trancheConfig.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const defaultEventsConfig = {to:'to',from:'from',value:'value'};\n    const underlyingEventsConfig = this.getGlobalConfig(['events',tokenConfig.token,'fields']) || defaultEventsConfig;\n\n    const underlyingEventsFilters = {};\n    underlyingEventsFilters[underlyingEventsConfig.to] = [this.props.account,tokenConfig.CDO.address];\n    underlyingEventsFilters[underlyingEventsConfig.from] = [this.props.account,tokenConfig.CDO.address];\n\n    const [\n      underlying_transfers,\n      trancheToken_transfers\n    ] = await Promise.all([\n      this.getContractEvents(tokenConfig.token,'Transfer',{fromBlock: trancheConfig.blockNumber, toBlock:'latest',filter:underlyingEventsFilters}),\n      this.getContractEvents(trancheConfig.name,'Transfer',{fromBlock: trancheConfig.blockNumber, toBlock:'latest',filter:{from:['0x0000000000000000000000000000000000000000',this.props.account],to:['0x0000000000000000000000000000000000000000',this.props.account]}})\n    ]);\n\n    // console.log('getAmountDepositedTranche',trancheConfig.name,'underlying_transfers',underlying_transfers,'trancheToken_transfers',trancheToken_transfers);\n\n    const transactions = [];\n    let avgBuyPrice = this.BNify(0);\n    let amountDeposited = this.BNify(0);\n    let totalAmountDeposited = this.BNify(0);\n\n    await this.asyncForEach(trancheToken_transfers, async (trancheTokenTransferEvent) => {\n      const tokenTransferEvent = underlying_transfers.find( t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase() );\n\n      // Skip if no tranche token transfer event found\n      if (!tokenTransferEvent){\n        return;\n      }\n\n      const tokenAmount = this.fixTokenDecimals(tokenTransferEvent.returnValues[underlyingEventsConfig.value],tokenConfig.decimals);\n      const trancheTokenAmount = this.fixTokenDecimals(trancheTokenTransferEvent.returnValues.value,trancheConfig.decimals);\n\n      // console.log('tranchePrice',trancheConfig.token,tokenAmount.toFixed(),trancheTokenAmount.toFixed(),tranchePrice.toFixed());\n      const tranchePrice = tokenAmount.div(trancheTokenAmount);\n      const blockInfo = await this.getBlockInfo(tokenTransferEvent.blockNumber);\n      const hashKey = `${trancheConfig.token}_${tokenTransferEvent.transactionHash}`;\n      const protocolConfig = this.getGlobalConfig(['stats','protocols',tokenConfig.protocol]);\n      const protocolIcon = `images/protocols/${protocolConfig.icon || `${tokenConfig.protocol}.svg`}`;\n\n      const tx = {\n        hashKey,\n        action:null,\n        tokenAmount,\n        tranchePrice,\n        protocolIcon,\n        value:tokenAmount,\n        status:'Completed',\n        token:tokenConfig.token,\n        tranche:trancheConfig.token,\n        protocol:protocolConfig.label,\n        tokenSymbol:tokenConfig.token,\n        trancheTokens:trancheTokenAmount,\n        hash:tokenTransferEvent.transactionHash,\n        blockNumber:tokenTransferEvent.blockNumber,\n        timeStamp:blockInfo ? blockInfo.timestamp : null,\n      };\n\n      // Deposit\n      if (trancheTokenTransferEvent.returnValues.from.toLowerCase() === '0x0000000000000000000000000000000000000000'){\n        avgBuyPrice = avgBuyPrice.plus(tranchePrice.times(tokenAmount));\n        amountDeposited = amountDeposited.plus(tokenAmount);\n        totalAmountDeposited = totalAmountDeposited.plus(tokenAmount);\n\n        tx.action = 'Deposit';\n        // console.log('Deposit',trancheConfig.token,tokenAmount.toFixed(),amountDeposited.toFixed(),tranchePrice.toFixed(),avgBuyPrice.toFixed());\n      // Withdraw\n      } else if (trancheTokenTransferEvent.returnValues.to.toLowerCase() === '0x0000000000000000000000000000000000000000'){\n        tx.action = 'Withdraw';\n        amountDeposited = amountDeposited.minus(tokenAmount);\n        if (amountDeposited.lt(0)){\n          avgBuyPrice = this.BNify(0);\n          amountDeposited = this.BNify(0);\n          totalAmountDeposited = this.BNify(0);\n        }\n        // console.log('Redeem',trancheConfig.token,tokenAmount.toFixed(),amountDeposited.toFixed(),avgBuyPrice.toFixed());\n      }\n\n      transactions.push(tx);\n    });\n\n    avgBuyPrice = avgBuyPrice.div(totalAmountDeposited);\n\n    // console.log(trancheConfig.token,'amountDeposited',amountDeposited.toFixed(),'avgBuyPrice',avgBuyPrice.toFixed(),'transactions',transactions);\n\n    return {\n      avgBuyPrice,\n      transactions,\n      amountDeposited\n    }\n  }\n  getTrancheUserTransactions = async (tokenConfig,trancheConfig,account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n    if (trancheUserInfo){\n      return trancheUserInfo.transactions;\n    }\n    return null;\n  }\n  getAmountDepositedTranche = async (tokenConfig,trancheConfig,account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n    if (trancheUserInfo){\n      return trancheUserInfo.amountDeposited;\n    }\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig,account) => {\n    const cachedDataKey = `amountDeposited_${tokenConfig.idle.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let [tokenBalance,userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,account),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice){\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice,tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return this.setCachedDataWithLocalStorage(cachedDataKey,amountDeposited);\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens=[],account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens,false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getEtherscanBaseTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network','firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber,firstBlockNumber);\n\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n\n    let results = [];\n    let etherscanBaseTxs = null;\n    let etherscanBaseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      etherscanBaseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      etherscanBaseTxs = this.getCachedRequest(etherscanBaseEndpoint);\n\n      if (debug){\n        console.log('DEBUG - CACHED - etherscanBaseTxs',etherscanBaseTxs);\n      }\n\n      // Check if the latest blockNumber is actually the latest one\n      if (etherscanBaseTxs && etherscanBaseTxs.data.result && Object.values(etherscanBaseTxs.data.result).length){\n\n        const lastCachedTx = Object.values(etherscanBaseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber)+1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length){\n          \n          latestTxs = await this.filterEtherscanTxs(latestTxs.data.result,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.blockNumber)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with etherscanBaseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(etherscanBaseTxs.data.result).includes(tx.hashKey);\n                if (!txFound){\n                  etherscanBaseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanBaseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        etherscanBaseTxs = null;\n      }\n\n      let txs = etherscanBaseTxs;\n\n      if (debug){\n        console.log('DEBUG - txs',txs);\n      }\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(etherscanBaseEndpoint);\n\n        // console.log('makeRequest 1',account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status)===0){\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(etherscanBaseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount<5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status)>0){\n          const timestamp = parseInt(Date.now()/1000);\n          const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          cachedRequests[etherscanBaseEndpoint] = {\n            data:txs,\n            timestamp\n          };\n          this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n      }\n\n      if (txs && txs.data && txs.data.result){\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    };\n  }\n  getCurveTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const results = await this.getEtherscanTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results,enabledTokens);\n  }\n  saveEtherscanTxs = (endpoint,txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')){\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data:{\n        result:txsToStore\n      }\n    };\n    this.saveCachedRequest(endpoint,false,cachedRequest);\n  }\n  getEtherscanTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    const {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    } = await this.getEtherscanBaseTxs(account,firstBlockNumber,endBlockNumber,enabledTokens,debug);\n\n    // Initialize prevTxs\n    let etherscanTxs = {};\n    if (etherscanBaseTxs){\n      // Filter txs for token\n      etherscanTxs = await this.processStoredTxs(results,enabledTokens);\n    } else {\n      const allAvailableTokens = Object.keys(this.props.availableTokens);\n      // Save base endpoint with all available tokens\n      etherscanTxs = await this.filterEtherscanTxs(results,allAvailableTokens);\n\n      // Store filtered txs\n      if (etherscanTxs && Object.keys(etherscanTxs).length){\n        this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanTxs);\n      }\n    }\n\n    if (debug){\n      console.log('DEBUG - getEtherscanTxs -',etherscanTxs);\n    }\n\n    return Object\n            .values(etherscanTxs)\n            .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n            .sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  filterCurveTxs = async (results,enabledTokens=[]) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter( tx => (enabledTokens.includes(tx.token) && ['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut'].includes(tx.action)) );\n\n    if (curveTxs.length){\n      curveTxs.sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  filterEtherscanTxs = async (results,enabledTokens=[],processTxs=true,processStoredTxs=true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools','tokenMigration','props','migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',tokenConfig.idle.token]);\n\n      results.forEach( tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length>1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length>0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find( iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 )) );\n        const isRedeemInternalTx = isRightToken && internalTxs.find( iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase() );\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase()) ) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 ));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length>1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase()) ).length>0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find( tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase()) ) );\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut){\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx){\n            action = 'Deposit';\n          } else if (isRedeemTx){\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx){\n            action = 'Migrate';\n          } else if (isSendTransferTx){\n            action = 'Send';\n          } else if (isReceiveTransferTx){\n            action = 'Receive';\n          } else if (isSwapTx){\n            action = 'Swap';\n          } else if (isSwapOutTx){\n            action = 'SwapOut';\n          } else if (isWithdrawTx){\n            action = 'Withdraw';\n          } else if (isCurveDepositTx){\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx){\n            action = 'CurveOut';\n          } else if (isCurveZapIn){\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut){\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn){\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut){\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn){\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut){\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx){\n            hashKey += '_'+tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value,curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)){\n              hashKey+='_'+action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()){\n            tokenDecimals = 18;\n          } else if (isCurveTx){\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]){\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action){\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx){\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value,tokenDecimals);\n                }\n              break;\n              default:\n                if (!curveTx){\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value,tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n              break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut){\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTokens = this.fixTokenDecimals(tx.value,curvePoolContract.decimals);\n                curveTransfersTxs.push({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n              }\n            } else {\n              etherscanTxs[hashKey] = ({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action){\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length>0){\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value,iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                break;\n                default:\n                break;\n              }\n            }   \n          }\n        }\n      });\n    });\n    \n    curveTransfersTxs.forEach( tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n  \n    if (processTxs){\n      etherscanTxs = await this.processEtherscanTransactions(etherscanTxs,enabledTokens,processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey,transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]){\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]){\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]){\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions',JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account=null,tokenKey=null,selectedToken=null) => {\n    const storedTxs = this.getStoredItem('transactions',true,{});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account){\n      if (storedTxs[account]){\n        output = storedTxs[account];\n        if (tokenKey){\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken){\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()){\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processEtherscanTransactions = async (etherscanTxs,enabledTokens=[],processStoredTxs=true) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object'){\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n    Object.keys(curveAvailableTokens).forEach( token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats','tokens',curveTokenConfig.baseToken]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object'){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = {...storedTxs[this.props.account][tokenKey]};\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        await this.asyncForEach(filteredTxs,async (tx,index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n          \n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()){\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig,tx.blockNumber,tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash){\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action){\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n            break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount){\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n            break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n            break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n            break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n            break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount){\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length-1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x','').toLowerCase()}` ) );\n\n                  this.customLog('filteredLogs',filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length){\n                    filteredLogs.forEach( log => {\n                      let tokenAmount = parseInt(log.data,16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount ('+tx.hash+')',baseTokensConfig.token,tokenAmount.toFixed(5),storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n            break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens){\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n                  const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (log.address.toLowerCase()===idleTokenAddress ) );\n                  if (filteredLogs && filteredLogs.length){\n                    idleTokens = parseInt(filteredLogs[0].data,16);\n                    idleTokens = this.fixTokenDecimals(idleTokens,idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n            break;\n            default:\n            break;\n          }\n            \n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs){\n        etherscanTxs = await this.processStoredTxs(etherscanTxs,[selectedToken],this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs,enabledTokens=[],txsToProcess=null) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions',true,{})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]){\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({},etherscanTxs);\n\n    const networkId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account,tokenKey,selectedToken);\n      \n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess),async (txKey,i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))){\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken:'Deposit',\n          redeemIdleToken:'Redeem',\n          migrateFromToIdle:'Migrate',\n          mintIdleTokensProxy:'Deposit',\n          migrateFromAaveToIdle:'Migrate',\n          migrateFromIearnToIdle:'Migrate',\n          executeMetaTransaction:'Migrate',\n          migrateFromFulcrumToIdle:'Migrate',\n          migrateFromCompoundToIdle:'Migrate',\n        };\n        const pendingStatus = ['pending','started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice){\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length){\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status:'Pending',\n            token:selectedToken,\n            action:allowedMethods[tx.method],\n            timeStamp:parseInt(tx.created/1000),\n            hash:txHash ? tx.transactionHash : null,\n            tokenSymbol:isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0],decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed){\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx){\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise( async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash,(err,txReceipt)=>{\n              if (err){\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())){\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig,realTx.blockNumber,realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created/1000);\n\n        let txValue = null;\n        switch (tx.method){\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()){\n              // Remove wrong contract tx\n              if (isStoredTx){\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0],tokenConfig.decimals).toString() : 0;\n            if (!txValue){\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n          break;\n          case 'redeemIdleToken':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice){\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0],18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n          break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt){\n              executeMetaTransactionReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract','deposit','proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo){\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x','').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length){\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data,16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data,16) : null;\n\n            if (!metaTxValue){\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue,tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n          break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract){\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt){\n              migrationTxReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x','');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x','');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length>=3 && tx.topics[tx.topics.length-2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length){\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ],migrationInternalTransfer.data,migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token){\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue,tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n          break;\n          default:\n          break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx){\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint,alias=false,data) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    const timestamp = parseInt(Date.now()/1000);\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress',false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress',customAddress);\n  }\n  getCachedRequest = (endpoint,alias=false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]){\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  makeRequest = async(endpoint,error_callback=false,config=null) => {\n    const data = await axios\n                  .get(endpoint,config)\n                  .catch(err => {\n                    if (typeof error_callback === 'function'){\n                      error_callback(err);\n                    }\n                  });\n    return data;\n  }\n  makeEtherscanApiRequest = async (endpoint,keys=[],TTL=120,apiKeyIndex=0) => {\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[endpoint] && cachedRequests[endpoint].timestamp && timestamp-cachedRequests[endpoint].timestamp<TTL){\n      return cachedRequests[endpoint].data;\n    }\n\n    const apiKey = keys[apiKeyIndex];\n    const data = await this.makeRequest(endpoint+'&apikey='+apiKey);\n\n    // console.log('makeEtherscanApiRequest',endpoint+'&apikey='+apiKey,apiKeyIndex+'/'+keys.length,data,(data.data ? data.data.message : null),apiKeyIndex<keys.length-1);\n\n    if (data && data.data && data.data.message === 'OK'){\n      cachedRequests[endpoint] = {\n        data,\n        timestamp\n      };\n      this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n      return data;\n    } else if (apiKeyIndex<keys.length-1) {\n      return await this.makeEtherscanApiRequest(endpoint,keys,TTL,apiKeyIndex+1);\n    }\n    return null;\n  }\n  makeCachedRequest = async (endpoint,TTL=60,return_data=false,alias=false,config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp-cachedRequests[key].timestamp<TTL){\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makeRequest(endpoint,false,config);\n\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)){\n      const errorCode = parseInt(error.code);\n      switch (errorCode){\n        case 4001:\n          output = 'denied';\n        break;\n        default:\n          output = `error_${errorCode}`;\n        break;\n      }\n    } else if (error.message){\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path,array) => {\n    if (!array){\n      return null;\n    }\n    path = Object.assign([],path);\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path,array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path,configs=false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return configs[prop] ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path,configs[prop]);\n      }\n    }\n    return null;\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsPageview = async (page=null) => {\n    page = page || window.location.hash.substr(1);\n    const googlePageviewInfo = this.getGlobalConfig(['analytics','google','pageView']);\n    const isOrigin = this.checkUrlOrigin();\n    if (googlePageviewInfo.enabled && isOrigin && window.ga){\n      window.ga('set', 'page', page);\n      window.ga('send', 'pageview');\n    }\n  }\n  sendGoogleAnalyticsEvent = async (eventData,callback=null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && ( debugEnabled || originOk)){\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet){\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1){\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n        // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise( async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function'){\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function'){\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\",name,address,error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider=null) => {\n    return this.getStoredItem('walletProvider',false,defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo,simpleID) => {\n    if (!userInfo.address && this.props.account){\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider){\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email){\n      delete userInfo.email;\n    }\n    if (!userInfo.address){\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID){\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (txHash) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const baseurl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',requiredNetwork]);\n    return txHash ? `${baseurl}/tx/${txHash}` : null;\n  }\n  getEtherscanAddressUrl = (address) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const baseurl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',requiredNetwork]);\n    return address ? `${baseurl}/address/${address}` : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly=false) => {\n\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network','providers','snapshot','whitelist']).map( addr => addr.toLowerCase() );\n    const endpoint = this.getGlobalConfig(['network','providers','snapshot','endpoints','proposals']);\n    let proposals = await this.makeCachedRequest(endpoint,1440,true);\n\n    // console.log('getSnapshotProposals',proposals);\n\n    if (proposals && !proposals.error){\n      proposals = Object.values(proposals);\n\n      const currTime = parseInt(Date.now()/1000);\n      if (activeOnly){\n        proposals =  proposals.filter( p => (p.msg.payload.start<=currTime && p.msg.payload.end>currTime) );\n      }\n\n      // console.log(proposals);\n\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        // Add proposal if ended\n        if (p.msg.payload.end<=currTime || whitelist.includes(p.address.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.msg.payload.snapshot;\n\n          let checkedStrategies = false;\n          await this.asyncForEach( p.msg.payload.metadata.strategies, async (s) => {\n            if (checkedStrategies){\n              return;\n            }\n            if (s.name==='erc20-balance-of'){\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract){\n                const tokenBalance = await this.getTokenBalance(tokenName,p.address,true,blockNumber);\n                // console.log(p.relayerIpfsHash,p.address,s.name,tokenBalance ? tokenBalance.toFixed() : null);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)){\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n\n            // console.log(p.relayerIpfsHash,p.address,s.name,checkedStrategies);\n          });\n          \n          // Add proposal is passed token balances check\n          if (checkedStrategies){\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey,validProposals);\n    }\n\n  }\n  getTokenApiData = async (address,isRisk=null,startTimestamp=null,endTimestamp=null,forceStartTimestamp=false,frequency=null,order=null,limit=null) => {\n    if (globalConfigs.network.requiredNetwork!==1 || !globalConfigs.stats.enabled){\n      return [];\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData){\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter( c => ( (c.startTimestamp===null || (startTimestamp && c.startTimestamp<=startTimestamp)) && (c.endTimestamp===null || (endTimestamp && c.endTimestamp>=endTimestamp)) ) )\n\n      if (filteredCachedData && filteredCachedData.length>0){\n        const filteredData = filteredCachedData.pop().data;\n        if (filteredData){\n          return filteredData.filter( d => ((!startTimestamp || d.timestamp>=startTimestamp) && (!endTimestamp || d.timestamp<=endTimestamp)) );\n        }\n        return null;\n      }\n    // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    let endpoint = `${apiInfo.endpoint}${address}`;\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null){\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)){\n        if (forceStartTimestamp){\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp-(60*60*24*2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)){\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null){\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)){\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null){\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)){\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length){\n        endpoint += '?'+params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    let output = await this.makeRequest(endpoint,false,config);\n    if (!output){\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null){\n      filteredData = data.filter( d => ( d.isRisk === isRisk ) );\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data:filteredData,\n    });\n\n    this.setCachedData(cachedDataKey,cachedData);\n\n    return data;\n  }\n  getTokenExchangeRate = async (contractName,exchangeRateParams) => {\n    const cachedDataKey = `exchangeRate_${contractName}_${exchangeRateParams.name}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const exchangeRate = await this.genericContractCall(contractName,exchangeRateParams.name,exchangeRateParams.params);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,exchangeRate,null);\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName || this.props.selectedToken;\n\n    if (!contractName){\n      return false;\n    }\n\n    const cachedDataKey = `contractDecimals_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const tokenConfig = this.getGlobalConfig(['stats','tokens',contractName]);\n    const decimals = tokenConfig && tokenConfig.decimals ? tokenConfig.decimals : await this.genericContractCall(contractName,'decimals');\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,decimals,null);\n  }\n  getAvgApr = (aprs,allocations,totalAllocation) => {\n    if (aprs && allocations && totalAllocation){\n      let avgApr = Object.keys(aprs).reduce((aprWeighted,protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      },0);\n\n      if (avgApr){\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency,quantity=1) => {\n    const frequency_seconds = {\n      hour:3600,\n      day:86400,\n      week:604800\n    };\n    return frequency_seconds[frequency]*quantity;\n  }\n  getIdleStakingRewardsTxs = async () => {\n    const idleTokenConfig = this.getGlobalConfig(['govTokens','IDLE']);\n    const feeDistributorConfig = this.getGlobalConfig(['tools','stake','props','availableTokens','IDLE','feeDistributor']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    const etherscanApiUrl = etherscanInfo.endpoints[1];\n    const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${feeDistributorConfig.address}&sort=desc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(etherscanEndpoint,etherscanInfo.keys,3600);\n    // console.log('getIdleStakingRewardsTxs',etherscanEndpoint,etherscanTxlist);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function'){\n      return etherscanTxlist.data.result.filter( tx => (tx.contractAddress.toLowerCase() === idleTokenConfig.address.toLowerCase() && tx.to.toLowerCase() === feeDistributorConfig.address.toLowerCase() && this.BNify(tx.value).gt(0) ));\n    }\n    return [];\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance,tokenDecimals,round=true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance,tokenDecimals,exchangeRate=null) => {\n    if (!tokenDecimals){\n      return this.BNify(tokenBalance);\n    }\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()){\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName=null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCallCached(contractName, 'paused').catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key,parse_json=true,return_default=null) => {\n    let output = return_default;\n    if (window.localStorage){\n      const item = localStorage.getItem(key);\n      if (item){\n        output = item;\n        if (parse_json){\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output){\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys=[]) => {\n    if (window.localStorage){\n\n      if (!excludeKeys || !excludeKeys.length){\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i=0;i<window.localStorage.length;i++){\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)){\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage){\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key,value,stringify=false) => {\n    if (window.localStorage){\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key,value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig){\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length){\n      return false;\n    }\n\n    for (let protocolIndex=0;protocolIndex<allocations.length;protocolIndex++){\n      const lastAllocationsPromise = new Promise( async (resolve, reject) => {\n        try {\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations',[protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error) {\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations){\n      return true;\n    }\n\n    const diff = allocations.filter( (alloc,index) => alloc !== newAllocations[index] );\n\n    return diff.length>0;\n  }\n  checkMigration = async (tokenConfig,account) => {\n\n    if (!tokenConfig || !account){\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled){\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract){\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName,account);\n\n        if (oldContractBalance){\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  getContractEvents = async (contractName, eventName, params = {}) => {\n    return await this.getContractPastEvents(contractName, eventName, params);\n  }\n\n  estimateMethodGasUsage = async (contractName, methodName, methodParams = [], account = null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n    const contract = this.getContractByName(contractName);\n    if (contract && contract.methods[methodName]){\n      const functionCall = contract.methods[methodName](...methodParams);\n\n      let gasPrice = null;\n      let gasLimit = null;\n      \n      try {\n        [\n          gasPrice,\n          gasLimit\n        ] = await Promise.all([\n          this.props.web3.eth.getGasPrice(),\n          functionCall.estimateGas({from: account})\n        ]);\n      } catch (error) {\n\n      }\n\n      if (gasPrice && gasLimit){\n        return this.fixTokenDecimals(this.fixTokenDecimals(gasPrice,9).times(gasLimit),9);\n      }\n    }\n\n    return this.BNify(0);\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function(hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function(confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\",receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null,error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\",\"address\",\"uint256\",\"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network','providers','biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`,null,{\n      headers:{\n        'x-api-key':biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data){\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName,methodName,methodParams,nonce,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]){\n      callback(null,'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try{\n      const userAddress = this.props.account;\n      const chainId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null,error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName,tokenAddress,permitType,callData,gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      return false;\n    }\n\n    // console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    const buildParams = {\n      permitType,\n      data:callData,\n      token:tokenAddress,\n      to:contract._address,\n      txGas:parseInt(gasLimit)\n    };\n\n    // console.log('buildBiconomyErc20ForwarderTx',buildParams);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx(buildParams);\n\n    return tx;\n  }\n\n  getTransactionReceipt = async (hash) => {\n    return await (new Promise( async (resolve, reject) => {\n      this.props.web3.eth.getTransactionReceipt(hash,(err,tx)=>{\n        if (err){\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req,metaInfo,callback,callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({req,metaInfo});\n      transactionHash = txResponse.txHash;\n      // console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      // console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null,true);\n      return false;\n    }\n\n    if (!transactionHash){\n      // console.log('!transactionHash ERROR');\n      callback(null,true);\n      return false;\n    }\n    \n    const tx = {\n      method:'mintIdleToken',\n      transactionHash\n    };\n    // console.log('sendBiconomyTxWithErc20Forwarder - TX',tx);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(()=> {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt)=> {\n        // console.log('sendBiconomyTxWithErc20Forwarder - RECEIPT',transactionHash,err,receipt);\n        if(!err && receipt){\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx,err);\n\n          if (typeof window.updateTransaction === 'function'){\n            window.updateTransaction(tx,transactionHash,tx.status,null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName,functionSignature,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    try{\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce=0, value=null) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit',baseContractName]);\n\n    // console.log('permitConfig',permitConfig);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = permitConfig.nonceMethod ? await baseContract.methods[permitConfig.nonceMethod](holder).call() : null;\n    if (addToNonce>0){\n      nonce = parseInt(nonce)+parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion){\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        value = value || this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n      break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n      break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit=null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters){\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find( f => f.name === methodName );\n      const useNonce = methodAbi ? methodAbi.inputs.find( i => i.name === 'nonce' ) : true;\n      if (!isNaN(parseInt(nonce)) && useNonce){\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null,'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName,contractAddress,functionSignature,callback,callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null,error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n            \n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName,contractAddr,walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName,walletAddr,false),\n      this.getAllowance(contractName,contractAddr,walletAddr)\n    ]);\n    this.customLog('checkTokenApproved',contractName,this.BNify(allowance).toFixed(),this.BNify(balance).toFixed(),(allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName,contractAddr,walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr){\n      return false;\n    }\n    this.customLog('getAllowance',contractName,contractAddr,walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapperWithValue = (contractName,methodName,params,value,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, value, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  contractMethodSendWrapper = (contractName,methodName,params,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  disableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  getTrancheStakedBalance = async (contractName,walletAddr,decimals=null) => {\n    // Check for cached data\n    const cachedDataKey = `trancheStakedBalance_${contractName}_${walletAddr}_${decimals}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let stakedBalance = await this.genericContractCall(contractName,'usersStakes',[walletAddr]);\n    if (stakedBalance){\n      if (decimals){\n        stakedBalance = this.fixTokenDecimals(stakedBalance,decimals);\n      }\n      stakedBalance = this.BNify(stakedBalance);\n\n      if (!stakedBalance.isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,stakedBalance,30);\n      }\n    }\n    return this.BNify(0);\n  }\n  loadTrancheFieldRaw = async (field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens=true) => {\n    return await this.loadTrancheField(field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,false);\n  }\n  loadTrancheField = async (field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account=null,addGovTokens=true,formatValue=true) => {\n    let output = null;\n    const maxPrecision = (fieldProps && fieldProps.maxPrecision) || 5;\n    const decimals = (fieldProps && fieldProps.decimals) || (this.props.isMobile ? 2 : 3);\n    const minPrecision = (fieldProps && fieldProps.minPrecision) || (this.props.isMobile ? 3 : 4);\n    const tokenName = this.getGlobalConfig(['stats','tokens',token,'label']) || this.capitalize(token);\n\n    const strategyConfig = tokenConfig.Strategy;\n    const idleStrategyAddress = await this.genericContractCallCached(tokenConfig.CDO.name,'strategy'); \n    if (idleStrategyAddress){\n      await this.props.initContract(strategyConfig.name,idleStrategyAddress,strategyConfig.abi);\n    }\n\n    switch (field){\n      case 'protocolName':\n        output = (this.getGlobalConfig(['stats','protocols',protocol,'label']) || this.capitalize(protocol)).toUpperCase();\n      break;\n      case 'tokenName':\n        output = tokenName;\n      break;\n      case 'trancheType':\n        output = (this.getGlobalConfig(['tranches',tranche,'baseName']) || '').toUpperCase();\n        // console.log('trancheType',tranche,trancheConfig,output);\n      break;\n      case 'pool':\n        let poolSize = await this.genericContractCallCached(tokenConfig.CDO.name,'getContractValue');\n        if (!this.BNify(poolSize).isNaN()){\n          output = this.fixTokenDecimals(poolSize,tokenConfig.CDO.decimals);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision);\n          }\n        }\n      break;\n      case 'seniorPool':\n        output = await this.loadTrancheField('tranchePool',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.AA,account,addGovTokens);\n      break;\n      case 'juniorPool':\n        output = await this.loadTrancheField('tranchePool',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.BB,account,addGovTokens);\n      break;\n      case 'seniorApy':\n        output = await this.loadTrancheField('trancheApy',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.AA,account,addGovTokens);\n      break;\n      case 'juniorApy':\n        output = await this.loadTrancheField('trancheApy',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.BB,account,addGovTokens);\n      break;\n      case 'tranchePool':\n        let [\n          totalSupply,\n          virtualPrice\n        ] = await Promise.all([\n          this.getTokenTotalSupply(trancheConfig.name,'latest',180),\n          this.loadTrancheField('tranchePrice',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.BB,account,addGovTokens)\n        ]);\n\n\n        output = this.BNify(0);\n        if (!this.BNify(virtualPrice).isNaN() && !this.BNify(totalSupply).isNaN()){\n          output = this.fixTokenDecimals(totalSupply,tokenConfig.CDO.decimals).times(virtualPrice);\n        }\n        if (formatValue){\n          output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` ${tokenName}`;\n        }\n        // console.log('tranchePool',tokenConfig.CDO.name,totalSupply,virtualPrice,output);\n      break;\n      case 'trancheDeposited':\n        const deposited = await this.getAmountDepositedTranche(tokenConfig,trancheConfig,account);\n\n        output = output || this.BNify(0);\n\n        output = this.BNify(deposited);\n        if (output.gt(0)){\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` ${tokenName}`;\n          }\n        } else {\n          output = formatValue ? '-' : null;\n        }\n      break;\n      case 'tranchePrice':\n        output = await this.genericContractCall(tokenConfig.CDO.name,'virtualPrice',[trancheConfig.address]);\n        if (output){\n          output = this.fixTokenDecimals(output,trancheConfig.decimals);\n        }\n      break;\n      case 'trancheStaked':\n        let [\n          staked1,\n          lastPrice1\n        ] = await Promise.all([\n          this.getTrancheStakedBalance(trancheConfig.CDORewards.name,account,trancheConfig.CDORewards.decimals),\n          this.loadTrancheField(`tranchePrice`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (staked1 && lastPrice1){\n          output = this.BNify(staked1).times(lastPrice1);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` ${tokenName}`;\n          }\n        }\n      break;\n      case 'trancheRedeemable':\n        let [\n          deposited1,\n          lastPrice\n        ] = await Promise.all([\n          this.getTokenBalance(trancheConfig.name,account),\n          this.loadTrancheField(`tranchePrice`,fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.AA,account,addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (deposited1 && lastPrice){\n          output = this.BNify(deposited1).times(lastPrice);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` ${tokenName}`;\n          }\n        }\n      break;\n      case 'trancheApy':\n        let trancheApy = await this.genericContractCallCached(tokenConfig.CDO.name,'getApr',[trancheConfig.address]);\n        // console.log('trancheApy',tokenConfig,trancheConfig,output);\n        if (trancheApy){\n          output = this.fixTokenDecimals(trancheApy,tokenConfig.CDO.decimals);\n          if (formatValue){\n            output = output.toFixed(2)+'%';\n          }\n        }\n      break;\n      case 'trancheIDLEDistribution':\n        const idleGovTokenConfig = this.getGlobalConfig(['govTokens','IDLE']);\n        const rewardsTokensInfo = await this.getTrancheRewardTokensInfo(tokenConfig,trancheConfig);\n        if (rewardsTokensInfo && rewardsTokensInfo.IDLE){\n          output = this.fixDistributionSpeed(rewardsTokensInfo.IDLE.tokensPerSecond,idleGovTokenConfig.distributionFrequency);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` IDLE/${idleGovTokenConfig.distributionFrequency}`\n          }\n          // console.log('trancheIDLEDistribution',rewardsTokensInfo.IDLE,output);\n        }\n      break;\n      case 'AAIDLEDistribution':\n        output = this.abbreviateNumber('1234',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'BBIDLEDistribution':\n        output = this.abbreviateNumber('4321',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = {};\n        const [\n          rewardsTokens,\n          incentiveTokens\n        ] = await Promise.all([\n          this.genericContractCall(strategyConfig.name,'getRewardTokens'),\n          this.genericContractCall(tokenConfig.CDO.name,'getIncentiveTokens')\n        ]);\n\n        const govTokens = field === 'govTokens' ? rewardsTokens : (field === 'autoFarming' && rewardsTokens ? rewardsTokens.filter( rewardTokenAddr => !incentiveTokens.map( addr => addr.toLowerCase() ).includes(rewardTokenAddr.toLowerCase()) ) : incentiveTokens);\n\n        // console.log(field,tokenConfig,rewardsTokens,incentiveTokens,govTokens);\n\n        if (govTokens){\n          govTokens.forEach( govTokenAddress => {\n            const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n            if (govTokenConfig && !govTokenConfig.enabled){\n              return;\n            }\n            output[govTokenConfig.token] = govTokenConfig;\n          });\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('loadTrancheField',field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,formatValue);\n\n    return output;\n  }\n  loadAssetField = async (field,token,tokenConfig,account,addGovTokens=true,addCurveApy=false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies',this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined'){\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken){\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig){\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)){\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field){\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([],account),\n          this.getCurveTokenBalance(account,true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance){\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage){\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n      break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1,redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)){\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n      break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n      break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n      break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n      break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy',token,tokenConfig,account),\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve){\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n      break;\n      case 'earningsPerc':\n        let [amountLent1,redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)){\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n      break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp',token,tokenConfig,account);\n        if (depositTimestamp){\n          const currTimestamp = parseInt(Date.now()/1000);\n          output = (currTimestamp-depositTimestamp)/86400;\n        }\n      break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig,addGovTokens);\n        }\n      break;\n      case 'userDistributionSpeed':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'stkAAVE':\n            output = await this.getStkAaveUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account,govTokenAvailableTokens);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n          if (output){\n            output = this.fixDistributionSpeed(output,tokenConfig.distributionFrequency,tokenConfig.distributionMode);\n          }\n        }\n      break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance','props','tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens',tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output){\n\n          output = this.fixTokenDecimals(output,govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency){\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n            break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n            break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n            break;\n            case 'year':\n              output = output.times(blocksPerYear);\n            break;\n            default:\n            break;\n          }\n        }\n      break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token){\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n          break;\n          case 'stkAAVE':\n            output = await this.getStkAaveDistribution(selectedTokenConfig);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n        }\n      break;\n      case 'apr':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n          break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n            if (tokenAprs && tokenAprs.avgApr !== null){\n              output = tokenAprs.avgApr;\n            }\n          break;\n        }\n      break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n\n        // console.log('apr',token,tokenApys.avgApr ? tokenApys.avgApr.toFixed() : null,tokenApys.avgApy ? tokenApys.avgApy.toFixed() : null);\n\n        output = this.BNify(0);\n\n        if (tokenApys && !this.BNify(tokenApys.avgApy).isNaN()){\n          output = this.BNify(tokenApys.avgApy);\n\n          if (addCurveApy){\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY){\n              output = output.plus(curveAPY);\n            }\n          }\n        } else {\n\n        }\n\n        // console.log('apy - OUTPUT - ',output);\n      break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token],account),\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]){\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig,firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n      break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account),\n          this.loadAssetField('earningsPerc',token,tokenConfig,account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc){\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n      break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token],account) : false;\n        if (depositTimestamps && depositTimestamps[token]){\n          output = depositTimestamps[token];\n        }\n      break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig,account) : false;\n        // console.log('amountLent - OUTPUT - ',output);\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n      break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig,govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()){\n            output = '-';\n          }\n        } else {\n          output = await this.getTokenPrice(tokenConfig.idle.token);\n        }\n      break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig,account);\n      break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getTokenBalance(token,account);\n          if (!output || output.isNaN()){\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token,account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()){\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n      break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token,account) : false;\n        if (idleTokenBalance){\n          output = idleTokenBalance;\n        }\n      break;\n      case 'redeemableBalanceCounter':\n\n        // console.log('redeemableBalanceCounter - BEFORE',token,tokenConfig,account);\n\n        let [tokenAPY1,amountLent2,redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy',token,tokenConfig,account,false),\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false),\n        ]);\n\n        // console.log('redeemableBalanceCounter - CALL - ',tokenAPY1,amountLent2,redeemableBalanceStart);\n\n        // debugger;\n\n        let redeemableBalanceEnd = redeemableBalanceStart;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2){\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n\n        // console.log('redeemableBalanceCounter - OUTPUT',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd),output);\n      break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig,account,govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance',token,tokenConfig,account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account,govTokenAvailableTokens,token) : null,\n          ]);\n\n          // console.log('redeemableBalance - BEFORE - ',idleTokenBalance2,idleTokenPrice1);\n\n          if (idleTokenBalance2 && idleTokenPrice1){\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()){\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n          // console.log('redeemableBalance - OUTPUT - ',output);\n        }\n      break;\n      case 'earningsCurve':\n        let [amountLentCurve2,redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (!amountLentCurve2){\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1){\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n      break;\n      case 'earnings':\n        let [amountLent,redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (!amountLent){\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2){\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))){\n          output = this.BNify(0);\n        }\n      break;\n      default:\n      break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken,blockNumber='latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.getTokenTotalSupply(idleToken,blockNumber);\n    if (idleTokenSupply){\n      idleTokenSupply = this.BNify(idleTokenSupply);\n      return this.setCachedDataWithLocalStorage(cachedDataKey,idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig,account,blockNumber='latest') => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n    \n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))){\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig,blockNumber='latest',timestamp=false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    // if (blockNumber !== 'latest'){\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n    // }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCallCached(tokenConfig.idle.token,'tokenPrice',[],{},blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp){\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp)-(60*60);\n      const endTimestamp = parseInt(timestamp)+(60*60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,endTimestamp,true);\n\n      let beforePrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      let afterPrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      tokenData.forEach( d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp)-parseInt(timestamp));\n        if (parseInt(d.timestamp)<parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff<beforePrice.timeDiff)){\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp)>parseInt(timestamp) && !afterPrice.timeDiff){\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data){\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()){\n      tokenPrice = this.fixTokenDecimals(tokenPrice,decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)){\n      tokenPrice = this.BNify(1);\n    }\n\n    // if (blockNumber !== 'latest'){\n      this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice);\n    // }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = () => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function'){\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData();\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 3 minutes\n  */\n  setCachedData = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL,true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key,defaultValue=null) => {\n    return this.getCachedData(key,defaultValue,true);\n  }\n  getCachedData = (key,defaultValue=null,useLocalStorage=false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[key]){\n      cachedData = this.props.cachedData[key];\n    // Get cache from local storage\n    } else if (useLocalStorage) {\n      cachedData = this.getStoredItem('cachedData');\n      if (cachedData && cachedData[key]){\n        cachedData = cachedData[key];\n      } else {\n        cachedData = null;\n      }\n    }\n\n    const cachedDataValid = cachedData && cachedData.data && (cachedData.expirationDate === null || cachedData.expirationDate>=parseInt(Date.now()/1000));\n\n    // if (!cachedDataValid){\n    //   console.log('getCachedData - NOT VALID - ',key,(cachedData ? cachedData.expirationDate-parseInt(Date.now()/1000) : null));\n    // }\n\n    if (cachedDataValid){\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr,tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,walletAddr,false),\n      this.getTokenTotalSupply(tokenConfig.idle.token)\n    ]);\n\n    let userShare = this.BNify(0);\n    if (this.BNify(idleTokensBalance).gt(0) && this.BNify(idleTokensTotalSupply).gt(0)){\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url,'_blank','noopener');\n  }\n  getActiveCoverages = async (account=null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account){\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now()/1000);\n\n    const coverProtocolConfig = this.getGlobalConfig(['tools','coverProtocol']);\n    if (coverProtocolConfig.enabled){\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name,account);\n        if (balance && balance.gt(0)){\n          const actionLabel = 'File Claim';\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const actionUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp<=currTimestamp ? 'Expired' : 'Active';\n          const actionDisabled = status === 'Expired';\n          const expirationDate = moment(coverage.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            actionUrl,\n            collateral,\n            actionLabel,\n            protocolName,\n            protocolImage,\n            expirationDate,\n            actionDisabled\n          });\n        }\n      });\n    }\n    const nexusMutualConfig = this.getGlobalConfig(['tools','nexusMutual']);\n    if (nexusMutualConfig.enabled){\n      const nexusMutualCoverages = await this.getNexusMutualCoverages(account);\n      nexusMutualCoverages.forEach( coverage => {\n        const actionLabel = 'Claim';\n        const balance = coverage.sumAssured;\n        const token = coverage.coverAssetConfig.token;\n        const collateral = coverage.yieldTokenConfig.token;\n        const portfolioCoverage = coverage.portfolioCoverage;\n        const collateralIcon = `images/tokens/${collateral}.svg`;\n        const actionDisabled = !coverage.incident && !coverage.claimId;\n        const protocolName = this.getGlobalConfig(['insurance','nexusMutual','label']);\n        const protocolImage = this.getGlobalConfig(['insurance','nexusMutual','image']);\n        const protocolImageDark = this.getGlobalConfig(['insurance','nexusMutual','imageDark']);\n        const expirationDate = moment(coverage.coverDetails.validUntil*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const status = coverage.claimId ? 'Claimed' : parseInt(coverage.coverDetails.validUntil)<=currTimestamp ? 'Expired' : 'Active';\n        const actionUrl = `${window.location.origin}/#${this.getGlobalConfig(['dashboard','baseRoute'])}/tools/${nexusMutualConfig.route}/${coverage.yieldTokenConfig.token}/claim`;\n        activeCoverages.push({\n          token,\n          status,\n          balance,\n          actionUrl,\n          collateral,\n          actionLabel,\n          protocolName,\n          protocolImage,\n          expirationDate,\n          actionDisabled,\n          collateralIcon,\n          portfolioCoverage,\n          protocolImageDark\n        });\n      });\n    }\n\n    return activeCoverages;\n  }\n  getNexusMutualCoverages = async (account) => {\n    const nexusMutualConfig = this.getGlobalConfig(['tools','nexusMutual']);\n\n    const fromBlock = nexusMutualConfig.directProps.startBlock;\n    const feeDistributorConfig = nexusMutualConfig.directProps.contractInfo;\n    const incidentsInfo = nexusMutualConfig.directProps.incidentsInfo;\n    \n    await Promise.all([\n      this.props.initContract(incidentsInfo.name,incidentsInfo.address,incidentsInfo.abi),\n      this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi),\n    ]);\n\n    const [\n      coverBoughtEvents,\n      claimSubmittedEvents,\n    ] = await Promise.all([\n       this.getContractEvents(feeDistributorConfig.name,'CoverBought',{fromBlock, toBlock:'latest',filter:{buyer:account}}),\n       this.getContractEvents(feeDistributorConfig.name,'ClaimSubmitted',{fromBlock, toBlock:'latest',filter:{buyer:account}})\n    ]);\n\n    const nexusMutualCoverages = [];\n\n    await this.asyncForEach(coverBoughtEvents,async (cover) => {\n    // coverBoughtEvents.forEach( cover => {\n      const coverId = parseInt(cover.returnValues.coverId);\n      const claimSubmittedEvent = claimSubmittedEvents.find( claim => parseInt(claim.returnValues.coverId)===coverId );\n      const [\n        coverDetails,\n        incidentEvents\n      ] = await Promise.all([\n        this.genericContractCall(feeDistributorConfig.name,'getCover',[coverId]),\n        this.getContractEvents(incidentsInfo.name,'IncidentAdded',{fromBlock:cover.blockNumber, toBlock:'latest',filter:{productId:cover.contractAddress}})\n      ]);\n\n      if (!coverDetails){\n        return false;\n      }\n\n      // Check if the cover matches any incidents\n      const matchedIncidents = incidentEvents.filter(incident => {\n        return incident.returnValues.productId === coverDetails.contractAddress &&\n        this.BNify(incident.blockNumber).gt(cover.blockNumber)  &&\n        this.BNify(incident.returnValues.incidentDate).lt(coverDetails.validUntil) &&\n        parseInt(coverDetails.validUntil) + nexusMutualConfig.directProps.yieldTokenCoverGracePeriod >= Date.now() / 1000\n      });\n\n      // If multiple incidents match, return the one with the highest priceBefore\n      const matchedIncident = matchedIncidents.reduce((prev, curr) => {\n        if (!prev) {\n          return curr;\n        }\n\n        if (this.BNify(curr.returnValues.priceBefore).gt(prev.returnValues.priceBefore)) {\n          return curr;\n        }\n        return prev;\n      }, null);\n\n      const yieldTokenConfig = Object.values(nexusMutualConfig.props.availableTokens).find( tokenConfig => tokenConfig.address.toLowerCase() === coverDetails.contractAddress.toLowerCase() );\n      const sumAssured = this.fixTokenDecimals(coverDetails.sumAssured,yieldTokenConfig.decimals);\n      const coverAssetConfig = Object.values(yieldTokenConfig.underlying).find( underlyingConfig => underlyingConfig.address.toLowerCase() === coverDetails.coverAsset.toLowerCase() );\n      const expiryDate = this.strToMoment(coverDetails.validUntil*1000).format('YYYY-MM-DD');\n\n      const claimId = claimSubmittedEvent ? claimSubmittedEvent.returnValues.claimId : null;\n      const payoutOutcome = await this.genericContractCall(feeDistributorConfig.name,'getPayoutOutcome',[claimId]);\n      const label = `${yieldTokenConfig.name} - ${sumAssured.toFixed(4)} ${coverAssetConfig.token} - Exp. ${expiryDate}`;\n      const value = coverId;\n\n      let claimedAmount = null;\n      if (claimSubmittedEvent){\n        const claimTxReceipt = await this.getTransactionReceipt(claimSubmittedEvent.transactionHash);\n        const claimedAmountLog = claimTxReceipt ? claimTxReceipt.logs.find( log => log.address.toLowerCase() === coverAssetConfig.address.toLowerCase() ) : null;\n        claimedAmount = claimedAmountLog ? this.fixTokenDecimals(parseInt(claimedAmountLog.data,16),coverAssetConfig.decimals) : this.BNify(0);\n      }\n\n      const claimableAmount = this.fixTokenDecimals(coverDetails.sumAssured,coverAssetConfig.decimals);\n\n      const claimablePrice = matchedIncident ? this.BNify(matchedIncident.returnValues.priceBefore).times(0.9) : this.BNify(0);\n      const maxCoveredAmount = claimablePrice.gt(0) ? this.BNify(coverDetails.sumAssured).div(claimablePrice) : this.BNify(0);\n      const coveredTokenAmount = this.normalizeTokenAmount(maxCoveredAmount,coverAssetConfig.decimals);\n\n      let [\n        tokenPrice,\n        idleTokenBalance\n      ] = await Promise.all([\n        this.getTokenPrice(yieldTokenConfig.token),\n        this.getTokenBalance(yieldTokenConfig.token,account,false)\n      ]);\n\n      tokenPrice = this.fixTokenDecimals(tokenPrice,yieldTokenConfig.decimals);\n      idleTokenBalance = this.fixTokenDecimals(idleTokenBalance,yieldTokenConfig.decimals);\n      const tokenBalance = idleTokenBalance.times(tokenPrice);\n      const portfolioCoverage = tokenBalance.gt(0) ? sumAssured.div(tokenBalance).times(100).toFixed(2)+'%' : 'N/A';\n\n      // console.log('portfolioCoverage',sumAssured.toFixed(),idleTokenBalance.toFixed(),tokenPrice.toFixed(),portfolioCoverage.toFixed());\n\n      nexusMutualCoverages.push({\n        label,\n        value,\n        claimId,\n        sumAssured,\n        coverDetails,\n        claimedAmount,\n        payoutOutcome,\n        claimableAmount,\n        maxCoveredAmount,\n        yieldTokenConfig,\n        coverAssetConfig,\n        portfolioCoverage,\n        coveredTokenAmount,\n        incident: matchedIncident ? {...matchedIncident, id: incidentEvents.findIndex(x => x.date === matchedIncident.date)} : null\n      });\n    });\n\n    return nexusMutualCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint,1800,true);\n      if (transactions && typeof transactions.result === 'object'){\n        return transactions.result.filter( tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase() );\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account=null,filter_by_status=null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools','batchDeposit']);\n    if (!batchDepositConfig.enabled){\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name,migrationContract.address,migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name,'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name,'batchTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n\n        console.log(`Batch #${batchIndex} - ${batchTotal} - ${batchRedeem} - ${batchDeposit}`);\n\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null){\n          batchTotals = this.fixTokenDecimals(batchTotal,tokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchRedeem = this.fixTokenDecimals(batchRedeem,18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit,tokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)){\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status){\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,batchedDeposits);\n  }\n  getETHBalance = async (walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName,walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName,walletAddr,blockNumber)\n    ]);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance,30);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ',contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function'){\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url,props,callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props){\n      Object.keys(props).forEach((attr,i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function'){\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function() {\n          if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)){\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getTokenTotalSupply = async (contractName,blockNumber='latest',TTL=null) => {\n    const cachedDataKey = `totalSupply_${contractName}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const totalSupply = await this.genericContractCall(contractName, 'totalSupply', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,totalSupply,TTL);\n  }\n  getTokenPrice = async (contractName,blockNumber='latest') => {\n    const cachedDataKey = `tokenPrice_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const tokenPrice = await this.genericContractCall(contractName,'tokenPrice',[],{},blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice,60);\n  }\n  getContractBalance = async (contractName,address,blockNumber='latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    const cachedDataKey = `balanceOf_${contractName}_${address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const balance = await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,balance,30);\n  }\n  getProtocolBalance = async (contractName,address) => {\n    return await this.getContractBalance(contractName,address);\n  }\n  getAprs = async (contractName) => {\n    const cachedDataKey = `getAprs_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      // console.log('getAprs - CACHED - ',cachedData);\n      return typeof cachedData === 'object' ? cachedData : JSON.parse(cachedData);\n    }\n\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const aprs = await this.genericContractCall(contractName, 'getAPRs');\n    if (aprs){\n      const result = {\n        aprs:aprs[1],\n        addresses:aprs[0]\n      };\n      return this.setCachedDataWithLocalStorage(cachedDataKey,result);\n    }\n    return null;\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxDecodedLogs = async (tx,logAddr,decodeLogs,storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt){\n      txReceipt = await (new Promise( async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n          if (err){\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt){\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length){\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs,internalTransfers[0].data,internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getBlockInfo = async (blockNumber) => {\n    const cachedDataKey = `getBlockInfo_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n    const blockInfo = await this.props.web3.eth.getBlock(blockNumber);\n    return blockInfo ? this.setCachedDataWithLocalStorage(cachedDataKey,blockInfo,null) : null;\n  }\n  getContractPastEvents = async (contractName,methodName,params = {}) => {\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.getPastEvents(methodName, params);\n  }\n  genericContractCallCached = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL=180) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest'){\n      TTL = null;\n    }\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,result,TTL);\n  }\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest') => {\n\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try{\n      // this.customLog(`genericContractCall - ${contractName} - ${methodName}`);\n      const value = await contract.methods[methodName](...params).call(callParams,blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      // console.log(`${moment().format('HH:mm:ss')} - genericContractCall (${blockNumber}) - ${contractName} - ${methodName} (${JSON.stringify(params)}) : ${value}`);\n      return value;\n    } catch (error) {\n      this.customLog(\"genericContractCall error\", error);\n    }\n  }\n  asyncForEach = async (array, callback, async=true) => {\n    if (async){\n      await Promise.all(array.map( (c,index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        await callback(array[index], index, array);\n      }\n    }\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(365))).pow(365).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token,tokenConfig.idle.address);\n    if (unlentBalance){\n      unlentBalance = this.fixTokenDecimals(unlentBalance,tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig,addGovTokens=true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN() ) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent){\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPool);\n      }\n    }\n\n    return null;\n  }\n  /*\n  Get idleToken allocation between protocols\n  */\n  getTokenAllocation = async (tokenConfig,protocolsAprs=false,addGovTokens=true) => {\n\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    let totalAllocation = this.BNify(0);\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance:null,\n      totalAllocation:null,\n      protocolsBalances:{},\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null,\n      totalAllocationConverted:null,\n      totalAllocationWithUnlent:null,\n      totalAllocationWithUnlentConverted:null,\n    };\n\n    const exchangeRates = {};\n    const protocolsBalances = {};\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n\n      if (!protocolInfo.enabled){\n        return;\n      }\n\n      const contractName = protocolInfo.token;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n\n      let [\n        tokenDecimals,\n        protocolBalance,\n        exchangeRate\n      ] = await Promise.all([\n        this.getTokenDecimals(contractName),\n        this.getProtocolBalance(contractName,tokenConfig.idle.address),\n        ( protocolInfo.functions.exchangeRate ? this.getTokenExchangeRate(contractName,protocolInfo.functions.exchangeRate) : null )\n      ]);\n\n      if (!protocolBalance){\n        return;\n      }\n\n      if (exchangeRate && protocolInfo.decimals){\n        exchangeRates[protocolAddr] = exchangeRate;\n        exchangeRate = this.fixTokenDecimals(exchangeRate,protocolInfo.decimals);\n      }\n\n      let protocolAllocation = this.fixTokenDecimals(protocolBalance,tokenDecimals,exchangeRate);\n\n      if (protocolAllocation.lt(this.BNify(0.00000001))){\n        protocolBalance = this.BNify(0);\n        protocolAllocation = this.BNify(0);\n      }\n\n      protocolsBalances[protocolAddr] = protocolBalance;\n      protocolsAllocations[protocolAddr] = protocolAllocation;\n      totalAllocation = totalAllocation.plus(protocolAllocation);\n\n      // console.log('getTokenAllocation',contractName,protocolAddr,protocolAllocation.toFixed(5),exchangeRate ? exchangeRate.toFixed(5) : null,totalAllocation.toFixed(5));\n    });\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = this.BNify(totalAllocation);\n\n    // Add unlent balance to the pool\n    let unlentBalance = await this.getUnlentBalance(tokenConfig);\n    if (unlentBalance){\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    // console.log('totalAllocationWithUnlent 1',addGovTokens,tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n\n    Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n      const protocolAllocation = protocolsAllocations[protocolAddr];\n      const protocolAllocationPerc = protocolAllocation.div(totalAllocation);\n      protocolsAllocationsPerc[protocolAddr] = protocolAllocationPerc;\n    });\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    if (addGovTokens){\n      const govTokensBalances = await this.getGovTokensBalances(tokenConfig.idle.address);\n\n      // Sum gov tokens balances\n      if (govTokensBalances.total){\n        const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,false);\n        if (tokenUsdConversionRate){\n          govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n        }\n\n        tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n\n        // console.log('totalAllocationWithUnlent 2',govTokensBalances.total.toFixed(5),tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n      }\n    }\n\n    [\n      tokenAllocation.totalAllocationConverted,\n      tokenAllocation.totalAllocationWithUnlentConverted\n    ] = await Promise.all([\n      this.convertTokenBalance(tokenAllocation.totalAllocation,tokenConfig.token,tokenConfig),\n      this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,tokenConfig.token,tokenConfig)\n    ]);\n\n    if (protocolsAprs){\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    return this.setCachedData(cachedDataKey,tokenAllocation);\n  }\n  getSushiswapPoolTokenPrice = async (contractName,pairAddresses) => {\n    const [\n      token0_address,\n      token1_address,\n      poolReserves,\n      totalSupply\n    ] = await Promise.all([\n      this.genericContractCallCached(contractName,'token0'),\n      this.genericContractCallCached(contractName,'token1'),\n      this.genericContractCallCached(contractName,'getReserves'),\n      this.getTokenTotalSupply(contractName)\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply){\n      const token0_config = {\n        address:token0_address\n      };\n      const token1_config = {\n        address:token1_address\n      };\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getSushiswapConversionRate(DAITokenConfig,token0_config),\n        this.getSushiswapConversionRate(DAITokenConfig,token1_config)\n      ]);\n\n      if (token0_price && token1_price){\n        // token0_price = this.BNify(1).div(this.BNify(token0_price));\n        // token1_price = this.BNify(1).div(this.BNify(token1_price));\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0],18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1],18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply,18));\n\n        // console.log(parseFloat(token0_price),parseFloat(token1_price),parseFloat(poolTokenPrice));\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `sushiswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getGlobalConfig(['stats','tokens','WETH','address']);\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const res = await this.genericContractCall('SushiswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      if (res){\n        const price = this.BNify(res[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  getUniswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    if (tokenConfigDest.addressForPrice){\n      tokenConfigDest = Object.assign({},tokenConfigDest);\n      tokenConfigDest.address = tokenConfigDest.addressForPrice;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log('getUniswapConversionRate - CACHED',cachedDataKey,cachedData);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getGlobalConfig(['stats','tokens','WETH','address']);\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      if (unires){\n        const price = this.BNify(unires[0]).div(one);\n        // console.log('getUniswapConversionRate',path,price.toFixed());\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account,enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach( tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]){\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action){\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n        break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])){\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)){\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n        break;\n        default:\n        break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)){\n        Object.keys(idleTokensBalances).forEach( token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)){\n            if (tokenBalance.gt(remainingCurveTokens)){\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts,max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve','rates']);\n    if (curveRatesInfo){\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data){\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path,results.data);\n        if (curveApy){\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies){\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve','availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce( (availableTokens,token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled){\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    },{});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber){\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice,prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price'),\n          this.genericContractCallCached(curveSwapContract.name,'get_virtual_price',[],{},blockNumber-blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice){\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      return await this.getTokenTotalSupply(curvePoolContract.name);\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account=null,fixDecimals=true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name,account,fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber='latest',fixDecimals=true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCallCached(migrationContract.name,'get_virtual_price',[],{},blockNumber);\n    if (curveTokenPrice){\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals){\n        const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice,curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice,curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice){\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve','depositContract']);\n    if (depositContractInfo){\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi){\n        curveDepositContract = await this.props.initContract(depositContractInfo.name,depositContractInfo.address,depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve','zapContract']);\n    if (zapContractInfo){\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi){\n        curveZapContract = await this.props.initContract(zapContractInfo.name,zapContractInfo.address,zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve','poolContract']);\n    if (poolContractInfo){\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi){\n        curvePoolContract = await this.props.initContract(poolContractInfo.name,poolContractInfo.address,poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve','migrationContract']);\n    if (migrationContractInfo){\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi){\n        migrationContract = await this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account=null,curveTokenBalance=null,max_slippage=null) => {\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage){\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]);\n        if (curveIdleTokens){\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage){\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account=null,curveTokenBalance=null,fixDecimals=false,useCoinIndex=false) => {\n\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals){\n          tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token,amount,deposit=false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount)>0){\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount,18);\n        if (!deposit){\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount,curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts,deposit=true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract){\n      return await this.genericContractCall(migrationContract.name,'calc_token_amount',[amounts,deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token,amount,deposit=true,uneven_amounts=null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract){\n\n      const n_coins = this.getGlobalConfig(['curve','params','n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)){\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins){\n        amounts = await this.getCurveAmounts(token,amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name,'get_virtual_price'),\n        this.genericContractCall(depositContract.name,'calc_token_amount',[amounts,deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount){\n        amount = this.fixTokenDecimals(amount,18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice,18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount,18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit){\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit){\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getStkAaveDistribution = async (tokenConfig,aTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getStkAaveDistribution_${tokenConfig.idle.token}_${aTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let aaveDistribution = this.BNify(0);\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    const aTokenConfig = tokenConfig.protocols.find( p => p.name === stkAAVETokenConfig.protocol );\n\n    if (!aTokenConfig || stkAAVETokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n      return aaveDistribution;\n    }\n\n    const aaveIncentivesController_address = await this.genericContractCallCached(aTokenConfig.token,'getIncentivesController',[],{},'latest',null);\n\n    // console.log('getStkAaveDistribution',tokenConfig.idle.token,aTokenConfig.token,aaveIncentivesController_address);\n\n    if (!aaveIncentivesController_address){\n      return aaveDistribution;\n    }\n\n    const IAaveIncentivesController_name = `IAaveIncentivesController_${aTokenConfig.token}`;\n    await this.props.initContract(IAaveIncentivesController_name,aaveIncentivesController_address,stkAAVETokenConfig.abi);\n\n    let [\n      aTokenTotalSupply,\n      tokenAllocation,\n      assetData,\n    ] = await Promise.all([\n      this.getTokenTotalSupply(aTokenConfig.token),\n      this.getTokenAllocation(tokenConfig,false,false),\n      this.genericContractCallCached(IAaveIncentivesController_name,'getAssetData',[aTokenConfig.address]),\n    ]);\n\n    if (assetData && tokenAllocation){\n\n      const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n\n      if (aaveAllocationPerc && aaveAllocationPerc.gte(0.001)){\n        if (!aTokenIdleSupply){\n          aTokenIdleSupply = await this.getContractBalance(aTokenConfig.token,tokenConfig.idle.address);\n        }\n\n        const aaveSpeed = this.BNify(assetData[1]);\n        aTokenIdleSupply = this.BNify(aTokenIdleSupply);\n        aTokenTotalSupply = this.BNify(aTokenTotalSupply);\n        const secondsPerYear = this.getGlobalConfig(['network','secondsPerYear']);\n\n        const aavePoolShare = aTokenIdleSupply.div(aTokenTotalSupply);\n        aaveDistribution = aaveSpeed.times(aavePoolShare);\n\n        if (annualize){\n          aaveDistribution = aaveDistribution.div(1e18).times(secondsPerYear);\n        }\n\n        // console.log('getStkAaveDistribution',tokenConfig.idle.token,aTokenIdleSupply.toFixed(),aTokenTotalSupply.toFixed(),aavePoolShare.toFixed(),aaveSpeed.toFixed(),aaveDistribution.toFixed());\n\n        if (!this.BNify(aaveDistribution).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,aaveDistribution);\n        }\n      }\n    }\n\n    return aaveDistribution;\n  }\n  getStkAaveUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const aTokenInfo = tokenConfig.protocols.find( p => (p.name === stkAAVETokenConfig.protocol) );\n      if (aTokenInfo){\n        const [\n          userPoolShare,\n          aaveDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getStkAaveDistribution(tokenConfig,null,false),\n        ]);\n\n        if (aaveDistribution && userPoolShare){\n          output = output.plus(aaveDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getStkAaveApr = async (token,tokenConfig,aaveConversionRate=null) => {\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    if (!stkAAVETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getStkAaveApr_${tokenConfig.idle.token}_${aaveConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let stkAaveAPR = this.BNify(0);\n    const aaveDistribution = await this.getStkAaveDistribution(tokenConfig);\n\n    if (aaveDistribution && this.BNify(aaveDistribution).gt(0)){\n\n      // Get COMP conversion rate\n      if (!aaveConversionRate){\n        const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        try {\n          const destTokenConfig = {\n            address:stkAAVETokenConfig.addressForPrice || stkAAVETokenConfig.address\n          };\n          aaveConversionRate = await this.getUniswapConversionRate(DAITokenConfig,destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!aaveConversionRate || aaveConversionRate.isNaN()){\n          aaveConversionRate = this.BNify(1);\n        }\n      }\n\n      const stkAaveValue = this.BNify(aaveConversionRate).times(aaveDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        stkAaveAPR = stkAaveValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('getStkAaveApr',tokenConfig.idle.token,aaveDistribution.toFixed(),this.BNify(aaveConversionRate).toFixed(),stkAaveValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),stkAaveAPR.toFixed());\n\n        if (!this.BNify(stkAaveAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,stkAaveAPR);\n        }\n      }\n    }\n\n    return stkAaveAPR;\n  }\n  getCompAPR = async (token,tokenConfig,cTokenIdleSupply=null,compConversionRate=null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens','COMP']);\n    if (!COMPTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig,cTokenIdleSupply);\n\n    if (compDistribution){\n\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get COMP conversion rate\n      if (!compConversionRate){\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig,COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()){\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCallCached('Comptroller','compSpeeds',[cTokenAddress]);\n    if (compSpeed){\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig,cTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n    if (cTokenInfo){\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)){\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.getTokenTotalSupply(cTokenInfo.token)\n        ]);\n\n        if (compSpeed && cTokenTotalSupply){\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply){\n            cTokenIdleSupply = await this.getContractBalance(cTokenInfo.token,tokenConfig.idle.address);\n          }\n\n          if (cTokenIdleSupply){\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network','blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize){\n              compDistribution = compDistribution.div(1e18).times(this.BNify(blocksPerYear));\n            }\n\n            if (!this.BNify(compDistribution).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (cTokenInfo){\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getCompDistribution(tokenConfig,null,false),\n        ]);\n\n        if (compDistribution && userPoolShare){\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens=null) => {\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr,tokenAllocation] = await Promise.all([\n        this.getCompAPR(token,tokenConfig),\n        this.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (compApr && tokenAllocation){\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function() {\n      return this.reduce(function(pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function() {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function() {\n      return this.sum()/this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,7200,'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length-1];\n\n        rates.forEach( r => {\n          if (!protocols){\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach( p1 => {\n              const foundProtocol = tokenConfig.protocols.find( p2 => ( p2.address.toLowerCase() === p1.protocolAddr.toLowerCase() ) );\n              if (foundProtocol){\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach( p => {\n              header.push('APR '+p.name);\n              header.push('SCORE '+p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp*1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach( pInfo => {\n            const pData = r.protocolsData.find( p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()) );\n            let pRate = '';\n            let pScore = '';\n            if (pData){\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined'){\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()){\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n                if (!isNaN(parseFloat(pRate))){\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))){\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach( p => {\n          const avgRate = aprAvg[p].sum()/aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach( p => {\n          const avgScore = scoreAvg[p].sum()/scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken=null,availableTokens=null,convertToken=null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address,convertToken,enabledTokens);\n      if (compTokenBalance && compTokenBalance.total){\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken){\n      this.idleGovToken = new IdleGovToken(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach( govToken => {\n      const govTokenConfig = govTokens[govToken];\n      if (!govTokenConfig.enabled || govTokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n      if (govTokenConfig.protocol === 'idle'){\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find( p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()) )\n        if (foundProtocol){\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed,frequency='day',mode='block') => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n    const secondsPerYear = this.BNify(this.getGlobalConfig(['network','secondsPerYear']));\n    const multipliers = {\n      'day':{\n        'block':blocksPerYear.div(365.242199),\n        'second':secondsPerYear.div(365.242199)\n      },\n      'week':{\n        'block':blocksPerYear.div(52.1429),\n        'second':secondsPerYear.div(52.1429)\n      },\n      'month':{\n        'block':blocksPerYear.div(12),\n        'second':secondsPerYear.div(12)\n      },\n      'year':{\n        'block':blocksPerYear.div(1),\n        'second':secondsPerYear.div(1)\n      }\n    };\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()){\n      return speed.times(multipliers[frequency][mode]);\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account,tokenConfig=null,enabledTokens=null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken){\n        case 'COMP':\n          output = await this.getCompUserDistribution(account,availableTokens);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account,availableTokens);\n        break;\n        default:\n        break;\n      }\n\n      if (output){\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig,enabledTokens=null) => {\n    const govTokensDistribution = {};\n    const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n    \n    await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n      let govSpeed = null;\n      const govTokenConfig = tokenGovTokens[govToken];\n\n      switch (govToken){\n        case 'COMP':\n          govSpeed = await this.getCompDistribution(tokenConfig,null,false);\n        break;\n        case 'stkAAVE':\n          govSpeed = await this.getStkAaveDistribution(tokenConfig,null,false);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n        break;\n        default:\n        break;\n      }\n\n      if (govSpeed){\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency && govTokenConfig.distributionMode){\n          govSpeed = this.fixDistributionSpeed(govSpeed,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token,tokenConfig,enabledTokens=null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false){\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken){\n        case 'stkAAVE':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getStkAaveApr(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the AAVE token proportionally on Idle funds allocation in aave\n              if (tokenAllocation){\n                const aTokenConfig = tokenConfig.protocols.find( p => (p.name === govTokenConfig.protocol) );\n                if (aTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()]){\n                    const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n                    output = output.times(aaveAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getCompAPR(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation){\n                const cTokenConfig = tokenConfig.protocols.find( p => (p.name === 'compound') );\n                if (cTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()]){\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode){\n            case 'apr':\n              output = await idleGovToken.getAPR(token,tokenConfig);\n            break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output){\n                output = this.fixTokenDecimals(output,18);\n                output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n              }\n            break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n            break;\n            default:\n            break;\n          }\n        break;\n        default:\n        break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)){\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address=null,convertToken='DAI',enabledTokens=null) => {\n    if (!address){\n      address = this.props.tokenConfig.idle.address;\n    }\n\n    const cachedDataKey = `getGovTokensBalances_${address}_${convertToken}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)){\n        return;\n      }\n      \n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const destTokenConfig = {\n        address:govTokenConfig.addressForPrice || govTokenConfig.address\n      };\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token,address);\n\n      if (govTokenBalance){\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken){\n          const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,destTokenConfig);\n          } catch (error) {\n            tokenConversionRate = this.BNify(0);\n          }\n        }\n\n        const tokenBalance = this.fixTokenDecimals(govTokenBalance,govTokens[token].decimals,tokenConversionRate);\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = tokenBalance;\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total){\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,govTokensBalances);\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address){\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find( tokenConfig => (tokenConfig.enabled && tokenConfig.address.toLowerCase() === address.toLowerCase()) );\n  }\n  getGovTokensUserTotalBalance = async (account=null,availableTokens=null,convertToken=null,checkShowBalance=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${JSON.stringify(Object.keys(availableTokens))}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,null,checkShowBalance);\n    if (govTokensUserBalances){\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce( (acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensIndexes = async (account,tokenConfig) => {\n    if (!account){\n      account = this.props.account;\n    }\n    const output = {};\n    const govTokensAmounts = await this.getGovTokensUserAmounts(tokenConfig.idle.token,account);\n    if (govTokensAmounts){\n      await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n        // Get gov Token config by index\n        const govTokenAddress = await this.getGovTokenAddessByIndex(tokenConfig.idle.token,govTokenIndex);\n\n        if (govTokenAddress){\n          const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n          if (govTokenConfig){\n            output[govTokenConfig.token] = govTokenIndex;\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n  getGovTokenAddessByIndex = async (token,govTokenIndex) => {\n    const cachedDataKey = `govTokenAddressByIndex_${token}_${govTokenIndex}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log(cachedDataKey,cachedData);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token,'govTokens',[govTokenIndex]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,govTokenAddress,null);\n  }\n  getGovTokensUserAmounts = async (token,account) => {\n    const cachedDataKey = `govTokenUserAmount_${token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token,'getGovTokensAmounts',[account]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,govTokenAddress);\n  }\n  getGovTokensUserBalances = async (account=null,availableTokens=null,convertToken=null,govTokenConfigForced=null,checkShowBalance=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.getGovTokensUserAmounts(idleTokenConfig.token,account);\n\n      // console.log('getGovTokensUserBalances_1',idleTokenConfig.token,govTokensAmounts);\n\n      if (govTokensAmounts){\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.getGovTokenAddessByIndex(idleTokenConfig.token,govTokenIndex);\n\n          // console.log('getGovTokensUserBalances_2',idleTokenConfig.token,govTokenIndex,govTokenAddress);\n\n          if (govTokenAddress){\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()){\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken){\n                const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n                if (fromTokenConfig){\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n                  } catch (error) {\n                    \n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount,govTokenConfig.decimals,tokenConversionRate);\n\n              // console.log('getGovTokensUserBalances',idleTokenConfig.token,govTokenIndex,govTokenConfig.token,govTokenAddress,parseFloat(tokenConversionRate),parseFloat(govTokenAmount));\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]){\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, 'latest', null);\n    if (fee){\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig=null,account=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig){\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent',tokenConfig.token,tokenConfig,account),\n      this.loadAssetField('redeemableBalance',tokenConfig.token,tokenConfig,account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance){\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig,account=null,availableTokens=null,convertToken=null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce( (totalTVL,tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()){\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    },this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens:{},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(tokenConfig)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply,18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL,token,tokenConfig,isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (govTokenBalance && govTokenConversionRate){\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance,govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()){\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply){\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply,18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL,token,oldTokenConfig,isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()){\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint,false,config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length>0){\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey,latestFeed,endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAggregatedStats = async (addGovTokens=true) => {\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','tvls']);\n    const tvls = await this.makeCachedRequest(endpointInfo.endpoint,endpointInfo.TTL,true,false,config);\n\n    if (tvls){\n      const avgAPY = this.BNify(tvls.avgAPY);\n      const totalAUM = this.BNify(tvls.totalTVL);\n      return {\n        avgAPY,\n        totalAUM\n      };\n    } else {\n      return await this.getAggregatedStats_chain();\n    }\n  }\n  getAggregatedStats_chain = async (addGovTokens=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())){\n      return {\n        avgAPR:this.BNify(cachedData.avgAPR),\n        avgAPY:this.BNify(cachedData.avgAPY),\n        totalAUM:this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig,tokenAllocation,addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()){\n          const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig,isRisk);\n          totalAUM = totalAUM.plus(tokenAUM);\n          // console.log(tokenConfig.idle.token+'V4',tokenAUM.toFixed());\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()){\n            avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (tokenBalance && tokenConversionRate){\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance,govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()){\n                // console.log(tokenConfig.idle.token+'V4 - COMP',tokenBalanceConverted.toFixed());\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig,false,false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()){\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation,token,oldTokenConfig,isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy=null) => {\n\n    if (!this.props.availableStrategies || !this.props.account){\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy){\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig,this.props.account);\n        \n        if (migrationEnabled){\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol=null) => {\n    if (!this.props.account){\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools','tokenMigration','props','availableTokens']);\n    if (protocolsTokens){\n      await this.asyncForEach(Object.keys(protocolsTokens),async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase() ){\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi){\n          tokenContract = await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n        }\n        if (tokenContract){\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token,this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)){\n            tokenBalances[token] = {\n              tokenConfig,\n              balance:tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance,token,tokenConfig,isRisk=false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,isRisk);\n      // console.log('convertTokenBalance',token,isRisk,tokenUsdConversionRate);\n      if (tokenUsdConversionRate){\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n\n  getAvgAPYStats = async (address,isRisk,startTimestamp=null,endTimestamp=null) => {\n\n    const apiResults = await this.getTokenApiData(address,isRisk,startTimestamp,endTimestamp,true,7200);\n\n    if (apiResults && apiResults.length){\n      const apr = apiResults.reduce( (sum,r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate,18);\n        return sum.plus(idleRate);\n      },this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return this.BNify(0);\n  }\n\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig,isRisk,conversionRateField=null,count=0) => {\n\n    if (!conversionRateField){\n      conversionRateField = this.getGlobalConfig(['stats','tokens',tokenConfig.token,'conversionRateField']);\n      if (!conversionRateField){\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,null,'desc',1);\n\n    if (tokenData && tokenData.length){\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()){\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField],18);\n        if (!this.BNify(conversionRate).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n        }\n      }\n    }\n\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig,tokenConfig);\n    if (!this.BNify(conversionRate).isNaN()){\n      return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n    }\n\n    if (count<3){\n      return await this.getTokenConversionRate(tokenConfig,isRisk,conversionRateField,count+1); \n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config),\n      this.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenData && tokenAllocation){\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach( protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001) && tokenData.length>0){\n          const protocolInfo = tokenData[0].protocolsData.find( p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase()) );\n          if (protocolInfo){\n            const protocolScore = this.BNify(protocolInfo.defiScore);\n            if (!protocolScore.isNaN()){\n              tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n            }\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)){\n      tokenScore = await this.getTokenScoreApi(tokenConfig,isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.scores;\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}`;\n    let scores = await this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config);\n\n    if (scores && scores.length>0){\n      let tokenData = scores.find( s => s.address.toLowerCase() === tokenConfig.address.toLowerCase() );\n      if (tokenData){\n        let tokenScore = this.BNify(tokenData.idleScore);\n        if (tokenScore && tokenScore.gt(0)){\n          // Set cached data\n          return this.setCachedData(cachedDataKey,tokenScore);\n        // Take latest historical valid score\n        } else {\n          const timestamp = parseInt(Date.now()/1000);\n          const startTimestamp = parseInt(timestamp)-(60*60*24);\n          tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,null,true,null,'DESC');\n\n          const filteredTokenData = tokenData.filter( d => (this.BNify(d.idleScore).gt(0)) );\n          if (filteredTokenData.length){\n            tokenScore = this.BNify(filteredTokenData[0].idleScore);\n            if (!this.BNify(tokenScore).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n            }\n          }\n        }\n      }\n    }\n\n    return this.BNify(0);\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig,tokenAllocation=false,addGovTokens=true) => {\n\n    const tokenAprs = {\n      avgApr: this.BNify(0),\n      avgApy: this.BNify(0)\n    };\n\n    if (!tokenConfig.idle){\n      // console.log('getTokenAprs - !tokenConfig.idle',tokenConfig);\n      return tokenAprs;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgApr && !this.BNify(cachedData.avgApr).isNaN()) && (cachedData.avgApy && !this.BNify(cachedData.avgApy).isNaN()) ){\n      // console.log('getTokenAprs - CACHED',tokenConfig.idle.token,cachedData);\n      return {\n        avgApr:this.BNify(cachedData.avgApr),\n        avgApy:this.BNify(cachedData.avgApy)\n      };\n    }\n\n    const Aprs = await this.getAprs(tokenConfig.idle.token);\n\n    if (!Aprs){\n      // console.log('getTokenAprs - !Aprs',Aprs);\n      return tokenAprs;\n    }\n\n    if (!tokenAllocation){\n      tokenAllocation = await this.getTokenAllocation(tokenConfig);\n    }\n\n    if (!tokenAllocation){\n      // console.log('getTokenAprs - !tokenAllocation',tokenAllocation);\n      return tokenAprs;\n    }\n\n    const addresses = Aprs.addresses.map((addr,i) => { return addr.toString().toLowerCase() });\n    const aprs = Aprs.aprs;\n\n    const govTokensAprs = {};\n    const protocolsAprs = {};\n    const protocolsApys = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const protocolAddr = protocolInfo.address.toString().toLowerCase();\n      const addrIndex = addresses.indexOf(protocolAddr);\n      if ( addrIndex !== -1 ) {\n        let protocolApr = this.BNify(+this.toEth(aprs[addrIndex]));\n        let protocolApy = this.apr2apy(protocolApr.div(100)).times(100);\n\n        if (addGovTokens){\n          let govTokenAPR = null;\n          const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n          await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n            switch (govToken){\n              case 'COMP':\n                govTokenAPR = await this.getCompAPR(tokenConfig.token,tokenConfig);\n              break;\n              case 'stkAAVE':\n                govTokenAPR = await this.getStkAaveApr(tokenConfig.token,tokenConfig);\n              break;\n              default:\n              break;\n            }\n            if (govTokenAPR){\n              govTokensAprs[govToken] = govTokenAPR;\n            }\n          });\n          \n        }\n\n        protocolsApys[protocolAddr] = protocolApy;\n        protocolsAprs[protocolAddr] = protocolApr;\n      }\n    });\n\n    if (tokenAllocation){\n      tokenAprs.avgApr = this.getAvgApr(protocolsAprs,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n      tokenAprs.avgApy = this.apr2apy(tokenAprs.avgApr.div(100)).times(100);\n\n      Object.values(govTokensAprs).forEach( govTokenAPR => {\n        tokenAprs.avgApr = tokenAprs.avgApr.plus(govTokenAPR);\n        tokenAprs.avgApy = tokenAprs.avgApy.plus(govTokenAPR);\n      });\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = this.getGlobalConfig(['govTokens','IDLE','showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens','IDLE','enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR){\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token,tokenConfig);\n        if (idleAPR){\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n\n      if (this.BNify(tokenAprs.avgApy).isNaN()){\n        tokenAprs.avgApy = this.BNify(0);\n      }\n      if (this.BNify(tokenAprs.avgApr).isNaN()){\n        tokenAprs.avgApr = this.BNify(0);\n      }\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,tokenAprs);\n    }\n\n    return tokenAprs;\n  }\n  abbreviateNumber = (value,decimals=3,maxPrecision=5,minPrecision=0) => {\n\n    const isNegative = parseFloat(value)<0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\",\"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1,maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value>=1000){\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2,decimals) : null;\n      newValue = parseInt(newValue).toString()+( decimalPart ? '.'+decimalPart : '' );\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue>=1 && (newValue.length-1)>maxPrecision){\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length-1)<minPrecision) {\n      const difference = minPrecision-(newValue.length-1);\n      const append = this.BNify(value).abs().toString().replace('.','').substr((newValue.length-1),difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative){\n      newValue = '-'+newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance,label,decimals,maxLen,highlightedDecimals){\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.','').length;\n    if (numLen>maxLen){\n      decimals = Math.max(0,decimals-(numLen-maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance%1).toPrecision(decimals).substr(2,decimals);;\n    decPart = (decPart+(\"0\".repeat(decimals))).substr(0,decimals);\n\n    if (highlightedDecimals){\n      const highlightedDec = decPart.substr(0,highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? ( <>{highlightedIntPart}<small style={{fontSize:'70%'}}>{decPart}</small> <Text.span fontSize={[1,2]}>{label}</Text.span></> ) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? ( <>{intPart}<small>.{decPart}</small>{ label !== '%' ? ' ' : null }{ label ? <Text.span fontSize={[1,2]}>{label}</Text.span> : null }</> ) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={ isInteractive ? e => this.props.handleClick(this.props) : null }\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={fieldInfo.style || {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            <FieldComponent\n                              {...this.props}\n                              fieldInfo={fieldInfo}\n                              colProps={colInfo.props}\n                              parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            />\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'cellText'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver:false\n  }\n\n  setMouseOver(mouseOver){\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p:0,\n      border:1,\n      boxShadow:1,\n      borderRadius:2,\n      borderColor:null,\n      position:'relative',\n      minHeight:'initial',\n      backgroundColor:'cardBg'\n    };\n\n    if (isActive || (isInteractive && this.state.mouseOver)){\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length){\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]){\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length>0 &&\n            <Flex\n              mt={[3,4]}\n              ml={[3,4]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              {...this.props.titleParentProps}\n            >\n              <Heading.h4\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n                {...this.props.titleProps}\n              >\n                {this.props.title}\n              </Heading.h4>\n              {\n                this.props.description && this.props.description.length>0 &&\n                  <Tooltip\n                    placement={'top'}\n                    message={this.props.description}\n                  >\n                    <Icon\n                      ml={2}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n              }\n            </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass Staking extends Component {\n\n  state = {\n    tokenConfig:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedOption:null,\n    availableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      });\n    }\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      availableTokens\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const SelectedComponent = this.state.tokenConfig ? this.state.tokenConfig.component : null;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      SelectedComponent && (\n                        <SelectedComponent\n                          {...this.props}\n                          tokenConfig={this.state.tokenConfig}\n                          contractInfo={this.state.contractInfo}\n                          selectedToken={this.state.selectedToken}\n                        />\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport { Box, Flex, Text } from 'rimble-ui'\nimport Faquestion from '../Faquestion/Faquestion';\n\nclass GenericFaqs extends Component {\n  state = {\n    openedAnswer:null,\n    selectedSection:null\n  };\n  componentWillMount(){\n    const selectedSection = Object.keys(this.props.questions)[0];\n    this.setSection(selectedSection);\n  }\n  setSection(section) {\n    this.setState(state => ({...state, selectedSection: section, openedAnswer: null}));\n  }\n  toggleAnswer(e,i) {\n    e.preventDefault();\n    this.setState(state => ({...state, openedAnswer: state.openedAnswer===i ? null : i }));\n  };\n\n  render() {\n    const showSections = this.props.showSections === undefined || this.props.showSections;\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={\"center\"}\n        >\n          {\n            showSections && (\n              <Flex\n                mb={[3,4]}\n                px={[2,0]}\n                width={[1,3/5]}\n                flexDirection={'row'}\n                justifyContent={'space-between'}\n              >\n                {\n                  Object.keys(this.props.questions).map( (section,i) => {\n                    const isSelected = section === this.state.selectedSection;\n                    return (\n                      <Flex\n                        key={`section_${i}`}\n                        textAlign={'center'}\n                        justifyContent={'center'}\n                        width={1/Object.keys(this.props.questions).length}\n                        borderBottom={ isSelected ? '3px solid #0036ff' : 'none'}\n                      >\n                        <Text\n                          mb={1}\n                          fontWeight={3}\n                          fontSize={[2, 3]}\n                          textAlign={'center'}\n                          onClick={() => this.setSection(section)}\n                          color={isSelected ? 'blue' : 'copyColor'}\n                          className={['pointer', isSelected ? 'selected' : '']}\n                        >\n                          {section}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            )\n          }\n          <Box\n            width={1}\n          >\n            {\n              this.props.questions[this.state.selectedSection].map( (question,i) => (\n                <Faquestion\n                  key={`answer_${i}`}\n                  answer={question.a}\n                  pt={i === 0 ? 0 : ''}\n                  question={question.q}\n                  isOpened={this.state.openedAnswer === i}\n                  handleClick={ e => this.toggleAnswer(e,i) }\n                />\n              ))\n            }\n          </Box>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default GenericFaqs;","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass Base extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const trancheDetails = this.props.trancheDetails;\n    const strategyInfo = this.functionsUtil.getGlobalConfig(['strategies','tranches']);\n    const tokenConfig = this.props.tokenConfig || this.props.availableTranches[strategyInfo.protocol][strategyInfo.token];\n    return (\n      <DashboardCard\n        cardProps={{\n          py:3,\n          px:3,\n          border:null,\n          style:{\n            // border:`1px solid ${trancheDetails.color.hex}`\n          }\n        }}\n      >\n        <Flex\n          pb={2}\n          mb={3}\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n          borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n        >\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Icon\n              mr={2}\n              size={'2.2em'}\n              name={trancheDetails.icon}\n              color={trancheDetails.color.hex}\n            />\n            <Text\n              fontWeight={4}\n              fontSize={[3,6]}\n              color={trancheDetails.color.hex}\n            >\n              {trancheDetails.name}\n            </Text>\n          </Flex>\n          <Flex\n            alignItems={'flex-end'}\n            flexDirection={'column'}\n          >\n            <TrancheField\n              fieldInfo={{\n                name:`${trancheDetails.baseName}Apy`,\n                showTooltip:false,\n                props:{\n                  decimals:2,\n                  fontWeight:4,\n                  fontSize:[3,6],\n                  textAlign:'center',\n                  flexProps:{\n                    justifyContent:'center'\n                  },\n                  color:this.props.trancheDetails.color.hex\n                },\n              }}\n              {...this.props}\n              tokenConfig={tokenConfig}\n              token={strategyInfo.token}\n              tranche={strategyInfo.tranche}\n              protocol={strategyInfo.protocol}\n            />\n            {\n              /*\n              <TrancheField\n                fieldInfo={{\n                  showLoader:false,\n                  name:'trancheIDLEDistribution',\n                  props:{\n                    decimals:2,\n                    fontWeight:2,\n                    fontSize:[0,1],\n                    color:'cellText',\n                    textAlign:'center',\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  },\n                }}\n                {...this.props}\n                tokenConfig={tokenConfig}\n                token={strategyInfo.token}\n                trancheConfig={tokenConfig.AA}\n                tranche={strategyInfo.tranche}\n                protocol={strategyInfo.protocol}\n              />\n              */\n            }\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          <Text\n            mb={3}\n            fontWeight={3}\n            color={'copyColor'}\n          >\n            {trancheDetails.description.long}\n          </Text>\n          <Flex\n            width={1}\n            my={3}\n            flexDirection={'column'}\n          >\n            {\n              trancheDetails.features.map( (feature,index) => (\n                <Flex\n                  mb={2}\n                  width={1}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  key={`feature_${index}`}\n                >\n                  <Icon\n                    mr={2}\n                    name={'Done'}\n                    color={trancheDetails.color.hex}\n                  />\n                  <Text\n                    fontSize={3}\n                    fontWeight={3}\n                    color={trancheDetails.color.hex}\n                  >\n                    {feature}\n                  </Text>\n                </Flex>\n              ))\n            }\n          </Flex>\n          <Button\n            mt={3}\n            width={1}\n            contrastColor={'cardBg'}\n            icon={trancheDetails.icon}\n            mainColor={trancheDetails.color.hex}\n            onClick={e => this.props.selectTrancheType(trancheDetails.route)}\n          >\n            {\n              this.props.tokenConfig ? `Go to ${trancheDetails.name}` : `Start with ${trancheDetails.name}`\n            }\n          </Button>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default Base;\n","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TrancheBox from '../TrancheBox/TrancheBox';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass Base extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n    return (\n      <Box\n        mb={3}\n        width={1}\n      >\n        {\n          !this.props.tokenConfig && (\n            <Title\n              mb={3}\n            >\n              Welcome to Tranches\n            </Title>\n          )\n        }\n        <Title\n          mb={3}\n          fontWeight={2}\n          fontSize={[3,4]}\n          color={'copyColor'}\n          textAlign={'center'}\n        >\n          Select your preferred Tranche\n        </Title>\n        <Flex\n          width={1}\n          flexDirection={['column','row']}\n          justifyContent={'space-between'}\n        >\n          {\n            Object.keys(tranchesDetails).map( trancheType => (\n              <Flex\n                mb={[3,0]}\n                flexDirection={'column'}\n                key={`tranche_${trancheType}`}\n                width={[1,(1/Object.keys(tranchesDetails).length)-0.02]}\n              >\n                <Flex\n                  width={1}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  justifyContent={'center'}\n                >\n                  <TrancheBox\n                    {...this.props}\n                    tokenConfig={this.props.tokenConfig}\n                    trancheDetails={tranchesDetails[trancheType]}\n                  />\n                </Flex>\n              </Flex>\n            ))\n          }\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Base;\n","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    approveEnabled:true,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (actionChanged || accountChanged || tokenBalanceChanged || contractChanged || approveEnabledChanged || tokenConfigChanged || permitEnabledChanged){\n      await this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.setState((prevState) => ({\n      inputValue\n    }),() => {\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log('Approve',this.props.tokenConfig.token,this.props.contractInfo.address);\n\n      this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    const callback = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveDeposit`,\n        eventValue: inputValue.toFixed(),\n        eventAction: this.props.tokenConfig.token,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        },false);\n        this.setState({\n          showPermitBox:false\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const contractName = this.props.contractInfo.name;\n\n    let params = null;\n\n    // Check contract approved without permit\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, contractName);\n      // console.log('signedParameters',signedParameters);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      params = this.props.getTransactionParams(_amount,this.state.fastBalanceSelector);\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n\n      // console.log('SendTxWithBalance',contractName, methodName, methodParams, value);\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      return true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n    const contractInfo = await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n\n    if (contractInfo){\n      const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n      return contractApproved;\n    }\n    \n    return false;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const contractApproved = await this.checkContractApproved();\n    const approveEnabled = this.props.approveEnabled !== false;\n\n    this.setState({\n      inputValue,\n      approveEnabled,\n      contractApproved,\n      fastBalanceSelector\n    });\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              <Box\n                mt={2}\n                width={1}\n              >\n                {\n                  this.state.showPermitBox && this.props.permitEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:3,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                    <Flex\n                      p={2}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                      backgroundColor={'DashboardCard'}\n                      border={`1px solid ${this.props.theme.colors.primary}`}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Permit signature?\n                      </Link>\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        name={'Warning'}\n                        color={'primary'}\n                      />\n                    </Flex>\n                  )\n                }\n              </Box>\n              {\n                this.state.approveEnabled && !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        {...this.props}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          dangerouslySetInnerHTML={{\n                            __html:this.props.approveDescription\n                          }}\n                        />\n                        <RoundButton\n                          buttonProps={{\n                            mt:3,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                              >\n                                {this.props.balanceSelectorInfo.text}\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          handleClick={this.executeTx.bind(this)}\n                          buttonProps={Object.assign({\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled||this.props.buttonDisabled\n                          },this.props.buttonProps)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport { Flex, Text, Icon, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakedBalance:null,\n    trancheBalance:null,\n    approveEnabled:null,\n    buttonDisabled:false,\n    approveDescription:null,\n    selectedAction:'deposit',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChange = prevState.selectedAction !== this.state.selectedAction;\n    if (selectedActionChange){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.account){\n      return null;\n    }\n\n    const [\n      // blockNumber,\n      tokenBalance,\n      trancheBalance,\n      // cdoCoolingPeriod,\n      // latestHarvestBlock,\n      // stakeCoolingPeriod,\n      // rewardsTokensInfo,\n      // userStakeBlock,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'coolingPeriod'),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'latestHarvestBlock'),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'coolingPeriod'),\n      // this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'usersStakeBlock',[this.props.account]),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('lastTranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n\n\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      tranchePrice,\n      stakedBalance,\n      trancheBalance,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        approveEnabled = true;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        contractInfo = this.props.trancheConfig.CDORewards;\n      break;\n      case 'unstake':\n        approveEnabled = false;\n        tokenConfig = this.props.trancheConfig;\n        contractInfo = this.props.trancheConfig.CDORewards;\n        balanceProp = this.state.stakedBalance;\n        if (!this.state.canUnstake){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantUnstake;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.tokenConfig;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        // balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n        // console.log('balanceProp',this.state.trancheBalance.toFixed(),this.state.tranchePrice.toFixed(),balanceProp.toFixed());\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.`;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      // if (this.state.selectedAction === 'withdraw'){\n\n      // }\n\n      methodParams = [amount];\n    }\n\n    console.log('getTransactionParams',methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        this.setState({\n          activeModal:'share'\n        })\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    const otherTrancheType = this.props.selectedTranche === 'AA' ? 'BB' : 'AA';\n    const otherTrancheDetails = this.functionsUtil.getGlobalConfig(['tranches',otherTrancheType]);\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Button\n            mb={2}\n            size={'small'}\n            width={'auto'}\n            contrastColor={'cardBg'}\n            icon={otherTrancheDetails.icon}\n            mainColor={otherTrancheDetails.color.hex}\n            onClick={e => this.props.selectTrancheType(otherTrancheDetails.route)}\n          >\n            Switch to {otherTrancheDetails.name}\n          </Button>\n        </Flex>\n        <DashboardCard\n          cardProps={{\n            py:3,\n            px:3,\n            border:null,\n            // style:{\n            //   border:`1px solid ${trancheDetails.color.hex}`\n            // }\n          }}\n        >\n          <Flex\n            pb={2}\n            mb={2}\n            alignItems={'center'}\n            flexDirection={'row'}\n            borderBottom={`1px solid ${trancheDetails.color.hex}`}\n          >\n            <Icon\n              mr={2}\n              name={trancheDetails.icon}\n              color={trancheDetails.color.hex}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={4}\n              fontSize={[3,4]}\n              color={'copyColor'}\n            >\n              {trancheDetails.name}\n            </Text>\n          </Flex>\n          <Flex\n            style={{\n              flexBasis:'0',\n              flex:'1 1 0px',\n              flexWrap:'wrap',\n              borderBottom:`1px solid ${this.props.theme.colors.divider}`\n            }}\n            alignItems={'flex-start'}\n            justifyContent={'flex-start'}\n          >\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Protocol\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Token\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Pool Size\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'tranchePool',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Auto-Farming\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'autoFarming',\n                  parentProps:{\n                    justifyContent:'flex-start'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Staking Rewards\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'stakingRewards',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                APY\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheApy',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n          </Flex>\n          {\n            (this.functionsUtil.BNify(this.state.stakedBalance).gt(0) || this.functionsUtil.BNify(this.state.trancheBalance).gt(0)) && (\n              <Flex\n                py={2}\n                style={{\n                  flexBasis:'0',\n                  flex:'1 1 0px',\n                  flexWrap:'wrap',\n                  borderBottom:`1px solid ${this.props.theme.colors.divider}`\n                }}\n                alignItems={'flex-start'}\n                justifyContent={'flex-start'}\n              >\n                <Flex\n                  width={0.33}\n                  flexDirection={'column'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Deposited\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheDeposited',\n                      props:{\n                        decimals:4,\n                        fontWeight:2,\n                        fontSize:[2,4],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n                <Flex\n                  width={0.33}\n                  flexDirection={'column'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Staked\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheStaked',\n                      props:{\n                        decimals:4,\n                        fontWeight:2,\n                        fontSize:[2,4],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n                <Flex\n                  width={0.33}\n                  flexDirection={'column'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Redeemable\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheRedeemable',\n                      props:{\n                        decimals:4,\n                        fontWeight:2,\n                        fontSize:[2,4],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n              </Flex>\n            )\n          }\n          {\n            this.state.balanceProp && this.state.tokenConfig ? (\n              <Flex\n                width={1}\n                flexDirection={'column'}\n              >\n                <Flex\n                  mt={3}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <CardIconButton\n                    {...this.props}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    cardProps={{\n                      px:3,\n                      py:2,\n                      width:0.32\n                    }}\n                    text={'Deposit'}\n                    iconColor={'deposit'}\n                    icon={'ArrowDownward'}\n                    iconBgColor={'#ced6ff'}\n                    isActive={ this.state.selectedAction === 'deposit' }\n                    handleClick={ e => this.setSelectedAction('deposit') }\n                  />\n                  {\n                    this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) ? (\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.32\n                        }}\n                        text={'Unstake'}\n                        icon={'LayersClear'}\n                        iconColor={'redeem'}\n                        iconBgColor={'#ceeff6'}\n                        isActive={ this.state.selectedAction === 'unstake' }\n                        handleClick={ e => this.setSelectedAction('unstake') }\n                      />\n                    ) : (\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.32\n                        }}\n                        text={'Stake'}\n                        icon={'Layers'}\n                        iconColor={'deposit'}\n                        iconBgColor={'#ced6ff'}\n                        isDisabled={ !this.state.userHasAvailableFunds }\n                        isActive={ this.state.selectedAction === 'stake' }\n                        handleClick={ e => this.state.userHasAvailableFunds ? this.setSelectedAction('stake') : null }\n                      />\n                    )\n                  }\n                  <CardIconButton\n                    {...this.props}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    cardProps={{\n                      px:3,\n                      py:2,\n                      width:0.32\n                    }}\n                    text={'Withdraw'}\n                    icon={'ArrowUpward'}\n                    iconColor={'redeem'}\n                    iconBgColor={'#ceeff6'}\n                    isDisabled={ !this.state.userHasAvailableFunds }\n                    isActive={ this.state.selectedAction === 'withdraw' }\n                    handleClick={ e => this.state.userHasAvailableFunds ? this.setSelectedAction('withdraw') : null }\n                  />\n                </Flex>\n                {\n                  this.state.infoText && (\n                    <IconBox\n                      cardProps={{\n                        p:2,\n                        mt:3,\n                        width:1,\n                      }}\n                      isActive={true}\n                      isInteractive={false}\n                      icon={'LightbulbOutline'}\n                      iconProps={{\n                        size:'1.2em',\n                        color:'flashColor'\n                      }}\n                      textProps={{\n                        fontWeight:500,\n                        fontSize:'15px',\n                        textAlign:'center',\n                        color:'flashColor'\n                      }}\n                      text={this.state.infoText}\n                    />\n                  )\n                }\n                <Flex\n                  mt={2}\n                >\n                  <SendTxWithBalance\n                    error={null}\n                    {...this.props}\n                    buttonProps={{\n                      width:[1,0.45]\n                    }}\n                    permitEnabled={false}\n                    tokenConfig={this.state.tokenConfig}\n                    tokenBalance={this.state.balanceProp}\n                    contractInfo={this.state.contractInfo}\n                    approveEnabled={this.state.approveEnabled}\n                    buttonDisabled={this.state.buttonDisabled}\n                    callback={this.transactionSucceeded.bind(this)}\n                    approveDescription={this.state.approveDescription}\n                    changeInputCallback={this.changeInputCallback.bind(this)}\n                    contractApproved={this.contractApprovedCallback.bind(this)}\n                    getTransactionParams={this.getTransactionParams.bind(this)}\n                    action={this.functionsUtil.capitalize(this.state.selectedAction)}\n                  >\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <BuyModal\n                        {...this.props}\n                        showInline={true}\n                        availableMethods={[]}\n                        buyToken={this.props.selectedToken}\n                      />\n                    </Flex>\n                  </SendTxWithBalance>\n                </Flex>\n              </Flex>\n            ) : !this.props.account ? (\n              <ConnectBox\n                {...this.props}\n              />\n            ) : (\n              <FlexLoader\n                flexProps={{\n                  mt:3,\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading Tranche Data...'}\n              />\n            )\n          }\n        </DashboardCard>\n        <ShareModal\n          confettiEnabled={true}\n          icon={`images/medal.svg`}\n          title={`Congratulations!`}\n          account={this.props.account}\n          closeModal={this.resetModal}\n          tokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'share'}\n          text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n          tweet={`I'm earning ${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport GenericFaqs from '../GenericFaqs/GenericFaqs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport TrancheDetails from '../TrancheDetails/TrancheDetails';\nimport TransactionsList from '../TransactionsList/TransactionsList';\n\nclass TranchePage extends Component {\n\n  state = {\n    transactions:[]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadTransactions();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const portfolioChanged = (this.props.portfolio && !prevProps.portfolio) || JSON.stringify(this.props.portfolio) !== JSON.stringify(prevProps.portfolio);\n    if (portfolioChanged){\n      this.loadTransactions();\n    }\n  }\n\n  loadTransactions(){\n    const transactions = this.props.portfolio ? this.props.portfolio.transactions.filter( t => t.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && t.token.toLowerCase() === this.props.selectedToken.toLowerCase() ) : [];\n    this.setState({\n      transactions\n    });\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n    const filteredTranchesTypes = Object.keys(tranchesDetails).filter( trancheType => !this.props.trancheType || this.props.trancheType === trancheType );\n    return (\n      <Box\n        mb={4}\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.capitalize(this.props.selectedProtocol)} - {this.props.selectedToken} - {this.props.trancheDetails ? this.props.trancheDetails.name : 'Tranches'} \n        </Title>\n        {\n          !this.props.trancheType ? (\n            <TrancheWelcome\n              {...this.props}\n              tokenConfig={this.props.tokenConfig}\n              selectTrancheType={this.props.selectTrancheType}\n            />\n          ) : (\n            <Flex\n              mt={2}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={this.props.trancheType ? 'center' : 'space-between'}\n            >\n              {\n                filteredTranchesTypes.map( trancheType => (\n                  <Flex\n                    mb={[3,0]}\n                    flexDirection={'column'}\n                    key={`tranche_${trancheType}`}\n                    width={[1,Math.min(0.5,(1/filteredTranchesTypes.length)-0.02)]}\n                  >\n                    <TrancheDetails\n                      {...this.props}\n                      selectedTranche={trancheType}\n                      cdoConfig={this.props.tokenConfig.CDO}\n                      selectTrancheType={this.props.selectTrancheType}\n                      trancheConfig={this.props.tokenConfig[trancheType]}\n                    />\n                  </Flex>\n                ))\n              }\n            </Flex>\n          )\n        }\n        {\n          this.props.trancheType && (\n            <Flex\n              width={1}\n              id={'faqs'}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Title\n                mb={3}\n                mt={[3,4]}\n              >\n                Frequently asked questions\n              </Title>\n              <Flex\n                width={[1,0.5]}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <GenericFaqs\n                  showSections={false}\n                  questions={{\n                    '':[\n                      {\n                        q: 'Lorem ipsum dolor sit amet',\n                        a: `Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.`\n                      },\n                      {\n                        q: 'Lorem ipsum dolor sit amet',\n                        a: `Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.`\n                      },\n                      {\n                        q: 'Lorem ipsum dolor sit amet',\n                        a: `Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.`\n                      }\n                    ]\n                  }}\n                />\n              </Flex>\n            </Flex>\n          )\n        }\n        {\n          this.props.account && this.state.transactions && this.state.transactions.length>0 && \n            <Flex\n              mb={[3,4]}\n              width={1}\n              id={'transactions'}\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Transactions</Title>\n              <TransactionsList\n                {...this.props}\n                enabledTokens={[this.props.selectedToken]}\n                transactionsList={this.state.transactions}\n                availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                  availableActions[t.action.toLowerCase()] = t.action;\n                  return availableActions;\n                },{})}\n                cols={[\n                  {\n                    title: this.props.isMobile ? '' : 'HASH',\n                    props:{\n                      width:[0.13,0.18]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        name:'hash',\n                        mobile:false\n                      }\n                    ]\n                  },\n                  {\n                    title:'ACTION',\n                    mobile:false,\n                    props:{\n                      width:0.12,\n                    },\n                    fields:[\n                      {\n                        name:'action'\n                      }\n                    ]\n                  },\n                  {\n                    title:'DATE',\n                    props:{\n                      width:[0.27,0.15],\n                    },\n                    fields:[\n                      {\n                        name:'date'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'STATUS',\n                    props:{\n                      width:[0.18,0.16],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'statusIcon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'status'\n                      }\n                    ]\n                  },\n                  {\n                    title:'AMOUNT',\n                    props:{\n                      width:[0.23,0.11],\n                    },\n                    fields:[\n                      {\n                        name:'amount'\n                      },\n                    ]\n                  },\n                  {\n                    title:'PROTOCOL',\n                    props:{\n                      width:[0.21, 0.14],\n                    },\n                    fields:[\n                      {\n                        type:'image',\n                        name:'custom',\n                        path:['protocolIcon'],\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        type:'text',\n                        mobile:false,\n                        name:'custom',\n                        path:['protocol']\n                      }\n                    ]\n                  },\n                  {\n                    title:'ASSET',\n                    props:{\n                      width:[0.16,0.14],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:[0,2],\n                          height:['1.4em','1.6em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      },\n                    ]\n                  },\n                ]}\n              />\n            </Flex>\n        }\n      </Box>\n    );\n  }\n}\n\nexport default TranchePage;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\n\nclass TranchesList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledProtocols = this.props.enabledProtocols;\n    if (!enabledProtocols || !enabledProtocols.length){\n      enabledProtocols = Object.keys(this.props.availableTranches);\n    }\n\n    return (\n      <Flex id=\"tranches-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"tranches-list\" flexDirection={'column'}>\n          {\n            enabledProtocols.map(protocol => {\n              const protocolConfig = this.props.availableTranches[protocol];\n              if (!protocolConfig){\n                return null;\n              }\n              const tranche = this.props.trancheType || null;\n              return Object.keys(protocolConfig).map( token => (\n                <TableRow\n                  {...this.props}\n                  token={token}\n                  tranche={tranche}\n                  protocol={protocol}\n                  key={`tranche-${protocol}`}\n                  rowId={`tranche-col-${protocol}`}\n                  tokenConfig={protocolConfig[token]}\n                  cardId={`tranche-card-${protocol}`}\n                  fieldComponent={this.props.fieldComponent || TrancheField}\n                />\n              ))\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TranchesList;\n","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass GenericPieChart extends Component {\n  state = {\n    chartProps:null,\n    selectedSlice:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.setStateSafe({\n        chartProps:null,\n        selectedSlice:null,\n      },() => {\n        this.loadData();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: this.props.tooltipFormat || (v => v),\n      sliceLabel: this.props.sliceLabel || (d => d.value),\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.margin || {top:0,right:0,bottom:0,left:0},\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n    };\n\n    if (this.props.showLegend){\n      chartProps.legends = [\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: this.props.theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ];\n    }\n\n    this.setStateSafe({\n      chartProps\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        {\n          this.state.chartProps && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                this.state.selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={this.state.selectedSlice.image}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={this.state.selectedSlice.value}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={this.props.defaultImage}\n                    />\n                    <Text\n                      fontSize={[3,4]}\n                      fontWeight={[3,4]}\n                    >\n                      {this.props.defaultValue}\n                    </Text>\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.props.defaultLabel}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.props.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default GenericPieChart;","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = earningsStart.plus(portfolio.totalAmountLent.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquityTranches extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTranches).reduce( (enabledTokens,protocol) => {\n        const tokens = Object.keys(this.props.availableTranches[protocol]);\n        tokens.forEach( token => {\n          if (!enabledTokens.includes(token)){\n            enabledTokens.push(token);\n          }\n        });\n        return enabledTokens;\n      },[]);\n    }\n\n    const transactions = this.props.transactionsList;\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(transactions).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Deposit':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const action = tx.action;\n          const balance = amountLent;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tranchePrice = this.functionsUtil.BNify(tx.tranchePrice);\n          const trancheTokens = this.functionsUtil.BNify(tx.trancheTokens);\n\n          if (!tranchePrice.isNaN() && !tranchePrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenAmount,\n              tranchePrice,\n              trancheTokens\n            });\n          }\n        });\n      }\n    });\n\n    // console.log('tokensBalance',tokensBalance);\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(Date.now()/1000)+86400;\n\n    const tokensData = {};\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n      tokensData[token] = [];\n    });\n\n    const trancheTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!trancheTokenBalance[token]){\n          trancheTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenDecimals = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'decimals']);\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const trancheTokens = trancheTokenBalance[token];\n              const tranchePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.tranchePrice,tokenDecimals);\n              let newBalance = trancheTokens.times(tranchePrice);\n\n              // Set new balance and tranchePrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tranchePrice = tranchePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tranchePrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Deposit':\n                trancheTokenBalance[token] = trancheTokenBalance[token].plus(tx.trancheTokens);\n              break;\n              default:\n                trancheTokenBalance[token] = trancheTokenBalance[token].minus(tx.trancheTokens);\n                if (trancheTokenBalance[token].lt(0)){\n                  trancheTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = trancheTokenBalance[token].times(lastTx.tranchePrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n\n        // console.log(timeStamp,token,filteredBalances,foundBalances);\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquityTranches;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TranchePage from '../TranchePage/TranchePage';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TranchesList from '../TranchesList/TranchesList';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport GenericPieChart from '../GenericPieChart/GenericPieChart';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport { Box, Flex, Heading, Loader, Text, Icon, Tooltip } from \"rimble-ui\";\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass Tranches extends Component {\n\n  state = {\n    portfolio:null,\n    transactions:[],\n    tokenConfig:null,\n    trancheType:null,\n    trancheRoute:null,\n    selectedToken:null,\n    userHasFunds:false,\n    depositedTokens:[],\n    trancheDetails:null,\n    useTrancheType:false,\n    portfolioLoaded:false,\n    selectedProtocol:null,\n    allocationChartData:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadPortfolio().then( () => {\n      const trancheRoute = this.props.urlParams.param1;\n      const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n      const trancheDetails = Object.values(tranchesDetails).find( t => t.route === trancheRoute );\n\n      if (trancheDetails !== undefined){\n        const trancheType = trancheDetails.type;\n        const useTrancheType = !this.state.userHasFunds;\n        const selectedToken = this.props.urlParams.param3;\n        const selectedProtocol = this.props.urlParams.param2;\n        const tokenConfig = selectedProtocol ? (this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null) : null;\n\n        if (this.state.userHasFunds && !tokenConfig){\n          return this.props.goToSection(this.props.selectedSection.route);\n        }\n\n        this.setState({\n          trancheType,\n          tokenConfig,\n          trancheRoute,\n          selectedToken,\n          trancheDetails,\n          useTrancheType,\n          selectedProtocol\n        });\n      } else {\n        const selectedToken = this.props.urlParams.param2;\n        const selectedProtocol = this.props.urlParams.param1;\n        const tokenConfig = this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null;\n        if (tokenConfig){\n          this.setState({\n            tokenConfig,\n            selectedToken,\n            selectedProtocol,\n          });\n        }\n      }\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTranchesChanged = JSON.stringify(prevProps.availableTranches) !== JSON.stringify(this.props.availableTranches);\n    if (accountChanged || availableTranchesChanged){\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async loadPortfolio(){\n    if (!this.props.account){\n      const userHasFunds = false;\n      const portfolioLoaded = true;\n      this.setState({\n        userHasFunds,\n        portfolioLoaded\n      });\n      return false;\n    }\n\n    const portfolio = await this.functionsUtil.getAccountPortfolioTranches(this.props.availableTranches,this.props.account);\n    // console.log('loadPortfolio',portfolio);\n\n    if (portfolio){\n      const portfolioLoaded = true;\n      const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n\n      const tranchesTokens = [];\n      const tranchesBalances = [];\n      portfolio.tranchesBalance.forEach( trancheInfo => {\n        if (!tranchesBalances[trancheInfo.tranche]){\n          tranchesBalances[trancheInfo.tranche] = {\n            weight:this.functionsUtil.BNify(0),\n            balance:this.functionsUtil.BNify(0)\n          };\n        }\n        tranchesBalances[trancheInfo.tranche].weight = tranchesBalances[trancheInfo.tranche].weight.plus(trancheInfo.trancheWeight);\n        tranchesBalances[trancheInfo.tranche].balance = tranchesBalances[trancheInfo.tranche].balance.plus(trancheInfo.tokenBalance);\n\n        if (!tranchesTokens[trancheInfo.token]){\n          tranchesTokens[trancheInfo.token] = this.functionsUtil.BNify(0);\n        }\n        tranchesTokens[trancheInfo.token] = tranchesTokens[trancheInfo.token].plus(trancheInfo.tokenBalance);\n      });\n\n      const depositedTokens = Object.keys(tranchesTokens);\n\n      const portfolioDonutData = Object.keys(tranchesTokens).map( token => {\n        const balanceValue = parseFloat(tranchesTokens[token].toFixed(4));\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token]);\n        return {\n          id:token,\n          name:token,\n          label:token,\n          value:balanceValue,\n          description: `$ ${balanceValue} in ${token}`,\n          color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n          image:tokenConfig.icon || `images/tokens/${token}.svg`,\n        };\n      });\n\n      const allocationChartData = Object.keys(tranchesBalances).map((trancheName,i)=>{\n        const trancheConfig = tranchesConfig[trancheName];\n        const balanceInfo = tranchesBalances[trancheName];\n        const weightValue = parseFloat(balanceInfo.weight.times(100).toFixed(2));\n        return {\n          id:trancheName,\n          name:trancheName,\n          value:weightValue,\n          label: trancheConfig.name,\n          color:'hsl('+trancheConfig.color.hsl.join(',')+')',\n          description: `$ ${balanceInfo.balance.toFixed(2)} in ${trancheConfig.name}`\n        };\n      });\n\n      // console.log('allocationChartData',allocationChartData,'portfolioDonutData',portfolioDonutData);\n      \n      const transactions = portfolio.transactions;\n      const userHasFunds = portfolio && this.functionsUtil.BNify(portfolio.totalBalance).gt(0);\n\n      this.setState({\n        portfolio,\n        userHasFunds,\n        transactions,\n        portfolioLoaded,\n        depositedTokens,\n        portfolioDonutData,\n        allocationChartData\n      });\n    }\n  }\n\n  selectTrancheType(trancheRoute){\n    let route = `${this.props.selectedSection.route}/${trancheRoute}`;\n    const tokenConfig = this.props.availableTranches[this.state.selectedProtocol] && this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] ? this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] : null;\n    if (tokenConfig){\n      route += `/${this.state.selectedProtocol}/${this.state.selectedToken}`;\n    }\n    this.props.goToSection(route);\n  }\n\n  selectTranche(protocol,token){\n    const tokenConfig = this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token] ? this.props.availableTranches[protocol][token] : null;\n    if (tokenConfig){\n      let route = `${this.props.selectedSection.route}`;\n      if (this.state.trancheRoute){\n        route += `/${this.state.trancheRoute}`;\n      }\n      route += `/${protocol}/${token}`;\n\n      this.props.goToSection(route);\n    }\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setState({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  goBack(){\n    if (this.state.tokenConfig && this.state.trancheType){\n      if (!this.state.userHasFunds){\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n      } else {\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n      }\n    }/* else if (this.state.trancheType){\n      this.props.goToSection(this.props.selectedSection.route);\n    } */else {\n      this.props.goToSection(this.props.selectedSection.route);\n    }\n  }\n\n  render() {\n\n    const pathLink = [];\n    const breadcrumbPath = [];\n    if (this.state.trancheType){\n      breadcrumbPath.push(this.functionsUtil.capitalize(this.state.trancheDetails.baseName));\n      if (this.state.tokenConfig){\n        if (!this.state.userHasFunds){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n        } else if (this.state.tokenConfig){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n        }\n      }\n    }\n    if (this.state.selectedProtocol){\n      breadcrumbPath.push(this.functionsUtil.getGlobalConfig(['stats','protocols',this.state.selectedProtocol,'label']));\n    }\n    if (this.state.selectedToken){\n      breadcrumbPath.push(this.state.selectedToken);\n    }\n\n    return (\n      <Box\n        width={1}\n      >\n        {\n          breadcrumbPath.length>0 && (\n            <Flex\n              width={1}\n              mb={[2,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-start'}\n            >\n              <Flex\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Tranches'}\n                  pathLink={pathLink}\n                  path={breadcrumbPath}\n                  isMobile={this.props.isMobile}\n                  handleClick={this.goBack.bind(this)}\n                />\n              </Flex>\n              <Flex\n                width={0.5}\n                justifyContent={'flex-end'}\n              >\n                \n              </Flex>\n            </Flex>\n          )\n        }\n        {\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                my:3,\n                minHeight:'60vh',\n                flexDirection:'column'\n              }}\n              text={'Loading Portfolio...'}\n            />\n          ) : this.state.tokenConfig ? (\n            <TranchePage\n              {...this.props}\n              portfolio={this.state.portfolio}\n              trancheType={this.state.trancheType}\n              tokenConfig={this.state.tokenConfig}\n              selectedToken={this.state.selectedToken}\n              trancheDetails={this.state.trancheDetails}\n              selectedProtocol={this.state.selectedProtocol}\n              availableTranches={this.props.availableTranches}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : !this.state.trancheType && !this.state.userHasFunds ? (\n            <TrancheWelcome\n              {...this.props}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              <Title\n                mb={3}\n              >\n                {this.state.useTrancheType ? this.functionsUtil.capitalize(this.state.trancheDetails.baseName) : null} Tranches\n              </Title>\n              {\n                this.state.portfolioLoaded && this.state.userHasFunds && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.portfolio.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={5}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                /*\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.allocationChartData ? (\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  id={'allocationChart'}\n                                  height={['55px','59px']}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <GenericPieChart\n                                    {...this.props}\n                                    inline={true}\n                                    showLoader={false}\n                                    tooltipFormat={v => v+'%'}\n                                    sliceLabel={d => d.value+'%'}\n                                    width={ this.props.isMobile ? 55 : 59 }\n                                    height={ this.props.isMobile ? 55 : 59 }\n                                    chartData={this.state.allocationChartData}\n                                  />\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Portfolio Distribution\n                              </Text>\n                              {\n                                /*\n                                <Tooltip\n                                  placement={'bottom'}\n                                  message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                                >\n                                  <Icon\n                                    ml={2}\n                                    name={\"Info\"}\n                                    size={'1em'}\n                                    color={'cellTitle'}\n                                  />\n                                </Tooltip>\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={3}\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <GenericPieChart\n                            {...this.props}\n                            showLegend={true}\n                            showLoader={false}\n                            sliceLabel={d => d.value}\n                            defaultLabel={'Total Funds'}\n                            parentId={'portfolio-composition'}\n                            chartData={this.state.portfolioDonutData}\n                            defaultImage={this.props.selectedSection.image}\n                            defaultValue={`$ ${this.functionsUtil.formatMoney(parseFloat(this.state.portfolio.totalBalance),4)}`}\n                            margin={this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 }}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquityTranches\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              transactionsList={this.state.transactions}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                mb={[3,4]}\n                id={\"migrate-assets\"}\n                flexDirection={'column'}\n              >\n                <Flex\n                  pb={2}\n                  width={1}\n                  mb={[2,3]}\n                  borderColor={'divider'}\n                  borderBottom={'1px solid transparent'}\n                >\n                  <Heading.h4\n                    fontSize={[2,4]}\n                    fontWeight={[3,4]}\n                  >\n                    Available Tranches\n                  </Heading.h4>\n                </Flex>\n                <TranchesList\n                  enabledProtocols={[]}\n                  trancheType={this.state.trancheType}\n                  availableTranches={this.props.availableTranches}\n                  handleClick={(props) => this.selectTranche(props.protocol,props.token)}\n                  cols={[\n                    {\n                      title:'PROTOCOL',\n                      props:{\n                        width:[0.27,0.15]\n                      },\n                      fields:[\n                        {\n                          name:'protocolIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          name:'protocolName'\n                        }\n                      ]\n                    },\n                    {\n                      title:'TOKEN',\n                      props:{\n                        width:[0.21, 0.12],\n                      },\n                      fields:[\n                        {\n                          name:'tokenIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          name:'tokenName'\n                        }\n                      ]\n                    },\n                    {\n                      title:'TYPE',\n                      props:{\n                        width:[0.29,0.13],\n                      },\n                      fields:[\n                        {\n                          name:'trancheTypeIcon',\n                          props:{\n                            flexProps:{\n                              mr:2\n                            },\n                            size:'1.4em'\n                          }\n                        },\n                        {\n                          name:'trancheType'\n                        }\n                      ],\n                      visible:this.state.useTrancheType\n                    },\n                    {\n                      title:'POOL',\n                      props:{\n                        width:[0.21, 0.14],\n                      },\n                      fields:[\n                        {\n                          name:this.state.useTrancheType ? `${this.state.trancheDetails.baseName}Pool` : 'pool',\n                          props:{\n                            decimals:2\n                          }\n                        }\n                      ]\n                    },\n                    {\n                      title:this.state.useTrancheType ? 'APY' : 'SENIOR APY',\n                      props:{\n                        width:[0.29,this.state.useTrancheType ? 0.12 : 0.15],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'seniorApy',\n                          showTooltip:true\n                        },\n                      ],\n                      visible:!this.state.useTrancheType || this.state.trancheType === 'AA'\n                    },\n                    {\n                      title:this.state.useTrancheType ? 'APY' : 'JUNIOR APY',\n                      props:{\n                        width:[0.29,this.state.useTrancheType ? 0.12 : 0.15],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'juniorApy',\n                          showTooltip:true\n                        },\n                      ],\n                      visible:!this.state.useTrancheType || this.state.trancheType === 'BB'\n                    },\n                    {\n                      mobile:false,\n                      title:'GOVERNANCE TOKENS',\n                      props:{\n                        width:[0.25,this.state.useTrancheType ? 0.18 : 0.15],\n                      },\n                      fields:[\n                        {\n                          name:'govTokens'\n                        }\n                      ]\n                    },\n                    {\n                      title:'',\n                      mobile:this.props.account === null,\n                      props:{\n                        width:[ this.props.account === null ? 0.29 : 0 ,0.16],\n                      },\n                      parentProps:{\n                        width:1\n                      },\n                      fields:[\n                        {\n                          name:'button',\n                          label: 'Deposit',\n                          props:{\n                            width:1,\n                            fontSize:3,\n                            fontWeight:3,\n                            height:'45px',\n                            borderRadius:4,\n                            boxShadow:null,\n                            mainColor:'deposit',\n                            size: this.props.isMobile ? 'small' : 'medium',\n                            handleClick:(props) => this.selectTranche(props.protocol,props.token)\n                          }\n                        }\n                      ]\n                    }\n                  ]}\n                  {...this.props}\n                />\n              </Flex>\n              {\n                this.props.account && this.state.userHasFunds && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title mb={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                      transactionsList={this.state.transactions}\n                      availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                        availableActions[t.action.toLowerCase()] = t.action;\n                        return availableActions;\n                      },{})}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.13,0.18]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.12,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.27,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.16],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:[0.23,0.11],\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'PROTOCOL',\n                          props:{\n                            width:[0.21, 0.14],\n                          },\n                          fields:[\n                            {\n                              type:'image',\n                              name:'custom',\n                              path:['protocolIcon'],\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              type:'text',\n                              mobile:false,\n                              name:'custom',\n                              path:['protocol']\n                            }\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.16,0.14],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Tranches;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass LpStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Stake'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || contractApprovedChanged || tokenConfigChanged){\n      this.setState({\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.props.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.props.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[normalizedInputValue],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.props.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.props.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[this.functionsUtil.integerValue(this.state.stakedBalance)],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.props.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.props.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },parseInt(Date.now()/1000)) : null;\n\n    const programDuration = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programDuration\n    });\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      if (this.functionsUtil.BNify(s.initialLockedShares).gt(0) && this.functionsUtil.BNify(s.durationSec).gt(0)){\n        const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.props.contractInfo.decimals).div(s.durationSec);\n        if (!tokensPerSecond.isNaN()){\n          distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n        }\n      }\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.props.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals);\n    const stakingShare = stakedBalance.div(totalDeposits); // accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.props.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.props.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    // globalStats.push({\n    //   title:'Distribution rate',\n    //   description:'Your daily rewards distribution based on your current multiplier',\n    //   value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.props.contractInfo.rewardToken+' / day',\n    // });\n\n    const stakedBalanceUSD = stakedBalance.times(this.state.poolTokenPrice);\n    const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n    const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n    // console.log(parseFloat(this.state.stakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n\n    globalStats.push({\n      title:'APY',\n      value:`${apy.toFixed(2)}%`,\n      description:'Annualized rewards based on your current multiplier',\n    });\n\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:'Multiplier',\n      value:`${rewardMultiplier.toFixed(2)}x`,\n      description:`Deposit liquidity tokens for ${this.props.contractInfo.maxBonusDays} days to achieve a ${this.props.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.props.tokenConfig.decimals));\n    globalStats.push({\n      title:'Rewards',\n      value:currentRewards+' '+this.props.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    // console.log('loadStats',stats,globalStats);\n\n    const statsLoaded = true;\n\n    this.setState({\n      stats,\n      statsLoaded,\n      globalStats,\n      stakingShare,\n      totalRewards,\n      accountingData,\n      rewardMultiplier,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed,\n      distributionSpeedMultiplier\n    });\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.contractInfo.rewardToken]);\n\n    const [\n      poolTokenPrice,\n      rewardTokenPrice,\n      tokenBalance,\n      stakedBalance,\n    ] = await Promise.all([\n      this.functionsUtil.getSushiswapPoolTokenPrice(this.props.selectedToken),\n      this.functionsUtil.getSushiswapConversionRate(DAITokenConfig,rewardTokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakedFor',[this.props.account]),\n    ]);\n\n    newState.balanceProp = this.functionsUtil.BNify(0);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n    newState.stakedBalance = !this.functionsUtil.BNify(stakedBalance).isNaN() ? this.functionsUtil.BNify(stakedBalance) : this.functionsUtil.BNify(0);\n    newState.poolTokenPrice = !this.functionsUtil.BNify(poolTokenPrice).isNaN() ? this.functionsUtil.BNify(poolTokenPrice) : this.functionsUtil.BNify(0);\n    newState.rewardTokenPrice = !this.functionsUtil.BNify(rewardTokenPrice).isNaN() ? this.functionsUtil.BNify(rewardTokenPrice) : this.functionsUtil.BNify(0);\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    // console.log('updateData',this.state.selectedAction,newState);\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Pool link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:[2,0],\n                      mr:[0,index<this.state.globalStats.length-1 ? 1 : 0],\n                      width:[1,'100%']\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stake'}\n                imageSrc={'images/mint.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'stake LP Tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStake}\n                handleClick={ e => this.setAction('Stake') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isUnstake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Withdraw'}\n                imageSrc={'images/upload.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isUnstake}\n                handleClick={ e => this.setAction('Withdraw') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                // subcaption={'view some stats'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              (isStake || isUnstake) ?\n                (this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo ? (\n                  <Box\n                    mt={1}\n                    width={1}\n                    mb={[4,3]}\n                  >\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      action={txAction}\n                      steps={this.state.steps}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.props.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.props.contractInfo}\n                      permitEnabled={this.state.permitEnabled}\n                      approveEnabled={this.state.approveEnabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      contractApproved={this.contractApproved.bind(this)}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              isStake ? (\n                                `You don't have any ${this.props.selectedToken} in your wallet.`\n                              ) : isUnstake && (\n                                `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                              )\n                            }\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  </Box>\n                ) : (\n                  <Flex\n                    mt={3}\n                    mb={3}\n                    width={1}\n                  >\n                    <FlexLoader\n                      flexProps={{\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'30px'\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading info...'}\n                    />\n                  </Flex>\n                )\n              ) : isStats && (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default LpStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport { Flex, Box, Text, Icon, Input, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass IdleStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    maxApr:null,\n    infoBox:null,\n    globalStats:[],\n    lockPeriods:[\n      {\n        value:14,\n        type:'day',\n        label:'2 weeks'\n      },\n      {\n        value:1,\n        type:'month',\n        label:'1 month'\n      },\n      {\n        value:1,\n        type:'year',\n        label:'1 year'\n      },\n      {\n        value:4,\n        type:'year',\n        label:'4 years'\n      },\n    ],\n    lockedEnd:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    lockExpired:false,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    claimedRewards:null,\n    accountingData:null,\n    increaseAction:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    lockPeriodInput:null,\n    buttonDisabled:false,\n    internalInfoBox:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    distributedRewards:null,\n    selectedLockPeriod:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    lockPeriodTimestamp:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false,\n    lockEndDateIsMaxEndDate:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Lock'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n    const feeDistributorConfig = this.props.tokenConfig.feeDistributor;\n    await this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || accountChanged || contractApprovedChanged || tokenConfigChanged){\n      const increaseAction = selectedActionChanged ? null : this.state.increaseAction;\n      this.setState({\n        increaseAction,\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false,\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n\n    const lockPeriodChanged = prevState.lockPeriodTimestamp !== this.state.lockPeriodTimestamp;\n    const increaseActionChanged = prevState.increaseAction !== this.state.increaseAction;\n    if (lockPeriodChanged || increaseActionChanged || selectedActionChanged){\n      if (increaseActionChanged){\n        this.setState({\n          internalInfoBox:null\n        });\n      } else if (lockPeriodChanged){\n        this.calculateStkIDLEAmount();\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled(){\n    let buttonDisabled = false;\n    const minLockPeriod = this.state.lockPeriods[0];\n    const maxLockPeriod = Object.assign([],this.state.lockPeriods).pop();\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).add(minLockPeriod.value,minLockPeriod.type) : this.functionsUtil.strToMoment().add(minLockPeriod.value,minLockPeriod.type);\n    const mDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n    const maxDate = this.functionsUtil.strToMoment().add(maxLockPeriod.value,maxLockPeriod.type);\n    switch (this.state.selectedAction){\n      default:\n      case 'Lock':\n        buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n      break;\n      case 'Increase Lock':\n        if (this.state.increaseAction === 'time'){\n          buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n        }\n      break;\n    }\n\n    // console.log('checkButtonDisabled',this.state.selectedAction,this.state.increaseAction,buttonDisabled);\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    },() => {\n      this.calculateStkIDLEAmount();\n    });\n  }\n\n  calculateStkIDLEAmount(){\n    let internalInfoBox = null;\n    if (this.state.inputValue && this.functionsUtil.BNify(this.state.inputValue).gt(0) && this.state.lockPeriodTimestamp !== null){\n      switch (this.state.selectedAction){\n        case 'Lock':\n          const currTime = parseInt(Date.now()/1000);\n          const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n          let endDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n          if (endDate.isAfter(maxDate)){\n            endDate = maxDate;\n          }\n          const endDateTime = parseInt(endDate._d.getTime()/1000)-currTime;\n          const maxDateTime = parseInt(maxDate._d.getTime()/1000)-currTime;\n          const stkIDLEAmount = this.state.inputValue.times(endDateTime).div(maxDateTime);\n\n          const percentage = stkIDLEAmount.div(this.state.inputValue).times(100);\n\n          // console.log(this.state.inputValue.toString(),endDate.format('YYYY-MM-DD HH:mm:ss'),maxDate.format('YYYY-MM-DD HH:mm:ss'),endDateTime,maxDateTime,stkIDLEAmount.toFixed());\n\n          let text = `By staking <strong>${this.state.inputValue.toFixed(4)} ${this.props.selectedToken}</strong> until <strong>${endDate.utc().format('YYYY-MM-DD HH:mm')} UTC</strong> you will get back <strong>${stkIDLEAmount.toFixed(4)} ${this.props.tokenConfig.contract.name}</strong> (${Math.ceil(percentage)}% of staking power).`;\n          if (Math.ceil(percentage)<100){\n            text += `<br />Stake your tokens for <strong>4 years</strong> to reach the maximum staking power.`;\n          }\n          text += `<br /><span style=\"color:${this.props.theme.colors.alert};font-size:14px\">Keep in mind that once you lock ${this.props.selectedToken} you cannot reverse the operation until the lock end date has been reached.</span>`;\n          internalInfoBox = {\n            text,\n            icon:'LockOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          };\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      internalInfoBox\n    });\n  }\n\n  getIncreaseTimeParams(){\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    // console.log('getIncreaseTimeParams',_unlock_time);\n    return [_unlock_time];\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const _value = this.functionsUtil.toBN(amount);\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    switch (this.state.selectedAction){\n      case 'Lock':\n        methodName = 'create_lock';\n        methodParams = [_value,_unlock_time];\n        // console.log('getTransactionParams',methodName,methodParams);\n      break;\n      case 'Increase Lock':\n        methodName = 'increase_amount';\n        methodParams = [_value];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n\n    const stats = [];\n    const globalStats = [];\n    const statsLoaded = true;\n\n    let [\n      etherscanRewardsTxs,\n      totalSupply,\n      tokenTotalSupply,\n      claimableRewards,\n      lockedInfo,\n      tokenUserBalance,\n      claimable,\n      claimEvents,\n      // checkpointEvents,\n      depositEvents\n    ] = await Promise.all([\n      this.functionsUtil.getIdleStakingRewardsTxs(),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name,'supply'),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name, 'totalSupply'),\n      this.functionsUtil.getTokenBalance(this.props.contractInfo.rewardToken,this.props.tokenConfig.feeDistributor.address),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked',[this.props.account]) : null,\n      this.props.account ? this.functionsUtil.getContractBalance(this.props.contractInfo.name,this.props.account) : this.functionsUtil.BNify(0),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.tokenConfig.feeDistributor.name,'claim',[this.props.account]) : this.functionsUtil.BNify(0),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'Claimed',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      // this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'CheckpointToken',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      this.props.account ? this.functionsUtil.getContractEvents(this.props.contractInfo.name,'Deposit',{fromBlock: this.props.contractInfo.fromBlock, toBlock:'latest',filter:{provider:this.props.account}}) : []\n    ]);\n\n    // console.log('etherscanRewardsTxs',etherscanRewardsTxs);\n\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n\n    let distributedRewards = [];\n    let totalRewards = this.functionsUtil.BNify(0);\n    let totalRewardsDays = this.functionsUtil.BNify(0);\n\n    if (etherscanRewardsTxs && etherscanRewardsTxs.length){\n      totalRewardsDays = Math.abs(etherscanRewardsTxs[0].timeStamp-etherscanRewardsTxs[etherscanRewardsTxs.length-1].timeStamp)/86400;\n      distributedRewards = etherscanRewardsTxs.map( tx => {\n        const amount = this.functionsUtil.fixTokenDecimals(tx.value,rewardTokenConfig.decimals);\n        totalRewards = totalRewards.plus(amount);\n        return {\n          amount,\n          hash:tx.hash,\n          timeStamp:tx.timeStamp,\n          tokenName:tx.tokenSymbol,\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n        };\n      });\n    }\n\n    const claimedRewards = [];\n    let totalClaimedUser = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(claimEvents, async (e) => {\n      if (this.props.account && e.returnValues && e.returnValues.recipient && e.returnValues.recipient.toLowerCase() === this.props.account.toLowerCase()){\n        const blockInfo = await this.functionsUtil.getBlockInfo(e.blockNumber);\n        if (blockInfo){\n          const claimedAmount = this.functionsUtil.fixTokenDecimals(e.returnValues.amount,rewardTokenConfig.decimals);\n          totalClaimedUser = totalClaimedUser.plus(claimedAmount);\n          claimedRewards.push({\n            amount:claimedAmount,\n            hash:e.transactionHash,\n            tokenName:this.props.contractInfo.rewardToken,\n            date:this.functionsUtil.strToMoment(parseInt(blockInfo.timestamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n          });\n        }\n      }\n    });\n\n    tokenUserBalance = this.functionsUtil.fixTokenDecimals(tokenUserBalance,this.props.contractInfo.decimals);\n\n    const totalDeposited = totalSupply ? this.functionsUtil.fixTokenDecimals(totalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const totalLockedFunds = totalSupply ? this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken : (this.state.stats.length ? this.state.stats[0] : this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken);\n    stats.push({\n      title:'Total Locked Funds',\n      value:totalLockedFunds\n    });\n\n    tokenTotalSupply = tokenTotalSupply ? this.functionsUtil.fixTokenDecimals(tokenTotalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const stkTokenTotalSupply = tokenTotalSupply ? this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name : (this.state.stats.length ? this.state.stats[1] : this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name);\n    stats.push({\n      title:`${this.props.contractInfo.name} Total Supply`,\n      value:stkTokenTotalSupply\n    });\n\n    const claimableRewardsFormatted = claimableRewards ? this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken : (this.state.stats.length ? this.state.stats[2] : this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken);\n    stats.push({\n      title:'Claimable Rewards',\n      value:claimableRewardsFormatted\n    });\n\n    // const totalClaimed = claimEvents.reduce( (totalClaimed,event) => {\n    //   const claimedAmount = this.functionsUtil.fixTokenDecimals(event.returnValues.amount,rewardTokenConfig.decimals);\n    //   totalClaimed = totalClaimed.plus(claimedAmount);\n    //   return totalClaimed;\n    // },this.functionsUtil.BNify(0));\n\n    const totalRewardsFormatted = this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken;\n    stats.push({\n      title:'Total Rewards',\n      value:totalRewardsFormatted\n    });\n\n    const maxApr = totalRewards.div(tokenTotalSupply).times(365.2425).div(totalRewardsDays);\n    stats.push({\n      title:'APR (1 year staking)',\n      value:maxApr.div(4).times(100).toFixed(2)+'%'\n    });\n    stats.push({\n      title:'APR (4 years staking)',\n      value:maxApr.times(100).toFixed(2)+'%'\n    });\n\n    const stakedBalance = lockedInfo && lockedInfo.amount ? this.functionsUtil.fixTokenDecimals(lockedInfo.amount,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const userDeposited = this.functionsUtil.formatMoney(stakedBalance,4);\n    globalStats.push({\n      title:'Total Deposited',\n      description:'Your total deposited amount',\n      value:userDeposited+' '+this.props.contractInfo.rewardToken,\n    });\n\n    const stakingShare = tokenUserBalance.div(tokenTotalSupply);\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:`${this.props.contractInfo.name} balance`,\n      value:`${this.functionsUtil.formatMoney(tokenUserBalance,4)} ${this.props.contractInfo.name}`,\n    });\n    \n    claimable = claimable ? this.functionsUtil.fixTokenDecimals(claimable,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const currentRewards = this.functionsUtil.formatMoney(claimable,4);\n    globalStats.push({\n      title:'Claimable Rewards',\n      value:`${currentRewards} ${this.props.contractInfo.rewardToken}`,\n      // description:'Your claimable rewards'\n    });\n\n    const totalCollectedRewards = claimable.plus(totalClaimedUser);\n\n    let stakeStartTime = depositEvents.reduce( (stakedTime,event) => {\n      const depositTimestamp = this.functionsUtil.BNify(event.returnValues.ts);\n      const depositValue = this.functionsUtil.fixTokenDecimals(event.returnValues.value,this.props.tokenConfig.decimals);\n      if (depositValue.gt(0)){\n        stakedTime = stakedTime.plus(depositValue.times(depositTimestamp));\n        // console.log(depositTimestamp.toString(),depositValue.toFixed(),stakedTime.toString());\n      }\n      return stakedTime;\n    },this.functionsUtil.BNify(0));\n\n    // console.log('stakeStartTime',stakeStartTime,stakedBalance.toFixed());\n\n    stakeStartTime = stakedBalance.gt(0) ? Math.ceil(stakeStartTime.div(stakedBalance)) : 0;\n    // const latestCheckpoint = checkpointEvents.length ? checkpointEvents[checkpointEvents.length-1] : null;\n    // const latestDistribution = etherscanRewardsTxs[0];\n    // const latestDistributionTime = latestDistribution ? this.functionsUtil.BNify(latestDistribution.timeStamp) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    // const latestDistributionTime = latestCheckpoint ? this.functionsUtil.BNify(latestCheckpoint.returnValues.time) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    const currTime = parseInt(Date.now()/1000);\n    const stakePeriod = this.functionsUtil.BNify(currTime).minus(stakeStartTime);\n    const currentProfit = stakedBalance.gt(0) ? totalCollectedRewards.div(stakedBalance) : this.functionsUtil.BNify(0);\n    const weeksPerYear = 52.14;\n    const secondsPerWeek = 604800;\n    const stakePeriodWeeks = Math.max(1,Math.floor(stakePeriod.div(secondsPerWeek)));\n    const apr = stakePeriod.gt(0) ? currentProfit.times(weeksPerYear).div(stakePeriodWeeks).times(100) : this.functionsUtil.BNify(0);\n    \n    // console.log('APR',currTime,stakeStartTime,apr.toFixed(),currentProfit.toFixed(),stakePeriod.toFixed(),stakePeriodWeeks,totalCollectedRewards.toFixed(),stakedBalance.toFixed());\n\n    globalStats.push({\n      title:'APR',\n      value:`${apr.toFixed(2)}%`,\n      description:'APR is based on your Claimable Rewards and Total Deposited'\n    });\n\n    const lockEndDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm') : '';\n    globalStats.push({\n      value:lockEndDate,\n      title:'Lock End Date (UTC)',\n      description:'Ending date of your Lock'\n    });\n\n    this.setState({\n      stats,\n      maxApr,\n      claimable,\n      globalStats,\n      statsLoaded,\n      stakedBalance,\n      claimedRewards,\n      distributedRewards\n    });\n  }\n\n  async contractApprovedCallback(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setIncreaseAction(increaseAction){\n    this.setState({\n      increaseAction\n    });\n  }\n\n  changelockPeriodInput(e){\n    const selectedLockPeriod = null;\n    const lockPeriodInput = e.target.value;\n    const currDate = this.functionsUtil.strToMoment();\n    const mDate = this.functionsUtil.strToMoment(lockPeriodInput+' '+currDate.format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss').add(1,'second');\n    if (mDate.isValid()){\n      const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n      // console.log('changelockPeriodInput',lockPeriodTimestamp);\n      this.setState({\n        lockPeriodInput,\n        selectedLockPeriod,\n        lockPeriodTimestamp\n      });\n    }\n  }\n\n  selectLockPeriod(selectedLockPeriod){\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000) : this.functionsUtil.strToMoment();\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n    let mDate = minDate.add(selectedLockPeriod.value,selectedLockPeriod.type).add(1,'second');\n\n    // Check if after 4 years from now\n    if (mDate.isAfter(maxDate)){\n      mDate = maxDate;\n    }\n\n    const lockPeriodInput = mDate.format('YYYY-MM-DD');\n    const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n\n    // console.log('selectLockPeriod',lockPeriodInput,lockPeriodTimestamp);\n\n    this.setState({\n      lockPeriodInput,\n      selectedLockPeriod,\n      lockPeriodTimestamp\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    let internalInfoBox = null;\n    switch (this.state.selectedAction){\n      case 'Lock':\n        const lockedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const lockedTokens = lockedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(lockedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully locked <strong>${lockedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Increase Lock':\n        switch (this.state.increaseAction){\n          case 'time':\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock until <strong>${this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000).utc().format('YYYY/MM/DD HH:mm')} UTC</strong>`\n            }\n          break;\n          case 'amount':\n            const increaseAmountTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            const increaseTokens = increaseAmountTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(increaseAmountTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock by <strong>${increaseTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Claim':\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),rewardTokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully claimed <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      internalInfoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    // const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.contractInfo.rewardToken]);\n\n    const [\n      tokenBalance,\n      lockedEnd,\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked__end',[this.props.account])\n    ]);\n\n    newState.lockedEnd = lockedEnd && parseInt(lockedEnd)>0 ? parseInt(lockedEnd) : null;\n    newState.lockExpired = newState.lockedEnd && newState.lockedEnd<=parseInt(Date.now()/1000);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n\n    let selectedAction = this.state.selectedAction;\n\n    if (selectedAction==='Withdraw' && !newState.lockExpired){\n      selectedAction = 'Lock';\n      newState.selectedAction = selectedAction;\n    }\n\n    // Select Increase if already created a lock\n    if (newState.lockedEnd && selectedAction==='Lock'){\n      selectedAction = 'Increase Lock';\n      newState.increaseAction = 'time';\n      newState.selectedAction = selectedAction;\n    } else if (selectedAction==='Increase Lock' && !newState.increaseAction && !this.state.increaseAction){\n      newState.increaseAction = 'time';\n    }\n\n    // Select Withdraw if the lock has expired\n    if (selectedAction==='Increase Lock' && newState.lockExpired){\n      selectedAction = 'Withdraw';\n      newState.selectedAction = selectedAction;\n    }\n\n    switch (selectedAction){\n      case 'Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n      break;\n      case 'Increase Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = newState.tokenBalance;\n        newState.lockPeriodInput = this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD');\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n      break;\n      default:\n      break;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.internalInfoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year').format('YYYY-MM-DD');\n    newState.lockEndDateIsMaxEndDate = newState.lockedEnd ? this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD')===maxDate : false;\n\n    // console.log('lockEndDateIsMaxEndDate',newState.lockEndDateIsMaxEndDate,maxDate,this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD'));\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isLock = this.state.selectedAction === 'Lock';\n    const isStats = this.state.selectedAction === 'Stats';\n    const isClaim = this.state.selectedAction === 'Claim';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isIncrease = this.state.selectedAction === 'Increase Lock';\n    const txAction = this.state.selectedAction;\n    const canIncrease = !this.state.lockExpired;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Token link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              mb={1}\n              width={1}\n              style={{\n                flexBasis:'0',\n                flex:'1 1 0px',\n                flexWrap:'wrap'\n              }}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:2,\n                      width:['49%','33%'],\n                      // mr:[0,index<this.state.globalStats.length-1 ? 1 : 0]\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.lockedEnd === null ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isLock ? 2 : 0\n                    }}\n                    caption={'Lock'}\n                    width={[1,'32%']}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isLock}\n                    handleClick={ e => this.setAction('Lock') }\n                  />\n                ) : !this.state.lockExpired ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isIncrease ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    isActive={isIncrease}\n                    caption={'Increase Lock'}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '54px'\n                    }}\n                    handleClick={ e => this.setAction('Increase Lock') }\n                  />\n                ) : (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isUnstake ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isUnstake}\n                    handleClick={ e => this.setAction('Withdraw') }\n                  />\n                )\n              }\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isClaim ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Claim'}\n                imageSrc={'images/reward.png'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isClaim}\n                handleClick={ e => this.setAction('Claim') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              this.state.internalInfoBox && (\n                <IconBox\n                  cardProps={{\n                    mt:1,\n                    mb:3\n                  }}\n                  {...this.state.internalInfoBox}\n                />\n              )\n            }\n            {\n              isStats ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                  <Text\n                    mb={1}\n                  >\n                    Distributed Rewards:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        pt:2,\n                        pb:3,\n                        px:3,\n                        width:1,\n                        display:'flex',\n                        alignItems:'center',\n                        justifyContent:'center'\n                      }}\n                      isActive={false}\n                      isInteractive={false}\n                    >\n                      {\n                        this.state.distributedRewards && this.state.distributedRewards.length ? (\n                          <Flex\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              pt={0}\n                              pb={1}\n                              width={1}\n                              flexDirection={'row'}\n                              borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.5 : 0.4}\n                              >\n                                Date\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.5 : 0.3}\n                                textAlign={this.props.isMobile ? 'right' : 'left'}\n                              >\n                                Amount\n                              </Text>\n                              {\n                                !this.props.isMobile && (\n                                  <Text\n                                    width={0.3}\n                                    fontSize={1}\n                                    fontWeight={3}\n                                  >\n                                    Hash\n                                  </Text>\n                                )\n                              }\n                            </Flex>\n                            {\n                              this.state.distributedRewards.map( (reward,index) => (\n                                <Flex\n                                  py={1}\n                                  width={1}\n                                  flexDirection={'row'}\n                                  key={`rewards_${index}`}\n                                  borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                >\n                                  <Text\n                                    fontWeight={2}\n                                    color={'statValue'}\n                                    fontSize={this.props.isMobile ? 1 : 2}\n                                    width={this.props.isMobile ? 0.5 : 0.4}\n                                  >\n                                    {reward.date}\n                                  </Text>\n                                  <Text\n                                    fontWeight={2}\n                                    color={'statValue'}\n                                    fontSize={this.props.isMobile ? 1 : 2}\n                                    width={this.props.isMobile ? 0.5 : 0.3}\n                                    textAlign={this.props.isMobile ? 'right' : 'left'}\n                                  >\n                                    {reward.amount.toFixed(4)} {reward.tokenName}\n                                  </Text>\n                                  {\n                                    !this.props.isMobile && (\n                                      <ExtLink\n                                        width={0.3}\n                                        color={'link'}\n                                        hoverColor={'link'}\n                                        href={this.functionsUtil.getEtherscanTransactionUrl(reward.hash)}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                        >\n                                          <Text\n                                            fontSize={2}\n                                            fontWeight={2}\n                                            color={'link'}\n                                          >\n                                            {this.functionsUtil.shortenHash(reward.hash)}\n                                          </Text>\n                                          <Icon\n                                            ml={1}\n                                            size={'1.2em'}\n                                            color={'link'}\n                                            name={'OpenInNew'}\n                                          />\n                                        </Flex>\n                                      </ExtLink>\n                                    )\n                                  }\n                                </Flex>\n                              ))\n                            }\n                          </Flex>\n                        ) : (\n                          <Text\n                            fontSize={2}\n                            color={'statValue'}\n                          >\n                            No reward distributed yet.\n                          </Text>\n                        )\n                      }\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              ) : (this.props.account && this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo) ? (\n                <Box\n                  mt={1}\n                  width={1}\n                  mb={[4,3]}\n                >\n                  {\n                    (isIncrease && canIncrease) && (\n                      <Box\n                        mb={2}\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Choose increase value:\n                        </Text>\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AccessTime'}\n                            iconColor={'deposit'}\n                            iconBgColor={'#ced6ff'}\n                            isActive={ this.state.increaseAction === 'time' }\n                            handleClick={ e => this.setIncreaseAction('time') }\n                            text={this.props.isMobile ? 'Time' : 'Increase Time'}\n                          />\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AttachMoney'}\n                            iconColor={'redeem'}\n                            iconBgColor={'#ceeff6'}\n                            isActive={ this.state.increaseAction === 'amount' }\n                            handleClick={ e => this.setIncreaseAction('amount') }\n                            text={this.props.isMobile ? 'Amount' : 'Increase Amount'}\n                          />\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                  {\n                    ((isLock && this.state.balanceProp && this.state.contractApproved && this.state.balanceProp.gt(0)) || (isIncrease && canIncrease)) && (\n                      <Box\n                        width={1}\n                      > \n                        {\n                          (isLock || this.state.increaseAction === 'time') && (\n                            <Box\n                              width={1}\n                            >\n                              <Text mb={1}>\n                                Choose lock period:\n                              </Text>\n                              {\n                                !this.state.lockEndDateIsMaxEndDate ? (\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Input\n                                      mb={2}\n                                      width={1}\n                                      type={\"date\"}\n                                      required={true}\n                                      height={'3.4em'}\n                                      borderRadius={2}\n                                      fontWeight={500}\n                                      borderColor={'cardBorder'}\n                                      backgroundColor={'cardBg'}\n                                      boxShadow={'none !important'}\n                                      value={this.state.lockPeriodInput || ''}\n                                      onChange={this.changelockPeriodInput.bind(this)}\n                                      border={`1px solid ${this.props.theme.colors.divider}`}\n                                    />\n                                    <Flex\n                                      mb={3}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'row'}\n                                      justifyContent={'space-between'}\n                                    >\n                                      {\n                                        this.state.lockPeriods.map( (p,index) => {\n                                          const isActive = this.state.selectedLockPeriod ? this.state.selectedLockPeriod.value===p.value && this.state.selectedLockPeriod.type === p.type : false;\n                                          return (\n                                            <DashboardCard\n                                              cardProps={{\n                                                p:2,\n                                                width:0.24,\n                                              }}\n                                              isActive={isActive}\n                                              isInteractive={true}\n                                              key={`lockPeriod_${index}`}\n                                              handleClick={e => this.selectLockPeriod(p)}\n                                            >\n                                              <Text \n                                                fontWeight={3}\n                                                fontSize={[1,2]}\n                                                textAlign={'center'}\n                                                color={isActive ? 'copyColor' : 'cellText'}\n                                              >\n                                                {p.label}\n                                              </Text>\n                                            </DashboardCard>\n                                          );\n                                        })\n                                      }\n                                    </Flex>\n                                    {\n                                      isIncrease && (\n                                        <ExecuteTransaction\n                                          params={[]}\n                                          {...this.props}\n                                          parentProps={{\n                                            width:1,\n                                            alignItems:'center',\n                                            justifyContent:'center'\n                                          }}\n                                          Component={Button}\n                                          componentProps={{\n                                            fontSize:3,\n                                            fontWeight:3,\n                                            size:'medium',\n                                            width:[1,1/2],\n                                            borderRadius:4,\n                                            mainColor:'deposit',\n                                            value:'Increase Time',\n                                            disabled:this.state.buttonDisabled\n                                          }}\n                                          action={'Increase Time'}\n                                          methodName={'increase_unlock_time'}\n                                          contractName={this.props.contractInfo.name}\n                                          callback={this.transactionSucceeded.bind(this)}\n                                          getTransactionParams={this.getIncreaseTimeParams.bind(this)}\n                                        />\n                                      )\n                                    }\n                                  </Flex>\n                                ) : (\n                                  <IconBox\n                                    cardProps={{\n                                      mt:1,\n                                      mb:3\n                                    }}\n                                    icon={'Warning'}\n                                    iconProps={{\n                                      color:'cellText'\n                                    }}\n                                    text={`Your tokens are locked for the maxumum allowed period.`}\n                                  />\n                                )\n                              }\n                            </Box>\n                          )\n                        }\n                      </Box>\n                    )\n                  }\n                  {\n                    (isLock || this.state.increaseAction==='amount') ? (\n                      <SendTxWithBalance\n                        error={null}\n                        {...this.props}\n                        action={txAction}\n                        steps={this.state.steps}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.props.tokenConfig}\n                        tokenBalance={this.state.balanceProp}\n                        contractInfo={this.props.contractInfo}\n                        permitEnabled={this.state.permitEnabled}\n                        buttonDisabled={this.state.buttonDisabled}\n                        approveEnabled={this.state.approveEnabled}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        balanceSelectorInfo={this.state.balanceSelectorInfo}\n                        changeInputCallback={this.changeInputCallback.bind(this)}\n                        contractApproved={this.contractApprovedCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                (isLock || isIncrease) ? (\n                                  `You don't have any ${this.props.selectedToken} in your wallet.`\n                                ) : isUnstake && (\n                                  `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                                )\n                              }\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (isIncrease && !canIncrease) ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'LockOpen'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            You cannot increase an expired lock, please Withdraw.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    ) : isUnstake ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.lockExpired ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock has expired, you can withdraw your {this.props.selectedToken}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                  value:'Withdraw',\n                                }}\n                                action={'Withdraw'}\n                                methodName={'withdraw'}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock is not expired yet, please wait until {this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm')} UTC to withdraw your {this.props.selectedToken}.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    ) : isClaim && (\n                      <Flex\n                        width={1}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mb:1\n                          }}\n                        >\n                          {\n                            (this.state.claimable && this.state.claimable.gt(0)) ? (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  color={'cellText'}\n                                  name={'MonetizationOn'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  mb={3}\n                                  fontSize={[2,3]}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can claim <strong>{this.state.claimable.toFixed(8)} {this.props.contractInfo.rewardToken}</strong>.\n                                </Text>\n                                <ExecuteTransaction\n                                  params={[]}\n                                  {...this.props}\n                                  Component={Button}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/3],\n                                    value:'Claim',\n                                    borderRadius:4,\n                                    mainColor:'redeem',\n                                  }}\n                                  action={'Claim'}\n                                  methodName={'claim'}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractName={this.props.tokenConfig.feeDistributor.name}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have rewards to Claim yet.\n                                </Text>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                        <Text\n                          mb={1}\n                        >\n                          Claimed Rewards:\n                        </Text>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              pt:2,\n                              pb:3,\n                              px:3,\n                              width:1,\n                              display:'flex',\n                              alignItems:'center',\n                              justifyContent:'center'\n                            }}\n                            isActive={false}\n                            isInteractive={false}\n                          >\n                            {\n                              this.state.claimedRewards && this.state.claimedRewards.length ? (\n                                <Flex\n                                  width={1}\n                                  flexDirection={'column'}\n                                >\n                                  <Flex\n                                    pt={0}\n                                    pb={1}\n                                    width={1}\n                                    flexDirection={'row'}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.4}\n                                    >\n                                      Date\n                                    </Text>\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      Amount\n                                    </Text>\n                                    {\n                                      !this.props.isMobile && (\n                                        <Text\n                                          width={0.3}\n                                          fontSize={1}\n                                          fontWeight={3}\n                                        >\n                                          Hash\n                                        </Text>\n                                      )\n                                    }\n                                  </Flex>\n                                  {\n                                    this.state.claimedRewards.map( (claim,index) => (\n                                      <Flex\n                                        py={1}\n                                        width={1}\n                                        flexDirection={'row'}\n                                        key={`claim_${index}`}\n                                        borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                      >\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.4}\n                                        >\n                                          {claim.date}\n                                        </Text>\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.3}\n                                          textAlign={this.props.isMobile ? 'right' : 'left'}\n                                        >\n                                          {claim.amount.toFixed(4)} {claim.tokenName}\n                                        </Text>\n                                        {\n                                          !this.props.isMobile && (\n                                            <ExtLink\n                                              width={0.3}\n                                              color={'link'}\n                                              hoverColor={'link'}\n                                              href={this.functionsUtil.getEtherscanTransactionUrl(claim.hash)}\n                                            >\n                                              <Flex\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                              >\n                                                <Text\n                                                  fontSize={2}\n                                                  fontWeight={2}\n                                                  color={'link'}\n                                                >\n                                                  {this.functionsUtil.shortenHash(claim.hash)}\n                                                </Text>\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1.2em'}\n                                                  color={'link'}\n                                                  name={'OpenInNew'}\n                                                />\n                                              </Flex>\n                                            </ExtLink>\n                                          )\n                                        }\n                                      </Flex>\n                                    ))\n                                  }\n                                </Flex>\n                              ) : (\n                                <Text\n                                  fontSize={2}\n                                  color={'statValue'}\n                                >\n                                  No reward claimed yet.\n                                </Text>\n                              )\n                            }\n                          </DashboardCard>\n                        </Flex>\n                      </Flex>\n                    )\n                  }\n                </Box>\n              ) : !this.props.account ? (\n                <ConnectBox\n                  cardProps={{\n                    mt:2\n                  }}\n                  {...this.props}\n                />\n              ) : (\n                <Flex\n                  mt={3}\n                  mb={3}\n                  width={1}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default IdleStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n// import NXMaster from '../abis/nexus/NXMaster.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Box, Text, Input, Link, Progress, Button, Icon, Tooltip } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    quote:null,\n    steps:{\n      1:'Get Quote',\n      2:'Buy Cover'\n    },\n    periodOptions:{\n      30:{\n        label:'30d'\n      },\n      60:{\n        label:'60d'\n      },\n      90:{\n        label:'90d'\n      },\n      365:{\n        label:'1y'\n      }\n    },\n    coverId:null,\n    claimId:null,\n    capacity:null,\n    loading:false,\n    coverCost:null,\n    amountValue:'',\n    periodValue:'',\n    yearlyCost:null,\n    maxCapacity:null,\n    amountValid:true,\n    periodValid:true,\n    tokenConfig:null,\n    tokenBalance:null,\n    selectedToken:null,\n    claimableCovers:[],\n    tokenApproved:false,\n    selectedPeriod:null,\n    maxPriceWithFee:null,\n    transactionParams:[],\n    transactionValue:null,\n    yieldTokenBalance:null,\n    selectedUnderlying:null,\n    selectedAction:'deposit',\n    yieldTokenApproved:false,\n    claimButtonDisabled:false,\n    selectedCoverToClaim:null,\n    defaultClaimableCover:null,\n    selectedUnderlyingConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async loadContracts(){\n    const claimableCovers = [];\n    const nexusMutualCoverages = await this.functionsUtil.getNexusMutualCoverages(this.props.account);\n    nexusMutualCoverages.forEach( coverage => {\n      if (coverage.incident){\n        claimableCovers.push(coverage);\n      }\n    });\n\n    const validClaimableCoverFromParam = this.props.urlParams.param3 ? claimableCovers.find( cover => parseInt(cover.value) === parseInt(this.props.urlParams.param3) ) : null;\n\n    const defaultClaimableCover = claimableCovers.length>0 ? claimableCovers[0] : null;\n    const selectedCoverToClaim = validClaimableCoverFromParam ? validClaimableCoverFromParam : defaultClaimableCover || null;\n\n    this.setState({\n      claimableCovers,\n      selectedCoverToClaim,\n      defaultClaimableCover\n    });\n\n    const selectedAction = ['deposit','claim'].includes(this.props.urlParams.param2) ? this.props.urlParams.param2 : this.state.selectedAction;\n    const paramIsValidToken = this.props.urlParams.param3 && Object.keys(this.props.toolProps.availableTokens).includes(this.props.urlParams.param3);\n    const selectedToken = paramIsValidToken ? this.props.urlParams.param3 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    this.setSelectedAction(selectedAction);\n    this.changeSelectedToken(selectedToken);\n    // console.log('coverBoughtEvents',coverBoughtEvents,'claimSubmittedEvents',claimSubmittedEvents,'claimableCovers',claimableCovers);\n  }\n\n  async getPoolCapacity(selectedUnderlying,tokenConfig){\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const response = await this.functionsUtil.makeRequest(`${baseEndpoint}contracts/${tokenConfig.address}/capacity`);\n    if (response && response.data){\n      const capacity = response.data;\n      // console.log('getPoolCapacity',capacity);\n      const maxCapacity = capacity && capacity[`capacity${selectedUnderlying}`] ? this.functionsUtil.fixTokenDecimals(capacity[`capacity${selectedUnderlying}`],tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      return maxCapacity;\n    }\n    return false;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const selectedUnderlyingChanged = prevState.selectedUnderlying !== this.state.selectedUnderlying;\n    if (selectedTokenChanged || selectedUnderlyingChanged){\n      this.loadTokenData();\n    }\n  }\n\n  async loadTokenData(){\n\n    const isETH = this.state.selectedToken === 'ETH';\n    const selectedUnderlyingConfig = this.state.tokenConfig.underlying[this.state.selectedUnderlying];\n\n    // Init Underlying Contract\n    await Promise.all([\n      this.props.initContract(this.state.tokenConfig.token, this.state.tokenConfig.realAddress, this.state.tokenConfig.abi),\n      this.props.initContract(selectedUnderlyingConfig.name, selectedUnderlyingConfig.address, selectedUnderlyingConfig.abi)\n    ]);\n\n    let [\n      maxCapacity,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      tokenApproved,\n      tokenBalance\n    ] = await Promise.all([\n      this.getPoolCapacity(this.state.selectedUnderlying,this.state.tokenConfig),\n      this.functionsUtil.getTokenBalance(this.state.tokenConfig.token,this.props.account),\n      this.functionsUtil.checkTokenApproved(this.state.selectedToken,this.props.contractInfo.address,this.props.account),\n      this.functionsUtil.checkTokenApproved(selectedUnderlyingConfig.name,this.props.contractInfo.address,this.props.account),\n      isETH ? this.functionsUtil.getETHBalance(this.props.account,false) : this.functionsUtil.getTokenBalance(selectedUnderlyingConfig.name,this.props.account,false),\n    ]);\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n    yieldTokenBalance = yieldTokenBalance || this.functionsUtil.BNify(0);\n\n    this.setState({\n      maxCapacity,\n      tokenBalance,\n      tokenApproved,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      selectedUnderlyingConfig\n    });\n  }\n\n  async changeSelectedToken(selectedToken){\n    const periodValue = '';\n    const amountValue = '';\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const selectedUnderlying = Object.keys(tokenConfig.underlying)[0];\n\n    this.setState({\n      amountValue,\n      periodValue,\n      tokenConfig,\n      selectedToken,\n      selectedUnderlying\n    });\n  }\n\n  changeSelectedUnderlying(selectedUnderlying){\n    this.setState({\n      selectedUnderlying\n    });\n  }\n\n  setMaxCoverAmount(){\n    const amountValue = this.state.maxCapacity.toFixed();\n    this.changeAmount({\n      target:{\n        value:amountValue\n      }\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    const amountValid = this.functionsUtil.BNify(amountValue).gt(0) && this.functionsUtil.BNify(amountValue).lte(this.state.maxCapacity);\n    this.setState({\n      amountValue,\n      amountValid\n    });\n  }\n\n  changePeriod = (e) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=30 && parseInt(periodValue)<=365;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod:null\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    // Setup your cover data.\n    const coverData = {\n      period: this.state.periodValue, // days\n      coverAmount: this.state.amountValue, // ETH in units not wei\n      currency: this.state.selectedUnderlying,\n      contractAddress: this.state.tokenConfig.address, // the contract you will be buying cover for\n      asset: this.state.tokenConfig.underlying[this.state.selectedUnderlying].address\n    };\n\n    // URL to request a quote for.\n    // const quoteURL = 'https://api.nexusmutual.io/v1/quote?' +\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const quoteURL = `${baseEndpoint}quote?coverAmount=${coverData.coverAmount}&currency=${coverData.currency}&period=${coverData.period}&contractAddress=${coverData.contractAddress}`;\n\n    const response = await this.functionsUtil.makeRequest(quoteURL);\n\n    const quote = response && response.data ? response.data : null;\n\n    if (!quote){\n      this.setState({\n        loading:false\n      });\n      return false;\n    }\n\n    // encode the signature result in the data field\n    const data = this.props.web3.eth.abi.encodeParameters(\n      ['uint', 'uint', 'uint', 'uint', 'uint8', 'bytes32', 'bytes32'],\n      [quote.price, quote.priceInNXM, quote.expiresAt, quote.generatedAt, quote.v, quote.r, quote.s],\n    );\n\n    const COVER_TYPE = this.functionsUtil.toBN(0);\n    const feePercentage = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'feePercentage');\n    const basePrice = this.functionsUtil.toBN(quote.price);\n    const priceWithFee = basePrice.mul(this.functionsUtil.toBN(feePercentage)).divn(10000).add(basePrice);\n    const amountInWei = this.functionsUtil.toWei(coverData.coverAmount.toString());\n    const maxPriceWithFee = priceWithFee;\n    const coverCost = this.functionsUtil.fixTokenDecimals(maxPriceWithFee,this.state.tokenConfig.decimals);\n    const yearlyCost = coverCost.div(this.state.amountValue).times(365).div(this.state.periodValue).times(100);\n\n    // console.log('coverCost',maxPriceWithFee,coverCost.toFixed(),this.state.amountValue.toFixed(),this.state.periodValue,yearlyCost.toFixed());\n\n    const transactionParams = [\n      coverData.contractAddress,\n      coverData.asset,\n      amountInWei,\n      coverData.period,\n      COVER_TYPE,\n      maxPriceWithFee,\n      data\n    ];\n\n    const transactionValue = this.state.selectedUnderlying === 'ETH' ? priceWithFee : null;\n\n    // console.log(feePercentage,transactionParams,transactionValue,quote);\n\n    // debugger;\n\n    const step = 2;\n    const loading = false;\n\n    this.setState({\n      step,\n      quote,\n      loading,\n      coverCost,\n      yearlyCost,\n      maxPriceWithFee,\n      transactionValue,\n      transactionParams\n    });\n  }\n\n  approveSucceeded = (tx) => {\n    const tokenApproved = true;\n    this.setState({\n      tokenApproved\n    });\n  }\n\n  yieldTokenApproveSucceeded = (tx) => {\n    const yieldTokenApproved = true;\n    this.setState({\n      yieldTokenApproved\n    });\n  }\n\n  claimInputChange = (amount) => {\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.tokenConfig.decimals);\n    const claimButtonDisabled = this.functionsUtil.BNify(amount).lte(0) || this.functionsUtil.BNify(normalizedAmount).gt(this.state.selectedCoverToClaim.coveredTokenAmount);\n    this.setState({\n      claimButtonDisabled\n    });\n  }\n\n  getClaimTransactionParams = (coveredTokenAmount) => {\n    return {\n      methodName:'claimTokens',\n      methodParams:[this.state.selectedCoverToClaim.value,this.state.selectedCoverToClaim.incident.id,coveredTokenAmount,this.state.tokenConfig.realAddress]\n    };\n  }\n\n  claimTransactionSucceeded = (tx) => {\n    // const claimId = this.functionsUtil.getGlobalConfig(['txReceipt','events','ClaimSubmitted','returnValues','claimId'],tx);\n    // this.setState({\n    //   claimId\n    // });\n    this.loadContracts();\n  }\n\n  buyCoverTransactionSucceeded = (tx) => {\n    const coverId = this.functionsUtil.getGlobalConfig(['txReceipt','events','CoverBought','returnValues','coverId'],tx);\n    this.setState({\n      coverId\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      this.setState({\n        selectedAction\n      });\n    }\n  }\n\n  selectCoverToClaim(coverId){\n    const selectedCoverToClaim = this.state.selectedCoverToClaim ? this.state.claimableCovers.find( cover => parseInt(cover.value) === coverId ) : null;\n    // console.log('selectCoverToClaim',selectedCoverToClaim);\n    this.setState({\n      selectedCoverToClaim\n    });\n  }\n\n  reset(){\n    const step = 1;\n    const quote = null;\n    const coverId = null;\n    const periodValue = '';\n    const amountValue = '';\n    const transactionParams = [];\n    this.setState({\n      step,\n      quote,\n      coverId,\n      periodValue,\n      amountValue,\n      transactionParams\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Box\n            mb={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Choose action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'Security'}\n                iconColor={'deposit'}\n                text={'Buy Coverage'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.selectedAction === 'deposit' }\n                handleClick={ e => this.setSelectedAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'FileUpload'}\n                iconColor={'redeem'}\n                text={'Claim Tokens'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.selectedAction === 'claim' }\n                handleClick={ e => this.setSelectedAction('claim') }\n              />\n            </Flex>\n          </Box>\n          {\n            this.state.selectedAction === 'deposit' &&\n              <IconBox\n                cardProps={{\n                  py:2,\n                  px:3,\n                  my:2,\n                  width:1,\n                }}\n                isActive={true}\n                isInteractive={false}\n                icon={'LightbulbOutline'}\n                iconProps={{\n                  color:'flashColor'\n                }}\n                textProps={{\n                  color:'flashColor'\n                }}\n                text={`If your yield bearing token de-pegs in value by more than 10%, claim up to 90% of your loss by swapping your yield bearing token for a claim payment.`}\n              >\n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={'https://nexusmutual.io/pages/YieldTokenCoverv1.0.pdf'}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    Read More\n                    <Icon\n                      ml={1}\n                      size={'0.9em'}\n                      color={'primary'}\n                      name={'OpenInNew'}\n                    />\n                    .\n                  </Flex>\n                </ExtLink>\n              </IconBox>\n          }\n          {\n            this.state.selectedAction === 'deposit' ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={1}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    Object.keys(this.state.steps).map( stepIndex => (\n                      <Link\n                        style={{\n                          flexBasis:'0',\n                          flex:'1 1 0px',\n                          textDecoration:'none',\n                          cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                        }}\n                        fontSize={2}\n                        textAlign={'center'}\n                        key={`step_${stepIndex}`}\n                        color={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        hoverColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        activeColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                      >\n                        {this.state.steps[stepIndex]}\n                      </Link>\n                    ) )\n                  }\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Progress\n                    style={{\n                      width:'100%',\n                      height:'15px'\n                    }}\n                    value={(1/Object.keys(this.state.steps).length)*this.state.step}\n                  />\n                </Flex>\n                {\n                  !this.state.selectedToken || !this.state.tokenBalance ? (\n                    <FlexLoader\n                      flexProps={{\n                        mt:2,\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'25px',\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading assets...'}\n                    />\n                  ) : this.state.coverId ? (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <IconBox\n                        cardProps={{\n                          mt:1,\n                        }}\n                        icon={'DoneAll'}\n                        iconProps={{\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                        text={`You have successfully bought your Cover! Your Cover ID is <strong>${this.state.coverId}</strong>`}\n                      />\n                      <Link\n                        mt={2}\n                        color={'link'}\n                        hoverColor={'primary'}\n                        onClick={this.reset.bind(this)}\n                      >\n                        Get New Quote\n                      </Link>\n                    </Flex>\n                  ) : !this.state.quote ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Box\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Select Token to Cover:\n                        </Text>\n                        <AssetSelector\n                          {...this.props}\n                          id={'token-from'}\n                          showBalance={false}\n                          isSearchable={false}\n                          selectedToken={this.state.selectedToken}\n                          onChange={this.changeSelectedToken.bind(this)}\n                          availableTokens={this.props.toolProps.availableTokens}\n                        />\n                      </Box>\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          mb={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Select Payment Asset:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`This is the asset that you will use as payment method for the coverage premium`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              name={\"Info\"}\n                              color={'cellTitle'}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <AssetSelector\n                          {...this.props}\n                          showBalance={false}\n                          selectedToken={this.state.selectedUnderlying}\n                          onChange={this.changeSelectedUnderlying.bind(this)}\n                          availableTokens={this.state.tokenConfig.underlying}\n                        />\n                      </Box>\n                      {\n                        this.functionsUtil.BNify(this.state.maxCapacity).gt(0) ? (\n                          <Box\n                            width={1}\n                          >\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                How much do you want to cover?\n                              </Text>\n                              <Input\n                                min={0}\n                                step={1}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderColor={'cardBorder'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.amountValue}\n                                onChange={this.changeAmount.bind(this)}\n                                border={`1px solid ${this.props.theme.colors.divider}`}\n                                placeholder={`Insert ${this.state.selectedUnderlying.toUpperCase()} amount`}\n                              />\n                              <Flex\n                                width={1}\n                                maxWidth={'100%'}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'flex-end'}\n                              >\n                                <Link\n                                  mt={1}\n                                  fontSize={1}\n                                  fontWeight={3}\n                                  color={'dark-gray'}\n                                  textAlign={'right'}\n                                  hoverColor={'copyColor'}\n                                  onClick={ (e) => this.setMaxCoverAmount() }\n                                  style={{\n                                    maxWidth:'100%',\n                                    overflow:'hidden',\n                                    whiteSpace:'nowrap',\n                                    textOverflow:'ellipsis'\n                                  }}\n                                >\n                                  Max Available: {this.state.maxCapacity.toFixed(this.props.isMobile ? 2 : 4)} {this.state.selectedUnderlying}\n                                </Link>\n                              </Flex>\n                            </Box>\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                For how many days?\n                              </Text>\n                              <Input\n                                min={0}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderWidth={'1px'}\n                                borderStyle={'solid'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.periodValue}\n                                placeholder={'Insert days of coverage'}\n                                onChange={this.changePeriod.bind(this)}\n                                borderColor={this.state.periodValid ? 'cardBorder' : 'red'}\n                              />\n                              {\n                                !this.state.periodValid && (\n                                  <Text\n                                    my={1}\n                                    fontSize={2}\n                                    color={'red'}\n                                  >\n                                    Enter a period between 30 and 365 days!\n                                  </Text>\n                                )\n                              }\n                              <Flex\n                                mt={2}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                {\n                                  Object.keys(this.state.periodOptions).map( period => {\n                                    const periodInfo = this.state.periodOptions[period];\n                                    const isActive = this.state.selectedPeriod===period;\n                                    const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                                    return (\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:2,\n                                          width:width,\n                                        }}\n                                        isActive={isActive}\n                                        isInteractive={true}\n                                        key={`coverPeriod_${period}`}\n                                        handleClick={e => this.selectPeriod(period)}\n                                      >\n                                        <Text\n                                          fontSize={2}\n                                          fontWeight={3}\n                                          textAlign={'center'}\n                                          color={this.props.isActive ? 'copyColor' : 'legend'}\n                                        >\n                                          {periodInfo.label}\n                                        </Text>\n                                      </DashboardCard>\n                                    );\n                                  })\n                                }\n                              </Flex>\n                            </Box>\n                            <Flex\n                              mt={2}\n                              width={1}\n                              justifyContent={'center'}\n                            >\n                              <ButtonLoader\n                                buttonProps={{\n                                  my:2,\n                                  mx:[0, 2],\n                                  size:'medium',\n                                  borderRadius:4,\n                                  mainColor:'blue',\n                                  disabled:(!this.state.amountValid || !this.state.selectedUnderlying || !this.state.periodValue || !this.state.periodValid)\n                                }}\n                                buttonText={'GET QUOTE'}\n                                isLoading={this.state.loading}\n                                handleClick={ e => this.getQuote(e) }\n                              />\n                            </Flex>\n                          </Box>\n                        ) : (\n                          <IconBox\n                            cardProps={{\n                              mt:3\n                            }}\n                            icon={'MoneyOff'}\n                            iconProps={{\n                              color:'cellText'\n                            }}\n                            text={`Coverage for ${this.state.selectedToken} is not available at the moment.`}\n                          />\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text\n                        mb={2}\n                        fontSize={3}\n                        fontWeight={3}\n                        color={'primary'}\n                      >\n                        Cover Summary:\n                      </Text>\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          mb:2,\n                          px:3\n                        }}\n                        isActive={false}\n                        isInteractive={false}\n                      >\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Protocol:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          Idle Finance\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yield Token:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.selectedToken}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Amount:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.amountValue} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Period:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.periodValue} days\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Price:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.coverCost.toFixed(6)} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yearly Cost:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.yearlyCost.toFixed(2)}%\n                        </Text>\n                      </DashboardCard>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          this.functionsUtil.BNify(this.state.tokenBalance).lt(this.functionsUtil.BNify(this.state.quote.price)) ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have enough {this.state.selectedUnderlying} in your wallet.\n                                </Text>\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : !this.state.tokenApproved ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mb={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  To buy the coverage you need to approve the Smart-Contract.\n                                </Text>\n                                <ExecuteTransaction\n                                  {...this.props}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  Component={Button}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/2],\n                                    borderRadius:4,\n                                    value:'Approve',\n                                    mainColor:'deposit'\n                                  }}\n                                  action={'Approve'}\n                                  methodName={'approve'}\n                                  callback={this.approveSucceeded.bind(this)}\n                                  contractName={this.state.selectedUnderlyingConfig.name}\n                                  params={[this.props.contractInfo.address,this.props.web3.utils.toTwosComplement('-1')]}\n                                />\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <ExecuteTransaction\n                                {...this.props}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                Component={Button}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'deposit',\n                                  value:'Buy Coverage',\n                                  disabled:this.state.buttonDisabled\n                                }}\n                                action={'Buy Coverage'}\n                                methodName={'buyCover'}\n                                value={this.state.transactionValue}\n                                params={this.state.transactionParams}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.buyCoverTransactionSucceeded.bind(this)}\n                              />\n                              <Link\n                                mt={1}\n                                color={'link'}\n                                hoverColor={'primary'}\n                                onClick={this.reset.bind(this)}\n                              >\n                                Get New Quote\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            ) : this.state.selectedAction === 'claim' && (\n              <Box\n                width={1}\n              >\n                {\n                  this.state.claimableCovers.length>0 ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text mb={1}>\n                        Select Cover:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        isSearchable={false}\n                        name={'claimable_covers'}\n                        options={this.state.claimableCovers}\n                        onChange={this.selectCoverToClaim.bind(this)}\n                        defaultValue={this.state.defaultClaimableCover}\n                      />\n                      {\n                        this.state.selectedCoverToClaim.claimId ? (\n                          <IconBox\n                            cardProps={{\n                              mt:2,\n                            }}\n                            icon={'DoneAll'}\n                            iconProps={{\n                              color:this.props.theme.colors.transactions.status.completed\n                            }}\n                            text={`You've successfully claimed <strong>${this.state.selectedCoverToClaim.claimedAmount.toFixed(4)} ${this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!`}\n                          />\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3,\n                                mb:1\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  color={'cellText'}\n                                  name={'FileUpload'}\n                                />\n                                <Text\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can Claim up to <strong>{this.state.selectedCoverToClaim.claimableAmount.toFixed(4)} {this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!\n                                </Text>\n                                <Text\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  Keep in mind that the cover becomes inactive once any amount of tokens are claimed.\n                                </Text>\n                              </Flex>\n                            </DashboardCard>\n                            <SendTxWithBalance\n                              error={null}\n                              {...this.props}\n                              permitEnabled={false}\n                              approveEnabled={true}\n                              action={'Claim Token'}\n                              tokenConfig={this.state.tokenConfig}\n                              contractInfo={this.props.contractInfo}\n                              buttonDisabled={this.state.claimButtonDisabled}\n                              callback={this.claimTransactionSucceeded.bind(this)}\n                              changeInputCallback={this.claimInputChange.bind(this)}\n                              contractApproved={this.yieldTokenApproveSucceeded.bind(this)}\n                              getTransactionParams={this.getClaimTransactionParams.bind(this)}\n                              approveDescription={'To claim your tokens you need to approve the Smart-Contract.'}\n                              tokenBalance={this.functionsUtil.BNify(this.state.yieldTokenBalance).gt(this.state.selectedCoverToClaim.maxCoveredAmount) ? this.state.selectedCoverToClaim.maxCoveredAmount : this.state.yieldTokenBalance }\n                            >\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mt:2\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    name={'MoneyOff'}\n                                    color={'cellText'}\n                                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    You don't have any {this.state.selectedToken} in your wallet.\n                                  </Text>\n                                </Flex>\n                              </DashboardCard>\n                            </SendTxWithBalance>\n                          </Flex>\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <IconBox\n                      cardProps={{\n                        mt:1,\n                      }}\n                      icon={'Warning'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You cannot submit any Claim for your Covers.`}\n                    />\n                  )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n          value:Math.round(tokenPercentage),\n          color:'hsl('+tokenColorHsl+')'\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken,'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let stepsCount = {};\n    let tokensEarnings = {};\n    // let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<=earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n\n      stepsCount[maxPossibleStep] = stepsCount[maxPossibleStep] ? stepsCount[maxPossibleStep]+1 : 1;\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const maxCountStep = Object.keys(stepsCount).reduce( (maxCountStep,step) => {\n      const count = stepsCount[step];\n      if (count>maxCountStep.count){\n        maxCountStep.step = parseInt(step);\n        maxCountStep.count = parseInt(count);\n      }\n      return maxCountStep;\n    },{\n      step:0,\n      count:0\n    });\n\n    const estimationStepsPerc = maxCountStep.step || parseInt(Object.keys(this.state.estimationSteps)[1]);\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings)));\n            const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon :`images/tokens/${token}.svg`;\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={tokenIcon} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport ActiveCoverages from '../ActiveCoverages/ActiveCoverages';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    depositedTokens:[],\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (accountChanged || availableTokensChanged){\n      // console.log('StrategyPage - availableTokensChanged',availableTokensChanged);\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n\n    if (this.state.portfolioLoaded){\n      return false;\n    }\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load data\n      const [\n        batchedDeposits,\n        tokensToMigrate,\n        portfolio\n      ] = await Promise.all([\n        // Load claimable batches\n        [],//this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load tokens to be migrated\n        this.functionsUtil.getTokensToMigrate(this.props.selectedStrategy),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n        // Load and process Etherscan Txs\n        this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n        let totalBalanceWithScore = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenBalance = portfolio.tokensBalance[token].tokenBalance;\n          const tokenWeight = tokenBalance.div(portfolio.totalBalance);\n          const tokenAPY = tokenAprs.avgApy && !this.functionsUtil.BNify(tokenAprs.avgApy).isNaN() ? this.functionsUtil.BNify(tokenAprs.avgApy) : this.functionsUtil.BNify(0);\n\n          if (!tokenAPY.isNaN()){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          if (!tokenScore.isNaN() && tokenScore.gt(0)){\n            avgScore = avgScore.plus(tokenScore.times(tokenBalance));\n            totalBalanceWithScore = totalBalanceWithScore.plus(tokenBalance);\n          }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        if (!totalBalanceWithScore.isNaN() && totalBalanceWithScore.gt(0)){\n          avgScore = avgScore.div(totalBalanceWithScore);\n        }\n\n        // console.log('avgAPY',avgAPY.toFixed());\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        newState.avgScore = avgScore;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.tokensToMigrate = tokensToMigrate;\n      newState.portfolioLoaded = true;\n\n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const riskScore = this.functionsUtil.getGlobalConfig(['messages','riskScore']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const nexusMutualConfig = this.functionsUtil.getGlobalConfig(['tools','nexusMutual']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])} strategy\n        </Title>\n        {\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={4}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgScore ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgScore.toFixed(2) }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg Risk Score\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                !viewOnly && this.state.depositedTokens.length>0 && this.props.account && nexusMutualConfig.enabled && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','nexusMutual','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              width={[1,1/3]}\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                nexusMutualConfig.enabled && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <ActiveCoverages\n                      {...this.props}\n                      title={'Coverage'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.29,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:false,\n                            props:{\n                              width:[0.12,0.09],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.10],\n                            },\n                            parentProps:{\n                              alignItems:['center','flex-start'],\n                            },\n                            fields:[\n                              {\n                                name:'score',\n                              }\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.13],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.13],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.10],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,this.state.depositedTokens.length>0 ? 0.14 : 0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.22,0.10],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(govTokens).filter( govToken => govTokens[govToken].enabled )}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        useMetaTx={false}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Text, Heading, Input, Form, Field, Icon, Link, Loader, Button } from \"rimble-ui\";\n\nclass DeployB2BVesting extends Component {\n\n  state = {\n    actions:[],\n    processing: {\n      txHash:null,\n      loading:false,\n      actionIndex:[]\n    },\n    action:'deploy',\n    validated:false,\n    viewAction:null,\n    editAction:null,\n    newAction:false,\n    maxContracts:10,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    actionValid:false,\n    actionInputs:null,\n    claimedTokens:null,\n    deployedContracts:[],\n    contractDeployed:false,\n    inputs:[\n      {\n        name:'owner',\n        type:'address'\n      },\n      {\n        name:'recipient',\n        type:'address'\n      },\n      {\n        name:'vestingPeriod',\n        type:'uint256'\n      }\n    ]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction(action){\n    this.setState({\n      action,\n      editAction:null,\n      viewAction:null,\n      claimedTokens:null,\n      contractDeployed:null\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false,\n        actionIndex:[]\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const contractDeployed = prevState.contractDeployed !== this.state.contractDeployed && this.state.contractDeployed;\n    if (contractDeployed){\n      this.loadContracts();\n    }\n  }\n\n  async loadContracts(){\n    const tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens','IDLE']);\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n    const proxyCreated = await this.functionsUtil.getContractPastEvents('ProxyFactory', 'ProxyCreated', {fromBlock, toBlock: 'latest'});\n    const deployedContractsAddresses = proxyCreated.filter( p => p.returnValues.implementation.toLowerCase() === vesterImplementation.address.toLowerCase() ).map( p => p.returnValues.proxy );\n    // console.log('proxyCreated',proxyCreated,'deployedContractsAddresses',deployedContractsAddresses);\n\n    const deployedContracts = [];\n    await this.functionsUtil.asyncForEach(deployedContractsAddresses, async (contractAddress) => {\n      const contractName = `b2bVesting_${contractAddress}`;\n      await this.props.initContract(contractName,contractAddress,vesterImplementation.abi);\n      const [\n        // initialized,\n        owner,\n        recipient,\n        vestingPeriod,\n        availableBalance,\n        depositAmounts,\n      ] = await Promise.all([\n          // this.functionsUtil.genericContractCall(contractName,'initialized'),\n          this.functionsUtil.genericContractCall(contractName,'owner'),\n          this.functionsUtil.genericContractCall(contractName,'recipient'),\n          this.functionsUtil.genericContractCall(contractName,'vestingPeriod'),\n          this.functionsUtil.getTokenBalance(tokenConfig.token,contractAddress),\n          this.functionsUtil.genericContractCall(contractName,'getDepositAmounts')\n      ]);\n\n      let totalDeposited = this.functionsUtil.BNify(0);\n      if (depositAmounts) {\n        totalDeposited = depositAmounts.reduce( (total,amount) => {\n          total = total.plus(amount);\n          return total;\n        },this.functionsUtil.BNify(0));\n\n        totalDeposited = this.functionsUtil.fixTokenDecimals(totalDeposited,tokenConfig.decimals);\n      }\n\n      // console.log(contractName,initialized,owner,recipient,vestingPeriod,depositAmounts,parseFloat(totalDeposited));\n\n      deployedContracts.push({\n        owner,\n        recipient,\n        contractName,\n        vestingPeriod,\n        totalDeposited,\n        contractAddress,\n        availableBalance\n      });\n    });\n    const tokenBalance = await this.functionsUtil.getTokenBalance('IDLE',this.props.account);\n\n    // console.log(deployedContracts);\n\n    this.setState({\n      tokenConfig,\n      tokenBalance,\n      deployedContracts\n    });\n  }\n\n  validateForm(){\n    const validated = Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getTransactionParams(amount){\n    const params = {\n      value:null,\n      methodName:'deposit',\n      methodParams:[amount]\n    };\n    return params;\n  }\n\n  claimCallback(tx){\n    // console.log('claimCallback',tx);\n    if (tx.status === 'success'){\n      this.loadContracts();\n\n      const claimedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n      if (claimedTokensLog){\n        const claimedTokens = this.functionsUtil.fixTokenDecimals(parseInt(claimedTokensLog.data,16),this.state.tokenConfig.decimals);\n        this.setState({\n          claimedTokens\n        });\n      }\n    }\n  }\n\n  depositCallback(tx,amount,params){\n    // console.log('depositCallback',tx,amount,params);\n    if (tx.status === 'success'){\n      this.loadContracts();\n    }\n  }\n\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs){\n      return false;\n    }\n\n    const inputs = this.state.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.inputs.length){\n      return false;\n    }\n\n    const action = {\n      txError:null,\n      contractAddress:null,\n      inputs:this.state.actionInputs,\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n    const actionInputs = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n\n    this.setState({\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setViewAction(viewAction){\n\n    if (viewAction !== this.state.viewAction){\n      const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n      const deployedContract = this.state.deployedContracts[viewAction];\n      const contractInfo = {\n        abi:vesterImplementation.abi,\n        name:deployedContract.contractName,\n        address:deployedContract.contractAddress\n      };\n      this.setState({\n        viewAction,\n        contractInfo,\n        claimedTokens:null\n      });\n    }\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n    });\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const idleAddress = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','address']);\n\n    const callback = (tx,error,actionIndex) => {\n      const txSucceeded = tx.status === 'success';\n      const actions = Object.values(this.state.actions);\n      const isLastAction = parseInt(actionIndex)===parseInt(this.state.actions.length)-1;\n      const contractDeployed = txSucceeded && isLastAction;\n      // console.log('callback_1 -',actionIndex,txSucceeded,contractDeployed,tx);\n      if (txSucceeded){\n        const clonedVesterAddress = tx.txReceipt.events && tx.txReceipt.events.ProxyCreated ? tx.txReceipt.events.ProxyCreated.returnValues[1] : `0x${tx.txReceipt.logs[0].data.substr(-40)}`;\n        actions[actionIndex].contractAddress = clonedVesterAddress;\n        // console.log('callback_2 -',actionIndex,actions[actionIndex].contractAddress);\n      } else {\n        actions[actionIndex].txError = true;\n      }\n\n      // console.log('callback_3 -',actionIndex,actions);\n\n      this.setState({\n        actions,\n        contractDeployed\n      },()=>{\n        if (isLastAction){\n          this.cancelTransaction();\n        }\n      });\n    };\n\n    const callbackReceipt = (tx,actionIndex) => {\n      const txHash = tx.transactionHash;\n      // console.log('callbackReceipt',actionIndex,tx);\n      const processing = Object.assign({},this.state.processing);\n      processing.txHash = txHash;\n      processing.actionIndex.push(actionIndex);\n      this.setState({\n        processing\n      });\n    };\n\n    this.state.actions.forEach((action,actionIndex) => {\n      const ownerAddress = action.inputs[0];\n      const recipientAddress = action.inputs[1];\n      const vestingPeriod = action.inputs[2];\n      const initSig = \"initialize(address,address,address,uint256)\";\n      const initData = this.props.web3.eth.abi.encodeParameters(\n        ['address','address','address','uint256'],\n        [ownerAddress,idleAddress,recipientAddress,vestingPeriod]\n      );\n      const methodParams = [vesterImplementation.address,initSig,initData];\n      this.functionsUtil.contractMethodSendWrapper('ProxyFactory', 'createAndCall', methodParams, (tx,error) => callback(tx,error,actionIndex), (tx) => callbackReceipt(tx,actionIndex) );\n    });\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  render() {\n\n    const depositContracts = this.state.deployedContracts.filter( c => c.owner.toLowerCase() === this.props.account.toLowerCase() );\n    const claimContracts = this.state.deployedContracts.filter( c => c.recipient.toLowerCase() === this.props.account.toLowerCase() );\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.42]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Text\n              mb={2}\n            >\n              Choose the action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deploy'}\n                icon={'CloudUpload'}\n                iconColor={'deposit'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deploy' }\n                handleClick={ e => this.setAction('deploy') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deposit'}\n                iconColor={'deposit'}\n                icon={'ArrowDownward'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deposit' }\n                handleClick={ e => this.setAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Claim'}\n                iconColor={'redeem'}\n                icon={'ArrowUpward'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.action === 'claim' }\n                handleClick={ e => this.setAction('claim') }\n              />\n            </Flex>\n          </Flex>\n          <Flex\n            pb={2}\n            width={1}\n            my={[2,3]}\n            borderColor={'divider'}\n            borderBottom={'1px solid transparent'}\n          >\n            <Heading.h4\n              fontSize={[2,3]}\n              fontWeight={[2,3]}\n              style={{\n                textTransform:'capitalize'\n              }}\n            >\n              {this.state.action}\n            </Heading.h4>\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n          >\n            {\n              this.state.action === 'deploy' ? (\n                <Form\n                  width={1}\n                  validated={this.state.validated}\n                  onSubmit={this.handleSubmit.bind(this)}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          title={ this.state.editAction === actionIndex ? 'Edit Contract' : null }\n                          handleClick={ e => /*action.contractAddress ? this.functionsUtil.openWindow(this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)) : */this.setEditAction(actionIndex) }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  this.state.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                                }\n                                <Flex\n                                  mb={2}\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    action.contractAddress ? (\n                                      <ExtLink\n                                        fontSize={1}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                        hoverColor={this.props.theme.colors.transactions.status.completed}\n                                        href={this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)}\n                                      >\n                                        Deployed at {action.contractAddress}\n                                      </ExtLink>\n                                    ) : !this.state.processing.loading && (\n                                      <Flex\n                                        width={1}\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                        justifyContent={'center'}\n                                      >\n                                        <RoundButton\n                                          buttonProps={{\n                                            px:[0,4],\n                                            type:'button',\n                                            width:[1,'auto'],\n                                            disabled:!this.state.actionValid\n                                          }}\n                                          handleClick={this.addAction.bind(this)}\n                                        >\n                                          Save Contract\n                                        </RoundButton>\n                                        <Link\n                                          mt={2}\n                                          color={'red'}\n                                          hoverColor={'red'}\n                                          onClick={this.deleteAction.bind(this)}\n                                        >\n                                          Delete Contract\n                                        </Link>\n                                      </Flex>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {this.functionsUtil.shortenHash(action.inputs[0])} - {this.functionsUtil.shortenHash(action.inputs[1])} - {action.inputs[2]} { action.contractAddress ? '- DEPLOYED' : '' }\n                                </Text>\n                                { \n                                  action.contractAddress ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        name={'Done'}\n                                        align={'center'}\n                                        size={this.props.isMobile ? '1.2em' : '1.8em'}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      />\n                                    </Flex>\n                                  ) : this.state.processing.loading && this.state.processing.actionIndex && this.state.processing.actionIndex.includes(parseInt(actionIndex)) ? (\n                                    <Loader size=\"28px\" />\n                                  ) : action.txError ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        color={'red'}\n                                        name={'Error'}\n                                        align={'center'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.8em' }\n                                      />\n                                    </Flex>\n                                  ) : (\n                                    <Flex\n                                      p={['4px','7px']}\n                                      borderRadius={'50%'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                      backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                    >\n                                      <Icon\n                                        name={'Edit'}\n                                        align={'center'}\n                                        color={'redeem'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                      />\n                                    </Flex>\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.contractDeployed && !this.state.processing.loading && (!this.state.actions || Object.values(this.state.actions).length<this.state.maxContracts)) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Contract' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={fieldType}\n                                        pattern={fieldPattern}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        placeholder={`${input.name} (${input.type})`}\n                                        onChange={ e => this.inputChange(e,inputIndex) }\n                                        value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                              >\n                                <RoundButton\n                                  buttonProps={{\n                                    px:[0,4],\n                                    type:'button',\n                                    width:[1,'auto'],\n                                    disabled:!this.state.actionValid\n                                  }}\n                                  handleClick={this.addAction.bind(this)}\n                                >\n                                  Add Contract\n                                </RoundButton>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Contract\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.contractDeployed ? (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:4,\n                            width:[1,'100%']\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              align={'center'}\n                              size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={1}\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                              color={'dark-gray'}\n                              textAlign={'center'}\n                            >\n                              B2B Vesting contracts have been deployed\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          hash={this.state.processing.txHash}\n                          waitText={`Deployment estimated in`}\n                          endMessage={`Finalizing deployment request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            type:'submit',\n                            width:[1,'15em'],\n                            disabled:!this.state.validated\n                          }}\n                        >\n                          Deploy Contracts\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n                </Form>\n              ) : this.state.action === 'deposit' ?\n                depositContracts.length>0 ?\n                  depositContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={this.state.action}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.tokenBalance}\n                                    contractInfo={this.state.contractInfo}\n                                    callback={this.depositCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    approveDescription={'You need to approve the Smart-Contract first'}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3,\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          size={'2.3em'}\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                        />\n                                        <Text\n                                          mt={2}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          You don't have any $IDLE in your wallet.\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't deposit in any contract yet.\n                  </Text>\n                )\n              : this.state.action === 'claim' &&\n                claimContracts.length>0 ?\n                  claimContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    this.state.claimedTokens && (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        You have successfully claimed {this.state.claimedTokens.toFixed(4)} {this.state.tokenConfig.token}\n                                      </Text>\n                                    )\n                                  }\n                                  {\n                                    contractInfo.availableBalance && contractInfo.availableBalance.gt(0.00000001) ? (\n                                      <ExecuteTransaction\n                                        params={[]}\n                                        {...this.props}\n                                        Component={Button}\n                                        componentProps={{\n                                          size:'medium',\n                                          value:'Claim',\n                                          mainColor:'redeem',\n                                        }}\n                                        methodName={'claim'}\n                                        action={this.state.action}\n                                        callback={this.claimCallback.bind(this)}\n                                        contractName={contractInfo.contractName}\n                                      />\n                                    ) : (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={'cellText'}\n                                      >\n                                        No balance available.\n                                      </Text>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't claim from any contract yet.\n                  </Text>\n                )\n            }\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default DeployB2BVesting;\n","import Staking from '../Staking/Staking';\nimport IDLE from '../contracts/IDLE.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport ERC20 from '../contracts/ERC20.json';\nimport Tranches from '../Tranches/Tranches';\nimport COMP from '../abis/compound/COMP.json';\nimport aToken from '../abis/aave/AToken.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport LpStaking from '../LpStaking/LpStaking';\nimport stkIDLE from '../contracts/stkIDLE.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\nimport B2BVester from '../contracts/B2BVester.json';\nimport IdleStaking from '../IdleStaking/IdleStaking';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from '../abis/curve/CurvePool.json';\nimport NexusMutual from '../NexusMutual/NexusMutual';\nimport CoverMint from '../abis/cover/CoverMint.json';\nimport LockedIDLE from '../contracts/LockedIDLE.json';\nimport LpStakingAbi from '../contracts/LpStaking.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport PriceOracle from '../contracts/PriceOracle.json';\nimport FeeTreasury from '../contracts/FeeTreasury.json';\nimport IdleTokenV2 from '../contracts/IdleTokenV2.json';\nimport StrategyPage from '../StrategyPage/StrategyPage';\nimport BuyModal from '../utilities/components/BuyModal';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport BatchDeposit from '../BatchDeposit/BatchDeposit';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport erc20Forwarder from '../contracts/erc20Forwarder.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport DeployB2BVesting from '../DeployB2BVesting/DeployB2BVesting';\nimport SushiV2Router02 from '../abis/sushiswap/SushiV2Router02.json';\nimport IdleBatchConverter from '../contracts/IdleBatchConverter.json';\nimport UniswapV2Router02 from '../abis/uniswap/UniswapV2Router02.json';\nimport IdleDepositForwarder from '../contracts/IdleDepositForwarder.json';\nimport SushiLiquidityPool from '../abis/sushiswap/SushiLiquidityPool.json';\nimport NexusMutualIncidents from '../abis/nexus/NexusMutualIncidents.json';\nimport StakingFeeDistributor from '../contracts/StakingFeeDistributor.json';\nimport NexusMutualDistributor from '../abis/nexus/NexusMutualDistributor.json';\nimport BalancerExchangeProxy from '../abis/balancer/BalancerExchangeProxy.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\nimport MinimalInitializableProxyFactory from '../contracts/MinimalInitializableProxyFactory.json';\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: 'Idle',\n  version: 'v5.9',\n  baseToken: 'ETH',\n  baseURL: 'https://idle.finance',\n  forumURL:'https://gov.idle.finance',\n  theme:{\n    darkModeEnabled:true\n  },\n  betaURL: 'https://beta.idle.finance',\n  countries:{\n    'USA':'United States of America',\n    'GBR':'United Kingdom',\n    'AUS':'Australia',\n    'BRA':'Brazil',\n    'CHN':'China',\n    'CAN':'Canada',\n    'EUR':'Europe',\n    'HKG':'Hong Kong',\n    'IND':'India',\n    'MEX':'Mexico',\n    'RUS':'Russia',\n    'ZAF':'South Africa',\n    'KOR':'South Korea'\n  },\n  logs:{ // Enable logs levels\n    errorsEnabled:false,\n    messagesEnabled:false,\n  },\n  connectors:{ // Connectors props\n    metamask:{\n      enabled:true,\n      subcaption:'Browser extension'\n    },\n    opera:{\n      enabled:true,\n      subcaption:'Opera injected wallet'\n    },\n    dapper:{\n      enabled:true,\n      icon:'dapper.png',\n      subcaption:'Browser extension',\n    },\n    coinbase:{\n      enabled:true,\n      icon:'coinbase.png',\n      subcaption:'Connect with Coinbase wallet'\n    },\n    trustwallet:{\n      enabled:true,\n      subcaption:'Connect with Trust Wallet'\n    },\n    walletconnect:{\n      enabled:true,\n      iconModal:'walletconnect.png',\n      subcaption:'Connect with QR code'\n    },\n    walletlink:{\n      enabled:true,\n      icon:'coinbase.png',\n      name:'Coinbase Wallet',\n      subcaption:'Connect with QR code'\n    },\n    gnosis:{\n      enabled:true,\n      // icon:'coinbase.png',\n      name:'Gnosis Safe App',\n      subcaption:'Connect with Gnosis Safe App'\n    },\n    fortmatic:{\n      enabled:true,\n      subcaption:'Login with phone-number'\n    },\n    portis:{\n      enabled:true,\n      subcaption:'Login with e-mail'\n    },\n    authereum:{\n      enabled:true,\n      subcaption:'Cross-device wallet'\n    },\n    torus:{\n      enabled:true,\n      icon:'torus.png',\n      subcaption:'One-Click login for Web 3.0'\n    },\n    trezor:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    ledger:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    ledgerlive:{\n      enabled:true,\n      subcaption:'Ledger Live Browser'\n    },\n    custom:{\n      enabled:true,\n      subcaption:'Custom address'\n    }\n  },\n  newsletterSubscription:{\n    endpoint:'https://dev.lapisgroup.it/idle/newsletter.php'\n  },\n  messages:{\n    scoreShort:'Protocol Risk Score',\n    apyShort:'Annual Percentage Yield',\n    tokenPrice:'The token price is calculated using Uniswap spot prices.',\n    cheapRedeem:'Amount of unlent funds available for low gas fees redeem',\n    curveBonusSlippage:'Slippage or bonus depending on if the coin is low or high in the Curve Pool',\n    distributionSpeed:'The distribution indicates the amount of tokens distributed for the entire pool.',\n    directMint:'Pay an additional gas fee to rebalance the pool and help all users gain an additional APR',\n    performanceFee:'This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE',\n    userDistributionSpeed:'The distribution indicates the amount of tokens distributed for your account based on your current pool share.',\n    govTokenApr:'Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.',\n    govTokenRedeemableBalance:'The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.',\n    riskScoreShort:'It\\'s a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.',\n    redeemSkipGov:'This feature allows you to save some gas by skipping the redeem of all or some of your accrued governance tokens, the skipped governance tokens will be given away to the entire pool',\n    batchDepositExecutionSchedule:'Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.',\n    apyLong:'APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.',\n    yieldFarming:'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\">Read more here</a>.',\n    riskScore:`It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions:`<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`\n  },\n  analytics:{\n    google:{\n      events:{\n        enabled:true, // Enable Google Analytics events\n        debugEnabled:false, // Enable sending for test environments\n        addPostfixForTestnet:true // Append testnet to eventCategory\n      },\n      pageView:{\n        enabled:true\n      }\n    }\n  },\n  modals:{ // Enable modals\n    first_deposit_referral:false, // Referral share modal\n    first_deposit_share:true, // First deposit share modal\n    migrate:{\n      enabled:true\n    },\n    welcome:{ // Welcome modal\n      enabled:true,\n      frequency:604800 // One week\n    }\n  },\n  dashboard:{\n    baseRoute:'/dashboard',\n    theme:{\n      mode:'light',\n      darkModeEnabled:true\n    },\n  },\n  governance:{\n    test:false,\n    enabled:true,\n    startBlock:11333729,\n    baseRoute:'/governance',\n    props:{\n      tokenName:'IDLE',\n      availableContracts:{\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    proposals:{\n      7:{\n        description:`Upgrade of IdleTokenGovernance contract to include the following changes:<br />\n        <ul>\n          <li>support for EIP 3165 flashLoans (fee is set to 0.08% of the flash loaned amount redistributed to LP)</li>\n          <li>support for stkAAVE distribution</li>\n          <li>support for new cWBCT distribution</li>\n          <li>other minor updates for gas and redeems</li>\n        </ul>\n        See more in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466\">https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466</a>`\n      }\n    },\n    contracts:{\n      delegates:'IDLE',\n      governance:'GovernorAlpha',\n    }\n  },\n  curve:{\n    enabled:false,\n    params:{\n      n_coins:3,\n      label:'Curve',\n      route:'/dashboard/curve',\n      image:'images/protocols/curve.svg',\n      imageInactive:'images/protocols/curve-off.svg',\n    },\n    rates:{\n      path:['apy','day','idle'],\n      endpoint:'https://www.curve.fi/raw-stats/apys.json'\n    },\n    poolContract:{\n      decimals:18,\n      abi:CurvePool,\n      name:'idleDAI+idleUSDC+idleUSDT',\n      token:'idleDAI+idleUSDC+idleUSDT',\n      address:'0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05'\n    },\n    depositContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7'\n    },\n    gaugeContract:{\n      abi:LiquidityGaugeV2,\n      name:'LiquidityGaugeV2',\n      address:'0xd69ac8d9D25e99446171B5D0B3E4234dAd294890'\n    },\n    zapContract:{\n      abi:CurveZap,\n      name:'idleCurveZap',\n      address:'0x456974df1042ba7a46fd49512a8778ac3b840a21'\n    },\n    migrationContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7',\n      functions:[\n        {\n          label:'Deposit',\n          name:'add_liquidity'\n        },\n      ]\n    },\n    availableTokens:{\n      idleDAIYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'DAI',\n        token:'idleDAIYield',\n        address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:0\n        },\n      },\n      idleUSDCYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDC',\n        token:'idleUSDCYield',\n        address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:1\n        },\n      },\n      idleUSDTYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDT',\n        token:'idleUSDTYield',\n        address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:2\n        },\n      },\n    }\n  },\n  permit:{\n    DAI:{\n      version:1,\n      EIPVersion:null,\n      nonceMethod:'nonces',\n      name:'Dai Stablecoin',\n      type:[\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" },\n      ]\n    },\n    USDC:{\n      version:2,\n      name:'USD Coin',\n      EIPVersion:2612,\n      nonceMethod:'nonces',\n      type:[\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ]\n    },\n    SLP:{\n      version:1,\n      EIPVersion:2612,\n      nonceMethod:'nonces',\n      name:'SushiSwap LP Token',\n      type:[\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ]\n    }\n  },\n  govTokens:{\n    IDLE:{\n      abi:IDLE,\n      decimals:18,\n      token:'IDLE',\n      enabled:true,\n      showAUM:false, // Include IDLE balance in AUM\n      showAPR:false, // Include IDLE Apr\n      protocol:'idle',\n      showPrice:false, // Show price in Yield Farming section\n      showBalance:false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode:false,\n      distributionMode:'block',\n      distributionFrequency:'day', // Multiply distribution per block\n      color:'hsl(162, 100%, 41%)',\n      icon:'images/tokens/IDLE.png',\n      disabledTokens:['idleRAIYield','idleFEIYield'], // Disable IDLE distribution for idleToken\n      address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e' // MAIN\n      // address:'0xAB6Bdb5CCF38ECDa7A92d04E86f7c53Eb72833dF', // KOVAN\n      // address:'0xa85233C63b9Ee964Add6F2cffe00Fd84eb32338f' // Fork\n    },\n    COMP:{\n      abi:COMP,\n      decimals:18,\n      token:'COMP',\n      enabled:true,\n      showAUM:true, // Include IDLE balance in AUM\n      showAPR:true, // Include COMP Apr\n      showPrice:true,\n      showBalance:true, // Include COMP balance in Portfolio Donut\n      disabledTokens:[],\n      protocol:'compound',\n      aprTooltipMode:false,\n      distributionMode:'block',\n      distributionFrequency:'day',\n      color:'hsl(162, 100%, 41%)',\n      address:'0xc00e94cb662c3520282e6f5717214004a7f26888', // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    stkAAVE:{\n      abi:aToken,\n      decimals:18,\n      showAUM:true, // Include stkAAVE balance in AUM\n      showAPR:true, // Include stkAAVE Apr\n      enabled:true,\n      showPrice:true,\n      token:'stkAAVE',\n      showBalance:true, // Include stkAAVE balance in Portfolio Donut\n      protocol:'aavev2',\n      aprTooltipMode:false,\n      distributionMode:'second',\n      color:'hsl(314, 41%, 51%)',\n      distributionFrequency:'day',\n      address:'0x4da27a545c0c5b758a6ba100e3a049001de870f5', // MAIN\n      addressForPrice:'0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9', // MAIN\n      disabledTokens:['idleTUSDYield','idleSUSDYield','idleRAIYield']\n    }\n  },\n  contracts:{\n    ProxyFactory:{\n      abi:MinimalInitializableProxyFactory,\n      address:'0x91baced76e3e327ba7850ef82a7a8251f6e43fb8'\n    },\n    LockedIDLE:{\n      abi:LockedIDLE,\n      address:'0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n    },\n    FeeTreasury:{\n      abi:FeeTreasury,\n      address:'0x69a62c24f16d4914a48919613e8ee330641bcb94' // MAIN\n    },\n    PriceOracle:{\n      abi:PriceOracle,\n      address:'0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n      // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n    },\n    Timelock:{\n      abi:Timelock,\n      address:'0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n      // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n    },\n    EcosystemFund:{\n      abi:EcosystemFund,\n      address:'0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n      // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n    },\n    VesterFactory:{\n      abi:VesterFactory,\n      address:'0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n      // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n    },\n    IdleController:{\n      abi:IdleController,\n      address:'0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n      // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n    },\n    EarlyRewards:{\n        abi:EarlyRewards,\n        address:'0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n    },\n    GovernorAlpha:{\n      abi:GovernorAlpha,\n      address:'0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n      // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n    },\n    Comptroller:{\n      abi:Comptroller,\n      address:'0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n      // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n    },\n    SushiswapRouter:{\n      abi:SushiV2Router02,\n      address:'0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F'\n    },\n    UniswapRouter:{\n      abi:UniswapV2Router02,\n      address:'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n    },\n    BalancerExchangeProxy:{\n      abi:BalancerExchangeProxy,\n      address:'0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n    }\n  },\n  tokens:{\n    DAI:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n    USDC:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n  },\n  tranches:{\n    AA:{\n      color:{\n        // hex:'#00ff06',\n        hex:'#00a9fe',\n        rgb:[0, 169, 254],\n        hsl:['200', '100%', '50%']\n      },\n      type:'AA',\n      route:'senior',\n      icon:'Security',\n      baseName:'senior',\n      name:'Senior Tranche',\n      features:[\n        'Funds covered by Junior tranches TVL',\n        'Minimized risk exposure',\n        'Withdraw your funds at any time',\n        'Auto-Reinvest accrued tokens',\n      ],\n      description:{\n        long:'The Senior Tranche offers the safest way to access the lending market and enjoy its returns thanks to the built-in funds coverage.',\n        deposit:'By depositing in the Senior Tranche in case of Smart-Contract breach your funds are covered by the funds deposited in the Junior Tranche.',\n        stake:'Stake your tranche tokens to earn additional rewards and boost the APY.',\n        unstake:'By unstaking your tranche tokens you will no more get additional rewards.',\n        withdraw:'You can withdraw your funds at any time from the tranche.',\n        cantUnstake:'To unstake your funds you just need to wait 10 blocks after your last stake transaction.',\n        cantWithdraw:'To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.'\n      }\n    },\n    BB:{\n      color:{\n        hex:'#ff9900',\n        rgb:[255, 153, 0],\n        hsl:['36', '100%', '50%']\n      },\n      type:'BB',\n      route:'junior',\n      icon:'TrendingUp',\n      baseName:'junior',\n      name:'Junior Tranche',\n      features:[\n        'Leverage yield using Senior tranches TVL',\n        'Higher risk exposure by protecting senior tranches',\n        'Withdraw your funds at any time',\n        'Auto-Reinvest accrued tokens',\n      ],\n      description:{\n        long:'The Junior Tranche offers the maximum performance in terms of interests for your assets but expose your funds to an higher risk.',\n        deposit:'By depositing in the Junior Tranche in case of Smart-Contract breach your funds will be used to cover eventual losses on the Senior Tranche.',\n        stake:'Stake your tranche tokens to earn additional rewards and boost the APY.',\n        unstake:'By unstaking your tranche tokens you will no more get additional rewards.',\n        withdraw:'You can withdraw your funds at any time from the tranche.',\n        cantUnstake:'To unstake your funds you just need to wait 10 blocks after your last stake transaction.',\n        cantWithdraw:'To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.'\n      }\n    }\n  },\n  strategies:{\n    tranches:{\n      token:'DAI',\n      visible:true,\n      type:'tranche',\n      protocol:'idle',\n      color:'#f32121',\n      comingSoon:false,\n      title:'Tranches',\n      addGovTokens:true,\n      titlePostfix:null,\n      iconName:'Whatshot',\n      component: Tranches,\n      govTokensEnabled:true,\n      chartColor:'hsl(40,95%,59%)',\n      icon:'images/strategies/tranches-on.png',\n      iconInactive:'images/strategies/tranches-off.png',\n      iconInactiveDark:'images/strategies/tranches-white.png',\n      desc:'Diversify your risk profile with dynamic tranched yield derivatives',\n    },\n    best:{\n      token:'DAI',\n      visible:true,\n      color:'#f32121',\n      type:'strategy',\n      comingSoon:false,\n      addGovTokens:true,\n      titlePostfix:null,\n      title:'Best-Yield',\n      iconName:'Whatshot',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(40,95%,59%)',\n      icon:'images/strategies/best-on.svg',\n      iconInactive:'images/strategies/best-off.svg',\n      iconInactiveDark:'images/strategies/best-white.svg',\n      desc:'Maximize your returns across DeFi protocols',\n      descLong:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.',\n      descShort:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.'\n    },\n    risk:{\n      token:'DAI',\n      visible:true,\n      color:'#2196F3',\n      type:'strategy',\n      comingSoon:false,\n      titlePostfix:null,\n      addGovTokens:true,\n      iconName:'Security',\n      title:'Risk-Adjusted',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/risk-on.svg',\n      iconInactive:'images/strategies/risk-off.svg',\n      iconInactiveDark:'images/strategies/risk-white.svg',\n      desc:'Optimize your risk exposure across DeFi protocols',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    },\n    /*\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n    */\n  },\n  stats:{\n    enabled:true, // Enable endpoint\n    rates:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/rates/'\n    },\n    tvls:{\n      TTL:120,\n      endpoint:'https://api.idle.finance/tvls/'\n    },\n    substack:{\n      TTL:1800,\n      endpoint:'https://api.idle.finance/substack/'\n    },\n    scores:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/scores/'\n    },\n    config:{\n      headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {}\n    },\n    versions:{\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3:{\n        label:'Idle V3',\n        additionalProtocols:[],\n        endTimestamp:1597237542,\n        startTimestamp:1589801874,\n        showPerformanceTooltip:false,\n        strategiesParams:{\n          risk:{\n            endTimestamp:1597233922,\n          }\n        },\n        enabledStrategies:['best','risk'],\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n      },\n      v4:{\n        label:'Idle V4',\n        endTimestamp:null,\n        startTimestamp:1597442400, // 1598220000\n        enabledStrategies:['best','risk'],\n        showPerformanceTooltip:true,\n        strategiesParams:{\n          risk:{\n            startTimestamp:1599183170,\n          }\n        },\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH','RAI'],\n        additionalProtocols:[\n          {\n            decimals:16,\n            protocol:'compound',\n            name:'compoundWithCOMP',\n            enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH'],\n          },\n          {\n            decimals:18,\n            protocol:'aavev2',\n            name:'aavev2WithStkAAVE',\n            enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH'],\n          }\n        ]\n      }\n    },\n    tokens:{\n      DAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          rgb:[250,184,51],\n          hex:'#F7B24A',\n          hsl:['40', '95%', '59%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 2]\n        },\n        startTimestamp:'2020-02-11',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USD:{\n        enabled:true,\n        color:{\n          hex:'#85bb65',\n          rgb:[133, 187, 101],\n          hsl:['98', '39%', '56%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        address:null,\n        startTimestamp:'2020-02-04',\n      },\n      USDC:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#2875C8',\n          rgb:[40,117,200],\n          hsl:['211', '67%', '47%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USDT:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#22a079',\n          rgb:[34, 160, 121],\n          hsl:['161', '65%', '38%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      TUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'0340a1',\n          rgb:[3, 64, 161],\n          hsl:['217', '96%', '32%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n      },\n      SUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#1e1a31',\n          rgb:[30, 26, 49],\n          hsl:['250', '31%', '15%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n      },\n      WBTC:{\n        decimals:8,\n        enabled:true,\n        color:{\n          hex:'#eb9444',\n          rgb:[235, 148, 68],\n          hsl:['29', '81%', '59%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'wbtcDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      WETH:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#ee1f79',\n          rgb:[238, 31, 121],\n          hsl:['334', '86%', '53%']\n        },\n        startTimestamp:'2021-02-16',\n        conversionRateField:'wethDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      COMP:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#00d395',\n          rgb:[0, 211, 149],\n          hsl:['162', '100%', '41%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0xc00e94cb662c3520282e6f5717214004a7f26888',\n      },\n      stkAAVE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#B6509E',\n          rgb:[182, 80, 158],\n          hsl:['314', '41%', '51%']\n        },\n        startTimestamp:'2021-04-30',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x4da27a545c0c5b758a6ba100e3a049001de870f5',\n      },\n      IDLE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#0d55bb',\n          rgb:[13, 85, 187],\n          hsl:['215', '87%', '39%']\n        },\n        startTimestamp:'2020-11-10',\n        icon:'images/tokens/IDLE.png',\n        conversionRateField:'idleDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e',\n      },\n      RAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#378879',\n          rgb:[55, 136, 121],\n          hsl:['169', '42%', '37%']\n        },\n        disabledCharts:['score'],\n        startTimestamp:'2021-05-25',\n        icon:'images/tokens/RAI.png',\n        conversionRateField:'raiDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n      },\n      FEI:{\n        decimals:18,\n        enabled:false,\n        color:{\n          hex:'#229b6e',\n          rgb:[34, 155, 110],\n          hsl:['158', '64%', '37%']\n        },\n        disabledCharts:['score'],\n        startTimestamp:'2021-07-30',\n        conversionRateField:'feiDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      },\n      'idleDAI+idleUSDC+idleUSDT':{\n        decimals:18,\n        enabled:false,\n        name:'Curve.fi',\n        color:{\n          hex:'#ff0000',\n          rgb:[255, 0, 0],\n          hsl:['0', '100%', '50%']\n        },\n        startTimestamp:'2020-06-15',\n      },\n    },\n    protocols:{\n      compound:{\n        legend:true,\n        enabled:true,\n        label:'Compound',\n        color:{\n          rgb:[0, 209, 146],\n          hsl:['162', '100%', '41%']\n        }\n      },\n      aavev2WithStkAAVE:{\n        enabled:true,\n        label:'Aave V2 + stkAAVE',\n        startTimestamp:'2021-05-08 14:30:00',\n        // tokensProps:{\n        //   WETH:{\n        //     startTimestamp:'2021-05-19 12:20:00',\n        //   }\n        // },\n        color:{\n          hex:'#B6509E',\n          rgb:[182, 80, 158],\n          hsl:['314', '41%', '51%']\n        },\n        rateField:['rate','aaveAdditionalAPR']\n      },\n      compoundWithCOMP:{\n        enabled:true,\n        label:'Compound + COMP',\n        color:{\n          rgb:[0, 153, 107],\n          hsl:['162', '100%', '30%']\n        },\n        rateField:['rate','compoundAdditionalAPR']\n      },\n      fulcrum:{\n        legend:false,\n        enabled:false,\n        label:'Fulcrum',\n        color:{\n          rgb:[2, 138, 192],\n          hsl:['197', '98%', '38%']\n        }\n      },\n      dsr:{\n        label:'DSR',\n        enabled:false,\n        icon:'CHAI.png',\n        color:{\n          rgb:[222, 52, 67],\n          hsl:['355', '72%', '54%']\n        }\n      },\n      dydx:{\n        legend:true,\n        label:'DyDx',\n        enabled:true,\n        color:{\n          rgb:[87, 87, 90],\n          hsl:['240', '2%', '35%']\n        }\n      },\n      iearn:{\n        label:'Yearn',\n        enabled:true,\n      },\n      aave:{\n        label:'Aave V1',\n        legend:false,\n        enabled:false,\n        color:{\n          rgb:[230, 131, 206],\n          hsl:['315', '66%', '71%']\n        }\n      },\n      aavev2:{\n        legend:true,\n        enabled:true,\n        icon:'aave.svg',\n        label:'Aave V2',\n        color:{\n          rgb:[151, 79, 141],\n          hsl:['308', '31%', '45%']\n        }\n      },\n      cream:{\n        legend:true,\n        enabled:true,\n        label:'Cream',\n        icon:'cream.svg',\n        color:{\n          rgb:[105, 226, 220],\n          hsl:['177', '68%', '65%']\n        }\n      },\n      fuse:{\n        legend:true,\n        enabled:true,\n        label:'Fuse',\n        icon:'fuse.png',\n        color:{\n          rgb:[0, 0, 0],\n          hsl:['0', '0%', '0%']\n        }\n      },\n      curve:{\n        label:'',\n        enabled:true,\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      },\n      idle:{\n        label:'Idle',\n        enabled:true,\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      }\n    }\n  },\n  contract:{\n    methods:{\n      redeem:{\n        skipRebalance:true,\n        metaTransactionsEnabled:false\n      },\n      deposit:{\n        skipMint:true,\n        minAmountForMint:100000,\n        erc20ForwarderEnabled:true,\n        skipMintCheckboxEnabled:true,\n        metaTransactionsEnabled:false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract:{\n          forwarder:{\n            enabled:true,\n            abi:erc20Forwarder,\n            name:'erc20Forwarder',\n            function:'emitMessage',\n            address:'0xfaadbe5f0a19f0ebf92aeb73534cbc96b96e2bda', // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens:{\n            DAI:{\n              enabled:true,\n              permitType:'DAI_Permit',\n              abi:IdleDepositForwarder,\n              function:'permitAndDeposit', // foo\n              name:'IdleDepositForwarderDAI',\n              address:'0xDe3c769cCD1878372864375e9f89956806B86daA', // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC:{\n              enabled:true,\n              abi:IdleDepositForwarder,\n              permitType:'EIP2612_Permit',\n              name:'IdleDepositForwarderUSDC',\n              function:'permitEIP2612AndDeposit', // 'foo'\n              address:'0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761', // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            },\n          }\n        },\n        proxyContract:{\n          enabled:false,\n          abi:IdleProxyMinter,\n          name:'IdleProxyMinter',\n          function:'mintIdleTokensProxy',\n          address:'0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a',\n        }\n      },\n      migrate:{\n        skipRebalance:true,\n        minAmountForRebalance:10000,\n        minAmountForRebalanceMetaTx:10000\n      },\n      redeemGovTokens:{\n        enabled:true\n      },\n      redeemSkipGov:{\n        enabled:true,\n        disabledTokens:['idleDAISafe','idleUSDCSafe','idleUSDTSafe']\n      },\n      rebalance:{\n        enabled:true,\n        abi:IdleRebalancerV3\n      }\n    }\n  },\n  network:{ // Network configurations\n    availableNetworks:{\n      1:'Mainnet',\n      3:'Ropsten',\n      4:'Rinkeby',\n      42:'Kovan',\n      1337:'Hardhat'\n    },\n    isForked:false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork:1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear:2371428,\n    secondsPerYear:31536000,\n    firstBlockNumber:8119247,\n    requiredConfirmations: 1,\n    enabledNetworks:[1,42,1337],\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers:{\n      infura:{\n        42: 'https://kovan.infura.io/v3/',\n        1: 'https://mainnet.infura.io/v3/',\n        1337: 'https://mainnet.infura.io/v3/'\n      },\n      ens:{\n        enabled:true,\n        supportedNetworks:[1]\n      },\n      nexus:{\n        endpoints:{\n          1:'https://api.nexusmutual.io/v1/',\n          42:'https://api.staging.nexusmutual.io/v1/',\n        }\n      },\n      etherscan:{\n        enabled:true, // False for empty txs list (try new wallet)\n        keys:[\n          env.REACT_APP_ETHERSCAN_KEY,\n          env.REACT_APP_ETHERSCAN_KEY2,\n          env.REACT_APP_ETHERSCAN_KEY3,\n          env.REACT_APP_ETHERSCAN_KEY4\n        ],\n        endpoints:{\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        },\n        baseUrl:{\n          1: 'https://etherscan.io',\n          1337: 'https://etherscan.io',\n          42: 'https://kovan.etherscan.io',\n        }\n      },\n      snapshot:{\n        whitelist:[\n          '0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa',\n          '0xf12ce5807e3d3128B876aa1Cec0632D63547E22E'\n        ],\n        endpoints:{\n          proposals:'https://hub.snapshot.page/api/idlefinance.eth/proposals'\n        },\n        urls:{\n          proposals:'https://signal.idle.finance/#/idlefinance.eth/proposal/'\n        }\n      },\n      biconomy:{\n        enabled:true,\n        enableLogin:false,\n        supportedNetworks:[1,42],\n        disabledWallets:['authereum'],\n        endpoints:{\n          limits:'https://api.biconomy.io/api/v1/dapp/checkLimits'\n        },\n        params:{\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: '36572ec9-ae5c-4c4a-9530-f3ae7c7ac829',\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      simpleID:{\n        enabled:false,\n        supportedNetworks:[1],\n        getNetwork:(networkId,availableNetworks) => {\n          let networkName = null;\n          switch (networkId){\n            case 1:\n              networkName = 'mainnet';\n            break;\n            default:\n              networkName = availableNetworks[networkId] ? availableNetworks[networkId].toLowerCase() : 'mainnet';\n            break;\n          }\n          return networkName;\n        },\n        params:{\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: 'mainnet'\n        }\n      }\n    }\n  },\n  events:{\n    DAI:{\n      fields:{\n        to:'dst',\n        from:'src',\n        value:'wad'\n      }\n    }\n  },\n  notifications:[\n    {\n      enabled:false,\n      end:1612282726374,\n      start:1611677841027,\n      date:'Jan 26, 2021 16:18 UTC',\n      title:'Cover Protocol Available',\n      hash:'/dashboard/tools/cover-protocol',\n      image:'/images/protocols/cover-logo.svg',\n      text:'Protect your portfolio with Cover Protocol',\n    }\n  ],\n  tools:{\n    stake:{\n      enabled:true,\n      icon:'Layers',\n      label:'Staking',\n      route:'staking',\n      subComponent:Staking,\n      desc:'Stake your IDLE / Sushi Swap LP tokens and earn $IDLE rewards',\n      props:{\n        availableTokens:{\n          IDLE:{\n            component:IdleStaking,\n            contract:{\n              abi:stkIDLE,\n              decimals:18,\n              name:'stkIDLE',\n              fromBlock:12561464,\n              rewardToken:'IDLE',\n              address:'0xaac13a116ea7016689993193fce4badc8038136f' // Mainnet\n            },\n            feeDistributor:{\n              fromBlock:12649361,\n              abi:StakingFeeDistributor,\n              name:'StakingFeeDistributor',\n              address:'0xbabb82456c013fd7e3f25857e0729de8207f80e2' // Mainnet\n            },\n            abi:IDLE,\n            name:'IDLE',\n            token:'IDLE',\n            decimals:18,\n            enabled:true,\n            label:'IDLE Token',\n            icon:'images/tokens/IDLE.png',\n            address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e', // Mainnet\n            poolLink:'https://etherscan.com/address/0x875773784Af8135eA0ef43b5a374AaD105c5D39e',\n          },\n          SLP:{\n            component:LpStaking,\n            contract:{\n              decimals:24,\n              name:'LpStaking',\n              maxMultiplier:3,\n              abi:LpStakingAbi,\n              maxBonusDays:120,\n              rewardToken:'IDLE',\n              address:'0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d' // Mainnet\n            },\n            name:'SLP',\n            token:'SLP',\n            decimals:18,\n            enabled:true,\n            abi:SushiLiquidityPool,\n            label:'SushiSwap IDLE/ETH LP Token',\n            icon:'images/protocols/sushiswap.png',\n            address:'0xa7f11e026a0af768d285360a855f2bded3047530', // Mainnet\n            poolLink:'https://analytics.sushi.com/pairs/0xa7f11e026a0af768d285360a855f2bded3047530',\n          }\n        }\n      }\n    },\n    nexusMutual:{\n      enabled:true,\n      icon:'Security',\n      route:'coverage',\n      label:'Coverage',\n      desc:'Buy Nexus Mutual coverage without KYC for your deposits',\n      subComponent:NexusMutual,\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            abi:IdleTokenV4,\n            name:'idleDAIYield',\n            token:'idleDAIYield', // Mainnet\n            // token:'idleDAIYieldMock', // Kovan\n            address:'0x0000000000000000000000000000000000000011',\n            realAddress:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4', // Mainnet\n            // realAddress:'0xbd0b0205408509544815d377214d8f2cbe3e5381', // Kovan\n            underlying:{\n              DAI:{\n                abi:ERC20,\n                name:'DAI', // Mainnet\n                token:'DAI',\n                decimals:18,\n                // name:'DAIMock', // Kovan\n                address:'0x6b175474e89094c44da98b954eedeac495271d0f' // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              },\n            }\n          },\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV4,\n            name:'idleUSDTYield',\n            token:'idleUSDTYield', // Mainnet\n            // token:'idleUSDTYieldMock', // Kovan\n            address:'0x0000000000000000000000000000000000000012',\n            realAddress:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n            underlying:{\n              DAI:{\n                abi:ERC20,\n                name:'DAI', // Mainnet\n                token:'DAI',\n                decimals:18,\n                // name:'DAIMock', // Kovan\n                address:'0x6b175474e89094c44da98b954eedeac495271d0f' // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              },\n            }\n          }\n        },\n      },\n      directProps:{\n        // startBlock:25858186, // Kovan\n        startBlock:12783137, // Mainnet\n        // Yield token covers have a 14 days grace period\n        yieldTokenCoverGracePeriod: 14 * 24 * 60 * 60 * 1000,\n        contractInfo:{\n          abi:NexusMutualDistributor,\n          name:'NexusMutualDistributor',\n          // address:'0xe2d569dc064b3b91f514e775c6026e04d2c887a9' // Kovan\n          address:'0xf2b36f823eae36e53a5408d8bd452748b24fbf76' // Mainnet\n        },\n        incidentsInfo:{\n          abi:NexusMutualIncidents,\n          name:'NexusMutualIncidents',\n          // address:'0x322f9a880189E3FFFf59b74644e13e5763C5AdB9' // Kovan\n          address:'0x8ceba69a8e96a4ce71aa65859dbdb180b489a719' // Mainnet\n        }\n      }\n    },\n    b2bVesting:{\n      enabled:true,\n      visible:true,\n      icon:'CloudUpload',\n      label:'B2B Vesting',\n      route:'b2b-vesting-contract',\n      subComponent:DeployB2BVesting,\n      desc:'Deploy/Deposit/Claim for B2B Vesting Contracts<br /><small style=\"color:#ff9900\">(only for partners that joined the B2B Affiliate program)</small>',\n      props:{\n        contracts:{\n          vesterImplementation:{\n            abi:B2BVester,\n            address:'0x3024656ae91d7bf724f613c314bc56030ba2344c'\n          }\n        }\n      }\n    },\n    ethWrapper:{\n      enabled:true,\n      label:'ETH Wrapper',\n      route:'eth-wrapper',\n      subComponent:TokenWrapper,\n      image:'images/tokens/WETH.svg',\n      desc:'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props:{\n        startContract:{\n          name:'ETH',\n          token:'ETH',\n          decimals:18,\n          wrapMethod:'deposit',\n        },\n        destContract:{\n          abi:WETH,\n          name:'WETH',\n          decimals:18,\n          token:'WETH',\n          unwrapMethod:'withdraw',\n          address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    coverProtocol:{\n      enabled:false,\n      label:'Cover Protocol',\n      route:'cover-protocol',\n      subComponent:CoverProtocol,\n      image:'images/protocols/cover-logo.svg',\n      desc:'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl:'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props:{\n        contract:{\n          decimals:18,\n          abi:CoverMint,\n          name:'CoverMint',\n          address:'0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages:[\n          {\n            collateral:'DAI',\n            expirationTimestamp:1714470400,\n            tokens:{\n              Claim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                address:'0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                  address:'0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c',\n                }\n              },\n              NoClaim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                address:'0x53df0bfa014b7522299c129c5a7b318f02adb469',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                  address:'0xce0e9e7a1163badb7ee79cfe96b5148e178cab73',\n                }\n              }\n            }\n          },\n        ],\n      }\n    },\n    batchDeposit:{\n      enabled:true,\n      icon:'Storage',\n      claimEnabled:true,\n      depositEnabled:true,\n      route:'batch-deposit',\n      label:'Batch Deposit',\n      subComponent:BatchDeposit,\n      desc:'Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            strategy:'best',\n            baseToken:'DAI',\n            minPoolSize:20000,\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAI',\n              address:'0x633fb4d38B24dC890b11Db2AE2B248D13F996A79', // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  usePermit:true,\n                  label:'Deposit',\n                  permitName:'permitAndDeposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:6,\n            strategy:'best',\n            baseToken:'USDC',\n            minPoolSize:20000,\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDC',\n              address:'0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B', // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                  permitName:'permitEIP2612AndDepositUnlimited'\n                },\n              ]\n            },\n          },\n          /*\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  usePermit:true,\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n          */\n        }\n      }\n    },\n    batchMigration:{\n      enabled:true,\n      claimEnabled:true,\n      depositEnabled:false,\n      icon:'FileDownload',\n      route:'batch-migration',\n      label:'Batch Migration',\n      subComponent:BatchMigration,\n      desc:'Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'DAI',\n            name:'idleDAIYieldV3',\n            token:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAI',\n              address:'0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDC',\n            name:'idleUSDCYieldV3',\n            token:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDC',\n              address:'0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            name:'idleUSDTYieldV3',\n            token:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            name:'idleSUSDYieldV3',\n            token:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            name:'idleTUSDYieldV3',\n            token:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            name:'idleWBTCYieldV3',\n            token:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            name:'idleDAISafeV3',\n            token:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            name:'idleUSDCSafeV3',\n            token:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            name:'idleUSDTSafeV3',\n            token:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n        }\n      }\n    },\n    tokenMigration:{\n      enabled:true,\n      icon:'SwapHoriz',\n      route:'convert',\n      label:'Token Migration',\n      desc:'Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle',\n      subComponent:TokenMigration,\n      props:{\n        migrationContract:{\n          name:'IdleConverterV4',\n          abi:IdleConverterPersonalSignV4,\n          address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n          oldAddresses:[],\n          functions:[\n            {\n              label:'Migrate',\n              name:'migrateFromToIdle'\n            },\n          ]\n        },\n        availableStrategies:['best','risk'],\n        availableTokens:{\n          idleDAIv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            baseToken:'DAI',\n            abi:IdleTokenV2,\n            token:'idleDAIOld',\n            icon:'images/tokens/idleDAI.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0x10eC0D497824e342bCB0EDcE00959142aAa766dD',\n          },\n          cDAI:{\n            decimals:8,\n            enabled:true,\n            token:\"cDAI\",\n            baseToken:'DAI',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\",\n          },\n          iDAI:{\n            decimals:18,\n            enabled:false,\n            token:\"iDAI\",\n            baseToken:'DAI',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x493c57c4763932315a328269e1adad09653b9081\",\n          },\n          aDAI:{\n            decimals:18,\n            enabled:true,\n            token:\"aDAI\",\n            protocol:\"aave\",\n            baseToken:'DAI',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\",\n          },\n          yDAIv3:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv3\",\n            abi:yDAIv3.abi,\n            baseToken:'DAI',\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xC2cB1040220768554cf699b0d863A3cd4324ce32\",\n          },\n          yDAIv2:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv2\",\n            baseToken:'DAI',\n            abi:yDAIv3.abi,\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\",\n          },\n          idleUSDCv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            abi:IdleTokenV2,\n            baseToken:'USDC',\n            token:'idleUSDCOld',\n            icon:'images/tokens/idleUSDC.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0xeB66ACc3d011056B00ea521F8203580C2E5d3991',\n          },\n          cUSDC:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDC\",\n            baseToken:'USDC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x39aa39c021dfbae8fac545936693ac917d5e7563\",\n          },\n          iUSDC:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDC\",\n            baseToken:'USDC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\",\n          },\n          aUSDC:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDC\",\n            protocol:\"aave\",\n            baseToken:'USDC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\",\n          },\n          yUSDCv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv3\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x26EA744E5B887E5205727f55dFBE8685e3b21951\",\n          },\n          yUSDCv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv2\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\",\n          },\n          cUSDT:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDT\",\n            baseToken:'USDT',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\",\n          },\n          iUSDT:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDT\",\n            baseToken:'USDT',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x8326645f3aa6de6420102fdb7da9e3a91855045b\",\n          },\n          aUSDT:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDT\",\n            protocol:\"aave\",\n            baseToken:'USDT',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\",\n          },\n          yUSDTv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv3\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\",\n          },\n          yUSDTv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv2\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\",\n          },\n          idleSUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'SUSD',\n            token:'idleSUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleSUSDYield.svg',\n            address:'0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5',\n          },\n          aSUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aSUSD\",\n            protocol:\"aave\",\n            baseToken:'SUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x625aE63000f46200499120B906716420bd059240\",\n          },\n          ySUSDv3:{\n            decimals:18,\n            enabled:true,\n            token:\"ySUSDv3\",\n            abi:ySUSDv3,\n            baseToken:'SUSD',\n            protocol:\"iearn\",\n            availableStrategies:['best'],\n            icon:'images/tokens/ySUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xf61718057901f84c4eec4339ef8f0d86d2b45600\",\n          },\n          idleTUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'TUSD',\n            token:'idleTUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleTUSDYield.svg',\n            address:'0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6',\n          },\n          aTUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aTUSD\",\n            protocol:\"aave\",\n            baseToken:'TUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x4DA9b813057D04BAef4e5800E36083717b4a0341\",\n          },\n          yTUSDv3:{\n            decimals:18,\n            enabled:true,\n            abi:yTUSDv3,\n            token:\"yTUSDv3\",\n            baseToken:'TUSD',\n            protocol:\"iearn\",\n            icon:'images/tokens/yTUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x73a052500105205d34daf004eab301916da8190f\",\n          },\n          cWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"cWBTC\",\n            baseToken:'WBTC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\",\n          },\n          iWBTC:{\n            decimals:8,\n            enabled:false,\n            token:\"iWBTC\",\n            baseToken:'WBTC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\",\n          },\n          aWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"aWBTC\",\n            protocol:\"aave\",\n            baseToken:'WBTC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\",\n          },\n        }\n      }\n    },\n    addFunds:{\n      enabled:true,\n      icon:'AddCircleOutline',\n      route:'add-funds',\n      label:'Add Funds',\n      desc:'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent:BuyModal,\n      directProps:{\n        showInline:true,\n        showAllTokens:true\n      }\n    },\n    tokenSwap:{\n      enabled:true,\n      icon:'Sync',\n      route:'token-swap',\n      label:'Token Swap',\n      desc:'Easily swap your tokens using Kyber Swap widget',\n      subComponent:TokenSwap,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n          \"SUSD\":{\"token\":\"SUSD\"},\n          \"TUSD\":{\"token\":\"TUSD\"},\n          \"USDC\":{\"token\":\"USDC\"},\n          \"USDS\":{\"token\":\"USDS\"},\n          \"USDT\":{\"token\":\"USDT\"},\n          \"WBTC\":{\"token\":\"WBTC\"},\n          \"WETH\":{\"token\":\"WETH\"},\n          \"BUSD\":{\"token\":\"BUSD\"},\n          \"EURS\":{\"token\":\"EURS\"},\n          \"2KEY\":{\"token\":\"2KEY\"},\n          \"ABT\":{\"token\":\"ABT\"},\n          \"ABYSS\":{\"token\":\"ABYSS\"},\n          \"AMPL\":{\"token\":\"AMPL\"},\n          \"ANT\":{\"token\":\"ANT\"},\n          \"BAM\":{\"token\":\"BAM\"},\n          \"BAND\":{\"token\":\"BAND\"},\n          \"BAT\":{\"token\":\"BAT\"},\n          \"BLZ\":{\"token\":\"BLZ\"},\n          \"BNT\":{\"token\":\"BNT\"},\n          \"BQX\":{\"token\":\"BQX\"},\n          \"BTU\":{\"token\":\"BTU\"},\n          \"CDT\":{\"token\":\"CDT\"},\n          \"CVC\":{\"token\":\"CVC\"},\n          \"DAT\":{\"token\":\"DAT\"},\n          \"DGX\":{\"token\":\"DGX\"},\n          \"EKG\":{\"token\":\"EKG\"},\n          \"ELF\":{\"token\":\"ELF\"},\n          \"ENJ\":{\"token\":\"ENJ\"},\n          \"EQUAD\":{\"token\":\"EQUAD\"},\n          \"FXC\":{\"token\":\"FXC\"},\n          \"GDC\":{\"token\":\"GDC\"},\n          \"GEN\":{\"token\":\"GEN\"},\n          \"GHT\":{\"token\":\"GHT\"},\n          \"GNO\":{\"token\":\"GNO\"},\n          \"IOST\":{\"token\":\"IOST\"},\n          \"KEY\":{\"token\":\"KEY\"},\n          \"KNC\":{\"token\":\"KNC\"},\n          \"LEND\":{\"token\":\"LEND\"},\n          \"LINK\":{\"token\":\"LINK\"},\n          \"LOOM\":{\"token\":\"LOOM\"},\n          \"LRC\":{\"token\":\"LRC\"},\n          \"MANA\":{\"token\":\"MANA\"},\n          \"MCO\":{\"token\":\"MCO\"},\n          \"MET\":{\"token\":\"MET\"},\n          \"MFG\":{\"token\":\"MFG\"},\n          \"MKR\":{\"token\":\"MKR\"},\n          \"MLN\":{\"token\":\"MLN\"},\n          \"MTL\":{\"token\":\"MTL\"},\n          \"MYB\":{\"token\":\"MYB\"},\n          \"NEXXO\":{\"token\":\"NEXXO\"},\n          \"NPXS\":{\"token\":\"NPXS\"},\n          \"OGN\":{\"token\":\"OGN\"},\n          \"OMG\":{\"token\":\"OMG\"},\n          \"OST\":{\"token\":\"OST\"},\n          \"PAX\":{\"token\":\"PAX\"},\n          \"PBTC\":{\"token\":\"PBTC\"},\n          \"PLR\":{\"token\":\"PLR\"},\n          \"PNK\":{\"token\":\"PNK\"},\n          \"POLY\":{\"token\":\"POLY\"},\n          \"POWR\":{\"token\":\"POWR\"},\n          \"PT\":{\"token\":\"PT\"},\n          \"QKC\":{\"token\":\"QKC\"},\n          \"QNT\":{\"token\":\"QNT\"},\n          \"RAE\":{\"token\":\"RAE\"},\n          \"REN\":{\"token\":\"REN\"},\n          \"REP\":{\"token\":\"REP\"},\n          \"REQ\":{\"token\":\"REQ\"},\n          \"RLC\":{\"token\":\"RLC\"},\n          \"RSR\":{\"token\":\"RSR\"},\n          \"RSV\":{\"token\":\"RSV\"},\n          \"SAN\":{\"token\":\"SAN\"},\n          \"SNT\":{\"token\":\"SNT\"},\n          \"SNX\":{\"token\":\"SNX\"},\n          \"SPIKE\":{\"token\":\"SPIKE\"},\n          \"SPN\":{\"token\":\"SPN\"},\n          \"TKN\":{\"token\":\"TKN\"},\n          \"TKX\":{\"token\":\"TKX\"},\n          \"TRYB\":{\"token\":\"TRYB\"},\n          \"UBT\":{\"token\":\"UBT\"},\n          \"UPP\":{\"token\":\"UPP\"},\n          \"ZRX\":{\"token\":\"ZRX\"}\n        }\n      },\n      directProps:{\n      }\n    }\n  },\n  insurance:{\n    nexusMutual:{\n      label:'Nexus Mutual',\n      image:'images/protocols/nexus-mutual.png',\n      imageDark:'images/protocols/nexus-mutual-white.png'\n    },\n    coverProtocol:{\n      label:'Cover Protocol',\n      image:'images/protocols/cover-logo.svg',\n      imageDark:'images/protocols/cover-logo.svg',\n    }\n  },\n  payments: { // Payment methods & providers\n    methods:{\n      bank:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/bank.png',\n          caption:'Bank Account'\n        }\n      },\n      card:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/debit-card.png',\n          caption:'Credit Card'\n        }\n      },\n      wallet:{\n        defaultProvider:'zeroExInstant',\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/ethereum-wallet.svg',\n          caption:'Ethereum Wallet',\n          imageProps:{\n            padding:['0','5px']\n          }\n        }\n      },\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: 'images/payments/wyre.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.75% fee ~',\n        supportedMethods:['card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        remoteResources:{},\n        env:'prod',\n        envParams:{\n          test:{\n            accountId:'AC_Q2Y4AARC3TP'\n          },\n          prod:{\n            accountId:'AC_PQQBX33XVEQ'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n              break;\n              case 'card':\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = 'https://pay.sendwyre.com/purchase';\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken ),\n            referrerAccountId,\n            redirectUrl:globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const wyreWidget = document.getElementById('wyre-widget');\n          if (!wyreWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById('wyreWidget_style')){\n              const wyreStyle = document.createElement('style');\n              wyreStyle.id = 'wyreWidget_style';\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        },\n      },\n      ramp: {\n        enabled:true,\n        imageSrc: 'images/payments/ramp.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods:['bank','card'],\n        badge: {\n          text:'NO ID REQUIRED',\n          color:'#fff',\n          bgColor:'#0cade4'\n        },\n        supportedTokens:['ETH','DAI','USDC'],\n        supportedCountries:['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'],\n        getInfo: (props) => {\n          const info = {};\n            switch (props.selectedMethod){\n              case 'bank':\n                info.supportedCountries = ['GBR','EUR'];\n                info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n              case 'card':\n                info.supportedCountries = ['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'];\n                info.subcaption = `~ 2.90% fee ~`;\n              break;\n              default:\n              break;\n            }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n        \treturn {\n\t          hostAppName: 'Idle',\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? 'mobile' : 'desktop',\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset ? props.tokenConfig.ramp.swapAsset : props.selectedToken )\n        \t};\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on('*', async (event) => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type){\n                case 'PURCHASE_SUCCESSFUL':\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil.BNify(tokenAmount.toString()).div(functionsUtil.BNify(Math.pow(10,parseInt(tokenDecimals)).toString())).toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: 'light',\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\",\n                  });\n\n                break;\n                default:\n                break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled:true,\n        imageSrc: 'images/payments/transak.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods:['bank','card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR','IND'],\n        supportedTokens:['ETH','DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n        remoteResources:{'https://global.transak.com/v1/widget.js':{}},\n        env:'prod',\n        badge:{\n          text:'INSTANT',\n          bgColor:'#0069ee'\n        },\n        envParams:{\n          test:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_TEST,\n            url:'https://global.transak.com'\n          },\n          prod:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_PROD,\n            url:'https://global.transak.com'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === 'bank' ? '1.5%' : '4.5%';\n\n          if (props.selectedCountry && props.selectedCountry.value){\n            switch (props.selectedCountry.value.toUpperCase()){\n              case 'GBR':\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n              break;\n              case 'IND':\n                fee = '1.0%';\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n              break;\n              case 'EUR':\n                if (selectedMethod === 'bank'){\n                  info.badge = {\n                    text:'SEPA',\n                    color:'#f7cb05 ',\n                    bgColor:'#10288a'\n                  };\n                } else {\n                  info.badge = {\n                    text:'INSTANT',\n                    bgColor:'#0069ee'\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams = globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value){\n            switch (buyParams.selectedCountry.value.toUpperCase()){\n              case 'IND':\n                fiatCurrency = 'INR';\n              break;\n              case 'GBR':\n                fiatCurrency = 'GBP';\n              break;\n              case 'EUR':\n                fiatCurrency = 'EUR';\n              break;\n              case 'USA':\n                fiatCurrency = 'USD';\n              break;\n              default:\n                fiatCurrency = 'GBP';\n              break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.transak && props.tokenConfig.transak.currencyCode ? props.tokenConfig.transak.currencyCode : props.selectedToken);\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width:'100%',\n            height:'100%'\n            // email,\n          };\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          if (window.transakGlobal){\n\n            const transakWidget = document.getElementById('transak-widget');\n            if (!transakWidget){\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById('transakWidget_style')){\n                const transakStyle = document.createElement('style');\n                transakStyle.id = 'transakWidget_style';\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, 'transak-widget-container');\n          }\n        }\n      },\n      moonpay: {\n        enabled:true,\n        imageSrc: 'images/payments/moonpay.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 4.5% fee ~',\n        supportedMethods:['card','bank'],\n        supportedCountries:['GBR','EUR','AUS','BRA','CHN','MEX','CAN','HKG','RUS','ZAF','KOR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        env:'prod',\n        envParams:{\n          test:{\n            url:'https://buy-staging.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod:{\n            url:'https://buy.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                if (props.selectedCountry && props.selectedCountry.value){\n                  switch (props.selectedCountry.value.toUpperCase()){\n                    case 'EUR':\n                      info.badge = {\n                        text:'SEPA',\n                        color:'#f7cb05 ',\n                        bgColor:'#10288a'\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                    break;\n                    case 'GBR':\n                      info.badge = {\n                        text:'GBP',\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                    break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                    break;\n                  }\n                }\n              break;\n              case 'card':\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams = globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.moonpay && props.tokenConfig.moonpay.currencyCode ? props.tokenConfig.moonpay.currencyCode : props.selectedToken.toLowerCase()),\n            walletAddress:props.account,\n            baseCurrencyCode:'USD',\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            'bank':{\n              'GBR':'gbp_bank_transfer',\n              'EUR':'sepa_bank_transfer'\n            },\n            'card':'credit_debit_card'\n          };\n\n          const selectedCountry = buyParams.selectedCountry && buyParams.selectedCountry.value ? buyParams.selectedCountry.value.toUpperCase() : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod){\n            switch (buyParams.selectedMethod){\n              case 'bank':\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod]['EUR'];\n                switch (selectedCountry){\n                  case 'GBR':\n                  case 'EUR':\n                    params.enabledPaymentMethods = methods[buyParams.selectedMethod][selectedCountry];\n                  break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(methods[buyParams.selectedMethod]).join(',');\n                  break;\n                }\n              break;\n              case 'card':\n              default:\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod];\n              break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry){\n            case 'GBR':\n              params.baseCurrencyCode = 'GBP';\n            break;\n            case 'EUR':\n              params.baseCurrencyCode = 'EUR';\n            break;\n            default:\n              params.baseCurrencyCode = 'USD';\n            break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (!document.cookie.match(/^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/)) {\n              document.cookie = \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const moonpayWidget = document.getElementById('moonpay-widget');\n          if (!moonpayWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById('moonpayWidget_style')){\n              const moonpayStyle = document.createElement('style');\n              moonpayStyle.id = 'moonpayWidget_style';\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: 'images/payments/zeroexinstant.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        remoteResources:{'https://instant.0x.org/v3/instant.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onSuccess,onClose) => {\n\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context ? window.RimbleWeb3_context.connectorName : null;\n\n          if (!tokenParams.zeroExInstant){\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider: connectorName && connectorName!=='Injected' && window.RimbleWeb3_context.connector[connectorName.toLowerCase()] ? window.RimbleWeb3_context.connector[window.RimbleWeb3_context.connectorName.toLowerCase()].provider : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount) => {\n          if (window.zeroExInstant && initParams){\n            if (amount){\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, 'body');\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: 'images/payments/kyber.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Swap with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['WETH','USDC','DAI','USDT','TUSD','SUSD','WBTC','RAI','FEI'],\n        web3Subscription:{ // Data for web3 subscription\n          enabled: true,\n          contractAddress: '0x818e6fecd516ecc3849daf6845e3ec868087b755',\n          decodeLogsData: [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_startAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_tokenAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_startAmount\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_tokenAmount\",\n              \"type\": \"uint256\"\n            },\n          ],\n        },\n        remoteResources:{\n          'https://widget.kyber.network/v0.7.5/widget.css':{},\n          'https://widget.kyber.network/v0.7.5/widget.js':{\n            parentElement:document.body,\n            precall: (props,globalConfigs,providerInfo) => {\n\n              // Remove previous elements\n              const buttons = document.querySelectorAll('.kyber-widget-button');\n              for (let i=0;i<buttons.length;i++){\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll('.script_kyberSwap');\n              for (let i=0;i<scripts.length;i++){\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId ? props.buttonId : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)){\n                const a = document.createElement('a');\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props,globalConfigs);\n                a.target = '_blank';\n                a.rel = 'nofollow noopener noreferrer';\n                a.className = 'kyber-widget-button theme-ocean theme-supported';\n                a.title = 'Swap with Kyber';\n                a.style = 'display:none;';\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props,globalConfigs,buyParams=null) => {\n          const baseToken = props.baseToken ? props.baseToken : 'ETH';\n          const params = {\n            lang:'en',\n            type:'swap',\n            mode:'iframe',\n            theme:'theme-ocean',\n            paramForwarding:true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens:`${baseToken}_${props.selectedToken}`,\n            title:`Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair:`${baseToken}_${props.selectedToken}`,\n            commissionId:'0x4215606a720477178AdFCd5A59775C63138711e8',\n            network: globalConfigs.network.requiredNetwork === 1 ? 'mainnet' : 'test',\n          };\n\n          const url  = 'https://widget.kyber.network/v0.7.5/';\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props) => {\n          const buttonId = props.buttonId ? props.buttonId :`kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a){\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n\n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: 'images/payments/airswap.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://cdn.airswap.io/airswap-instant-widget.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            env: 'production',\n            mode: 'buy',\n            token: props.tokenConfig.address,\n            baseToken: 'ETH',\n            onComplete: onComplete ? onComplete : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.AirSwapInstant){\n            if (amount){\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams,'body');\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: 'images/payments/totle.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://widget.totle.com/latest/dist.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null,\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.TotleWidget){\n            const nodeId = 'totle-widget';\n            if (!document.getElementById(nodeId)){\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(initParams,document.getElementById(nodeId));\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                return (\n                  <ImageButton\n                    caption={token}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    imageSrc={`images/tokens/${token}.svg`}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} my={0}>\n                {\n                  this.props.showInline && this.props.buyToken ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `How do you prefer to buy ${this.state.selectedToken}?`\n                }\n              </Text>\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  maxWidth={ this.props.showInline ? '35em' : 'initial' }\n                  width={ (this.props.showInline && !this.props.isMobile) ? 0.72 : 1 }\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={`images/tokens/${token}.svg`} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034','1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    alert:'#ff9900',\n    arrowActive:'#d8d8d8',\n    arrowInactive:'#4f4f4f',\n    selectBgFocused:'#1e3657',\n    selectBg:'#162e4d',\n    backButtonBg:'#162e4d',\n    lineChartStroke:'#a4aec6',\n    wrongNetworkBannerBg:'#0e2133',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    link:'#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg:'#162e4d',\n    menuBg:'#162e4d',\n    menuHover:'#1e3657',\n    flashColor:'#bac5ff',\n    cardBgHover:'#1e3657',\n    cardBorder:'#0d2034',\n    pageActive:'#d8d8d8',\n    pageInactive:'#4f4f4f',\n    menuRightBorder:'#0d2034',\n    cardHoverShadow:'0px 0px 0px 1px rgb(45 74 114)',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class GnosisSafeConnector extends Connector {\n\n  constructor(SafeAppConnector) {\n    super(...arguments);\n    this.safeLoaded = false;\n    this.SafeAppConnector = SafeAppConnector;\n    this.provider = new this.SafeAppConnector();\n    this.checkSafeApp();\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.SafeAppConnector();\n    }\n\n    if (this.provider){\n      await this.provider.activate();\n      return this.provider;\n    }\n  }\n\n  async getAccount() {\n    if (this.provider){\n      return await this.provider.getAccount();\n    }\n  }\n\n  async getProvider(){\n    if (this.provider){\n      return await this.provider.getProvider();\n    }\n  }\n\n  async getSafeInfo() {\n    if (this.provider){\n      return await this.provider.getSafeInfo();\n    }\n  }\n\n  async getChainId() {\n    if (this.provider){\n      return await this.provider.getChainId();\n    }\n  }\n\n  async checkSafeApp() {\n    if (this.provider){\n      const isSafeApp = await this.provider.isSafeApp();\n      this.safeLoaded = true;\n      return isSafeApp;\n    }\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.deactivate();\n      return this.provider;\n    }\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      this.walletLink.disconnect();\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    if (this.provider){\n      await this.provider.enable();\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport GnosisSafeConnector from './connectors/GnosisSafeConnector';\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura).forEach((networkId,index) => {\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: globalConfigs.network.enabledNetworks\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: globalConfigs.network.providers.infura[defaultNetwork]+env.REACT_APP_INFURA_KEY\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nconst gnosis = new GnosisSafeConnector(SafeAppConnector);\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  gnosis,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              You should be on the {this.props.network.required.name} Ethereum\n              network. You are currently connected to the{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                {this.props.network.current.name}\n              </Text.span>{\" \"}\n              Network - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isCorrectNetwork === false && this.props.web3\n          ?\n            <WrongNetworkBanner\n              network={this.props.network}\n            />\n          :\n            null\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isGnosisSafe = !!connectors.gnosis.provider.safe;\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  // Handle Gnosis Safe connector\n  if (isGnosisSafe){\n    const injectedIndex = basicConnectorsName.indexOf('Injected');\n    // Remove Injected\n    basicConnectorsName.splice(injectedIndex,1);\n    // Remove Gnosis\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    basicConnectorsName.splice(gnosisIndex,1);\n    // Insert Gnosis in first place\n    basicConnectorsName.unshift('gnosis');\n  } else {\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    // Remove Gnosis\n    basicConnectorsName.splice(gnosisIndex,1);\n  }\n\n  const buttons = basicConnectorsName.map( (connectorName,index) => {\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageProps={{width:'auto',height:'42px'}}\n                  imageSrc={`images/connectors/${walletIcon}`}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageProps={{width:'auto',height:'42px'}}\n              imageSrc={`images/connectors/browser-wallet.png`}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/connectors/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      this.props.setConnector('Infura',null);\n      await this.props.context.setFirstValidConnector(['Infura']);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport { IFrameEthereumProvider } from '@ledgerhq/iframe-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\n\nrequire('dotenv').config();\nconst INFURA_KEY = process.env[\"REACT_APP_INFURA_KEY\"];\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkNetwork();\n\n    // detect Network account change\n    if (window.ethereum){\n      window.ethereum.on('networkChanged', async (networkId) => {\n        await this.props.clearCachedData(() => {\n          this.checkNetwork();\n        });\n      });\n    }\n\n    window.initWeb3 = this.initWeb3;\n  }\n\n  componentDidMount = async () => {\n    this.initSimpleID();\n\n    // this.functionsUtil.customLog('RimbleWeb3 componentDidMount');\n    this.initWeb3();\n\n    this.connectGnosisSafe();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  connectGnosisSafe = () => {\n    const gnosisSafeLoaded = this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      const walletProvider = this.functionsUtil.getWalletProvider();\n      const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n      // console.log('isGnosisSafe',this.props.connectors.gnosis.provider.safe,isGnosisSafe);\n      if (isGnosisSafe){\n        this.props.setConnector('gnosis','gnosis');\n      } else if (walletProvider === 'gnosis') {\n        this.props.setConnector('Infura',null);\n      }\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // this.functionsUtil.customLog('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    const gnosisSafeLoaded = !this.state.gnosisSafeLoaded && this.props.connectors.gnosis.safeLoaded;\n    // console.log('gnosisSafeLoaded',this.state.gnosisSafeLoaded,this.props.connectors.gnosis.safeLoaded,gnosisSafeLoaded);\n    if (gnosisSafeLoaded){\n      this.setState({\n        gnosisSafeLoaded:true\n      },() => {\n        this.connectGnosisSafe();\n      });\n    }\n\n    if (prevProps.connectorName !== this.props.connectorName && this.props.connectorName){\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect') {\n        this.initWeb3();\n      }\n    } else if ( (this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      this.initWeb3();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    if (customAddressChanged){\n      this.initAccount();\n    }\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    const availableStrategiesChanged = prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies));\n\n    // Reset tokenDecimals if token is changed\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    if (tokenChanged || availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n    // console.log('networkChanged',JSON.stringify(prevState.network),JSON.stringify(this.state.network),networkChanged);\n    if (networkChanged){\n      this.setState({\n        contracts:[],\n        contractsInitialized:false\n      }, () => {\n        this.initWeb3();\n        if (typeof this.props.setNetwork === 'function'){\n          this.props.setNetwork(this.state.network);\n        }\n      });\n    }\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    const metamaskProvider = await detectEthereumProvider();\n    if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n      window.ethereum = metamaskProvider;\n    }\n\n    const context = this.props.context;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (!networkId){\n      return false;\n    }\n\n    // console.log('initWeb3',this.state.network.current.id,this.state.network.required.id,networkId);\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(globalConfigs.network.providers.infura[networkId]+INFURA_KEY));\n\n    let web3 = context.library;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorNameChanged,context.connectorName,connectorName,setConnectorName);\n\n    if (connectorName !== 'ledgerLive'){\n      if (!context.active || connectorNameChanged) {\n        // Select preferred web3 provider\n        if (connectorName && connectorNameChanged){\n\n          if (connectorName === 'gnosis' && !this.state.gnosisSafeLoaded){\n            return false;\n          }\n\n          // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n          setConnectorName = connectorName;\n          await context.setConnector(connectorName);\n          // await context.setFirstValidConnector([connectorName, 'Infura']);\n          return web3;\n        }\n      }\n    }\n\n    let web3Host = null;\n    let web3Provider = null;\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = globalConfigs.network.providers.infura[networkId]+INFURA_KEY;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = globalConfigs.network.providers.infura[networkId]+INFURA_KEY;\n        forceCallback = true;\n      }\n    }\n\n    // Ledger Live\n    if (connectorName === 'ledgerLive'){\n      web3Provider = new IFrameEthereumProvider();\n    }\n\n    // Injected web3 provider\n    if (web3Provider){\n      web3 = new Web3(web3Provider);\n    // Infura\n    } else if (web3Host) {\n      web3 = new Web3(new Web3.providers.HttpProvider(web3Host));\n      if (connectorName !== 'Infura'){\n        this.props.setConnector('Infura',null);\n      }\n    }\n\n    const web3Callback = async () => {\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // After setting the web3 provider, check network\n      try {\n        await this.checkNetwork();\n        if (this.state.network.isCorrectNetwork){\n\n          if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          }\n\n          if (context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n\n            await this.initAccount();\n            // await this.setState({\n            //   accountInizialized: true,\n            //   account: this.props.customAddress\n            // });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(networkId) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      if (this.state.biconomy === null){\n        const biconomyWeb3Provider = web3Provider ? web3Provider : web3Host;\n\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || this.state.biconomy === biconomy){\n              return false;\n            }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              permitClient,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, web3Callback);\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            // console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                web3Infura,\n                biconomy:false\n              }, web3Callback);\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            web3Infura,\n            biconomy:false\n          }, web3Callback);\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3,\n          web3Infura,\n        }, web3Callback);\n      } else if (context.account || forceCallback){\n        web3Callback();\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`Init contract: ${name}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`creating contract ${name} - addr: ${address}`);\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : this.state.web3;\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      this.setState(state => ({\n        ...state,\n        contracts: [...state.contracts, {name, contract}]\n      }));\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      });\n\n      // After account is complete, get the balance\n      this.getAccountBalance();\n\n      return false;\n    }\n\n    try {\n      if (!account){\n        const wallets = await Promise.race([\n            this.state.web3.eth.getAccounts(),\n            new Promise((resolve) => setTimeout(resolve, 300))\n        ]);\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account || this.state.account === account){\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n\n      // Request account access if needed\n      if (account && walletProvider !== 'Infura'){\n\n        if (walletProvider === 'Infura'){\n          this.setState({\n            accountInizialized: true,\n            account:this.props.customAddress\n          });\n          return false;\n        }\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      } else {\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // this.functionsUtil.customLog(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    const contracts = this.functionsUtil.getGlobalConfig(['contracts']);\n    await this.functionsUtil.asyncForEach(Object.keys(contracts),async (contractName) => {\n      const contractInfo = contracts[contractName];\n      if (contractInfo.address !== null && contractInfo.abi !== null){\n        this.functionsUtil.customLog('initializeContracts, init contract', contractName, contractInfo.address);\n        await this.initContract(contractName, contractInfo.address, contractInfo.abi);\n      }\n    });\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    await this.functionsUtil.asyncForEach(Object.keys(govTokens),async (token) => {\n      const govTokenConfig = govTokens[token];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      // Initialize govToken contracts\n      let foundGovTokenContract = this.state.contracts.find(c => c.name === token);\n      if (!foundGovTokenContract) {\n        this.functionsUtil.customLog('initializeContracts, init contract', token, govTokenConfig.address);\n        await this.initContract(token, govTokenConfig.address, govTokenConfig.abi);\n      }\n    });\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n        \n        const availableTokens = this.props.availableStrategies[strategy];\n\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          let foundTokenContract = this.state.contracts.find(c => c.name === token);\n          if (!foundTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            await this.initContract(token, tokenConfig.address, tokenConfig.abi);\n          }\n\n          // Initialize idleTokens contracts\n          let foundIdleTokenContract = this.state.contracts.find(c => c.name === tokenConfig.idle.token);\n          if (!foundIdleTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            await this.initContract(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi);\n          }\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n            if (!foundProtocolContract) {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              await this.initContract(p.token, p.address, p.abi);\n            }\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              await this.initContract(oldContract.name, oldContract.address, oldContract.abi);\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n                if (!foundProtocolContract) {\n                  this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                  await this.initContract(p.token, p.address, p.abi);\n                }\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              await this.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n            }\n          }\n        })\n      });\n    }\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTranches),async (protocol) => {\n      const tokens = this.props.availableTranches[protocol];\n      await this.functionsUtil.asyncForEach(Object.keys(tokens),async (token) => {\n        const tokenConfig = tokens[token];\n        await Promise.all([\n          this.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi),\n          this.initContract(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi),\n          this.initContract(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi),\n          this.initContract(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi),\n          this.initContract(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi),\n          this.initContract(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi)\n        ]);\n      });\n    });\n\n    return this.setState({\n      contractsInitialized:true\n    });\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n\n    const networkId =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.requiredNetwork !== \"undefined\"\n        ? this.props.config.requiredNetwork\n        : globalConfigs.network.requiredNetwork;\n\n    let networkName = globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId] : 'unknown';\n\n    let requiredNetwork = {\n      name: networkName,\n      id: networkId\n    };\n\n    let network = Object.assign({},this.state.network);\n    network.required = requiredNetwork;\n\n    this.setState({ network });\n  }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        network.isCorrectNetwork = globalConfigs.network.enabledNetworks.includes(networkId);\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  getNetworkName = async () => {\n    try {\n      return this.state.web3.eth.net.getNetworkType((error, networkName) => {\n        let current = { ...this.state.network.current };\n        current.name = networkName;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network Name: \", error);\n    }\n  }\n\n  checkNetwork = async () => {\n    this.getRequiredNetwork();\n\n    await Promise.all([\n      this.getNetworkId(),\n      this.getNetworkName()\n    ]);\n\n    let network = Object.assign({},this.state.network);\n    network.isCorrectNetwork = !this.state.network.current.id || globalConfigs.network.enabledNetworks.includes(this.state.network.current.id);\n    // console.log('checkNetwork',this.state.network.current.id,network.isCorrectNetwork);\n\n    this.setState({ network });\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas/*, common*/ } : { from: account, gas/*, common*/ })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n\n    if (!this.state.modals.data.connectionError){\n      return false;\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n    \n    if (this.state.modals.data.connectionError !== error){\n      // console.log('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n      modals.data.connectionError = error;\n      this.setState({ modals });\n    }\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    transactions: {},\n    CrispClient: null,\n    permitClient:null,\n    tokenDecimals:null,\n    accountBalance: null,\n    web3Subscription: null,\n    accountValidated: null,\n    gnosisSafeLoaded:false,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    accountInizialized:false,\n    erc20ForwarderClient:null,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                position={'relative'}\n                src={'images/logo.svg'}\n                height={['35px','48px']}\n              />\n            </RouterLink>\n          </Flex>\n            <Flex\n              width={[0.5,8/12]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={\"flex-end\"}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    mr={4}\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile &&\n                  <>\n                    <Link\n                      mr={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n              }\n            </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport fToken from '../abis/fuse/fToken.json';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport crToken from '../abis/cream/crToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk:{\n      \n    }\n  },\n  1337:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token:'aDAIv2',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            name:'aavev2',\n            token:'aUSDCv2',\n            address:'0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            name:'aavev2',\n            enabled:true,\n            token:'aUSDTv2',\n            address:'0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'aavev2',\n            enabled:true,\n            abi:aToken,\n            address:'0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token:'aSUSDv2',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aTUSDv2',\n            address:'0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            token:'cWBTC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:false,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'aWBTC',\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aWBTCv2',\n            address:'0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      RAI:{\n        deposit:{},\n        token:'RAI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:[],\n        govTokensDisabled:false,\n        color:'hsl(169,42%,37%)',\n        icon:'images/tokens/RAI.png',\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleRAIYield',\n          address:'0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crRAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fRAI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n      FEI:{\n        deposit:{},\n        token:'FEI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:[],\n        govTokensDisabled:false,\n        color:'hsl(158, 64%, 37%)',\n        address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleFEIYield',\n          address:'0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crFEI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fFEI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          }\n        ]\n      },\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  },\n  1:{ // Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token:'aDAIv2',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            name:'aavev2',\n            token:'aUSDCv2',\n            address:'0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            name:'aavev2',\n            enabled:true,\n            token:'aUSDTv2',\n            address:'0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'aavev2',\n            enabled:true,\n            abi:aToken,\n            address:'0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token:'aSUSDv2',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aTUSDv2',\n            address:'0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            token:'cWBTC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:false,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'aWBTC',\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aWBTCv2',\n            address:'0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      RAI:{\n        deposit:{},\n        token:'RAI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:[],\n        govTokensDisabled:false,\n        color:'hsl(169,42%,37%)',\n        icon:'images/tokens/RAI.png',\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleRAIYield',\n          address:'0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crRAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fRAI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            token:'aRAI',\n            enabled:true,\n            name:'aavev2',\n            functions:{\n            },\n            address:'0xc9bc48c72154ef3e5425641a3c747242112a46af',\n          }\n        ]\n      },\n      FEI:{\n        deposit:{},\n        token:'FEI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:['beta'],\n        govTokensDisabled:false,\n        color:'hsl(158, 64%, 37%)',\n        address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleFEIYield',\n          address:'0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crFEI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fFEI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          }\n        ]\n      },\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","import ERC20 from '../contracts/ERC20.json';\nimport IdleCDO from '../contracts/IdleCDO.json';\nimport IdleStrategy from '../contracts/IdleStrategy.json';\nimport IdleCDOTrancheRewards from '../contracts/IdleCDOTrancheRewards.json';\nconst availableTranches = {\n  idle:{\n    DAI:{\n      token:'DAI',\n      decimals:18,\n      protocol:'idle',\n      blockNumber:13054628,\n      address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_idleDAIYield',\n        address:'0xd0DbcD556cA22d3f3c142e9a3220053FD7a247BC'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_idleDAIYield'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_AA',\n          address:'0x9c3bC87693c65E740d8B2d5F0820E04A61D8375B'\n        },\n        label:'idleDAI AA',\n        blockNumber:13054628,\n        name:'IdleCDO_AA_idleDAIYield',\n        token:'IdleCDO_AA_idleDAIYield',\n        address:'0xE9ada97bDB86d827ecbaACCa63eBcD8201D8b12E'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_BB',\n          address:'0x4473bc90118b18be890af42d793b5252c4dc382d'\n        },\n        label:'idleDAI BB',\n        blockNumber:13054628,\n        name:'IdleCDO_BB_idleDAIYield',\n        token:'IdleCDO_BB_idleDAIYield',\n        address:'0x730348a54bA58F64295154F0662A08Cbde1225c2'\n      }\n    }\n  }\n  /*\n  yearn:{\n  \tDAI:{\n  \t  junior:{\n  \t    address:'0x000000000000000000000000000000000000'\n  \t  },\n  \t  senior:{\n  \t    address:'0x000000000000000000000000000000000000'\n  \t  }\n  \t}\n  }\n  */\n};\nexport default availableTranches;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from 'jquery';\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from './connectors';\nimport Web3Provider from 'web3-react';\nimport { Web3Consumer } from 'web3-react';\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from '../configs/availableTokens';\nimport availableTranches from '../configs/availableTranches';\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from 'rimble-ui';\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import('../Dashboard/Dashboard'));\nconst Governance = React.lazy(() => import('../Governance/Governance'));\n\nclass App extends Component {\n  state = {\n    network:null,\n    cachedData:{},\n    buyToken: null,\n    currentEnv:null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode:'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme:theme,\n    currentSection:null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  closeToastMessage = (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps:null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps:props\n    });\n  }\n\n  processCustomParam = (props,prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = async (callback=null) => {\n\n    const cachedData = {...this.state.cachedData};\n    Object.keys(cachedData).forEach( key => {\n      const data = cachedData[key];\n      if (data.expirationDate !== null){\n        delete cachedData[key];\n      }\n    });\n\n\n    let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n    Object.keys(storedCachedData).forEach( key => {\n      const storedData = storedCachedData[key];\n      if (storedData.expirationDate !== null){\n        delete storedCachedData[key];\n      }\n    });\n\n    this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n\n    await this.setState({\n      cachedData\n    },() => {\n      if (typeof callback === 'function'){\n        callback();\n      }\n    });\n    return true;\n  }\n\n  setCachedData = (key,data,TTL=null,useLocalStorage=false) => {\n\n    key = key.toLowerCase();\n    const cachedKeyFound = this.state.cachedData[key];\n    const currentTime = parseInt(Date.now()/1000);\n\n    const update_key = !cachedKeyFound || ( (cachedKeyFound.expirationDate !== null && cachedKeyFound.expirationDate>=currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data));\n\n    let output = false;\n\n    if (update_key){\n      const expirationDate = TTL ? currentTime+(TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage){\n        let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n        if (!storedCachedData){\n          storedCachedData = {};\n        }\n\n        // const storedData = typeof data === 'object' ? JSON.stringify(data) : data;\n\n        storedCachedData = {\n          ...storedCachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        };\n        // console.log('STORED CACHE - INSERT KEY',key,data);\n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        }\n      }),() => {\n        window.cachedData = this.state.cachedData;\n      });\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)){\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress){\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw:false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({...state, selectedTab: tabIndex}));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const requiredNetwork = this.state.network && this.state.network.isCorrectNetwork ? (this.state.network.current.id || this.state.network.required.id) : globalConfigs.network.requiredNetwork;\n\n    // console.log('loadAvailableTokens',this.state.network,requiredNetwork,availableTokens);\n\n    // Load available strategies\n    Object.keys(availableTokens[requiredNetwork]).forEach((strategy) => {\n      availableStrategies[strategy] = Object.keys(availableTokens[requiredNetwork][strategy]).reduce( (enabledTokens,token) => {\n        const tokenConfig = availableTokens[requiredNetwork][strategy][token];\n        const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n        if (tokenConfig.enabled && envEnabled){\n          enabledTokens[token] = tokenConfig;\n        }\n        return enabledTokens;\n      },{});\n    });\n\n    newState.availableStrategies = availableStrategies;\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && availableStrategies[selectedStrategy]){\n      newState.availableTokens = availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]){\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy,selectedToken){\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    const newState = {\n      tokenConfig:!selectedToken ? null : this.state.tokenConfig,\n      availableTokens:!selectedToken ? null : this.state.availableTokens,\n      selectedToken:!selectedToken ? selectedToken :this.state.selectedToken,\n      selectedStrategy:!selectedStrategy ? selectedStrategy :this.state.selectedStrategy,\n    };\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken) {\n      if ( this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase()) ){\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',newState);\n\n    await this.setState(newState,callback);\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      },callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      },callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())){\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState,callback);\n    } else if(!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig:null\n      },callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    window.clearCachedData = this.clearCachedData;\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction){\n      window.console.error = () => {};\n      window.console.warn = () => {};\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage){\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version',false);\n      if (version !== globalConfigs.version){\n        this.functionsUtil.clearStoredData(['walletProvider','connectorName','themeMode']);\n        this.functionsUtil.setLocalStorage('version',globalConfigs.version);\n      }\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode',false);\n    if (themeMode){\n      this.setThemeMode(themeMode);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i=0;i<iFrames.length;i++){\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w){\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCustomAddress();\n    this.loadCurrentEnvironment();\n  }\n\n  loadCurrentEnvironment(){\n    const isLive = this.functionsUtil.checkUrlOrigin();\n    const currentEnv = isLive ? 'live' : 'beta';\n    this.setState({\n      currentEnv\n    },() => {\n      this.loadAvailableTokens();\n    })\n  }\n\n  loadCustomAddress(){\n    if (!this.state.customAddress){\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom'){\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress){\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged){\n      if (this.state.currentSection === 'landing'){\n        this.setThemeMode('light',false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode',false) || this.functionsUtil.getGlobalConfig(['dashboard','theme','mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n\n    if (tokenChanged || strategyChanged || networkChanged){\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    // if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n    //   window.parent.closeIframe(window.self);\n    // }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage){\n      let connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      let walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      // Check Ledger Live\n      const isLedgerLive = window.location.href.includes(\"ledger-live=1\");\n      if (isLedgerLive){\n        connectorName = 'ledgerLive';\n        walletProvider = 'ledger';\n      }\n      // console.log('isLedgerLive',isLedgerLive,connectorName,walletProvider);\n\n      this.setConnector(connectorName,walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width:this.state.width,\n      height:this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged){\n      if (widthChanged){\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged){\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  // Optional parameters to pass into RimbleWeb3\n  config = globalConfigs.network;\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e){\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken:null,\n      buyModalOpened:false\n    });\n  }\n\n  openBuyModal(e,buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened:true\n    });\n  }\n\n  async logout(){\n    // Reset Custom Address\n    this.setState({\n      customAddress:null\n    });\n    // Clear cached data\n    this.clearCachedData(()=>{\n      // Reset Localstorage\n      this.functionsUtil.clearStoredData(['version','themeMode','lastLogin','cachedData']);\n    });\n  }\n\n  setNetwork(network){\n    this.setState({\n      network\n    });\n  }\n\n  setConnector(connectorName,walletProvider){\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider){\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    // console.log('setConnector - BEFORE',connectorInfo,connectorName,walletProvider);\n\n    if ( (connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if ( connectorName === 'Injected' ){\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider){\n        case 'Metamask':\n          if (!hasMetamask && hasDapper){\n            walletProvider = 'Dapper';\n          }\n        break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask){\n            walletProvider = 'Metamask';\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    // console.log('setConnector - AFTER',connectorName,walletProvider);\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    },() => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode,store=true){\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard','theme','darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled){\n      themeMode = 'light';\n    }\n\n    switch (themeMode){\n      default:\n      case 'light':\n        selectedTheme = theme;\n      break;\n      case 'dark':\n        selectedTheme = themeDark;\n      break;\n    }\n\n    if (store){\n      this.functionsUtil.setLocalStorage('themeMode',themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection){\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize:4,\n            fontWeight:2\n          }}\n          loaderProps={{\n            mb:3,\n            size:'80px',\n            color:'primary'\n          }}\n          flexProps={{\n            my:3,\n            flexDirection:'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer>\n              {context => {\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    config={this.config}\n                    connectors={connectors}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    availableTranches={availableTranches}\n                    tokenConfig={this.state.tokenConfig}\n                    setNetwork={this.setNetwork.bind(this)}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        accountBalanceLow,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper\n                      }) => {\n                        return (\n                        <Box>\n                          <Switch>\n                            <Route\n                              path=\"/dashboard/:section?/:param1?/:param2?/:param3?\"\n                              render={\n                                (props) => \n                                  <Suspense\n                                    fallback={SuspenseLoader}\n                                  >\n                                    <Dashboard\n                                      {...props}\n                                      web3={web3}\n                                      modals={modals}\n                                      network={network}\n                                      context={context}\n                                      account={account}\n                                      isDashboard={true}\n                                      initWeb3={initWeb3}\n                                      biconomy={biconomy}\n                                      isMobile={isMobile}\n                                      simpleID={simpleID}\n                                      contracts={contracts}\n                                      initAccount={initAccount}\n                                      permitClient={permitClient}\n                                      initSimpleID={initSimpleID}\n                                      initContract={initContract}\n                                      transactions={transactions}\n                                      buyToken={this.state.buyToken}\n                                      logout={this.logout.bind(this)}\n                                      accountBalance={accountBalance}\n                                      themeMode={this.state.themeMode}\n                                      theme={this.state.selectedTheme}\n                                      validateAccount={validateAccount}\n                                      connecting={this.state.connecting}\n                                      cachedData={this.state.cachedData}\n                                      setToken={this.setToken.bind(this)}\n                                      accountValidated={accountValidated}\n                                      getTokenDecimals={getTokenDecimals}\n                                      rejectValidation={rejectValidation}\n                                      tokenConfig={this.state.tokenConfig}\n                                      availableTranches={availableTranches}\n                                      getAccountBalance={getAccountBalance}\n                                      accountBalanceLow={accountBalanceLow}\n                                      accountInizialized={accountInizialized}\n                                      selectedToken={this.state.selectedToken}\n                                      connectorName={this.state.connectorName}\n                                      setStrategy={this.setStrategy.bind(this)}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountBalanceToken={accountBalanceToken}\n                                      initializeContracts={initializeContracts}\n                                      walletProvider={this.state.walletProvider}\n                                      buyModalOpened={this.state.buyModalOpened}\n                                      erc20ForwarderClient={erc20ForwarderClient}\n                                      contractsInitialized={contractsInitialized}\n                                      openBuyModal={this.openBuyModal.bind(this)}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      handleMenuClick={this.selectTab.bind(this)}\n                                      setConnector={this.setConnector.bind(this)}\n                                      setThemeMode={this.setThemeMode.bind(this)}\n                                      availableTokens={this.state.availableTokens}\n                                      closeBuyModal={this.closeBuyModal.bind(this)}\n                                      setCachedData={this.setCachedData.bind(this)}\n                                      selectedStrategy={this.state.selectedStrategy}\n                                      userRejectedValidation={userRejectedValidation}\n                                      clearCachedData={this.clearCachedData.bind(this)}\n                                      setStrategyToken={this.setStrategyToken.bind(this)}\n                                      accountValidationPending={accountValidationPending}\n                                      availableStrategies={this.state.availableStrategies}\n                                      setCurrentSection={this.setCurrentSection.bind(this)}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      contractMethodSendWrapper={contractMethodSendWrapper}\n                                      setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                    />\n                                  </Suspense>\n\n                              }\n                            >\n                            </Route>\n                            {\n                              governanceEnabled && \n                                <Route\n                                  path=\"/governance/:section?/:item_id?\"\n                                  render={\n                                    (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Governance\n                                          {...props}\n                                          web3={web3}\n                                          modals={modals}\n                                          network={network}\n                                          context={context}\n                                          account={account}\n                                          initWeb3={initWeb3}\n                                          biconomy={biconomy}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          isGovernance={true}\n                                          contracts={contracts}\n                                          initAccount={initAccount}\n                                          initSimpleID={initSimpleID}\n                                          initContract={initContract}\n                                          transactions={transactions}\n                                          buyToken={this.state.buyToken}\n                                          logout={this.logout.bind(this)}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          validateAccount={validateAccount}\n                                          connecting={this.state.connecting}\n                                          cachedData={this.state.cachedData}\n                                          setToken={this.setToken.bind(this)}\n                                          accountValidated={accountValidated}\n                                          getTokenDecimals={getTokenDecimals}\n                                          rejectValidation={rejectValidation}\n                                          tokenConfig={this.state.tokenConfig}\n                                          getAccountBalance={getAccountBalance}\n                                          accountBalanceLow={accountBalanceLow}\n                                          accountInizialized={accountInizialized}\n                                          selectedToken={this.state.selectedToken}\n                                          connectorName={this.state.connectorName}\n                                          setStrategy={this.setStrategy.bind(this)}\n                                          userRejectedConnect={userRejectedConnect}\n                                          accountBalanceToken={accountBalanceToken}\n                                          initializeContracts={initializeContracts}\n                                          walletProvider={this.state.walletProvider}\n                                          buyModalOpened={this.state.buyModalOpened}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          rejectAccountConnect={rejectAccountConnect}\n                                          handleMenuClick={this.selectTab.bind(this)}\n                                          setConnector={this.setConnector.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          availableTokens={this.state.availableTokens}\n                                          closeBuyModal={this.closeBuyModal.bind(this)}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          selectedStrategy={this.state.selectedStrategy}\n                                          userRejectedValidation={userRejectedValidation}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          setStrategyToken={this.setStrategyToken.bind(this)}\n                                          accountValidationPending={accountValidationPending}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          contractMethodSendWrapper={contractMethodSendWrapper}\n                                          setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        />\n                                      </Suspense>\n                                  }\n                                >\n                                </Route>\n                            }\n                            <Route>\n                              <Header\n                                modals={modals}\n                                network={network}\n                                context={context}\n                                account={account}\n                                initWeb3={initWeb3}\n                                isMobile={isMobile}\n                                contracts={contracts}\n                                initAccount={initAccount}\n                                initContract={initContract}\n                                buyToken={this.state.buyToken}\n                                accountBalance={accountBalance}\n                                logout={this.logout.bind(this)}\n                                validateAccount={validateAccount}\n                                connecting={this.state.connecting}\n                                accountValidated={accountValidated}\n                                getTokenDecimals={getTokenDecimals}\n                                rejectValidation={rejectValidation}\n                                tokenConfig={this.state.tokenConfig}\n                                getAccountBalance={getAccountBalance}\n                                accountBalanceLow={accountBalanceLow}\n                                selectedToken={this.state.selectedToken}\n                                connectorName={this.state.connectorName}\n                                userRejectedConnect={userRejectedConnect}\n                                accountBalanceToken={accountBalanceToken}\n                                walletProvider={this.state.walletProvider}\n                                buyModalOpened={this.state.buyModalOpened}\n                                contractsInitialized={contractsInitialized}\n                                openBuyModal={this.openBuyModal.bind(this)}\n                                rejectAccountConnect={rejectAccountConnect}\n                                handleMenuClick={this.selectTab.bind(this)}\n                                setConnector={this.setConnector.bind(this)}\n                                availableTokens={this.state.availableTokens}\n                                closeBuyModal={this.closeBuyModal.bind(this)}\n                                userRejectedValidation={userRejectedValidation}\n                                accountValidationPending={accountValidationPending}\n                                connectAndValidateAccount={connectAndValidateAccount}\n                                setToken={ e => { this.setToken(e) } }\n                              />\n\n                              {this.state.route === \"onboarding\" ? (\n                                <Web3Debugger\n                                  web3={web3}\n                                  account={account}\n                                  accountBalance={accountBalance}\n                                  accountBalanceToken={accountBalanceToken}\n                                  accountBalanceLow={accountBalanceLow}\n                                  initAccount={initAccount}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountValidated={accountValidated}\n                                  accountValidationPending={accountValidationPending}\n                                  rejectValidation={rejectValidation}\n                                  userRejectedValidation={userRejectedValidation}\n                                  validateAccount={validateAccount}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  modals={modals}\n                                  network={network}\n                                  transaction={transaction}\n                                />\n                              ) : null}\n\n                              {this.state.route === \"default\" ? (\n                                <Switch>\n                                  <Route exact path=\"/\"\n                                    render={ (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Landing\n                                          {...props}\n                                          web3={web3}\n                                          network={network}\n                                          account={account}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          contracts={contracts}\n                                          initContract={initContract}\n                                          innerWidth={this.state.width}\n                                          logout={this.logout.bind(this)}\n                                          innerHeight={this.state.height}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          cachedData={this.state.cachedData}\n                                          connecting={this.state.connecting}\n                                          selectedTab={this.state.selectedTab}\n                                          tokenConfig={this.state.tokenConfig}\n                                          accountBalanceLow={accountBalanceLow}\n                                          getAccountBalance={getAccountBalance}\n                                          availableTranches={availableTranches}\n                                          customAddress={this.state.customAddress}\n                                          selectedToken={this.state.selectedToken}\n                                          accountBalanceToken={accountBalanceToken}\n                                          closeToastMessage={this.closeToastMessage}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          processCustomParam={this.processCustomParam}\n                                          availableTokens={this.state.availableTokens}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          updateSelectedTab={this.selectTab.bind(this)}\n                                          toastMessageProps={this.state.toastMessageProps}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          setToken={ e => { this.setToken(e) } }\n                                        />\n                                        <CookieConsent\n                                          expires={365}\n                                          buttonText={\"Ok\"}\n                                          location={\"bottom\"}\n                                          acceptOnScroll={true}\n                                          cookieName={\"cookieAccepted\"}\n                                          acceptOnScrollPercentage={5}\n                                          style={{background: \"rgba(255,255,255,0.95)\",zIndex:'9999999'}}\n                                          buttonStyle={{display: isMobile ? \"block\" : \"none\", backgroundColor:'#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\"}}\n                                        >\n                                          <Flex flexDirection={'row'} alignItems={['flex-start','center']} justifyContent={'flex-start'} maxHeight={['150px','initial']} style={ isMobile ? {overflowY:'scroll'} : null }>\n                                            <Image display={['none','block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                            <Text pl={[0,3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                              This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                              You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                            </Text>\n                                          </Flex>\n                                        </CookieConsent>\n                                      </Suspense>\n                                    }\n                                  ></Route>\n                                  <Route exact path=\"/terms-of-service\">\n                                    <Tos />\n                                  </Route>\n                                  <Route>\n                                    <PageNotFound />\n                                  </Route>\n                                </Switch>\n                              ) : null}\n                            </Route>\n                          </Switch>\n                          <TransactionToastUtil\n                            transactions={transactions}\n                            themeMode={this.state.themeMode}\n                          />\n                        </Box>\n                      )}}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3,\n          ...this.props.cardProps\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = this.props.availableActions || {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = this.props.transactionsList || await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // console.log('TransactionsList',etherscanTxs);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens && this.props.availableTokens[selectedToken] ? this.props.availableTokens[selectedToken] : this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]);\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.action = action;\n      tx.amount = amount;\n      tx.momentDate = momentDate;\n      tx.status = tx.status ? tx.status : 'Completed';\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(this.functionsUtil.getEtherscanTransactionUrl(txHash)) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.useMetaTx !== false && this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            {...this.props}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          {...this.props}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens[token];\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.notion.so/idlelabs/Idle-Finance-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport { Text, Icon, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText'\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = this.functionsUtil.BNify(customValue).toString();\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label || fieldProps.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue){\n      return null;\n    }\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : null;\n  }\n}\n\nexport default CustomField;","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n"],"sourceRoot":""}