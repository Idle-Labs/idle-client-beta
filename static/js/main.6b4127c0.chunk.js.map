{"version":3,"sources":["SmartNumber/SmartNumber.js","RoundButton/RoundButton.js","PageNotFound/PageNotFound.module.scss","Breadcrumb/Breadcrumb.js","utilities/components/ShortHash.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","RoundIconButton/RoundIconButton.js","CustomTooltip/CustomTooltip.js","AllocationChart/AllocationChart.js","CustomTooltip/CustomTooltipRow.js","PortfolioEquity/PortfolioEquity.js","CardIconButton/CardIconButton.js","Title/Title.js","TxProgressBar/TxProgressBar.js","GenericSelector/GenericSelector.js","theme.js","TwitterShareButton/TwitterShareButton.js","utilities/components/ShareModal.js","CustomList/CustomList.js","ActiveCoverages/ActiveCoverages.js","utilities/components/ModalCard.module.scss","TwitterShareButton/TwitterShareButton.module.scss","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","GenericChart/GenericChart.js","AssetSelector/AssetSelector.js","IconBox/IconBox.js","TrancheField/TrancheField.js","utilities/components/Header.module.scss","Tos/Tos.module.scss","TransactionField/TransactionField.js","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","ExecuteTransaction/ExecuteTransaction.js","DashboardCard/DashboardCard.module.scss","TableRow/TableRow.js","TableHeader/TableHeader.js","FastBalanceSelector/FastBalanceSelector.js","DashboardCard/DashboardCard.js","Staking/Staking.js","SendTxWithBalance/SendTxWithBalance.js","TrancheDetails/TrancheDetails.js","TranchePage/TranchePage.js","TranchesList/TranchesList.js","GenericPieChart/GenericPieChart.js","TotalBalanceCounter/TotalBalanceCounter.js","TotalEarningsCounter/TotalEarningsCounter.js","PortfolioEquityTranches/PortfolioEquityTranches.js","Tranches/Tranches.js","TokenSwap/TokenSwap.js","LpStaking/LpStaking.js","IdleStaking/IdleStaking.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","PortfolioDonut/PortfolioDonut.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","DeployB2BVesting/DeployB2BVesting.js","configs/globalConfigs.js","utilities/components/BuyModal.js","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/GnosisSafeConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","configs/availableTranches.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","Migrate/Migrate.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","AssetsList/AssetsList.js","Footer/Footer.module.scss","colors.js","utilities/components/ModalCard.js","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","ConnectBox/ConnectBox.js","Footer/Footer.js","TableCellHeader/TableCellHeader.js","ChartCustomTooltip/ChartCustomTooltip.js","FlexLoader/FlexLoader.js","CustomField/CustomField.js","AssetField/AssetField.js","ImageButton/ImageButton.js","ExtLink/ExtLink.js"],"names":["SmartNumber","functionsUtil","this","setProps","props","FunctionsUtil","loadUtils","_this2","formattedNumber","number","isNaN","type","formatMoney","precision","abbreviateNumber","decimals","maxPrecision","minPrecision","flexProps","width","alignItems","flexDirection","justifyContent","Object","keys","length","forEach","p","showUnit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","a","createElement","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","unit","unitProps","Component","RoundButton","buttonProps","assign","fontSize","fontWeight","height","boxShadow","borderRadius","mainColor","react__WEBPACK_IMPORTED_MODULE_6___default","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","onClick","handleClick","children","module","exports","headerContainer","headerBgFiller","bgContainer","list","textContainer","Breadcrumb","_this","showPathMobile","react__WEBPACK_IMPORTED_MODULE_5___default","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","id","_RoundIconButton_RoundIconButton__WEBPACK_IMPORTED_MODULE_7__","border","iconSize","iconName","text","ml","color","hoverColor","isMobile","path","map","index","link","pathLink","Link","Text","pl","style","maxWidth","overflow","whiteSpace","textOverflow","borderLeft","concat","theme","colors","divider","key","e","goToSection","ShortHash","state","loadData","prevProps","prevState","resolveAddress","shortenHash","hash","getENSName","ensName","setState","loader","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","size","display","LoadingSpinner","react_default","index_es","className","styles","mx","ButtonLoader","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","RoundIconButton","disabled","minWidth","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_7__","name","CustomTooltip","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","point","cardProps","py","px","left","data","itemPos","xFormatted","mb","textAlign","AllocationChart","chartData","chartProps","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","componentUnmounted","selectedToken","setStateSafe","newState","callback","getTokenAllocation","tokenConfig","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","_this3","onMouseLeave","tooltipFormat","v","sliceLabel","value","radialLabel","tooltip","container","inline","background","cardBg","labels","fontFamily","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","margin","top","right","bottom","protocols","protocolInfo","i","protocolName","protocolAddr","address","toLowerCase","protocolAllocationPercParsed","parseFloat","times","toFixed","push","globalConfigs","stats","hsl","join","label","capitalize","protocolIcon","icon","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","position","zIndex","src","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","showLoader","CustomTooltipRow","pr","flexBasis","flex","mr","backgroundColor","textTransform","dangerouslySetInnerHTML","__html","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","JSON","stringify","enabledTokens","componentDidMount","mobileChanged","themeModeChanged","themeMode","availableTokens","getEtherscanTxs","account","etherscanTxs","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee3","filteredTxs","amountLent","wrap","_context3","prev","next","values","filter","tx","token","BNify","status","Math","min","parseInt","timeStamp","tokenAmount","action","plus","minus","lt","balance","tokenPrice","idleTokens","stop","_x3","apply","arguments","currentDate","strToMoment","Date","clone","subtract","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","getTime","tokensData","isRisk","selectedStrategy","_ref2","_callee4","_context4","getTokenApiData","sent","_x4","idleTokenBalance","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","pop","filteredTokenData","timestamp","tokenDecimals","filteredBalances","lastFilteredTx","idlePrice","fixTokenDecimals","newBalance","lastTx","lastTxBalance","gt","tokenUsdConversionRate","conversionRateField","getGlobalConfig","chartToken","conversionRate","momentDate","isSameOrAfter","isSameOrBefore","formattedDate","format","max","frequencySeconds","_loop","aggregatedBalances","date","x","y","balances","itemIndex","item","floor","toUpperCase","yFormatDecimals","gridYStep","gridYValues","gridYValue","daysCount","daysFrequency","ceil","xScale","yScale","stacked","xFormat","yFormat","axisBottom","legend","tickSize","tickPadding","orient","legendOffset","legendPosition","tickValues","pointSize","useMesh","axisLeft","tickRotation","pointLabel","enableArea","enableSlices","enableGridY","curve","enableGridX","pointBorderWidth","pointLabelYOffset","areaBaselineValue","pointColor","areaOpacity","axis","ticks","fill","grid","line","stroke","lineChartStroke","strokeDasharray","sliceTooltip","slideData","slice","points","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","serieId","yFormatted","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","Line","parentId","parentIdHeight","CardIconButton","isInteractive","isActive","isDisabled","my","image","align","imageProps","useIconOnly","iconColor","iconProps","iconBgColor","transactions","actionBg","redeem","textProps","Title","lineHeight","HeadingComponent","component","Heading","h1","TxProgressBar","txCount","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","_callee","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","_context","initProgressBar","getTransaction","transaction","Promise","_ref3","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","web3","eth","err","_x","_x2","abrupt","getBlockTime","pt","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","customLog","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","blockNumber","div","toString","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txHash","txProgressBarData","_ref8","_ref9","_context7","localStorage","getItem","parse","all","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","window","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","substr","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","loaderProps","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","mt","target","rel","href","getEtherscanTransactionUrl","cancelTransaction","cancelTextColor","cancelTextHoverColor","GenericSelector","loadComponents","selectedTokenChanged","optionsChanged","options","defaultValueChanged","defaultValue","componentsChanged","CustomOptionValue","CustomValueContainer","ControlComponent","innerProps","cursor","menuIsOpen","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","CustomIndicatorSeparator","CustomMenu","selectProps","CustomInputContainer","isSearchable","fontSizes","copyColor","fontWeights","searchInput","dark","searchInputHidden","CustomOption","selectedValue","o","indexOf","genericSelector","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","onChange","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","letterSpacings","lineHeights","solid","title","copy","serif","counter","space","radii","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","primary","blue","base","gradient-bg","primary-light","light","primary-dark","bgBlue","dark-blue","skyBlue","lightBlue","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","alert","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","deposit","migrate","menuBg","menuHover","flashColor","menuRightBorder","cardHoverShadow","cardBgHover","cardBorder","pageActive","pageInactive","send","swap","boost","swapout","curvein","receive","default","curveout","withdraw","curvedepositin","curvedepositout","completed","pending","failed","blacks","whites","zIndices","messageStyle","shade","tint","success","green","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","TwitterShareButton","share","sendGoogleAnalyticsEvent","eventCategory","eventAction","eventLabel","parent","w","innerWidth","open","tweet","contrastColor","twitterIcon","ShareModal","closeModal","regenerator_default","getGlobalConfigs","analytics","google","events","enabled","escape","customText","isOpen","ModalCard","closeFunc","confettiEnabled","react_confetti_default","run","recycle","innerHeight","Header","Body","src_TwitterShareButton_TwitterShareButton","React","CustomList","TableHeader","cols","rows","row","rowIndex","TableRow","fieldComponent","CustomField","rowId","cardId","Base","loaded","activeCoverages","loadCoverages","getActiveCoverages","coverages","c","includes","collateral","statusColors","statusIcon","statusColor","statusIconProps","portfolioCoverage","titleProps","src_CustomList_CustomList","fileClaimUrl","openWindow","fields","mobile","parentProps","funcProps","actionLabel","actionDisabled","actionUrl","bg","radioBtn","button","GenericChart","addEventListener","handleWindowSizeChange","bind","removeEventListener","chartContainer","document","getElementById","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","minHeight","undefined","loaderText","AssetSelector","find","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","fieldInfo","showCustomField","cachedData","setCachedData","showBalance","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","changeToken","IconBox","isVisible","TrancheField","ready","loadField","fieldName","fieldProps","addGovTokens","output","_args","protocol","t0","loadTrancheField","tranche","trancheConfig","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","tokenChanged","accountChanged","trancheChanged","protocolChanged","fieldChanged","contractInitialized","contractsInitialized","transactionsChanged","oldState","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","buttonLabel","_CustomField_CustomField__WEBPACK_IMPORTED_MODULE_10__","govTokenConfig","govTokenIndex","tooltipProps","message","getGovTokensDistributionSpeed","distributionFrequency","formattedValue","_isBigNumber","gradientButton","empty","select","selectDark","input","TransactionField","hashChanged","bgColor","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_11__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","amount","tokenSymbol","iconSrc","CustomComponent","customValue","getArrayPath","Image","Icon","IdleGovToken","classCallCheck","tokenName","getBalance","asyncToGenerator","getTokenBalance","claimRewards","callbackReceipt","contractMethodSendWrapper","getPriorVotes","priorVotes","_args3","genericContractCall","refreshIdleSpeed","getUnclaimedTokens","getAPR","_ref6","IDLETokenConfig","cachedDataKey","APR","_ref7","idleDistribution","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","idle","getDistribution","slicedToArray","getUniswapConversionRate","lte","convertTokenBalance","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","_ref10","blocksPerYear","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","totalSpeed","_args10","_context10","availableStrategies","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","disabledTokens","getUserPoolShare","_x7","fixDistributionSpeed","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","env","process","profiler","idleGovToken","trimEth","toBN","n","utils","BN","toEth","wei","fromWei","toWei","htmlDecode","innerHTML","childNodes","nodeValue","BNify_obj","s","BigNumber","String","_len","Array","_key","logs","messagesEnabled","moment","customLogError","_console","_len2","_key2","errorsEnabled","console","getContractByName","contractName","contract","contracts","normalizeSimpleIDNotification","replace","str","replaceArrayProps","arr1","arr2","stripHtml","html","tmp","textContent","innerText","scrollTo","to","duration","start","scrollY","change","currentTime","easeInOutQuad","t","b","animateScroll","val","getQueryStringParameterByName","url","location","results","RegExp","exec","decodeURIComponent","getTxAction","depositProxyContractInfo","migrationContractAddr","migration","migrationContract","migrationContractOldAddrs","oldAddresses","batchMigration","batchMigrationContractAddr","isMigrationTx","contractAddress","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","shortHash","txStart","txEnd","networkId","ensConfig","TTL","provider","ens","addressCheck","network","current","supportedNetworks","checkAddress","currentProvider","ENS","ensAddress","getEnsAddress","getName","getAddress","getAccountPortfolioTranches","availableTranches","portfolio","tranches","avgAPY","totalEarnings","totalAmountLent","totalEarningsPerc","_args5","tranchesBalance","totalBalance","protocolConfig","_ref4","_ref5","trancheTokenBalance","tranchePrice","tokenBalance","trancheUserInfo","trancheApy","amountDeposited","trancheEarnings","loadTrancheFieldRaw","getTrancheUserInfo","toConsumableArray","trancheInfo","trancheWeight","getAccountPortfolio","orderedTokensBalance","depositedTokens","_args8","totalBalanceConverted","tokenBalanceConverted","getIdleTokenPrice","_ref11","tokenAprs","tokenAPY","tokenWeight","amountLentToken","tokenEarnings","getAmountDeposited","getTokenAprs","avgApy","getCurveAvgSlippage","processedTxs","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","_args9","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","deposited","getCurveAvgBuyPrice","avgBuyPrice","prevAvgBuyPrice","getAvgBuyPrice","_args11","idleTokensBalance","getFirstDepositTx","deposits","firstDepositTx","getDashboardSectionUrl","section","origin","asyncTimeout","ms","getDepositTimestamp","_callee13","firstDepositTxs","_args13","_context13","reduce","acc","getTrancheRewardTokensInfo","_callee15","stakingRewards","tokensDistribution","_context15","_ref19","_callee14","eventFilters","transfers","previousHarvest","latestHarvest","previousBlock","_ref20","_ref21","prevBlockInfo","lastBlockInfo","lastBlockPoolSize","poolSize","elapsedBlocks","elapsedSeconds","transferAmount","tokensPerBlock","tokensPerSecond","tokensPerYear","convertedTokensPerYear","tokenApr","tokenApy","_context14","CDO","CDORewards","getContractEvents","fromBlock","toBlock","getBlockInfo","genericContractCallCached","returnValues","apr2apy","apr","apy","_x9","_ref22","_callee17","defaultEventsConfig","underlyingEventsConfig","underlyingEventsFilters","_ref23","_ref24","underlying_transfers","trancheToken_transfers","totalAmountDeposited","_context17","_ref25","_callee16","trancheTokenTransferEvent","tokenTransferEvent","trancheTokenAmount","blockInfo","hashKey","_context16","transactionHash","trancheTokens","_x13","_x10","_x11","_x12","getTrancheUserTransactions","_ref26","_callee18","_context18","_x14","_x15","_x16","getAmountDepositedTranche","_ref27","_callee19","_context19","_x17","_x18","_x19","_ref28","_callee20","_ref29","_ref30","userAvgPrice","_context20","_x20","_x21","getAmountLent","_callee21","amountLents","_args21","_context21","getEtherscanBaseTxs","_callee22","firstBlockNumber","endBlockNumber","debug","firstIdleBlockNumber","requiredNetwork","etherscanInfo","etherscanBaseTxs","etherscanBaseEndpoint","etherscanApiUrl","lastCachedTx","lastCachedBlockNumber","etherscanEndpointLastBlock","latestTxs","latestBlockNumbers","txs","requestCount","requestStatus","cachedRequests","_args22","_context22","endpoints","REACT_APP_ETHERSCAN_KEY","getCachedRequest","log","result","makeCachedRequest","filterEtherscanTxs","saveEtherscanTxs","makeRequest","now","_callee23","_args23","_context23","filterCurveTxs","endpoint","txsToStore","cachedRequest","saveCachedRequest","_callee24","_ref35","allAvailableTokens","_args24","_context24","processStoredTxs","sort","_ref36","_callee25","_args25","_context25","_x22","_ref37","_callee26","processTxs","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args26","_context26","tokenMigrationToolParams","curveTokenConfig","idleToken","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenDecimal","tokenValue","newValue","objectSpread","iTxs","withdrawnValue","processEtherscanTransactions","_x23","addStoredTransaction","txKey","tokenKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref38","_callee31","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args31","_context31","baseTokenConfig","baseToken","baseTokenAddress","_ref39","_callee30","minedTxs","_context30","_ref40","_callee29","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context29","getCurveTokenPrice","t1","_ref41","_callee27","_context27","getTransactionReceipt","_x28","_x29","topics","baseTokensConfig","t2","_ref42","_callee28","_context28","_x30","_x31","_x26","_x27","_x25","_x24","_ref43","_callee37","txsToProcess","_args37","_context37","_ref44","_callee36","_context36","_ref45","_callee35","isStoredTx","allowedMethods","pendingStatus","txSucceeded","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context35","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","method","params","created","_ref46","_callee32","_context32","txReceipt","_x36","_x37","_ref47","_callee33","_context33","_x38","_x39","oldContract","raw","_ref48","_callee34","_context34","_x40","_x41","abi","decodeLog","internalType","_token","_x34","_x35","_x33","_x32","alias","getCustomAddress","setCustomAddress","customAddress","_ref49","_callee38","error_callback","config","_args38","_context38","catch","_x42","makeEtherscanApiRequest","_ref50","_callee39","apiKeyIndex","apiKey","_args39","_context39","_x43","_ref51","_callee40","return_data","_args40","_context40","_x44","getTransactionError","code","errorCode","split","array","prop","shift","configs","checkUrlOrigin","baseURL","checkUrlBeta","betaURL","sendGoogleAnalyticsPageview","_callee41","page","googlePageviewInfo","isOrigin","_args41","_context41","ga","_ref53","_callee43","eventData","googleEventsInfo","debugEnabled","originOk","currentNetwork","_args43","_context43","addPostfixForTestnet","availableNetworks","_ref54","_callee42","_context42","hitCallback","hitCallbackFail","_x46","_x47","_x45","createContract","_ref55","_callee44","_context44","Contract","_x48","_x49","_x50","getWalletProvider","defaultProvider","simpleIDPassUserInfo","userInfo","simpleID","email","initSimpleID","passUserInfo","baseurl","getEtherscanAddressUrl","decimalCount","decimal","thousands","abs","negativeSign","Number","j","getSnapshotProposals","_callee47","activeOnly","whitelist","proposals","currTime","validProposals","_args47","_context47","getCachedData","addr","msg","payload","end","_ref57","_callee46","checkedStrategies","_context46","snapshot","metadata","strategies","_ref58","_callee45","_context45","symbol","_x52","_x51","_ref59","_callee48","startTimestamp","endTimestamp","forceStartTimestamp","frequency","order","limit","filteredCachedData","_filteredData","apiInfo","filteredData","_args48","_context48","rates","_x53","getTokenExchangeRate","_ref60","_callee49","exchangeRateParams","exchangeRate","_context49","_x54","_x55","getTokenDecimals","_ref61","_callee50","_context50","_x56","aprs","allocations","avgApr","aprWeighted","allocation","getFrequencySeconds","quantity","hour","day","week","getIdleStakingRewardsTxs","_callee51","idleTokenConfig","feeDistributorConfig","etherscanEndpoint","etherscanTxlist","_context51","getProtocolInfoByAddress","integerValue","ROUND_FLOOR","normalizeTokenDecimals","normalizeTokenAmount","normalizedTokenDecimals","checkContractPaused","_callee52","contractPaused","_args52","_context52","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref64","_callee54","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context54","lastAllocationsPromise","_ref65","_callee53","lastAllocations","_context53","_x58","_x59","alloc","_x57","checkMigration","_ref66","_callee55","migrationEnabled","oldContractBalance","oldContractTokenDecimals","oldContractBalanceFormatted","oldContractName","_context55","getContractBalance","_x60","_x61","_ref67","_callee56","eventName","_args56","_context56","getContractPastEvents","_x62","_x63","estimateMethodGasUsage","_ref68","_callee57","methodName","methodParams","_contract$methods","functionCall","gasLimit","_ref69","_ref70","_args57","_context57","methods","getGasPrice","estimateGas","_x64","_x65","_ref71","_callee58","userAddress","signedParameters","callback_receipt","_contract$methods2","_context58","on","once","confirmationNumber","receipt","_x66","_x67","_x68","_x69","_x70","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","chainId","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref72","_callee59","biconomyInfo","res","_context59","limits","apiId","headers","x-api-key","_x71","sendTxWithPermit","_ref73","_callee60","_contract$methods3","messageToSign","_this$getSignaturePar","_context60","encodeABI","_address","personal","sign","_x72","_x73","_x74","_x75","_x76","_x77","buildBiconomyErc20ForwarderTx","_ref74","_callee61","tokenAddress","permitType","callData","buildParams","_context61","txGas","erc20ForwarderClient","buildTx","_x78","_x79","_x80","_x81","_x82","_ref75","_callee63","_context63","_ref76","_callee62","_context62","_x84","_x85","_x83","sendBiconomyTxWithErc20Forwarder","_ref77","_callee64","req","metaInfo","txResponse","fetchReceiptIntervalId","_context64","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x86","_x87","_x88","_x89","sendBiconomyTxWithPersonalSign","_ref78","_callee65","_this$getSignaturePar2","_context65","getNonce","call","_x90","_x91","_x92","_x93","signPermitEIP2612","_ref79","_callee66","erc20Name","owner","spender","deadline","domain","permit","domainData","_context66","getChainId","version","verifyingContract","types","EIP712Domain","Permit","primaryType","jsonrpc","substring","_x94","_x95","_x96","_x97","_x98","_x99","_x100","_x101","signPermit","_ref80","_callee67","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","expiry","EIPVersion","permitName","_args67","_context67","net","getId","round","nonceMethod","pow","allowed","response","_x102","_x103","_x104","_ref81","_callee68","permitParams","methodAbi","useNonce","_args68","_context68","_jsonInterface","f","inputs","unshift","_x105","_x106","_x107","_x108","_x109","_x110","_x111","sendSignedTx","_ref82","_callee69","MetaTransaction","dataToSign","_context69","_x112","_x113","_x114","_x115","_x116","checkTokenApproved","_ref83","_callee70","contractAddr","walletAddr","_ref84","_ref85","allowance","_context70","getAllowance","gte","_x117","_x118","_x119","_ref86","_callee71","_context71","_x120","_x121","_x122","contractMethodSendWrapperWithValue","txData","disableERC20","toTwosComplement","enableERC20","getTrancheStakedBalance","_ref87","_callee72","stakedBalance","_args72","_context72","_x123","_x124","_ref88","_callee73","field","_args73","_context73","_x125","_x126","_x127","_x128","_x129","_x130","_x131","_x132","_ref89","_callee74","formatValue","tranchePool","_ref90","_ref91","staked1","lastPrice1","_ref92","_ref93","deposited1","lastPrice","idleGovTokenConfig","rewardsTokensInfo","_ref94","_ref95","rewardsTokens","incentiveTokens","govTokens","_args74","_context74","AA","BB","IDLE","rewardTokenAddr","govTokenAddress","getGovTokenConfigByAddress","_x133","_x134","_x135","_x136","_x137","_x138","_x139","loadAssetField","_ref96","_callee75","addCurveApy","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref97","_ref98","curveAvgSlippage","curveAvgBuyPrice","curveTokenBalance","_ref99","_ref100","amountLentCurve1","redeemableBalanceCurve","_ref101","_ref102","curveApy","amountLentCurve","redeemableBalanceCurveStart","redeemableBalanceCurveEnd","earningPerYear","_ref103","_ref104","amountLent1","redeemableBalance1","depositTimestamp","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","selectedTokenConfig","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref105","_ref106","tokenPriceFirstDeposit","_ref107","_ref108","daysFirstDeposit","earningsPerc","depositTimestamps","_govTokenConfig","_ref109","_ref110","tokenAPY1","amountLent2","redeemableBalanceStart","redeemableBalanceEnd","_earningPerYear","_govTokenConfig2","_ref111","_ref112","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","redeemableBalance","_ref113","_ref114","amountLentCurve2","redeemableBalanceCurve1","_ref115","_ref116","redeemableBalance2","_args75","_context75","getCurveTokenBalance","getCurveAPY","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getStkAaveUserDistribution","getIdleGovToken","distributionMode","t3","getCompDistribution","getStkAaveDistribution","t4","getCompAvgApr","t5","t6","t7","getTokenPrice","getUserTokenFees","t8","t9","getGovTokenUserBalance","getGovTokensUserTotalBalance","_x140","_x141","_x142","_x143","getIdleTokenSupply","_ref117","_callee76","idleTokenSupply","_args76","_context76","getTokenTotalSupply","_x144","getIdleTokenPriceWithFee","_ref118","_callee77","_ref119","_ref120","fee","priceWFee","_args77","_context77","eq","_x145","_x146","_ref121","_callee78","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args78","_context78","_x147","clearCachedData","useLocalStorage","expirationDate","_ref122","_callee79","_ref123","_ref124","idleTokensTotalSupply","userShare","_context79","_x148","_x149","_callee81","coverProtocolConfig","nexusMutualConfig","_args81","_context81","_ref126","_callee80","coverage","coverageTokens","protocolImage","_context80","tokens","initContract","expirationTimestamp","utc","_x150","getNexusMutualCoverages","sumAssured","coverAssetConfig","yieldTokenConfig","collateralIcon","incident","claimId","protocolImageDark","coverDetails","validUntil","route","_ref127","_callee83","incidentsInfo","_ref128","_ref129","coverBoughtEvents","claimSubmittedEvents","nexusMutualCoverages","_context83","directProps","startBlock","contractInfo","buyer","_ref130","_callee82","cover","coverId","claimSubmittedEvent","_ref131","_ref132","incidentEvents","matchedIncidents","matchedIncident","expiryDate","payoutOutcome","claimedAmount","claimTxReceipt","claimedAmountLog","claimableAmount","claimablePrice","maxCoveredAmount","coveredTokenAmount","_ref133","_ref134","_context82","claim","productId","incidentDate","yieldTokenCoverGracePeriod","curr","priceBefore","underlying","underlyingConfig","coverAsset","findIndex","_x152","_x151","getBatchedDepositExecutions","_ref135","_callee84","_context84","_x153","getBatchedDeposits","_callee86","filter_by_status","batchDepositConfig","batchedDeposits","_args86","_context86","_ref137","_callee85","currBatchIndex","batchIndex","_ref138","_ref139","batchExecutions","batchTotal","batchRedeem","batchDeposit","batchTotals","batchRedeems","batchDeposits","lastExecution","_context85","_x154","getETHBalance","_ref140","_callee87","fixDecimals","_args87","_context87","_x155","_ref141","_callee88","_ref142","_ref143","_args88","_context88","_x156","_x157","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","script","attr","readyState","onreadystatechange","onload","body","appendChild","isValidJSON","match","_ref144","_callee89","totalSupply","_args89","_context89","_x158","_ref145","_callee90","_args90","_context90","_x159","_ref146","_callee91","_args91","_context91","_x160","_x161","getProtocolBalance","_ref147","_callee92","_context92","_x162","_x163","getAprs","_ref148","_callee93","_context93","addresses","_x164","genericIdleCall","_ref149","_callee94","callParams","_args94","_context94","_x165","_ref150","_callee95","_contract$methods4","_args95","_context95","_x166","_x167","getTxDecodedLogs","_ref151","_callee97","logAddr","decodeLogs","internalTransfers","_context97","_ref152","_callee96","_context96","_x172","_x173","_x168","_x169","_x170","_x171","blocksToSeconds","blocks","blocksPerSeconds","getBlockNumber","_callee98","_context98","_ref154","_callee99","_context99","getBlock","_x174","_ref155","_callee100","_args100","_context100","getPastEvents","_x175","_x176","_ref156","_callee101","_args101","_context101","_x177","_x178","_ref157","_callee102","_contract$methods5","_args102","_context102","_x179","_x180","_ref158","_callee103","_args103","_context103","_x181","_x182","getUnlentBalance","_ref159","_callee104","unlentBalance","_context104","_x183","_ref160","_callee105","_args105","_context105","_x184","_ref161","_callee107","protocolsAprs","exchangeRates","protocolsBalances","govTokensBalances","_ref165","_ref166","_args107","_context107","totalAllocationConverted","totalAllocationWithUnlentConverted","_ref162","_callee106","_ref163","_ref164","protocolBalance","protocolAllocation","_context106","functions","_x186","_x187","protocolAllocationPerc","getGovTokensBalances","total","getTokenConversionRate","_x185","getSushiswapPoolTokenPrice","_ref167","_callee108","pairAddresses","_ref168","_ref169","token0_address","token1_address","poolReserves","token0_config","token1_config","_ref170","_ref171","token0_price","token1_price","token0_pool","token1_pool","totalPoolSize","poolTokenPrice","_context108","getSushiswapConversionRate","_x188","_x189","_ref172","_callee109","tokenConfigFrom","tokenConfigDest","WETHAddr","one","_context109","_x190","_x191","_ref173","_callee110","unires","_context110","addressForPrice","_x192","_x193","getCurveDepositedTokens","_ref174","_callee111","idleTokensBalances","remainingCurveTokens","_args111","_context111","_x194","getCurveUnevenTokenAmounts","_ref175","_callee112","amounts","max_burn_amount","unevenAmounts","_context112","getCurveDepositContract","_x195","_x196","_callee113","curveRatesInfo","_context113","strategyTokens","getCurveAPYContract","_callee114","blocksForPrevTokenPrice","_ref178","_ref179","prevTokenPrice","blocksMultiplier","curveAPR","_context114","getCurveTokenSupply","_callee115","_context115","getCurvePoolContract","_callee116","_args116","_context116","_callee117","_args117","_context117","_ref183","_callee118","_ref184","_ref185","_context118","_x197","_callee119","depositContractInfo","_context119","getCurveZapContract","_callee120","zapContractInfo","_context120","_callee121","poolContractInfo","_context121","getCurveSwapContract","_callee122","migrationContractInfo","_context122","getCurveIdleTokensAmounts","_callee124","max_slippage","curveTokenSupply","curveTokenShare","n_coins","_args124","_context124","_ref191","_callee123","coinIndex","curveIdleTokens","_context123","migrationParams","_x198","getCurveTokensAmounts","_callee126","useCoinIndex","_args126","_context126","_ref193","_callee125","_ref194","_ref195","idleTokenPrice","totalTokenSupply","_context125","_x199","getCurveAmounts","_ref196","_callee128","_args128","_context128","_ref197","_callee127","_context127","_x202","_x200","_x201","getCurveTokenAmount","_ref198","_callee129","_args129","_context129","_x203","getCurveSlippage","_ref199","_callee130","uneven_amounts","depositContract","_ref200","_ref201","virtualPrice","Sv","_args130","_context130","_x204","_x205","_ref202","_callee131","aTokenIdleSupply","annualize","aaveDistribution","stkAAVETokenConfig","aTokenConfig","aaveIncentivesController_address","IAaveIncentivesController_name","_ref203","_ref204","aTokenTotalSupply","assetData","aaveAllocationPerc","aaveSpeed","secondsPerYear","aavePoolShare","_args131","_context131","_x206","_callee133","_args133","_context133","_ref206","_callee132","_ref207","_ref208","_context132","_x207","getStkAaveApr","_ref209","_callee134","aaveConversionRate","stkAaveAPR","destTokenConfig","stkAaveValue","_args134","_context134","_x208","_x209","getCompAPR","_ref210","_callee135","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args135","_context135","_x210","_x211","getCompSpeed","_ref211","_callee136","cTokenAddress","compSpeed","_context136","_x212","_ref212","_callee137","cTokenInfo","compoundAllocationPerc","_ref213","_ref214","cTokenTotalSupply","compoundPoolShare","_args137","_context137","_x213","_callee139","_args139","_context139","_ref216","_callee138","_ref217","_ref218","_context138","_x214","_callee141","_args141","_context141","_ref220","_callee140","_ref221","_ref222","compApr","_context140","_x215","getTokensCsv","_callee144","csv","_context144","prototype","sum","pv","cv","avg","_ref224","_callee143","strategy","_context143","_ref225","_callee142","header","aprAvg","scoreAvg","lastRow","_context142","protocolsData","p1","foundProtocol","p2","rate","idleRate","score","idleScore","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","avgScore","_x217","_x216","_callee146","govToken","convertToken","_args146","_context146","_ref227","_callee145","compTokenBalance","_context145","_x218","getTokenGovTokens","speed","mode","multipliers","block","second","month","year","getGovTokensUserDistributionSpeed","_ref228","_callee148","govTokensUserDistribution","_args148","_context148","_ref229","_callee147","_context147","_x220","_x219","_ref230","_callee150","govTokensDistribution","tokenGovTokens","_args150","_context150","_ref231","_callee149","govSpeed","_context149","_x222","_x221","getGovTokensAprs","_ref232","_callee152","govTokensAprs","_args152","_context152","_ref233","_callee151","_ref234","_ref235","_ref236","_ref237","cTokenConfig","_context151","aprTooltipMode","_x225","_x223","_x224","_callee154","_args154","_context154","_ref239","_callee153","govTokenBalance","tokenConversionRate","fromTokenConfig","_context153","_x226","_callee155","checkShowBalance","govTokensUserBalances","govTokensEarnings","_args155","_context155","getGovTokensUserBalances","govTokenAmount","getGovTokensIndexes","_ref241","_callee157","govTokensAmounts","_context157","getGovTokensUserAmounts","_ref242","_callee156","_context156","getGovTokenAddessByIndex","_x229","_x230","_x227","_x228","_ref243","_callee158","_context158","_x231","_x232","_ref244","_callee159","_context159","_x233","_x234","_callee162","govTokenConfigForced","_args162","_context162","_ref246","_callee161","_context161","_ref247","_callee160","_context160","_x236","_x237","_x235","getTokenFees","_callee163","_args163","_context163","_callee164","_ref250","_ref251","feePercentage","gain","fees","_args164","_context164","_ref252","_callee165","_args165","_context165","_x238","getTotalTVL","_callee166","tokensTVL","_context166","getTokensTVL","totalTVL","tokenInfo","tokenTVL","_callee170","_context170","_ref255","_callee169","_context169","_ref256","_callee168","oldTokenTVL","idleTokenName","_ref257","_ref258","oldTokenConfig","_ref262","_ref263","oldTokenPrice","oldTotalSupply","_context168","showAUM","_ref259","_callee167","_ref260","_ref261","govTokenConversionRate","govTokenBalanceConverted","_context167","_x241","oldProtocols","oldProtocol","protocolPos","_x240","_x239","getSubstackLatestFeed","_callee171","endpointInfo","idleSubstackFeed","latestFeed","_context171","items","getAggregatedStats","_callee172","tvls","totalAUM","_args172","_context172","getAggregatedStats_chain","_callee176","avgAPR","_args176","_context176","_ref267","_callee175","_context175","_ref268","_callee174","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context174","_ref269","_callee173","_ref270","_ref271","_context173","_x244","_x243","_x242","getTokenApy","_ref272","_callee177","_context177","_x245","getTokensToMigrate","_callee180","tokensToMigrate","_args180","_context180","_ref274","_callee179","_context179","_ref275","_callee178","_ref276","_context178","_x247","_x246","getProtocolsTokensBalances","_callee182","tokenBalances","minTokenBalance","protocolsTokens","_args182","_context182","_ref278","_callee181","tokenContract","_context181","_x248","_ref279","_callee183","_args183","_context183","_x249","_x250","_x251","getAvgAPYStats","_ref280","_callee184","apiResults","_args184","_context184","_x252","_x253","_ref281","_callee185","count","_conversionRate","_args185","_context185","_x254","_x255","getTokenScore","_ref282","_callee186","_ref283","_ref284","tokenScore","_context186","protocolScore","getTokenScoreApi","_x256","_x257","_ref285","_callee187","scores","_context187","_x258","_x259","_ref286","_callee190","Aprs","protocolsApys","idleGovTokenShowAPR","idleAPR","_args190","_context190","_ref287","_callee189","addrIndex","protocolApr","protocolApy","govTokenAPR","_context189","_ref288","_callee188","_context188","_x263","_x261","_x262","_x260","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","Fragment","ExecuteTransaction","txStatus","loading","getTransactionParams","getTransactionParamsAsync","sendRawTransaction","ExecuteComponent","react__WEBPACK_IMPORTED_MODULE_9___default","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_11__","progressBarProps","execute","componentProps","defaultOpacity","hidden","interactive","rainbow","FieldComponent","rowProps","colInfo","colIndex","visible","fieldIndex","colProps","pb","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","desc","FastBalanceSelector","onMouseDown","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","DashboardCard","mouseOver","isRainbow","active","onMouseOut","setMouseOver","onMouseOver","titleParentProps","h4","description","placement","Staking","selectedOption","toolProps","SelectedComponent","AssetField","selectToken","FlexLoader","SendTxWithBalance","inputValue","permitEnabled","showPermitBox","approveEnabled","buttonDisabled","contractApproved","fastBalanceSelector","changeInputValue","call_callback","changeInputCallback","setInputValue","selectedPercentage","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","approve","callbackApprove","callbackReceiptApprove","checkContractApproved","executeTx","_amount","_params","eventValue","getPermitTransactionParams","approveCallback","actionChanged","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","contractChanged","tokenConfigChanged","viewOnly","connectorName","infoBox","steps","step","stepIndex","ExtLink","required","checked","togglePermitEnabled","approveDescription","balanceSelectorInfo","placeholder","ConnectBox","TrancheDetails","infoText","canUnstake","canWithdraw","activeModal","balanceProp","trancheBalance","selectedAction","userHasAvailableFunds","resetModal","loadActionData","selectedProtocol","selectedTranche","cdoCoolingPeriod","latestHarvestBlock","stakeCoolingPeriod","userStakeBlock","trancheAPY","trancheDetails","cdoConfig","cantUnstake","cantWithdraw","hex","borderBottom","flexWrap","setSelectedAction","src_SendTxWithBalance_SendTxWithBalance","transactionSucceeded","contractApprovedCallback","BuyModal","showInline","availableMethods","buyToken","selectedSection","TranchePage","loadTransactions","src_TrancheDetails_TrancheDetails","TransactionsList","transactionsList","availableActions","TranchesList","enabledProtocols","GenericPieChart","showLegend","itemWidth","itemHeight","translateY","symbolSize","anchor","direction","itemTextColor","symbolShape","effects","defaultImage","defaultLabel","TotalBalanceCounter","counterEnd","counterStart","loadTotalEarnings","counterStyle","build_default","delay","separator","useEasing","formattingFn","countUpRef","ref","TotalEarningsCounter","earningsEnd","earningsStart","PortfolioEquityTranches","ChartCustomTooltip","ChartCustomTooltipRow","Tranches","userHasFunds","portfolioLoaded","allocationChartData","portfolioEquityQuickSelection","loadPortfolio","urlParams","param2","param1","availableTranchesChanged","tranchesConfig","tranchesTokens","tranchesBalances","weight","portfolioDonutData","balanceValue","trancheName","balanceInfo","_this4","src_TranchePage_TranchePage","src_TotalBalanceCounter_TotalBalanceCounter","src_TotalEarningsCounter_TotalEarningsCounter","src_GenericPieChart_GenericPieChart","aligItems","setPortfolioEquityQuickSelection","src_PortfolioEquityTranches_PortfolioEquityTranches","src_TranchesList_TranchesList","selectTranche","showTooltip","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","selectDestToken","paymentProvider","providerInfo","initProps","buttonId","initParams","getInitParams","render","remoteResources","scriptID","remoteResourceParams","precall","async","parentElement","head","stylesheetId","loadTokens","fromTokenChanged","destTokenChanged","loadKyberWidget","LpStaking","globalStats","statsLoaded","rewardMultiplier","accountingData","successMessage","rewardTokenPrice","tokenWrapperProps","distributionSpeed","showTokenWrapperEnabled","updateData","selectedActionChanged","contractApprovedChanged","contractInfoChanged","userStakedBalance","totalStakedBalance","totalStakingShares","userTotalStakingShare","rewardsPerDay","stakedBalanceUSD","rewardsPerYearUSD","rewardToken","normalizedInputValue","unstakeRewards","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalRewards","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","programDuration","initialLockedShares","durationSec","stakingShare","maxMultiplier","distributionSpeedMultiplier","userDistributionSpeed","maxBonusDays","currentRewards","stakedTokensLog","_this5","stakedTokens","unstakedTokensLog","unstakedTokens","rewardTokenConfig","receivedRewardsLog","receivedRewards","startContract","wrapMethod","destContract","unwrapMethod","_this6","loadStats","_this7","StatsCard","isStake","isUnstake","isStats","txAction","poolLink","statInfo","ImageButton","caption","imageSrc","setAction","IdleStaking","lockPeriods","lockedEnd","lockExpired","claimedRewards","increaseAction","lockPeriodInput","internalInfoBox","distributedRewards","selectedLockPeriod","lockPeriodTimestamp","lockEndDateIsMaxEndDate","feeDistributor","lockPeriodChanged","increaseActionChanged","calculateStkIDLEAmount","minLockPeriod","maxLockPeriod","minDate","add","mDate","maxDate","isAfter","endDate","endDateTime","_d","maxDateTime","stkIDLEAmount","_value","_unlock_time","etherscanRewardsTxs","tokenTotalSupply","claimableRewards","lockedInfo","tokenUserBalance","claimable","claimEvents","depositEvents","totalClaimedUser","recipient","totalLockedFunds","stkTokenTotalSupply","claimableRewardsFormatted","totalClaimed","event","totalRewardsFormatted","userDeposited","totalCollectedRewards","stakeStartTime","stakedTime","ts","depositValue","stakePeriod","currentProfit","stakePeriodWeeks","lockEndDate","currDate","isValid","lockedTokensLog","lockedTokens","increaseAmountTokensLog","increaseTokens","_this8","isLock","isClaim","isIncrease","canIncrease","reward","setIncreaseAction","changelockPeriodInput","selectLockPeriod","Button","getIncreaseTimeParams","NexusMutual","quote","1","2","periodOptions","30","60","90","365","capacity","coverCost","amountValue","periodValue","yearlyCost","maxCapacity","amountValid","periodValid","claimableCovers","tokenApproved","selectedPeriod","maxPriceWithFee","transactionParams","transactionValue","yieldTokenBalance","selectedUnderlying","yieldTokenApproved","claimButtonDisabled","selectedCoverToClaim","defaultClaimableCover","selectedUnderlyingConfig","changeAmount","changePeriod","selectPeriod","approveSucceeded","yieldTokenApproveSucceeded","claimInputChange","normalizedAmount","getClaimTransactionParams","realAddress","claimTransactionSucceeded","loadContracts","buyCoverTransactionSucceeded","validClaimableCoverFromParam","param3","paramIsValidToken","changeSelectedToken","baseEndpoint","selectedUnderlyingChanged","loadTokenData","isETH","getPoolCapacity","coverData","period","coverAmount","currency","asset","quoteURL","encodeParameters","priceInNXM","expiresAt","generatedAt","COVER_TYPE","basePrice","priceWithFee","mul","divn","amountInWei","textDecoration","activeColor","reset","changeSelectedUnderlying","setMaxCoverAmount","borderStyle","periodInfo","getQuote","selectCoverToClaim","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","mintLog","mintedAmount","withdrawLog","withdrawnAmount","fullWidth","connectAndValidateAccount","PortfolioDonut","totalFunds","parentWidth","tokenPercentage","tokenColorHsl","radialLabelsLinkOffset","strategyIcon","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","2 Years","5 Years","loadEarnings","stepsCount","aggregatedEarnings","earnings","earningsYear","earningsPercStep","possibleSteps","maxPossibleStep","maxCountStep","orderedTokensEarnings","estimationStep","option","setEstimationStepsPerc","tokenIndex","estimationStepPerc","finalEarnings","cursorPerc","tokenIcon","tokenRGBColor","borderTop","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","estimationLabel","DashboardIconButton","StrategyPage","aggregatedValues","remainingTokens","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","availableTokensChanged","batchInfo","redeemable","totalBalanceWithScore","govTokensTotalBalance","govTokensUserBalance","govTokensTotalBalanceTooltip","apyLong","riskScore","yieldFarming","src_PortfolioDonut_PortfolioDonut","toolName","toolIndex","toolConfig","src_DashboardIconButton_DashboardIconButton","ActiveCoverages","AssetsList","showDirection","src_EarningsEstimation_EarningsEstimation","textSize","BatchDeposit","canClaim","canDeposit","usePermit","hasDeposited","permitSigned","batchCompleted","claimSucceeded","componentLoaded","executeSucceeded","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","executeSucceededChanged","callbackExecute","callbackReceiptExecute","functionInfo","permitContract","batchDepositInfo","depositEnabled","availableStrategiesKeys","strategyConfig","selectStrategy","obj","strategyAvailableTokens","migrateFunction","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","canExecuteBatch","strategyDefaultValue","openTooltipModal","Migrate","useMetaTx","showActions","isMigrationTool","showBalanceSelector","migrationIcon","toMigrate","callbackPermit","migrationText","minPoolSize","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","balancerTokenConfig","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","apyPrice","selectCoverage","isMint","isBuyClaim","isBuyNoClaim","subcaption","TokenMigration","changeFromToken","convertTool","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","DeployB2BVesting","actions","actionIndex","validated","viewAction","editAction","newAction","maxContracts","actionValid","actionInputs","claimedTokens","deployedContracts","contractDeployed","validateForm","checkInputs","vesterImplementation","proxyCreated","deployedContractsAddresses","implementation","proxy","vestingPeriod","availableBalance","depositAmounts","claimedTokensLog","returnString","fieldPattern","inputIndex","inputInfo","getPatternByFieldType","inputValid","actionValue","defineProperty","txError","deployedContract","preventDefault","idleAddress","isLastAction","clonedVesterAddress","ProxyCreated","ownerAddress","recipientAddress","initData","depositContracts","claimContracts","onSubmit","handleSubmit","setEditAction","fieldType","pattern","inputChange","addAction","deleteAction","setNewAction","setViewAction","readOnly","depositCallback","claimCallback","appName","forumURL","darkModeEnabled","countries","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","gnosis","fortmatic","portis","authereum","torus","trezor","ledger","ledgerlive","custom","newsletterSubscription","messages","scoreShort","apyShort","cheapRedeem","curveBonusSlippage","directMint","performanceFee","govTokenApr","govTokenRedeemableBalance","riskScoreShort","redeemSkipGov","batchDepositExecutionSchedule","curveInstructions","pageView","modals","first_deposit_referral","first_deposit_share","welcome","dashboard","baseRoute","governance","test","availableContracts","FeeTreasury","PriceOracle","GovernorAlpha","EcosystemFund","IdleController","7","delegates","imageInactive","poolContract","CurvePool","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","idleUSDCYield","idleUSDTYield","DAI","USDC","SLP","showAPR","showPrice","COMP","stkAAVE","aToken","ProxyFactory","MinimalInitializableProxyFactory","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","SushiswapRouter","SushiV2Router02","UniswapRouter","UniswapV2Router02","BalancerExchangeProxy","zeroExInstant","orderSource","affiliateInfo","feeRecipient","rgb","stake","unstake","comingSoon","titlePostfix","govTokensEnabled","chartColor","iconInactive","iconInactiveDark","best","descLong","descShort","risk","substack","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","chart","labelTextColorModifiers","performanceTooltip","USD","USDT","TUSD","SUSD","WBTC","WETH","RAI","disabledCharts","idleDAI+idleUSDC+idleUSDT","compound","aavev2WithStkAAVE","rateField","compoundWithCOMP","fulcrum","dsr","dydx","iearn","aave","aavev2","cream","fuse","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","3","4","42","1337","isForked","requiredConfirmations","enabledNetworks","accountBalanceMinimum","providers","infura","nexus","etherscan","REACT_APP_ETHERSCAN_KEY2","REACT_APP_ETHERSCAN_KEY3","REACT_APP_ETHERSCAN_KEY4","baseUrl","urls","biconomy","enableLogin","disabledWallets","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","getNetwork","networkName","appOrigin","appId","renderNotifications","notifications","tools","subComponent","stkIDLE","StakingFeeDistributor","LpStakingAbi","SushiLiquidityPool","nexusMutual","IdleTokenV4","ERC20","NexusMutualDistributor","NexusMutualIncidents","b2bVesting","B2BVester","ethWrapper","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","showAllTokens","tokenSwap","ETH","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","insurance","imageDark","payments","bank","showDefaultOnly","card","wallet","wyre","captionPos","supportedMethods","supportedCountries","supportedTokens","envParams","accountId","prod","getInfo","selectedMethod","buyParams","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","wyreStyle","ramp","badge","hostAppName","hostApiKey","REACT_APP_RAMP_KEY","variant","hostLogoUrl","swapAsset","RampInstantSDK","getAccountBalance","purchase","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","selectedCountry","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","onSuccess","onClose","tokenParams","RimbleWeb3_context","connector","ethereum","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","decodeLogsData","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","selectedProvider","availableProviders","renderPaymentMethod","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","goBack","componentWillMount","getProviderInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","providerSupportToken","defaultPaymentProvider","selectProvider","ethAvailable","tokenAvailable","selectMethod","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","countryCode","methodInfo","loadAvailableMethods","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","InnerComponent","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","noOptionsMessage","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","Footer","Tos","h2","h3","listStyle","theme_dark","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","possibleConstructorReturn","getPrototypeOf","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","GnosisSafeConnector","SafeAppConnector","safeLoaded","checkSafeApp","activate","getAccount","getSafeInfo","isSafeApp","deactivate","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","disconnect","close","WalletConnectConnector","WalletConnectProvider","infuraId","defaultNetwork","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","REACT_APP_INFURA_KEY","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","WrongNetworkBanner","NetworkUtil","isCorrectNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","bold","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","subtitle","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","walletProvider","connectionCallback","unsetConnector","isMetamask","isGnosisSafe","safe","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","injectedIndex","splice","gnosisIndex","connectorInfo","walletIcon","buttonStyle","ConnectionModal","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","componentDidUpdate","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","maxHeight","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","INFURA_KEY","RimbleTransactionContext","createContext","web3Infura","permitClient","accountBalance","initWeb3","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","accountInizialized","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","connectGnosisSafe","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","availableStrategiesChanged","gnosisSafeLoaded","setNetwork","metamaskProvider","connectorNameChanged","web3Host","web3Provider","forceCallback","web3Callback","originalWeb3","biconomyWeb3Provider","_args4","detectEthereumProvider","Web3","HttpProvider","library","IFrameEthereumProvider","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","_args7","race","$crisp","notificationId","content","Sentry","increaseAmount","_ref15","balanceOf","determineAccountLowBalance","openConnectionModal","getRequiredNetwork","getNetworkId","getNetworkName","getNetworkType","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","confirmationCount","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","constant","outputs","payable","stateMutability","anonymous","indexed","govTokensDisabled","defiPrime","cToken","yToken","iToken","CHAI","skipMintForDeposit","enabledEnvs","crToken","fToken","IdleCDO","IdleCDOTrancheRewards","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","then","Dashboard","Governance","App","currentEnv","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","storedCachedData","cachedKeyFound","widthChanged","heightChanged","tabIndex","envEnabled","loadAvailableTokens","warn","jQuery","setThemeMode","closeIframe","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCustomAddress","loadCurrentEnvironment","strategyChanged","networkChanged","hasMetamask","store","themeDark","_this9","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","RimbleWeb3","needsPreflight","react_router","react","fallback","isDashboard","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","registration","unregister","TransactionListFilters","isOpened","activeFilters","assets","setFilter","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","transition","filters","filterCategory","filterValues","TableCellHeader","filterValue","filterLabel","isChecked","filterName","prevTxs","txsPerPage","totalTxs","totalPages","renderedTxs","lastBlockNumber","txsIndexes","parsedValue","loadTxs","enabledActions","hasActiveFilters","m","src_TransactionListFilters_TransactionListFilters","txHashKey","prevPage","nextPage","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","_skipRebalance","_migrationContract$me","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","footer","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","iconHeight","subtitleProps","BackButton","VariationNumber","IconDirection","iconPos","loading-dots","loading-dots--dot","dot-keyframes","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_10__","currYear","getFullYear","columnWidth","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","role","aria-label","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","ColTitle","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","componentHasChildren","fieldPath","customFieldName","customFieldProps","earningsCounter","feesStart","feesEnd","earningsCurveStart","earningsCurveEnd","tokenAPY2","tokenAPR","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","aprChartData","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","amountToMigrate","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","oldAPY","tokenAPYNoGov","allocationChartRowElement","$allocationChartRowElement","css","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","random","aprChartRowElement","$aprChartRowElement","lineWidth","defs","linearGradientDef","offset","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_17__","protocolEarning","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","PerformanceChartRowElement","$PerformanceChartRowElement","blocknumber","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","icon1","icon2","strategyName","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","react_countup__WEBPACK_IMPORTED_MODULE_11___default","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_18__","earningsCurve","governanceTokenName","tooltipMode","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_19__"],"mappings":"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","file":"static/js/main.6b4127c0.chunk.js","sourcesContent":["import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          this.props.unit && unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          this.props.unit && unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontSize:3,\n      fontWeight:3,\n      height:'45px',\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import React, { Component } from 'react';\nimport { Flex, Link, Text } from \"rimble-ui\";\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\n\nclass Breadcrumb extends Component {\n  render() {\n\n    const showPathMobile = !!this.props.showPathMobile;\n\n    return (\n      <Flex\n        width={1}\n        id={'breadcrumb'}\n        alignItems={'center'}\n      >\n        {\n          this.props.handleClick && \n           <RoundIconButton\n             buttonProps={{\n               border:2,\n               width:'35px',\n               height:'35px'\n             }}\n             iconSize={'1.2em'}\n             iconName={'ArrowBack'}\n             handleClick={this.props.handleClick}\n           />\n        }\n        {\n          this.props.text && this.props.text.length>0 &&\n           <Link\n             ml={[2,3]}\n             fontSize={[1,2]}\n             fontWeight={3}\n             color={'cellText'}\n             hoverColor={'copyColor'}\n             onClick={this.props.handleClick}\n           >\n            {this.props.text}\n           </Link>\n        }\n        {\n          (!this.props.isMobile || showPathMobile) && this.props.path && this.props.path.length>0 &&\n            this.props.path.map((path,index) => {\n              const link = this.props.pathLink ? (this.props.pathLink[index] || null) : null;\n              const Component = link ? Link : Text;\n              return (\n                <Component\n                  pl={[1,3]}\n                  ml={[1,3]}\n                  fontWeight={3}\n                  fontSize={[1,2]}\n                  hoverColor={'copyColor'}\n                  style={ !this.props.isMobile ? {\n                    maxWidth:'30%',\n                    overflow: 'hidden',\n                    whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                    borderLeft: `1px solid ${this.props.theme.colors.divider}`\n                  } : null }\n                  key={`breadcrumb_path_${index}`}\n                  color={link ? 'cellText' : 'statValue'}\n                  onClick={link ? e => this.props.goToSection(link) : null}\n                >\n                  {path}\n                </Component>\n              );\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Breadcrumb;","import React, { Component } from 'react';\nimport { Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ShortHash extends Component {\n\n  state = {\n    text:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    const resolveAddress = this.props.resolveAddress !== false;\n    let text = this.functionsUtil.shortenHash(this.props.hash);\n    const ensName = resolveAddress ? await this.functionsUtil.getENSName(this.props.hash) : null;\n    // console.log('ShortHash',resolveAddress,this.props.hash,ensName);\n    if (ensName){\n      text = ensName;\n    }\n    this.setState({\n      text\n    });\n  }\n\n  render() {\n    const loader = (<Loader size=\"20px\" />);\n    return this.state.text ? <Text display={'inline'} {...this.props}>{this.state.text}</Text> : loader;\n  }\n}\n\nexport default ShortHash;","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from 'react';\nimport {\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner.js';\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n       <Button\n        onClick={this.props.handleClick}\n         {...this.props.buttonProps}\n       >\n        <Flex flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n          <Flex width={1} display={ this.props.isLoading ? 'flex' : 'none' }>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={ this.props.isLoading ? 'none' : 'flex' }>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n       </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import { Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\n\nclass RoundIconButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      p:0,\n      border:1,\n      width:'40px',\n      height:'40px',\n      borderRadius:'50%',\n      mainColor:'backButtonBg',\n      disabled:this.props.disabled\n    },this.props.buttonProps);\n\n    buttonProps.minWidth = buttonProps.width;\n\n    return (\n       <RoundButton\n         buttonProps={buttonProps}\n         handleClick={this.props.handleClick}\n       >\n         <Icon\n           color={'copyColor'}\n           name={this.props.iconName}\n           size={ this.props.iconSize ? this.props.iconSize : '1.3em'}\n         />\n       </RoundButton>\n    );\n  }\n}\n\nexport default RoundIconButton;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    // debugger;\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import React, { Component } from 'react';\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign({\n      py:1,\n      width:'auto',\n      px:['12px',3],\n    },this.props.cardProps);\n\n    return (\n       <DashboardCard\n         cardProps={cardProps}\n         isInteractive={true}\n         isActive={this.props.isActive}\n         isDisabled={this.props.isDisabled}\n         handleClick={this.props.handleClick}\n       >\n         <Flex\n           my={1}\n           alignItems={'center'}\n           flexDirection={'row'}\n           justifyContent={'center'}\n         >\n          {\n            this.props.image ? (\n              <Image\n                align={'center'}\n                src={this.props.image}\n                height={ this.props.isMobile ? '1.2em' : '1.4em' }\n                width={ this.props.isMobile ? '1.2em' : '1.4em' }\n                {...this.props.imageProps}\n              />\n            ) : this.props.useIconOnly ? (\n              <Icon\n                align={'center'}\n                name={this.props.icon}\n                size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n                {...this.props.iconProps}\n              />\n            ) : (\n             <Flex\n               mr={2}\n               p={['4px','7px']}\n               borderRadius={'50%'}\n               alignItems={'center'}\n               justifyContent={'center'}\n               backgroundColor={ this.props.iconBgColor ? this.props.iconBgColor : this.props.theme.colors.transactions.actionBg.redeem }\n             >\n               <Icon\n                 align={'center'}\n                 name={this.props.icon}\n                 size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                 color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n                 {...this.props.iconProps}\n               />\n             </Flex>\n            )\n          }\n           <Text\n             fontWeight={3}\n             fontSize={[1,3]}\n             {...this.props.textProps}\n           >\n             {this.props.text}\n           </Text>\n         </Flex>\n       </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    txCount:0,\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n\n    window.initProgressBar = this.initProgressBar;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      // console.log('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    // console.log('getTransaction',transaction);\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    let prediction = null;\n    if (this.state.predictTable){\n      this.state.predictTable.forEach((p,i) => {\n        if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n          prediction = p;\n          return true;\n        }\n      });\n    }\n\n    if (this.state.blockTime && prediction){\n      const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n      const blocksWait = pdValues[0];\n      const blockInterval = this.state.blockTime.block_time;\n      let txMeanSecs = blocksWait * blockInterval;\n      txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n      this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n      return txMeanSecs; // Customized\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    // console.log('initProgressBar',this.state.txCount,this.props.hash);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    } else {\n      const txCount = this.state.txCount++;\n      if (txCount<5){\n        this.setState({\n          txCount\n        },() => {\n          window.setTimeout(() => {\n            this.initProgressBar();\n          },1000);\n        });\n      }\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(this.props.hash)}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in Etherscan\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged){\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents(){\n    \n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p:2,\n          width:1,\n          style:{cursor:'pointer'}\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen){\n        cardProps.boxShadow = 4;\n      }\n      return (\n        <DashboardCard\n          isInteractive={true}\n          cardProps={cardProps}\n        >\n          <Flex\n            width={1}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps,{\n        mt:2,\n        zIndex:1,\n        boxShadow:null,\n        position:'absolute'\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable){\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput,this.props.themeMode==='dark' ? styles.dark : null,!props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map( o => o.value ).indexOf(selectedValue) === -1 && this.props.defaultValue){\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value){\n        return null;\n      }\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{cursor:'pointer'}}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={ props.isFocused ? 'selectBgFocused' : 'selectBg' }\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={ v => this.props.onChange(v.value) }\n        components={{\n            Menu: this.state.CustomMenu,\n            Option: this.state.CustomOption,\n            Control: this.state.ControlComponent,\n            Input: this.state.CustomInputContainer,\n            SingleValue: this.state.CustomValueContainer,\n            IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #eee','1px solid #b6c2ff'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgba(0,54,255,0.3)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: blue.base,\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#3F3D4B',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    alert:'#ff9900',\n    arrowActive:'#4f4f4f',\n    arrowInactive:'#d8d8d8',\n    selectBgFocused:'#fbfbfb',\n    selectBg:'#ffffff',\n    backButtonBg:'#ffffff',\n    lineChartStroke:'#dbdbdb',\n    wrongNetworkBannerBg:'#ffffff',\n    dashboardBg: '#f9fafd',\n    statValue: '#959595',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a3a4a5',\n    cellText: '#a6a6a6',\n    divider: '#d8d8d8',\n    counter: '#5d5d5d',\n    redeem: '#00a9fe',\n    link:'#0036ff',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    menuBg:'#fff',\n    menuHover:'#f3f6ff',\n    cardBg:'#fff',\n    flashColor:'#3f4e9a',\n    menuRightBorder:'#eee',\n    cardHoverShadow:'0px 0px 0px 1px rgba(0, 54, 255, 0.3)',\n    cardBgHover:'#f7f8ff',\n    cardBorder:'#eee',\n    pageActive:'#4f4f4f',\n    pageInactive:'#d8d8d8',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, '#AAA'),\n      backgroundColor: tint(0.9, '#AAA'),\n      borderColor: '#AAA',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: '#f3f6ff',\n      borderColor: '#b6c2ff',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Flex,\n  Box,\n  Text\n} from \"rimble-ui\";\nimport styles from './TwitterShareButton.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TwitterShareButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  share = () => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Share',\n      eventAction: 'twitter',\n      eventLabel: this.props.parent\n    });\n\n    const w = Math.min(window.innerWidth,600);\n    const h = 350;\n    const x = (window.innerWidth-w)/2;\n    const y = 150;\n    window.open(`https://twitter.com/intent/tweet?text=${this.props.tweet}`,\"_blank\",`toolbar=yes,scrollbars=no,resizable=no,top=${y},left=${x},width=${w},height=${h}`);\n  }\n\n  render() {\n    return (\n        <Button\n          borderRadius={1}\n          mainColor={'#2aa6f2'}\n          contrastColor={'white'}\n          onClick={ e => { this.share() } }\n        >\n          <Flex flexDirection={'row'} alignItems={'center'} justifyContent={'center'}>\n            <Box className={styles.twitterIcon} />\n            <Text color={'white'} fontWeight={3} ml={2}>{ this.props.text ? this.props.text : 'Tweet' }</Text>\n          </Flex>\n        </Button>\n    );\n  }\n}\n\nexport default TwitterShareButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Link,\n  Flex\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport TwitterShareButton from '../../TwitterShareButton/TwitterShareButton.js';\nimport Confetti from 'react-confetti/dist/react-confetti';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ShareModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  closeModal = async (action) => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Share',\n        eventAction: action,\n        eventLabel: 'ShareModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n    const tweet = window.escape(this.props.tweet);\n    const customText = {__html: this.props.text};\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          {\n            this.props.confettiEnabled &&\n            <Confetti\n              style={{ position: 'fixed','zIndex':9999 }}\n              run={true}\n              recycle={true}\n              width={window.innerWidth}\n              height={window.innerHeight}\n            />\n          }\n          <ModalCard.Header title={this.props.title} icon={this.props.icon}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={3} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text color={'dark-gray'} textAlign={'center'} fontSize={3} mb={2} dangerouslySetInnerHTML={customText}></Text>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <TwitterShareButton tweet={tweet} text={'Share now'} parent={'ShareModal'} />\n              <Link mt={2} onClick={ e => this.closeModal('continue_without_sharing') } hoverColor={'blue'}>continue without sharing</Link>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ShareModal;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.props.rows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass Base extends Component {\n\n  state = {\n    loaded:false,\n    activeCoverages:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadCoverages();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadCoverages();\n    }\n  }\n\n  async loadCoverages(){\n    if (!this.props.account){\n      return false;\n    }\n\n    const coverages = await this.functionsUtil.getActiveCoverages(this.props.account);\n    const activeCoverages = [];\n    if (coverages && coverages.length>0){\n      coverages.forEach( c => {\n        if (!this.props.availableTokens || !this.props.availableTokens.length || this.props.availableTokens.includes(c.collateral)){\n          const statusColors = this.props.theme.colors.transactions.status;\n          let statusIcon = 'VerifiedUser';\n          let statusColor = statusColors.completed;\n          switch (c.status){\n            case 'Expired':\n              statusIcon = 'Error';\n              statusColor = statusColors.failed;\n            break;\n            case 'Claimed':\n              statusIcon = 'Error';\n              statusColor = statusColors.pending;\n            break;\n            default:\n            case 'Active':\n              statusIcon = 'VerifiedUser';\n              statusColor = statusColors.completed;\n            break;\n          }\n\n          const statusIconProps = {\n            color:statusColor\n          };\n\n          const portfolioCoverage = c.portfolioCoverage || 'N/A';\n\n          activeCoverages.push(Object.assign(c,{\n            statusIcon,\n            statusIconProps,\n            portfolioCoverage\n          }));\n        }\n      })\n    }\n\n    this.setState({\n      loaded:true,\n      activeCoverages\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.activeCoverages && this.state.activeCoverages.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.activeCoverages && this.state.activeCoverages.length>0 ? (\n            <CustomList\n              rows={this.state.activeCoverages}\n              handleClick={ this.props.isMobile ? (props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl) : null }\n              cols={[\n                {\n                  title:'PROTOCOL',\n                  props:{\n                    width:[0.28,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:[this.props.themeMode === 'dark' ? 'protocolImageDark' : 'protocolImage']\n                    },\n                    {\n                      type:'text',\n                      path:['protocolName'],\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.33,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:['collateralIcon']\n                    },\n                    {\n                      type:'text',\n                      path:['collateral'],\n                    }\n                  ]\n                },\n                {\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.24, 0.12],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['balance'],\n                      props:{\n                        decimals: this.props.isMobile ? 2 :  4,\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                      props:{\n                        ml:[1,2],\n                        style:{\n                          textTransform:'uppercase'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'EXPIRATION DATE',\n                  props:{\n                    width:0.19,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['expirationDate'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'COVERED FUNDS',\n                  props:{\n                    width:0.14,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['portfolioCoverage'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.15,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      name:'custom',\n                      path:['statusIcon'],\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'',\n                  mobile:false,\n                  props:{\n                    width:0.17,\n                  },\n                  parentProps:{\n                    width:1\n                  },\n                  fields:[\n                    {\n                      type:'button',\n                      name:'custom',\n                      funcProps:{\n                        label:(props) => (props.row.actionLabel),\n                        disabled:(props) => (props.row.actionDisabled)\n                      },\n                      props:{\n                        width:1,\n                        fontSize:3,\n                        fontWeight:3,\n                        height:'45px',\n                        borderRadius:4,\n                        boxShadow:null,\n                        mainColor:'redeem',\n                        size: this.props.isMobile ? 'small' : 'medium',\n                        handleClick:(props) => props.row.status!=='Expired' && props.row.actionUrl && this.functionsUtil.openWindow(props.row.actionUrl)\n                      }\n                    }\n                  ]\n                }\n              ]}\n              {...this.props}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default Base;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"twitterIcon\":\"TwitterShareButton_twitterIcon__2QCmn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n          if (!newState.width){\n            newState.width = chartHeight;\n          }\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    newState.height = newState.height || newState.width;\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n        isVisible={this.props.isVisible}\n        isInteractive={this.props.isInteractive}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","// import { Line } from '@nivo/line';\n// import CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport CustomField from '../CustomField/CustomField';\n// import SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import GenericChart from '../GenericChart/GenericChart';\n// import CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport { Image, Text, Loader, Button, Flex } from \"rimble-ui\";\n// import VariationNumber from '../VariationNumber/VariationNumber';\n// import AllocationChart from '../AllocationChart/AllocationChart';\n// import CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\n\nclass TrancheField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const trancheChanged = prevProps.tranche !== this.props.tranche;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const protocolChanged = prevProps.protocol !== this.props.protocol;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || protocolChanged || trancheChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // console.log('TrancheField - loadField',fieldName,this.componentUnmounted,this.props.protocol,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.protocol || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    // const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        default:\n          output = await this.functionsUtil.loadTrancheField(fieldName,fieldProps,this.props.protocol,this.props.token,this.props.tranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    // const tokenConfig = this.props.tokenConfig;// || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n    // const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'protocolIcon':\n        output = (\n          <Image src={`images/protocols/${this.props.protocol}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'tokenIcon':\n        output = (\n          <Image src={`images/tokens/${this.props.token}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'custom':\n        output = (\n          <CustomField\n            row={this.props}\n            fieldInfo={fieldInfo}\n          />\n        );\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = this.state[fieldInfo.name] && Object.keys(this.state[fieldInfo.name]).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n            {...fieldInfo.parentProps}\n          >\n            {\n              Object.values(this.state[fieldInfo.name]).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.4em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state[fieldInfo.name]).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TrancheField;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        case 'custom':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n    let bgColor = theme.colors.transactions.actionBg.default;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={`https://etherscan.io/tx/${transaction.hash}`}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                resolveAddress={false}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n        const tokenSymbol = transaction.tokenSymbol.toUpperCase();\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        const iconSrc = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${tokenSymbol}.svg`;\n        output = (\n          <Image src={iconSrc} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{transaction.tokenSymbol.toUpperCase()}</Text>\n        );\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.functionsUtil.getArrayPath(fieldInfo.path,this.props.transaction);\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n            customValue = null;\n          break;\n          case 'image':\n            CustomComponent = Image;\n            fieldProps.src = customValue;\n            customValue = null;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            customValue = null;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : <CustomComponent {...fieldProps} />\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds,1800);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      if (this.tokenConfig && this.tokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ENS, { getEnsAddress } from '@ensdomains/ensjs';\n\nconst ethereumjsABI = require('ethereumjs-abi');\nconst env = process.env;\n\nwindow.profiler = {};\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber( typeof s === 'object' ? s : String(s) )\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'),...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'),...props); }\n  getContractByName = (contractName) => {\n    const contract = this.props.contracts.find(c => c.name === contractName);\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g,\"\\n\")\n            .replace(/<p>/g,\"\")\n            .replace(/<br>/g,\"\")\n            .replace(/&nbsp;/g,\" \")\n            .replace(/<\\/p>/g,\"\");\n  }\n  capitalize = (str) => {\n    return str ? str.substr(0,1).toUpperCase()+str.substr(1) : '';\n  }\n  strToMoment = (date,format=null) => {\n    return moment(date,format);\n  }\n  replaceArrayProps = (arr1,arr2) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  stripHtml = (html) => {\n     var tmp = document.createElement(\"DIV\");\n     tmp.innerHTML = html;\n     return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d/2;\n      if (t < 1) return c/2*t*t + b;\n      t--;\n      return -c/2 * (t*(t-2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n        currentTime += increment;\n        var val = Math.easeInOutQuad(currentTime, start, change, duration);\n        window.scrollTo(0,val);\n        if(currentTime < duration) {\n          window.setTimeout(animateScroll, increment);\n        }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n        results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx,tokenConfig) => {\n\n    if (!tokenConfig.idle){\n      return null;\n    }\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();    \n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1 ) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx){\n      action = 'Deposit';\n    } else if (isRedeemTx){\n      action = 'Redeem';\n    } else if (isMigrationTx){\n      action = 'Migrate';\n    } else if (isSendTransferTx){\n      action = 'Send';\n    } else if (isReceiveTransferTx){\n      action = 'Receive';\n    } else if (isSwapTx){\n      action = 'Swap';\n    } else if (isSwapTx){\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  shortenHash = hash => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, 7);\n    const txEnd = shortHash.substr(shortHash.length - 4);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  }\n  getENSName = async (address) => {\n\n    const networkId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const ensConfig = this.getGlobalConfig(['network','providers','ens']);\n\n    if (!ensConfig.enabled || !ensConfig.supportedNetworks.includes(networkId)){\n      return null;\n    }\n\n    if (!this.checkAddress(address) || !this.props.web3){\n      return null;\n    }\n\n    const cachedDataKey = `getENSName_${address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const TTL = 3600;\n    const provider = this.props.web3.currentProvider;\n    if (networkId === 1){\n      const ens = new ENS({ provider, ensAddress: getEnsAddress(networkId.toString()) });\n      const ensName = await ens.getName(address);\n      if (ensName && ensName.name){\n        const addressCheck = await ens.name(ensName.name).getAddress();\n        if (addressCheck && address.toLowerCase() === addressCheck.toLowerCase()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,ensName.name,TTL);\n        }\n      }\n    }\n\n    return null;\n  }\n  getAccountPortfolioTranches = async (availableTranches=null,account=null) => {\n    const portfolio = {\n      transactions:[],\n      tranchesBalance:[],\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n    };\n\n    availableTranches = availableTranches ? availableTranches : this.props.availableTranches;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTranches){\n      return portfolio;\n    }\n\n    const tranches = this.getGlobalConfig(['tranches']);\n\n    await this.asyncForEach(Object.keys(availableTranches),async (protocol) => {\n      const protocolConfig = availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig),async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(Object.keys(tranches),async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          const trancheTokenBalance = await this.loadTrancheFieldRaw('trancheDeposited',{},protocol,token,tranche,tokenConfig,trancheConfig,account);\n          if (trancheTokenBalance){\n            const tranchePrice = await this.loadTrancheFieldRaw('lastTranchePrice',{},protocol,token,tranche,tokenConfig,trancheConfig,account);\n            const tokenBalance = trancheTokenBalance.times(tranchePrice);\n\n            if (!tranchePrice.isNaN() && !tokenBalance.isNaN()){\n              const [\n                trancheUserInfo,\n                trancheApy,\n              ] = await Promise.all([\n                this.getTrancheUserInfo(tokenConfig,trancheConfig,account),\n                this.loadTrancheFieldRaw('trancheApy',{},protocol,token,tranche,tokenConfig,trancheConfig,account),\n              ]);\n\n              const amountDeposited = trancheUserInfo.amountDeposited;\n              const trancheEarnings = tokenBalance.minus(amountDeposited);\n\n              // console.log('trancheBalance',protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(),'tranchePrice',tranchePrice.toFixed(),'tokenBalance',tokenBalance.toFixed(),'trancheApy',trancheApy.toFixed(),'amountDeposited',amountDeposited.toFixed());\n              portfolio.transactions = [...portfolio.transactions,...trancheUserInfo.transactions];\n\n              portfolio.tranchesBalance.push({\n                token,\n                tranche,\n                protocol,\n                trancheApy,\n                tranchePrice,\n                tokenBalance,\n                trancheEarnings,\n                amountDeposited, \n                trancheTokenBalance\n              });\n\n              // console.log(protocol,token,tranche,amountDeposited.toFixed(),tokenBalance.toFixed(),trancheEarnings.toFixed());\n\n              // Increment total balance\n              portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n            }\n          }\n        });\n      });\n    });\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n\n    // Calculate aggregated data\n    portfolio.tranchesBalance.forEach( trancheInfo => {\n      const trancheApy = this.BNify(trancheInfo.trancheApy);\n      const trancheWeight = trancheInfo.tokenBalance.div(portfolio.totalBalance);\n\n      // Add tranche weight\n      trancheInfo.trancheWeight = trancheWeight;\n\n      if (trancheInfo.trancheEarnings){\n        totalEarnings = totalEarnings.plus(trancheInfo.trancheEarnings);\n      }\n\n      if (trancheApy){\n        avgAPY = avgAPY.plus(trancheApy.times(trancheWeight));\n      }\n\n      if (trancheInfo.amountDeposited){\n        totalAmountLent = totalAmountLent.plus(trancheInfo.amountDeposited);\n      }\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    return portfolio;\n  }\n  getAccountPortfolio = async (availableTokens=null,account=null) => {\n    const portfolio = {\n      tokensBalance:{},\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n      totalBalanceConverted:this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens){\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const idleTokenBalance = await this.getTokenBalance(tokenConfig.idle.token,account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance,token,tokenConfig,isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()){\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach( token => {\n      if (portfolio.tokensBalance[token]){\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens,async (token) => {\n      const tokenConfig = availableTokens[token];\n      const amountDeposited = await this.getAmountDeposited(tokenConfig,account);\n\n      // console.log(token,'amountDeposited',amountDeposited.toString(),'amountLent',amountLents[token].toString());\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n      const [\n        tokenAprs\n        // tokenEarnings\n      ] = await Promise.all([\n        this.getTokenAprs(tokenConfig)\n        // this.loadAssetField('earnings',token,tokenConfig,this.props.account,false),\n      ]);\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings){\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY){\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken){\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // debugger;\n\n    return portfolio;\n  }\n  getCurveAvgSlippage = async (enabledTokens=[],account=null,fixDecimals=true) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]){\n              processedTxs[tx.hash] = {\n                price:null,\n                received:null,\n                slippage:null,\n                deposited:this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null){\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]){\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)){\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach( tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens=[],account=null) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n        \n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)){\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    enabledTokens.forEach( selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance= this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice){\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action){\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n            break;\n            default:\n            break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)){\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx){\n                firstDepositTx = tx;\n              }\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  getDashboardSectionUrl = (section) => {\n    return `${window.location.origin}/#${this.getGlobalConfig(['dashboard','baseRoute'])}/${section}`;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens=[],account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens,account);\n    if (firstDepositTxs){\n      return Object.keys(firstDepositTxs).reduce( (acc,token) => {\n        if (firstDepositTxs[token]){\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      },{});\n    }\n    return null;\n  }\n  getTrancheRewardTokensInfo = async (tokenConfig,trancheConfig) => {\n    const stakingRewards = await this.loadTrancheField('stakingRewards',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig);\n    // console.log('getTrancheTokensDistribution',stakingRewards);\n    const tokensDistribution = {};\n    await this.asyncForEach(Object.keys(stakingRewards),async (token) => {\n      const eventFilters = {\n        from:tokenConfig.CDO.address,\n        to:trancheConfig.CDORewards.address\n      }\n      const transfers = await this.getContractEvents(token,'Transfer',{fromBlock: tokenConfig.blockNumber,toBlock:'latest',filter:eventFilters});\n\n      if (transfers && transfers.length>0){\n        const previousHarvest = transfers.length>1 ? transfers[transfers.length-2] : null;\n        const latestHarvest = transfers[transfers.length-1];\n        const previousBlock = previousHarvest ? previousHarvest.blockNumber : tokenConfig.blockNumber;\n\n        const govTokenConfig = this.getGlobalConfig(['govTokens',token]);\n        const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        const [\n          prevBlockInfo,\n          lastBlockInfo,\n          conversionRate,\n          lastBlockPoolSize\n        ] = await Promise.all([\n          this.getBlockInfo(previousBlock),\n          this.getBlockInfo(latestHarvest.blockNumber),\n          this.getUniswapConversionRate(DAITokenConfig,govTokenConfig),\n          this.genericContractCallCached(tokenConfig.CDO.name,'getContractValue',[],{},latestHarvest.blockNumber)\n        ]);\n        if (prevBlockInfo && lastBlockInfo){\n          const poolSize = this.fixTokenDecimals(lastBlockPoolSize,tokenConfig.CDO.decimals);\n\n          const elapsedBlocks = latestHarvest.blockNumber-previousBlock;\n          const elapsedSeconds = lastBlockInfo.timestamp-prevBlockInfo.timestamp;\n          const transferAmount = this.fixTokenDecimals(latestHarvest.returnValues.value,govTokenConfig.decimals);\n          const tokensPerBlock = transferAmount.div(elapsedBlocks);\n          const tokensPerSecond = transferAmount.div(elapsedSeconds);\n          const tokensPerYear = tokensPerSecond.times(this.getGlobalConfig(['network','secondsPerYear']));\n          const convertedTokensPerYear = tokensPerYear.times(conversionRate);\n          const tokenApr = convertedTokensPerYear.div(poolSize);\n          const tokenApy = this.apr2apy(tokenApr);\n\n          tokensDistribution[token] = {\n            apr:tokenApr,\n            apy:tokenApy,\n            tokensPerYear,\n            tokensPerBlock,\n            tokensPerSecond,\n            convertedTokensPerYear\n          };\n        }\n      }\n    });\n\n    // console.log('tokensDistribution',tokensDistribution);\n\n    return tokensDistribution;\n  }\n  getTrancheUserInfo = async (tokenConfig,trancheConfig,account) => {\n    account = account || this.props.account;\n    const cachedDataKey = `amountDepositedTranche_${tokenConfig.token}_${trancheConfig.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const defaultEventsConfig = {to:'to',from:'from',value:'value'};\n    const underlyingEventsConfig = this.getGlobalConfig(['events',tokenConfig.token,'fields']) || defaultEventsConfig;\n\n    const underlyingEventsFilters = {};\n    underlyingEventsFilters[underlyingEventsConfig.to] = [this.props.account,tokenConfig.CDO.address];\n    underlyingEventsFilters[underlyingEventsConfig.from] = [this.props.account,tokenConfig.CDO.address];\n\n    const [\n      underlying_transfers,\n      trancheToken_transfers\n    ] = await Promise.all([\n      this.getContractEvents(tokenConfig.token,'Transfer',{fromBlock: trancheConfig.blockNumber, toBlock:'latest',filter:underlyingEventsFilters}),\n      this.getContractEvents(trancheConfig.name,'Transfer',{fromBlock: trancheConfig.blockNumber, toBlock:'latest',filter:{from:['0x0000000000000000000000000000000000000000',this.props.account],to:['0x0000000000000000000000000000000000000000',this.props.account]}})\n    ]);\n\n    // console.log('getAmountDepositedTranche',trancheConfig.name,'underlying_transfers',underlying_transfers,'trancheToken_transfers',trancheToken_transfers);\n\n    const transactions = [];\n    let avgBuyPrice = this.BNify(0);\n    let amountDeposited = this.BNify(0);\n    let totalAmountDeposited = this.BNify(0);\n\n    await this.asyncForEach(trancheToken_transfers, async (trancheTokenTransferEvent) => {\n      const tokenTransferEvent = underlying_transfers.find( t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase() );\n\n      // Skip if no tranche token transfer event found\n      if (!tokenTransferEvent){\n        return;\n      }\n\n      const tokenAmount = this.fixTokenDecimals(tokenTransferEvent.returnValues[underlyingEventsConfig.value],tokenConfig.decimals);\n      const trancheTokenAmount = this.fixTokenDecimals(trancheTokenTransferEvent.returnValues.value,trancheConfig.decimals);\n\n      // console.log('tranchePrice',trancheConfig.token,tokenAmount.toFixed(),trancheTokenAmount.toFixed(),tranchePrice.toFixed());\n      const tranchePrice = tokenAmount.div(trancheTokenAmount);\n      const blockInfo = await this.getBlockInfo(tokenTransferEvent.blockNumber);\n      const hashKey = `${trancheConfig.token}_${tokenTransferEvent.transactionHash}`;\n      const protocolConfig = this.getGlobalConfig(['stats','protocols',tokenConfig.protocol]);\n      const protocolIcon = `images/protocols/${protocolConfig.icon || `${tokenConfig.protocol}.svg`}`;\n\n      const tx = {\n        hashKey,\n        action:null,\n        tokenAmount,\n        tranchePrice,\n        protocolIcon,\n        value:tokenAmount,\n        status:'Completed',\n        token:tokenConfig.token,\n        tranche:trancheConfig.token,\n        protocol:protocolConfig.label,\n        tokenSymbol:tokenConfig.token,\n        trancheTokens:trancheTokenAmount,\n        hash:tokenTransferEvent.transactionHash,\n        blockNumber:tokenTransferEvent.blockNumber,\n        timeStamp:blockInfo ? blockInfo.timestamp : null,\n      };\n\n      // Deposit\n      if (trancheTokenTransferEvent.returnValues.from.toLowerCase() === '0x0000000000000000000000000000000000000000'){\n        avgBuyPrice = avgBuyPrice.plus(tranchePrice.times(tokenAmount));\n        amountDeposited = amountDeposited.plus(tokenAmount);\n        totalAmountDeposited = totalAmountDeposited.plus(tokenAmount);\n\n        tx.action = 'Deposit';\n        // console.log('Deposit',trancheConfig.token,tokenAmount.toFixed(),amountDeposited.toFixed(),tranchePrice.toFixed(),avgBuyPrice.toFixed());\n      // Withdraw\n      } else if (trancheTokenTransferEvent.returnValues.to.toLowerCase() === '0x0000000000000000000000000000000000000000'){\n        tx.action = 'Withdraw';\n        amountDeposited = amountDeposited.minus(tokenAmount);\n        if (amountDeposited.lt(0)){\n          avgBuyPrice = this.BNify(0);\n          amountDeposited = this.BNify(0);\n          totalAmountDeposited = this.BNify(0);\n        }\n        // console.log('Redeem',trancheConfig.token,tokenAmount.toFixed(),amountDeposited.toFixed(),avgBuyPrice.toFixed());\n      }\n\n      transactions.push(tx);\n    });\n\n    avgBuyPrice = avgBuyPrice.div(totalAmountDeposited);\n\n    // console.log(trancheConfig.token,'amountDeposited',amountDeposited.toFixed(),'avgBuyPrice',avgBuyPrice.toFixed(),'transactions',transactions);\n\n    return {\n      avgBuyPrice,\n      transactions,\n      amountDeposited\n    }\n  }\n  getTrancheUserTransactions = async (tokenConfig,trancheConfig,account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n    if (trancheUserInfo){\n      return trancheUserInfo.transactions;\n    }\n    return null;\n  }\n  getAmountDepositedTranche = async (tokenConfig,trancheConfig,account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n    if (trancheUserInfo){\n      return trancheUserInfo.amountDeposited;\n    }\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig,account) => {\n    const cachedDataKey = `amountDeposited_${tokenConfig.idle.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let [tokenBalance,userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,account),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice){\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice,tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return this.setCachedDataWithLocalStorage(cachedDataKey,amountDeposited);\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens=[],account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens,false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getEtherscanBaseTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network','firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber,firstBlockNumber);\n\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n\n    let results = [];\n    let etherscanBaseTxs = null;\n    let etherscanBaseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      etherscanBaseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      etherscanBaseTxs = this.getCachedRequest(etherscanBaseEndpoint);\n\n      if (debug){\n        console.log('DEBUG - CACHED - etherscanBaseTxs',etherscanBaseTxs);\n      }\n\n      // Check if the latest blockNumber is actually the latest one\n      if (etherscanBaseTxs && etherscanBaseTxs.data.result && Object.values(etherscanBaseTxs.data.result).length){\n\n        const lastCachedTx = Object.values(etherscanBaseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber)+1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length){\n          \n          latestTxs = await this.filterEtherscanTxs(latestTxs.data.result,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.blockNumber)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with etherscanBaseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(etherscanBaseTxs.data.result).includes(tx.hashKey);\n                if (!txFound){\n                  etherscanBaseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanBaseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        etherscanBaseTxs = null;\n      }\n\n      let txs = etherscanBaseTxs;\n\n      if (debug){\n        console.log('DEBUG - txs',txs);\n      }\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(etherscanBaseEndpoint);\n\n        // console.log('makeRequest 1',account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status)===0){\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(etherscanBaseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount<5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status)>0){\n          const timestamp = parseInt(Date.now()/1000);\n          const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          cachedRequests[etherscanBaseEndpoint] = {\n            data:txs,\n            timestamp\n          };\n          this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n      }\n\n      if (txs && txs.data && txs.data.result){\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    };\n  }\n  getCurveTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const results = await this.getEtherscanTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results,enabledTokens);\n  }\n  saveEtherscanTxs = (endpoint,txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')){\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data:{\n        result:txsToStore\n      }\n    };\n    this.saveCachedRequest(endpoint,false,cachedRequest);\n  }\n  getEtherscanTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    const {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    } = await this.getEtherscanBaseTxs(account,firstBlockNumber,endBlockNumber,enabledTokens,debug);\n\n    // Initialize prevTxs\n    let etherscanTxs = {};\n    if (etherscanBaseTxs){\n      // Filter txs for token\n      etherscanTxs = await this.processStoredTxs(results,enabledTokens);\n    } else {\n      const allAvailableTokens = Object.keys(this.props.availableTokens);\n      // Save base endpoint with all available tokens\n      etherscanTxs = await this.filterEtherscanTxs(results,allAvailableTokens);\n\n      // Store filtered txs\n      if (etherscanTxs && Object.keys(etherscanTxs).length){\n        this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanTxs);\n      }\n    }\n\n    if (debug){\n      console.log('DEBUG - getEtherscanTxs -',etherscanTxs);\n    }\n\n    return Object\n            .values(etherscanTxs)\n            .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n            .sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  filterCurveTxs = async (results,enabledTokens=[]) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter( tx => (enabledTokens.includes(tx.token) && ['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut'].includes(tx.action)) );\n\n    if (curveTxs.length){\n      curveTxs.sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  filterEtherscanTxs = async (results,enabledTokens=[],processTxs=true,processStoredTxs=true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools','tokenMigration','props','migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',tokenConfig.idle.token]);\n\n      results.forEach( tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length>1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length>0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find( iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 )) );\n        const isRedeemInternalTx = isRightToken && internalTxs.find( iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase() );\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase()) ) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 ));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length>1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase()) ).length>0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find( tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase()) ) );\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut){\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx){\n            action = 'Deposit';\n          } else if (isRedeemTx){\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx){\n            action = 'Migrate';\n          } else if (isSendTransferTx){\n            action = 'Send';\n          } else if (isReceiveTransferTx){\n            action = 'Receive';\n          } else if (isSwapTx){\n            action = 'Swap';\n          } else if (isSwapOutTx){\n            action = 'SwapOut';\n          } else if (isWithdrawTx){\n            action = 'Withdraw';\n          } else if (isCurveDepositTx){\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx){\n            action = 'CurveOut';\n          } else if (isCurveZapIn){\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut){\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn){\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut){\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn){\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut){\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx){\n            hashKey += '_'+tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value,curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)){\n              hashKey+='_'+action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()){\n            tokenDecimals = 18;\n          } else if (isCurveTx){\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]){\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action){\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx){\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value,tokenDecimals);\n                }\n              break;\n              default:\n                if (!curveTx){\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value,tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n              break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut){\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTokens = this.fixTokenDecimals(tx.value,curvePoolContract.decimals);\n                curveTransfersTxs.push({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n              }\n            } else {\n              etherscanTxs[hashKey] = ({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action){\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length>0){\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value,iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                break;\n                default:\n                break;\n              }\n            }   \n          }\n        }\n      });\n    });\n    \n    curveTransfersTxs.forEach( tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n  \n    if (processTxs){\n      etherscanTxs = await this.processEtherscanTransactions(etherscanTxs,enabledTokens,processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey,transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]){\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]){\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]){\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions',JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account=null,tokenKey=null,selectedToken=null) => {\n    const storedTxs = this.getStoredItem('transactions',true,{});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account){\n      if (storedTxs[account]){\n        output = storedTxs[account];\n        if (tokenKey){\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken){\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()){\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processEtherscanTransactions = async (etherscanTxs,enabledTokens=[],processStoredTxs=true) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object'){\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n    Object.keys(curveAvailableTokens).forEach( token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats','tokens',curveTokenConfig.baseToken]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object'){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = {...storedTxs[this.props.account][tokenKey]};\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        await this.asyncForEach(filteredTxs,async (tx,index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n          \n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()){\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig,tx.blockNumber,tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash){\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action){\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n            break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount){\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n            break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n            break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n            break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n            break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount){\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length-1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x','').toLowerCase()}` ) );\n\n                  this.customLog('filteredLogs',filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length){\n                    filteredLogs.forEach( log => {\n                      let tokenAmount = parseInt(log.data,16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount ('+tx.hash+')',baseTokensConfig.token,tokenAmount.toFixed(5),storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n            break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens){\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n                  const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (log.address.toLowerCase()===idleTokenAddress ) );\n                  if (filteredLogs && filteredLogs.length){\n                    idleTokens = parseInt(filteredLogs[0].data,16);\n                    idleTokens = this.fixTokenDecimals(idleTokens,idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n            break;\n            default:\n            break;\n          }\n            \n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs){\n        etherscanTxs = await this.processStoredTxs(etherscanTxs,[selectedToken],this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs,enabledTokens=[],txsToProcess=null) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions',true,{})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]){\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({},etherscanTxs);\n\n    const networkId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account,tokenKey,selectedToken);\n      \n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess),async (txKey,i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))){\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken:'Deposit',\n          redeemIdleToken:'Redeem',\n          migrateFromToIdle:'Migrate',\n          mintIdleTokensProxy:'Deposit',\n          migrateFromAaveToIdle:'Migrate',\n          migrateFromIearnToIdle:'Migrate',\n          executeMetaTransaction:'Migrate',\n          migrateFromFulcrumToIdle:'Migrate',\n          migrateFromCompoundToIdle:'Migrate',\n        };\n        const pendingStatus = ['pending','started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice){\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length){\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status:'Pending',\n            token:selectedToken,\n            action:allowedMethods[tx.method],\n            timeStamp:parseInt(tx.created/1000),\n            hash:txHash ? tx.transactionHash : null,\n            tokenSymbol:isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0],decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed){\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx){\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise( async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash,(err,txReceipt)=>{\n              if (err){\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())){\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig,realTx.blockNumber,realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created/1000);\n\n        let txValue = null;\n        switch (tx.method){\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()){\n              // Remove wrong contract tx\n              if (isStoredTx){\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0],tokenConfig.decimals).toString() : 0;\n            if (!txValue){\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n          break;\n          case 'redeemIdleToken':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice){\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0],18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n          break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt){\n              executeMetaTransactionReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract','deposit','proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo){\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x','').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length){\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data,16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data,16) : null;\n\n            if (!metaTxValue){\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue,tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n          break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract){\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt){\n              migrationTxReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x','');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x','');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length>=3 && tx.topics[tx.topics.length-2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length){\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ],migrationInternalTransfer.data,migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token){\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue,tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n          break;\n          default:\n          break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx){\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint,alias=false,data) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    const timestamp = parseInt(Date.now()/1000);\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress',false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress',customAddress);\n  }\n  getCachedRequest = (endpoint,alias=false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]){\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  makeRequest = async(endpoint,error_callback=false,config=null) => {\n    const data = await axios\n                  .get(endpoint,config)\n                  .catch(err => {\n                    if (typeof error_callback === 'function'){\n                      error_callback(err);\n                    }\n                  });\n    return data;\n  }\n  makeEtherscanApiRequest = async (endpoint,keys=[],TTL=120,apiKeyIndex=0) => {\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[endpoint] && cachedRequests[endpoint].timestamp && timestamp-cachedRequests[endpoint].timestamp<TTL){\n      return cachedRequests[endpoint].data;\n    }\n\n    const apiKey = keys[apiKeyIndex];\n    const data = await this.makeRequest(endpoint+'&apikey='+apiKey);\n\n    // console.log('makeEtherscanApiRequest',endpoint+'&apikey='+apiKey,apiKeyIndex+'/'+keys.length,data,(data.data ? data.data.message : null),apiKeyIndex<keys.length-1);\n\n    if (data && data.data && data.data.message === 'OK'){\n      cachedRequests[endpoint] = {\n        data,\n        timestamp\n      };\n      this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n      return data;\n    } else if (apiKeyIndex<keys.length-1) {\n      return await this.makeEtherscanApiRequest(endpoint,keys,TTL,apiKeyIndex+1);\n    }\n    return null;\n  }\n  makeCachedRequest = async (endpoint,TTL=60,return_data=false,alias=false,config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp-cachedRequests[key].timestamp<TTL){\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makeRequest(endpoint,false,config);\n\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)){\n      const errorCode = parseInt(error.code);\n      switch (errorCode){\n        case 4001:\n          output = 'denied';\n        break;\n        default:\n          output = `error_${errorCode}`;\n        break;\n      }\n    } else if (error.message){\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path,array) => {\n    if (!array){\n      return null;\n    }\n    path = Object.assign([],path);\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path,array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path,configs=false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return configs[prop] ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path,configs[prop]);\n      }\n    }\n    return null;\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsPageview = async (page=null) => {\n    page = page || window.location.hash.substr(1);\n    const googlePageviewInfo = this.getGlobalConfig(['analytics','google','pageView']);\n    const isOrigin = this.checkUrlOrigin();\n    if (googlePageviewInfo.enabled && isOrigin && window.ga){\n      window.ga('set', 'page', page);\n      window.ga('send', 'pageview');\n    }\n  }\n  sendGoogleAnalyticsEvent = async (eventData,callback=null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && ( debugEnabled || originOk)){\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet){\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1){\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n        // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise( async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function'){\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function'){\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\",name,address,error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider=null) => {\n    return this.getStoredItem('walletProvider',false,defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo,simpleID) => {\n    if (!userInfo.address && this.props.account){\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider){\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email){\n      delete userInfo.email;\n    }\n    if (!userInfo.address){\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID){\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (txHash) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const baseurl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',requiredNetwork]);\n    return txHash ? `${baseurl}/tx/${txHash}` : null;\n  }\n  getEtherscanAddressUrl = (address) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const baseurl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',requiredNetwork]);\n    return address ? `${baseurl}/address/${address}` : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly=false) => {\n\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network','providers','snapshot','whitelist']).map( addr => addr.toLowerCase() );\n    const endpoint = this.getGlobalConfig(['network','providers','snapshot','endpoints','proposals']);\n    let proposals = await this.makeCachedRequest(endpoint,1440,true);\n\n    // console.log('getSnapshotProposals',proposals);\n\n    if (proposals && !proposals.error){\n      proposals = Object.values(proposals);\n\n      const currTime = parseInt(Date.now()/1000);\n      if (activeOnly){\n        proposals =  proposals.filter( p => (p.msg.payload.start<=currTime && p.msg.payload.end>currTime) );\n      }\n\n      // console.log(proposals);\n\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        // Add proposal if ended\n        if (p.msg.payload.end<=currTime || whitelist.includes(p.address.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.msg.payload.snapshot;\n\n          let checkedStrategies = false;\n          await this.asyncForEach( p.msg.payload.metadata.strategies, async (s) => {\n            if (checkedStrategies){\n              return;\n            }\n            if (s.name==='erc20-balance-of'){\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract){\n                const tokenBalance = await this.getTokenBalance(tokenName,p.address,true,blockNumber);\n                // console.log(p.relayerIpfsHash,p.address,s.name,tokenBalance ? tokenBalance.toFixed() : null);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)){\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n\n            // console.log(p.relayerIpfsHash,p.address,s.name,checkedStrategies);\n          });\n          \n          // Add proposal is passed token balances check\n          if (checkedStrategies){\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey,validProposals);\n    }\n\n  }\n  getTokenApiData = async (address,isRisk=null,startTimestamp=null,endTimestamp=null,forceStartTimestamp=false,frequency=null,order=null,limit=null) => {\n    if (globalConfigs.network.requiredNetwork!==1 || !globalConfigs.stats.enabled){\n      return [];\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData){\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter( c => ( (c.startTimestamp===null || (startTimestamp && c.startTimestamp<=startTimestamp)) && (c.endTimestamp===null || (endTimestamp && c.endTimestamp>=endTimestamp)) ) )\n\n      if (filteredCachedData && filteredCachedData.length>0){\n        const filteredData = filteredCachedData.pop().data;\n        if (filteredData){\n          return filteredData.filter( d => ((!startTimestamp || d.timestamp>=startTimestamp) && (!endTimestamp || d.timestamp<=endTimestamp)) );\n        }\n        return null;\n      }\n    // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    let endpoint = `${apiInfo.endpoint}${address}`;\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null){\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)){\n        if (forceStartTimestamp){\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp-(60*60*24*2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)){\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null){\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)){\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null){\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)){\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length){\n        endpoint += '?'+params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    let output = await this.makeRequest(endpoint,false,config);\n    if (!output){\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null){\n      filteredData = data.filter( d => ( d.isRisk === isRisk ) );\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data:filteredData,\n    });\n\n    this.setCachedData(cachedDataKey,cachedData);\n\n    return data;\n  }\n  getTokenExchangeRate = async (contractName,exchangeRateParams) => {\n    const cachedDataKey = `exchangeRate_${contractName}_${exchangeRateParams.name}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const exchangeRate = await this.genericContractCall(contractName,exchangeRateParams.name,exchangeRateParams.params);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,exchangeRate,null);\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName || this.props.selectedToken;\n\n    if (!contractName){\n      return false;\n    }\n\n    const cachedDataKey = `contractDecimals_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const tokenConfig = this.getGlobalConfig(['stats','tokens',contractName]);\n    const decimals = tokenConfig && tokenConfig.decimals ? tokenConfig.decimals : await this.genericContractCall(contractName,'decimals');\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,decimals,null);\n  }\n  getAvgApr = (aprs,allocations,totalAllocation) => {\n    if (aprs && allocations && totalAllocation){\n      let avgApr = Object.keys(aprs).reduce((aprWeighted,protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      },0);\n\n      if (avgApr){\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency,quantity=1) => {\n    const frequency_seconds = {\n      hour:3600,\n      day:86400,\n      week:604800\n    };\n    return frequency_seconds[frequency]*quantity;\n  }\n  getIdleStakingRewardsTxs = async () => {\n    const idleTokenConfig = this.getGlobalConfig(['govTokens','IDLE']);\n    const feeDistributorConfig = this.getGlobalConfig(['tools','stake','props','availableTokens','IDLE','feeDistributor']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    const etherscanApiUrl = etherscanInfo.endpoints[1];\n    const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${feeDistributorConfig.address}&sort=desc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(etherscanEndpoint,etherscanInfo.keys,3600);\n    // console.log('getIdleStakingRewardsTxs',etherscanEndpoint,etherscanTxlist);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function'){\n      return etherscanTxlist.data.result.filter( tx => (tx.contractAddress.toLowerCase() === idleTokenConfig.address.toLowerCase() && tx.to.toLowerCase() === feeDistributorConfig.address.toLowerCase() && this.BNify(tx.value).gt(0) ));\n    }\n    return [];\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance,tokenDecimals,round=true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance,tokenDecimals,exchangeRate=null) => {\n    if (!tokenDecimals){\n      return this.BNify(tokenBalance);\n    }\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()){\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName=null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCallCached(contractName, 'paused').catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key,parse_json=true,return_default=null) => {\n    let output = return_default;\n    if (window.localStorage){\n      const item = localStorage.getItem(key);\n      if (item){\n        output = item;\n        if (parse_json){\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output){\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys=[]) => {\n    if (window.localStorage){\n\n      if (!excludeKeys || !excludeKeys.length){\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i=0;i<window.localStorage.length;i++){\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)){\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage){\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key,value,stringify=false) => {\n    if (window.localStorage){\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key,value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig){\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length){\n      return false;\n    }\n\n    for (let protocolIndex=0;protocolIndex<allocations.length;protocolIndex++){\n      const lastAllocationsPromise = new Promise( async (resolve, reject) => {\n        try {\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations',[protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error) {\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations){\n      return true;\n    }\n\n    const diff = allocations.filter( (alloc,index) => alloc !== newAllocations[index] );\n\n    return diff.length>0;\n  }\n  checkMigration = async (tokenConfig,account) => {\n\n    if (!tokenConfig || !account){\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled){\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract){\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName,account);\n\n        if (oldContractBalance){\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  getContractEvents = async (contractName, eventName, params = {}) => {\n    return await this.getContractPastEvents(contractName, eventName, params);\n  }\n\n  estimateMethodGasUsage = async (contractName, methodName, methodParams = [], account = null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n    const contract = this.getContractByName(contractName);\n    if (contract && contract.methods[methodName]){\n      const functionCall = contract.methods[methodName](...methodParams);\n\n      let gasPrice = null;\n      let gasLimit = null;\n      \n      try {\n        [\n          gasPrice,\n          gasLimit\n        ] = await Promise.all([\n          this.props.web3.eth.getGasPrice(),\n          functionCall.estimateGas({from: account})\n        ]);\n      } catch (error) {\n\n      }\n\n      if (gasPrice && gasLimit){\n        return this.fixTokenDecimals(this.fixTokenDecimals(gasPrice,9).times(gasLimit),9);\n      }\n    }\n\n    return this.BNify(0);\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function(hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function(confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\",receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null,error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\",\"address\",\"uint256\",\"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network','providers','biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`,null,{\n      headers:{\n        'x-api-key':biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data){\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName,methodName,methodParams,nonce,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]){\n      callback(null,'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try{\n      const userAddress = this.props.account;\n      const chainId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null,error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName,tokenAddress,permitType,callData,gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      return false;\n    }\n\n    // console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    const buildParams = {\n      permitType,\n      data:callData,\n      token:tokenAddress,\n      to:contract._address,\n      txGas:parseInt(gasLimit)\n    };\n\n    // console.log('buildBiconomyErc20ForwarderTx',buildParams);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx(buildParams);\n\n    return tx;\n  }\n\n  getTransactionReceipt = async (hash) => {\n    return await (new Promise( async (resolve, reject) => {\n      this.props.web3.eth.getTransactionReceipt(hash,(err,tx)=>{\n        if (err){\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req,metaInfo,callback,callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({req,metaInfo});\n      transactionHash = txResponse.txHash;\n      // console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      // console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null,true);\n      return false;\n    }\n\n    if (!transactionHash){\n      // console.log('!transactionHash ERROR');\n      callback(null,true);\n      return false;\n    }\n    \n    const tx = {\n      method:'mintIdleToken',\n      transactionHash\n    };\n    // console.log('sendBiconomyTxWithErc20Forwarder - TX',tx);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(()=> {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt)=> {\n        // console.log('sendBiconomyTxWithErc20Forwarder - RECEIPT',transactionHash,err,receipt);\n        if(!err && receipt){\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx,err);\n\n          if (typeof window.updateTransaction === 'function'){\n            window.updateTransaction(tx,transactionHash,tx.status,null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName,functionSignature,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    try{\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce=0, value=null) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit',baseContractName]);\n\n    // console.log('permitConfig',permitConfig);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = permitConfig.nonceMethod ? await baseContract.methods[permitConfig.nonceMethod](holder).call() : null;\n    if (addToNonce>0){\n      nonce = parseInt(nonce)+parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion){\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        value = value || this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n      break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n      break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit=null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters){\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find( f => f.name === methodName );\n      const useNonce = methodAbi ? methodAbi.inputs.find( i => i.name === 'nonce' ) : true;\n      if (!isNaN(parseInt(nonce)) && useNonce){\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null,'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName,contractAddress,functionSignature,callback,callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null,error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n            \n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName,contractAddr,walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName,walletAddr,false),\n      this.getAllowance(contractName,contractAddr,walletAddr)\n    ]);\n    this.customLog('checkTokenApproved',contractName,this.BNify(allowance).toFixed(),this.BNify(balance).toFixed(),(allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName,contractAddr,walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr){\n      return false;\n    }\n    this.customLog('getAllowance',contractName,contractAddr,walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapperWithValue = (contractName,methodName,params,value,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, value, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  contractMethodSendWrapper = (contractName,methodName,params,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  disableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  getTrancheStakedBalance = async (contractName,walletAddr,decimals=null) => {\n    // Check for cached data\n    const cachedDataKey = `trancheStakedBalance_${contractName}_${walletAddr}_${decimals}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let stakedBalance = await this.genericContractCall(contractName,'usersStakes',[walletAddr]);\n    if (stakedBalance){\n      if (decimals){\n        stakedBalance = this.fixTokenDecimals(stakedBalance,decimals);\n      }\n      stakedBalance = this.BNify(stakedBalance);\n\n      if (!stakedBalance.isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,stakedBalance,30);\n      }\n    }\n    return this.BNify(0);\n  }\n  loadTrancheFieldRaw = async (field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens=true) => {\n    return await this.loadTrancheField(field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,false);\n  }\n  loadTrancheField = async (field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account=null,addGovTokens=true,formatValue=true) => {\n    let output = null;\n    const maxPrecision = (fieldProps && fieldProps.maxPrecision) || 5;\n    const decimals = (fieldProps && fieldProps.decimals) || (this.props.isMobile ? 2 : 3);\n    const minPrecision = (fieldProps && fieldProps.minPrecision) || (this.props.isMobile ? 3 : 4);\n    const tokenName = this.getGlobalConfig(['stats','tokens',token,'label']) || this.capitalize(token);\n\n    switch (field){\n      case 'protocolName':\n        output = (this.getGlobalConfig(['stats','protocols',protocol,'label']) || this.capitalize(protocol)).toUpperCase();\n      break;\n      case 'tokenName':\n        output = tokenName;\n      break;\n      case 'pool':\n        let poolSize = await this.genericContractCallCached(tokenConfig.CDO.name,'getContractValue');\n        if (poolSize){\n          output = this.fixTokenDecimals(poolSize,tokenConfig.CDO.decimals);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision);\n          }\n        }\n      break;\n      case 'seniorPool':\n        output = await this.loadTrancheField(`tranchePool`,fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.AA,account,addGovTokens);\n      break;\n      case 'juniorPool':\n        output = await this.loadTrancheField(`tranchePool`,fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.BB,account,addGovTokens);\n      break;\n      case 'seniorApy':\n        output = await this.loadTrancheField(`trancheApy`,fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.AA,account,addGovTokens);\n      break;\n      case 'juniorApy':\n        output = await this.loadTrancheField(`trancheApy`,fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.BB,account,addGovTokens);\n      break;\n      case 'tranchePool':\n        let tranchePool = await this.genericContractCallCached(tokenConfig.CDO.name,'virtualBalance',[trancheConfig.address]);\n        // console.log('tranchePool',tokenConfig,trancheConfig,output);\n        if (tranchePool){\n          output = this.fixTokenDecimals(tranchePool,tokenConfig.CDO.decimals);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` ${tokenName}`;\n          }\n        }\n      break;\n      case 'trancheDeposited':\n        const deposited = await this.getAmountDepositedTranche(tokenConfig,trancheConfig,account);\n\n        output = output || this.BNify(0);\n        // staked = staked || this.BNify(0);\n\n        output = this.BNify(deposited);\n        if (output.gt(0)){\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` ${tokenName}`;\n          }\n        } else {\n          output = formatValue ? '-' : null;\n        }\n      break;\n      case 'lastTranchePrice':\n        output = await this.genericContractCall(tokenConfig.CDO.name,'lastTranchePrice',[trancheConfig.address]);\n        if (output){\n          output = this.fixTokenDecimals(output,trancheConfig.decimals);\n        }\n      break;\n      case 'trancheStaked':\n        let [\n          staked1,\n          lastPrice1\n        ] = await Promise.all([\n          this.getTrancheStakedBalance(trancheConfig.CDORewards.name,account,trancheConfig.CDORewards.decimals),\n          this.loadTrancheField(`lastTranchePrice`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (staked1 && lastPrice1){\n          output = this.BNify(staked1).times(lastPrice1);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` ${tokenName}`;\n          }\n        }\n      break;\n      case 'trancheRedeemable':\n        let [\n          deposited1,\n          lastPrice\n        ] = await Promise.all([\n          this.getTokenBalance(trancheConfig.name,account),\n          this.loadTrancheField(`lastTranchePrice`,fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.AA,account,addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (deposited1 && lastPrice){\n          output = this.BNify(deposited1).times(lastPrice);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` ${tokenName}`;\n          }\n        }\n      break;\n      case 'trancheApy':\n        let trancheApy = await this.genericContractCallCached(tokenConfig.CDO.name,'getApr',[trancheConfig.address]);\n        // console.log('trancheApy',tokenConfig,trancheConfig,output);\n        if (trancheApy){\n          output = this.fixTokenDecimals(trancheApy,tokenConfig.CDO.decimals);\n          if (formatValue){\n            output = output.toFixed(2)+'%';\n          }\n        }\n      break;\n      case 'trancheIDLEDistribution':\n        const idleGovTokenConfig = this.getGlobalConfig(['govTokens','IDLE']);\n        const rewardsTokensInfo = await this.getTrancheRewardTokensInfo(tokenConfig,trancheConfig);\n        if (rewardsTokensInfo && rewardsTokensInfo.IDLE){\n          output = this.fixDistributionSpeed(rewardsTokensInfo.IDLE.tokensPerSecond,idleGovTokenConfig.distributionFrequency);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` IDLE/${idleGovTokenConfig.distributionFrequency}`\n          }\n          // console.log('trancheIDLEDistribution',rewardsTokensInfo.IDLE,output);\n        }\n      break;\n      case 'AAIDLEDistribution':\n        output = this.abbreviateNumber('1234',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'BBIDLEDistribution':\n        output = this.abbreviateNumber('4321',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = {};\n        const [\n          rewardsTokens,\n          incentiveTokens\n        ] = await Promise.all([\n          this.genericContractCall(tokenConfig.CDO.name,'getRewards'),\n          this.genericContractCall(tokenConfig.CDO.name,'getIncentiveTokens')\n        ]);\n\n        const govTokens = field === 'govTokens' ? rewardsTokens : (field === 'autoFarming' ? rewardsTokens.filter( rewardTokenAddr => !incentiveTokens.map( addr => addr.toLowerCase() ).includes(rewardTokenAddr.toLowerCase()) ) : incentiveTokens);\n\n        // console.log(field,tokenConfig,rewardsTokens,incentiveTokens,govTokens);\n\n        if (govTokens){\n          govTokens.forEach( govTokenAddress => {\n            const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n            if (govTokenConfig && !govTokenConfig.enabled){\n              return;\n            }\n            output[govTokenConfig.token] = govTokenConfig;\n          });\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('loadTrancheField',field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,formatValue);\n\n    return output;\n  }\n  loadAssetField = async (field,token,tokenConfig,account,addGovTokens=true,addCurveApy=false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies',this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined'){\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken){\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig){\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)){\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field){\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([],account),\n          this.getCurveTokenBalance(account,true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance){\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage){\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n      break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1,redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)){\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n      break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n      break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n      break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n      break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy',token,tokenConfig,account),\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve){\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n      break;\n      case 'earningsPerc':\n        let [amountLent1,redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)){\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n      break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp',token,tokenConfig,account);\n        if (depositTimestamp){\n          const currTimestamp = parseInt(Date.now()/1000);\n          output = (currTimestamp-depositTimestamp)/86400;\n        }\n      break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig,addGovTokens);\n        }\n      break;\n      case 'userDistributionSpeed':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'stkAAVE':\n            output = await this.getStkAaveUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account,govTokenAvailableTokens);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n          if (output){\n            output = this.fixDistributionSpeed(output,tokenConfig.distributionFrequency,tokenConfig.distributionMode);\n          }\n        }\n      break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance','props','tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens',tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output){\n\n          output = this.fixTokenDecimals(output,govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency){\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n            break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n            break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n            break;\n            case 'year':\n              output = output.times(blocksPerYear);\n            break;\n            default:\n            break;\n          }\n        }\n      break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token){\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n          break;\n          case 'stkAAVE':\n            output = await this.getStkAaveDistribution(selectedTokenConfig);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n        }\n      break;\n      case 'apr':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n          break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n            if (tokenAprs && tokenAprs.avgApr !== null){\n              output = tokenAprs.avgApr;\n            }\n          break;\n        }\n      break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n\n        // console.log('apr',token,tokenApys.avgApr ? tokenApys.avgApr.toFixed() : null,tokenApys.avgApy ? tokenApys.avgApy.toFixed() : null);\n\n        output = this.BNify(0);\n\n        if (tokenApys && !this.BNify(tokenApys.avgApy).isNaN()){\n          output = this.BNify(tokenApys.avgApy);\n\n          if (addCurveApy){\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY){\n              output = output.plus(curveAPY);\n            }\n          }\n        } else {\n\n        }\n\n        // console.log('apy - OUTPUT - ',output);\n      break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token],account),\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]){\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig,firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n      break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account),\n          this.loadAssetField('earningsPerc',token,tokenConfig,account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc){\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n      break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token],account) : false;\n        if (depositTimestamps && depositTimestamps[token]){\n          output = depositTimestamps[token];\n        }\n      break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig,account) : false;\n        // console.log('amountLent - OUTPUT - ',output);\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n      break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig,govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()){\n            output = '-';\n          }\n        } else {\n          output = await this.getTokenPrice(tokenConfig.idle.token);\n        }\n      break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig,account);\n      break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getTokenBalance(token,account);\n          if (!output || output.isNaN()){\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token,account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()){\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n      break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token,account) : false;\n        if (idleTokenBalance){\n          output = idleTokenBalance;\n        }\n      break;\n      case 'redeemableBalanceCounter':\n\n        // console.log('redeemableBalanceCounter - BEFORE',token,tokenConfig,account);\n\n        let [tokenAPY1,amountLent2,redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy',token,tokenConfig,account,false),\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false),\n        ]);\n\n        // console.log('redeemableBalanceCounter - CALL - ',tokenAPY1,amountLent2,redeemableBalanceStart);\n\n        // debugger;\n\n        let redeemableBalanceEnd = redeemableBalanceStart;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2){\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n\n        // console.log('redeemableBalanceCounter - OUTPUT',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd),output);\n      break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig,account,govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance',token,tokenConfig,account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account,govTokenAvailableTokens,token) : null,\n          ]);\n\n          // console.log('redeemableBalance - BEFORE - ',idleTokenBalance2,idleTokenPrice1);\n\n          if (idleTokenBalance2 && idleTokenPrice1){\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()){\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n          // console.log('redeemableBalance - OUTPUT - ',output);\n        }\n      break;\n      case 'earningsCurve':\n        let [amountLentCurve2,redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (!amountLentCurve2){\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1){\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n      break;\n      case 'earnings':\n        let [amountLent,redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (!amountLent){\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2){\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))){\n          output = this.BNify(0);\n        }\n      break;\n      default:\n      break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken,blockNumber='latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.getTokenTotalSupply(idleToken,blockNumber);\n    if (idleTokenSupply){\n      idleTokenSupply = this.BNify(idleTokenSupply);\n      return this.setCachedDataWithLocalStorage(cachedDataKey,idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig,account,blockNumber='latest') => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n    \n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))){\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig,blockNumber='latest',timestamp=false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    // if (blockNumber !== 'latest'){\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n    // }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCallCached(tokenConfig.idle.token,'tokenPrice',[],{},blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp){\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp)-(60*60);\n      const endTimestamp = parseInt(timestamp)+(60*60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,endTimestamp,true);\n\n      let beforePrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      let afterPrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      tokenData.forEach( d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp)-parseInt(timestamp));\n        if (parseInt(d.timestamp)<parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff<beforePrice.timeDiff)){\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp)>parseInt(timestamp) && !afterPrice.timeDiff){\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data){\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()){\n      tokenPrice = this.fixTokenDecimals(tokenPrice,decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)){\n      tokenPrice = this.BNify(1);\n    }\n\n    // if (blockNumber !== 'latest'){\n      this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice);\n    // }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = () => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function'){\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData();\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 3 minutes\n  */\n  setCachedData = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL,true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key,defaultValue=null) => {\n    return this.getCachedData(key,defaultValue,true);\n  }\n  getCachedData = (key,defaultValue=null,useLocalStorage=false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[key]){\n      cachedData = this.props.cachedData[key];\n    // Get cache from local storage\n    } else if (useLocalStorage) {\n      cachedData = this.getStoredItem('cachedData');\n      if (cachedData && cachedData[key]){\n        cachedData = cachedData[key];\n      } else {\n        cachedData = null;\n      }\n    }\n\n    const cachedDataValid = cachedData && cachedData.data && (cachedData.expirationDate === null || cachedData.expirationDate>=parseInt(Date.now()/1000));\n\n    // if (!cachedDataValid){\n    //   console.log('getCachedData - NOT VALID - ',key,(cachedData ? cachedData.expirationDate-parseInt(Date.now()/1000) : null));\n    // }\n\n    if (cachedDataValid){\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr,tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,walletAddr,false),\n      this.getTokenTotalSupply(tokenConfig.idle.token)\n    ]);\n\n    let userShare = this.BNify(0);\n    if (this.BNify(idleTokensBalance).gt(0) && this.BNify(idleTokensTotalSupply).gt(0)){\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url,'_blank','noopener');\n  }\n  getActiveCoverages = async (account=null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account){\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now()/1000);\n\n    const coverProtocolConfig = this.getGlobalConfig(['tools','coverProtocol']);\n    if (coverProtocolConfig.enabled){\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name,account);\n        if (balance && balance.gt(0)){\n          const actionLabel = 'File Claim';\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const actionUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp<=currTimestamp ? 'Expired' : 'Active';\n          const actionDisabled = status === 'Expired';\n          const expirationDate = moment(coverage.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            actionUrl,\n            collateral,\n            actionLabel,\n            protocolName,\n            protocolImage,\n            expirationDate,\n            actionDisabled\n          });\n        }\n      });\n    }\n    const nexusMutualConfig = this.getGlobalConfig(['tools','nexusMutual']);\n    if (nexusMutualConfig.enabled){\n      const nexusMutualCoverages = await this.getNexusMutualCoverages(account);\n      nexusMutualCoverages.forEach( coverage => {\n        const actionLabel = 'Claim';\n        const balance = coverage.sumAssured;\n        const token = coverage.coverAssetConfig.token;\n        const collateral = coverage.yieldTokenConfig.token;\n        const portfolioCoverage = coverage.portfolioCoverage;\n        const collateralIcon = `images/tokens/${collateral}.svg`;\n        const actionDisabled = !coverage.incident && !coverage.claimId;\n        const protocolName = this.getGlobalConfig(['insurance','nexusMutual','label']);\n        const protocolImage = this.getGlobalConfig(['insurance','nexusMutual','image']);\n        const protocolImageDark = this.getGlobalConfig(['insurance','nexusMutual','imageDark']);\n        const expirationDate = moment(coverage.coverDetails.validUntil*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const status = coverage.claimId ? 'Claimed' : parseInt(coverage.coverDetails.validUntil)<=currTimestamp ? 'Expired' : 'Active';\n        const actionUrl = `${window.location.origin}/#${this.getGlobalConfig(['dashboard','baseRoute'])}/tools/${nexusMutualConfig.route}/${coverage.yieldTokenConfig.token}/claim`;\n        activeCoverages.push({\n          token,\n          status,\n          balance,\n          actionUrl,\n          collateral,\n          actionLabel,\n          protocolName,\n          protocolImage,\n          expirationDate,\n          actionDisabled,\n          collateralIcon,\n          portfolioCoverage,\n          protocolImageDark\n        });\n      });\n    }\n\n    return activeCoverages;\n  }\n  getNexusMutualCoverages = async (account) => {\n    const nexusMutualConfig = this.getGlobalConfig(['tools','nexusMutual']);\n\n    const fromBlock = nexusMutualConfig.directProps.startBlock;\n    const feeDistributorConfig = nexusMutualConfig.directProps.contractInfo;\n    const incidentsInfo = nexusMutualConfig.directProps.incidentsInfo;\n    \n    await Promise.all([\n      this.props.initContract(incidentsInfo.name,incidentsInfo.address,incidentsInfo.abi),\n      this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi),\n    ]);\n\n    const [\n      coverBoughtEvents,\n      claimSubmittedEvents,\n    ] = await Promise.all([\n       this.getContractEvents(feeDistributorConfig.name,'CoverBought',{fromBlock, toBlock:'latest',filter:{buyer:account}}),\n       this.getContractEvents(feeDistributorConfig.name,'ClaimSubmitted',{fromBlock, toBlock:'latest',filter:{buyer:account}})\n    ]);\n\n    const nexusMutualCoverages = [];\n\n    await this.asyncForEach(coverBoughtEvents,async (cover) => {\n    // coverBoughtEvents.forEach( cover => {\n      const coverId = parseInt(cover.returnValues.coverId);\n      const claimSubmittedEvent = claimSubmittedEvents.find( claim => parseInt(claim.returnValues.coverId)===coverId );\n      const [\n        coverDetails,\n        incidentEvents\n      ] = await Promise.all([\n        this.genericContractCall(feeDistributorConfig.name,'getCover',[coverId]),\n        this.getContractEvents(incidentsInfo.name,'IncidentAdded',{fromBlock:cover.blockNumber, toBlock:'latest',filter:{productId:cover.contractAddress}})\n      ]);\n\n      if (!coverDetails){\n        return false;\n      }\n\n      // Check if the cover matches any incidents\n      const matchedIncidents = incidentEvents.filter(incident => {\n        return incident.returnValues.productId === coverDetails.contractAddress &&\n        this.BNify(incident.blockNumber).gt(cover.blockNumber)  &&\n        this.BNify(incident.returnValues.incidentDate).lt(coverDetails.validUntil) &&\n        parseInt(coverDetails.validUntil) + nexusMutualConfig.directProps.yieldTokenCoverGracePeriod >= Date.now() / 1000\n      });\n\n      // If multiple incidents match, return the one with the highest priceBefore\n      const matchedIncident = matchedIncidents.reduce((prev, curr) => {\n        if (!prev) {\n          return curr;\n        }\n\n        if (this.BNify(curr.returnValues.priceBefore).gt(prev.returnValues.priceBefore)) {\n          return curr;\n        }\n        return prev;\n      }, null);\n\n      const yieldTokenConfig = Object.values(nexusMutualConfig.props.availableTokens).find( tokenConfig => tokenConfig.address.toLowerCase() === coverDetails.contractAddress.toLowerCase() );\n      const sumAssured = this.fixTokenDecimals(coverDetails.sumAssured,yieldTokenConfig.decimals);\n      const coverAssetConfig = Object.values(yieldTokenConfig.underlying).find( underlyingConfig => underlyingConfig.address.toLowerCase() === coverDetails.coverAsset.toLowerCase() );\n      const expiryDate = this.strToMoment(coverDetails.validUntil*1000).format('YYYY-MM-DD');\n\n      const claimId = claimSubmittedEvent ? claimSubmittedEvent.returnValues.claimId : null;\n      const payoutOutcome = await this.genericContractCall(feeDistributorConfig.name,'getPayoutOutcome',[claimId]);\n      const label = `${yieldTokenConfig.name} - ${sumAssured.toFixed(4)} ${coverAssetConfig.token} - Exp. ${expiryDate}`;\n      const value = coverId;\n\n      let claimedAmount = null;\n      if (claimSubmittedEvent){\n        const claimTxReceipt = await this.getTransactionReceipt(claimSubmittedEvent.transactionHash);\n        const claimedAmountLog = claimTxReceipt ? claimTxReceipt.logs.find( log => log.address.toLowerCase() === coverAssetConfig.address.toLowerCase() ) : null;\n        claimedAmount = claimedAmountLog ? this.fixTokenDecimals(parseInt(claimedAmountLog.data,16),coverAssetConfig.decimals) : this.BNify(0);\n      }\n\n      const claimableAmount = this.fixTokenDecimals(coverDetails.sumAssured,coverAssetConfig.decimals);\n\n      const claimablePrice = matchedIncident ? this.BNify(matchedIncident.returnValues.priceBefore).times(0.9) : this.BNify(0);\n      const maxCoveredAmount = claimablePrice.gt(0) ? this.BNify(coverDetails.sumAssured).div(claimablePrice) : this.BNify(0);\n      const coveredTokenAmount = this.normalizeTokenAmount(maxCoveredAmount,coverAssetConfig.decimals);\n\n      let [\n        tokenPrice,\n        idleTokenBalance\n      ] = await Promise.all([\n        this.getTokenPrice(yieldTokenConfig.token),\n        this.getTokenBalance(yieldTokenConfig.token,account,false)\n      ]);\n\n      tokenPrice = this.fixTokenDecimals(tokenPrice,yieldTokenConfig.decimals);\n      idleTokenBalance = this.fixTokenDecimals(idleTokenBalance,yieldTokenConfig.decimals);\n      const tokenBalance = idleTokenBalance.times(tokenPrice);\n      const portfolioCoverage = tokenBalance.gt(0) ? sumAssured.div(tokenBalance).times(100).toFixed(2)+'%' : 'N/A';\n\n      // console.log('portfolioCoverage',sumAssured.toFixed(),idleTokenBalance.toFixed(),tokenPrice.toFixed(),portfolioCoverage.toFixed());\n\n      nexusMutualCoverages.push({\n        label,\n        value,\n        claimId,\n        sumAssured,\n        coverDetails,\n        claimedAmount,\n        payoutOutcome,\n        claimableAmount,\n        maxCoveredAmount,\n        yieldTokenConfig,\n        coverAssetConfig,\n        portfolioCoverage,\n        coveredTokenAmount,\n        incident: matchedIncident ? {...matchedIncident, id: incidentEvents.findIndex(x => x.date === matchedIncident.date)} : null\n      });\n    });\n\n    return nexusMutualCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint,1800,true);\n      if (transactions && typeof transactions.result === 'object'){\n        return transactions.result.filter( tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase() );\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account=null,filter_by_status=null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools','batchDeposit']);\n    if (!batchDepositConfig.enabled){\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name,migrationContract.address,migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name,'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name,'batchTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n\n        console.log(`Batch #${batchIndex} - ${batchTotal} - ${batchRedeem} - ${batchDeposit}`);\n\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null){\n          batchTotals = this.fixTokenDecimals(batchTotal,tokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchRedeem = this.fixTokenDecimals(batchRedeem,18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit,tokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)){\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status){\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,batchedDeposits);\n  }\n  getETHBalance = async (walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName,walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName,walletAddr,blockNumber)\n    ]);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance,30);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ',contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function'){\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url,props,callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props){\n      Object.keys(props).forEach((attr,i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function'){\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function() {\n          if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)){\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getTokenTotalSupply = async (contractName,blockNumber='latest') => {\n    const cachedDataKey = `totalSupply_${contractName}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const totalSupply = await this.genericContractCall(contractName, 'totalSupply', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,totalSupply,null);\n  }\n  getTokenPrice = async (contractName,blockNumber='latest') => {\n    const cachedDataKey = `tokenPrice_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const tokenPrice = await this.genericContractCall(contractName,'tokenPrice',[],{},blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice,60);\n  }\n  getContractBalance = async (contractName,address,blockNumber='latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    const cachedDataKey = `balanceOf_${contractName}_${address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const balance = await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,balance,30);\n  }\n  getProtocolBalance = async (contractName,address) => {\n    return await this.getContractBalance(contractName,address);\n  }\n  getAprs = async (contractName) => {\n    const cachedDataKey = `getAprs_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      // console.log('getAprs - CACHED - ',cachedData);\n      return typeof cachedData === 'object' ? cachedData : JSON.parse(cachedData);\n    }\n\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const aprs = await this.genericContractCall(contractName, 'getAPRs');\n    if (aprs){\n      const result = {\n        aprs:aprs[1],\n        addresses:aprs[0]\n      };\n      return this.setCachedDataWithLocalStorage(cachedDataKey,result);\n    }\n    return null;\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxDecodedLogs = async (tx,logAddr,decodeLogs,storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt){\n      txReceipt = await (new Promise( async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n          if (err){\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt){\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length){\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs,internalTransfers[0].data,internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getBlockInfo = async (blockNumber) => {\n    const cachedDataKey = `getBlockInfo_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n    const blockInfo = await this.props.web3.eth.getBlock(blockNumber);\n    return blockInfo ? this.setCachedDataWithLocalStorage(cachedDataKey,blockInfo,null) : null;\n  }\n  getContractPastEvents = async (contractName,methodName,params = {}) => {\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.getPastEvents(methodName, params);\n  }\n  genericContractCallCached = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL=180) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest'){\n      TTL = null;\n    }\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,result,TTL);\n  }\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest') => {\n\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try{\n      // this.customLog(`genericContractCall - ${contractName} - ${methodName}`);\n      const value = await contract.methods[methodName](...params).call(callParams,blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      // console.log(`${moment().format('HH:mm:ss')} - genericContractCall (${blockNumber}) - ${contractName} - ${methodName} (${JSON.stringify(params)}) : ${value}`);\n      return value;\n    } catch (error) {\n      this.customLog(\"genericContractCall error\", error);\n    }\n  }\n  asyncForEach = async (array, callback, async=true) => {\n    if (async){\n      await Promise.all(array.map( (c,index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        await callback(array[index], index, array);\n      }\n    }\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(12))).pow(12).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token,tokenConfig.idle.address);\n    if (unlentBalance){\n      unlentBalance = this.fixTokenDecimals(unlentBalance,tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig,addGovTokens=true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN() ) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent){\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPool);\n      }\n    }\n\n    return null;\n  }\n  /*\n  Get idleToken allocation between protocols\n  */\n  getTokenAllocation = async (tokenConfig,protocolsAprs=false,addGovTokens=true) => {\n\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    let totalAllocation = this.BNify(0);\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance:null,\n      totalAllocation:null,\n      protocolsBalances:{},\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null,\n      totalAllocationConverted:null,\n      totalAllocationWithUnlent:null,\n      totalAllocationWithUnlentConverted:null,\n    };\n\n    const exchangeRates = {};\n    const protocolsBalances = {};\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n\n      if (!protocolInfo.enabled){\n        return;\n      }\n\n      const contractName = protocolInfo.token;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n\n      let [\n        tokenDecimals,\n        protocolBalance,\n        exchangeRate\n      ] = await Promise.all([\n        this.getTokenDecimals(contractName),\n        this.getProtocolBalance(contractName,tokenConfig.idle.address),\n        ( protocolInfo.functions.exchangeRate ? this.getTokenExchangeRate(contractName,protocolInfo.functions.exchangeRate) : null )\n      ]);\n\n      if (!protocolBalance){\n        return;\n      }\n\n      if (exchangeRate && protocolInfo.decimals){\n        exchangeRates[protocolAddr] = exchangeRate;\n        exchangeRate = this.fixTokenDecimals(exchangeRate,protocolInfo.decimals);\n      }\n\n      let protocolAllocation = this.fixTokenDecimals(protocolBalance,tokenDecimals,exchangeRate);\n\n      if (protocolAllocation.lt(this.BNify(0.00000001))){\n        protocolBalance = this.BNify(0);\n        protocolAllocation = this.BNify(0);\n      }\n\n      protocolsBalances[protocolAddr] = protocolBalance;\n      protocolsAllocations[protocolAddr] = protocolAllocation;\n      totalAllocation = totalAllocation.plus(protocolAllocation);\n\n      // console.log('getTokenAllocation',contractName,protocolAddr,protocolAllocation.toFixed(5),exchangeRate ? exchangeRate.toFixed(5) : null,totalAllocation.toFixed(5));\n    });\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = this.BNify(totalAllocation);\n\n    // Add unlent balance to the pool\n    let unlentBalance = await this.getUnlentBalance(tokenConfig);\n    if (unlentBalance){\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    // console.log('totalAllocationWithUnlent 1',addGovTokens,tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n\n    Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n      const protocolAllocation = protocolsAllocations[protocolAddr];\n      const protocolAllocationPerc = protocolAllocation.div(totalAllocation);\n      protocolsAllocationsPerc[protocolAddr] = protocolAllocationPerc;\n    });\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    if (addGovTokens){\n      const govTokensBalances = await this.getGovTokensBalances(tokenConfig.idle.address);\n\n      // Sum gov tokens balances\n      if (govTokensBalances.total){\n        const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,false);\n        if (tokenUsdConversionRate){\n          govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n        }\n\n        tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n\n        // console.log('totalAllocationWithUnlent 2',govTokensBalances.total.toFixed(5),tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n      }\n    }\n\n    [\n      tokenAllocation.totalAllocationConverted,\n      tokenAllocation.totalAllocationWithUnlentConverted\n    ] = await Promise.all([\n      this.convertTokenBalance(tokenAllocation.totalAllocation,tokenConfig.token,tokenConfig),\n      this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,tokenConfig.token,tokenConfig)\n    ]);\n\n    if (protocolsAprs){\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    return this.setCachedData(cachedDataKey,tokenAllocation);\n  }\n  getSushiswapPoolTokenPrice = async (contractName,pairAddresses) => {\n    const [\n      token0_address,\n      token1_address,\n      poolReserves,\n      totalSupply\n    ] = await Promise.all([\n      this.genericContractCallCached(contractName,'token0'),\n      this.genericContractCallCached(contractName,'token1'),\n      this.genericContractCallCached(contractName,'getReserves'),\n      this.getTokenTotalSupply(contractName)\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply){\n      const token0_config = {\n        address:token0_address\n      };\n      const token1_config = {\n        address:token1_address\n      };\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getSushiswapConversionRate(DAITokenConfig,token0_config),\n        this.getSushiswapConversionRate(DAITokenConfig,token1_config)\n      ]);\n\n      if (token0_price && token1_price){\n        // token0_price = this.BNify(1).div(this.BNify(token0_price));\n        // token1_price = this.BNify(1).div(this.BNify(token1_price));\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0],18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1],18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply,18));\n\n        // console.log(parseFloat(token0_price),parseFloat(token1_price),parseFloat(poolTokenPrice));\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `sushiswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getGlobalConfig(['stats','tokens','WETH','address']);\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const res = await this.genericContractCall('SushiswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      if (res){\n        const price = this.BNify(res[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  getUniswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    if (tokenConfigDest.addressForPrice){\n      tokenConfigDest = Object.assign({},tokenConfigDest);\n      tokenConfigDest.address = tokenConfigDest.addressForPrice;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log('getUniswapConversionRate - CACHED',cachedDataKey,cachedData);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getGlobalConfig(['stats','tokens','WETH','address']);\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      if (unires){\n        const price = this.BNify(unires[0]).div(one);\n        // console.log('getUniswapConversionRate',path,price.toFixed());\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account,enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach( tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]){\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action){\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n        break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])){\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)){\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n        break;\n        default:\n        break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)){\n        Object.keys(idleTokensBalances).forEach( token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)){\n            if (tokenBalance.gt(remainingCurveTokens)){\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts,max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve','rates']);\n    if (curveRatesInfo){\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data){\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path,results.data);\n        if (curveApy){\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies){\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve','availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce( (availableTokens,token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled){\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    },{});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber){\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice,prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price'),\n          this.genericContractCallCached(curveSwapContract.name,'get_virtual_price',[],{},blockNumber-blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice){\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      return await this.getTokenTotalSupply(curvePoolContract.name);\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account=null,fixDecimals=true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name,account,fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber='latest',fixDecimals=true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCallCached(migrationContract.name,'get_virtual_price',[],{},blockNumber);\n    if (curveTokenPrice){\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals){\n        const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice,curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice,curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice){\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve','depositContract']);\n    if (depositContractInfo){\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi){\n        curveDepositContract = await this.props.initContract(depositContractInfo.name,depositContractInfo.address,depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve','zapContract']);\n    if (zapContractInfo){\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi){\n        curveZapContract = await this.props.initContract(zapContractInfo.name,zapContractInfo.address,zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve','poolContract']);\n    if (poolContractInfo){\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi){\n        curvePoolContract = await this.props.initContract(poolContractInfo.name,poolContractInfo.address,poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve','migrationContract']);\n    if (migrationContractInfo){\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi){\n        migrationContract = await this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account=null,curveTokenBalance=null,max_slippage=null) => {\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage){\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]);\n        if (curveIdleTokens){\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage){\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account=null,curveTokenBalance=null,fixDecimals=false,useCoinIndex=false) => {\n\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals){\n          tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token,amount,deposit=false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount)>0){\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount,18);\n        if (!deposit){\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount,curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts,deposit=true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract){\n      return await this.genericContractCall(migrationContract.name,'calc_token_amount',[amounts,deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token,amount,deposit=true,uneven_amounts=null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract){\n\n      const n_coins = this.getGlobalConfig(['curve','params','n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)){\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins){\n        amounts = await this.getCurveAmounts(token,amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name,'get_virtual_price'),\n        this.genericContractCall(depositContract.name,'calc_token_amount',[amounts,deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount){\n        amount = this.fixTokenDecimals(amount,18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice,18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount,18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit){\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit){\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getStkAaveDistribution = async (tokenConfig,aTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getStkAaveDistribution_${tokenConfig.idle.token}_${aTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let aaveDistribution = this.BNify(0);\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    const aTokenConfig = tokenConfig.protocols.find( p => p.name === stkAAVETokenConfig.protocol );\n\n    if (!aTokenConfig || stkAAVETokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n      return aaveDistribution;\n    }\n\n    const aaveIncentivesController_address = await this.genericContractCallCached(aTokenConfig.token,'getIncentivesController',[],{},'latest',null);\n\n    // console.log('getStkAaveDistribution',tokenConfig.idle.token,aTokenConfig.token,aaveIncentivesController_address);\n\n    if (!aaveIncentivesController_address){\n      return aaveDistribution;\n    }\n\n    const IAaveIncentivesController_name = `IAaveIncentivesController_${aTokenConfig.token}`;\n    await this.props.initContract(IAaveIncentivesController_name,aaveIncentivesController_address,stkAAVETokenConfig.abi);\n\n    let [\n      aTokenTotalSupply,\n      tokenAllocation,\n      assetData,\n    ] = await Promise.all([\n      this.getTokenTotalSupply(aTokenConfig.token),\n      this.getTokenAllocation(tokenConfig,false,false),\n      this.genericContractCallCached(IAaveIncentivesController_name,'getAssetData',[aTokenConfig.address]),\n    ]);\n\n    if (assetData && tokenAllocation){\n\n      const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n\n      if (aaveAllocationPerc && aaveAllocationPerc.gte(0.001)){\n        if (!aTokenIdleSupply){\n          aTokenIdleSupply = await this.getContractBalance(aTokenConfig.token,tokenConfig.idle.address);\n        }\n\n        const aaveSpeed = this.BNify(assetData[1]);\n        aTokenIdleSupply = this.BNify(aTokenIdleSupply);\n        aTokenTotalSupply = this.BNify(aTokenTotalSupply);\n        const secondsPerYear = this.getGlobalConfig(['network','secondsPerYear']);\n\n        const aavePoolShare = aTokenIdleSupply.div(aTokenTotalSupply);\n        aaveDistribution = aaveSpeed.times(aavePoolShare);\n\n        if (annualize){\n          aaveDistribution = aaveDistribution.div(1e18).times(secondsPerYear);\n        }\n\n        // console.log('getStkAaveDistribution',tokenConfig.idle.token,aTokenIdleSupply.toFixed(),aTokenTotalSupply.toFixed(),aavePoolShare.toFixed(),aaveSpeed.toFixed(),aaveDistribution.toFixed());\n\n        if (!this.BNify(aaveDistribution).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,aaveDistribution);\n        }\n      }\n    }\n\n    return aaveDistribution;\n  }\n  getStkAaveUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const aTokenInfo = tokenConfig.protocols.find( p => (p.name === stkAAVETokenConfig.protocol) );\n      if (aTokenInfo){\n        const [\n          userPoolShare,\n          aaveDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getStkAaveDistribution(tokenConfig,null,false),\n        ]);\n\n        if (aaveDistribution && userPoolShare){\n          output = output.plus(aaveDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getStkAaveApr = async (token,tokenConfig,aaveConversionRate=null) => {\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    if (!stkAAVETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getStkAaveApr_${tokenConfig.idle.token}_${aaveConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let stkAaveAPR = this.BNify(0);\n    const aaveDistribution = await this.getStkAaveDistribution(tokenConfig);\n\n    if (aaveDistribution && this.BNify(aaveDistribution).gt(0)){\n\n      // Get COMP conversion rate\n      if (!aaveConversionRate){\n        const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        try {\n          const destTokenConfig = {\n            address:stkAAVETokenConfig.addressForPrice || stkAAVETokenConfig.address\n          };\n          aaveConversionRate = await this.getUniswapConversionRate(DAITokenConfig,destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!aaveConversionRate || aaveConversionRate.isNaN()){\n          aaveConversionRate = this.BNify(1);\n        }\n      }\n\n      const stkAaveValue = this.BNify(aaveConversionRate).times(aaveDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        stkAaveAPR = stkAaveValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('getStkAaveApr',tokenConfig.idle.token,aaveDistribution.toFixed(),this.BNify(aaveConversionRate).toFixed(),stkAaveValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),stkAaveAPR.toFixed());\n\n        if (!this.BNify(stkAaveAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,stkAaveAPR);\n        }\n      }\n    }\n\n    return stkAaveAPR;\n  }\n  getCompAPR = async (token,tokenConfig,cTokenIdleSupply=null,compConversionRate=null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens','COMP']);\n    if (!COMPTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig,cTokenIdleSupply);\n\n    if (compDistribution){\n\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get COMP conversion rate\n      if (!compConversionRate){\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig,COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()){\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCallCached('Comptroller','compSpeeds',[cTokenAddress]);\n    if (compSpeed){\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig,cTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n    if (cTokenInfo){\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)){\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.getTokenTotalSupply(cTokenInfo.token)\n        ]);\n\n        if (compSpeed && cTokenTotalSupply){\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply){\n            cTokenIdleSupply = await this.getContractBalance(cTokenInfo.token,tokenConfig.idle.address);\n          }\n\n          if (cTokenIdleSupply){\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network','blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize){\n              compDistribution = compDistribution.div(1e18).times(this.BNify(blocksPerYear));\n            }\n\n            if (!this.BNify(compDistribution).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (cTokenInfo){\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getCompDistribution(tokenConfig,null,false),\n        ]);\n\n        if (compDistribution && userPoolShare){\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens=null) => {\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr,tokenAllocation] = await Promise.all([\n        this.getCompAPR(token,tokenConfig),\n        this.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (compApr && tokenAllocation){\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function() {\n      return this.reduce(function(pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function() {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function() {\n      return this.sum()/this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,7200,'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length-1];\n\n        rates.forEach( r => {\n          if (!protocols){\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach( p1 => {\n              const foundProtocol = tokenConfig.protocols.find( p2 => ( p2.address.toLowerCase() === p1.protocolAddr.toLowerCase() ) );\n              if (foundProtocol){\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach( p => {\n              header.push('APR '+p.name);\n              header.push('SCORE '+p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp*1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach( pInfo => {\n            const pData = r.protocolsData.find( p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()) );\n            let pRate = '';\n            let pScore = '';\n            if (pData){\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined'){\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()){\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n                if (!isNaN(parseFloat(pRate))){\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))){\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach( p => {\n          const avgRate = aprAvg[p].sum()/aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach( p => {\n          const avgScore = scoreAvg[p].sum()/scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken=null,availableTokens=null,convertToken=null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address,convertToken,enabledTokens);\n      if (compTokenBalance && compTokenBalance.total){\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken){\n      this.idleGovToken = new IdleGovToken(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach( govToken => {\n      const govTokenConfig = govTokens[govToken];\n      if (!govTokenConfig.enabled || govTokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n      if (govTokenConfig.protocol === 'idle'){\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find( p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()) )\n        if (foundProtocol){\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed,frequency='day',mode='block') => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n    const secondsPerYear = this.BNify(this.getGlobalConfig(['network','secondsPerYear']));\n    const multipliers = {\n      'day':{\n        'block':blocksPerYear.div(365.242199),\n        'second':secondsPerYear.div(365.242199)\n      },\n      'week':{\n        'block':blocksPerYear.div(52.1429),\n        'second':secondsPerYear.div(52.1429)\n      },\n      'month':{\n        'block':blocksPerYear.div(12),\n        'second':secondsPerYear.div(12)\n      },\n      'year':{\n        'block':blocksPerYear.div(1),\n        'second':secondsPerYear.div(1)\n      }\n    };\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()){\n      return speed.times(multipliers[frequency][mode]);\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account,tokenConfig=null,enabledTokens=null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken){\n        case 'COMP':\n          output = await this.getCompUserDistribution(account,availableTokens);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account,availableTokens);\n        break;\n        default:\n        break;\n      }\n\n      if (output){\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig,enabledTokens=null) => {\n    const govTokensDistribution = {};\n    const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n    \n    await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n      let govSpeed = null;\n      const govTokenConfig = tokenGovTokens[govToken];\n\n      switch (govToken){\n        case 'COMP':\n          govSpeed = await this.getCompDistribution(tokenConfig,null,false);\n        break;\n        case 'stkAAVE':\n          govSpeed = await this.getStkAaveDistribution(tokenConfig,null,false);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n        break;\n        default:\n        break;\n      }\n\n      if (govSpeed){\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency && govTokenConfig.distributionMode){\n          govSpeed = this.fixDistributionSpeed(govSpeed,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token,tokenConfig,enabledTokens=null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false){\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken){\n        case 'stkAAVE':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getStkAaveApr(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the AAVE token proportionally on Idle funds allocation in aave\n              if (tokenAllocation){\n                const aTokenConfig = tokenConfig.protocols.find( p => (p.name === govTokenConfig.protocol) );\n                if (aTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()]){\n                    const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n                    output = output.times(aaveAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getCompAPR(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation){\n                const cTokenConfig = tokenConfig.protocols.find( p => (p.name === 'compound') );\n                if (cTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()]){\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode){\n            case 'apr':\n              output = await idleGovToken.getAPR(token,tokenConfig);\n            break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output){\n                output = this.fixTokenDecimals(output,18);\n                output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n              }\n            break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n            break;\n            default:\n            break;\n          }\n        break;\n        default:\n        break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)){\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address=null,convertToken='DAI',enabledTokens=null) => {\n    if (!address){\n      address = this.props.tokenConfig.idle.address;\n    }\n\n    const cachedDataKey = `getGovTokensBalances_${address}_${convertToken}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)){\n        return;\n      }\n      \n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const destTokenConfig = {\n        address:govTokenConfig.addressForPrice || govTokenConfig.address\n      };\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token,address);\n\n      if (govTokenBalance){\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken){\n          const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,destTokenConfig);\n          } catch (error) {\n            tokenConversionRate = this.BNify(0);\n          }\n        }\n\n        const tokenBalance = this.fixTokenDecimals(govTokenBalance,govTokens[token].decimals,tokenConversionRate);\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = tokenBalance;\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total){\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,govTokensBalances);\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address){\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find( tokenConfig => (tokenConfig.enabled && tokenConfig.address.toLowerCase() === address.toLowerCase()) );\n  }\n  getGovTokensUserTotalBalance = async (account=null,availableTokens=null,convertToken=null,checkShowBalance=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${JSON.stringify(Object.keys(availableTokens))}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,null,checkShowBalance);\n    if (govTokensUserBalances){\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce( (acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensIndexes = async (account,tokenConfig) => {\n    if (!account){\n      account = this.props.account;\n    }\n    const output = {};\n    const govTokensAmounts = await this.getGovTokensUserAmounts(tokenConfig.idle.token,account);\n    if (govTokensAmounts){\n      await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n        // Get gov Token config by index\n        const govTokenAddress = await this.getGovTokenAddessByIndex(tokenConfig.idle.token,govTokenIndex);\n\n        if (govTokenAddress){\n          const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n          if (govTokenConfig){\n            output[govTokenConfig.token] = govTokenIndex;\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n  getGovTokenAddessByIndex = async (token,govTokenIndex) => {\n    const cachedDataKey = `govTokenAddressByIndex_${token}_${govTokenIndex}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log(cachedDataKey,cachedData);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token,'govTokens',[govTokenIndex]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,govTokenAddress,null);\n  }\n  getGovTokensUserAmounts = async (token,account) => {\n    const cachedDataKey = `govTokenUserAmount_${token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token,'getGovTokensAmounts',[account]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,govTokenAddress);\n  }\n  getGovTokensUserBalances = async (account=null,availableTokens=null,convertToken=null,govTokenConfigForced=null,checkShowBalance=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.getGovTokensUserAmounts(idleTokenConfig.token,account);\n\n      // console.log('getGovTokensUserBalances_1',idleTokenConfig.token,govTokensAmounts);\n\n      if (govTokensAmounts){\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.getGovTokenAddessByIndex(idleTokenConfig.token,govTokenIndex);\n\n          // console.log('getGovTokensUserBalances_2',idleTokenConfig.token,govTokenIndex,govTokenAddress);\n\n          if (govTokenAddress){\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()){\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken){\n                const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n                if (fromTokenConfig){\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n                  } catch (error) {\n                    \n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount,govTokenConfig.decimals,tokenConversionRate);\n\n              // console.log('getGovTokensUserBalances',idleTokenConfig.token,govTokenIndex,govTokenConfig.token,govTokenAddress,parseFloat(tokenConversionRate),parseFloat(govTokenAmount));\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]){\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, 'latest', null);\n    if (fee){\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig=null,account=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig){\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent',tokenConfig.token,tokenConfig,account),\n      this.loadAssetField('redeemableBalance',tokenConfig.token,tokenConfig,account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance){\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig,account=null,availableTokens=null,convertToken=null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce( (totalTVL,tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()){\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    },this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens:{},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(tokenConfig)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply,18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL,token,tokenConfig,isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (govTokenBalance && govTokenConversionRate){\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance,govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()){\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply){\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply,18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL,token,oldTokenConfig,isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()){\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint,false,config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length>0){\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey,latestFeed,endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAggregatedStats = async (addGovTokens=true) => {\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','tvls']);\n    const tvls = await this.makeCachedRequest(endpointInfo.endpoint,endpointInfo.TTL,true,false,config);\n\n    if (tvls){\n      const avgAPY = this.BNify(tvls.avgAPY);\n      const totalAUM = this.BNify(tvls.totalTVL);\n      return {\n        avgAPY,\n        totalAUM\n      };\n    } else {\n      return await this.getAggregatedStats_chain();\n    }\n  }\n  getAggregatedStats_chain = async (addGovTokens=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())){\n      return {\n        avgAPR:this.BNify(cachedData.avgAPR),\n        avgAPY:this.BNify(cachedData.avgAPY),\n        totalAUM:this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig,tokenAllocation,addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()){\n          const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig,isRisk);\n          totalAUM = totalAUM.plus(tokenAUM);\n          // console.log(tokenConfig.idle.token+'V4',tokenAUM.toFixed());\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()){\n            avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (tokenBalance && tokenConversionRate){\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance,govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()){\n                // console.log(tokenConfig.idle.token+'V4 - COMP',tokenBalanceConverted.toFixed());\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig,false,false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()){\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation,token,oldTokenConfig,isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy=null) => {\n\n    if (!this.props.availableStrategies || !this.props.account){\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy){\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig,this.props.account);\n        \n        if (migrationEnabled){\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol=null) => {\n    if (!this.props.account){\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools','tokenMigration','props','availableTokens']);\n    if (protocolsTokens){\n      await this.asyncForEach(Object.keys(protocolsTokens),async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase() ){\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi){\n          tokenContract = await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n        }\n        if (tokenContract){\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token,this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)){\n            tokenBalances[token] = {\n              tokenConfig,\n              balance:tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance,token,tokenConfig,isRisk=false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,isRisk);\n      // console.log('convertTokenBalance',token,isRisk,tokenUsdConversionRate);\n      if (tokenUsdConversionRate){\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n\n  getAvgAPYStats = async (address,isRisk,startTimestamp=null,endTimestamp=null) => {\n\n    const apiResults = await this.getTokenApiData(address,isRisk,startTimestamp,endTimestamp,true,7200);\n\n    if (apiResults && apiResults.length){\n      const apr = apiResults.reduce( (sum,r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate,18);\n        return sum.plus(idleRate);\n      },this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return this.BNify(0);\n  }\n\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig,isRisk,conversionRateField=null,count=0) => {\n\n    if (!conversionRateField){\n      conversionRateField = this.getGlobalConfig(['stats','tokens',tokenConfig.token,'conversionRateField']);\n      if (!conversionRateField){\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,null,'desc',1);\n\n    if (tokenData && tokenData.length){\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()){\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField],18);\n        if (!this.BNify(conversionRate).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n        }\n      }\n    }\n\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig,tokenConfig);\n    if (!this.BNify(conversionRate).isNaN()){\n      return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n    }\n\n    if (count<3){\n      return await this.getTokenConversionRate(tokenConfig,isRisk,conversionRateField,count+1); \n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config),\n      this.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenData && tokenAllocation){\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach( protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001) && tokenData.length>0){\n          const protocolInfo = tokenData[0].protocolsData.find( p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase()) );\n          if (protocolInfo){\n            const protocolScore = this.BNify(protocolInfo.defiScore);\n            if (!protocolScore.isNaN()){\n              tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n            }\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)){\n      tokenScore = await this.getTokenScoreApi(tokenConfig,isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.scores;\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}`;\n    let scores = await this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config);\n\n    if (scores && scores.length>0){\n      let tokenData = scores.find( s => s.address.toLowerCase() === tokenConfig.address.toLowerCase() );\n      if (tokenData){\n        let tokenScore = this.BNify(tokenData.idleScore);\n        if (tokenScore && tokenScore.gt(0)){\n          // Set cached data\n          return this.setCachedData(cachedDataKey,tokenScore);\n        // Take latest historical valid score\n        } else {\n          const timestamp = parseInt(Date.now()/1000);\n          const startTimestamp = parseInt(timestamp)-(60*60*24);\n          tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,null,true,null,'DESC');\n\n          const filteredTokenData = tokenData.filter( d => (this.BNify(d.idleScore).gt(0)) );\n          if (filteredTokenData.length){\n            tokenScore = this.BNify(filteredTokenData[0].idleScore);\n            if (!this.BNify(tokenScore).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n            }\n          }\n        }\n      }\n    }\n\n    return this.BNify(0);\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig,tokenAllocation=false,addGovTokens=true) => {\n\n    const tokenAprs = {\n      avgApr: this.BNify(0),\n      avgApy: this.BNify(0)\n    };\n\n    if (!tokenConfig.idle){\n      // console.log('getTokenAprs - !tokenConfig.idle',tokenConfig);\n      return tokenAprs;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgApr && !this.BNify(cachedData.avgApr).isNaN()) && (cachedData.avgApy && !this.BNify(cachedData.avgApy).isNaN()) ){\n      // console.log('getTokenAprs - CACHED',tokenConfig.idle.token,cachedData);\n      return {\n        avgApr:this.BNify(cachedData.avgApr),\n        avgApy:this.BNify(cachedData.avgApy)\n      };\n    }\n\n    const Aprs = await this.getAprs(tokenConfig.idle.token);\n\n    if (!Aprs){\n      // console.log('getTokenAprs - !Aprs',Aprs);\n      return tokenAprs;\n    }\n\n    if (!tokenAllocation){\n      tokenAllocation = await this.getTokenAllocation(tokenConfig);\n    }\n\n    if (!tokenAllocation){\n      // console.log('getTokenAprs - !tokenAllocation',tokenAllocation);\n      return tokenAprs;\n    }\n\n    const addresses = Aprs.addresses.map((addr,i) => { return addr.toString().toLowerCase() });\n    const aprs = Aprs.aprs;\n\n    const govTokensAprs = {};\n    const protocolsAprs = {};\n    const protocolsApys = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const protocolAddr = protocolInfo.address.toString().toLowerCase();\n      const addrIndex = addresses.indexOf(protocolAddr);\n      if ( addrIndex !== -1 ) {\n        let protocolApr = this.BNify(+this.toEth(aprs[addrIndex]));\n        let protocolApy = this.apr2apy(protocolApr.div(100)).times(100);\n\n        if (addGovTokens){\n          let govTokenAPR = null;\n          const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n          await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n            switch (govToken){\n              case 'COMP':\n                govTokenAPR = await this.getCompAPR(tokenConfig.token,tokenConfig);\n              break;\n              case 'stkAAVE':\n                govTokenAPR = await this.getStkAaveApr(tokenConfig.token,tokenConfig);\n              break;\n              default:\n              break;\n            }\n            if (govTokenAPR){\n              govTokensAprs[govToken] = govTokenAPR;\n            }\n          });\n          \n        }\n\n        protocolsApys[protocolAddr] = protocolApy;\n        protocolsAprs[protocolAddr] = protocolApr;\n      }\n    });\n\n    if (tokenAllocation){\n      tokenAprs.avgApr = this.getAvgApr(protocolsAprs,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n      tokenAprs.avgApy = this.getAvgApr(protocolsApys,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n\n      Object.values(govTokensAprs).forEach( govTokenAPR => {\n        tokenAprs.avgApr = tokenAprs.avgApr.plus(govTokenAPR);\n        tokenAprs.avgApy = tokenAprs.avgApy.plus(govTokenAPR);\n      });\n\n      // console.log('getTokenAprs',tokenConfig.idle.token,tokenConfig,aprs,protocolsAprs,tokenAllocation,tokenAprs,govTokensAprs);\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = this.getGlobalConfig(['govTokens','IDLE','showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens','IDLE','enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR){\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token,tokenConfig);\n        if (idleAPR){\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n\n      if (this.BNify(tokenAprs.avgApy).isNaN()){\n        tokenAprs.avgApy = this.BNify(0);\n      }\n      if (this.BNify(tokenAprs.avgApr).isNaN()){\n        tokenAprs.avgApr = this.BNify(0);\n      }\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,tokenAprs);\n    }\n\n    return tokenAprs;\n  }\n  abbreviateNumber = (value,decimals=3,maxPrecision=5,minPrecision=0) => {\n\n    const isNegative = parseFloat(value)<0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\",\"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1,maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value>=1000){\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2,decimals) : null;\n      newValue = parseInt(newValue).toString()+( decimalPart ? '.'+decimalPart : '' );\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue>=1 && (newValue.length-1)>maxPrecision){\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length-1)<minPrecision) {\n      const difference = minPrecision-(newValue.length-1);\n      const append = this.BNify(value).abs().toString().replace('.','').substr((newValue.length-1),difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative){\n      newValue = '-'+newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance,label,decimals,maxLen,highlightedDecimals){\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.','').length;\n    if (numLen>maxLen){\n      decimals = Math.max(0,decimals-(numLen-maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance%1).toPrecision(decimals).substr(2,decimals);;\n    decPart = (decPart+(\"0\".repeat(decimals))).substr(0,decimals);\n\n    if (highlightedDecimals){\n      const highlightedDec = decPart.substr(0,highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? ( <>{highlightedIntPart}<small style={{fontSize:'70%'}}>{decPart}</small> <Text.span fontSize={[1,2]}>{label}</Text.span></> ) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? ( <>{intPart}<small>.{decPart}</small>{ label !== '%' ? ' ' : null }{ label ? <Text.span fontSize={[1,2]}>{label}</Text.span> : null }</> ) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async execute(){\n\n    const callback = (tx,error) => {\n\n      console.log('callback',tx,error);\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx && tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx);\n        }\n      }\n\n      this.setState({\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx ? tx.status : null\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    let params = this.props.params;\n    if (typeof this.props.getTransactionParams === 'function'){\n      params = this.props.getTransactionParams();\n    } else if (typeof this.props.getTransactionParamsAsync === 'function'){\n      params = await this.props.getTransactionParamsAsync();\n    }\n\n    if (!params){\n      this.setState((prevState) => ({\n        txStatus:null,\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n      return false;\n    }\n\n    // console.log('ExecuteTransaction',this.props.contractName,this.props.methodName,params);\n\n    if (this.props.sendRawTransaction){\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt,null,true,params);\n    } else {\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt);\n    }\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              network={this.props.network}\n              {...this.props.progressBarProps}\n              hash={this.state.processing.txHash}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n              waitText={`${this.functionsUtil.capitalize(this.props.action)} estimated in`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={ isInteractive ? e => this.props.handleClick(this.props) : null }\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={fieldInfo.style || {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            <FieldComponent\n                              {...this.props}\n                              fieldInfo={fieldInfo}\n                              colProps={colInfo.props}\n                              parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            />\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'cellText'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver:false\n  }\n\n  setMouseOver(mouseOver){\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p:0,\n      border:1,\n      boxShadow:1,\n      borderRadius:2,\n      borderColor:null,\n      position:'relative',\n      minHeight:'initial',\n      backgroundColor:'cardBg'\n    };\n\n    if (isActive || (isInteractive && this.state.mouseOver)){\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length){\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]){\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length>0 &&\n            <Flex\n              mt={[3,4]}\n              ml={[3,4]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              {...this.props.titleParentProps}\n            >\n              <Heading.h4\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n                {...this.props.titleProps}\n              >\n                {this.props.title}\n              </Heading.h4>\n              {\n                this.props.description && this.props.description.length>0 &&\n                  <Tooltip\n                    placement={'top'}\n                    message={this.props.description}\n                  >\n                    <Icon\n                      ml={2}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n              }\n            </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass Staking extends Component {\n\n  state = {\n    tokenConfig:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedOption:null,\n    availableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      });\n    }\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      availableTokens\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const SelectedComponent = this.state.tokenConfig ? this.state.tokenConfig.component : null;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      SelectedComponent && (\n                        <SelectedComponent\n                          {...this.props}\n                          tokenConfig={this.state.tokenConfig}\n                          contractInfo={this.state.contractInfo}\n                          selectedToken={this.state.selectedToken}\n                        />\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    approveEnabled:true,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (actionChanged || accountChanged || tokenBalanceChanged || contractChanged || approveEnabledChanged || tokenConfigChanged || permitEnabledChanged){\n      await this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.setState((prevState) => ({\n      inputValue\n    }),() => {\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log('Approve',this.props.tokenConfig.token,this.props.contractInfo.address);\n\n      this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    const callback = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveDeposit`,\n        eventValue: inputValue.toFixed(),\n        eventAction: this.props.tokenConfig.token,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        },false);\n        this.setState({\n          showPermitBox:false\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const contractName = this.props.contractInfo.name;\n\n    let params = null;\n\n    // Check contract approved without permit\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, contractName);\n      // console.log('signedParameters',signedParameters);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      params = this.props.getTransactionParams(_amount,this.state.fastBalanceSelector);\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n\n      // console.log('SendTxWithBalance',contractName, methodName, methodParams, value);\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      return true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n    const contractInfo = await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n\n    if (contractInfo){\n      const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n      return contractApproved;\n    }\n    \n    return false;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const contractApproved = await this.checkContractApproved();\n    const approveEnabled = this.props.approveEnabled !== false;\n\n    this.setState({\n      inputValue,\n      approveEnabled,\n      contractApproved,\n      fastBalanceSelector\n    });\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              <Box\n                mt={2}\n                width={1}\n              >\n                {\n                  this.state.showPermitBox && this.props.permitEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:3,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                    <Flex\n                      p={2}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                      backgroundColor={'DashboardCard'}\n                      border={`1px solid ${this.props.theme.colors.primary}`}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Permit signature?\n                      </Link>\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        name={'Warning'}\n                        color={'primary'}\n                      />\n                    </Flex>\n                  )\n                }\n              </Box>\n              {\n                this.state.approveEnabled && !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        {...this.props}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          dangerouslySetInnerHTML={{\n                            __html:this.props.approveDescription\n                          }}\n                        />\n                        <RoundButton\n                          buttonProps={{\n                            mt:3,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                              >\n                                {this.props.balanceSelectorInfo.text}\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          handleClick={this.executeTx.bind(this)}\n                          buttonProps={Object.assign({\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled||this.props.buttonDisabled\n                          },this.props.buttonProps)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import { Flex, Text } from \"rimble-ui\";\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakedBalance:null,\n    trancheBalance:null,\n    approveEnabled:null,\n    buttonDisabled:false,\n    approveDescription:null,\n    selectedAction:'deposit',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChange = prevState.selectedAction !== this.state.selectedAction;\n    if (selectedActionChange){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.account){\n      return null;\n    }\n\n    const [\n      blockNumber,\n      tokenBalance,\n      trancheBalance,\n      cdoCoolingPeriod,\n      latestHarvestBlock,\n      stakeCoolingPeriod,\n      // rewardsTokensInfo,\n      userStakeBlock,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice\n    ] = await Promise.all([\n      this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'coolingPeriod'),\n      this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'latestHarvestBlock'),\n      this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'coolingPeriod'),\n      // this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'usersStakeBlock',[this.props.account]),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('lastTranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n\n    // console.log('loadData',cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock);\n\n    const canUnstake = this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      tranchePrice,\n      stakedBalance,\n      trancheBalance,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        approveEnabled = true;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        contractInfo = this.props.trancheConfig.CDORewards;\n      break;\n      case 'unstake':\n        approveEnabled = false;\n        tokenConfig = this.props.trancheConfig;\n        contractInfo = this.props.trancheConfig.CDORewards;\n        balanceProp = this.state.stakedBalance;\n        if (!this.state.canUnstake){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantUnstake;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.tokenConfig;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        // balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n        // console.log('balanceProp',this.state.trancheBalance.toFixed(),this.state.tranchePrice.toFixed(),balanceProp.toFixed());\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.`;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      // if (this.state.selectedAction === 'withdraw'){\n\n      // }\n\n      methodParams = [amount];\n    }\n\n    console.log('getTransactionParams',methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n    this.setState({\n      activeModal:'share'\n    })\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <DashboardCard\n          cardProps={{\n            py:3,\n            px:3,\n            border:null,\n            style:{\n              border:`3px solid ${trancheDetails.color.hex}`\n            }\n          }}\n          titleProps={{\n            pb:2,\n            fontSize:[3,4]\n          }}\n          titleParentProps={{\n            ml:0,\n            mt:0,\n            mb:3,\n            style:{\n              borderBottom:`1px solid ${this.props.theme.colors.divider}`\n            }\n          }}\n          title={trancheDetails.name}\n        >\n          <Flex\n            style={{\n              flexBasis:'0',\n              flex:'1 1 0px',\n              flexWrap:'wrap',\n              borderBottom:`1px solid ${this.props.theme.colors.divider}`\n            }}\n            alignItems={'flex-start'}\n            justifyContent={'flex-start'}\n          >\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Protocol\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Token\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Pool Size\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'tranchePool',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Auto-Farming\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'autoFarming',\n                  parentProps:{\n                    justifyContent:'flex-start'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Staking Rewards\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'stakingRewards',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                APY\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheApy',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n          </Flex>\n          <Flex\n            py={2}\n            style={{\n              flexBasis:'0',\n              flex:'1 1 0px',\n              flexWrap:'wrap',\n              borderBottom:`1px solid ${this.props.theme.colors.divider}`\n            }}\n            alignItems={'flex-start'}\n            justifyContent={'flex-start'}\n          >\n            <Flex\n              width={0.33}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Deposited\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheDeposited',\n                  props:{\n                    decimals:4,\n                    fontWeight:2,\n                    fontSize:[2,4],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              width={0.33}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Staked\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheStaked',\n                  props:{\n                    decimals:4,\n                    fontWeight:2,\n                    fontSize:[2,4],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              width={0.33}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Redeemable\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheRedeemable',\n                  props:{\n                    decimals:4,\n                    fontWeight:2,\n                    fontSize:[2,4],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n          </Flex>\n          {\n            this.state.balanceProp && this.state.tokenConfig ? (\n              <Flex\n                width={1}\n                flexDirection={'column'}\n              >\n                <Flex\n                  mt={3}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <CardIconButton\n                    {...this.props}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    cardProps={{\n                      px:3,\n                      py:2,\n                      width:0.32\n                    }}\n                    text={'Deposit'}\n                    iconColor={'deposit'}\n                    icon={'ArrowDownward'}\n                    iconBgColor={'#ced6ff'}\n                    isActive={ this.state.selectedAction === 'deposit' }\n                    handleClick={ e => this.setSelectedAction('deposit') }\n                  />\n                  {\n                    this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) ? (\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.32\n                        }}\n                        text={'Unstake'}\n                        icon={'LayersClear'}\n                        iconColor={'redeem'}\n                        iconBgColor={'#ceeff6'}\n                        isActive={ this.state.selectedAction === 'unstake' }\n                        handleClick={ e => this.setSelectedAction('unstake') }\n                      />\n                    ) : (\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.32\n                        }}\n                        text={'Stake'}\n                        icon={'Layers'}\n                        iconColor={'deposit'}\n                        iconBgColor={'#ced6ff'}\n                        isDisabled={ !this.state.userHasAvailableFunds }\n                        isActive={ this.state.selectedAction === 'stake' }\n                        handleClick={ e => this.state.userHasAvailableFunds ? this.setSelectedAction('stake') : null }\n                      />\n                    )\n                  }\n                  <CardIconButton\n                    {...this.props}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    cardProps={{\n                      px:3,\n                      py:2,\n                      width:0.32\n                    }}\n                    text={'Withdraw'}\n                    icon={'ArrowUpward'}\n                    iconColor={'redeem'}\n                    iconBgColor={'#ceeff6'}\n                    isDisabled={ !this.state.userHasAvailableFunds }\n                    isActive={ this.state.selectedAction === 'withdraw' }\n                    handleClick={ e => this.state.userHasAvailableFunds ? this.setSelectedAction('withdraw') : null }\n                  />\n                </Flex>\n                {\n                  this.state.infoText && (\n                    <IconBox\n                      cardProps={{\n                        p:2,\n                        mt:3,\n                        width:1,\n                      }}\n                      isActive={true}\n                      isInteractive={false}\n                      icon={'LightbulbOutline'}\n                      iconProps={{\n                        size:'1.2em',\n                        color:'flashColor'\n                      }}\n                      textProps={{\n                        fontWeight:500,\n                        fontSize:'15px',\n                        textAlign:'center',\n                        color:'flashColor'\n                      }}\n                      text={this.state.infoText}\n                    />\n                  )\n                }\n                <Flex\n                  mt={2}\n                >\n                  <SendTxWithBalance\n                    error={null}\n                    {...this.props}\n                    buttonProps={{\n                      width:[1,0.45]\n                    }}\n                    permitEnabled={false}\n                    tokenConfig={this.state.tokenConfig}\n                    tokenBalance={this.state.balanceProp}\n                    contractInfo={this.state.contractInfo}\n                    approveEnabled={this.state.approveEnabled}\n                    buttonDisabled={this.state.buttonDisabled}\n                    callback={this.transactionSucceeded.bind(this)}\n                    approveDescription={this.state.approveDescription}\n                    changeInputCallback={this.changeInputCallback.bind(this)}\n                    contractApproved={this.contractApprovedCallback.bind(this)}\n                    getTransactionParams={this.getTransactionParams.bind(this)}\n                    action={this.functionsUtil.capitalize(this.state.selectedAction)}\n                  >\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <BuyModal\n                        {...this.props}\n                        showInline={true}\n                        availableMethods={[]}\n                        buyToken={this.props.selectedToken}\n                      />\n                    </Flex>\n                  </SendTxWithBalance>\n                </Flex>\n              </Flex>\n            ) : (\n              <FlexLoader\n                flexProps={{\n                  mt:3,\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading Tranche Data...'}\n              />\n            )\n          }\n        </DashboardCard>\n        <ShareModal\n          confettiEnabled={true}\n          icon={`images/medal.svg`}\n          title={`Congratulations!`}\n          account={this.props.account}\n          closeModal={this.resetModal}\n          tokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'share'}\n          text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n          tweet={`I'm earning ${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheDetails from '../TrancheDetails/TrancheDetails';\nimport TransactionsList from '../TransactionsList/TransactionsList';\n\nclass TranchePage extends Component {\n\n  state = {\n    transactions:[]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadTransactions();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const portfolioChanged = (this.props.portfolio && !prevProps.portfolio) || JSON.stringify(this.props.portfolio) !== JSON.stringify(prevProps.portfolio);\n    if (portfolioChanged){\n      this.loadTransactions();\n    }\n  }\n\n  loadTransactions(){\n    const transactions = this.props.portfolio ? this.props.portfolio.transactions.filter( t => t.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && t.token.toLowerCase() === this.props.selectedToken.toLowerCase() ) : [];\n    this.setState({\n      transactions\n    });\n  }\n\n  render() {\n    return (\n      <Box\n        mb={4}\n        width={1}\n      >\n        <Flex\n          width={1}\n          mb={[2,0]}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'flex-start'}\n        >\n          <Flex\n            width={0.5}\n          >\n            <Breadcrumb\n              {...this.props}\n              text={'Tranches'}\n              isMobile={this.props.isMobile}\n              path={[this.functionsUtil.capitalize(this.props.selectedProtocol),this.props.selectedToken]}\n              handleClick={ e => this.props.goToSection(this.props.selectedSection.route) }\n            />\n          </Flex>\n          <Flex\n            width={0.5}\n            justifyContent={'flex-end'}\n          >\n            \n          </Flex>\n        </Flex>\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.capitalize(this.props.selectedProtocol)} - {this.props.selectedToken} - Tranche\n        </Title>\n        <Flex\n          width={1}\n          flexDirection={['column','row']}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            width={[1,0.47]}\n            flexDirection={'column'}\n          >\n            <TrancheDetails\n              {...this.props}\n              selectedTranche={'AA'}\n              cdoConfig={this.props.tokenConfig.CDO}\n              trancheConfig={this.props.tokenConfig['AA']}\n            />\n          </Flex>\n          <Flex\n            width={[1,0.47]}\n            flexDirection={'column'}\n          >\n            <TrancheDetails\n              {...this.props}\n              selectedTranche={'BB'}\n              cdoConfig={this.props.tokenConfig.CDO}\n              trancheConfig={this.props.tokenConfig['BB']}\n            />\n          </Flex>\n        </Flex>\n        {\n          this.props.account && this.state.transactions && this.state.transactions.length>0 && \n            <Flex\n              mb={[3,4]}\n              width={1}\n              id={'transactions'}\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Transactions</Title>\n              <TransactionsList\n                {...this.props}\n                enabledTokens={[this.props.selectedToken]}\n                transactionsList={this.state.transactions}\n                availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                  availableActions[t.action.toLowerCase()] = t.action;\n                  return availableActions;\n                },{})}\n                cols={[\n                  {\n                    title: this.props.isMobile ? '' : 'HASH',\n                    props:{\n                      width:[0.13,0.18]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        name:'hash',\n                        mobile:false\n                      }\n                    ]\n                  },\n                  {\n                    title:'ACTION',\n                    mobile:false,\n                    props:{\n                      width:0.12,\n                    },\n                    fields:[\n                      {\n                        name:'action'\n                      }\n                    ]\n                  },\n                  {\n                    title:'DATE',\n                    props:{\n                      width:[0.27,0.15],\n                    },\n                    fields:[\n                      {\n                        name:'date'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'STATUS',\n                    props:{\n                      width:[0.18,0.16],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'statusIcon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'status'\n                      }\n                    ]\n                  },\n                  {\n                    title:'AMOUNT',\n                    props:{\n                      width:[0.23,0.11],\n                    },\n                    fields:[\n                      {\n                        name:'amount'\n                      },\n                    ]\n                  },\n                  {\n                    title:'PROTOCOL',\n                    props:{\n                      width:[0.21, 0.14],\n                    },\n                    fields:[\n                      {\n                        type:'image',\n                        name:'custom',\n                        path:['protocolIcon'],\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        type:'text',\n                        mobile:false,\n                        name:'custom',\n                        path:['protocol']\n                      }\n                    ]\n                  },\n                  {\n                    title:'ASSET',\n                    props:{\n                      width:[0.16,0.14],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:[0,2],\n                          height:['1.4em','1.6em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      },\n                    ]\n                  },\n                ]}\n              />\n            </Flex>\n        }\n      </Box>\n    );\n  }\n}\n\nexport default TranchePage;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\n\nclass TranchesList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledProtocols = this.props.enabledProtocols;\n    if (!enabledProtocols || !enabledProtocols.length){\n      enabledProtocols = Object.keys(this.props.availableTranches);\n    }\n\n    return (\n      <Flex id=\"tranches-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"tranches-list\" flexDirection={'column'}>\n          {\n            enabledProtocols.map(protocol => {\n              const protocolConfig = this.props.availableTranches[protocol];\n              if (!protocolConfig){\n                return null;\n              }\n              return Object.keys(protocolConfig).map( token => (\n                <TableRow\n                  {...this.props}\n                  token={token}\n                  protocol={protocol}\n                  key={`tranche-${protocol}`}\n                  rowId={`tranche-col-${protocol}`}\n                  tokenConfig={protocolConfig[token]}\n                  cardId={`tranche-card-${protocol}`}\n                  fieldComponent={this.props.fieldComponent || TrancheField}\n                />\n              ))\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TranchesList;\n","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass GenericPieChart extends Component {\n  state = {\n    chartProps:null,\n    selectedSlice:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.setStateSafe({\n        chartProps:null,\n        selectedSlice:null,\n      },() => {\n        this.loadData();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: this.props.tooltipFormat || (v => v),\n      sliceLabel: this.props.sliceLabel || (d => d.value),\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.margin || {top:0,right:0,bottom:0,left:0},\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n    };\n\n    if (this.props.showLegend){\n      chartProps.legends = [\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: this.props.theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ];\n    }\n\n    this.setStateSafe({\n      chartProps\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        {\n          this.state.chartProps && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                this.state.selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={this.state.selectedSlice.image}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={this.state.selectedSlice.value}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={this.props.defaultImage}\n                    />\n                    <Text\n                      fontSize={[3,4]}\n                      fontWeight={[3,4]}\n                    >\n                      {this.props.defaultValue}\n                    </Text>\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.props.defaultLabel}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.props.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default GenericPieChart;","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = portfolio.totalAmountLent.times(portfolio.avgAPY.div(100));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquityTranches extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTranches).reduce( (enabledTokens,protocol) => {\n        const tokens = Object.keys(this.props.availableTranches[protocol]);\n        tokens.forEach( token => {\n          if (!enabledTokens.includes(token)){\n            enabledTokens.push(token);\n          }\n        });\n        return enabledTokens;\n      },[]);\n    }\n\n    const transactions = this.props.transactionsList;\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(transactions).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Deposit':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const action = tx.action;\n          const balance = amountLent;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tranchePrice = this.functionsUtil.BNify(tx.tranchePrice);\n          const trancheTokens = this.functionsUtil.BNify(tx.trancheTokens);\n\n          if (!tranchePrice.isNaN() && !tranchePrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenAmount,\n              tranchePrice,\n              trancheTokens\n            });\n          }\n        });\n      }\n    });\n\n    // console.log('tokensBalance',tokensBalance);\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(Date.now()/1000)+86400;\n\n    const tokensData = {};\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n      tokensData[token] = [];\n    });\n\n    const trancheTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!trancheTokenBalance[token]){\n          trancheTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenDecimals = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'decimals']);\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const trancheTokens = trancheTokenBalance[token];\n              const tranchePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.tranchePrice,tokenDecimals);\n              let newBalance = trancheTokens.times(tranchePrice);\n\n              // Set new balance and tranchePrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tranchePrice = tranchePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tranchePrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Deposit':\n                trancheTokenBalance[token] = trancheTokenBalance[token].plus(tx.trancheTokens);\n              break;\n              default:\n                trancheTokenBalance[token] = trancheTokenBalance[token].minus(tx.trancheTokens);\n                if (trancheTokenBalance[token].lt(0)){\n                  trancheTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = trancheTokenBalance[token].times(lastTx.tranchePrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n\n        // console.log(timeStamp,token,filteredBalances,foundBalances);\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquityTranches;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport TranchePage from '../TranchePage/TranchePage';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TranchesList from '../TranchesList/TranchesList';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport GenericPieChart from '../GenericPieChart/GenericPieChart';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport { Box, Flex, Heading, Loader, Text, Icon, Tooltip } from \"rimble-ui\";\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass Tranches extends Component {\n\n  state = {\n    portfolio:null,\n    transactions:[],\n    tokenConfig:null,\n    selectedToken:null,\n    userHasFunds:false,\n    depositedTokens:[],\n    portfolioLoaded:false,\n    selectedProtocol:null,\n    allocationChartData:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n    const selectedToken = this.props.urlParams.param2;\n    const selectedProtocol = this.props.urlParams.param1;\n    const tokenConfig = this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null;\n    if (tokenConfig){\n      this.setState({\n        tokenConfig,\n        selectedToken,\n        selectedProtocol,\n      });\n    }\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTranchesChanged = JSON.stringify(prevProps.availableTranches) !== JSON.stringify(this.props.availableTranches);\n    if (accountChanged || availableTranchesChanged){\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async loadPortfolio(){\n    if (!this.props.account){\n      return false;\n    }\n\n    const portfolio = await this.functionsUtil.getAccountPortfolioTranches(this.props.availableTranches,this.props.account);\n    // console.log('loadPortfolio',portfolio);\n\n    if (portfolio){\n      const portfolioLoaded = true;\n      const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n\n      const tranchesTokens = [];\n      const tranchesBalances = [];\n      portfolio.tranchesBalance.forEach( trancheInfo => {\n        if (!tranchesBalances[trancheInfo.tranche]){\n          tranchesBalances[trancheInfo.tranche] = {\n            weight:this.functionsUtil.BNify(0),\n            balance:this.functionsUtil.BNify(0)\n          };\n        }\n        tranchesBalances[trancheInfo.tranche].weight = tranchesBalances[trancheInfo.tranche].weight.plus(trancheInfo.trancheWeight);\n        tranchesBalances[trancheInfo.tranche].balance = tranchesBalances[trancheInfo.tranche].balance.plus(trancheInfo.tokenBalance);\n\n        if (!tranchesTokens[trancheInfo.token]){\n          tranchesTokens[trancheInfo.token] = this.functionsUtil.BNify(0);\n        }\n        tranchesTokens[trancheInfo.token] = tranchesTokens[trancheInfo.token].plus(trancheInfo.tokenBalance);\n      });\n\n      const depositedTokens = Object.keys(tranchesTokens);\n\n      const portfolioDonutData = Object.keys(tranchesTokens).map( token => {\n        const balanceValue = parseFloat(tranchesTokens[token].toFixed(4));\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token]);\n        return {\n          id:token,\n          name:token,\n          label:token,\n          value:balanceValue,\n          description: `$ ${balanceValue} in ${token}`,\n          color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n          image:tokenConfig.icon || `images/tokens/${token}.svg`,\n        };\n      });\n\n      const allocationChartData = Object.keys(tranchesBalances).map((trancheName,i)=>{\n        const trancheConfig = tranchesConfig[trancheName];\n        const balanceInfo = tranchesBalances[trancheName];\n        const weightValue = parseFloat(balanceInfo.weight.times(100).toFixed(2));\n        return {\n          id:trancheName,\n          name:trancheName,\n          value:weightValue,\n          label: trancheConfig.name,\n          color:'hsl('+trancheConfig.color.hsl.join(',')+')',\n          description: `$ ${balanceInfo.balance.toFixed(2)} in ${trancheConfig.name}`\n        };\n      });\n\n      // console.log('allocationChartData',allocationChartData,'portfolioDonutData',portfolioDonutData);\n      \n      const transactions = portfolio.transactions;\n      const userHasFunds = portfolio && this.functionsUtil.BNify(portfolio.totalBalance).gt(0);\n\n      this.setState({\n        portfolio,\n        userHasFunds,\n        transactions,\n        portfolioLoaded,\n        depositedTokens,\n        portfolioDonutData,\n        allocationChartData\n      });\n    }\n  }\n\n  selectTranche(protocol,token){\n    const tokenConfig = this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token] ? this.props.availableTranches[protocol][token] : null;\n    if (tokenConfig){\n      const route = `${this.props.selectedSection.route}/${protocol}/${token}`;\n      // console.log('selectTranche',route);\n      this.props.goToSection(route);\n    }\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setState({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  render() {\n\n    return (\n      <Box\n        width={1}\n      >\n        {\n          this.state.tokenConfig ? (\n            <TranchePage\n              {...this.props}\n              portfolio={this.state.portfolio}\n              tokenConfig={this.state.tokenConfig}\n              selectedToken={this.state.selectedToken}\n              selectedProtocol={this.state.selectedProtocol}\n              availableTranches={this.props.availableTranches}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              <Title\n                mb={3}\n              >\n                Tranches\n              </Title>\n              {\n                this.state.portfolioLoaded && this.functionsUtil.BNify(this.state.portfolio.totalBalance).gt(0) && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.portfolio.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={5}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                /*\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.allocationChartData ? (\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  id={'allocationChart'}\n                                  height={['55px','59px']}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <GenericPieChart\n                                    {...this.props}\n                                    inline={true}\n                                    showLoader={false}\n                                    tooltipFormat={v => v+'%'}\n                                    sliceLabel={d => d.value+'%'}\n                                    width={ this.props.isMobile ? 55 : 59 }\n                                    height={ this.props.isMobile ? 55 : 59 }\n                                    chartData={this.state.allocationChartData}\n                                  />\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Portfolio Distribution\n                              </Text>\n                              {\n                                /*\n                                <Tooltip\n                                  placement={'bottom'}\n                                  message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                                >\n                                  <Icon\n                                    ml={2}\n                                    name={\"Info\"}\n                                    size={'1em'}\n                                    color={'cellTitle'}\n                                  />\n                                </Tooltip>\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={3}\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <GenericPieChart\n                            {...this.props}\n                            showLegend={true}\n                            showLoader={false}\n                            sliceLabel={d => d.value}\n                            defaultLabel={'Total Funds'}\n                            parentId={'portfolio-composition'}\n                            chartData={this.state.portfolioDonutData}\n                            defaultImage={this.props.selectedSection.image}\n                            defaultValue={`$ ${this.functionsUtil.formatMoney(parseFloat(this.state.portfolio.totalBalance),4)}`}\n                            margin={this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 }}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquityTranches\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              transactionsList={this.state.transactions}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                mb={[3,4]}\n                id={\"migrate-assets\"}\n                flexDirection={'column'}\n              >\n                <Flex\n                  pb={2}\n                  width={1}\n                  mb={[2,3]}\n                  borderColor={'divider'}\n                  borderBottom={'1px solid transparent'}\n                >\n                  <Heading.h4\n                    fontSize={[2,4]}\n                    fontWeight={[3,4]}\n                  >\n                    Available Tranches\n                  </Heading.h4>\n                </Flex>\n                <TranchesList\n                  enabledProtocols={[]}\n                  availableTranches={this.props.availableTranches}\n                  handleClick={(props) => this.selectTranche(props.protocol,props.token)}\n                  cols={[\n                    {\n                      title:'PROTOCOL',\n                      props:{\n                        width:[0.27,0.15]\n                      },\n                      fields:[\n                        {\n                          name:'protocolIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          name:'protocolName'\n                        }\n                      ]\n                    },\n                    {\n                      title:'TOKEN',\n                      props:{\n                        width:[0.21, 0.12],\n                      },\n                      fields:[\n                        {\n                          name:'tokenIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          name:'tokenName'\n                        }\n                      ]\n                    },\n                    {\n                      title:'POOL',\n                      props:{\n                        width:[0.21, 0.12],\n                      },\n                      fields:[\n                        {\n                          name:'pool',\n                          props:{\n                            decimals:2\n                          }\n                        }\n                      ]\n                    },\n                    {\n                      title:'SENIOR APY',\n                      props:{\n                        width:[0.29,0.15],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'seniorApy',\n                          showTooltip:true\n                        },\n                      ]\n                    },\n                    {\n                      title:'JUNIOR APY',\n                      props:{\n                        width:[0.29,0.15],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'juniorApy',\n                          showTooltip:true\n                        },\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'GOVERNANCE TOKENS',\n                      props:{\n                        width:[0.25,0.15],\n                      },\n                      fields:[\n                        {\n                          name:'govTokens'\n                        }\n                      ]\n                    },\n                    {\n                      title:'',\n                      mobile:this.props.account === null,\n                      props:{\n                        width:[ this.props.account === null ? 0.29 : 0 ,0.16],\n                      },\n                      parentProps:{\n                        width:1\n                      },\n                      fields:[\n                        {\n                          name:'button',\n                          label: 'Deposit',\n                          props:{\n                            width:1,\n                            fontSize:3,\n                            fontWeight:3,\n                            height:'45px',\n                            borderRadius:4,\n                            boxShadow:null,\n                            mainColor:'deposit',\n                            size: this.props.isMobile ? 'small' : 'medium',\n                            handleClick:(props) => this.selectTranche(props.protocol,props.token)\n                          }\n                        }\n                      ]\n                    }\n                  ]}\n                  {...this.props}\n                />\n              </Flex>\n              {\n                this.props.account && this.state.userHasFunds && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title mb={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                      transactionsList={this.state.transactions}\n                      availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                        availableActions[t.action.toLowerCase()] = t.action;\n                        return availableActions;\n                      },{})}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.13,0.18]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.12,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.27,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.16],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:[0.23,0.11],\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'PROTOCOL',\n                          props:{\n                            width:[0.21, 0.14],\n                          },\n                          fields:[\n                            {\n                              type:'image',\n                              name:'custom',\n                              path:['protocolIcon'],\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              type:'text',\n                              mobile:false,\n                              name:'custom',\n                              path:['protocol']\n                            }\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.16,0.14],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Tranches;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass LpStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Stake'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || contractApprovedChanged || tokenConfigChanged){\n      this.setState({\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.props.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.props.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[normalizedInputValue],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.props.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.props.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[this.functionsUtil.integerValue(this.state.stakedBalance)],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.props.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.props.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },parseInt(Date.now()/1000)) : null;\n\n    const programDuration = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programDuration\n    });\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      if (this.functionsUtil.BNify(s.initialLockedShares).gt(0) && this.functionsUtil.BNify(s.durationSec).gt(0)){\n        const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.props.contractInfo.decimals).div(s.durationSec);\n        if (!tokensPerSecond.isNaN()){\n          distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n        }\n      }\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.props.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals);\n    const stakingShare = stakedBalance.div(totalDeposits); // accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.props.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.props.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    // globalStats.push({\n    //   title:'Distribution rate',\n    //   description:'Your daily rewards distribution based on your current multiplier',\n    //   value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.props.contractInfo.rewardToken+' / day',\n    // });\n\n    const stakedBalanceUSD = stakedBalance.times(this.state.poolTokenPrice);\n    const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n    const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n    // console.log(parseFloat(this.state.stakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n\n    globalStats.push({\n      title:'APY',\n      value:`${apy.toFixed(2)}%`,\n      description:'Annualized rewards based on your current multiplier',\n    });\n\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:'Multiplier',\n      value:`${rewardMultiplier.toFixed(2)}x`,\n      description:`Deposit liquidity tokens for ${this.props.contractInfo.maxBonusDays} days to achieve a ${this.props.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.props.tokenConfig.decimals));\n    globalStats.push({\n      title:'Rewards',\n      value:currentRewards+' '+this.props.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    console.log('loadStats',stats,globalStats);\n\n    const statsLoaded = true;\n\n    this.setState({\n      stats,\n      statsLoaded,\n      globalStats,\n      stakingShare,\n      totalRewards,\n      accountingData,\n      rewardMultiplier,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed,\n      distributionSpeedMultiplier\n    });\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.contractInfo.rewardToken]);\n\n    const [\n      poolTokenPrice,\n      rewardTokenPrice,\n      tokenBalance,\n      stakedBalance,\n    ] = await Promise.all([\n      this.functionsUtil.getSushiswapPoolTokenPrice(this.props.selectedToken),\n      this.functionsUtil.getSushiswapConversionRate(DAITokenConfig,rewardTokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakedFor',[this.props.account]),\n    ]);\n\n    newState.balanceProp = this.functionsUtil.BNify(0);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n    newState.stakedBalance = !this.functionsUtil.BNify(stakedBalance).isNaN() ? this.functionsUtil.BNify(stakedBalance) : this.functionsUtil.BNify(0);\n    newState.poolTokenPrice = !this.functionsUtil.BNify(poolTokenPrice).isNaN() ? this.functionsUtil.BNify(poolTokenPrice) : this.functionsUtil.BNify(0);\n    newState.rewardTokenPrice = !this.functionsUtil.BNify(rewardTokenPrice).isNaN() ? this.functionsUtil.BNify(rewardTokenPrice) : this.functionsUtil.BNify(0);\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    console.log('updateData',this.state.selectedAction,newState);\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Pool link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:[2,0],\n                      mr:[0,index<this.state.globalStats.length-1 ? 1 : 0],\n                      width:[1,'100%']\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stake'}\n                imageSrc={'images/mint.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'stake LP Tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStake}\n                handleClick={ e => this.setAction('Stake') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isUnstake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Withdraw'}\n                imageSrc={'images/upload.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isUnstake}\n                handleClick={ e => this.setAction('Withdraw') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                // subcaption={'view some stats'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              (isStake || isUnstake) ?\n                (this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo ? (\n                  <Box\n                    mt={1}\n                    width={1}\n                    mb={[4,3]}\n                  >\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      action={txAction}\n                      steps={this.state.steps}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.props.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.props.contractInfo}\n                      permitEnabled={this.state.permitEnabled}\n                      approveEnabled={this.state.approveEnabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      contractApproved={this.contractApproved.bind(this)}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              isStake ? (\n                                `You don't have any ${this.props.selectedToken} in your wallet.`\n                              ) : isUnstake && (\n                                `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                              )\n                            }\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  </Box>\n                ) : (\n                  <Flex\n                    mt={3}\n                    mb={3}\n                    width={1}\n                  >\n                    <FlexLoader\n                      flexProps={{\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'30px'\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading info...'}\n                    />\n                  </Flex>\n                )\n              ) : isStats && (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default LpStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport { Flex, Box, Text, Icon, Input, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass IdleStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    lockPeriods:[\n      {\n        value:14,\n        type:'day',\n        label:'2 weeks'\n      },\n      {\n        value:1,\n        type:'month',\n        label:'1 month'\n      },\n      {\n        value:1,\n        type:'year',\n        label:'1 year'\n      },\n      {\n        value:4,\n        type:'year',\n        label:'4 years'\n      },\n    ],\n    lockedEnd:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    lockExpired:false,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    claimedRewards:null,\n    accountingData:null,\n    increaseAction:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    lockPeriodInput:null,\n    buttonDisabled:false,\n    internalInfoBox:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    distributedRewards:null,\n    selectedLockPeriod:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    lockPeriodTimestamp:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false,\n    lockEndDateIsMaxEndDate:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Lock'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n    const feeDistributorConfig = this.props.tokenConfig.feeDistributor;\n    await this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || accountChanged || contractApprovedChanged || tokenConfigChanged){\n      const increaseAction = selectedActionChanged ? null : this.state.increaseAction;\n      this.setState({\n        increaseAction,\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false,\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n\n    const lockPeriodChanged = prevState.lockPeriodTimestamp !== this.state.lockPeriodTimestamp;\n    const increaseActionChanged = prevState.increaseAction !== this.state.increaseAction;\n    if (lockPeriodChanged || increaseActionChanged || selectedActionChanged){\n      if (increaseActionChanged){\n        this.setState({\n          internalInfoBox:null\n        });\n      } else if (lockPeriodChanged){\n        this.calculateStkIDLEAmount();\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled(){\n    let buttonDisabled = false;\n    const minLockPeriod = this.state.lockPeriods[0];\n    const maxLockPeriod = Object.assign([],this.state.lockPeriods).pop();\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).add(minLockPeriod.value,minLockPeriod.type) : this.functionsUtil.strToMoment().add(minLockPeriod.value,minLockPeriod.type);\n    const mDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n    const maxDate = this.functionsUtil.strToMoment().add(maxLockPeriod.value,maxLockPeriod.type);\n    switch (this.state.selectedAction){\n      default:\n      case 'Lock':\n        buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n      break;\n      case 'Increase Lock':\n        if (this.state.increaseAction === 'time'){\n          buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n        }\n      break;\n    }\n\n    // console.log('checkButtonDisabled',this.state.selectedAction,this.state.increaseAction,buttonDisabled);\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    },() => {\n      this.calculateStkIDLEAmount();\n    });\n  }\n\n  calculateStkIDLEAmount(){\n    let internalInfoBox = null;\n    if (this.state.inputValue && this.functionsUtil.BNify(this.state.inputValue).gt(0) && this.state.lockPeriodTimestamp !== null){\n      switch (this.state.selectedAction){\n        case 'Lock':\n          const currTime = parseInt(Date.now()/1000);\n          const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n          let endDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n          if (endDate.isAfter(maxDate)){\n            endDate = maxDate;\n          }\n          const endDateTime = parseInt(endDate._d.getTime()/1000)-currTime;\n          const maxDateTime = parseInt(maxDate._d.getTime()/1000)-currTime;\n          const stkIDLEAmount = this.state.inputValue.times(endDateTime).div(maxDateTime);\n\n          const percentage = stkIDLEAmount.div(this.state.inputValue).times(100);\n\n          // console.log(this.state.inputValue.toString(),endDate.format('YYYY-MM-DD HH:mm:ss'),maxDate.format('YYYY-MM-DD HH:mm:ss'),endDateTime,maxDateTime,stkIDLEAmount.toFixed());\n\n          let text = `By staking <strong>${this.state.inputValue.toFixed(4)} ${this.props.selectedToken}</strong> until <strong>${endDate.utc().format('YYYY-MM-DD HH:mm')} UTC</strong> you will get back <strong>${stkIDLEAmount.toFixed(4)} ${this.props.tokenConfig.contract.name}</strong> (${Math.ceil(percentage)}%).`;\n          if (Math.ceil(percentage)<100){\n            text += `<br />Stake your tokens for <strong>4 years</strong> to reach the maximum staking power.`;\n          }\n          text += `<br /><span style=\"color:${this.props.theme.colors.alert};font-size:14px\">Keep in mind that once you lock ${this.props.selectedToken} you cannot reverse the operation until the lock end date has been reached.</span>`;\n          internalInfoBox = {\n            text,\n            icon:'LockOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          };\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      internalInfoBox\n    });\n  }\n\n  getIncreaseTimeParams(){\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    // console.log('getIncreaseTimeParams',_unlock_time);\n    return [_unlock_time];\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const _value = this.functionsUtil.toBN(amount);\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    switch (this.state.selectedAction){\n      case 'Lock':\n        methodName = 'create_lock';\n        methodParams = [_value,_unlock_time];\n        // console.log('getTransactionParams',methodName,methodParams);\n      break;\n      case 'Increase Lock':\n        methodName = 'increase_amount';\n        methodParams = [_value];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n\n    const stats = [];\n    const globalStats = [];\n    const statsLoaded = true;\n\n    let [\n      etherscanRewardsTxs,\n      tokenTotalSupply,\n      totalSupply,\n      claimableRewards,\n      lockedInfo,\n      tokenUserBalance,\n      claimable,\n      claimEvents,\n      // checkpointEvents,\n      depositEvents\n    ] = await Promise.all([\n      this.functionsUtil.getIdleStakingRewardsTxs(),\n      this.functionsUtil.getTokenTotalSupply(this.props.contractInfo.name),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name,'supply'),\n      this.functionsUtil.getTokenBalance(this.props.contractInfo.rewardToken,this.props.tokenConfig.feeDistributor.address),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked',[this.props.account]) : null,\n      this.props.account ? this.functionsUtil.getContractBalance(this.props.contractInfo.name,this.props.account) : this.functionsUtil.BNify(0),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.tokenConfig.feeDistributor.name,'claim',[this.props.account]) : this.functionsUtil.BNify(0),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'Claimed',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      // this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'CheckpointToken',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      this.props.account ? this.functionsUtil.getContractEvents(this.props.contractInfo.name,'Deposit',{fromBlock: this.props.contractInfo.fromBlock, toBlock:'latest',filter:{provider:this.props.account}}) : []\n    ]);\n\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n\n    const distributedRewards = etherscanRewardsTxs.map( tx => (\n      {\n        hash:tx.hash,\n        tokenName:tx.tokenSymbol,\n        amount:this.functionsUtil.fixTokenDecimals(tx.value,rewardTokenConfig.decimals),\n        date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n      }\n    ));\n\n    const claimedRewards = [];\n    let totalClaimedUser = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(claimEvents, async (e) => {\n      if (this.props.account && e.returnValues.recipient.toLowerCase() === this.props.account.toLowerCase()){\n        const blockInfo = await this.functionsUtil.getBlockInfo(e.blockNumber);\n        if (blockInfo){\n          const claimedAmount = this.functionsUtil.fixTokenDecimals(e.returnValues.amount,rewardTokenConfig.decimals);\n          totalClaimedUser = totalClaimedUser.plus(claimedAmount);\n          claimedRewards.push({\n            amount:claimedAmount,\n            hash:e.transactionHash,\n            tokenName:this.props.contractInfo.rewardToken,\n            date:this.functionsUtil.strToMoment(parseInt(blockInfo.timestamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n          });\n        }\n      }\n    });\n\n    tokenUserBalance = this.functionsUtil.fixTokenDecimals(tokenUserBalance,this.props.contractInfo.decimals);\n\n    const totalDeposited = totalSupply ? this.functionsUtil.fixTokenDecimals(totalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const totalLockedFunds = totalSupply ? this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken : (this.state.stats.length ? this.state.stats[0] : this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken);\n    stats.push({\n      title:'Total Locked Funds',\n      value:totalLockedFunds\n    });\n\n    tokenTotalSupply = tokenTotalSupply ? this.functionsUtil.fixTokenDecimals(tokenTotalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const stkTokenTotalSupply = tokenTotalSupply ? this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name : (this.state.stats.length ? this.state.stats[1] : this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name);\n    stats.push({\n      title:`${this.props.contractInfo.name} Total Supply`,\n      value:stkTokenTotalSupply\n    });\n\n    const claimableRewardsFormatted = claimableRewards ? this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken : (this.state.stats.length ? this.state.stats[2] : this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken);\n    stats.push({\n      title:'Claimable Rewards',\n      value:claimableRewardsFormatted\n    });\n\n    const totalClaimed = claimEvents.reduce( (totalClaimed,event) => {\n      const claimedAmount = this.functionsUtil.fixTokenDecimals(event.returnValues.amount,rewardTokenConfig.decimals);\n      totalClaimed = totalClaimed.plus(claimedAmount);\n      return totalClaimed;\n    },this.functionsUtil.BNify(0));\n\n    const totalRewards = claimableRewards ? totalClaimed.plus(claimableRewards) : this.functionsUtil.BNify(0);\n    const totalRewardsFormatted = claimableRewards ? this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken : (this.state.stats.length ? this.state.stats[3] : this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken);\n    stats.push({\n      title:'Total Rewards',\n      value:totalRewardsFormatted\n    });\n\n    const stakedBalance = lockedInfo && lockedInfo.amount ? this.functionsUtil.fixTokenDecimals(lockedInfo.amount,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const userDeposited = this.functionsUtil.formatMoney(stakedBalance,4);\n    globalStats.push({\n      title:'Total Deposited',\n      description:'Your total deposited amount',\n      value:userDeposited+' '+this.props.contractInfo.rewardToken,\n    });\n\n    const stakingShare = tokenUserBalance.div(tokenTotalSupply);\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:`${this.props.contractInfo.name} balance`,\n      value:`${this.functionsUtil.formatMoney(tokenUserBalance,4)} ${this.props.contractInfo.name}`,\n    });\n    \n    claimable = claimable ? this.functionsUtil.fixTokenDecimals(claimable,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const currentRewards = this.functionsUtil.formatMoney(claimable,4);\n    globalStats.push({\n      title:'Claimable Rewards',\n      value:`${currentRewards} ${this.props.contractInfo.rewardToken}`,\n      // description:'Your claimable rewards'\n    });\n\n    const totalCollectedRewards = claimable.plus(totalClaimedUser);\n\n    let stakeStartTime = depositEvents.reduce( (stakedTime,event) => {\n      const depositTimestamp = this.functionsUtil.BNify(event.returnValues.ts);\n      const depositValue = this.functionsUtil.fixTokenDecimals(event.returnValues.value,this.props.tokenConfig.decimals);\n      if (depositValue.gt(0)){\n        stakedTime = stakedTime.plus(depositValue.times(depositTimestamp));\n        // console.log(depositTimestamp.toString(),depositValue.toFixed(),stakedTime.toString());\n      }\n      return stakedTime;\n    },this.functionsUtil.BNify(0));\n\n    // console.log('stakeStartTime',stakeStartTime,stakedBalance.toFixed());\n\n    stakeStartTime = stakedBalance.gt(0) ? Math.ceil(stakeStartTime.div(stakedBalance)) : 0;\n    // const latestCheckpoint = checkpointEvents.length ? checkpointEvents[checkpointEvents.length-1] : null;\n    // const latestDistribution = etherscanRewardsTxs[0];\n    // const latestDistributionTime = latestDistribution ? this.functionsUtil.BNify(latestDistribution.timeStamp) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    // const latestDistributionTime = latestCheckpoint ? this.functionsUtil.BNify(latestCheckpoint.returnValues.time) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    const currTime = parseInt(Date.now()/1000);\n    const stakePeriod = this.functionsUtil.BNify(currTime).minus(stakeStartTime);\n    const currentProfit = stakedBalance.gt(0) ? totalCollectedRewards.div(stakedBalance) : this.functionsUtil.BNify(0);\n    const weeksPerYear = 52.14;\n    const secondsPerWeek = 604800;\n    const stakePeriodWeeks = Math.max(1,Math.floor(stakePeriod.div(secondsPerWeek)));\n    const apr = stakePeriod.gt(0) ? currentProfit.times(weeksPerYear).div(stakePeriodWeeks).times(100) : this.functionsUtil.BNify(0);\n    \n    // console.log('APR',currTime,stakeStartTime,apr.toFixed(),currentProfit.toFixed(),stakePeriod.toFixed(),stakePeriodWeeks,totalCollectedRewards.toFixed(),stakedBalance.toFixed());\n\n    globalStats.push({\n      title:'APR',\n      value:`${apr.toFixed(2)}%`,\n      description:'APR is based on your Claimable Rewards and Total Deposited'\n    });\n\n    const lockEndDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm') : '';\n    globalStats.push({\n      value:lockEndDate,\n      title:'Lock End Date (UTC)',\n      description:'Ending date of your Lock'\n    });\n\n    this.setState({\n      stats,\n      claimable,\n      globalStats,\n      statsLoaded,\n      stakedBalance,\n      claimedRewards,\n      distributedRewards\n    });\n  }\n\n  async contractApprovedCallback(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setIncreaseAction(increaseAction){\n    this.setState({\n      increaseAction\n    });\n  }\n\n  changelockPeriodInput(e){\n    const selectedLockPeriod = null;\n    const lockPeriodInput = e.target.value;\n    const currDate = this.functionsUtil.strToMoment();\n    const mDate = this.functionsUtil.strToMoment(lockPeriodInput+' '+currDate.format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss').add(1,'second');\n    if (mDate.isValid()){\n      const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n      // console.log('changelockPeriodInput',lockPeriodTimestamp);\n      this.setState({\n        lockPeriodInput,\n        selectedLockPeriod,\n        lockPeriodTimestamp\n      });\n    }\n  }\n\n  selectLockPeriod(selectedLockPeriod){\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000) : this.functionsUtil.strToMoment();\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n    let mDate = minDate.add(selectedLockPeriod.value,selectedLockPeriod.type).add(1,'second');\n\n    // Check if after 4 years from now\n    if (mDate.isAfter(maxDate)){\n      mDate = maxDate;\n    }\n\n    const lockPeriodInput = mDate.format('YYYY-MM-DD');\n    const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n\n    // console.log('selectLockPeriod',lockPeriodInput,lockPeriodTimestamp);\n\n    this.setState({\n      lockPeriodInput,\n      selectedLockPeriod,\n      lockPeriodTimestamp\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    let internalInfoBox = null;\n    switch (this.state.selectedAction){\n      case 'Lock':\n        const lockedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const lockedTokens = lockedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(lockedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully locked <strong>${lockedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Increase Lock':\n        switch (this.state.increaseAction){\n          case 'time':\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock until <strong>${this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000).utc().format('YYYY/MM/DD HH:mm')} UTC</strong>`\n            }\n          break;\n          case 'amount':\n            const increaseAmountTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            const increaseTokens = increaseAmountTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(increaseAmountTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock by <strong>${increaseTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Claim':\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),rewardTokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully claimed <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      internalInfoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    // const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.contractInfo.rewardToken]);\n\n    const [\n      tokenBalance,\n      lockedEnd,\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked__end',[this.props.account])\n    ]);\n\n    newState.lockedEnd = lockedEnd && parseInt(lockedEnd)>0 ? parseInt(lockedEnd) : null;\n    newState.lockExpired = newState.lockedEnd && newState.lockedEnd<=parseInt(Date.now()/1000);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n\n    let selectedAction = this.state.selectedAction;\n\n    if (selectedAction==='Withdraw' && !newState.lockExpired){\n      selectedAction = 'Lock';\n      newState.selectedAction = selectedAction;\n    }\n\n    // Select Increase if already created a lock\n    if (newState.lockedEnd && selectedAction==='Lock'){\n      selectedAction = 'Increase Lock';\n      newState.increaseAction = 'time';\n      newState.selectedAction = selectedAction;\n    } else if (selectedAction==='Increase Lock' && !newState.increaseAction && !this.state.increaseAction){\n      newState.increaseAction = 'time';\n    }\n\n    // Select Withdraw if the lock has expired\n    if (selectedAction==='Increase Lock' && newState.lockExpired){\n      selectedAction = 'Withdraw';\n      newState.selectedAction = selectedAction;\n    }\n\n    switch (selectedAction){\n      case 'Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n      break;\n      case 'Increase Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = newState.tokenBalance;\n        newState.lockPeriodInput = this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD');\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n      break;\n      default:\n      break;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.internalInfoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year').format('YYYY-MM-DD');\n    newState.lockEndDateIsMaxEndDate = newState.lockedEnd ? this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD')===maxDate : false;\n\n    // console.log('lockEndDateIsMaxEndDate',newState.lockEndDateIsMaxEndDate,maxDate,this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD'));\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isLock = this.state.selectedAction === 'Lock';\n    const isStats = this.state.selectedAction === 'Stats';\n    const isClaim = this.state.selectedAction === 'Claim';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isIncrease = this.state.selectedAction === 'Increase Lock';\n    const txAction = this.state.selectedAction;\n    const canIncrease = !this.state.lockExpired;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Token link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              mb={1}\n              width={1}\n              style={{\n                flexBasis:'0',\n                flex:'1 1 0px',\n                flexWrap:'wrap'\n              }}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:2,\n                      width:['49%','33%'],\n                      // mr:[0,index<this.state.globalStats.length-1 ? 1 : 0]\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.lockedEnd === null ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isLock ? 2 : 0\n                    }}\n                    caption={'Lock'}\n                    width={[1,'32%']}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isLock}\n                    handleClick={ e => this.setAction('Lock') }\n                  />\n                ) : !this.state.lockExpired ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isIncrease ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    isActive={isIncrease}\n                    caption={'Increase Lock'}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '54px'\n                    }}\n                    handleClick={ e => this.setAction('Increase Lock') }\n                  />\n                ) : (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isUnstake ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isUnstake}\n                    handleClick={ e => this.setAction('Withdraw') }\n                  />\n                )\n              }\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isClaim ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Claim'}\n                imageSrc={'images/reward.png'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isClaim}\n                handleClick={ e => this.setAction('Claim') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              this.state.internalInfoBox && (\n                <IconBox\n                  cardProps={{\n                    mt:1,\n                    mb:3\n                  }}\n                  {...this.state.internalInfoBox}\n                />\n              )\n            }\n            {\n              isStats ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                  <Text\n                    mb={1}\n                  >\n                    Distributed Rewards:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        pt:2,\n                        pb:3,\n                        px:3,\n                        width:1,\n                        display:'flex',\n                        alignItems:'center',\n                        justifyContent:'center'\n                      }}\n                      isActive={false}\n                      isInteractive={false}\n                    >\n                      {\n                        this.state.distributedRewards && this.state.distributedRewards.length ? (\n                          <Flex\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              pt={0}\n                              pb={1}\n                              width={1}\n                              flexDirection={'row'}\n                              borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.5 : 0.4}\n                              >\n                                Date\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.5 : 0.3}\n                                textAlign={this.props.isMobile ? 'right' : 'left'}\n                              >\n                                Amount\n                              </Text>\n                              {\n                                !this.props.isMobile && (\n                                  <Text\n                                    width={0.3}\n                                    fontSize={1}\n                                    fontWeight={3}\n                                  >\n                                    Hash\n                                  </Text>\n                                )\n                              }\n                            </Flex>\n                            {\n                              this.state.distributedRewards.map( (reward,index) => (\n                                <Flex\n                                  py={1}\n                                  width={1}\n                                  flexDirection={'row'}\n                                  key={`rewards_${index}`}\n                                  borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                >\n                                  <Text\n                                    fontWeight={2}\n                                    color={'statValue'}\n                                    fontSize={this.props.isMobile ? 1 : 2}\n                                    width={this.props.isMobile ? 0.5 : 0.4}\n                                  >\n                                    {reward.date}\n                                  </Text>\n                                  <Text\n                                    fontWeight={2}\n                                    color={'statValue'}\n                                    fontSize={this.props.isMobile ? 1 : 2}\n                                    width={this.props.isMobile ? 0.5 : 0.3}\n                                    textAlign={this.props.isMobile ? 'right' : 'left'}\n                                  >\n                                    {reward.amount.toFixed(4)} {reward.tokenName}\n                                  </Text>\n                                  {\n                                    !this.props.isMobile && (\n                                      <ExtLink\n                                        width={0.3}\n                                        color={'link'}\n                                        hoverColor={'link'}\n                                        href={this.functionsUtil.getEtherscanTransactionUrl(reward.hash)}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                        >\n                                          <Text\n                                            fontSize={2}\n                                            fontWeight={2}\n                                            color={'link'}\n                                          >\n                                            {this.functionsUtil.shortenHash(reward.hash)}\n                                          </Text>\n                                          <Icon\n                                            ml={1}\n                                            size={'1.2em'}\n                                            color={'link'}\n                                            name={'OpenInNew'}\n                                          />\n                                        </Flex>\n                                      </ExtLink>\n                                    )\n                                  }\n                                </Flex>\n                              ))\n                            }\n                          </Flex>\n                        ) : (\n                          <Text\n                            fontSize={2}\n                            color={'statValue'}\n                          >\n                            No reward distributed yet.\n                          </Text>\n                        )\n                      }\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              ) : (this.props.account && this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo) ? (\n                <Box\n                  mt={1}\n                  width={1}\n                  mb={[4,3]}\n                >\n                  {\n                    (isIncrease && canIncrease) && (\n                      <Box\n                        mb={2}\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Choose increase value:\n                        </Text>\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AccessTime'}\n                            iconColor={'deposit'}\n                            iconBgColor={'#ced6ff'}\n                            isActive={ this.state.increaseAction === 'time' }\n                            handleClick={ e => this.setIncreaseAction('time') }\n                            text={this.props.isMobile ? 'Time' : 'Increase Time'}\n                          />\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AttachMoney'}\n                            iconColor={'redeem'}\n                            iconBgColor={'#ceeff6'}\n                            isActive={ this.state.increaseAction === 'amount' }\n                            handleClick={ e => this.setIncreaseAction('amount') }\n                            text={this.props.isMobile ? 'Amount' : 'Increase Amount'}\n                          />\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                  {\n                    ((isLock && this.state.balanceProp && this.state.contractApproved && this.state.balanceProp.gt(0)) || (isIncrease && canIncrease)) && (\n                      <Box\n                        width={1}\n                      > \n                        {\n                          (isLock || this.state.increaseAction === 'time') && (\n                            <Box\n                              width={1}\n                            >\n                              <Text mb={1}>\n                                Choose lock period:\n                              </Text>\n                              {\n                                !this.state.lockEndDateIsMaxEndDate ? (\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Input\n                                      mb={2}\n                                      width={1}\n                                      type={\"date\"}\n                                      required={true}\n                                      height={'3.4em'}\n                                      borderRadius={2}\n                                      fontWeight={500}\n                                      borderColor={'cardBorder'}\n                                      backgroundColor={'cardBg'}\n                                      boxShadow={'none !important'}\n                                      value={this.state.lockPeriodInput || ''}\n                                      onChange={this.changelockPeriodInput.bind(this)}\n                                      border={`1px solid ${this.props.theme.colors.divider}`}\n                                    />\n                                    <Flex\n                                      mb={3}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'row'}\n                                      justifyContent={'space-between'}\n                                    >\n                                      {\n                                        this.state.lockPeriods.map( (p,index) => {\n                                          const isActive = this.state.selectedLockPeriod ? this.state.selectedLockPeriod.value===p.value && this.state.selectedLockPeriod.type === p.type : false;\n                                          return (\n                                            <DashboardCard\n                                              cardProps={{\n                                                p:2,\n                                                width:0.24,\n                                              }}\n                                              isActive={isActive}\n                                              isInteractive={true}\n                                              key={`lockPeriod_${index}`}\n                                              handleClick={e => this.selectLockPeriod(p)}\n                                            >\n                                              <Text \n                                                fontWeight={3}\n                                                fontSize={[1,2]}\n                                                textAlign={'center'}\n                                                color={isActive ? 'copyColor' : 'cellText'}\n                                              >\n                                                {p.label}\n                                              </Text>\n                                            </DashboardCard>\n                                          );\n                                        })\n                                      }\n                                    </Flex>\n                                    {\n                                      isIncrease && (\n                                        <ExecuteTransaction\n                                          params={[]}\n                                          {...this.props}\n                                          parentProps={{\n                                            width:1,\n                                            alignItems:'center',\n                                            justifyContent:'center'\n                                          }}\n                                          Component={Button}\n                                          componentProps={{\n                                            fontSize:3,\n                                            fontWeight:3,\n                                            size:'medium',\n                                            width:[1,1/2],\n                                            borderRadius:4,\n                                            mainColor:'deposit',\n                                            value:'Increase Time',\n                                            disabled:this.state.buttonDisabled\n                                          }}\n                                          action={'Increase Time'}\n                                          methodName={'increase_unlock_time'}\n                                          contractName={this.props.contractInfo.name}\n                                          callback={this.transactionSucceeded.bind(this)}\n                                          getTransactionParams={this.getIncreaseTimeParams.bind(this)}\n                                        />\n                                      )\n                                    }\n                                  </Flex>\n                                ) : (\n                                  <IconBox\n                                    cardProps={{\n                                      mt:1,\n                                      mb:3\n                                    }}\n                                    icon={'Warning'}\n                                    iconProps={{\n                                      color:'cellText'\n                                    }}\n                                    text={`Your tokens are locked for the maxumum allowed period.`}\n                                  />\n                                )\n                              }\n                            </Box>\n                          )\n                        }\n                      </Box>\n                    )\n                  }\n                  {\n                    (isLock || this.state.increaseAction==='amount') ? (\n                      <SendTxWithBalance\n                        error={null}\n                        {...this.props}\n                        action={txAction}\n                        steps={this.state.steps}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.props.tokenConfig}\n                        tokenBalance={this.state.balanceProp}\n                        contractInfo={this.props.contractInfo}\n                        permitEnabled={this.state.permitEnabled}\n                        buttonDisabled={this.state.buttonDisabled}\n                        approveEnabled={this.state.approveEnabled}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        balanceSelectorInfo={this.state.balanceSelectorInfo}\n                        changeInputCallback={this.changeInputCallback.bind(this)}\n                        contractApproved={this.contractApprovedCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                (isLock || isIncrease) ? (\n                                  `You don't have any ${this.props.selectedToken} in your wallet.`\n                                ) : isUnstake && (\n                                  `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                                )\n                              }\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (isIncrease && !canIncrease) ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'LockOpen'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            You cannot increase an expired lock, please Withdraw.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    ) : isUnstake ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.lockExpired ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock has expired, you can withdraw your {this.props.selectedToken}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                  value:'Withdraw',\n                                }}\n                                action={'Withdraw'}\n                                methodName={'withdraw'}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock is not expired yet, please wait until {this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm')} UTC to withdraw your {this.props.selectedToken}.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    ) : isClaim && (\n                      <Flex\n                        width={1}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mb:1\n                          }}\n                        >\n                          {\n                            (this.state.claimable && this.state.claimable.gt(0)) ? (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  color={'cellText'}\n                                  name={'MonetizationOn'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  mb={3}\n                                  fontSize={[2,3]}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can claim <strong>{this.state.claimable.toFixed(8)} {this.props.contractInfo.rewardToken}</strong>.\n                                </Text>\n                                <ExecuteTransaction\n                                  params={[]}\n                                  {...this.props}\n                                  Component={Button}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/3],\n                                    value:'Claim',\n                                    borderRadius:4,\n                                    mainColor:'redeem',\n                                  }}\n                                  action={'Claim'}\n                                  methodName={'claim'}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractName={this.props.tokenConfig.feeDistributor.name}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have rewards to Claim yet.\n                                </Text>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                        <Text\n                          mb={1}\n                        >\n                          Claimed Rewards:\n                        </Text>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              pt:2,\n                              pb:3,\n                              px:3,\n                              width:1,\n                              display:'flex',\n                              alignItems:'center',\n                              justifyContent:'center'\n                            }}\n                            isActive={false}\n                            isInteractive={false}\n                          >\n                            {\n                              this.state.claimedRewards && this.state.claimedRewards.length ? (\n                                <Flex\n                                  width={1}\n                                  flexDirection={'column'}\n                                >\n                                  <Flex\n                                    pt={0}\n                                    pb={1}\n                                    width={1}\n                                    flexDirection={'row'}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.4}\n                                    >\n                                      Date\n                                    </Text>\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      Amount\n                                    </Text>\n                                    {\n                                      !this.props.isMobile && (\n                                        <Text\n                                          width={0.3}\n                                          fontSize={1}\n                                          fontWeight={3}\n                                        >\n                                          Hash\n                                        </Text>\n                                      )\n                                    }\n                                  </Flex>\n                                  {\n                                    this.state.claimedRewards.map( (claim,index) => (\n                                      <Flex\n                                        py={1}\n                                        width={1}\n                                        flexDirection={'row'}\n                                        key={`claim_${index}`}\n                                        borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                      >\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.4}\n                                        >\n                                          {claim.date}\n                                        </Text>\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.3}\n                                          textAlign={this.props.isMobile ? 'right' : 'left'}\n                                        >\n                                          {claim.amount.toFixed(4)} {claim.tokenName}\n                                        </Text>\n                                        {\n                                          !this.props.isMobile && (\n                                            <ExtLink\n                                              width={0.3}\n                                              color={'link'}\n                                              hoverColor={'link'}\n                                              href={this.functionsUtil.getEtherscanTransactionUrl(claim.hash)}\n                                            >\n                                              <Flex\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                              >\n                                                <Text\n                                                  fontSize={2}\n                                                  fontWeight={2}\n                                                  color={'link'}\n                                                >\n                                                  {this.functionsUtil.shortenHash(claim.hash)}\n                                                </Text>\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1.2em'}\n                                                  color={'link'}\n                                                  name={'OpenInNew'}\n                                                />\n                                              </Flex>\n                                            </ExtLink>\n                                          )\n                                        }\n                                      </Flex>\n                                    ))\n                                  }\n                                </Flex>\n                              ) : (\n                                <Text\n                                  fontSize={2}\n                                  color={'statValue'}\n                                >\n                                  No reward claimed yet.\n                                </Text>\n                              )\n                            }\n                          </DashboardCard>\n                        </Flex>\n                      </Flex>\n                    )\n                  }\n                </Box>\n              ) : !this.props.account ? (\n                <ConnectBox\n                  cardProps={{\n                    mt:2\n                  }}\n                  {...this.props}\n                />\n              ) : (\n                <Flex\n                  mt={3}\n                  mb={3}\n                  width={1}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default IdleStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n// import NXMaster from '../abis/nexus/NXMaster.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Box, Text, Input, Link, Progress, Button, Icon, Tooltip } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    quote:null,\n    steps:{\n      1:'Get Quote',\n      2:'Buy Cover'\n    },\n    periodOptions:{\n      30:{\n        label:'30d'\n      },\n      60:{\n        label:'60d'\n      },\n      90:{\n        label:'90d'\n      },\n      365:{\n        label:'1y'\n      }\n    },\n    coverId:null,\n    claimId:null,\n    capacity:null,\n    loading:false,\n    coverCost:null,\n    amountValue:'',\n    periodValue:'',\n    yearlyCost:null,\n    maxCapacity:null,\n    amountValid:true,\n    periodValid:true,\n    tokenConfig:null,\n    tokenBalance:null,\n    selectedToken:null,\n    claimableCovers:[],\n    tokenApproved:false,\n    selectedPeriod:null,\n    maxPriceWithFee:null,\n    transactionParams:[],\n    transactionValue:null,\n    yieldTokenBalance:null,\n    selectedUnderlying:null,\n    selectedAction:'deposit',\n    yieldTokenApproved:false,\n    claimButtonDisabled:false,\n    selectedCoverToClaim:null,\n    defaultClaimableCover:null,\n    selectedUnderlyingConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async loadContracts(){\n    const claimableCovers = [];\n    const nexusMutualCoverages = await this.functionsUtil.getNexusMutualCoverages(this.props.account);\n    nexusMutualCoverages.forEach( coverage => {\n      if (coverage.incident){\n        claimableCovers.push(coverage);\n      }\n    });\n\n    const validClaimableCoverFromParam = this.props.urlParams.param3 ? claimableCovers.find( cover => parseInt(cover.value) === parseInt(this.props.urlParams.param3) ) : null;\n\n    const defaultClaimableCover = claimableCovers.length>0 ? claimableCovers[0] : null;\n    const selectedCoverToClaim = validClaimableCoverFromParam ? validClaimableCoverFromParam : defaultClaimableCover || null;\n\n    this.setState({\n      claimableCovers,\n      selectedCoverToClaim,\n      defaultClaimableCover\n    });\n\n    const selectedAction = ['deposit','claim'].includes(this.props.urlParams.param2) ? this.props.urlParams.param2 : this.state.selectedAction;\n    const paramIsValidToken = this.props.urlParams.param3 && Object.keys(this.props.toolProps.availableTokens).includes(this.props.urlParams.param3);\n    const selectedToken = paramIsValidToken ? this.props.urlParams.param3 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    this.setSelectedAction(selectedAction);\n    this.changeSelectedToken(selectedToken);\n    // console.log('coverBoughtEvents',coverBoughtEvents,'claimSubmittedEvents',claimSubmittedEvents,'claimableCovers',claimableCovers);\n  }\n\n  async getPoolCapacity(selectedUnderlying,tokenConfig){\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const response = await this.functionsUtil.makeRequest(`${baseEndpoint}contracts/${tokenConfig.address}/capacity`);\n    if (response && response.data){\n      const capacity = response.data;\n      // console.log('getPoolCapacity',capacity);\n      const maxCapacity = capacity && capacity[`capacity${selectedUnderlying}`] ? this.functionsUtil.fixTokenDecimals(capacity[`capacity${selectedUnderlying}`],tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      return maxCapacity;\n    }\n    return false;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const selectedUnderlyingChanged = prevState.selectedUnderlying !== this.state.selectedUnderlying;\n    if (selectedTokenChanged || selectedUnderlyingChanged){\n      this.loadTokenData();\n    }\n  }\n\n  async loadTokenData(){\n\n    const isETH = this.state.selectedToken === 'ETH';\n    const selectedUnderlyingConfig = this.state.tokenConfig.underlying[this.state.selectedUnderlying];\n\n    // Init Underlying Contract\n    await Promise.all([\n      this.props.initContract(this.state.tokenConfig.token, this.state.tokenConfig.realAddress, this.state.tokenConfig.abi),\n      this.props.initContract(selectedUnderlyingConfig.name, selectedUnderlyingConfig.address, selectedUnderlyingConfig.abi)\n    ]);\n\n    let [\n      maxCapacity,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      tokenApproved,\n      tokenBalance\n    ] = await Promise.all([\n      this.getPoolCapacity(this.state.selectedUnderlying,this.state.tokenConfig),\n      this.functionsUtil.getTokenBalance(this.state.tokenConfig.token,this.props.account),\n      this.functionsUtil.checkTokenApproved(this.state.selectedToken,this.props.contractInfo.address,this.props.account),\n      this.functionsUtil.checkTokenApproved(selectedUnderlyingConfig.name,this.props.contractInfo.address,this.props.account),\n      isETH ? this.functionsUtil.getETHBalance(this.props.account,false) : this.functionsUtil.getTokenBalance(selectedUnderlyingConfig.name,this.props.account,false),\n    ]);\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n    yieldTokenBalance = yieldTokenBalance || this.functionsUtil.BNify(0);\n\n    this.setState({\n      maxCapacity,\n      tokenBalance,\n      tokenApproved,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      selectedUnderlyingConfig\n    });\n  }\n\n  async changeSelectedToken(selectedToken){\n    const periodValue = '';\n    const amountValue = '';\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const selectedUnderlying = Object.keys(tokenConfig.underlying)[0];\n\n    this.setState({\n      amountValue,\n      periodValue,\n      tokenConfig,\n      selectedToken,\n      selectedUnderlying\n    });\n  }\n\n  changeSelectedUnderlying(selectedUnderlying){\n    this.setState({\n      selectedUnderlying\n    });\n  }\n\n  setMaxCoverAmount(){\n    const amountValue = this.state.maxCapacity.toFixed();\n    this.changeAmount({\n      target:{\n        value:amountValue\n      }\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    const amountValid = this.functionsUtil.BNify(amountValue).gt(0) && this.functionsUtil.BNify(amountValue).lte(this.state.maxCapacity);\n    this.setState({\n      amountValue,\n      amountValid\n    });\n  }\n\n  changePeriod = (e) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=30 && parseInt(periodValue)<=365;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod:null\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    // Setup your cover data.\n    const coverData = {\n      period: this.state.periodValue, // days\n      coverAmount: this.state.amountValue, // ETH in units not wei\n      currency: this.state.selectedUnderlying,\n      contractAddress: this.state.tokenConfig.address, // the contract you will be buying cover for\n      asset: this.state.tokenConfig.underlying[this.state.selectedUnderlying].address\n    };\n\n    // URL to request a quote for.\n    // const quoteURL = 'https://api.nexusmutual.io/v1/quote?' +\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const quoteURL = `${baseEndpoint}quote?coverAmount=${coverData.coverAmount}&currency=${coverData.currency}&period=${coverData.period}&contractAddress=${coverData.contractAddress}`;\n\n    const response = await this.functionsUtil.makeRequest(quoteURL);\n\n    const quote = response && response.data ? response.data : null;\n\n    if (!quote){\n      this.setState({\n        loading:false\n      });\n      return false;\n    }\n\n    // encode the signature result in the data field\n    const data = this.props.web3.eth.abi.encodeParameters(\n      ['uint', 'uint', 'uint', 'uint', 'uint8', 'bytes32', 'bytes32'],\n      [quote.price, quote.priceInNXM, quote.expiresAt, quote.generatedAt, quote.v, quote.r, quote.s],\n    );\n\n    const COVER_TYPE = this.functionsUtil.toBN(0);\n    const feePercentage = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'feePercentage');\n    const basePrice = this.functionsUtil.toBN(quote.price);\n    const priceWithFee = basePrice.mul(this.functionsUtil.toBN(feePercentage)).divn(10000).add(basePrice);\n    const amountInWei = this.functionsUtil.toWei(coverData.coverAmount.toString());\n    const maxPriceWithFee = priceWithFee;\n    const coverCost = this.functionsUtil.fixTokenDecimals(maxPriceWithFee,this.state.tokenConfig.decimals);\n    const yearlyCost = coverCost.div(this.state.amountValue).times(365).div(this.state.periodValue).times(100);\n\n    // console.log('coverCost',maxPriceWithFee,coverCost.toFixed(),this.state.amountValue.toFixed(),this.state.periodValue,yearlyCost.toFixed());\n\n    const transactionParams = [\n      coverData.contractAddress,\n      coverData.asset,\n      amountInWei,\n      coverData.period,\n      COVER_TYPE,\n      maxPriceWithFee,\n      data\n    ];\n\n    const transactionValue = this.state.selectedUnderlying === 'ETH' ? priceWithFee : null;\n\n    // console.log(feePercentage,transactionParams,transactionValue,quote);\n\n    // debugger;\n\n    const step = 2;\n    const loading = false;\n\n    this.setState({\n      step,\n      quote,\n      loading,\n      coverCost,\n      yearlyCost,\n      maxPriceWithFee,\n      transactionValue,\n      transactionParams\n    });\n  }\n\n  approveSucceeded = (tx) => {\n    const tokenApproved = true;\n    this.setState({\n      tokenApproved\n    });\n  }\n\n  yieldTokenApproveSucceeded = (tx) => {\n    const yieldTokenApproved = true;\n    this.setState({\n      yieldTokenApproved\n    });\n  }\n\n  claimInputChange = (amount) => {\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.tokenConfig.decimals);\n    const claimButtonDisabled = this.functionsUtil.BNify(amount).lte(0) || this.functionsUtil.BNify(normalizedAmount).gt(this.state.selectedCoverToClaim.coveredTokenAmount);\n    this.setState({\n      claimButtonDisabled\n    });\n  }\n\n  getClaimTransactionParams = (coveredTokenAmount) => {\n    return {\n      methodName:'claimTokens',\n      methodParams:[this.state.selectedCoverToClaim.value,this.state.selectedCoverToClaim.incident.id,coveredTokenAmount,this.state.tokenConfig.realAddress]\n    };\n  }\n\n  claimTransactionSucceeded = (tx) => {\n    // const claimId = this.functionsUtil.getGlobalConfig(['txReceipt','events','ClaimSubmitted','returnValues','claimId'],tx);\n    // this.setState({\n    //   claimId\n    // });\n    this.loadContracts();\n  }\n\n  buyCoverTransactionSucceeded = (tx) => {\n    const coverId = this.functionsUtil.getGlobalConfig(['txReceipt','events','CoverBought','returnValues','coverId'],tx);\n    this.setState({\n      coverId\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      this.setState({\n        selectedAction\n      });\n    }\n  }\n\n  selectCoverToClaim(coverId){\n    const selectedCoverToClaim = this.state.selectedCoverToClaim ? this.state.claimableCovers.find( cover => parseInt(cover.value) === coverId ) : null;\n    // console.log('selectCoverToClaim',selectedCoverToClaim);\n    this.setState({\n      selectedCoverToClaim\n    });\n  }\n\n  reset(){\n    const step = 1;\n    const quote = null;\n    const coverId = null;\n    const periodValue = '';\n    const amountValue = '';\n    const transactionParams = [];\n    this.setState({\n      step,\n      quote,\n      coverId,\n      periodValue,\n      amountValue,\n      transactionParams\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Box\n            mb={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Choose action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'Security'}\n                iconColor={'deposit'}\n                text={'Buy Coverage'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.selectedAction === 'deposit' }\n                handleClick={ e => this.setSelectedAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'FileUpload'}\n                iconColor={'redeem'}\n                text={'Claim Tokens'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.selectedAction === 'claim' }\n                handleClick={ e => this.setSelectedAction('claim') }\n              />\n            </Flex>\n          </Box>\n          {\n            this.state.selectedAction === 'deposit' &&\n              <IconBox\n                cardProps={{\n                  py:2,\n                  px:3,\n                  my:2,\n                  width:1,\n                }}\n                isActive={true}\n                isInteractive={false}\n                icon={'LightbulbOutline'}\n                iconProps={{\n                  color:'flashColor'\n                }}\n                textProps={{\n                  color:'flashColor'\n                }}\n                text={`If your yield bearing token de-pegs in value by more than 10%, claim up to 90% of your loss by swapping your yield bearing token for a claim payment.`}\n              >\n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={'https://nexusmutual.io/pages/YieldTokenCoverv1.0.pdf'}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    Read More\n                    <Icon\n                      ml={1}\n                      size={'0.9em'}\n                      color={'primary'}\n                      name={'OpenInNew'}\n                    />\n                    .\n                  </Flex>\n                </ExtLink>\n              </IconBox>\n          }\n          {\n            this.state.selectedAction === 'deposit' ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={1}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    Object.keys(this.state.steps).map( stepIndex => (\n                      <Link\n                        style={{\n                          flexBasis:'0',\n                          flex:'1 1 0px',\n                          textDecoration:'none',\n                          cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                        }}\n                        fontSize={2}\n                        textAlign={'center'}\n                        key={`step_${stepIndex}`}\n                        color={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        hoverColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        activeColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                      >\n                        {this.state.steps[stepIndex]}\n                      </Link>\n                    ) )\n                  }\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Progress\n                    style={{\n                      width:'100%',\n                      height:'15px'\n                    }}\n                    value={(1/Object.keys(this.state.steps).length)*this.state.step}\n                  />\n                </Flex>\n                {\n                  !this.state.selectedToken || !this.state.tokenBalance ? (\n                    <FlexLoader\n                      flexProps={{\n                        mt:2,\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'25px',\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading assets...'}\n                    />\n                  ) : this.state.coverId ? (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <IconBox\n                        cardProps={{\n                          mt:1,\n                        }}\n                        icon={'DoneAll'}\n                        iconProps={{\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                        text={`You have successfully bought your Cover! Your Cover ID is <strong>${this.state.coverId}</strong>`}\n                      />\n                      <Link\n                        mt={2}\n                        color={'link'}\n                        hoverColor={'primary'}\n                        onClick={this.reset.bind(this)}\n                      >\n                        Get New Quote\n                      </Link>\n                    </Flex>\n                  ) : !this.state.quote ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Box\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Select Token to Cover:\n                        </Text>\n                        <AssetSelector\n                          {...this.props}\n                          id={'token-from'}\n                          showBalance={false}\n                          isSearchable={false}\n                          selectedToken={this.state.selectedToken}\n                          onChange={this.changeSelectedToken.bind(this)}\n                          availableTokens={this.props.toolProps.availableTokens}\n                        />\n                      </Box>\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          mb={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Select Payment Asset:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`This is the asset that you will use as payment method for the coverage premium`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              name={\"Info\"}\n                              color={'cellTitle'}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <AssetSelector\n                          {...this.props}\n                          showBalance={false}\n                          selectedToken={this.state.selectedUnderlying}\n                          onChange={this.changeSelectedUnderlying.bind(this)}\n                          availableTokens={this.state.tokenConfig.underlying}\n                        />\n                      </Box>\n                      {\n                        this.functionsUtil.BNify(this.state.maxCapacity).gt(0) ? (\n                          <Box\n                            width={1}\n                          >\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                How much do you want to cover?\n                              </Text>\n                              <Input\n                                min={0}\n                                step={1}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderColor={'cardBorder'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.amountValue}\n                                onChange={this.changeAmount.bind(this)}\n                                border={`1px solid ${this.props.theme.colors.divider}`}\n                                placeholder={`Insert ${this.state.selectedUnderlying.toUpperCase()} amount`}\n                              />\n                              <Flex\n                                width={1}\n                                maxWidth={'100%'}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'flex-end'}\n                              >\n                                <Link\n                                  mt={1}\n                                  fontSize={1}\n                                  fontWeight={3}\n                                  color={'dark-gray'}\n                                  textAlign={'right'}\n                                  hoverColor={'copyColor'}\n                                  onClick={ (e) => this.setMaxCoverAmount() }\n                                  style={{\n                                    maxWidth:'100%',\n                                    overflow:'hidden',\n                                    whiteSpace:'nowrap',\n                                    textOverflow:'ellipsis'\n                                  }}\n                                >\n                                  Max Available: {this.state.maxCapacity.toFixed(this.props.isMobile ? 2 : 4)} {this.state.selectedUnderlying}\n                                </Link>\n                              </Flex>\n                            </Box>\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                For how many days?\n                              </Text>\n                              <Input\n                                min={0}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderWidth={'1px'}\n                                borderStyle={'solid'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.periodValue}\n                                placeholder={'Insert days of coverage'}\n                                onChange={this.changePeriod.bind(this)}\n                                borderColor={this.state.periodValid ? 'cardBorder' : 'red'}\n                              />\n                              {\n                                !this.state.periodValid && (\n                                  <Text\n                                    my={1}\n                                    fontSize={2}\n                                    color={'red'}\n                                  >\n                                    Enter a period between 30 and 365 days!\n                                  </Text>\n                                )\n                              }\n                              <Flex\n                                mt={2}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                {\n                                  Object.keys(this.state.periodOptions).map( period => {\n                                    const periodInfo = this.state.periodOptions[period];\n                                    const isActive = this.state.selectedPeriod===period;\n                                    const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                                    return (\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:2,\n                                          width:width,\n                                        }}\n                                        isActive={isActive}\n                                        isInteractive={true}\n                                        key={`coverPeriod_${period}`}\n                                        handleClick={e => this.selectPeriod(period)}\n                                      >\n                                        <Text\n                                          fontSize={2}\n                                          fontWeight={3}\n                                          textAlign={'center'}\n                                          color={this.props.isActive ? 'copyColor' : 'legend'}\n                                        >\n                                          {periodInfo.label}\n                                        </Text>\n                                      </DashboardCard>\n                                    );\n                                  })\n                                }\n                              </Flex>\n                            </Box>\n                            <Flex\n                              mt={2}\n                              width={1}\n                              justifyContent={'center'}\n                            >\n                              <ButtonLoader\n                                buttonProps={{\n                                  my:2,\n                                  mx:[0, 2],\n                                  size:'medium',\n                                  borderRadius:4,\n                                  mainColor:'blue',\n                                  disabled:(!this.state.amountValid || !this.state.selectedUnderlying || !this.state.periodValue || !this.state.periodValid)\n                                }}\n                                buttonText={'GET QUOTE'}\n                                isLoading={this.state.loading}\n                                handleClick={ e => this.getQuote(e) }\n                              />\n                            </Flex>\n                          </Box>\n                        ) : (\n                          <IconBox\n                            cardProps={{\n                              mt:3\n                            }}\n                            icon={'MoneyOff'}\n                            iconProps={{\n                              color:'cellText'\n                            }}\n                            text={`Coverage for ${this.state.selectedToken} is not available at the moment.`}\n                          />\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text\n                        mb={2}\n                        fontSize={3}\n                        fontWeight={3}\n                        color={'primary'}\n                      >\n                        Cover Summary:\n                      </Text>\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          mb:2,\n                          px:3\n                        }}\n                        isActive={false}\n                        isInteractive={false}\n                      >\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Protocol:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          Idle Finance\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yield Token:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.selectedToken}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Amount:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.amountValue} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Period:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.periodValue} days\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Price:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.coverCost.toFixed(6)} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yearly Cost:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.yearlyCost.toFixed(2)}%\n                        </Text>\n                      </DashboardCard>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          this.functionsUtil.BNify(this.state.tokenBalance).lt(this.functionsUtil.BNify(this.state.quote.price)) ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have enough {this.state.selectedUnderlying} in your wallet.\n                                </Text>\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : !this.state.tokenApproved ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mb={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  To buy the coverage you need to approve the Smart-Contract.\n                                </Text>\n                                <ExecuteTransaction\n                                  {...this.props}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  Component={Button}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/2],\n                                    borderRadius:4,\n                                    value:'Approve',\n                                    mainColor:'deposit'\n                                  }}\n                                  action={'Approve'}\n                                  methodName={'approve'}\n                                  callback={this.approveSucceeded.bind(this)}\n                                  contractName={this.state.selectedUnderlyingConfig.name}\n                                  params={[this.props.contractInfo.address,this.props.web3.utils.toTwosComplement('-1')]}\n                                />\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <ExecuteTransaction\n                                {...this.props}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                Component={Button}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'deposit',\n                                  value:'Buy Coverage',\n                                  disabled:this.state.buttonDisabled\n                                }}\n                                action={'Buy Coverage'}\n                                methodName={'buyCover'}\n                                value={this.state.transactionValue}\n                                params={this.state.transactionParams}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.buyCoverTransactionSucceeded.bind(this)}\n                              />\n                              <Link\n                                mt={1}\n                                color={'link'}\n                                hoverColor={'primary'}\n                                onClick={this.reset.bind(this)}\n                              >\n                                Get New Quote\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            ) : this.state.selectedAction === 'claim' && (\n              <Box\n                width={1}\n              >\n                {\n                  this.state.claimableCovers.length>0 ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text mb={1}>\n                        Select Cover:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        isSearchable={false}\n                        name={'claimable_covers'}\n                        options={this.state.claimableCovers}\n                        onChange={this.selectCoverToClaim.bind(this)}\n                        defaultValue={this.state.defaultClaimableCover}\n                      />\n                      {\n                        this.state.selectedCoverToClaim.claimId ? (\n                          <IconBox\n                            cardProps={{\n                              mt:2,\n                            }}\n                            icon={'DoneAll'}\n                            iconProps={{\n                              color:this.props.theme.colors.transactions.status.completed\n                            }}\n                            text={`You've successfully claimed <strong>${this.state.selectedCoverToClaim.claimedAmount.toFixed(4)} ${this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!`}\n                          />\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3,\n                                mb:1\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  color={'cellText'}\n                                  name={'FileUpload'}\n                                />\n                                <Text\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can Claim up to <strong>{this.state.selectedCoverToClaim.claimableAmount.toFixed(4)} {this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!\n                                </Text>\n                                <Text\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  Keep in mind that the cover becomes inactive once any amount of tokens are claimed.\n                                </Text>\n                              </Flex>\n                            </DashboardCard>\n                            <SendTxWithBalance\n                              error={null}\n                              {...this.props}\n                              permitEnabled={false}\n                              approveEnabled={true}\n                              action={'Claim Token'}\n                              tokenConfig={this.state.tokenConfig}\n                              contractInfo={this.props.contractInfo}\n                              buttonDisabled={this.state.claimButtonDisabled}\n                              callback={this.claimTransactionSucceeded.bind(this)}\n                              changeInputCallback={this.claimInputChange.bind(this)}\n                              contractApproved={this.yieldTokenApproveSucceeded.bind(this)}\n                              getTransactionParams={this.getClaimTransactionParams.bind(this)}\n                              approveDescription={'To claim your tokens you need to approve the Smart-Contract.'}\n                              tokenBalance={this.functionsUtil.BNify(this.state.yieldTokenBalance).gt(this.state.selectedCoverToClaim.maxCoveredAmount) ? this.state.selectedCoverToClaim.maxCoveredAmount : this.state.yieldTokenBalance }\n                            >\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mt:2\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    name={'MoneyOff'}\n                                    color={'cellText'}\n                                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    You don't have any {this.state.selectedToken} in your wallet.\n                                  </Text>\n                                </Flex>\n                              </DashboardCard>\n                            </SendTxWithBalance>\n                          </Flex>\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <IconBox\n                      cardProps={{\n                        mt:1,\n                      }}\n                      icon={'Warning'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You cannot submit any Claim for your Covers.`}\n                    />\n                  )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n          value:Math.round(tokenPercentage),\n          color:'hsl('+tokenColorHsl+')'\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken,'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let stepsCount = {};\n    let tokensEarnings = {};\n    // let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<=earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n\n      stepsCount[maxPossibleStep] = stepsCount[maxPossibleStep] ? stepsCount[maxPossibleStep]+1 : 1;\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const maxCountStep = Object.keys(stepsCount).reduce( (maxCountStep,step) => {\n      const count = stepsCount[step];\n      if (count>maxCountStep.count){\n        maxCountStep.step = parseInt(step);\n        maxCountStep.count = parseInt(count);\n      }\n      return maxCountStep;\n    },{\n      step:0,\n      count:0\n    });\n\n    const estimationStepsPerc = maxCountStep.step || parseInt(Object.keys(this.state.estimationSteps)[1]);\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings)));\n            const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon :`images/tokens/${token}.svg`;\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={tokenIcon} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport ActiveCoverages from '../ActiveCoverages/ActiveCoverages';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    depositedTokens:null,\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (accountChanged || availableTokensChanged){\n      // console.log('StrategyPage - availableTokensChanged',availableTokensChanged);\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n\n    if (this.state.portfolioLoaded){\n      return false;\n    }\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load data\n      const [\n        batchedDeposits,\n        tokensToMigrate,\n        portfolio\n      ] = await Promise.all([\n        // Load claimable batches\n        [],//this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load tokens to be migrated\n        this.functionsUtil.getTokensToMigrate(this.props.selectedStrategy),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n        // Load and process Etherscan Txs\n        this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n        let totalBalanceWithScore = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenBalance = portfolio.tokensBalance[token].tokenBalance;\n          const tokenWeight = tokenBalance.div(portfolio.totalBalance);\n          const tokenAPY = tokenAprs.avgApy && !this.functionsUtil.BNify(tokenAprs.avgApy).isNaN() ? this.functionsUtil.BNify(tokenAprs.avgApy) : this.functionsUtil.BNify(0);\n\n          if (!tokenAPY.isNaN()){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          if (!tokenScore.isNaN() && tokenScore.gt(0)){\n            avgScore = avgScore.plus(tokenScore.times(tokenBalance));\n            totalBalanceWithScore = totalBalanceWithScore.plus(tokenBalance);\n          }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        if (!totalBalanceWithScore.isNaN() && totalBalanceWithScore.gt(0)){\n          avgScore = avgScore.div(totalBalanceWithScore);\n        }\n\n        // console.log('avgAPY',avgAPY.toFixed());\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        newState.avgScore = avgScore;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.tokensToMigrate = tokensToMigrate;\n      newState.portfolioLoaded = true;\n\n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const riskScore = this.functionsUtil.getGlobalConfig(['messages','riskScore']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const nexusMutualConfig = this.functionsUtil.getGlobalConfig(['tools','nexusMutual']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])} strategy\n        </Title>\n        {\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={4}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgScore ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgScore.toFixed(2) }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg Risk Score\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                !viewOnly && this.props.account && nexusMutualConfig.enabled && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','nexusMutual','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              width={[1,1/3]}\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                nexusMutualConfig.enabled && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <ActiveCoverages\n                      {...this.props}\n                      title={'Coverage'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.29,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:false,\n                            props:{\n                              width:[0.12,0.09],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.10],\n                            },\n                            parentProps:{\n                              alignItems:['center','flex-start'],\n                            },\n                            fields:[\n                              {\n                                name:'score',\n                              }\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.13],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.13],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.10],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,this.state.depositedTokens.length>0 ? 0.14 : 0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.22,0.10],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(govTokens).filter( govToken => govTokens[govToken].enabled )}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        useMetaTx={false}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Text, Heading, Input, Form, Field, Icon, Link, Loader, Button } from \"rimble-ui\";\n\nclass DeployB2BVesting extends Component {\n\n  state = {\n    actions:[],\n    processing: {\n      txHash:null,\n      loading:false,\n      actionIndex:[]\n    },\n    action:'deploy',\n    validated:false,\n    viewAction:null,\n    editAction:null,\n    newAction:false,\n    maxContracts:10,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    actionValid:false,\n    actionInputs:null,\n    claimedTokens:null,\n    deployedContracts:[],\n    contractDeployed:false,\n    inputs:[\n      {\n        name:'owner',\n        type:'address'\n      },\n      {\n        name:'recipient',\n        type:'address'\n      },\n      {\n        name:'vestingPeriod',\n        type:'uint256'\n      }\n    ]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction(action){\n    this.setState({\n      action,\n      editAction:null,\n      viewAction:null,\n      claimedTokens:null,\n      contractDeployed:null\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false,\n        actionIndex:[]\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const contractDeployed = prevState.contractDeployed !== this.state.contractDeployed && this.state.contractDeployed;\n    if (contractDeployed){\n      this.loadContracts();\n    }\n  }\n\n  async loadContracts(){\n    const tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens','IDLE']);\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n    const proxyCreated = await this.functionsUtil.getContractPastEvents('ProxyFactory', 'ProxyCreated', {fromBlock, toBlock: 'latest'});\n    const deployedContractsAddresses = proxyCreated.filter( p => p.returnValues.implementation.toLowerCase() === vesterImplementation.address.toLowerCase() ).map( p => p.returnValues.proxy );\n    // console.log('proxyCreated',proxyCreated,'deployedContractsAddresses',deployedContractsAddresses);\n\n    const deployedContracts = [];\n    await this.functionsUtil.asyncForEach(deployedContractsAddresses, async (contractAddress) => {\n      const contractName = `b2bVesting_${contractAddress}`;\n      await this.props.initContract(contractName,contractAddress,vesterImplementation.abi);\n      const [\n        // initialized,\n        owner,\n        recipient,\n        vestingPeriod,\n        availableBalance,\n        depositAmounts,\n      ] = await Promise.all([\n          // this.functionsUtil.genericContractCall(contractName,'initialized'),\n          this.functionsUtil.genericContractCall(contractName,'owner'),\n          this.functionsUtil.genericContractCall(contractName,'recipient'),\n          this.functionsUtil.genericContractCall(contractName,'vestingPeriod'),\n          this.functionsUtil.getTokenBalance(tokenConfig.token,contractAddress),\n          this.functionsUtil.genericContractCall(contractName,'getDepositAmounts')\n      ]);\n\n      let totalDeposited = this.functionsUtil.BNify(0);\n      if (depositAmounts) {\n        totalDeposited = depositAmounts.reduce( (total,amount) => {\n          total = total.plus(amount);\n          return total;\n        },this.functionsUtil.BNify(0));\n\n        totalDeposited = this.functionsUtil.fixTokenDecimals(totalDeposited,tokenConfig.decimals);\n      }\n\n      // console.log(contractName,initialized,owner,recipient,vestingPeriod,depositAmounts,parseFloat(totalDeposited));\n\n      deployedContracts.push({\n        owner,\n        recipient,\n        contractName,\n        vestingPeriod,\n        totalDeposited,\n        contractAddress,\n        availableBalance\n      });\n    });\n    const tokenBalance = await this.functionsUtil.getTokenBalance('IDLE',this.props.account);\n\n    // console.log(deployedContracts);\n\n    this.setState({\n      tokenConfig,\n      tokenBalance,\n      deployedContracts\n    });\n  }\n\n  validateForm(){\n    const validated = Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getTransactionParams(amount){\n    const params = {\n      value:null,\n      methodName:'deposit',\n      methodParams:[amount]\n    };\n    return params;\n  }\n\n  claimCallback(tx){\n    // console.log('claimCallback',tx);\n    if (tx.status === 'success'){\n      this.loadContracts();\n\n      const claimedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n      if (claimedTokensLog){\n        const claimedTokens = this.functionsUtil.fixTokenDecimals(parseInt(claimedTokensLog.data,16),this.state.tokenConfig.decimals);\n        this.setState({\n          claimedTokens\n        });\n      }\n    }\n  }\n\n  depositCallback(tx,amount,params){\n    // console.log('depositCallback',tx,amount,params);\n    if (tx.status === 'success'){\n      this.loadContracts();\n    }\n  }\n\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs){\n      return false;\n    }\n\n    const inputs = this.state.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.inputs.length){\n      return false;\n    }\n\n    const action = {\n      txError:null,\n      contractAddress:null,\n      inputs:this.state.actionInputs,\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n    const actionInputs = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n\n    this.setState({\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setViewAction(viewAction){\n\n    if (viewAction !== this.state.viewAction){\n      const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n      const deployedContract = this.state.deployedContracts[viewAction];\n      const contractInfo = {\n        abi:vesterImplementation.abi,\n        name:deployedContract.contractName,\n        address:deployedContract.contractAddress\n      };\n      this.setState({\n        viewAction,\n        contractInfo,\n        claimedTokens:null\n      });\n    }\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n    });\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const idleAddress = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','address']);\n\n    const callback = (tx,error,actionIndex) => {\n      const txSucceeded = tx.status === 'success';\n      const actions = Object.values(this.state.actions);\n      const isLastAction = parseInt(actionIndex)===parseInt(this.state.actions.length)-1;\n      const contractDeployed = txSucceeded && isLastAction;\n      // console.log('callback_1 -',actionIndex,txSucceeded,contractDeployed,tx);\n      if (txSucceeded){\n        const clonedVesterAddress = tx.txReceipt.events && tx.txReceipt.events.ProxyCreated ? tx.txReceipt.events.ProxyCreated.returnValues[1] : `0x${tx.txReceipt.logs[0].data.substr(-40)}`;\n        actions[actionIndex].contractAddress = clonedVesterAddress;\n        // console.log('callback_2 -',actionIndex,actions[actionIndex].contractAddress);\n      } else {\n        actions[actionIndex].txError = true;\n      }\n\n      // console.log('callback_3 -',actionIndex,actions);\n\n      this.setState({\n        actions,\n        contractDeployed\n      },()=>{\n        if (isLastAction){\n          this.cancelTransaction();\n        }\n      });\n    };\n\n    const callbackReceipt = (tx,actionIndex) => {\n      const txHash = tx.transactionHash;\n      // console.log('callbackReceipt',actionIndex,tx);\n      const processing = Object.assign({},this.state.processing);\n      processing.txHash = txHash;\n      processing.actionIndex.push(actionIndex);\n      this.setState({\n        processing\n      });\n    };\n\n    this.state.actions.forEach((action,actionIndex) => {\n      const ownerAddress = action.inputs[0];\n      const recipientAddress = action.inputs[1];\n      const vestingPeriod = action.inputs[2];\n      const initSig = \"initialize(address,address,address,uint256)\";\n      const initData = this.props.web3.eth.abi.encodeParameters(\n        ['address','address','address','uint256'],\n        [ownerAddress,idleAddress,recipientAddress,vestingPeriod]\n      );\n      const methodParams = [vesterImplementation.address,initSig,initData];\n      this.functionsUtil.contractMethodSendWrapper('ProxyFactory', 'createAndCall', methodParams, (tx,error) => callback(tx,error,actionIndex), (tx) => callbackReceipt(tx,actionIndex) );\n    });\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  render() {\n\n    const depositContracts = this.state.deployedContracts.filter( c => c.owner.toLowerCase() === this.props.account.toLowerCase() );\n    const claimContracts = this.state.deployedContracts.filter( c => c.recipient.toLowerCase() === this.props.account.toLowerCase() );\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.42]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Text\n              mb={2}\n            >\n              Choose the action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deploy'}\n                icon={'CloudUpload'}\n                iconColor={'deposit'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deploy' }\n                handleClick={ e => this.setAction('deploy') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deposit'}\n                iconColor={'deposit'}\n                icon={'ArrowDownward'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deposit' }\n                handleClick={ e => this.setAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Claim'}\n                iconColor={'redeem'}\n                icon={'ArrowUpward'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.action === 'claim' }\n                handleClick={ e => this.setAction('claim') }\n              />\n            </Flex>\n          </Flex>\n          <Flex\n            pb={2}\n            width={1}\n            my={[2,3]}\n            borderColor={'divider'}\n            borderBottom={'1px solid transparent'}\n          >\n            <Heading.h4\n              fontSize={[2,3]}\n              fontWeight={[2,3]}\n              style={{\n                textTransform:'capitalize'\n              }}\n            >\n              {this.state.action}\n            </Heading.h4>\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n          >\n            {\n              this.state.action === 'deploy' ? (\n                <Form\n                  width={1}\n                  validated={this.state.validated}\n                  onSubmit={this.handleSubmit.bind(this)}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          title={ this.state.editAction === actionIndex ? 'Edit Contract' : null }\n                          handleClick={ e => /*action.contractAddress ? this.functionsUtil.openWindow(this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)) : */this.setEditAction(actionIndex) }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  this.state.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                                }\n                                <Flex\n                                  mb={2}\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    action.contractAddress ? (\n                                      <ExtLink\n                                        fontSize={1}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                        hoverColor={this.props.theme.colors.transactions.status.completed}\n                                        href={this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)}\n                                      >\n                                        Deployed at {action.contractAddress}\n                                      </ExtLink>\n                                    ) : !this.state.processing.loading && (\n                                      <Flex\n                                        width={1}\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                        justifyContent={'center'}\n                                      >\n                                        <RoundButton\n                                          buttonProps={{\n                                            px:[0,4],\n                                            type:'button',\n                                            width:[1,'auto'],\n                                            disabled:!this.state.actionValid\n                                          }}\n                                          handleClick={this.addAction.bind(this)}\n                                        >\n                                          Save Contract\n                                        </RoundButton>\n                                        <Link\n                                          mt={2}\n                                          color={'red'}\n                                          hoverColor={'red'}\n                                          onClick={this.deleteAction.bind(this)}\n                                        >\n                                          Delete Contract\n                                        </Link>\n                                      </Flex>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {this.functionsUtil.shortenHash(action.inputs[0])} - {this.functionsUtil.shortenHash(action.inputs[1])} - {action.inputs[2]} { action.contractAddress ? '- DEPLOYED' : '' }\n                                </Text>\n                                { \n                                  action.contractAddress ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        name={'Done'}\n                                        align={'center'}\n                                        size={this.props.isMobile ? '1.2em' : '1.8em'}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      />\n                                    </Flex>\n                                  ) : this.state.processing.loading && this.state.processing.actionIndex && this.state.processing.actionIndex.includes(parseInt(actionIndex)) ? (\n                                    <Loader size=\"28px\" />\n                                  ) : action.txError ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        color={'red'}\n                                        name={'Error'}\n                                        align={'center'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.8em' }\n                                      />\n                                    </Flex>\n                                  ) : (\n                                    <Flex\n                                      p={['4px','7px']}\n                                      borderRadius={'50%'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                      backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                    >\n                                      <Icon\n                                        name={'Edit'}\n                                        align={'center'}\n                                        color={'redeem'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                      />\n                                    </Flex>\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.contractDeployed && !this.state.processing.loading && (!this.state.actions || Object.values(this.state.actions).length<this.state.maxContracts)) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Contract' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={fieldType}\n                                        pattern={fieldPattern}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        placeholder={`${input.name} (${input.type})`}\n                                        onChange={ e => this.inputChange(e,inputIndex) }\n                                        value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                              >\n                                <RoundButton\n                                  buttonProps={{\n                                    px:[0,4],\n                                    type:'button',\n                                    width:[1,'auto'],\n                                    disabled:!this.state.actionValid\n                                  }}\n                                  handleClick={this.addAction.bind(this)}\n                                >\n                                  Add Contract\n                                </RoundButton>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Contract\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.contractDeployed ? (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:4,\n                            width:[1,'100%']\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              align={'center'}\n                              size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={1}\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                              color={'dark-gray'}\n                              textAlign={'center'}\n                            >\n                              B2B Vesting contracts have been deployed\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          hash={this.state.processing.txHash}\n                          waitText={`Deployment estimated in`}\n                          endMessage={`Finalizing deployment request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            type:'submit',\n                            width:[1,'15em'],\n                            disabled:!this.state.validated\n                          }}\n                        >\n                          Deploy Contracts\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n                </Form>\n              ) : this.state.action === 'deposit' ?\n                depositContracts.length>0 ?\n                  depositContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={this.state.action}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.tokenBalance}\n                                    contractInfo={this.state.contractInfo}\n                                    callback={this.depositCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    approveDescription={'You need to approve the Smart-Contract first'}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3,\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          size={'2.3em'}\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                        />\n                                        <Text\n                                          mt={2}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          You don't have any $IDLE in your wallet.\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't deposit in any contract yet.\n                  </Text>\n                )\n              : this.state.action === 'claim' &&\n                claimContracts.length>0 ?\n                  claimContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    this.state.claimedTokens && (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        You have successfully claimed {this.state.claimedTokens.toFixed(4)} {this.state.tokenConfig.token}\n                                      </Text>\n                                    )\n                                  }\n                                  {\n                                    contractInfo.availableBalance && contractInfo.availableBalance.gt(0.00000001) ? (\n                                      <ExecuteTransaction\n                                        params={[]}\n                                        {...this.props}\n                                        Component={Button}\n                                        componentProps={{\n                                          size:'medium',\n                                          value:'Claim',\n                                          mainColor:'redeem',\n                                        }}\n                                        methodName={'claim'}\n                                        action={this.state.action}\n                                        callback={this.claimCallback.bind(this)}\n                                        contractName={contractInfo.contractName}\n                                      />\n                                    ) : (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={'cellText'}\n                                      >\n                                        No balance available.\n                                      </Text>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't claim from any contract yet.\n                  </Text>\n                )\n            }\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default DeployB2BVesting;\n","import Staking from '../Staking/Staking';\nimport IDLE from '../contracts/IDLE.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport ERC20 from '../contracts/ERC20.json';\nimport Tranches from '../Tranches/Tranches';\nimport COMP from '../abis/compound/COMP.json';\nimport aToken from '../abis/aave/AToken.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport LpStaking from '../LpStaking/LpStaking';\nimport stkIDLE from '../contracts/stkIDLE.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\nimport B2BVester from '../contracts/B2BVester.json';\nimport IdleStaking from '../IdleStaking/IdleStaking';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from '../abis/curve/CurvePool.json';\nimport NexusMutual from '../NexusMutual/NexusMutual';\nimport CoverMint from '../abis/cover/CoverMint.json';\nimport LockedIDLE from '../contracts/LockedIDLE.json';\nimport LpStakingAbi from '../contracts/LpStaking.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport PriceOracle from '../contracts/PriceOracle.json';\nimport FeeTreasury from '../contracts/FeeTreasury.json';\nimport IdleTokenV2 from '../contracts/IdleTokenV2.json';\nimport StrategyPage from '../StrategyPage/StrategyPage';\nimport BuyModal from '../utilities/components/BuyModal';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport BatchDeposit from '../BatchDeposit/BatchDeposit';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport erc20Forwarder from '../contracts/erc20Forwarder.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport DeployB2BVesting from '../DeployB2BVesting/DeployB2BVesting';\nimport SushiV2Router02 from '../abis/sushiswap/SushiV2Router02.json';\nimport IdleBatchConverter from '../contracts/IdleBatchConverter.json';\nimport UniswapV2Router02 from '../abis/uniswap/UniswapV2Router02.json';\nimport IdleDepositForwarder from '../contracts/IdleDepositForwarder.json';\nimport SushiLiquidityPool from '../abis/sushiswap/SushiLiquidityPool.json';\nimport NexusMutualIncidents from '../abis/nexus/NexusMutualIncidents.json';\nimport StakingFeeDistributor from '../contracts/StakingFeeDistributor.json';\nimport NexusMutualDistributor from '../abis/nexus/NexusMutualDistributor.json';\nimport BalancerExchangeProxy from '../abis/balancer/BalancerExchangeProxy.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\nimport MinimalInitializableProxyFactory from '../contracts/MinimalInitializableProxyFactory.json';\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: 'Idle',\n  version: 'v5.9',\n  baseToken: 'ETH',\n  baseURL: 'https://idle.finance',\n  forumURL:'https://gov.idle.finance',\n  theme:{\n    darkModeEnabled:true\n  },\n  betaURL: 'https://beta.idle.finance',\n  countries:{\n    'USA':'United States of America',\n    'GBR':'United Kingdom',\n    'AUS':'Australia',\n    'BRA':'Brazil',\n    'CHN':'China',\n    'CAN':'Canada',\n    'EUR':'Europe',\n    'HKG':'Hong Kong',\n    'IND':'India',\n    'MEX':'Mexico',\n    'RUS':'Russia',\n    'ZAF':'South Africa',\n    'KOR':'South Korea'\n  },\n  logs:{ // Enable logs levels\n    errorsEnabled:false,\n    messagesEnabled:false,\n  },\n  connectors:{ // Connectors props\n    metamask:{\n      enabled:true,\n      subcaption:'Browser extension'\n    },\n    opera:{\n      enabled:true,\n      subcaption:'Opera injected wallet'\n    },\n    dapper:{\n      enabled:true,\n      icon:'dapper.png',\n      subcaption:'Browser extension',\n    },\n    coinbase:{\n      enabled:true,\n      icon:'coinbase.png',\n      subcaption:'Connect with Coinbase wallet'\n    },\n    trustwallet:{\n      enabled:true,\n      subcaption:'Connect with Trust Wallet'\n    },\n    walletconnect:{\n      enabled:true,\n      iconModal:'walletconnect.png',\n      subcaption:'Connect with QR code'\n    },\n    walletlink:{\n      enabled:true,\n      icon:'coinbase.png',\n      name:'Coinbase Wallet',\n      subcaption:'Connect with QR code'\n    },\n    gnosis:{\n      enabled:true,\n      // icon:'coinbase.png',\n      name:'Gnosis Safe App',\n      subcaption:'Connect with Gnosis Safe App'\n    },\n    fortmatic:{\n      enabled:true,\n      subcaption:'Login with phone-number'\n    },\n    portis:{\n      enabled:true,\n      subcaption:'Login with e-mail'\n    },\n    authereum:{\n      enabled:true,\n      subcaption:'Cross-device wallet'\n    },\n    torus:{\n      enabled:true,\n      icon:'torus.png',\n      subcaption:'One-Click login for Web 3.0'\n    },\n    trezor:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    ledger:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    ledgerlive:{\n      enabled:true,\n      subcaption:'Ledger Live Browser'\n    },\n    custom:{\n      enabled:true,\n      subcaption:'Custom address'\n    }\n  },\n  newsletterSubscription:{\n    endpoint:'https://dev.lapisgroup.it/idle/newsletter.php'\n  },\n  messages:{\n    scoreShort:'Protocol Risk Score',\n    apyShort:'Annual Percentage Yield',\n    tokenPrice:'The token price is calculated using Uniswap spot prices.',\n    cheapRedeem:'Amount of unlent funds available for low gas fees redeem',\n    curveBonusSlippage:'Slippage or bonus depending on if the coin is low or high in the Curve Pool',\n    distributionSpeed:'The distribution indicates the amount of tokens distributed for the entire pool.',\n    directMint:'Pay an additional gas fee to rebalance the pool and help all users gain an additional APR',\n    performanceFee:'This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE',\n    userDistributionSpeed:'The distribution indicates the amount of tokens distributed for your account based on your current pool share.',\n    govTokenApr:'Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.',\n    govTokenRedeemableBalance:'The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.',\n    riskScoreShort:'It\\'s a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.',\n    redeemSkipGov:'This feature allows you to save some gas by skipping the redeem of all or some of your accrued governance tokens, the skipped governance tokens will be given away to the entire pool',\n    batchDepositExecutionSchedule:'Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.',\n    apyLong:'APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.',\n    yieldFarming:'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\">Read more here</a>.',\n    riskScore:`It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions:`<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`\n  },\n  analytics:{\n    google:{\n      events:{\n        enabled:true, // Enable Google Analytics events\n        debugEnabled:false, // Enable sending for test environments\n        addPostfixForTestnet:true // Append testnet to eventCategory\n      },\n      pageView:{\n        enabled:true\n      }\n    }\n  },\n  modals:{ // Enable modals\n    first_deposit_referral:false, // Referral share modal\n    first_deposit_share:true, // First deposit share modal\n    migrate:{\n      enabled:true\n    },\n    welcome:{ // Welcome modal\n      enabled:true,\n      frequency:604800 // One week\n    }\n  },\n  dashboard:{\n    baseRoute:'/dashboard',\n    theme:{\n      mode:'light',\n      darkModeEnabled:true\n    },\n  },\n  governance:{\n    test:false,\n    enabled:true,\n    startBlock:11333729,\n    baseRoute:'/governance',\n    props:{\n      tokenName:'IDLE',\n      availableContracts:{\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    proposals:{\n      7:{\n        description:`Upgrade of IdleTokenGovernance contract to include the following changes:<br />\n        <ul>\n          <li>support for EIP 3165 flashLoans (fee is set to 0.08% of the flash loaned amount redistributed to LP)</li>\n          <li>support for stkAAVE distribution</li>\n          <li>support for new cWBCT distribution</li>\n          <li>other minor updates for gas and redeems</li>\n        </ul>\n        See more in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466\">https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466</a>`\n      }\n    },\n    contracts:{\n      delegates:'IDLE',\n      governance:'GovernorAlpha',\n    }\n  },\n  curve:{\n    enabled:false,\n    params:{\n      n_coins:3,\n      label:'Curve',\n      route:'/dashboard/curve',\n      image:'images/protocols/curve.svg',\n      imageInactive:'images/protocols/curve-off.svg',\n    },\n    rates:{\n      path:['apy','day','idle'],\n      endpoint:'https://www.curve.fi/raw-stats/apys.json'\n    },\n    poolContract:{\n      decimals:18,\n      abi:CurvePool,\n      name:'idleDAI+idleUSDC+idleUSDT',\n      token:'idleDAI+idleUSDC+idleUSDT',\n      address:'0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05'\n    },\n    depositContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7'\n    },\n    gaugeContract:{\n      abi:LiquidityGaugeV2,\n      name:'LiquidityGaugeV2',\n      address:'0xd69ac8d9D25e99446171B5D0B3E4234dAd294890'\n    },\n    zapContract:{\n      abi:CurveZap,\n      name:'idleCurveZap',\n      address:'0x456974df1042ba7a46fd49512a8778ac3b840a21'\n    },\n    migrationContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7',\n      functions:[\n        {\n          label:'Deposit',\n          name:'add_liquidity'\n        },\n      ]\n    },\n    availableTokens:{\n      idleDAIYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'DAI',\n        token:'idleDAIYield',\n        address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:0\n        },\n      },\n      idleUSDCYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDC',\n        token:'idleUSDCYield',\n        address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:1\n        },\n      },\n      idleUSDTYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDT',\n        token:'idleUSDTYield',\n        address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:2\n        },\n      },\n    }\n  },\n  permit:{\n    DAI:{\n      version:1,\n      EIPVersion:null,\n      nonceMethod:'nonces',\n      name:'Dai Stablecoin',\n      type:[\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" },\n      ]\n    },\n    USDC:{\n      version:2,\n      name:'USD Coin',\n      EIPVersion:2612,\n      nonceMethod:'nonces',\n      type:[\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ]\n    },\n    SLP:{\n      version:1,\n      EIPVersion:2612,\n      nonceMethod:'nonces',\n      name:'SushiSwap LP Token',\n      type:[\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ]\n    }\n  },\n  govTokens:{\n    IDLE:{\n      abi:IDLE,\n      decimals:18,\n      token:'IDLE',\n      enabled:true,\n      showAUM:false, // Include IDLE balance in AUM\n      showAPR:false, // Include IDLE Apr\n      protocol:'idle',\n      showPrice:false, // Show price in Yield Farming section\n      showBalance:false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode:false,\n      distributionMode:'block',\n      distributionFrequency:'day', // Multiply distribution per block\n      color:'hsl(162, 100%, 41%)',\n      icon:'images/tokens/IDLE.png',\n      disabledTokens:['idleRAIYield'], // Disable IDLE distribution for idleToken\n      address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e' // MAIN\n      // address:'0xAB6Bdb5CCF38ECDa7A92d04E86f7c53Eb72833dF', // KOVAN\n      // address:'0xa85233C63b9Ee964Add6F2cffe00Fd84eb32338f' // Fork\n    },\n    COMP:{\n      abi:COMP,\n      decimals:18,\n      token:'COMP',\n      enabled:true,\n      showAUM:true, // Include IDLE balance in AUM\n      showAPR:true, // Include COMP Apr\n      showPrice:true,\n      showBalance:true, // Include COMP balance in Portfolio Donut\n      disabledTokens:[],\n      protocol:'compound',\n      aprTooltipMode:false,\n      distributionMode:'block',\n      distributionFrequency:'day',\n      color:'hsl(162, 100%, 41%)',\n      address:'0xc00e94cb662c3520282e6f5717214004a7f26888', // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    stkAAVE:{\n      abi:aToken,\n      decimals:18,\n      showAUM:true, // Include stkAAVE balance in AUM\n      showAPR:true, // Include stkAAVE Apr\n      enabled:true,\n      showPrice:true,\n      token:'stkAAVE',\n      showBalance:true, // Include stkAAVE balance in Portfolio Donut\n      protocol:'aavev2',\n      aprTooltipMode:false,\n      distributionMode:'second',\n      color:'hsl(314, 41%, 51%)',\n      distributionFrequency:'day',\n      address:'0x4da27a545c0c5b758a6ba100e3a049001de870f5', // MAIN\n      addressForPrice:'0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9', // MAIN\n      disabledTokens:['idleTUSDYield','idleSUSDYield','idleRAIYield']\n    }\n  },\n  contracts:{\n    ProxyFactory:{\n      abi:MinimalInitializableProxyFactory,\n      address:'0x91baced76e3e327ba7850ef82a7a8251f6e43fb8'\n    },\n    LockedIDLE:{\n      abi:LockedIDLE,\n      address:'0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n    },\n    FeeTreasury:{\n      abi:FeeTreasury,\n      address:'0x69a62c24f16d4914a48919613e8ee330641bcb94' // MAIN\n    },\n    PriceOracle:{\n      abi:PriceOracle,\n      address:'0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n      // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n    },\n    Timelock:{\n      abi:Timelock,\n      address:'0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n      // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n    },\n    EcosystemFund:{\n      abi:EcosystemFund,\n      address:'0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n      // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n    },\n    VesterFactory:{\n      abi:VesterFactory,\n      address:'0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n      // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n    },\n    IdleController:{\n      abi:IdleController,\n      address:'0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n      // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n    },\n    EarlyRewards:{\n        abi:EarlyRewards,\n        address:'0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n    },\n    GovernorAlpha:{\n      abi:GovernorAlpha,\n      address:'0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n      // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n    },\n    Comptroller:{\n      abi:Comptroller,\n      address:'0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n      // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n    },\n    SushiswapRouter:{\n      abi:SushiV2Router02,\n      address:'0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F'\n    },\n    UniswapRouter:{\n      abi:UniswapV2Router02,\n      address:'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n    },\n    BalancerExchangeProxy:{\n      abi:BalancerExchangeProxy,\n      address:'0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n    }\n  },\n  tokens:{\n    DAI:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n    USDC:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n  },\n  tranches:{\n    BB:{\n      color:{\n        hex:'#2196f3',\n        rgb:[33, 150, 243],\n        hsl:['207', '90%', '54%']\n      },\n      name:'Junior Tranche',\n      description:{\n        deposit:'By depositing in the Junior Tranche in case of Smart-Contract breach your funds will be used to cover eventual losses on the Senior Tranche.',\n        stake:'Stake your tranche tokens to earn additional rewards and boost the APY.',\n        unstake:'By unstaking your tranche tokens you will no more get additional rewards.',\n        withdraw:'You can withdraw your funds at any time from the tranche.',\n        cantUnstake:'To unstake your funds you just need to wait 10 blocks after your last stake transaction.',\n        cantWithdraw:'To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.'\n      }\n    },\n    AA:{\n      color:{\n        hex:'#4caf50',\n        rgb:[76, 175, 80],\n        hsl:['122', '39%', '49%']\n      },\n      name:'Senior Tranche',\n      description:{\n        deposit:'By depositing in the Senior Tranche in case of Smart-Contract breach your funds are covered by the funds deposited in the Junior Tranche.',\n        stake:'Stake your tranche tokens to earn additional rewards and boost the APY.',\n        unstake:'By unstaking your tranche tokens you will no more get additional rewards.',\n        withdraw:'You can withdraw your funds at any time from the tranche.',\n        cantUnstake:'To unstake your funds you just need to wait 10 blocks after your last stake transaction.',\n        cantWithdraw:'To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.'\n      }\n    }\n  },\n  strategies:{\n    tranches:{\n      token:'DAI',\n      visible:false,\n      type:'tranche',\n      protocol:'idle',\n      color:'#f32121',\n      comingSoon:false,\n      title:'Tranches',\n      addGovTokens:true,\n      titlePostfix:null,\n      iconName:'Whatshot',\n      component: Tranches,\n      govTokensEnabled:true,\n      chartColor:'hsl(40,95%,59%)',\n      icon:'images/strategies/tranches-on.png',\n      iconInactive:'images/strategies/tranches-off.png',\n      iconInactiveDark:'images/strategies/tranches-white.png',\n      desc:'Diversify your risk profile with dynamic tranched yield derivatives',\n    },\n    best:{\n      token:'DAI',\n      visible:true,\n      color:'#f32121',\n      type:'strategy',\n      comingSoon:false,\n      addGovTokens:true,\n      titlePostfix:null,\n      title:'Best-Yield',\n      iconName:'Whatshot',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(40,95%,59%)',\n      icon:'images/strategies/best-on.svg',\n      iconInactive:'images/strategies/best-off.svg',\n      iconInactiveDark:'images/strategies/best-white.svg',\n      desc:'Maximize your returns across DeFi protocols',\n      descLong:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.',\n      descShort:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.'\n    },\n    risk:{\n      token:'DAI',\n      visible:true,\n      color:'#2196F3',\n      type:'strategy',\n      comingSoon:false,\n      titlePostfix:null,\n      addGovTokens:true,\n      iconName:'Security',\n      title:'Risk-Adjusted',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/risk-on.svg',\n      iconInactive:'images/strategies/risk-off.svg',\n      iconInactiveDark:'images/strategies/risk-white.svg',\n      desc:'Optimize your risk exposure across DeFi protocols',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    },\n    /*\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n    */\n  },\n  stats:{\n    enabled:true, // Enable endpoint\n    rates:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/rates/'\n    },\n    tvls:{\n      TTL:120,\n      endpoint:'https://api.idle.finance/tvls/'\n    },\n    substack:{\n      TTL:1800,\n      endpoint:'https://api.idle.finance/substack/'\n    },\n    scores:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/scores/'\n    },\n    config:{\n      headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {}\n    },\n    versions:{\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3:{\n        label:'Idle V3',\n        additionalProtocols:[],\n        endTimestamp:1597237542,\n        startTimestamp:1589801874,\n        showPerformanceTooltip:false,\n        strategiesParams:{\n          risk:{\n            endTimestamp:1597233922,\n          }\n        },\n        enabledStrategies:['best','risk'],\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n      },\n      v4:{\n        label:'Idle V4',\n        endTimestamp:null,\n        startTimestamp:1597442400, // 1598220000\n        enabledStrategies:['best','risk'],\n        showPerformanceTooltip:true,\n        strategiesParams:{\n          risk:{\n            startTimestamp:1599183170,\n          }\n        },\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH','RAI'],\n        additionalProtocols:[\n          {\n            decimals:16,\n            protocol:'compound',\n            name:'compoundWithCOMP',\n            enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH'],\n          },\n          {\n            decimals:18,\n            protocol:'aavev2',\n            name:'aavev2WithStkAAVE',\n            enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH'],\n          }\n        ]\n      }\n    },\n    tokens:{\n      DAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          rgb:[250,184,51],\n          hex:'#F7B24A',\n          hsl:['40', '95%', '59%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 2]\n        },\n        startTimestamp:'2020-02-11',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USD:{\n        enabled:true,\n        color:{\n          hex:'#85bb65',\n          rgb:[133, 187, 101],\n          hsl:['98', '39%', '56%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        address:null,\n        startTimestamp:'2020-02-04',\n      },\n      USDC:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#2875C8',\n          rgb:[40,117,200],\n          hsl:['211', '67%', '47%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USDT:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#22a079',\n          rgb:[34, 160, 121],\n          hsl:['161', '65%', '38%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      TUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'0340a1',\n          rgb:[3, 64, 161],\n          hsl:['217', '96%', '32%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n      },\n      SUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#1e1a31',\n          rgb:[30, 26, 49],\n          hsl:['250', '31%', '15%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n      },\n      WBTC:{\n        decimals:8,\n        enabled:true,\n        color:{\n          hex:'#eb9444',\n          rgb:[235, 148, 68],\n          hsl:['29', '81%', '59%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'wbtcDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      WETH:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#ee1f79',\n          rgb:[238, 31, 121],\n          hsl:['334', '86%', '53%']\n        },\n        startTimestamp:'2021-02-16',\n        conversionRateField:'wethDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      COMP:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#00d395',\n          rgb:[0, 211, 149],\n          hsl:['162', '100%', '41%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0xc00e94cb662c3520282e6f5717214004a7f26888',\n      },\n      stkAAVE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#B6509E',\n          rgb:[182, 80, 158],\n          hsl:['314', '41%', '51%']\n        },\n        startTimestamp:'2021-04-30',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x4da27a545c0c5b758a6ba100e3a049001de870f5',\n      },\n      IDLE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#0d55bb',\n          rgb:[13, 85, 187],\n          hsl:['215', '87%', '39%']\n        },\n        startTimestamp:'2020-11-10',\n        icon:'images/tokens/IDLE.png',\n        conversionRateField:'idleDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e',\n      },\n      RAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#378879',\n          rgb:[55, 136, 121],\n          hsl:['169', '42%', '37%']\n        },\n        disabledCharts:['score'],\n        startTimestamp:'2021-05-25',\n        icon:'images/tokens/RAI.png',\n        conversionRateField:'raiDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n      },\n      'idleDAI+idleUSDC+idleUSDT':{\n        decimals:18,\n        enabled:false,\n        name:'Curve.fi',\n        color:{\n          hex:'#ff0000',\n          rgb:[255, 0, 0],\n          hsl:['0', '100%', '50%']\n        },\n        startTimestamp:'2020-06-15',\n      },\n    },\n    protocols:{\n      compound:{\n        legend:true,\n        enabled:true,\n        label:'Compound',\n        color:{\n          rgb:[0, 209, 146],\n          hsl:['162', '100%', '41%']\n        }\n      },\n      aavev2WithStkAAVE:{\n        enabled:true,\n        label:'Aave V2 + stkAAVE',\n        startTimestamp:'2021-05-08 14:30:00',\n        // tokensProps:{\n        //   WETH:{\n        //     startTimestamp:'2021-05-19 12:20:00',\n        //   }\n        // },\n        color:{\n          hex:'#B6509E',\n          rgb:[182, 80, 158],\n          hsl:['314', '41%', '51%']\n        },\n        rateField:['rate','aaveAdditionalAPR']\n      },\n      compoundWithCOMP:{\n        enabled:true,\n        label:'Compound + COMP',\n        color:{\n          rgb:[0, 153, 107],\n          hsl:['162', '100%', '30%']\n        },\n        rateField:['rate','compoundAdditionalAPR']\n      },\n      fulcrum:{\n        legend:false,\n        enabled:false,\n        label:'Fulcrum',\n        color:{\n          rgb:[2, 138, 192],\n          hsl:['197', '98%', '38%']\n        }\n      },\n      dsr:{\n        label:'DSR',\n        enabled:false,\n        icon:'CHAI.png',\n        color:{\n          rgb:[222, 52, 67],\n          hsl:['355', '72%', '54%']\n        }\n      },\n      dydx:{\n        legend:true,\n        label:'DyDx',\n        enabled:true,\n        color:{\n          rgb:[87, 87, 90],\n          hsl:['240', '2%', '35%']\n        }\n      },\n      iearn:{\n        label:'Yearn',\n        enabled:true,\n      },\n      aave:{\n        label:'Aave V1',\n        legend:true,\n        enabled:true,\n        color:{\n          rgb:[230, 131, 206],\n          hsl:['315', '66%', '71%']\n        }\n      },\n      aavev2:{\n        legend:true,\n        enabled:true,\n        icon:'aave.svg',\n        label:'Aave V2',\n        color:{\n          rgb:[151, 79, 141],\n          hsl:['308', '31%', '45%']\n        }\n      },\n      cream:{\n        legend:true,\n        enabled:true,\n        label:'Cream',\n        icon:'cream.svg',\n        color:{\n          rgb:[105, 226, 220],\n          hsl:['177', '68%', '65%']\n        }\n      },\n      fuse:{\n        legend:true,\n        enabled:true,\n        label:'Fuse',\n        icon:'fuse.png',\n        color:{\n          rgb:[0, 0, 0],\n          hsl:['0', '0%', '0%']\n        }\n      },\n      curve:{\n        label:'',\n        enabled:true,\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      },\n      idle:{\n        label:'Idle',\n        enabled:true,\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      }\n    }\n  },\n  contract:{\n    methods:{\n      redeem:{\n        skipRebalance:true,\n        metaTransactionsEnabled:false\n      },\n      deposit:{\n        skipMint:true,\n        minAmountForMint:100000,\n        erc20ForwarderEnabled:true,\n        skipMintCheckboxEnabled:true,\n        metaTransactionsEnabled:false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract:{\n          forwarder:{\n            enabled:true,\n            abi:erc20Forwarder,\n            name:'erc20Forwarder',\n            function:'emitMessage',\n            address:'0xfaadbe5f0a19f0ebf92aeb73534cbc96b96e2bda', // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens:{\n            DAI:{\n              enabled:true,\n              permitType:'DAI_Permit',\n              abi:IdleDepositForwarder,\n              function:'permitAndDeposit', // foo\n              name:'IdleDepositForwarderDAI',\n              address:'0xDe3c769cCD1878372864375e9f89956806B86daA', // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC:{\n              enabled:true,\n              abi:IdleDepositForwarder,\n              permitType:'EIP2612_Permit',\n              name:'IdleDepositForwarderUSDC',\n              function:'permitEIP2612AndDeposit', // 'foo'\n              address:'0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761', // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            },\n          }\n        },\n        proxyContract:{\n          enabled:false,\n          abi:IdleProxyMinter,\n          name:'IdleProxyMinter',\n          function:'mintIdleTokensProxy',\n          address:'0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a',\n        }\n      },\n      migrate:{\n        skipRebalance:true,\n        minAmountForRebalance:10000,\n        minAmountForRebalanceMetaTx:10000\n      },\n      redeemGovTokens:{\n        enabled:true\n      },\n      redeemSkipGov:{\n        enabled:true,\n        disabledTokens:['idleDAISafe','idleUSDCSafe','idleUSDTSafe']\n      },\n      rebalance:{\n        enabled:true,\n        abi:IdleRebalancerV3\n      }\n    }\n  },\n  network:{ // Network configurations\n    availableNetworks:{\n      1:'Mainnet',\n      3:'Ropsten',\n      4:'Rinkeby',\n      42:'Kovan',\n      1337:'Hardhat'\n    },\n    isForked:false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork:1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear:2371428,\n    secondsPerYear:31536000,\n    firstBlockNumber:8119247,\n    requiredConfirmations: 1,\n    enabledNetworks:[1,42,1337],\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers:{\n      infura:{\n        42: 'https://kovan.infura.io/v3/',\n        1: 'https://mainnet.infura.io/v3/',\n        1337: 'https://mainnet.infura.io/v3/'\n      },\n      ens:{\n        enabled:true,\n        supportedNetworks:[1]\n      },\n      nexus:{\n        endpoints:{\n          1:'https://api.nexusmutual.io/v1/',\n          42:'https://api.staging.nexusmutual.io/v1/',\n        }\n      },\n      etherscan:{\n        enabled:true, // False for empty txs list (try new wallet)\n        keys:[\n          env.REACT_APP_ETHERSCAN_KEY,\n          env.REACT_APP_ETHERSCAN_KEY2,\n          env.REACT_APP_ETHERSCAN_KEY3,\n          env.REACT_APP_ETHERSCAN_KEY4\n        ],\n        endpoints:{\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        },\n        baseUrl:{\n          1: 'https://etherscan.io',\n          1337: 'https://etherscan.io',\n          42: 'https://kovan.etherscan.io',\n        }\n      },\n      snapshot:{\n        whitelist:[\n          '0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa',\n          '0xf12ce5807e3d3128B876aa1Cec0632D63547E22E'\n        ],\n        endpoints:{\n          proposals:'https://hub.snapshot.page/api/idlefinance.eth/proposals'\n        },\n        urls:{\n          proposals:'https://signal.idle.finance/#/idlefinance.eth/proposal/'\n        }\n      },\n      biconomy:{\n        enabled:true,\n        enableLogin:false,\n        supportedNetworks:[1,42],\n        disabledWallets:['authereum'],\n        endpoints:{\n          limits:'https://api.biconomy.io/api/v1/dapp/checkLimits'\n        },\n        params:{\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: '36572ec9-ae5c-4c4a-9530-f3ae7c7ac829',\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      simpleID:{\n        enabled:false,\n        supportedNetworks:[1],\n        getNetwork:(networkId,availableNetworks) => {\n          let networkName = null;\n          switch (networkId){\n            case 1:\n              networkName = 'mainnet';\n            break;\n            default:\n              networkName = availableNetworks[networkId] ? availableNetworks[networkId].toLowerCase() : 'mainnet';\n            break;\n          }\n          return networkName;\n        },\n        params:{\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: 'mainnet'\n        }\n      }\n    }\n  },\n  events:{\n    DAI:{\n      fields:{\n        to:'dst',\n        from:'src',\n        value:'wad'\n      }\n    }\n  },\n  notifications:[\n    {\n      enabled:false,\n      end:1612282726374,\n      start:1611677841027,\n      date:'Jan 26, 2021 16:18 UTC',\n      title:'Cover Protocol Available',\n      hash:'/dashboard/tools/cover-protocol',\n      image:'/images/protocols/cover-logo.svg',\n      text:'Protect your portfolio with Cover Protocol',\n    }\n  ],\n  tools:{\n    stake:{\n      enabled:true,\n      icon:'Layers',\n      label:'Staking',\n      route:'staking',\n      subComponent:Staking,\n      desc:'Stake your IDLE / Sushi Swap LP tokens and earn $IDLE rewards',\n      props:{\n        availableTokens:{\n          IDLE:{\n            component:IdleStaking,\n            contract:{\n              abi:stkIDLE,\n              decimals:18,\n              name:'stkIDLE',\n              fromBlock:12561464,\n              rewardToken:'IDLE',\n              address:'0xaac13a116ea7016689993193fce4badc8038136f' // Mainnet\n            },\n            feeDistributor:{\n              fromBlock:12649361,\n              abi:StakingFeeDistributor,\n              name:'StakingFeeDistributor',\n              address:'0xbabb82456c013fd7e3f25857e0729de8207f80e2' // Mainnet\n            },\n            abi:IDLE,\n            name:'IDLE',\n            token:'IDLE',\n            decimals:18,\n            enabled:true,\n            label:'IDLE Token',\n            icon:'images/tokens/IDLE.png',\n            address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e', // Mainnet\n            poolLink:'https://etherscan.com/address/0x875773784Af8135eA0ef43b5a374AaD105c5D39e',\n          },\n          SLP:{\n            component:LpStaking,\n            contract:{\n              decimals:24,\n              name:'LpStaking',\n              maxMultiplier:3,\n              abi:LpStakingAbi,\n              maxBonusDays:120,\n              rewardToken:'IDLE',\n              address:'0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d' // Mainnet\n            },\n            name:'SLP',\n            token:'SLP',\n            decimals:18,\n            enabled:true,\n            abi:SushiLiquidityPool,\n            label:'SushiSwap IDLE/ETH LP Token',\n            icon:'images/protocols/sushiswap.png',\n            address:'0xa7f11e026a0af768d285360a855f2bded3047530', // Mainnet\n            poolLink:'https://analytics.sushi.com/pairs/0xa7f11e026a0af768d285360a855f2bded3047530',\n          }\n        }\n      }\n    },\n    nexusMutual:{\n      enabled:true,\n      icon:'Security',\n      route:'coverage',\n      label:'Coverage',\n      desc:'Buy Nexus Mutual coverage without KYC for your deposits',\n      subComponent:NexusMutual,\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            abi:IdleTokenV4,\n            name:'idleDAIYield',\n            token:'idleDAIYield', // Mainnet\n            // token:'idleDAIYieldMock', // Kovan\n            address:'0x0000000000000000000000000000000000000011',\n            realAddress:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4', // Mainnet\n            // realAddress:'0xbd0b0205408509544815d377214d8f2cbe3e5381', // Kovan\n            underlying:{\n              DAI:{\n                abi:ERC20,\n                name:'DAI', // Mainnet\n                token:'DAI',\n                decimals:18,\n                // name:'DAIMock', // Kovan\n                address:'0x6b175474e89094c44da98b954eedeac495271d0f' // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              },\n            }\n          },\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV4,\n            name:'idleUSDTYield',\n            token:'idleUSDTYield', // Mainnet\n            // token:'idleUSDTYieldMock', // Kovan\n            address:'0x0000000000000000000000000000000000000012',\n            realAddress:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n            underlying:{\n              DAI:{\n                abi:ERC20,\n                name:'DAI', // Mainnet\n                token:'DAI',\n                decimals:18,\n                // name:'DAIMock', // Kovan\n                address:'0x6b175474e89094c44da98b954eedeac495271d0f' // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              },\n            }\n          }\n        },\n      },\n      directProps:{\n        // startBlock:25858186, // Kovan\n        startBlock:12783137, // Mainnet\n        // Yield token covers have a 14 days grace period\n        yieldTokenCoverGracePeriod: 14 * 24 * 60 * 60 * 1000,\n        contractInfo:{\n          abi:NexusMutualDistributor,\n          name:'NexusMutualDistributor',\n          // address:'0xe2d569dc064b3b91f514e775c6026e04d2c887a9' // Kovan\n          address:'0xf2b36f823eae36e53a5408d8bd452748b24fbf76' // Mainnet\n        },\n        incidentsInfo:{\n          abi:NexusMutualIncidents,\n          name:'NexusMutualIncidents',\n          // address:'0x322f9a880189E3FFFf59b74644e13e5763C5AdB9' // Kovan\n          address:'0x8ceba69a8e96a4ce71aa65859dbdb180b489a719' // Mainnet\n        }\n      }\n    },\n    b2bVesting:{\n      enabled:true,\n      visible:true,\n      icon:'CloudUpload',\n      label:'B2B Vesting',\n      route:'b2b-vesting-contract',\n      subComponent:DeployB2BVesting,\n      desc:'Deploy/Deposit/Claim for B2B Vesting Contracts<br /><small style=\"color:#ff9900\">(only for partners that joined the B2B Affiliate program)</small>',\n      props:{\n        contracts:{\n          vesterImplementation:{\n            abi:B2BVester,\n            address:'0x3024656ae91d7bf724f613c314bc56030ba2344c'\n          }\n        }\n      }\n    },\n    ethWrapper:{\n      enabled:true,\n      label:'ETH Wrapper',\n      route:'eth-wrapper',\n      subComponent:TokenWrapper,\n      image:'images/tokens/WETH.svg',\n      desc:'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props:{\n        startContract:{\n          name:'ETH',\n          token:'ETH',\n          decimals:18,\n          wrapMethod:'deposit',\n        },\n        destContract:{\n          abi:WETH,\n          name:'WETH',\n          decimals:18,\n          token:'WETH',\n          unwrapMethod:'withdraw',\n          address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    coverProtocol:{\n      enabled:false,\n      label:'Cover Protocol',\n      route:'cover-protocol',\n      subComponent:CoverProtocol,\n      image:'images/protocols/cover-logo.svg',\n      desc:'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl:'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props:{\n        contract:{\n          decimals:18,\n          abi:CoverMint,\n          name:'CoverMint',\n          address:'0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages:[\n          {\n            collateral:'DAI',\n            expirationTimestamp:1714470400,\n            tokens:{\n              Claim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                address:'0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                  address:'0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c',\n                }\n              },\n              NoClaim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                address:'0x53df0bfa014b7522299c129c5a7b318f02adb469',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                  address:'0xce0e9e7a1163badb7ee79cfe96b5148e178cab73',\n                }\n              }\n            }\n          },\n        ],\n      }\n    },\n    batchDeposit:{\n      enabled:true,\n      icon:'Storage',\n      claimEnabled:true,\n      depositEnabled:true,\n      route:'batch-deposit',\n      label:'Batch Deposit',\n      subComponent:BatchDeposit,\n      desc:'Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            strategy:'best',\n            baseToken:'DAI',\n            minPoolSize:20000,\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAI',\n              address:'0x633fb4d38B24dC890b11Db2AE2B248D13F996A79', // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  usePermit:true,\n                  label:'Deposit',\n                  permitName:'permitAndDeposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:6,\n            strategy:'best',\n            baseToken:'USDC',\n            minPoolSize:20000,\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDC',\n              address:'0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B', // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                  permitName:'permitEIP2612AndDepositUnlimited'\n                },\n              ]\n            },\n          },\n          /*\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  usePermit:true,\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n          */\n        }\n      }\n    },\n    batchMigration:{\n      enabled:true,\n      claimEnabled:true,\n      depositEnabled:false,\n      icon:'FileDownload',\n      route:'batch-migration',\n      label:'Batch Migration',\n      subComponent:BatchMigration,\n      desc:'Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'DAI',\n            name:'idleDAIYieldV3',\n            token:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAI',\n              address:'0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDC',\n            name:'idleUSDCYieldV3',\n            token:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDC',\n              address:'0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            name:'idleUSDTYieldV3',\n            token:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            name:'idleSUSDYieldV3',\n            token:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            name:'idleTUSDYieldV3',\n            token:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            name:'idleWBTCYieldV3',\n            token:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            name:'idleDAISafeV3',\n            token:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            name:'idleUSDCSafeV3',\n            token:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            name:'idleUSDTSafeV3',\n            token:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n        }\n      }\n    },\n    tokenMigration:{\n      enabled:true,\n      icon:'SwapHoriz',\n      route:'convert',\n      label:'Token Migration',\n      desc:'Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle',\n      subComponent:TokenMigration,\n      props:{\n        migrationContract:{\n          name:'IdleConverterV4',\n          abi:IdleConverterPersonalSignV4,\n          address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n          oldAddresses:[],\n          functions:[\n            {\n              label:'Migrate',\n              name:'migrateFromToIdle'\n            },\n          ]\n        },\n        availableStrategies:['best','risk'],\n        availableTokens:{\n          idleDAIv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            baseToken:'DAI',\n            abi:IdleTokenV2,\n            token:'idleDAIOld',\n            icon:'images/tokens/idleDAI.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0x10eC0D497824e342bCB0EDcE00959142aAa766dD',\n          },\n          cDAI:{\n            decimals:8,\n            enabled:true,\n            token:\"cDAI\",\n            baseToken:'DAI',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\",\n          },\n          iDAI:{\n            decimals:18,\n            enabled:false,\n            token:\"iDAI\",\n            baseToken:'DAI',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x493c57c4763932315a328269e1adad09653b9081\",\n          },\n          aDAI:{\n            decimals:18,\n            enabled:true,\n            token:\"aDAI\",\n            protocol:\"aave\",\n            baseToken:'DAI',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\",\n          },\n          yDAIv3:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv3\",\n            abi:yDAIv3.abi,\n            baseToken:'DAI',\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xC2cB1040220768554cf699b0d863A3cd4324ce32\",\n          },\n          yDAIv2:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv2\",\n            baseToken:'DAI',\n            abi:yDAIv3.abi,\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\",\n          },\n          idleUSDCv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            abi:IdleTokenV2,\n            baseToken:'USDC',\n            token:'idleUSDCOld',\n            icon:'images/tokens/idleUSDC.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0xeB66ACc3d011056B00ea521F8203580C2E5d3991',\n          },\n          cUSDC:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDC\",\n            baseToken:'USDC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x39aa39c021dfbae8fac545936693ac917d5e7563\",\n          },\n          iUSDC:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDC\",\n            baseToken:'USDC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\",\n          },\n          aUSDC:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDC\",\n            protocol:\"aave\",\n            baseToken:'USDC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\",\n          },\n          yUSDCv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv3\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x26EA744E5B887E5205727f55dFBE8685e3b21951\",\n          },\n          yUSDCv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv2\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\",\n          },\n          cUSDT:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDT\",\n            baseToken:'USDT',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\",\n          },\n          iUSDT:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDT\",\n            baseToken:'USDT',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x8326645f3aa6de6420102fdb7da9e3a91855045b\",\n          },\n          aUSDT:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDT\",\n            protocol:\"aave\",\n            baseToken:'USDT',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\",\n          },\n          yUSDTv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv3\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\",\n          },\n          yUSDTv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv2\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\",\n          },\n          idleSUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'SUSD',\n            token:'idleSUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleSUSDYield.svg',\n            address:'0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5',\n          },\n          aSUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aSUSD\",\n            protocol:\"aave\",\n            baseToken:'SUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x625aE63000f46200499120B906716420bd059240\",\n          },\n          ySUSDv3:{\n            decimals:18,\n            enabled:true,\n            token:\"ySUSDv3\",\n            abi:ySUSDv3,\n            baseToken:'SUSD',\n            protocol:\"iearn\",\n            availableStrategies:['best'],\n            icon:'images/tokens/ySUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xf61718057901f84c4eec4339ef8f0d86d2b45600\",\n          },\n          idleTUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'TUSD',\n            token:'idleTUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleTUSDYield.svg',\n            address:'0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6',\n          },\n          aTUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aTUSD\",\n            protocol:\"aave\",\n            baseToken:'TUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x4DA9b813057D04BAef4e5800E36083717b4a0341\",\n          },\n          yTUSDv3:{\n            decimals:18,\n            enabled:true,\n            abi:yTUSDv3,\n            token:\"yTUSDv3\",\n            baseToken:'TUSD',\n            protocol:\"iearn\",\n            icon:'images/tokens/yTUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x73a052500105205d34daf004eab301916da8190f\",\n          },\n          cWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"cWBTC\",\n            baseToken:'WBTC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\",\n          },\n          iWBTC:{\n            decimals:8,\n            enabled:false,\n            token:\"iWBTC\",\n            baseToken:'WBTC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\",\n          },\n          aWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"aWBTC\",\n            protocol:\"aave\",\n            baseToken:'WBTC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\",\n          },\n        }\n      }\n    },\n    addFunds:{\n      enabled:true,\n      icon:'AddCircleOutline',\n      route:'add-funds',\n      label:'Add Funds',\n      desc:'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent:BuyModal,\n      directProps:{\n        showInline:true,\n        showAllTokens:true\n      }\n    },\n    tokenSwap:{\n      enabled:true,\n      icon:'Sync',\n      route:'token-swap',\n      label:'Token Swap',\n      desc:'Easily swap your tokens using Kyber Swap widget',\n      subComponent:TokenSwap,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n          \"SUSD\":{\"token\":\"SUSD\"},\n          \"TUSD\":{\"token\":\"TUSD\"},\n          \"USDC\":{\"token\":\"USDC\"},\n          \"USDS\":{\"token\":\"USDS\"},\n          \"USDT\":{\"token\":\"USDT\"},\n          \"WBTC\":{\"token\":\"WBTC\"},\n          \"WETH\":{\"token\":\"WETH\"},\n          \"BUSD\":{\"token\":\"BUSD\"},\n          \"EURS\":{\"token\":\"EURS\"},\n          \"2KEY\":{\"token\":\"2KEY\"},\n          \"ABT\":{\"token\":\"ABT\"},\n          \"ABYSS\":{\"token\":\"ABYSS\"},\n          \"AMPL\":{\"token\":\"AMPL\"},\n          \"ANT\":{\"token\":\"ANT\"},\n          \"BAM\":{\"token\":\"BAM\"},\n          \"BAND\":{\"token\":\"BAND\"},\n          \"BAT\":{\"token\":\"BAT\"},\n          \"BLZ\":{\"token\":\"BLZ\"},\n          \"BNT\":{\"token\":\"BNT\"},\n          \"BQX\":{\"token\":\"BQX\"},\n          \"BTU\":{\"token\":\"BTU\"},\n          \"CDT\":{\"token\":\"CDT\"},\n          \"CVC\":{\"token\":\"CVC\"},\n          \"DAT\":{\"token\":\"DAT\"},\n          \"DGX\":{\"token\":\"DGX\"},\n          \"EKG\":{\"token\":\"EKG\"},\n          \"ELF\":{\"token\":\"ELF\"},\n          \"ENJ\":{\"token\":\"ENJ\"},\n          \"EQUAD\":{\"token\":\"EQUAD\"},\n          \"FXC\":{\"token\":\"FXC\"},\n          \"GDC\":{\"token\":\"GDC\"},\n          \"GEN\":{\"token\":\"GEN\"},\n          \"GHT\":{\"token\":\"GHT\"},\n          \"GNO\":{\"token\":\"GNO\"},\n          \"IOST\":{\"token\":\"IOST\"},\n          \"KEY\":{\"token\":\"KEY\"},\n          \"KNC\":{\"token\":\"KNC\"},\n          \"LEND\":{\"token\":\"LEND\"},\n          \"LINK\":{\"token\":\"LINK\"},\n          \"LOOM\":{\"token\":\"LOOM\"},\n          \"LRC\":{\"token\":\"LRC\"},\n          \"MANA\":{\"token\":\"MANA\"},\n          \"MCO\":{\"token\":\"MCO\"},\n          \"MET\":{\"token\":\"MET\"},\n          \"MFG\":{\"token\":\"MFG\"},\n          \"MKR\":{\"token\":\"MKR\"},\n          \"MLN\":{\"token\":\"MLN\"},\n          \"MTL\":{\"token\":\"MTL\"},\n          \"MYB\":{\"token\":\"MYB\"},\n          \"NEXXO\":{\"token\":\"NEXXO\"},\n          \"NPXS\":{\"token\":\"NPXS\"},\n          \"OGN\":{\"token\":\"OGN\"},\n          \"OMG\":{\"token\":\"OMG\"},\n          \"OST\":{\"token\":\"OST\"},\n          \"PAX\":{\"token\":\"PAX\"},\n          \"PBTC\":{\"token\":\"PBTC\"},\n          \"PLR\":{\"token\":\"PLR\"},\n          \"PNK\":{\"token\":\"PNK\"},\n          \"POLY\":{\"token\":\"POLY\"},\n          \"POWR\":{\"token\":\"POWR\"},\n          \"PT\":{\"token\":\"PT\"},\n          \"QKC\":{\"token\":\"QKC\"},\n          \"QNT\":{\"token\":\"QNT\"},\n          \"RAE\":{\"token\":\"RAE\"},\n          \"REN\":{\"token\":\"REN\"},\n          \"REP\":{\"token\":\"REP\"},\n          \"REQ\":{\"token\":\"REQ\"},\n          \"RLC\":{\"token\":\"RLC\"},\n          \"RSR\":{\"token\":\"RSR\"},\n          \"RSV\":{\"token\":\"RSV\"},\n          \"SAN\":{\"token\":\"SAN\"},\n          \"SNT\":{\"token\":\"SNT\"},\n          \"SNX\":{\"token\":\"SNX\"},\n          \"SPIKE\":{\"token\":\"SPIKE\"},\n          \"SPN\":{\"token\":\"SPN\"},\n          \"TKN\":{\"token\":\"TKN\"},\n          \"TKX\":{\"token\":\"TKX\"},\n          \"TRYB\":{\"token\":\"TRYB\"},\n          \"UBT\":{\"token\":\"UBT\"},\n          \"UPP\":{\"token\":\"UPP\"},\n          \"ZRX\":{\"token\":\"ZRX\"}\n        }\n      },\n      directProps:{\n      }\n    }\n  },\n  insurance:{\n    nexusMutual:{\n      label:'Nexus Mutual',\n      image:'images/protocols/nexus-mutual.png',\n      imageDark:'images/protocols/nexus-mutual-white.png'\n    },\n    coverProtocol:{\n      label:'Cover Protocol',\n      image:'images/protocols/cover-logo.svg',\n      imageDark:'images/protocols/cover-logo.svg',\n    }\n  },\n  payments: { // Payment methods & providers\n    methods:{\n      bank:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/bank.png',\n          caption:'Bank Account'\n        }\n      },\n      card:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/debit-card.png',\n          caption:'Credit Card'\n        }\n      },\n      wallet:{\n        defaultProvider:'zeroExInstant',\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/ethereum-wallet.svg',\n          caption:'Ethereum Wallet',\n          imageProps:{\n            padding:['0','5px']\n          }\n        }\n      },\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: 'images/payments/wyre.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.75% fee ~',\n        supportedMethods:['card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        remoteResources:{},\n        env:'prod',\n        envParams:{\n          test:{\n            accountId:'AC_Q2Y4AARC3TP'\n          },\n          prod:{\n            accountId:'AC_PQQBX33XVEQ'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n              break;\n              case 'card':\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = 'https://pay.sendwyre.com/purchase';\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken ),\n            referrerAccountId,\n            redirectUrl:globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const wyreWidget = document.getElementById('wyre-widget');\n          if (!wyreWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById('wyreWidget_style')){\n              const wyreStyle = document.createElement('style');\n              wyreStyle.id = 'wyreWidget_style';\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        },\n      },\n      ramp: {\n        enabled:true,\n        imageSrc: 'images/payments/ramp.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods:['bank','card'],\n        badge: {\n          text:'NO ID REQUIRED',\n          color:'#fff',\n          bgColor:'#0cade4'\n        },\n        supportedTokens:['ETH','DAI','USDC'],\n        supportedCountries:['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'],\n        getInfo: (props) => {\n          const info = {};\n            switch (props.selectedMethod){\n              case 'bank':\n                info.supportedCountries = ['GBR','EUR'];\n                info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n              case 'card':\n                info.supportedCountries = ['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'];\n                info.subcaption = `~ 2.90% fee ~`;\n              break;\n              default:\n              break;\n            }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n        \treturn {\n\t          hostAppName: 'Idle',\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? 'mobile' : 'desktop',\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset ? props.tokenConfig.ramp.swapAsset : props.selectedToken )\n        \t};\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on('*', async (event) => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type){\n                case 'PURCHASE_SUCCESSFUL':\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil.BNify(tokenAmount.toString()).div(functionsUtil.BNify(Math.pow(10,parseInt(tokenDecimals)).toString())).toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: 'light',\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\",\n                  });\n\n                break;\n                default:\n                break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled:true,\n        imageSrc: 'images/payments/transak.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods:['bank','card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR','IND'],\n        supportedTokens:['ETH','DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n        remoteResources:{'https://global.transak.com/v1/widget.js':{}},\n        env:'prod',\n        badge:{\n          text:'INSTANT',\n          bgColor:'#0069ee'\n        },\n        envParams:{\n          test:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_TEST,\n            url:'https://global.transak.com'\n          },\n          prod:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_PROD,\n            url:'https://global.transak.com'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === 'bank' ? '1.5%' : '4.5%';\n\n          if (props.selectedCountry && props.selectedCountry.value){\n            switch (props.selectedCountry.value.toUpperCase()){\n              case 'GBR':\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n              break;\n              case 'IND':\n                fee = '1.0%';\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n              break;\n              case 'EUR':\n                if (selectedMethod === 'bank'){\n                  info.badge = {\n                    text:'SEPA',\n                    color:'#f7cb05 ',\n                    bgColor:'#10288a'\n                  };\n                } else {\n                  info.badge = {\n                    text:'INSTANT',\n                    bgColor:'#0069ee'\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams = globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value){\n            switch (buyParams.selectedCountry.value.toUpperCase()){\n              case 'IND':\n                fiatCurrency = 'INR';\n              break;\n              case 'GBR':\n                fiatCurrency = 'GBP';\n              break;\n              case 'EUR':\n                fiatCurrency = 'EUR';\n              break;\n              case 'USA':\n                fiatCurrency = 'USD';\n              break;\n              default:\n                fiatCurrency = 'GBP';\n              break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.transak && props.tokenConfig.transak.currencyCode ? props.tokenConfig.transak.currencyCode : props.selectedToken);\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width:'100%',\n            height:'100%'\n            // email,\n          };\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          if (window.transakGlobal){\n\n            const transakWidget = document.getElementById('transak-widget');\n            if (!transakWidget){\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById('transakWidget_style')){\n                const transakStyle = document.createElement('style');\n                transakStyle.id = 'transakWidget_style';\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, 'transak-widget-container');\n          }\n        }\n      },\n      moonpay: {\n        enabled:true,\n        imageSrc: 'images/payments/moonpay.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 4.5% fee ~',\n        supportedMethods:['card','bank'],\n        supportedCountries:['GBR','EUR','AUS','BRA','CHN','MEX','CAN','HKG','RUS','ZAF','KOR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        env:'prod',\n        envParams:{\n          test:{\n            url:'https://buy-staging.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod:{\n            url:'https://buy.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                if (props.selectedCountry && props.selectedCountry.value){\n                  switch (props.selectedCountry.value.toUpperCase()){\n                    case 'EUR':\n                      info.badge = {\n                        text:'SEPA',\n                        color:'#f7cb05 ',\n                        bgColor:'#10288a'\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                    break;\n                    case 'GBR':\n                      info.badge = {\n                        text:'GBP',\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                    break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                    break;\n                  }\n                }\n              break;\n              case 'card':\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams = globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.moonpay && props.tokenConfig.moonpay.currencyCode ? props.tokenConfig.moonpay.currencyCode : props.selectedToken.toLowerCase()),\n            walletAddress:props.account,\n            baseCurrencyCode:'USD',\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            'bank':{\n              'GBR':'gbp_bank_transfer',\n              'EUR':'sepa_bank_transfer'\n            },\n            'card':'credit_debit_card'\n          };\n\n          const selectedCountry = buyParams.selectedCountry && buyParams.selectedCountry.value ? buyParams.selectedCountry.value.toUpperCase() : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod){\n            switch (buyParams.selectedMethod){\n              case 'bank':\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod]['EUR'];\n                switch (selectedCountry){\n                  case 'GBR':\n                  case 'EUR':\n                    params.enabledPaymentMethods = methods[buyParams.selectedMethod][selectedCountry];\n                  break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(methods[buyParams.selectedMethod]).join(',');\n                  break;\n                }\n              break;\n              case 'card':\n              default:\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod];\n              break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry){\n            case 'GBR':\n              params.baseCurrencyCode = 'GBP';\n            break;\n            case 'EUR':\n              params.baseCurrencyCode = 'EUR';\n            break;\n            default:\n              params.baseCurrencyCode = 'USD';\n            break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (!document.cookie.match(/^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/)) {\n              document.cookie = \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const moonpayWidget = document.getElementById('moonpay-widget');\n          if (!moonpayWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById('moonpayWidget_style')){\n              const moonpayStyle = document.createElement('style');\n              moonpayStyle.id = 'moonpayWidget_style';\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: 'images/payments/zeroexinstant.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        remoteResources:{'https://instant.0x.org/v3/instant.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onSuccess,onClose) => {\n\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context ? window.RimbleWeb3_context.connectorName : null;\n\n          if (!tokenParams.zeroExInstant){\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider: connectorName && connectorName!=='Injected' && window.RimbleWeb3_context.connector[connectorName.toLowerCase()] ? window.RimbleWeb3_context.connector[window.RimbleWeb3_context.connectorName.toLowerCase()].provider : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount) => {\n          if (window.zeroExInstant && initParams){\n            if (amount){\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, 'body');\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: 'images/payments/kyber.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Swap with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['WETH','USDC','DAI','USDT','TUSD','SUSD','WBTC','RAI'],\n        web3Subscription:{ // Data for web3 subscription\n          enabled: true,\n          contractAddress: '0x818e6fecd516ecc3849daf6845e3ec868087b755',\n          decodeLogsData: [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_startAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_tokenAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_startAmount\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_tokenAmount\",\n              \"type\": \"uint256\"\n            },\n          ],\n        },\n        remoteResources:{\n          'https://widget.kyber.network/v0.7.5/widget.css':{},\n          'https://widget.kyber.network/v0.7.5/widget.js':{\n            parentElement:document.body,\n            precall: (props,globalConfigs,providerInfo) => {\n\n              // Remove previous elements\n              const buttons = document.querySelectorAll('.kyber-widget-button');\n              for (let i=0;i<buttons.length;i++){\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll('.script_kyberSwap');\n              for (let i=0;i<scripts.length;i++){\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId ? props.buttonId : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)){\n                const a = document.createElement('a');\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props,globalConfigs);\n                a.target = '_blank';\n                a.rel = 'nofollow noopener noreferrer';\n                a.className = 'kyber-widget-button theme-ocean theme-supported';\n                a.title = 'Swap with Kyber';\n                a.style = 'display:none;';\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props,globalConfigs,buyParams=null) => {\n          const baseToken = props.baseToken ? props.baseToken : 'ETH';\n          const params = {\n            lang:'en',\n            type:'swap',\n            mode:'iframe',\n            theme:'theme-ocean',\n            paramForwarding:true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens:`${baseToken}_${props.selectedToken}`,\n            title:`Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair:`${baseToken}_${props.selectedToken}`,\n            commissionId:'0x4215606a720477178AdFCd5A59775C63138711e8',\n            network: globalConfigs.network.requiredNetwork === 1 ? 'mainnet' : 'test',\n          };\n\n          const url  = 'https://widget.kyber.network/v0.7.5/';\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props) => {\n          const buttonId = props.buttonId ? props.buttonId :`kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a){\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n\n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: 'images/payments/airswap.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://cdn.airswap.io/airswap-instant-widget.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            env: 'production',\n            mode: 'buy',\n            token: props.tokenConfig.address,\n            baseToken: 'ETH',\n            onComplete: onComplete ? onComplete : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.AirSwapInstant){\n            if (amount){\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams,'body');\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: 'images/payments/totle.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://widget.totle.com/latest/dist.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null,\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.TotleWidget){\n            const nodeId = 'totle-widget';\n            if (!document.getElementById(nodeId)){\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(initParams,document.getElementById(nodeId));\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                return (\n                  <ImageButton\n                    caption={token}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    imageSrc={`images/tokens/${token}.svg`}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} my={0}>\n                {\n                  this.props.showInline && this.props.buyToken ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `How do you prefer to buy ${this.state.selectedToken}?`\n                }\n              </Text>\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  maxWidth={ this.props.showInline ? '35em' : 'initial' }\n                  width={ (this.props.showInline && !this.props.isMobile) ? 0.72 : 1 }\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={`images/tokens/${token}.svg`} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034','1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    alert:'#ff9900',\n    arrowActive:'#d8d8d8',\n    arrowInactive:'#4f4f4f',\n    selectBgFocused:'#1e3657',\n    selectBg:'#162e4d',\n    backButtonBg:'#162e4d',\n    lineChartStroke:'#a4aec6',\n    wrongNetworkBannerBg:'#0e2133',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    link:'#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg:'#162e4d',\n    menuBg:'#162e4d',\n    menuHover:'#1e3657',\n    flashColor:'#bac5ff',\n    cardBgHover:'#1e3657',\n    cardBorder:'#0d2034',\n    pageActive:'#d8d8d8',\n    pageInactive:'#4f4f4f',\n    menuRightBorder:'#0d2034',\n    cardHoverShadow:'0px 0px 0px 1px rgb(45 74 114)',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class GnosisSafeConnector extends Connector {\n\n  constructor(SafeAppConnector) {\n    super(...arguments);\n    this.safeLoaded = false;\n    this.SafeAppConnector = SafeAppConnector;\n    this.provider = new this.SafeAppConnector();\n    this.checkSafeApp();\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.SafeAppConnector();\n    }\n\n    if (this.provider){\n      await this.provider.activate();\n      return this.provider;\n    }\n  }\n\n  async getAccount() {\n    if (this.provider){\n      return await this.provider.getAccount();\n    }\n  }\n\n  async getProvider(){\n    if (this.provider){\n      return await this.provider.getProvider();\n    }\n  }\n\n  async getSafeInfo() {\n    if (this.provider){\n      return await this.provider.getSafeInfo();\n    }\n  }\n\n  async getChainId() {\n    if (this.provider){\n      return await this.provider.getChainId();\n    }\n  }\n\n  async checkSafeApp() {\n    if (this.provider){\n      const isSafeApp = await this.provider.isSafeApp();\n      this.safeLoaded = true;\n      return isSafeApp;\n    }\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.deactivate();\n      return this.provider;\n    }\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      this.walletLink.disconnect();\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    if (this.provider){\n      await this.provider.enable();\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport GnosisSafeConnector from './connectors/GnosisSafeConnector';\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura).forEach((networkId,index) => {\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: globalConfigs.network.enabledNetworks\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: globalConfigs.network.providers.infura[defaultNetwork]+env.REACT_APP_INFURA_KEY\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nconst gnosis = new GnosisSafeConnector(SafeAppConnector);\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  gnosis,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              You should be on the {this.props.network.required.name} Ethereum\n              network. You are currently connected to the{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                {this.props.network.current.name}\n              </Text.span>{\" \"}\n              Network - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isCorrectNetwork === false && this.props.web3\n          ?\n            <WrongNetworkBanner\n              network={this.props.network}\n            />\n          :\n            null\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isGnosisSafe = !!connectors.gnosis.provider.safe;\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  // Handle Gnosis Safe connector\n  if (isGnosisSafe){\n    const injectedIndex = basicConnectorsName.indexOf('Injected');\n    // Remove Injected\n    basicConnectorsName.splice(injectedIndex,1);\n    // Remove Gnosis\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    basicConnectorsName.splice(gnosisIndex,1);\n    // Insert Gnosis in first place\n    basicConnectorsName.unshift('gnosis');\n  } else {\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    // Remove Gnosis\n    basicConnectorsName.splice(gnosisIndex,1);\n  }\n\n  const buttons = basicConnectorsName.map( (connectorName,index) => {\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageProps={{width:'auto',height:'42px'}}\n                  imageSrc={`images/connectors/${walletIcon}`}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageProps={{width:'auto',height:'42px'}}\n              imageSrc={`images/connectors/browser-wallet.png`}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/connectors/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      this.props.setConnector('Infura',null);\n      await this.props.context.setFirstValidConnector(['Infura']);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport { IFrameEthereumProvider } from '@ledgerhq/iframe-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\n\nrequire('dotenv').config();\nconst INFURA_KEY = process.env[\"REACT_APP_INFURA_KEY\"];\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkNetwork();\n\n    // detect Network account change\n    if (window.ethereum){\n      window.ethereum.on('networkChanged', async (networkId) => {\n        await this.props.clearCachedData(() => {\n          this.checkNetwork();\n        });\n      });\n    }\n\n    window.initWeb3 = this.initWeb3;\n  }\n\n  componentDidMount = async () => {\n    this.initSimpleID();\n\n    // this.functionsUtil.customLog('RimbleWeb3 componentDidMount');\n    this.initWeb3();\n\n    this.connectGnosisSafe();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  connectGnosisSafe = () => {\n    const gnosisSafeLoaded = this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      const walletProvider = this.functionsUtil.getWalletProvider();\n      const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n      // console.log('isGnosisSafe',this.props.connectors.gnosis.provider.safe,isGnosisSafe);\n      if (isGnosisSafe){\n        this.props.setConnector('gnosis','gnosis');\n      } else if (walletProvider === 'gnosis') {\n        this.props.setConnector('Infura',null);\n      }\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // this.functionsUtil.customLog('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    const gnosisSafeLoaded = !this.state.gnosisSafeLoaded && this.props.connectors.gnosis.safeLoaded;\n    // console.log('gnosisSafeLoaded',this.state.gnosisSafeLoaded,this.props.connectors.gnosis.safeLoaded,gnosisSafeLoaded);\n    if (gnosisSafeLoaded){\n      this.setState({\n        gnosisSafeLoaded:true\n      },() => {\n        this.connectGnosisSafe();\n      });\n    }\n\n    if (prevProps.connectorName !== this.props.connectorName && this.props.connectorName){\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect') {\n        this.initWeb3();\n      }\n    } else if ( (this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      this.initWeb3();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    if (customAddressChanged){\n      this.initAccount();\n    }\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    const availableStrategiesChanged = prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies));\n\n    // Reset tokenDecimals if token is changed\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    if (tokenChanged || availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n    // console.log('networkChanged',JSON.stringify(prevState.network),JSON.stringify(this.state.network),networkChanged);\n    if (networkChanged){\n      this.setState({\n        contracts:[],\n        contractsInitialized:false\n      }, () => {\n        this.initWeb3();\n        if (typeof this.props.setNetwork === 'function'){\n          this.props.setNetwork(this.state.network);\n        }\n      });\n    }\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    const metamaskProvider = await detectEthereumProvider();\n    if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n      window.ethereum = metamaskProvider;\n    }\n\n    const context = this.props.context;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (!networkId){\n      return false;\n    }\n\n    // console.log('initWeb3',this.state.network.current.id,this.state.network.required.id,networkId);\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(globalConfigs.network.providers.infura[networkId]+INFURA_KEY));\n\n    let web3 = context.library;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorNameChanged,context.connectorName,connectorName,setConnectorName);\n\n    if (connectorName !== 'ledgerLive'){\n      if (!context.active || connectorNameChanged) {\n        // Select preferred web3 provider\n        if (connectorName && connectorNameChanged){\n\n          if (connectorName === 'gnosis' && !this.state.gnosisSafeLoaded){\n            return false;\n          }\n\n          // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n          setConnectorName = connectorName;\n          await context.setConnector(connectorName);\n          // await context.setFirstValidConnector([connectorName, 'Infura']);\n          return web3;\n        }\n      }\n    }\n\n    let web3Host = null;\n    let web3Provider = null;\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = globalConfigs.network.providers.infura[networkId]+INFURA_KEY;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = globalConfigs.network.providers.infura[networkId]+INFURA_KEY;\n        forceCallback = true;\n      }\n    }\n\n    // Ledger Live\n    if (connectorName === 'ledgerLive'){\n      web3Provider = new IFrameEthereumProvider();\n    }\n\n    // Injected web3 provider\n    if (web3Provider){\n      web3 = new Web3(web3Provider);\n    // Infura\n    } else if (web3Host) {\n      web3 = new Web3(new Web3.providers.HttpProvider(web3Host));\n      if (connectorName !== 'Infura'){\n        this.props.setConnector('Infura',null);\n      }\n    }\n\n    const web3Callback = async () => {\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // After setting the web3 provider, check network\n      try {\n        await this.checkNetwork();\n        if (this.state.network.isCorrectNetwork){\n\n          if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          }\n\n          if (context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n\n            await this.initAccount();\n            // await this.setState({\n            //   accountInizialized: true,\n            //   account: this.props.customAddress\n            // });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(networkId) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      if (this.state.biconomy === null){\n        const biconomyWeb3Provider = web3Provider ? web3Provider : web3Host;\n\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || this.state.biconomy === biconomy){\n              return false;\n            }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              permitClient,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, web3Callback);\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            // console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                web3Infura,\n                biconomy:false\n              }, web3Callback);\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            web3Infura,\n            biconomy:false\n          }, web3Callback);\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3,\n          web3Infura,\n        }, web3Callback);\n      } else if (context.account || forceCallback){\n        web3Callback();\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`Init contract: ${name}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`creating contract ${name} - addr: ${address}`);\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : this.state.web3;\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      this.setState(state => ({\n        ...state,\n        contracts: [...state.contracts, {name, contract}]\n      }));\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      });\n\n      // After account is complete, get the balance\n      this.getAccountBalance();\n\n      return false;\n    }\n\n    try {\n      if (!account){\n        const wallets = await Promise.race([\n            this.state.web3.eth.getAccounts(),\n            new Promise((resolve) => setTimeout(resolve, 300))\n        ]);\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account || this.state.account === account){\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n\n      // Request account access if needed\n      if (account && walletProvider !== 'Infura'){\n\n        if (walletProvider === 'Infura'){\n          this.setState({\n            accountInizialized: true,\n            account:this.props.customAddress\n          });\n          return false;\n        }\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      } else {\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // this.functionsUtil.customLog(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    const contracts = this.functionsUtil.getGlobalConfig(['contracts']);\n    await this.functionsUtil.asyncForEach(Object.keys(contracts),async (contractName) => {\n      const contractInfo = contracts[contractName];\n      if (contractInfo.address !== null && contractInfo.abi !== null){\n        this.functionsUtil.customLog('initializeContracts, init contract', contractName, contractInfo.address);\n        await this.initContract(contractName, contractInfo.address, contractInfo.abi);\n      }\n    });\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    await this.functionsUtil.asyncForEach(Object.keys(govTokens),async (token) => {\n      const govTokenConfig = govTokens[token];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      // Initialize govToken contracts\n      let foundGovTokenContract = this.state.contracts.find(c => c.name === token);\n      if (!foundGovTokenContract) {\n        this.functionsUtil.customLog('initializeContracts, init contract', token, govTokenConfig.address);\n        await this.initContract(token, govTokenConfig.address, govTokenConfig.abi);\n      }\n    });\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n        \n        const availableTokens = this.props.availableStrategies[strategy];\n\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          let foundTokenContract = this.state.contracts.find(c => c.name === token);\n          if (!foundTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            await this.initContract(token, tokenConfig.address, tokenConfig.abi);\n          }\n\n          // Initialize idleTokens contracts\n          let foundIdleTokenContract = this.state.contracts.find(c => c.name === tokenConfig.idle.token);\n          if (!foundIdleTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            await this.initContract(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi);\n          }\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n            if (!foundProtocolContract) {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              await this.initContract(p.token, p.address, p.abi);\n            }\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              await this.initContract(oldContract.name, oldContract.address, oldContract.abi);\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n                if (!foundProtocolContract) {\n                  this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                  await this.initContract(p.token, p.address, p.abi);\n                }\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              await this.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n            }\n          }\n        })\n      });\n    }\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTranches),async (protocol) => {\n      const tokens = this.props.availableTranches[protocol];\n      await this.functionsUtil.asyncForEach(Object.keys(tokens),async (token) => {\n        const tokenConfig = tokens[token];\n        await Promise.all([\n          this.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi),\n          this.initContract(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi),\n          this.initContract(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi),\n          this.initContract(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi),\n          this.initContract(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi),\n          this.initContract(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi)\n        ]);\n      });\n    });\n\n    return this.setState({\n      contractsInitialized:true\n    });\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n\n    const networkId =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.requiredNetwork !== \"undefined\"\n        ? this.props.config.requiredNetwork\n        : globalConfigs.network.requiredNetwork;\n\n    let networkName = globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId] : 'unknown';\n\n    let requiredNetwork = {\n      name: networkName,\n      id: networkId\n    };\n\n    let network = Object.assign({},this.state.network);\n    network.required = requiredNetwork;\n\n    this.setState({ network });\n  }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        network.isCorrectNetwork = globalConfigs.network.enabledNetworks.includes(networkId);\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  getNetworkName = async () => {\n    try {\n      return this.state.web3.eth.net.getNetworkType((error, networkName) => {\n        let current = { ...this.state.network.current };\n        current.name = networkName;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network Name: \", error);\n    }\n  }\n\n  checkNetwork = async () => {\n    this.getRequiredNetwork();\n\n    await Promise.all([\n      this.getNetworkId(),\n      this.getNetworkName()\n    ]);\n\n    let network = Object.assign({},this.state.network);\n    network.isCorrectNetwork = !this.state.network.current.id || globalConfigs.network.enabledNetworks.includes(this.state.network.current.id);\n    // console.log('checkNetwork',this.state.network.current.id,network.isCorrectNetwork);\n\n    this.setState({ network });\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas/*, common*/ } : { from: account, gas/*, common*/ })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n\n    if (!this.state.modals.data.connectionError){\n      return false;\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n    \n    if (this.state.modals.data.connectionError !== error){\n      // console.log('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n      modals.data.connectionError = error;\n      this.setState({ modals });\n    }\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    transactions: {},\n    CrispClient: null,\n    permitClient:null,\n    tokenDecimals:null,\n    accountBalance: null,\n    web3Subscription: null,\n    accountValidated: null,\n    gnosisSafeLoaded:false,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    accountInizialized:false,\n    erc20ForwarderClient:null,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                position={'relative'}\n                src={'images/logo.svg'}\n                height={['35px','48px']}\n              />\n            </RouterLink>\n          </Flex>\n            <Flex\n              width={[0.5,8/12]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={\"flex-end\"}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    mr={4}\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile &&\n                  <>\n                    <Link\n                      mr={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n              }\n            </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport fToken from '../abis/fuse/fToken.json';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport crToken from '../abis/cream/crToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk:{\n      \n    }\n  },\n  1337:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token:'aDAIv2',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            name:'aavev2',\n            token:'aUSDCv2',\n            address:'0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            name:'aavev2',\n            enabled:true,\n            token:'aUSDTv2',\n            address:'0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'aavev2',\n            enabled:true,\n            abi:aToken,\n            address:'0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token:'aSUSDv2',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aTUSDv2',\n            address:'0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            token:'cWBTC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:false,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'aWBTC',\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aWBTCv2',\n            address:'0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      RAI:{\n        deposit:{},\n        token:'RAI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:[],\n        govTokensDisabled:false,\n        color:'hsl(169,42%,37%)',\n        icon:'images/tokens/RAI.png',\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleRAIYield',\n          address:'0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crRAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fRAI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  },\n  1:{ // Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token:'aDAIv2',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            name:'aavev2',\n            token:'aUSDCv2',\n            address:'0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            name:'aavev2',\n            enabled:true,\n            token:'aUSDTv2',\n            address:'0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'aavev2',\n            enabled:true,\n            abi:aToken,\n            address:'0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token:'aSUSDv2',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aTUSDv2',\n            address:'0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            token:'cWBTC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:false,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'aWBTC',\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aWBTCv2',\n            address:'0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      RAI:{\n        deposit:{},\n        token:'RAI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:[],\n        govTokensDisabled:false,\n        color:'hsl(169,42%,37%)',\n        icon:'images/tokens/RAI.png',\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleRAIYield',\n          address:'0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crRAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fRAI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            token:'aRAI',\n            enabled:true,\n            name:'aavev2',\n            functions:{\n            },\n            address:'0xc9bc48c72154ef3e5425641a3c747242112a46af',\n          }\n        ]\n      },\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","import ERC20 from '../contracts/ERC20.json';\nimport IdleCDO from '../contracts/IdleCDO.json';\nimport IdleCDOTrancheRewards from '../contracts/IdleCDOTrancheRewards.json';\nconst availableTranches = {\n  idle:{\n    DAI:{\n      token:'DAI',\n      decimals:18,\n      protocol:'idle',\n      blockNumber:12875386,\n      address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_idleDAIYield',\n        address:'0x675a1378777cc2d25dbf430a28738cb6b7a3f8c2'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_AA',\n          address:'0xa8c7b9c4F18B227Abc4b099bA92d6a1CfEb9649C'\n        },\n        label:'idleDAI AA',\n        blockNumber:12875386,\n        name:'IdleCDO_AA_idleDAIYield',\n        token:'IdleCDO_AA_idleDAIYield',\n        address:'0xe524EE80584b120c4df8c2f130AE571ed6C196DB'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_BB',\n          address:'0x0962fB33A7E0172d0E413b0fab003bEe5142E6B6'\n        },\n        label:'idleDAI BB',\n        blockNumber:12875386,\n        name:'IdleCDO_BB_idleDAIYield',\n        token:'IdleCDO_BB_idleDAIYield',\n        address:'0x95a2834AFDC65dd7f28585d2d992367600afb457'\n      }\n    }\n  }\n  /*\n  yearn:{\n  \tDAI:{\n  \t  junior:{\n  \t    address:'0x000000000000000000000000000000000000'\n  \t  },\n  \t  senior:{\n  \t    address:'0x000000000000000000000000000000000000'\n  \t  }\n  \t}\n  }\n  */\n};\nexport default availableTranches;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from 'jquery';\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from './connectors';\nimport Web3Provider from 'web3-react';\nimport { Web3Consumer } from 'web3-react';\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from '../configs/availableTokens';\nimport availableTranches from '../configs/availableTranches';\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from 'rimble-ui';\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import('../Dashboard/Dashboard'));\nconst Governance = React.lazy(() => import('../Governance/Governance'));\n\nclass App extends Component {\n  state = {\n    network:null,\n    cachedData:{},\n    buyToken: null,\n    currentEnv:null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode:'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme:theme,\n    currentSection:null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  closeToastMessage = (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps:null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps:props\n    });\n  }\n\n  processCustomParam = (props,prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = async (callback=null) => {\n\n    const cachedData = {...this.state.cachedData};\n    Object.keys(cachedData).forEach( key => {\n      const data = cachedData[key];\n      if (data.expirationDate !== null){\n        delete cachedData[key];\n      }\n    });\n\n\n    let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n    Object.keys(storedCachedData).forEach( key => {\n      const storedData = storedCachedData[key];\n      if (storedData.expirationDate !== null){\n        delete storedCachedData[key];\n      }\n    });\n\n    this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n\n    await this.setState({\n      cachedData\n    },() => {\n      if (typeof callback === 'function'){\n        callback();\n      }\n    });\n    return true;\n  }\n\n  setCachedData = (key,data,TTL=null,useLocalStorage=false) => {\n\n    key = key.toLowerCase();\n    const cachedKeyFound = this.state.cachedData[key];\n    const currentTime = parseInt(Date.now()/1000);\n\n    const update_key = !cachedKeyFound || ( (cachedKeyFound.expirationDate !== null && cachedKeyFound.expirationDate>=currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data));\n\n    let output = false;\n\n    if (update_key){\n      const expirationDate = TTL ? currentTime+(TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage){\n        let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n        if (!storedCachedData){\n          storedCachedData = {};\n        }\n\n        // const storedData = typeof data === 'object' ? JSON.stringify(data) : data;\n\n        storedCachedData = {\n          ...storedCachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        };\n        // console.log('STORED CACHE - INSERT KEY',key,data);\n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        }\n      }),() => {\n        window.cachedData = this.state.cachedData;\n      });\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)){\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress){\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw:false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({...state, selectedTab: tabIndex}));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const requiredNetwork = this.state.network && this.state.network.isCorrectNetwork ? (this.state.network.current.id || this.state.network.required.id) : globalConfigs.network.requiredNetwork;\n\n    // console.log('loadAvailableTokens',this.state.network,requiredNetwork,availableTokens);\n\n    // Load available strategies\n    Object.keys(availableTokens[requiredNetwork]).forEach((strategy) => {\n      availableStrategies[strategy] = Object.keys(availableTokens[requiredNetwork][strategy]).reduce( (enabledTokens,token) => {\n        const tokenConfig = availableTokens[requiredNetwork][strategy][token];\n        const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n        if (tokenConfig.enabled && envEnabled){\n          enabledTokens[token] = tokenConfig;\n        }\n        return enabledTokens;\n      },{});\n    });\n\n    newState.availableStrategies = availableStrategies;\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && availableStrategies[selectedStrategy]){\n      newState.availableTokens = availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]){\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy,selectedToken){\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    const newState = {\n      tokenConfig:!selectedToken ? null : this.state.tokenConfig,\n      availableTokens:!selectedToken ? null : this.state.availableTokens,\n      selectedToken:!selectedToken ? selectedToken :this.state.selectedToken,\n      selectedStrategy:!selectedStrategy ? selectedStrategy :this.state.selectedStrategy,\n    };\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken) {\n      if ( this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase()) ){\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',newState);\n\n    await this.setState(newState,callback);\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      },callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      },callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())){\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState,callback);\n    } else if(!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig:null\n      },callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    window.clearCachedData = this.clearCachedData;\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction){\n      window.console.error = () => {};\n      window.console.warn = () => {};\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage){\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version',false);\n      if (version !== globalConfigs.version){\n        this.functionsUtil.clearStoredData(['walletProvider','connectorName','themeMode']);\n        this.functionsUtil.setLocalStorage('version',globalConfigs.version);\n      }\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode',false);\n    if (themeMode){\n      this.setThemeMode(themeMode);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i=0;i<iFrames.length;i++){\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w){\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCustomAddress();\n    this.loadCurrentEnvironment();\n  }\n\n  loadCurrentEnvironment(){\n    const isLive = this.functionsUtil.checkUrlOrigin();\n    const currentEnv = isLive ? 'live' : 'beta';\n    this.setState({\n      currentEnv\n    },() => {\n      this.loadAvailableTokens();\n    })\n  }\n\n  loadCustomAddress(){\n    if (!this.state.customAddress){\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom'){\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress){\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged){\n      if (this.state.currentSection === 'landing'){\n        this.setThemeMode('light',false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode',false) || this.functionsUtil.getGlobalConfig(['dashboard','theme','mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n\n    if (tokenChanged || strategyChanged || networkChanged){\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    // if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n    //   window.parent.closeIframe(window.self);\n    // }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage){\n      let connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      let walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      // Check Ledger Live\n      const isLedgerLive = window.location.href.includes(\"ledger-live=1\");\n      if (isLedgerLive){\n        connectorName = 'ledgerLive';\n        walletProvider = 'ledger';\n      }\n      // console.log('isLedgerLive',isLedgerLive,connectorName,walletProvider);\n\n      this.setConnector(connectorName,walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width:this.state.width,\n      height:this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged){\n      if (widthChanged){\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged){\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  // Optional parameters to pass into RimbleWeb3\n  config = globalConfigs.network;\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e){\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken:null,\n      buyModalOpened:false\n    });\n  }\n\n  openBuyModal(e,buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened:true\n    });\n  }\n\n  async logout(){\n    // Reset Custom Address\n    this.setState({\n      customAddress:null\n    });\n    // Clear cached data\n    this.clearCachedData(()=>{\n      // Reset Localstorage\n      this.functionsUtil.clearStoredData(['version','themeMode','lastLogin','cachedData']);\n    });\n  }\n\n  setNetwork(network){\n    this.setState({\n      network\n    });\n  }\n\n  setConnector(connectorName,walletProvider){\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider){\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    // console.log('setConnector - BEFORE',connectorInfo,connectorName,walletProvider);\n\n    if ( (connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if ( connectorName === 'Injected' ){\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider){\n        case 'Metamask':\n          if (!hasMetamask && hasDapper){\n            walletProvider = 'Dapper';\n          }\n        break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask){\n            walletProvider = 'Metamask';\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    // console.log('setConnector - AFTER',connectorName,walletProvider);\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    },() => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode,store=true){\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard','theme','darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled){\n      themeMode = 'light';\n    }\n\n    switch (themeMode){\n      default:\n      case 'light':\n        selectedTheme = theme;\n      break;\n      case 'dark':\n        selectedTheme = themeDark;\n      break;\n    }\n\n    if (store){\n      this.functionsUtil.setLocalStorage('themeMode',themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection){\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize:4,\n            fontWeight:2\n          }}\n          loaderProps={{\n            mb:3,\n            size:'80px',\n            color:'primary'\n          }}\n          flexProps={{\n            my:3,\n            flexDirection:'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer>\n              {context => {\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    config={this.config}\n                    connectors={connectors}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    availableTranches={availableTranches}\n                    tokenConfig={this.state.tokenConfig}\n                    setNetwork={this.setNetwork.bind(this)}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        accountBalanceLow,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper\n                      }) => {\n                        return (\n                        <Box>\n                          <Switch>\n                            <Route\n                              path=\"/dashboard/:section?/:param1?/:param2?/:param3?\"\n                              render={\n                                (props) => \n                                  <Suspense\n                                    fallback={SuspenseLoader}\n                                  >\n                                    <Dashboard\n                                      {...props}\n                                      web3={web3}\n                                      modals={modals}\n                                      network={network}\n                                      context={context}\n                                      account={account}\n                                      isDashboard={true}\n                                      initWeb3={initWeb3}\n                                      biconomy={biconomy}\n                                      isMobile={isMobile}\n                                      simpleID={simpleID}\n                                      contracts={contracts}\n                                      initAccount={initAccount}\n                                      permitClient={permitClient}\n                                      initSimpleID={initSimpleID}\n                                      initContract={initContract}\n                                      transactions={transactions}\n                                      buyToken={this.state.buyToken}\n                                      logout={this.logout.bind(this)}\n                                      accountBalance={accountBalance}\n                                      themeMode={this.state.themeMode}\n                                      theme={this.state.selectedTheme}\n                                      validateAccount={validateAccount}\n                                      connecting={this.state.connecting}\n                                      cachedData={this.state.cachedData}\n                                      setToken={this.setToken.bind(this)}\n                                      accountValidated={accountValidated}\n                                      getTokenDecimals={getTokenDecimals}\n                                      rejectValidation={rejectValidation}\n                                      tokenConfig={this.state.tokenConfig}\n                                      availableTranches={availableTranches}\n                                      getAccountBalance={getAccountBalance}\n                                      accountBalanceLow={accountBalanceLow}\n                                      accountInizialized={accountInizialized}\n                                      selectedToken={this.state.selectedToken}\n                                      connectorName={this.state.connectorName}\n                                      setStrategy={this.setStrategy.bind(this)}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountBalanceToken={accountBalanceToken}\n                                      initializeContracts={initializeContracts}\n                                      walletProvider={this.state.walletProvider}\n                                      buyModalOpened={this.state.buyModalOpened}\n                                      erc20ForwarderClient={erc20ForwarderClient}\n                                      contractsInitialized={contractsInitialized}\n                                      openBuyModal={this.openBuyModal.bind(this)}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      handleMenuClick={this.selectTab.bind(this)}\n                                      setConnector={this.setConnector.bind(this)}\n                                      setThemeMode={this.setThemeMode.bind(this)}\n                                      availableTokens={this.state.availableTokens}\n                                      closeBuyModal={this.closeBuyModal.bind(this)}\n                                      setCachedData={this.setCachedData.bind(this)}\n                                      selectedStrategy={this.state.selectedStrategy}\n                                      userRejectedValidation={userRejectedValidation}\n                                      clearCachedData={this.clearCachedData.bind(this)}\n                                      setStrategyToken={this.setStrategyToken.bind(this)}\n                                      accountValidationPending={accountValidationPending}\n                                      availableStrategies={this.state.availableStrategies}\n                                      setCurrentSection={this.setCurrentSection.bind(this)}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      contractMethodSendWrapper={contractMethodSendWrapper}\n                                      setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                    />\n                                  </Suspense>\n\n                              }\n                            >\n                            </Route>\n                            {\n                              governanceEnabled && \n                                <Route\n                                  path=\"/governance/:section?/:item_id?\"\n                                  render={\n                                    (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Governance\n                                          {...props}\n                                          web3={web3}\n                                          modals={modals}\n                                          network={network}\n                                          context={context}\n                                          account={account}\n                                          initWeb3={initWeb3}\n                                          biconomy={biconomy}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          isGovernance={true}\n                                          contracts={contracts}\n                                          initAccount={initAccount}\n                                          initSimpleID={initSimpleID}\n                                          initContract={initContract}\n                                          transactions={transactions}\n                                          buyToken={this.state.buyToken}\n                                          logout={this.logout.bind(this)}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          validateAccount={validateAccount}\n                                          connecting={this.state.connecting}\n                                          cachedData={this.state.cachedData}\n                                          setToken={this.setToken.bind(this)}\n                                          accountValidated={accountValidated}\n                                          getTokenDecimals={getTokenDecimals}\n                                          rejectValidation={rejectValidation}\n                                          tokenConfig={this.state.tokenConfig}\n                                          getAccountBalance={getAccountBalance}\n                                          accountBalanceLow={accountBalanceLow}\n                                          accountInizialized={accountInizialized}\n                                          selectedToken={this.state.selectedToken}\n                                          connectorName={this.state.connectorName}\n                                          setStrategy={this.setStrategy.bind(this)}\n                                          userRejectedConnect={userRejectedConnect}\n                                          accountBalanceToken={accountBalanceToken}\n                                          initializeContracts={initializeContracts}\n                                          walletProvider={this.state.walletProvider}\n                                          buyModalOpened={this.state.buyModalOpened}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          rejectAccountConnect={rejectAccountConnect}\n                                          handleMenuClick={this.selectTab.bind(this)}\n                                          setConnector={this.setConnector.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          availableTokens={this.state.availableTokens}\n                                          closeBuyModal={this.closeBuyModal.bind(this)}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          selectedStrategy={this.state.selectedStrategy}\n                                          userRejectedValidation={userRejectedValidation}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          setStrategyToken={this.setStrategyToken.bind(this)}\n                                          accountValidationPending={accountValidationPending}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          contractMethodSendWrapper={contractMethodSendWrapper}\n                                          setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        />\n                                      </Suspense>\n                                  }\n                                >\n                                </Route>\n                            }\n                            <Route>\n                              <Header\n                                modals={modals}\n                                network={network}\n                                context={context}\n                                account={account}\n                                initWeb3={initWeb3}\n                                isMobile={isMobile}\n                                contracts={contracts}\n                                initAccount={initAccount}\n                                initContract={initContract}\n                                buyToken={this.state.buyToken}\n                                accountBalance={accountBalance}\n                                logout={this.logout.bind(this)}\n                                validateAccount={validateAccount}\n                                connecting={this.state.connecting}\n                                accountValidated={accountValidated}\n                                getTokenDecimals={getTokenDecimals}\n                                rejectValidation={rejectValidation}\n                                tokenConfig={this.state.tokenConfig}\n                                getAccountBalance={getAccountBalance}\n                                accountBalanceLow={accountBalanceLow}\n                                selectedToken={this.state.selectedToken}\n                                connectorName={this.state.connectorName}\n                                userRejectedConnect={userRejectedConnect}\n                                accountBalanceToken={accountBalanceToken}\n                                walletProvider={this.state.walletProvider}\n                                buyModalOpened={this.state.buyModalOpened}\n                                contractsInitialized={contractsInitialized}\n                                openBuyModal={this.openBuyModal.bind(this)}\n                                rejectAccountConnect={rejectAccountConnect}\n                                handleMenuClick={this.selectTab.bind(this)}\n                                setConnector={this.setConnector.bind(this)}\n                                availableTokens={this.state.availableTokens}\n                                closeBuyModal={this.closeBuyModal.bind(this)}\n                                userRejectedValidation={userRejectedValidation}\n                                accountValidationPending={accountValidationPending}\n                                connectAndValidateAccount={connectAndValidateAccount}\n                                setToken={ e => { this.setToken(e) } }\n                              />\n\n                              {this.state.route === \"onboarding\" ? (\n                                <Web3Debugger\n                                  web3={web3}\n                                  account={account}\n                                  accountBalance={accountBalance}\n                                  accountBalanceToken={accountBalanceToken}\n                                  accountBalanceLow={accountBalanceLow}\n                                  initAccount={initAccount}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountValidated={accountValidated}\n                                  accountValidationPending={accountValidationPending}\n                                  rejectValidation={rejectValidation}\n                                  userRejectedValidation={userRejectedValidation}\n                                  validateAccount={validateAccount}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  modals={modals}\n                                  network={network}\n                                  transaction={transaction}\n                                />\n                              ) : null}\n\n                              {this.state.route === \"default\" ? (\n                                <Switch>\n                                  <Route exact path=\"/\"\n                                    render={ (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Landing\n                                          {...props}\n                                          web3={web3}\n                                          network={network}\n                                          account={account}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          contracts={contracts}\n                                          initContract={initContract}\n                                          innerWidth={this.state.width}\n                                          logout={this.logout.bind(this)}\n                                          innerHeight={this.state.height}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          cachedData={this.state.cachedData}\n                                          connecting={this.state.connecting}\n                                          selectedTab={this.state.selectedTab}\n                                          tokenConfig={this.state.tokenConfig}\n                                          accountBalanceLow={accountBalanceLow}\n                                          getAccountBalance={getAccountBalance}\n                                          availableTranches={availableTranches}\n                                          customAddress={this.state.customAddress}\n                                          selectedToken={this.state.selectedToken}\n                                          accountBalanceToken={accountBalanceToken}\n                                          closeToastMessage={this.closeToastMessage}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          processCustomParam={this.processCustomParam}\n                                          availableTokens={this.state.availableTokens}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          updateSelectedTab={this.selectTab.bind(this)}\n                                          toastMessageProps={this.state.toastMessageProps}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          setToken={ e => { this.setToken(e) } }\n                                        />\n                                        <CookieConsent\n                                          expires={365}\n                                          buttonText={\"Ok\"}\n                                          location={\"bottom\"}\n                                          acceptOnScroll={true}\n                                          cookieName={\"cookieAccepted\"}\n                                          acceptOnScrollPercentage={5}\n                                          style={{background: \"rgba(255,255,255,0.95)\",zIndex:'9999999'}}\n                                          buttonStyle={{display: isMobile ? \"block\" : \"none\", backgroundColor:'#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\"}}\n                                        >\n                                          <Flex flexDirection={'row'} alignItems={['flex-start','center']} justifyContent={'flex-start'} maxHeight={['150px','initial']} style={ isMobile ? {overflowY:'scroll'} : null }>\n                                            <Image display={['none','block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                            <Text pl={[0,3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                              This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                              You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                            </Text>\n                                          </Flex>\n                                        </CookieConsent>\n                                      </Suspense>\n                                    }\n                                  ></Route>\n                                  <Route exact path=\"/terms-of-service\">\n                                    <Tos />\n                                  </Route>\n                                  <Route>\n                                    <PageNotFound />\n                                  </Route>\n                                </Switch>\n                              ) : null}\n                            </Route>\n                          </Switch>\n                          <TransactionToastUtil\n                            transactions={transactions}\n                            themeMode={this.state.themeMode}\n                          />\n                        </Box>\n                      )}}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = this.props.availableActions || {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = this.props.transactionsList || await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // console.log('TransactionsList',etherscanTxs);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens && this.props.availableTokens[selectedToken] ? this.props.availableTokens[selectedToken] : this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]);\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.action = action;\n      tx.amount = amount;\n      tx.momentDate = momentDate;\n      tx.status = tx.status ? tx.status : 'Completed';\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(this.functionsUtil.getEtherscanTransactionUrl(txHash)) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.useMetaTx !== false && this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            {...this.props}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          {...this.props}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens[token];\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3,\n          ...this.props.cardProps\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.notion.so/idlelabs/Idle-Finance-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport { Text, Icon, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText'\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = this.functionsUtil.BNify(customValue).toString();\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label || fieldProps.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue){\n      return null;\n    }\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : null;\n  }\n}\n\nexport default CustomField;","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          let [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              // if (isRisk){\n              //   debugger;\n              // }\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                aprChartData[0].data.push({ x, y });\n              });\n            }\n\n            this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n          }\n\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    const tokenConfig = this.props.tokenConfig || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens && Object.keys(this.state.govTokens).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state.govTokens ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        output = this.state.score !== undefined && this.state.score !== null && this.functionsUtil.BNify(this.state.score).gt(0) ? (\n          <SmartNumber {...fieldProps} decimals={2} number={this.state.score} />\n        ) : this.functionsUtil.BNify(this.state.score).lte(0) ? '-' : loader\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            const customFieldName = Object.values(fieldInfo.path).pop();\n            if (this.props.tokenConfig[`${customFieldName}Props`]){\n              const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n              // Replace props\n              if (customFieldProps && Object.keys(customFieldProps).length){\n                Object.keys(customFieldProps).forEach(p => {\n                  fieldProps[p] = customFieldProps[p];\n                });\n              }\n            }\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n"],"sourceRoot":""}