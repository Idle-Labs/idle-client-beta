{"version":3,"sources":["utilities/components/WelcomeModal.js"],"names":["WelcomeModal","props","_this","Object","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","state","email","error","subscribed","sendingForm","functionsUtil","componentDidUpdate","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","wrap","_context","prev","next","setProps","stop","sendUserInfo","sendEmail","arguments","length","undefined","walletProvider","getWalletProvider","userInfo","address","account","provider","simpleIDPassUserInfo","closeModal","_callee2","_context2","globalConfigs","analytics","google","events","enabled","sendGoogleAnalyticsEvent","eventCategory","eventAction","eventLabel","setTimeout","err","FunctionsUtil","handleSubmit","bind","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_7__","handleValidation","e","_this2","preventDefault","callback","setState","window","axios","post","newsletterSubscription","endpoint","then","r","catch","localStorage","walletAddress","toLowerCase","lastLogin","getItem","JSON","parse","signedUp","setLocalStorage","stringify","target","value","parentNode","classList","add","react__WEBPACK_IMPORTED_MODULE_8___default","createElement","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","isOpen","_ModalCard__WEBPACK_IMPORTED_MODULE_12__","closeFunc","Header","title","icon","Body","width","flexDirection","mb","color","textAlign","fontSize","my","borderRadius","onClick","onSubmit","mt","alignItems","name","colors","green","size","fontWeight","ml","Field","label","Input","type","outline","border","px","py","placeholder","onChange","required","justifyContent","_ButtonLoader_ButtonLoader_js__WEBPACK_IMPORTED_MODULE_14__","buttonText","isLoading","buttonProps","className","header_styles","gradientButton","hoverColor","React","Component"],"mappings":"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","file":"static/js/21.f5d765f7.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Button,\n  Form,\n  Icon,\n  Flex,\n  Link\n} from \"rimble-ui\";\nimport axios from 'axios';\nimport colors from '../../colors';\nimport ModalCard from './ModalCard';\nimport header_styles from './Header.module.scss';\nimport ButtonLoader from '../../ButtonLoader/ButtonLoader.js';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass WelcomeModal extends React.Component {\n\n  state = {\n    email:null,\n    error:false,\n    subscribed:false,\n    sendingForm:false\n  };\n\n  functionsUtil = null;\n\n  constructor(props) {\n    super(props);\n    this.functionsUtil = new FunctionsUtil(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleValidation = this.handleValidation.bind(this);\n  }\n\n  componentDidUpdate = async () => {\n    this.functionsUtil.setProps(this.props);\n  }\n\n  sendUserInfo = (sendEmail=true) => {\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const userInfo = {\n      address: this.props.account,\n      provider: walletProvider\n    };\n\n    if (sendEmail && this.state.email !== null){\n      userInfo.email = this.state.email;\n    }\n\n    this.functionsUtil.simpleIDPassUserInfo(userInfo);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    if (!this.state.email){\n      return false;\n    }\n\n    const callback = () => {\n      this.setState({\n        sendingForm:false,\n        subscribed:true\n      });\n      window.setTimeout(this.props.closeModal,2500);\n    };\n\n    this.sendUserInfo();\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'UI',\n      eventAction: 'send_email',\n      eventLabel: 'WelcomeModal'\n    });\n\n    axios.post(globalConfigs.newsletterSubscription.endpoint, {\n      'email': this.state.email\n    }).then(r => {\n      callback();\n    })\n    .catch(err => {\n      callback();\n    });\n\n    // Set signedUp in the localStorage\n    if (localStorage){\n      const walletAddress = this.props.account.toLowerCase();\n      let lastLogin = localStorage.getItem('lastLogin') ? JSON.parse(localStorage.getItem('lastLogin')) : null;\n      if (lastLogin && lastLogin[walletAddress] && !lastLogin[walletAddress].signedUp){\n        lastLogin[walletAddress].signedUp = true;\n        this.functionsUtil.setLocalStorage('lastLogin',JSON.stringify(lastLogin));\n      }\n    }\n\n    this.setState({\n      sendingForm:true\n    })\n  };\n\n  closeModal = async () => {\n\n    const closeModal = () => {\n      this.props.closeModal();\n    };\n\n    try{\n      // Prevent sending email\n      this.sendUserInfo(false);\n\n      // Send Google Analytics event\n      if (globalConfigs.analytics.google.events.enabled){\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'UI',\n          eventAction: 'continue_without_email',\n          eventLabel: 'WelcomeModal'\n        },closeModal);\n\n        // Call callback after 1 second if stuck\n        setTimeout(closeModal,1000);\n      } else {\n        closeModal();\n      }\n    } catch (err) {\n      closeModal();\n    }\n  }\n\n  handleValidation(e) {\n    if (e && e.target) {\n      this.setState({ email: e.target.value });\n      e.target.parentNode.classList.add(\"was-validated\");\n    }\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        {\n          this.state.subscribed ? (\n            <ModalCard\n              closeFunc={this.closeModal}\n            >\n              <ModalCard.Header title={'All done'} icon={`images/done.svg`}></ModalCard.Header>\n              <ModalCard.Body>\n                <Flex width={1} flexDirection={'column'} mb={3}>\n                  <Text color={'dark-gray'} textAlign={'center'} fontSize={3} my={0}>\n                    Thanks for subscribing!\n                  </Text>\n                  <Button\n                    my={3}\n                    width={'100%'}\n                    borderRadius={4}\n                    onClick={this.closeModal}\n                  >\n                    CLOSE\n                  </Button>\n                </Flex>\n              </ModalCard.Body>\n            </ModalCard>\n          ) : (\n            <ModalCard closeFunc={this.closeModal}>\n              <ModalCard.Header title={'Stay up-to-date!'} icon={`images/notification.svg`}>\n              </ModalCard.Header>\n              <ModalCard.Body>\n                <Form onSubmit={this.handleSubmit}>\n                  <Flex width={1} flexDirection={'column'} mb={3}>\n                    <Text color={'mid-gray'} textAlign={'left'} fontSize={3} my={0}>\n                      Add your e-mail to receive updates about:\n                    </Text>\n                  </Flex>\n                  <Flex width={1} flexDirection={'column'} mt={2}>\n                    <Flex my={2} flexDirection={'row'} alignItems={'center'}>\n                      <Icon\n                        name={'CheckCircle'}\n                        color={colors.green}\n                        size={'32'}\n                      />\n                      <Text color={'dark-gray'} textAlign={'left'} fontSize={3} fontWeight={2} my={0} ml={2}>\n                        Performance reports\n                      </Text>\n                    </Flex>\n                    <Flex my={2} flexDirection={'row'}>\n                      <Icon\n                        name={'CheckCircle'}\n                        color={colors.green}\n                        size={'32'}\n                      />\n                      <Text color={'dark-gray'} textAlign={'left'} fontSize={3} fontWeight={2} my={0} ml={2}>\n                        New Protocols & Tokens\n                      </Text>\n                    </Flex>\n                    <Flex my={2} flexDirection={'row'}>\n                      <Icon\n                        name={'CheckCircle'}\n                        color={colors.green}\n                        size={'32'}\n                      />\n                      <Text color={'dark-gray'} textAlign={'left'} fontSize={3} fontWeight={2} my={0} ml={2}>\n                        Latest updates\n                      </Text>\n                    </Flex>\n                    <Form.Field width={1} label={''}>\n                      <Form.Input\n                        type=\"email\"\n                        name=\"EMAIL\"\n                        width={1}\n                        outline={'none'}\n                        border={0}\n                        px={3}\n                        py={4}\n                        fontSize={3}\n                        textAlign={['center','left']}\n                        placeholder={'Enter your e-mail'}\n                        onChange={this.handleValidation}\n                        required\n                      />\n                    </Form.Field>\n                    <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n                      <ButtonLoader\n                        buttonText={'SUBMIT'}\n                        isLoading={this.state.sendingForm}\n                        buttonProps={{className:header_styles.gradientButton,width:'100%',type:'submit'}}\n                      >\n                      </ButtonLoader>\n                      <Link mt={2} onClick={this.closeModal} hoverColor={'blue'}>continue without e-mail</Link>\n                    </Flex>\n                  </Flex>\n                </Form>\n              </ModalCard.Body>\n            </ModalCard>\n          )\n        }\n      </Modal>\n    );\n  }\n}\n\nexport default WelcomeModal;\n"],"sourceRoot":""}