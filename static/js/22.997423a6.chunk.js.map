{"version":3,"sources":["utilities/components/MigrateModal.js"],"names":["MigrateModal","props","_this","Object","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","state","dontShowAgain","functionsUtil","componentDidUpdate","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","wrap","_context","prev","next","loadUtils","stop","closeModal","_callee2","_context2","getGlobalConfig","sendGoogleAnalyticsEvent","eventCategory","eventAction","eventLabel","toggleDontShowAgain","setLocalStorage","removeStoredItem","setState","migrate","tokenMigrationRoute","goToSection","setProps","FunctionsUtil","_this2","fieldProps","fontWeight","fontSize","color","flexProps","justifyContent","react__WEBPACK_IMPORTED_MODULE_7___default","createElement","rimble_ui__WEBPACK_IMPORTED_MODULE_11__","isOpen","_ModalCard__WEBPACK_IMPORTED_MODULE_8__","maxWidth","closeFunc","Header","iconHeight","title","icon","Body","mb","width","flexDirection","my","textAlign","alignItems","protocolsTokensBalances","keys","map","token","key","concat","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_10__","fieldInfo","name","mr","height","tokenConfig","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_12__","assign","minPrecision","number","balance","_ButtonLoader_ButtonLoader_js__WEBPACK_IMPORTED_MODULE_14__","buttonText","handleClick","isLoading","sendingForm","buttonProps","className","header_styles","gradientButton","mt","required","checked","label","onChange","e","target","React","Component"],"mappings":"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","file":"static/js/22.997423a6.chunk.js","sourcesContent":["import React from \"react\";\nimport ModalCard from './ModalCard';\nimport header_styles from './Header.module.scss';\nimport AssetField from '../../AssetField/AssetField';\nimport { Text, Modal, Flex, Checkbox } from \"rimble-ui\";\nimport SmartNumber from '../../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport ButtonLoader from '../../ButtonLoader/ButtonLoader.js';\n\nclass MigrateModal extends React.Component {\n\n  state = {\n    dontShowAgain:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    const gaEventsEnabled = this.functionsUtil.getGlobalConfig(['globalConfigs','analytics','google','events','enabled']);\n    // Send Google Analytics event\n    if (gaEventsEnabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'UI',\n        eventAction: 'continue_without_migrate',\n        eventLabel: 'MigrateModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  toggleDontShowAgain = (dontShowAgain) => {\n\n    if (dontShowAgain){\n      this.functionsUtil.setLocalStorage('dontShowMigrateModal','true');\n    } else {\n      this.functionsUtil.removeStoredItem('dontShowMigrateModal');\n    }\n\n    this.setState({\n      dontShowAgain\n    });\n  }\n\n  migrate = () => {\n    const tokenMigrationRoute = this.functionsUtil.getGlobalConfig(['tools','tokenMigration','route']);\n    this.props.goToSection('tools/'+tokenMigrationRoute);\n    this.props.closeModal();\n  }\n\n  render() {\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[2,3],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','750px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            iconHeight={'40px'}\n            title={'Migrate to Idle'}\n            icon={`images/migrate.svg`}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              mb={0}\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                my={0}\n                fontSize={3}\n                color={'mid-gray'}\n                textAlign={'center'}\n              >\n                You can migrate your funds from Compound, Aave, Fulcrum, Yearn and Idle V2 with just one transaction.\n              </Text>\n            </Flex>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Flex\n                my={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                {\n                  this.props.protocolsTokensBalances && Object.keys(this.props.protocolsTokensBalances).map( token => (\n                    <Flex\n                      mb={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      key={`token_${token}`}\n                      justifyContent={'space-between'}\n                    >\n                      <AssetField\n                        token={token}\n                        fieldInfo={{\n                          name:'icon',\n                          props:{\n                            mr:2,\n                            height:'2.3em'\n                          }\n                        }}\n                        tokenConfig={this.props.protocolsTokensBalances[token].tokenConfig}\n                      />\n                      <SmartNumber\n                        mr={2}\n                        {...fieldProps}\n                        minPrecision={5}\n                        number={this.props.protocolsTokensBalances[token].balance} \n                      />\n                      <AssetField\n                        token={token}\n                        fieldInfo={{\n                          name:'tokenName',\n                          props:fieldProps\n                        }}\n                        tokenConfig={this.props.protocolsTokensBalances[token].tokenConfig}\n                      />\n                    </Flex>\n                  ) )\n                }\n                <Text\n                  mb={0}\n                  fontSize={1}\n                  color={'red'}\n                  fontWeight={500}\n                  textAlign={'center'}\n                >\n                  Please be aware that by migrating your tokens from other protocols, your open positions might be liquidated if collateralized with migrated tokens.\n                </Text>\n              </Flex>\n              <Flex\n                mb={3}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <ButtonLoader\n                  buttonText={'MIGRATE'}\n                  handleClick={this.migrate}\n                  isLoading={this.state.sendingForm}\n                  buttonProps={{\n                    width:['100%','50%'],\n                    className:header_styles.gradientButton\n                  }}\n                >\n                </ButtonLoader>\n                {\n                /*\n                <Link mt={2} onClick={this.closeModal} hoverColor={'blue'}>continue without migrate</Link>\n                */\n                }\n                <Checkbox\n                  mt={2}\n                  required={false}\n                  color={'mid-gray'}\n                  checked={this.state.dontShowAgain}\n                  label={`Don't show this popup again`}\n                  onChange={ e => this.toggleDontShowAgain(e.target.checked) }\n                />\n              </Flex>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default MigrateModal;"],"sourceRoot":""}