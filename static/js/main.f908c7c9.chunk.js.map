{"version":3,"sources":["FlexLoader/FlexLoader.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","PageNotFound/PageNotFound.module.scss","utilities/components/ShortHash.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","SmartNumber/SmartNumber.js","ConnectBox/ConnectBox.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","ImageButton/ImageButton.js","CustomTooltip/CustomTooltip.js","AllocationChart/AllocationChart.js","CustomTooltip/CustomTooltipRow.js","RoundButton/RoundButton.js","ExtLink/ExtLink.js","PortfolioEquity/PortfolioEquity.js","ChartCustomTooltip/ChartCustomTooltip.js","theme.js","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","utilities/components/ModalCard.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","utilities/components/Header.module.scss","TxProgressBar/TxProgressBar.js","AssetSelector/AssetSelector.js","GenericSelector/GenericSelector.js","Tos/Tos.module.scss","TransactionField/TransactionField.js","Title/Title.js","GenericChart/GenericChart.js","DashboardCard/DashboardCard.module.scss","FastBalanceSelector/FastBalanceSelector.js","SendTxWithBalance/SendTxWithBalance.js","Staking/Staking.js","TokenSwap/TokenSwap.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","CustomField/CustomField.js","CustomList/CustomList.js","PortfolioDonut/PortfolioDonut.js","TotalEarningsCounter/TotalEarningsCounter.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","TotalBalanceCounter/TotalBalanceCounter.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","configs/globalConfigs.js","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","DashboardCard/DashboardCard.js","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","TableRow/TableRow.js","TableHeader/TableHeader.js","Migrate/Migrate.js","AssetsList/AssetsList.js","Footer/Footer.module.scss","colors.js","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","utilities/components/BuyModal.js","utilities/components/ModalCard.js","Footer/Footer.js","TableCellHeader/TableCellHeader.js","CardIconButton/CardIconButton.js","IconBox/IconBox.js","AssetField/AssetField.js"],"names":["FlexLoader","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","Object","assign","width","alignItems","justifyContent","this","props","flexProps","loaderProps","text","textProps","Component","ChartCustomTooltipRow","prevProps","prevState","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","mb","flexDirection","pr","style","flexBasis","flex","color","mr","height","borderRadius","backgroundColor","fontSize","fontWeight","textAlign","textTransform","label","whiteSpace","dangerouslySetInnerHTML","__html","value","module","exports","headerContainer","headerBgFiller","bgContainer","list","textContainer","ShortHash","shortenHash","hash","shortHash","txStart","substr","txEnd","length","display","React","LoadingSpinner","react_default","index_es","className","styles","mx","ButtonLoader","onClick","handleClick","buttonProps","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","SmartNumber","functionsUtil","setProps","FunctionsUtil","loadUtils","_this2","formattedNumber","number","isNaN","type","formatMoney","precision","abbreviateNumber","decimals","maxPrecision","minPrecision","keys","forEach","p","showUnit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","unit","unitProps","ConnectBox","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_11__","cardProps","mt","size","name","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_9__","connectAndValidateAccount","TransactionListFilters","state","maxWidth","minWidth","maxHeight","isOpened","activeFilters","status","assets","actions","setFilter","filter","_this","setState","objectSpread","defineProperty","applyFilters","toggle","arguments","undefined","toggleOpened","resetFilter","resetFilters","top","zIndex","position","DashboardCard","py","px","transition","isInteractive","cursor","isMobile","overflow","borderTop","concat","theme","colors","divider","filters","map","filterCategory","filterValues","key","TableCellHeader","pb","toUpperCase","filterValue","filterLabel","isChecked","my","checked","radioBtn","onChange","e","Text","mainColor","ml","values","v","filterName","hoverColor","TransactionsList","page","prevTxs","txsPerPage","loading","totalTxs","totalPages","deposit","redeem","send","receive","migrate","swap","swapout","withdraw","completed","pending","failed","renderedTxs","processedTxs","lastBlockNumber","processTxs","availableActions","action","toLowerCase","txsIndexes","tx","parseFloat","token","includes","sort","b","timeStamp","Math","ceil","i","selectedToken","tokenConfig","availableTokens","min","date","Date","getTxAction","parsedValue","tokenAmount","amount","toFixed","momentDate","strToMoment","push","preventDefault","max","loadTxs","transactionsChanged","JSON","stringify","transactions","enabledTokens","count","account","firstBlockNumber","getGlobalConfig","enabledActions","getEtherscanTxs","etherscanTxs","hashKey","lastTx","pop","blockNumber","parseInt","_this3","_this4","hasActiveFilters","m","minHeight","id","pt","src_TransactionListFilters_TransactionListFilters","bind","TableHeader","cols","index","txHash","txHashKey","TableRow","rowProps","transaction","window","open","rowId","cardId","fieldComponent","TransactionField","prevPage","nextPage","h3","fontFamily","ImageButton","image","imageSrc","src","imageProps","iconName","iconProps","caption","isActive","contrastColor","buttonStyle","Fragment","badge","bgColor","right","captionPos","subcaption","split","lineHeight","CustomTooltip","react__WEBPACK_IMPORTED_MODULE_6___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","point","left","data","itemPos","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","xFormatted","children","AllocationChart","chartData","chartProps","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","componentUnmounted","loadData","setStateSafe","newState","callback","getTokenAllocation","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","onMouseLeave","tooltipFormat","sliceLabel","radialLabel","tooltip","container","inline","background","cardBg","labels","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","margin","bottom","protocols","protocolInfo","protocolName","protocolAddr","address","protocolAllocationPercParsed","times","globalConfigs","stats","hsl","join","capitalize","protocolIcon","icon","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","showLoader","CustomTooltipRow","RoundButton","boxShadow","ExtLink","target","rel","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","componentDidMount","mobileChanged","themeModeChanged","themeMode","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee3","filteredTxs","amountLent","wrap","_context3","prev","next","BNify","plus","minus","lt","balance","tokenPrice","idleTokens","stop","_x3","apply","currentDate","clone","subtract","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","getTime","tokensData","isRisk","selectedStrategy","_ref2","_callee4","_context4","getTokenApiData","sent","_x4","idleTokenBalance","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","filteredTokenData","timestamp","tokenDecimals","filteredBalances","lastFilteredTx","idlePrice","fixTokenDecimals","newBalance","lastTxBalance","gt","tokenUsdConversionRate","conversionRateField","chartToken","conversionRate","isSameOrAfter","isSameOrBefore","formattedDate","format","frequencySeconds","_loop","aggregatedBalances","x","y","balances","itemIndex","item","floor","yFormatDecimals","gridYStep","gridYValues","gridYValue","daysCount","daysFrequency","xScale","yScale","stacked","xFormat","yFormat","axisBottom","legend","tickSize","tickPadding","orient","legendOffset","legendPosition","tickValues","pointSize","useMesh","axisLeft","tickRotation","pointLabel","enableArea","enableSlices","enableGridY","curve","enableGridX","pointBorderWidth","pointLabelYOffset","areaBaselineValue","pointColor","areaOpacity","axis","ticks","fill","grid","line","stroke","lineChartStroke","strokeDasharray","sliceTooltip","slideData","slice","points","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","serieId","yFormatted","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","Line","parentId","parentIdHeight","ChartCustomTooltip","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","fontSizes","fontWeights","letterSpacings","lineHeights","solid","title","copy","serif","counter","space","radii","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","disabled","primary","blue","base","gradient-bg","primary-light","light","primary-dark","dark","bgBlue","dark-blue","skyBlue","lightBlue","copyColor","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","alert","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","link","menuBg","menuHover","flashColor","menuRightBorder","cardHoverShadow","cardBgHover","cardBorder","boost","curvein","default","curveout","curvedepositin","curvedepositout","actionBg","blacks","whites","zIndices","messageStyle","shade","tint","success","green","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","bg","button","gradientButton","empty","select","selectDark","input","TxProgressBar","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","_callee","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","_context","initProgressBar","getTransaction","Promise","_ref3","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","customLog","web3","eth","err","_x","_x2","abrupt","getBlockTime","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","div","toString","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txProgressBarData","_ref8","_ref9","_context7","localStorage","getItem","parse","all","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","href","cancelTransaction","cancelTextColor","cancelTextHoverColor","AssetSelector","options","defaultValue","CustomOptionValue","CustomValueContainer","find","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","fieldInfo","showCustomField","cachedData","setCachedData","showBalance","selectProps","indexOf","innerProps","loadComponents","selectedTokenChanged","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","isSearchable","changeToken","GenericSelector","optionsChanged","defaultValueChanged","componentsChanged","ControlComponent","menuIsOpen","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","CustomIndicatorSeparator","CustomMenu","CustomInputContainer","searchInput","searchInputHidden","CustomOption","selectedValue","o","genericSelector","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","loadField","hashChanged","accountChanged","output","fieldProps","textOverflow","rimble_ui__WEBPACK_IMPORTED_MODULE_11__","align","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_12__","border","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","tokenSymbol","iconSrc","Title","HeadingComponent","component","Heading","h1","GenericChart","addEventListener","handleWindowSizeChange","removeEventListener","chartContainer","document","getElementById","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","loaderText","defaultOpacity","hidden","interactive","rainbow","FastBalanceSelector","onMouseDown","replaceArrayProps","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","SendTxWithBalance","inputValue","txSucceeded","permitEnabled","showPermitBox","buttonDisabled","contractApproved","fastBalanceSelector","changeInputValue","call_callback","changeInputCallback","setInputValue","selectedPercentage","tokenBalance","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","lte","approve","callbackApprove","callbackReceiptApprove","regenerator_default","checkContractApproved","eventData","eventAction","eventCategory","eventLabel","getTransactionError","sendGoogleAnalyticsEvent","transactionHash","enableERC20","contractInfo","executeTx","_amount","callbackReceipt","contractName","params","signedParameters","_params","methodName","methodParams","normalizeTokenAmount","eventValue","signPermit","console","log","getPermitTransactionParams","getTransactionParams","contractMethodSendWrapper","approveCallback","actionChanged","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","approveEnabled","contractChanged","tokenConfigChanged","initContract","abi","checkTokenApproved","viewOnly","connectorName","IconBox","infoBox","steps","step","stepIndex","description","required","togglePermitEnabled","balanceSelectorInfo","placeholder","approveDescription","Staking","globalStats","balanceProp","statsLoaded","stakedBalance","rewardMultiplier","accountingData","selectedAction","selectedOption","successMessage","poolTokenPrice","rewardTokenPrice","tokenWrapperProps","distributionSpeed","transactionSucceeded","toggleShowTokenWrapper","showTokenWrapperEnabled","toolProps","contract","updateData","selectedActionChanged","contractApprovedChanged","userStakedBalance","totalStakedBalance","totalStakingShares","userTotalStakingShare","rewardsPerDay","stakedBalanceUSD","rewardsPerYearUSD","apy","rewardToken","normalizedInputValue","genericContractCall","unstakeRewards","toBN","expiry","r","s","stakedTokensLog","txReceipt","logs","topics","t","replace","stakedTokens","unstakedTokensLog","unstakedTokens","rewardTokenConfig","receivedRewardsLog","receivedRewards","DAITokenConfig","getSushiswapPoolTokenPrice","getSushiswapConversionRate","getTokenBalance","startContract","wrapMethod","destContract","unwrapMethod","loadStats","reduce","_this5","enabled","integerValue","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalRewards","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","now","programDuration","utc","_this6","initialLockedShares","durationSec","tokensPerSecond","stakingShare","maxMultiplier","distributionSpeedMultiplier","userDistributionSpeed","maxBonusDays","currentRewards","_this7","StatsCard","titleProps","titleParentProps","isStake","isUnstake","isStats","txAction","AssetField","selectToken","poolLink","statInfo","setAction","src_SendTxWithBalance_SendTxWithBalance","flexWrap","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","baseToken","selectDestToken","getGlobalConfigs","paymentProvider","providerInfo","initProps","buttonId","initParams","getInitParams","render","remoteResources","url","j","scriptID","script","remoteResourceParams","precall","readyState","onreadystatechange","onload","async","parentElement","appendChild","head","stylesheetId","loadTokens","asyncToGenerator","getContractByName","fromTokenChanged","destTokenChanged","loadKyberWidget","NexusMutual","1","2","3","amountValue","periodValue","quoteResponse","changeAmount","changePeriod","makeRequest","textDecoration","activeColor","changeSelectedToken","getQuote","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","getETHBalance","mintLog","mintedAmount","withdrawLog","withdrawnAmount","fullWidth","CardIconButton","iconColor","iconBgColor","CustomField","funcProps","CustomComponent","componentHasChildren","fieldType","fieldPath","path","customValue","getArrayPath","row","Image","Icon","Button","customFieldName","customFieldProps","CustomList","rows","rowIndex","PortfolioDonut","totalFunds","parentWidth","selectedTokenConfig","loadPortfolio","portfolio","idle","getIdleTokenPrice","convertTokenBalance","getGovTokensUserBalances","govTokensUserBalances","govToken","govTokenBalance","tokenPercentage","tokenColorHsl","round","radialLabelsLinkOffset","itemWidth","itemHeight","translateY","symbolSize","anchor","direction","itemTextColor","symbolShape","effects","on","strategyIcon","convertToken","TotalEarningsCounter","earningsEnd","earningsStart","loadTotalEarnings","contractsInitialized","availableStrategies","counterStyle","oldState","getAccountPortfolio","totalEarnings","totalAmountLent","avgAPY","build_default","delay","decimal","separator","useEasing","duration","end","start","formattingFn","n","countUpRef","ref","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","90","2 Years","5 Years","loadEarnings","aggregatedEarnings","earnings","earningsYear","amountDeposited","avgBuyPrice","idleTokenPrice","earningsPerc","tokenAPY","tokenAprs","earningsPercStep","possibleSteps","maxPossibleStep","getAmountDeposited","getAvgBuyPrice","slicedToArray","getTokenAprs","avgApr","avgApy","orderedTokensEarnings","estimationStep","option","setEstimationStepsPerc","tokenIndex","tokenEarnings","estimationStepPerc","finalEarnings","cursorPerc","tokenIcon","tokenRGBColor","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","gte","pl","src_TotalEarningsCounter_TotalEarningsCounter","estimationLabel","DashboardIconButton","TotalBalanceCounter","counterEnd","counterStart","StrategyPage","tokensToMigrate","aggregatedValues","activeCoverages","depositedTokens","remainingTokens","batchedDeposits","portfolioLoaded","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","portfolioEquityQuickSelection","getActiveCoverages","getBatchedDeposits","getTokensToMigrate","c","statusColors","statusIcon","statusColor","portfolioCoverage","totalBalance","statusIconProps","batchInfo","strategy","deposited","batchDeposits","redeemable","batchRedeems","avgScore","totalBalanceWithScore","_ref4","_ref5","tokenScore","amountLentToken","tokenWeight","getTokenScore","getGovTokensUserTotalBalance","govTokensTotalBalance","govTokensUserBalance","govTokensTotalBalanceTooltip","govTokens","apyLong","riskScore","yieldFarming","batchDepositConfig","coverProtocolConfig","placement","message","src_TotalBalanceCounter_TotalBalanceCounter","totalEarningsPerc","src_PortfolioDonut_PortfolioDonut","aligItems","setPortfolioEquityQuickSelection","getFrequencySeconds","AssetsList","fields","mobile","parentProps","goToSection","route","borderBottom","h4","desc","showTooltip","showDirection","toolName","toolIndex","toolConfig","src_DashboardIconButton_DashboardIconButton","src_CustomList_CustomList","fileClaimUrl","openWindow","src_EarningsEstimation_EarningsEstimation","textSize","BatchDeposit","canClaim","batchTotals","canDeposit","execute","claim","usePermit","lastExecution","hasDeposited","permitSigned","currBatchIndex","batchCompleted","claimSucceeded","componentLoaded","executeSucceeded","migrationEnabled","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","urlParams","param2","executeSucceededChanged","callbackExecute","callbackReceiptExecute","migrationContract","migrationContractInfo","getBatchedDepositExecutions","batchExecutions","functions","functionInfo","nonceMethod","permitContract","methods","batchIndex","batchTotal","batchRedeem","batchDeposit","batchDepositInfo","depositEnabled","availableStrategiesKeys","_ref6","strategyConfig","selectStrategy","obj","baseTokenConfig","strategyAvailableTokens","oldContract","migrateFunction","migration","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","_this8","canExecuteBatch","strategyDefaultValue","openTooltipModal","isDisabled","Migrate","showActions","getTokenPrice","isMigrationTool","showBalanceSelector","migrationIcon","migrationParams","toMigrate","callbackPermit","migrationText","minPoolSize","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","collateral","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","pow","expirationTimestamp","balancerTokenConfig","tokens","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","isClaim","apyPrice","currTime","coverages","expirationDate","selectCoverage","coverage","isMint","isBuyClaim","isBuyNoClaim","BuyModal","showInline","availableMethods","buyToken","TokenMigration","changeFromToken","convertTool","tokenInfo","destTokenConfig","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","_ref7","env","process","appName","version","baseURL","forumURL","darkModeEnabled","betaURL","countries","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","errorsEnabled","messagesEnabled","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","fortmatic","portis","authereum","torus","trezor","ledger","custom","newsletterSubscription","endpoint","messages","scoreShort","apyShort","cheapRedeem","curveBonusSlippage","directMint","performanceFee","govTokenApr","govTokenRedeemableBalance","riskScoreShort","redeemSkipGov","batchDepositExecutionSchedule","curveInstructions","analytics","google","events","debugEnabled","addPostfixForTestnet","modals","first_deposit_referral","first_deposit_share","welcome","frequency","dashboard","baseRoute","mode","governance","test","startBlock","tokenName","availableContracts","IDLE","FeeTreasury","PriceOracle","GovernorAlpha","EcosystemFund","IdleController","contracts","delegates","n_coins","imageInactive","rates","poolContract","CurvePool","depositContract","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","coinIndex","idleUSDCYield","idleUSDTYield","permit","DAI","EIPVersion","USDC","SLP","showAUM","showAPR","protocol","showPrice","aprTooltipMode","distributionMode","distributionFrequency","disabledTokens","COMP","stkAAVE","aToken","addressForPrice","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","SushiswapRouter","SushiV2Router02","UniswapRouter","UniswapV2Router02","BalancerExchangeProxy","zeroExInstant","orderSource","assetData","affiliateInfo","feeRecipient","feePercentage","strategies","best","comingSoon","addGovTokens","titlePostfix","govTokensEnabled","chartColor","iconInactive","iconInactiveDark","descLong","descShort","risk","new","TTL","tvls","substack","scores","config","headers","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","endTimestamp","startTimestamp","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","rgb","hex","chart","labelTextColorModifiers","performanceTooltip","USD","USDT","TUSD","SUSD","WBTC","WETH","RAI","idleDAI+idleUSDC+idleUSDT","compound","aavev2WithStkAAVE","rateField","compoundWithCOMP","fulcrum","dsr","dydx","iearn","aave","aavev2","cream","fuse","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","permitType","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","network","availableNetworks","4","42","1337","isForked","requiredNetwork","blocksPerYear","secondsPerYear","requiredConfirmations","accountBalanceMinimum","providers","infura","etherscan","endpoints","snapshot","whitelist","proposals","urls","biconomy","enableLogin","supportedNetworks","disabledWallets","limits","debug","apiKey","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","apiId","terminal","REACT_APP_TERMINAL_KEY","projectId","REACT_APP_TERMINAL_PROJECT_ID","source","web3Version","Web3Versions","one","simpleID","getNetwork","networkId","networkName","appOrigin","location","origin","appId","renderNotifications","notifications","tools","ethWrapper","subComponent","stake","LpStaking","SushiLiquidityPool","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","permitName","batchMigration","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","oldAddresses","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","directProps","showAllTokens","insurance","ETH","ens","tokenSwap","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","payments","bank","defaultProvider","showDefaultOnly","card","wallet","wyre","supportedMethods","supportedCountries","supportedTokens","envParams","accountId","prod","getInfo","selectedMethod","buyParams","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","innerHTML","body","wyreStyle","ramp","hostAppName","userAddress","hostApiKey","REACT_APP_RAMP_KEY","variant","hostLogoUrl","swapAsset","RampInstantSDK","event","t0","getAccountBalance","getTokenDecimals","payload","purchase","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","fee","selectedCountry","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","match","moonpayStyle","https://instant.0x.org/v3/instant.js","onSuccess","onClose","tokenParams","RimbleWeb3_context","chainId","provider","connector","ethereum","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","contractAddress","decodeLogsData","internalType","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","IdleGovToken","classCallCheck","getBalance","claimRewards","getPriorVotes","priorVotes","_args3","refreshIdleSpeed","getUnclaimedTokens","getAPR","IDLETokenConfig","cachedDataKey","APR","idleDistribution","tokenAllocation","tokenPool","idleDistributedPerYearUSD","_args6","getDistribution","getUniswapConversionRate","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","_ref10","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","totalSpeed","_args10","_context10","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","getUserPoolShare","_x7","fixDistributionSpeed","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","idleGovToken","trimEth","utils","BN","toEth","wei","fromWei","toWei","htmlDecode","childNodes","nodeValue","BNify_obj","BigNumber","String","_len","Array","_key","moment","customLogError","_console","_len2","_key2","normalizeSimpleIDNotification","str","arr1","arr2","stripHtml","html","tmp","textContent","innerText","scrollTo","to","scrollY","change","currentTime","easeInOutQuad","animateScroll","val","getQueryStringParameterByName","results","RegExp","exec","decodeURIComponent","depositProxyContractInfo","migrationContractAddr","migrationContractOldAddrs","batchMigrationContractAddr","isMigrationTx","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","orderedTokensBalance","totalBalanceConverted","tokenBalanceConverted","getCurveAvgSlippage","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","_args4","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","getCurveAvgBuyPrice","_args5","prevAvgBuyPrice","idleTokensBalance","getFirstDepositTx","deposits","_args7","firstDepositTx","asyncTimeout","ms","getDepositTimestamp","firstDepositTxs","_args8","acc","_ref11","userAvgPrice","getAmountLent","amountLents","getEtherscanBaseTxs","endBlockNumber","firstIdleBlockNumber","etherscanInfo","etherscanBaseTxs","etherscanBaseEndpoint","etherscanApiUrl","lastCachedTx","lastCachedBlockNumber","etherscanEndpointLastBlock","latestTxs","latestBlockNumbers","txs","requestCount","requestStatus","cachedRequests","_args11","REACT_APP_ETHERSCAN_KEY","getCachedRequest","result","makeCachedRequest","filterEtherscanTxs","toConsumableArray","saveEtherscanTxs","filterCurveTxs","txsToStore","cachedRequest","saveCachedRequest","_callee13","allAvailableTokens","_args13","_context13","processStoredTxs","_ref19","_callee14","_args14","_context14","_ref20","_callee15","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args15","_context15","tokenMigrationToolParams","curveTokenConfig","idleToken","internalTxs","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenDecimal","tokenValue","newValue","iTxs","withdrawnValue","processEtherscanTransactions","addStoredTransaction","txKey","tokenKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref21","_callee20","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args20","_context20","baseTokenAddress","_ref22","_callee19","minedTxs","_context19","_ref23","_callee18","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context18","getCurveTokenPrice","t1","_ref24","_callee16","_context16","getTransactionReceipt","_x11","_x12","baseTokensConfig","t2","_ref25","_callee17","_context17","_x13","_x14","_x9","_x10","_ref26","_callee26","txsToProcess","_args26","_context26","_ref27","_callee25","_context25","_ref28","_callee24","isStoredTx","allowedMethods","pendingStatus","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context24","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","method","created","_ref29","_callee21","_context21","_x19","_x20","_ref30","_callee22","_context22","_x21","_x22","raw","_ref31","_callee23","_context23","_x23","_x24","decodeLog","_token","_x17","_x18","_x16","_x15","alias","getCustomAddress","setCustomAddress","customAddress","_ref32","_callee27","error_callback","_args27","_context27","catch","_x25","_ref33","_callee28","return_data","_args28","_context28","_x26","code","errorCode","array","prop","shift","configs","checkUrlOrigin","checkUrlBeta","_ref34","_callee30","googleEventsInfo","originOk","currentNetwork","_args30","_context30","ga","_ref35","_callee29","_context29","hitCallback","hitCallbackFail","_x28","_x29","_x27","createContract","_ref36","_callee31","_context31","Contract","_x30","_x31","_x32","getWalletProvider","simpleIDPassUserInfo","userInfo","email","initSimpleID","passUserInfo","getEtherscanTransactionUrl","tx_address","getEtherscanAddressUrl","decimalCount","thousands","abs","negativeSign","Number","getSnapshotProposals","_callee34","activeOnly","validProposals","_args34","_context34","getCachedData","addr","msg","_ref38","_callee33","checkedStrategies","_context33","metadata","_ref39","_callee32","_context32","symbol","_x34","_x33","_ref40","_callee35","forceStartTimestamp","order","limit","filteredCachedData","_filteredData","apiInfo","filteredData","_args35","_context35","_x35","_ref41","_callee36","_context36","_x36","aprs","allocations","aprWeighted","allocation","apr","quantity","hour","day","week","getProtocolInfoByAddress","ROUND_FLOOR","normalizeTokenDecimals","normalizedTokenDecimals","exchangeRate","checkContractPaused","_callee37","contractPaused","_args37","_context37","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref43","_callee39","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context39","lastAllocationsPromise","_ref44","_callee38","lastAllocations","_context38","_x38","_x39","alloc","_x37","checkMigration","_ref45","_callee40","oldContractBalance","oldContractTokenDecimals","oldContractBalanceFormatted","oldContractName","_context40","getContractBalance","_x40","_x41","estimateMethodGasUsage","_ref46","_callee41","_contract$methods","functionCall","_ref47","_ref48","gasLimit","_args41","_context41","getGasPrice","estimateGas","_x42","_x43","_ref49","_callee42","callback_receipt","_contract$methods2","_context42","once","confirmationNumber","receipt","_x44","_x45","_x46","_x47","_x48","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref50","_callee43","biconomyInfo","res","_context43","x-api-key","_x49","sendTxWithPermit","_ref51","_callee44","_contract$methods3","messageToSign","_this$getSignaturePar","_context44","encodeABI","_address","personal","sign","_x50","_x51","_x52","_x53","_x54","_x55","buildBiconomyErc20ForwarderTx","_ref52","_callee45","tokenAddress","callData","_context45","erc20ForwarderClient","buildTx","txGas","_x56","_x57","_x58","_x59","_x60","sendBiconomyTxWithErc20Forwarder","_ref53","_callee46","req","metaInfo","txResponse","fetchReceiptIntervalId","_context46","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x61","_x62","_x63","_x64","sendBiconomyTxWithPersonalSign","_ref54","_callee47","_this$getSignaturePar2","_context47","getNonce","call","_x65","_x66","_x67","_x68","signPermitEIP2612","_ref55","_callee48","erc20Name","owner","spender","deadline","domain","domainData","_context48","getChainId","verifyingContract","types","EIP712Domain","Permit","primaryType","currentProvider","jsonrpc","substring","_x69","_x70","_x71","_x72","_x73","_x74","_x75","_x76","_ref56","_callee49","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","_args49","_context49","net","getId","allowed","response","_x77","_x78","_x79","_ref57","_callee50","permitParams","methodAbi","useNonce","_args50","_context50","_jsonInterface","f","inputs","unshift","_x80","_x81","_x82","_x83","_x84","_x85","_x86","sendSignedTx","_ref58","_callee51","MetaTransaction","dataToSign","_context51","_x87","_x88","_x89","_x90","_x91","_ref59","_callee52","contractAddr","walletAddr","_ref60","_ref61","allowance","_context52","getAllowance","_x92","_x93","_x94","_ref62","_callee53","_context53","_x95","_x96","_x97","txData","disableERC20","toTwosComplement","loadAssetField","_ref63","_callee54","field","addCurveApy","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref64","_ref65","curveAvgSlippage","curveAvgBuyPrice","curveTokenBalance","_ref66","_ref67","amountLentCurve1","redeemableBalanceCurve","_ref68","_ref69","curveApy","amountLentCurve","redeemableBalanceCurveStart","redeemableBalanceCurveEnd","earningPerYear","_ref70","_ref71","amountLent1","redeemableBalance1","depositTimestamp","_idleGovToken","govTokenConfig","blocksPerDay","blocksPerWeek","blocksPerMonth","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref72","_ref73","tokenPriceFirstDeposit","_ref74","_ref75","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref76","_ref77","tokenAPY1","amountLent2","redeemableBalanceStart","redeemableBalanceEnd","_earningPerYear","_govTokenConfig2","_ref78","_ref79","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","redeemableBalance","_ref80","_ref81","amountLentCurve2","redeemableBalanceCurve1","_ref82","_ref83","redeemableBalance2","_args54","_context54","getCurveTokenBalance","getCurveAPY","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getStkAaveUserDistribution","getIdleGovToken","t3","getCompDistribution","getStkAaveDistribution","t4","getCompAvgApr","t5","t6","t7","getUserTokenFees","t8","t9","getGovTokenUserBalance","_x98","_x99","_x100","_x101","getIdleTokenSupply","_ref84","_callee55","idleTokenSupply","_args55","_context55","_x102","getIdleTokenPriceWithFee","_ref85","_callee56","_ref86","_ref87","priceWFee","_args56","_context56","eq","_x103","_x104","_ref88","_callee57","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args57","_context57","_x105","clearCachedData","useLocalStorage","_ref89","_callee58","_ref90","_ref91","idleTokensTotalSupply","userShare","_context58","_x106","_x107","_callee60","_args60","_context60","_ref93","_callee59","coverageTokens","protocolImage","_context59","_x108","_ref94","_callee61","etherscanEndpoint","_context61","_x109","_callee63","filter_by_status","_args63","_context63","_ref96","_callee62","_ref97","_ref98","_context62","_x110","_ref99","_callee64","fixDecimals","_args64","_context64","_x111","_ref100","_callee65","_ref101","_ref102","_args65","_context65","_x112","_x113","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","attr","isValidJSON","checkAddress","getTokenTotalSupply","_ref103","_callee66","_args66","_context66","_x114","_ref104","_callee67","_args67","_context67","_x115","_x116","getProtocolBalance","_ref105","_callee68","_context68","_x117","_x118","getAprs","_ref106","_callee69","_context69","addresses","_x119","genericIdleCall","_ref107","_callee70","callParams","_args70","_context70","_x120","_ref108","_callee71","_contract$methods4","_args71","_context71","_x121","_x122","getTxDecodedLogs","_ref109","_callee73","logAddr","decodeLogs","internalTransfers","_context73","_ref110","_callee72","_context72","_x127","_x128","_x123","_x124","_x125","_x126","blocksToSeconds","blocks","blocksPerSeconds","getBlockNumber","_callee74","_context74","getContractPastEvents","_ref112","_callee75","_args75","_context75","getPastEvents","_x129","_x130","_ref113","_callee76","_contract$methods5","_args76","_context76","_x131","_x132","_ref114","_callee77","_args77","_context77","_x133","_x134","apr2apy","getUnlentBalance","_ref115","_callee78","unlentBalance","_context78","_x135","_ref116","_callee79","_args79","_context79","_x136","_ref117","_callee81","protocolsAprs","exchangeRates","protocolsBalances","govTokensBalances","_args81","_context81","totalAllocationConverted","totalAllocationWithUnlentConverted","_ref118","_callee80","_ref119","_ref120","protocolBalance","protocolAllocation","_context80","_x138","_x139","protocolAllocationPerc","getGovTokensBalances","total","getTokenConversionRate","_x137","getUniswapConversionRate_path","_ref121","_callee82","unires","_context82","_x140","_ref122","_callee83","pairAddresses","_ref123","_ref124","token0_address","token1_address","poolReserves","totalSupply","token0_config","token1_config","_ref125","_ref126","token0_price","token1_price","token0_pool","token1_pool","totalPoolSize","_context83","_x141","_x142","_ref127","_callee84","tokenConfigFrom","tokenConfigDest","WETHAddr","_context84","_x143","_x144","_ref128","_callee85","_context85","_x145","_x146","getCurveDepositedTokens","_ref129","_callee86","idleTokensBalances","remainingCurveTokens","_args86","_context86","_x147","getCurveUnevenTokenAmounts","_ref130","_callee87","amounts","max_burn_amount","unevenAmounts","_context87","getCurveDepositContract","_x148","_x149","_callee88","curveRatesInfo","_context88","strategyTokens","getCurveAPYContract","_callee89","blocksForPrevTokenPrice","_ref133","_ref134","prevTokenPrice","blocksMultiplier","curveAPR","_context89","getCurveTokenSupply","_callee90","_context90","getCurvePoolContract","_callee91","_args91","_context91","_callee92","_args92","_context92","_ref138","_callee93","_ref139","_ref140","_context93","_x150","_callee94","depositContractInfo","_context94","getCurveZapContract","_callee95","zapContractInfo","_context95","_callee96","poolContractInfo","_context96","getCurveSwapContract","_callee97","_context97","getCurveIdleTokensAmounts","_callee99","max_slippage","curveTokenSupply","curveTokenShare","_args99","_context99","_ref146","_callee98","curveIdleTokens","_context98","_x151","getCurveTokensAmounts","_callee101","useCoinIndex","_args101","_context101","_ref148","_callee100","_ref149","_ref150","totalTokenSupply","_context100","_x152","getCurveAmounts","_ref151","_callee103","_args103","_context103","_ref152","_callee102","_context102","_x155","_x153","_x154","getCurveTokenAmount","_ref153","_callee104","_args104","_context104","_x156","getCurveSlippage","_ref154","_callee105","uneven_amounts","_ref155","_ref156","virtualPrice","Sv","_args105","_context105","_x157","_x158","_ref157","_callee106","aTokenIdleSupply","annualize","aaveDistribution","stkAAVETokenConfig","aTokenConfig","aaveIncentivesController_address","IAaveIncentivesController_name","_ref158","_ref159","aTokenTotalSupply","aaveAllocationPerc","aaveSpeed","aavePoolShare","_args106","_context106","_x159","_callee108","_args108","_context108","_ref161","_callee107","_ref162","_ref163","_context107","_x160","getStkAaveApr","_ref164","_callee109","aaveConversionRate","stkAaveAPR","stkAaveValue","_args109","_context109","_x161","_x162","getCompAPR","_ref165","_callee110","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args110","_context110","_x163","_x164","getCompSpeed","_ref166","_callee111","cTokenAddress","compSpeed","_context111","_x165","_ref167","_callee112","cTokenInfo","compoundAllocationPerc","_ref168","_ref169","cTokenTotalSupply","compoundPoolShare","_args112","_context112","_x166","_callee114","_args114","_context114","_ref171","_callee113","_ref172","_ref173","_context113","_x167","_callee116","_args116","_context116","_ref175","_callee115","_ref176","_ref177","compApr","_context115","_x168","getTokensCsv","_callee119","csv","_context119","prototype","sum","pv","cv","avg","_ref179","_callee118","_context118","_ref180","_callee117","header","aprAvg","scoreAvg","lastRow","_context117","protocolsData","p1","foundProtocol","p2","rate","idleRate","score","idleScore","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","_x170","_x169","_callee121","_args121","_context121","_ref182","_callee120","compTokenBalance","_context120","_x171","getTokenGovTokens","speed","multipliers","block","second","month","year","getGovTokensUserDistributionSpeed","_ref183","_callee123","govTokensUserDistribution","_args123","_context123","_ref184","_callee122","_context122","_x173","_x172","getGovTokensDistributionSpeed","_ref185","_callee125","govTokensDistribution","tokenGovTokens","_args125","_context125","_ref186","_callee124","govSpeed","_context124","_x175","_x174","getGovTokensAprs","_ref187","_callee127","govTokensAprs","_args127","_context127","_ref188","_callee126","_ref189","_ref190","_ref191","_ref192","cTokenConfig","_context126","_x178","_x176","_x177","_callee129","_args129","_context129","_ref194","_callee128","tokenConversionRate","fromTokenConfig","_context128","_x179","getGovTokenConfigByAddress","_callee130","checkShowBalance","govTokensEarnings","_args130","_context130","govTokenAmount","getGovTokensIndexes","_ref196","_callee132","govTokensAmounts","_context132","_ref197","_callee131","govTokenIndex","govTokenAddress","_context131","_x182","_x183","_x180","_x181","_callee135","govTokenConfigForced","_args135","_context135","_ref199","_callee134","idleTokenConfig","_context134","_ref200","_callee133","_context133","_x185","_x186","_x184","getTokenFees","_callee136","_args136","_context136","_callee137","_ref203","_ref204","gain","fees","_args137","_context137","_ref205","_callee138","_args138","_context138","_x187","getTotalTVL","_callee139","tokensTVL","_context139","getTokensTVL","totalTVL","tokenTVL","_callee143","_context143","_ref208","_callee142","_context142","_ref209","_callee141","oldTokenTVL","idleTokenName","_ref210","_ref211","oldTokenConfig","_ref215","_ref216","oldTokenPrice","oldTotalSupply","_context141","_ref212","_callee140","_ref213","_ref214","govTokenConversionRate","govTokenBalanceConverted","_context140","_x190","oldProtocols","oldProtocol","protocolPos","_x189","_x188","getSubstackLatestFeed","_callee144","endpointInfo","idleSubstackFeed","latestFeed","_context144","items","getAggregatedStats","_callee145","totalAUM","_args145","_context145","getAggregatedStats_chain","_callee149","avgAPR","_args149","_context149","_ref220","_callee148","_context148","_ref221","_callee147","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context147","_ref222","_callee146","_ref223","_ref224","_context146","_x193","_x192","_x191","getTokenApy","_ref225","_callee150","_context150","_x194","_callee153","_args153","_context153","_ref227","_callee152","_context152","_ref228","_callee151","_ref229","_context151","_x196","_x195","getProtocolsTokensBalances","_callee155","tokenBalances","minTokenBalance","protocolsTokens","_args155","_context155","_ref231","_callee154","tokenContract","_context154","_x197","_ref232","_callee156","_args156","_context156","_x198","_x199","_x200","getAvgAPYStats","_ref233","_callee157","apiResults","_args157","_context157","_x201","_x202","_ref234","_callee158","_conversionRate","_args158","_context158","_x203","_x204","_ref235","_callee159","_ref236","_ref237","_context159","protocolScore","getTokenScoreApi","_x205","_x206","_ref238","_callee160","_context160","_x207","_x208","_ref239","_callee163","Aprs","protocolsApys","idleGovTokenShowAPR","idleAPR","_args163","_context163","_ref240","_callee162","addrIndex","protocolApr","protocolApy","govTokenAPR","_context162","_ref241","_callee161","_context161","_x212","_x210","_x211","_x209","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","mouseOver","isVisible","isRainbow","active","onMouseOut","setMouseOver","onMouseOver","Tos","h2","listStyle","Footer","theme_dark","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","possibleConstructorReturn","getPrototypeOf","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","close","WalletConnectConnector","WalletConnectProvider","infuraId","defaultNetwork","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","REACT_APP_INFURA_KEY","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","WrongNetworkBanner","current","NetworkUtil","isCorrectNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","bold","isOpen","ModalCard","closeFunc","closeModal","Body","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","Header","subtitle","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","walletProvider","connectionCallback","unsetConnector","isMetamask","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","connectorInfo","walletIcon","ConnectionModal","validated","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","componentDidUpdate","resetModal","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","pattern","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","INFURA_KEY","RimbleTransactionContext","createContext","web3Infura","permitClient","accountBalance","initWeb3","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","accountInizialized","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","tokenChanged","availableStrategiesChanged","metamaskProvider","connectorNameChanged","web3Host","web3Provider","forceCallback","terminalInfo","TerminalHttpProviderParams","terminalSourceType","terminalHttpProvider","web3Callback","originalWeb3","biconomyWeb3Provider","detectEthereumProvider","autoRefreshOnNetworkChange","Web3","HttpProvider","library","SourceType","customHttpProvider","TerminalHttpProvider","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","$crisp","notificationId","content","Sentry","increaseAmount","_ref15","balanceOf","determineAccountLowBalance","openConnectionModal","getRequiredNetwork","getNetworkId","getNetworkName","getNetworkType","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","_args24","confirmationCount","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","constant","outputs","payable","stateMutability","anonymous","indexed","ERC20","govTokensDisabled","defiPrime","IdleTokenV4","cToken","yToken","iToken","CHAI","skipMintForDeposit","crToken","fToken","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","then","Dashboard","Governance","App","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","innerWidth","innerHeight","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","cachedKeyFound","storedCachedData","widthChanged","heightChanged","tabIndex","loadAvailableTokens","warn","jQuery","setThemeMode","closeIframe","w","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCustomAddress","strategyChanged","self","parent","hasMetamask","store","themeDark","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","RimbleWeb3","needsPreflight","react_router","react","fallback","isDashboard","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","ready","registration","unregister","FieldComponent","colInfo","colIndex","visible","fieldIndex","colProps","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","tokenApproved","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","useMetaTx","_skipRebalance","_migrationContract$me","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","footer","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","VariationNumber","IconDirection","iconSize","iconPos","loading-dots","loading-dots--dot","dot-keyframes","selectedProvider","availableProviders","renderPaymentMethod","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","goBack","componentWillMount","getProviderInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","providerSupportToken","defaultPaymentProvider","selectProvider","ethAvailable","tokenAvailable","selectMethod","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","countryCode","methodInfo","loadAvailableMethods","InnerComponent","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","noOptionsMessage","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","iconHeight","subtitleProps","BackButton","currYear","getFullYear","columnWidth","react__WEBPACK_IMPORTED_MODULE_9___default","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","role","aria-label","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","ColTitle","useIconOnly","fieldName","earningsCounter","feesStart","feesEnd","earningsCurveStart","earningsCurveEnd","tokenAPY2","tokenAPR","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","aprChartData","mDate","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","_args","amountToMigrate","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","poolSize","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","oldAPY","tokenAPYNoGov","allocationChartRowElement","$allocationChartRowElement","css","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","_d","add","random","aprChartRowElement","$aprChartRowElement","lineWidth","defs","linearGradientDef","offset","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_17__","protocolEarning","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","PerformanceChartRowElement","$PerformanceChartRowElement","blocknumber","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","fieldChanged","contractInitialized","loader","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","icon1","tooltipProps","icon2","strategyName","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","react_countup__WEBPACK_IMPORTED_MODULE_11___default","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_18__","earningsCurve","governanceTokenName","tooltipMode","buttonLabel","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_19__","formattedValue","_isBigNumber"],"mappings":"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","file":"static/js/main.f908c7c9.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import React from \"react\";\nimport { Text } from \"rimble-ui\";\n\nclass ShortHash extends React.Component {\n  shortenHash = hash => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, 7);\n    const txEnd = shortHash.substr(shortHash.length - 4);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  };\n  render() {\n    const shortHash = this.shortenHash(this.props.hash);\n\n    return <Text display={'inline'} {...this.props}>{shortHash}</Text>;\n  }\n}\n\nexport default ShortHash;\n","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from 'react';\nimport {\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner.js';\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n       <Button\n        onClick={this.props.handleClick}\n         {...this.props.buttonProps}\n       >\n        <Flex flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n          <Flex width={1} display={ this.props.isLoading ? 'flex' : 'none' }>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={ this.props.isLoading ? 'none' : 'flex' }>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n       </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          this.props.unit && unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          this.props.unit && unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.status = tx.status ? tx.status : 'Completed';\n      tx.action = action;\n      tx.momentDate = momentDate;\n      tx.amount = amount;\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(`https://etherscan.io/tx/${txHash}`) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontSize:3,\n      fontWeight:3,\n      height:'45px',\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    // debugger;\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #eee','1px solid #b6c2ff'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgba(0,54,255,0.3)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: blue.base,\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#3F3D4B',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    alert:'#ff9900',\n    arrowActive:'#4f4f4f',\n    arrowInactive:'#d8d8d8',\n    selectBgFocused:'#fbfbfb',\n    selectBg:'#ffffff',\n    backButtonBg:'#ffffff',\n    lineChartStroke:'#dbdbdb',\n    wrongNetworkBannerBg:'#ffffff',\n    dashboardBg: '#f9fafd',\n    statValue: '#959595',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a3a4a5',\n    cellText: '#a6a6a6',\n    divider: '#d8d8d8',\n    counter: '#5d5d5d',\n    redeem: '#00a9fe',\n    link:'#0036ff',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    menuBg:'#fff',\n    menuHover:'#f3f6ff',\n    cardBg:'#fff',\n    flashColor:'#3f4e9a',\n    menuRightBorder:'#eee',\n    cardHoverShadow:'0px 0px 0px 1px rgba(0, 54, 255, 0.3)',\n    cardBgHover:'#f7f8ff',\n    cardBorder:'#eee',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, '#AAA'),\n      backgroundColor: tint(0.9, '#AAA'),\n      borderColor: '#AAA',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: '#f3f6ff',\n      borderColor: '#b6c2ff',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      this.functionsUtil.customLog('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    let prediction = null;\n    if (this.state.predictTable){\n      this.state.predictTable.forEach((p,i) => {\n        if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n          prediction = p;\n          return true;\n        }\n      });\n    }\n\n    if (this.state.blockTime && prediction){\n      const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n      const blocksWait = pdValues[0];\n      const blockInterval = this.state.blockTime.block_time;\n      let txMeanSecs = blocksWait * blockInterval;\n      txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n      this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n      return txMeanSecs; // Customized\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              href={`https://etherscan.io/tx/${this.props.hash}`}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in Etherscan\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged){\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents(){\n    \n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p:2,\n          width:1,\n          style:{cursor:'pointer'}\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen){\n        cardProps.boxShadow = 4;\n      }\n      return (\n        <DashboardCard\n          isInteractive={true}\n          cardProps={cardProps}\n        >\n          <Flex\n            width={1}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps,{\n        mt:2,\n        zIndex:1,\n        boxShadow:null,\n        position:'absolute'\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable){\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput,this.props.themeMode==='dark' ? styles.dark : null,!props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map( o => o.value ).indexOf(selectedValue) === -1 && this.props.defaultValue){\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value){\n        return null;\n      }\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{cursor:'pointer'}}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={ props.isFocused ? 'selectBgFocused' : 'selectBg' }\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={ v => this.props.onChange(v.value) }\n        components={{\n            Menu: this.state.CustomMenu,\n            Option: this.state.CustomOption,\n            Control: this.state.ControlComponent,\n            Input: this.state.CustomInputContainer,\n            SingleValue: this.state.CustomValueContainer,\n            IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\nimport ShortHash from \"../utilities/components/ShortHash\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n    let bgColor = theme.colors.transactions.actionBg.default;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={`https://etherscan.io/tx/${transaction.hash}`}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n        const tokenSymbol = transaction.tokenSymbol.toUpperCase();\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        const iconSrc = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${tokenSymbol}.svg`;\n        output = (\n          <Image src={iconSrc} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{transaction.tokenSymbol.toUpperCase()}</Text>\n        );\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'legend'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (actionChanged || accountChanged || tokenBalanceChanged || contractChanged || tokenConfigChanged || approveEnabledChanged || permitEnabledChanged){\n      await this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.setState((prevState) => ({\n      inputValue\n    }),() => {\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log(this.props.tokenConfig.token,this.props.contractInfo.address);\n\n      this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    const callback = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveDeposit`,\n        eventValue: inputValue.toFixed(),\n        eventAction: this.props.tokenConfig.token,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        },false);\n        this.setState({\n          showPermitBox:false\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const contractName = this.props.contractInfo.name;\n\n    let params = null;\n\n    // Check contract approved without permit\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, contractName);\n      console.log('signedParameters',signedParameters);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      params = this.props.getTransactionParams(_amount);\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      return true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n\n    const contractInfo = await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n    if (contractInfo){\n      const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n      return contractApproved;\n    }\n    \n    return false;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const contractApproved = await this.checkContractApproved();\n    this.setState({\n      inputValue,\n      contractApproved,\n      fastBalanceSelector\n    });\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              <Box\n                mt={2}\n                width={1}\n              >\n                {\n                  this.state.showPermitBox && this.props.permitEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:3,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                    <Flex\n                      p={2}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                      backgroundColor={'DashboardCard'}\n                      border={`1px solid ${this.props.theme.colors.primary}`}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Permit signature?\n                      </Link>\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        name={'Warning'}\n                        color={'primary'}\n                      />\n                    </Flex>\n                  )\n                }\n              </Box>\n              {\n                !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        web3={this.props.web3}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.props.approveDescription}\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:3,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      web3={this.props.web3}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                              >\n                                {this.props.balanceSelectorInfo.text}\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled\n                          }}\n                          handleClick={this.executeTx.bind(this)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass Staking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      },() => {\n        this.updateData();\n      });\n    } else {\n      const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n      const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n      if (selectedActionChanged || contractApprovedChanged){\n        this.setState({\n          tokenWrapperProps:null,\n          showTokenWrapperEnabled:false\n        },() => {\n          this.updateData(selectedActionChanged);\n        });\n      }\n    }\n\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.state.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.state.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.state.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.state.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.state.contractInfo.name,'unstakeQuery',[normalizedInputValue],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.state.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.state.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.state.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n    /*\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Stake':\n        break;\n        case 'Withdraw':\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      inputValue,\n      balanceSelectorInfo\n    });\n    */\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.state.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.state.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.state.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.state.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.contractInfo.rewardToken]);\n\n    const [\n      poolTokenPrice,\n      rewardTokenPrice,\n      tokenBalance,\n      stakedBalance,\n    ] = await Promise.all([\n      this.functionsUtil.getSushiswapPoolTokenPrice(this.state.selectedToken),\n      this.functionsUtil.getSushiswapConversionRate(DAITokenConfig,rewardTokenConfig),\n      this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.state.contractInfo.name,'totalStakedFor',[this.props.account]),\n    ]);\n\n    newState.balanceProp = this.functionsUtil.BNify(0);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n    newState.stakedBalance = !this.functionsUtil.BNify(stakedBalance).isNaN() ? this.functionsUtil.BNify(stakedBalance) : this.functionsUtil.BNify(0);\n    newState.poolTokenPrice = !this.functionsUtil.BNify(poolTokenPrice).isNaN() ? this.functionsUtil.BNify(poolTokenPrice) : this.functionsUtil.BNify(0);\n    newState.rewardTokenPrice = !this.functionsUtil.BNify(rewardTokenPrice).isNaN() ? this.functionsUtil.BNify(rewardTokenPrice) : this.functionsUtil.BNify(0);\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.state.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.state.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.state.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    // console.log('updateData',this.state.selectedAction,newState);\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedAction = 'Stake';\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      selectedAction,\n      availableTokens\n    });\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.state.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.state.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.state.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.state.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.state.contractInfo.name,'unstakeQuery',[this.functionsUtil.integerValue(this.state.stakedBalance)],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.state.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.state.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.state.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.state.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.state.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.state.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.state.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.state.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.state.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },parseInt(Date.now()/1000)) : null;\n\n    const programDuration = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programDuration\n    });\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      if (this.functionsUtil.BNify(s.initialLockedShares).gt(0) && this.functionsUtil.BNify(s.durationSec).gt(0)){\n        const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.state.contractInfo.decimals).div(s.durationSec);\n        if (!tokensPerSecond.isNaN()){\n          distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n        }\n      }\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.state.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.state.tokenConfig.decimals);\n    const stakingShare = stakedBalance.div(totalDeposits); // accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.state.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.state.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.state.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.state.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    // globalStats.push({\n    //   title:'Distribution rate',\n    //   description:'Your daily rewards distribution based on your current multiplier',\n    //   value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.state.contractInfo.rewardToken+' / day',\n    // });\n\n    const stakedBalanceUSD = stakedBalance.times(this.state.poolTokenPrice);\n    const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n    const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n    // console.log(parseFloat(this.state.stakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n\n    globalStats.push({\n      title:'APY',\n      value:`${apy.toFixed(2)}%`,\n      description:'Annualized rewards based on your current multiplier',\n    });\n\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:'Multiplier',\n      value:`${rewardMultiplier.toFixed(2)}x`,\n      description:`Deposit liquidity tokens for ${this.state.contractInfo.maxBonusDays} days to achieve a ${this.state.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.state.tokenConfig.decimals));\n    globalStats.push({\n      title:'Rewards',\n      value:currentRewards+' '+this.state.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    // console.log('loadStats',stats,globalStats);\n    const statsLoaded = true;\n\n    this.setState({\n      stats,\n      statsLoaded,\n      globalStats,\n      stakingShare,\n      totalRewards,\n      accountingData,\n      rewardMultiplier,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed,\n      distributionSpeedMultiplier\n    });\n  }\n\n  toggleShowTokenWrapper = showTokenWrapperEnabled => {\n    this.setState({\n      showTokenWrapperEnabled\n    });\n  }\n\n  selectToken(selectedOption){\n    const selectedToken = selectedOption.value;\n    this.setState({\n      selectedToken,\n      selectedOption\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.tokenConfig && this.state.tokenConfig.poolLink && (\n                        <Box\n                          mt={2}\n                          width={1}\n                        >\n                          <Text\n                            mb={1}\n                          >\n                            Pool link:\n                          </Text>\n                          <ExtLink\n                            mt={1}\n                            color={'link'}\n                            hoverColor={'link'}\n                            href={this.state.tokenConfig.poolLink}\n                          >\n                            <Text\n                              color={'link'}\n                              style={{\n                                maxWidth:'100%',\n                                overflow:'hidden',\n                                whiteSpace:'nowrap',\n                                textOverflow:'ellipsis'\n                              }}\n                            >\n                              {this.state.tokenConfig.poolLink}\n                            </Text>\n                          </ExtLink>\n                        </Box>\n                      )\n                    }\n                    {\n                      this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n                        <Box\n                          mt={2}\n                          width={1}\n                        >\n                          <Text\n                            mb={1}\n                          >\n                            Your Stats:\n                          </Text>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            {\n                              this.state.globalStats.map( (statInfo,index) =>\n                                <StatsCard\n                                  key={`globalStats_${index}`}\n                                  cardProps={{\n                                    mb:[2,0],\n                                    mr:[0,index<this.state.globalStats.length-1 ? 1 : 0],\n                                    width:[1,'100%']\n                                  }}\n                                  textProps={{\n                                    fontSize:[1,2]\n                                  }}\n                                  {...statInfo}\n                                />\n                              )\n                            }\n                          </Flex>\n                        </Box>\n                      )\n                    }\n                    {\n                      this.state.selectedToken && (\n                        <Box\n                          mt={2}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isStake ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Stake'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              // subcaption={'stake LP Tokens'}\n                              imageProps={{\n                                mb:[0,2],\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isStake}\n                              handleClick={ e => this.setAction('Stake') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isUnstake ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Withdraw'}\n                              imageSrc={'images/upload.svg'}\n                              isMobile={this.props.isMobile}\n                              // subcaption={'withdraw LP tokens'}\n                              imageProps={{\n                                mb:[0,2],\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isUnstake}\n                              handleClick={ e => this.setAction('Withdraw') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isStats ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Stats'}\n                              imageSrc={'images/stats.svg'}\n                              // subcaption={'view some stats'}\n                              isMobile={this.props.isMobile}\n                              imageProps={{\n                                mb:[0,2],\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isStats}\n                              handleClick={ e => this.setAction('Stats') }\n                            />\n                          </Flex>\n                          {\n                            /*\n                            this.state.tokenWrapperProps && (\n                              <Flex\n                                mt={1}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                mb={this.state.showTokenWrapperEnabled ? 0 : 3}\n                              >\n                                <DashboardCard\n                                  cardProps={{\n                                    py:3,\n                                    px:2,\n                                    pb:2,\n                                    display:'flex',\n                                    alignItems:'center',\n                                    flexDirection:'column',\n                                    justifyContent:'center',\n                                  }}\n                                >\n                                  <Flex\n                                    alignItems={'center'}\n                                    justifyContent={'row'}\n                                  >\n                                    <Checkbox\n                                      required={false}\n                                      checked={this.state.showTokenWrapperEnabled}\n                                      onChange={ e => this.toggleShowTokenWrapper(e.target.checked) }\n                                      label={ isStake ? `Convert your ${this.state.tokenWrapperProps.startContract.token} to ${this.state.tokenWrapperProps.destContract.token}` : `Convert your ${this.state.tokenWrapperProps.destContract.token} to ${this.state.tokenWrapperProps.startContract.token}`}\n                                    />\n                                  </Flex>\n                                </DashboardCard>\n                              </Flex>\n                            )\n                            */\n                          }\n                          {\n                            (isStake || isUnstake) ?\n                              /*\n                              this.state.showTokenWrapperEnabled && this.state.tokenWrapperProps ? (\n                                <TokenWrapper\n                                  {...this.props}\n                                  fullWidth={true}\n                                  action={ isStake ? 'wrap' : 'unwrap' }\n                                  toolProps={this.state.tokenWrapperProps}\n                                />\n                              ) :\n                              */\n                              (this.state.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.state.contractInfo ? (\n                                <Box\n                                  mt={1}\n                                  width={1}\n                                  mb={[4,3]}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={txAction}\n                                    error={this.state.error}\n                                    steps={this.state.steps}\n                                    infoBox={this.state.infoBox}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.balanceProp}\n                                    contractInfo={this.state.contractInfo}\n                                    permitEnabled={this.state.permitEnabled}\n                                    approveEnabled={this.state.approveEnabled}\n                                    callback={this.transactionSucceeded.bind(this)}\n                                    approveDescription={this.state.approveDescription}\n                                    contractApproved={this.contractApproved.bind(this)}\n                                    balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                    changeInputCallback={this.changeInputCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                          size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                        />\n                                        <Text\n                                          mt={1}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          {\n                                            isStake ? (\n                                              `You don't have any ${this.state.selectedToken} in your wallet.`\n                                            ) : isUnstake && (\n                                              `You don't have any staked ${this.state.selectedToken} to withdraw.`\n                                            )\n                                          }\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Box>\n                              ) : (\n                                <Flex\n                                  mt={3}\n                                  mb={3}\n                                  width={1}\n                                >\n                                  <FlexLoader\n                                    flexProps={{\n                                      flexDirection:'row'\n                                    }}\n                                    loaderProps={{\n                                      size:'30px'\n                                    }}\n                                    textProps={{\n                                      ml:2\n                                    }}\n                                    text={'Loading info...'}\n                                  />\n                                </Flex>\n                              )\n                            ) : isStats && (\n                              <Flex\n                                mt={1}\n                                mb={3}\n                                width={1}\n                                style={{\n                                  flexWrap:'wrap'\n                                }}\n                                justifyContent={'space-between'}\n                              >\n                                {\n                                  (!this.state.stats || !this.state.stats.length) ? (\n                                    <Flex\n                                      mt={3}\n                                      mb={3}\n                                      width={1}\n                                    >\n                                      <FlexLoader\n                                        flexProps={{\n                                          flexDirection:'row'\n                                        }}\n                                        loaderProps={{\n                                          size:'30px'\n                                        }}\n                                        textProps={{\n                                          ml:2\n                                        }}\n                                        text={'Loading stats...'}\n                                      />\n                                    </Flex>\n                                  ) : this.state.stats.map( (statInfo,index) =>\n                                    <StatsCard\n                                      key={`stats_${index}`}\n                                      cardProps={{\n                                        width:[1,'49%']\n                                      }}\n                                      {...statInfo}\n                                    />\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport { Flex, Box, Text, Input, Link, Progress } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    steps:{\n      1:'Get Quote',\n      2:'Enable NXS',\n      3:'Buy Cover'\n    },\n    loading:false,\n    amountValue:'',\n    periodValue:'',\n    quoteResponse:null,\n    selectedToken:'DAI'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async changeSelectedToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    this.setState({\n      amountValue\n    });\n  }\n\n  changePeriod = (e) => {\n\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    this.setState({\n      periodValue\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    let quoteResponse = await this.functionsUtil.makeRequest(`https://api.nexusmutual.io/getQuote/${this.state.amountValue}/${this.state.selectedToken}/${this.state.periodValue}/0x78751B12Da02728F467A44eAc40F5cbc16Bd7934/M1`);\n\n    const newState = {\n      loading:false\n    };\n\n    if (quoteResponse){\n      newState.quoteResponse = quoteResponse.data;\n    }\n\n    this.setState({\n      quoteResponse\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Flex\n            mb={1}\n            width={1}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n          >\n            {\n              Object.keys(this.state.steps).map( stepIndex => (\n                <Link\n                  style={{\n                    flexBasis:'0',\n                    flex:'1 1 0px',\n                    textDecoration:'none',\n                    cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                  }}\n                  fontSize={2}\n                  textAlign={'center'}\n                  key={`step_${stepIndex}`}\n                  color={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                  hoverColor={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                  activeColor={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                >\n                  {this.state.steps[stepIndex]}\n                </Link>\n              ) )\n            }\n          </Flex>\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Progress\n              style={{\n                width:'100%',\n                height:'15px'\n              }}\n              value={(1/Object.keys(this.state.steps).length)*this.state.step}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}>\n              Select asset:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              selectedToken={this.state.selectedToken}\n              onChange={this.changeSelectedToken.bind(this)}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              How much do you want to cover?\n            </Text>\n            <Input\n              min={0}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              boxShadow={'none !important'}\n              value={this.state.amountValue}\n              onChange={this.changeAmount.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n              placeholder={`Insert ${this.state.selectedToken.toUpperCase()} amount`}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              For how many days?\n            </Text>\n            <Input\n              min={0}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              boxShadow={'none !important'}\n              value={this.state.periodValue}\n              placeholder={'Insert days of coverage'}\n              onChange={this.changePeriod.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n            />\n          </Box>\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <ButtonLoader\n              buttonProps={{\n                my:2,\n                mx:[0, 2],\n                size:'medium',\n                borderRadius:4,\n                mainColor:'blue',\n                disabled:(!this.state.amountValue || !this.state.selectedToken || !this.state.periodValue)\n              }}\n              buttonText={'GET QUOTE'}\n              isLoading={this.state.loading}\n              handleClick={ e => this.getQuote(e) }\n            />\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport { Text, Icon, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = this.functionsUtil.BNify(customValue).toString();\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue){\n      return null;\n    }\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : null;\n  }\n}\n\nexport default CustomField;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.props.rows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n          value:Math.round(tokenPercentage),\n          color:'hsl('+tokenColorHsl+')'\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsTextColor:'#333',\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken,'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = portfolio.totalAmountLent.times(portfolio.avgAPY.div(100));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let tokensEarnings = {};\n    let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n      estimationStepsPerc = Math.max(estimationStepsPerc,maxPossibleStep);\n\n      // console.log(token,amountLent.toFixed(5),earnings.toFixed(5),earningsYear.toFixed(5),tokenConfig,tokenAprs,tokenAPR.toFixed(5),tokenAPY.toFixed(5),earningsPercStep,maxPossibleStep,estimationStepsPerc);\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    // console.log(estimationStepsOptions,estimationStepsDefaultOption)\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings)));\n            const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon :`images/tokens/${token}.svg`;\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={tokenIcon} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\nimport CustomList from '../CustomList/CustomList';\n// import RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    activeCoverages:null,\n    depositedTokens:null,\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n\n    if (this.state.portfolioLoaded){\n      return false;\n    }\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load data\n      const [\n        activeCoverages,\n        batchedDeposits,\n        tokensToMigrate,\n        portfolio\n      ] = await Promise.all([\n        // Load active coverages\n        this.functionsUtil.getActiveCoverages(this.props.account),\n        // Load claimable batches\n        this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load tokens to be migrated\n        this.functionsUtil.getTokensToMigrate(this.props.selectedStrategy),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n        // Load and process Etherscan Txs\n        this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.activeCoverages = activeCoverages && activeCoverages.length>0 ? activeCoverages.map( c => {\n        const statusColors = this.props.theme.colors.transactions.status;\n        const statusIcon = c.status === 'Expired' ? 'Error' : 'VerifiedUser';\n        const statusColor = c.status === 'Expired' ? statusColors.failed : statusColors.completed;\n        const portfolioCoverage = portfolio.totalBalance.gt(0) ? c.balance.div(portfolio.totalBalance).times(100).toFixed(2)+'%' : 'N/A';\n        const statusIconProps = {\n          color:statusColor\n        };\n        return Object.assign(c,{\n          statusIcon,\n          statusIconProps,\n          portfolioCoverage\n        });\n      }) : null;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n        let totalBalanceWithScore = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenBalance = portfolio.tokensBalance[token].tokenBalance;\n          const tokenWeight = tokenBalance.div(portfolio.totalBalance);\n          const tokenAPY = tokenAprs.avgApy && !this.functionsUtil.BNify(tokenAprs.avgApy).isNaN() ? this.functionsUtil.BNify(tokenAprs.avgApy) : this.functionsUtil.BNify(0);\n\n          if (!tokenAPY.isNaN()){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          if (!tokenScore.isNaN() && tokenScore.gt(0)){\n            avgScore = avgScore.plus(tokenScore.times(tokenBalance));\n            totalBalanceWithScore = totalBalanceWithScore.plus(tokenBalance);\n          }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        avgScore = avgScore.div(totalBalanceWithScore);\n\n        // console.log('avgAPY',avgAPY.toFixed());\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        newState.avgScore = avgScore;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.tokensToMigrate = tokensToMigrate;\n      newState.portfolioLoaded = true;\n\n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const riskScore = this.functionsUtil.getGlobalConfig(['messages','riskScore']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const coverProtocolConfig = this.functionsUtil.getGlobalConfig(['tools','coverProtocol']);\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])} strategy\n        </Title>\n        {\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={4}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgScore ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgScore.toFixed(2) }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg Risk Score\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                /*\n                !this.state.activeCoverages && coverProtocolConfig.enabled && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    mt={[3,4]}\n                    alignItems={'center'}\n                    id={'no-active-cover'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:[3,4],\n                        width:[1,'auto'],\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Image\n                          mb={2}\n                          height={['1.8em','2.2em']}\n                          src={coverProtocolConfig.image}\n                        />\n                        <Text\n                          mb={1}\n                          fontSize={[2,4]}\n                          fontWeight={500}\n                          textAlign={'center'}\n                        >\n                          You don't have an active coverage\n                        </Text>\n                        <Text\n                          mb={2}\n                          color={'blue'}\n                          fontSize={[1,2]}\n                          fontWeight={500}\n                          hoverColor={'blue'}\n                          textAlign={'center'}\n                        >\n                          Cover Protocol provides coverage against Smart-Contract attacks\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:1,\n                            width:'auto',\n                            minHeight:'40px',\n                            mainColor:'redeem',\n                            size:this.props.isMobile ? 'small' : 'medium'\n                          }}\n                          handleClick={ e => this.props.goToSection(`tools/${coverProtocolConfig.route}`) }\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              color={'white'}\n                              fontSize={[1,2]}\n                              fontWeight={500}\n                            >\n                              Get Covered\n                            </Text>\n                            <Icon\n                              ml={1}\n                              size={'1.3em'}\n                              name={'KeyboardArrowRight'}\n                            />\n                          </Flex>\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                )\n                */\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.29,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:false,\n                            props:{\n                              width:[0.12,0.09],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.10],\n                            },\n                            parentProps:{\n                              alignItems:['center','flex-start'],\n                            },\n                            fields:[\n                              {\n                                name:'score',\n                              }\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.13],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.13],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.10],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,this.state.depositedTokens.length>0 ? 0.14 : 0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.22,0.10],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                !viewOnly && this.props.account && coverProtocolConfig.enabled && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','coverProtocol','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              width={[1,1/3]}\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(govTokens).filter( govToken => govTokens[govToken].enabled )}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.activeCoverages && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Coverages</Title>\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <CustomList\n                        rows={this.state.activeCoverages}\n                        handleClick={ this.props.isMobile ? (props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl) : null }\n                        cols={[\n                          {\n                            title:'PROTOCOL',\n                            props:{\n                              width:[0.42,0.17]\n                            },\n                            fields:[\n                              {\n                                type:'image',\n                                path:['protocolImage'],\n                                props:{\n                                  mr:[1,2],\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                type:'text',\n                                path:['protocolName'],\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            props:{\n                              width:[0.34, 0.15],\n                            },\n                            fields:[\n                              {\n                                type:'number',\n                                path:['balance'],\n                                props:{\n                                  decimals: 4,\n                                }\n                              },\n                              {\n                                type:'text',\n                                path:['token'],\n                                props:{\n                                  ml:[1,2],\n                                  style:{\n                                    textTransform:'uppercase'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EXPIRATION DATE',\n                            props:{\n                              width:0.23,\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'text',\n                                path:['expirationDate'],\n                                props:{\n                                  \n                                }\n                              },\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'COVERAGE',\n                            props:{\n                              width:0.15,\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'text',\n                                path:['portfolioCoverage'],\n                                props:{\n                                  \n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.24,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:[1,2],\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                type:'button',\n                                name:'custom',\n                                label:'File Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.row.status==='Expired')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar web3={this.props.web3} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import Staking from '../Staking/Staking';\nimport IDLE from '../contracts/IDLE.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport COMP from '../abis/compound/COMP.json';\nimport aToken from '../abis/aave/AToken.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\nimport LpStaking from '../contracts/LpStaking.json';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from '../abis/curve/CurvePool.json';\nimport NexusMutual from '../NexusMutual/NexusMutual';\nimport CoverMint from '../abis/cover/CoverMint.json';\nimport LockedIDLE from '../contracts/LockedIDLE.json';\nimport { Web3Versions } from '@terminal-packages/sdk';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport PriceOracle from '../contracts/PriceOracle.json';\nimport FeeTreasury from '../contracts/FeeTreasury.json';\nimport IdleTokenV2 from '../contracts/IdleTokenV2.json';\nimport StrategyPage from '../StrategyPage/StrategyPage';\nimport BuyModal from '../utilities/components/BuyModal';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport BatchDeposit from '../BatchDeposit/BatchDeposit';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport erc20Forwarder from '../contracts/erc20Forwarder.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport SushiV2Router02 from '../abis/sushiswap/SushiV2Router02.json';\nimport IdleBatchConverter from '../contracts/IdleBatchConverter.json';\nimport UniswapV2Router02 from '../abis/uniswap/UniswapV2Router02.json';\nimport IdleDepositForwarder from '../contracts/IdleDepositForwarder.json';\nimport SushiLiquidityPool from '../abis/sushiswap/SushiLiquidityPool.json';\nimport BalancerExchangeProxy from '../abis/balancer/BalancerExchangeProxy.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: 'Idle',\n  version: 'v5.8',\n  baseToken: 'ETH',\n  baseURL: 'https://idle.finance',\n  forumURL:'https://gov.idle.finance',\n  theme:{\n    darkModeEnabled:true\n  },\n  betaURL: 'https://beta.idle.finance',\n  countries:{\n    'USA':'United States of America',\n    'GBR':'United Kingdom',\n    'AUS':'Australia',\n    'BRA':'Brazil',\n    'CHN':'China',\n    'CAN':'Canada',\n    'EUR':'Europe',\n    'HKG':'Hong Kong',\n    'IND':'India',\n    'MEX':'Mexico',\n    'RUS':'Russia',\n    'ZAF':'South Africa',\n    'KOR':'South Korea'\n  },\n  logs:{ // Enable logs levels\n    errorsEnabled:false,\n    messagesEnabled:false,\n  },\n  connectors:{ // Connectors props\n    metamask:{\n      enabled:true,\n      subcaption:'Browser extension'\n    },\n    opera:{\n      enabled:true,\n      subcaption:'Opera injected wallet'\n    },\n    dapper:{\n      enabled:true,\n      icon:'dapper.png',\n      subcaption:'Browser extension',\n    },\n    coinbase:{\n      enabled:true,\n      icon:'coinbase.png',\n      subcaption:'Connect with Coinbase wallet'\n    },\n    trustwallet:{\n      enabled:true,\n      subcaption:'Connect with Trust Wallet'\n    },\n    walletconnect:{\n      enabled:true,\n      iconModal:'walletconnect.png',\n      subcaption:'Connect with QR code'\n    },\n    walletlink:{\n      enabled:true,\n      icon:'coinbase.png',\n      name:'Coinbase Wallet',\n      subcaption:'Connect with QR code'\n    },\n    fortmatic:{\n      enabled:true,\n      subcaption:'Login with phone-number'\n    },\n    portis:{\n      enabled:true,\n      subcaption:'Login with e-mail'\n    },\n    authereum:{\n      enabled:true,\n      subcaption:'Cross-device wallet'\n    },\n    torus:{\n      enabled:true,\n      icon:'torus.png',\n      subcaption:'One-Click login for Web 3.0'\n    },\n    trezor:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    ledger:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    custom:{\n      enabled:true,\n      icon:'tokens/ETH.svg',\n      subcaption:'Custom address'\n    }\n  },\n  newsletterSubscription:{\n    endpoint:'https://dev.lapisgroup.it/idle/newsletter.php'\n  },\n  messages:{\n    scoreShort:'Protocol Risk Score',\n    apyShort:'Annual Percentage Yield',\n    tokenPrice:'The token price is calculated using Uniswap spot prices.',\n    cheapRedeem:'Amount of unlent funds available for low gas fees redeem',\n    curveBonusSlippage:'Slippage or bonus depending on if the coin is low or high in the Curve Pool',\n    distributionSpeed:'The distribution indicates the amount of tokens distributed for the entire pool.',\n    directMint:'Pay an additional gas fee to rebalance the pool and help all users gain an additional APR',\n    performanceFee:'This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE',\n    userDistributionSpeed:'The distribution indicates the amount of tokens distributed for your account based on your current pool share.',\n    govTokenApr:'Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.',\n    govTokenRedeemableBalance:'The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.',\n    riskScoreShort:'It\\'s a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.',\n    redeemSkipGov:'This feature allows you to save some gas by skipping the redeem of all or some of your accrued governance tokens, the skipped governance tokens will be given away to the entire pool',\n    batchDepositExecutionSchedule:'Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.',\n    apyLong:'APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.',\n    yieldFarming:'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\">Read more here</a>.',\n    riskScore:`It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions:`<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`\n  },\n  analytics:{\n    google:{\n      events:{\n        enabled:true, // Enable Google Analytics events\n        debugEnabled:false, // Enable sending for test environments\n        addPostfixForTestnet:true // Append testnet to eventCategory\n      }\n    }\n  },\n  modals:{ // Enable modals\n    first_deposit_referral:false, // Referral share modal\n    first_deposit_share:true, // First deposit share modal\n    migrate:{\n      enabled:true\n    },\n    welcome:{ // Welcome modal\n      enabled:true,\n      frequency:604800 // One week\n    }\n  },\n  dashboard:{\n    baseRoute:'/dashboard',\n    theme:{\n      mode:'light',\n      darkModeEnabled:true\n    },\n  },\n  governance:{\n    test:false,\n    enabled:true,\n    startBlock:11333729,\n    baseRoute:'/governance',\n    props:{\n      tokenName:'IDLE',\n      availableContracts:{\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    contracts:{\n      delegates:'IDLE',\n      governance:'GovernorAlpha',\n    }\n  },\n  curve:{\n    enabled:false,\n    params:{\n      n_coins:3,\n      label:'Curve',\n      route:'/dashboard/curve',\n      image:'images/protocols/curve.svg',\n      imageInactive:'images/protocols/curve-off.svg',\n    },\n    rates:{\n      path:['apy','day','idle'],\n      endpoint:'https://www.curve.fi/raw-stats/apys.json'\n    },\n    poolContract:{\n      decimals:18,\n      abi:CurvePool,\n      name:'idleDAI+idleUSDC+idleUSDT',\n      token:'idleDAI+idleUSDC+idleUSDT',\n      address:'0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05'\n    },\n    depositContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7'\n    },\n    gaugeContract:{\n      abi:LiquidityGaugeV2,\n      name:'LiquidityGaugeV2',\n      address:'0xd69ac8d9D25e99446171B5D0B3E4234dAd294890'\n    },\n    zapContract:{\n      abi:CurveZap,\n      name:'idleCurveZap',\n      address:'0x456974df1042ba7a46fd49512a8778ac3b840a21'\n    },\n    migrationContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7',\n      functions:[\n        {\n          label:'Deposit',\n          name:'add_liquidity'\n        },\n      ]\n    },\n    availableTokens:{\n      idleDAIYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'DAI',\n        token:'idleDAIYield',\n        address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:0\n        },\n      },\n      idleUSDCYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDC',\n        token:'idleUSDCYield',\n        address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:1\n        },\n      },\n      idleUSDTYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDT',\n        token:'idleUSDTYield',\n        address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:2\n        },\n      },\n    }\n  },\n  permit:{\n    DAI:{\n      version:1,\n      EIPVersion:null,\n      nonceMethod:'nonces',\n      name:'Dai Stablecoin',\n      type:[\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" },\n      ]\n    },\n    USDC:{\n      version:2,\n      name:'USD Coin',\n      EIPVersion:2612,\n      nonceMethod:'nonces',\n      type:[\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ]\n    },\n    SLP:{\n      version:1,\n      EIPVersion:2612,\n      nonceMethod:'nonces',\n      name:'SushiSwap LP Token',\n      type:[\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ]\n    }\n  },\n  govTokens:{\n    IDLE:{\n      abi:IDLE,\n      decimals:18,\n      token:'IDLE',\n      enabled:true,\n      showAUM:false, // Include IDLE balance in AUM\n      showAPR:false, // Include IDLE Apr\n      protocol:'idle',\n      showPrice:false, // Show price in Yield Farming section\n      showBalance:false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode:false,\n      distributionMode:'block',\n      distributionFrequency:'day', // Multiply distribution per block\n      color:'hsl(162, 100%, 41%)',\n      icon:'images/tokens/IDLE.png',\n      disabledTokens:['idleRAIYield'], // Disable IDLE distribution for idleToken\n      address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e' // MAIN\n      // address:'0xAB6Bdb5CCF38ECDa7A92d04E86f7c53Eb72833dF', // KOVAN\n      // address:'0xa85233C63b9Ee964Add6F2cffe00Fd84eb32338f' // Fork\n    },\n    COMP:{\n      abi:COMP,\n      decimals:18,\n      token:'COMP',\n      enabled:true,\n      showAUM:true, // Include IDLE balance in AUM\n      showAPR:true, // Include COMP Apr\n      showPrice:true,\n      showBalance:true, // Include COMP balance in Portfolio Donut\n      disabledTokens:[],\n      protocol:'compound',\n      aprTooltipMode:false,\n      distributionMode:'block',\n      distributionFrequency:'day',\n      color:'hsl(162, 100%, 41%)',\n      address:'0xc00e94cb662c3520282e6f5717214004a7f26888', // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    stkAAVE:{\n      abi:aToken,\n      decimals:18,\n      showAUM:true, // Include stkAAVE balance in AUM\n      showAPR:true, // Include stkAAVE Apr\n      enabled:false,\n      showPrice:true,\n      token:'stkAAVE',\n      showBalance:true, // Include stkAAVE balance in Portfolio Donut\n      protocol:'aavev2',\n      aprTooltipMode:false,\n      distributionMode:'second',\n      color:'hsl(314, 41%, 51%)',\n      distributionFrequency:'day',\n      disabledTokens:['idleTUSDYield','idleSUSDYield'],\n      address:'0x4da27a545c0c5b758a6ba100e3a049001de870f5', // MAIN\n      addressForPrice:'0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9', // MAIN\n    }\n  },\n  contracts:{\n    LockedIDLE:{\n      abi:LockedIDLE,\n      address:'0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n    },\n    FeeTreasury:{\n      abi:FeeTreasury,\n      address:'0x69a62c24f16d4914a48919613e8ee330641bcb94' // MAIN\n    },\n    PriceOracle:{\n      abi:PriceOracle,\n      address:'0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n      // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n    },\n    Timelock:{\n      abi:Timelock,\n      address:'0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n      // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n    },\n    EcosystemFund:{\n      abi:EcosystemFund,\n      address:'0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n      // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n    },\n    VesterFactory:{\n      abi:VesterFactory,\n      address:'0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n      // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n    },\n    IdleController:{\n      abi:IdleController,\n      address:'0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n      // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n    },\n    EarlyRewards:{\n        abi:EarlyRewards,\n        address:'0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n    },\n    GovernorAlpha:{\n      abi:GovernorAlpha,\n      address:'0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n      // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n    },\n    Comptroller:{\n      abi:Comptroller,\n      address:'0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n      // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n    },\n    SushiswapRouter:{\n      abi:SushiV2Router02,\n      address:'0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F'\n    },\n    UniswapRouter:{\n      abi:UniswapV2Router02,\n      address:'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n    },\n    BalancerExchangeProxy:{\n      abi:BalancerExchangeProxy,\n      address:'0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n    }\n  },\n  tokens:{\n    DAI:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n    USDC:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n  },\n  strategies:{\n    best:{\n      token:'DAI',\n      color:'#f32121',\n      comingSoon:false,\n      addGovTokens:true,\n      titlePostfix:null,\n      title:'Best-Yield',\n      iconName:'Whatshot',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(40,95%,59%)',\n      icon:'images/strategies/best-on.svg',\n      iconInactive:'images/strategies/best-off.svg',\n      iconInactiveDark:'images/strategies/best-white.svg',\n      desc:'Maximize your returns across DeFi protocols',\n      descLong:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.',\n      descShort:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.'\n    },\n    risk:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:false,\n      titlePostfix:null,\n      addGovTokens:true,\n      iconName:'Security',\n      title:'Risk-Adjusted',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/risk-on.svg',\n      iconInactive:'images/strategies/risk-off.svg',\n      iconInactiveDark:'images/strategies/risk-white.svg',\n      desc:'Optimize your risk exposure across DeFi protocols',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    },\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n  },\n  stats:{\n    enabled:true, // Enable endpoint\n    rates:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/rates/'\n    },\n    tvls:{\n      TTL:120,\n      endpoint:'https://api.idle.finance/tvls/'\n    },\n    substack:{\n      TTL:1800,\n      endpoint:'https://api.idle.finance/substack/'\n    },\n    scores:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/scores/'\n    },\n    config:{\n      headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {}\n    },\n    versions:{\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3:{\n        label:'Idle V3',\n        additionalProtocols:[],\n        endTimestamp:1597237542,\n        startTimestamp:1589801874,\n        showPerformanceTooltip:false,\n        strategiesParams:{\n          risk:{\n            endTimestamp:1597233922,\n          }\n        },\n        enabledStrategies:['best','risk'],\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n      },\n      v4:{\n        label:'Idle V4',\n        endTimestamp:null,\n        startTimestamp:1597442400, // 1598220000\n        enabledStrategies:['best','risk'],\n        showPerformanceTooltip:true,\n        strategiesParams:{\n          risk:{\n            startTimestamp:1599183170,\n          }\n        },\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH','RAI'],\n        additionalProtocols:[\n          {\n            decimals:16,\n            protocol:'compound',\n            name:'compoundWithCOMP',\n          },\n          {\n            decimals:18,\n            protocol:'aavev2',\n            name:'aavev2WithStkAAVE',\n          }\n        ]\n      }\n    },\n    tokens:{\n      DAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          rgb:[250,184,51],\n          hex:'#F7B24A',\n          hsl:['40', '95%', '59%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 2]\n        },\n        startTimestamp:'2020-02-11',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USD:{\n        enabled:true,\n        color:{\n          hex:'#85bb65',\n          rgb:[133, 187, 101],\n          hsl:['98', '39%', '56%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        address:null,\n        startTimestamp:'2020-02-04',\n      },\n      USDC:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#2875C8',\n          rgb:[40,117,200],\n          hsl:['211', '67%', '47%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USDT:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#22a079',\n          rgb:[34, 160, 121],\n          hsl:['161', '65%', '38%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      TUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'0340a1',\n          rgb:[3, 64, 161],\n          hsl:['217', '96%', '32%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n      },\n      SUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#1e1a31',\n          rgb:[30, 26, 49],\n          hsl:['250', '31%', '15%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n      },\n      WBTC:{\n        decimals:8,\n        enabled:true,\n        color:{\n          hex:'#eb9444',\n          rgb:[235, 148, 68],\n          hsl:['29', '81%', '59%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'wbtcDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      WETH:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#ee1f79',\n          rgb:[238, 31, 121],\n          hsl:['334', '86%', '53%']\n        },\n        startTimestamp:'2021-02-16',\n        conversionRateField:'wethDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      COMP:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#00d395',\n          rgb:[0, 211, 149],\n          hsl:['162', '100%', '41%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0xc00e94cb662c3520282e6f5717214004a7f26888',\n      },\n      stkAAVE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#B6509E',\n          rgb:[182, 80, 158],\n          hsl:['314', '41%', '51%']\n        },\n        startTimestamp:'2021-04-30',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x4da27a545c0c5b758a6ba100e3a049001de870f5',\n      },\n      IDLE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#0d55bb',\n          rgb:[13, 85, 187],\n          hsl:['215', '87%', '39%']\n        },\n        startTimestamp:'2020-11-10',\n        icon:'images/tokens/IDLE.png',\n        conversionRateField:'idleDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e',\n      },\n      RAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#378879',\n          rgb:[55, 136, 121],\n          hsl:['169', '42%', '37%']\n        },\n        startTimestamp:'2021-05-07',\n        icon:'images/tokens/RAI.png',\n        conversionRateField:'raiDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n      },\n      'idleDAI+idleUSDC+idleUSDT':{\n        decimals:18,\n        enabled:false,\n        name:'Curve.fi',\n        color:{\n          hex:'#ff0000',\n          rgb:[255, 0, 0],\n          hsl:['0', '100%', '50%']\n        },\n        startTimestamp:'2020-06-15',\n      },\n    },\n    protocols:{\n      compound:{\n        legend:true,\n        enabled:true,\n        label:'Compound',\n        color:{\n          rgb:[0, 209, 146],\n          hsl:['162', '100%', '41%']\n        }\n      },\n      aavev2WithStkAAVE:{\n        enabled:true,\n        label:'Aave V2 + stkAAVE',\n        startTimestamp:'2021-05-08',\n        rateField:['rate','aaveAdditionalAPR'],\n        color:{\n          hex:'#B6509E',\n          rgb:[182, 80, 158],\n          hsl:['314', '41%', '51%']\n        }\n      },\n      compoundWithCOMP:{\n        enabled:true,\n        rateField:['rate','compoundAdditionalAPR'],\n        label:'Compound + COMP',\n        color:{\n          rgb:[0, 153, 107],\n          hsl:['162', '100%', '30%']\n        }\n      },\n      fulcrum:{\n        legend:false,\n        enabled:false,\n        label:'Fulcrum',\n        color:{\n          rgb:[2, 138, 192],\n          hsl:['197', '98%', '38%']\n        }\n      },\n      dsr:{\n        label:'DSR',\n        enabled:false,\n        icon:'CHAI.png',\n        color:{\n          rgb:[222, 52, 67],\n          hsl:['355', '72%', '54%']\n        }\n      },\n      dydx:{\n        legend:true,\n        label:'DyDx',\n        enabled:true,\n        color:{\n          rgb:[87, 87, 90],\n          hsl:['240', '2%', '35%']\n        }\n      },\n      iearn:{\n        label:'Yearn',\n        enabled:true,\n      },\n      aave:{\n        label:'Aave V1',\n        legend:true,\n        enabled:true,\n        color:{\n          rgb:[230, 131, 206],\n          hsl:['315', '66%', '71%']\n        }\n      },\n      aavev2:{\n        legend:true,\n        enabled:true,\n        icon:'aave.svg',\n        label:'Aave V2',\n        color:{\n          rgb:[151, 79, 141],\n          hsl:['308', '31%', '45%']\n        }\n      },\n      cream:{\n        legend:true,\n        enabled:true,\n        label:'Cream',\n        icon:'cream.svg',\n        color:{\n          rgb:[105, 226, 220],\n          hsl:['177', '68%', '65%']\n        }\n      },\n      fuse:{\n        legend:true,\n        enabled:true,\n        label:'Fuse',\n        icon:'fuse.png',\n        color:{\n          rgb:[0, 0, 0],\n          hsl:['0', '0%', '0%']\n        }\n      },\n      curve:{\n        label:'',\n        enabled:true,\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      },\n      idle:{\n        label:'Idle',\n        enabled:true,\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      }\n    }\n  },\n  contract:{\n    methods:{\n      redeem:{\n        skipRebalance:true,\n        metaTransactionsEnabled:false\n      },\n      deposit:{\n        skipMint:true,\n        minAmountForMint:100000,\n        erc20ForwarderEnabled:true,\n        skipMintCheckboxEnabled:true,\n        metaTransactionsEnabled:false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract:{\n          forwarder:{\n            enabled:true,\n            abi:erc20Forwarder,\n            name:'erc20Forwarder',\n            function:'emitMessage',\n            address:'0x84a0856b038eaAd1cC7E297cF34A7e72685A8693', // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens:{\n            DAI:{\n              enabled:true,\n              permitType:'DAI_Permit',\n              abi:IdleDepositForwarder,\n              function:'permitAndDeposit', // foo\n              name:'IdleDepositForwarderDAI',\n              address:'0xDe3c769cCD1878372864375e9f89956806B86daA', // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC:{\n              enabled:true,\n              permitType:'USDC_Permit',\n              abi:IdleDepositForwarder,\n              name:'IdleDepositForwarderUSDC',\n              function:'permitEIP2612AndDeposit',\n              address:'0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761', // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            },\n          }\n        },\n        proxyContract:{\n          enabled:false,\n          abi:IdleProxyMinter,\n          name:'IdleProxyMinter',\n          function:'mintIdleTokensProxy',\n          address:'0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a',\n        }\n      },\n      migrate:{\n        skipRebalance:true,\n        minAmountForRebalance:10000,\n        minAmountForRebalanceMetaTx:10000\n      },\n      redeemGovTokens:{\n        enabled:true\n      },\n      redeemSkipGov:{\n        enabled:false\n      },\n      rebalance:{\n        enabled:true,\n        abi:IdleRebalancerV3\n      }\n    }\n  },\n  network:{ // Network configurations\n    availableNetworks:{\n      1:'Mainnet',\n      3:'Ropsten',\n      4:'Rinkeby',\n      42:'Kovan',\n      1337:'Hardhat'\n    },\n    isForked:false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork:1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear:2371428,\n    secondsPerYear:31536000,\n    firstBlockNumber:8119247,\n    requiredConfirmations: 1,\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers:{\n      infura:{\n        42: 'https://kovan.infura.io/v3/',\n        1: 'https://mainnet.infura.io/v3/',\n        1337: 'https://mainnet.infura.io/v3/'\n      },\n      etherscan:{\n        enabled:true, // False for empty txs list (try new wallet)\n        endpoints:{\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        }\n      },\n      snapshot:{\n        whitelist:[\n          '0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa',\n          '0xf12ce5807e3d3128B876aa1Cec0632D63547E22E'\n        ],\n        endpoints:{\n          proposals:'https://hub.snapshot.page/api/idlefinance.eth/proposals'\n        },\n        urls:{\n          proposals:'https://signal.idle.finance/#/idlefinance.eth/proposal/'\n        }\n      },\n      biconomy:{\n        enabled:false,\n        enableLogin:false,\n        supportedNetworks:[1,42],\n        disabledWallets:['authereum'],\n        endpoints:{\n          limits:'https://api.biconomy.io/api/v1/dapp/checkLimits'\n        },\n        params:{\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: '36572ec9-ae5c-4c4a-9530-f3ae7c7ac829',\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      terminal:{\n        enabled:false,\n        supportedNetworks:[1,42],\n        params:{\n          apiKey: env.REACT_APP_TERMINAL_KEY,\n          projectId: env.REACT_APP_TERMINAL_PROJECT_ID,\n          source: null,\n          web3Version: Web3Versions.one\n        }\n      },\n      simpleID:{\n        enabled:false,\n        supportedNetworks:[1],\n        getNetwork:(networkId,availableNetworks) => {\n          let networkName = null;\n          switch (networkId){\n            case 1:\n              networkName = 'mainnet';\n            break;\n            default:\n              networkName = availableNetworks[networkId] ? availableNetworks[networkId].toLowerCase() : 'mainnet';\n            break;\n          }\n          return networkName;\n        },\n        params:{\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: 'mainnet'\n        }\n      }\n    }\n  },\n  notifications:[\n    {\n      enabled:false,\n      end:1612282726374,\n      start:1611677841027,\n      date:'Jan 26, 2021 16:18 UTC',\n      title:'Cover Protocol Available',\n      hash:'/dashboard/tools/cover-protocol',\n      image:'/images/protocols/cover-logo.svg',\n      text:'Protect your portfolio with Cover Protocol',\n    }\n  ],\n  tools:{\n    ethWrapper:{\n      enabled:true,\n      label:'ETH Wrapper',\n      route:'eth-wrapper',\n      subComponent:TokenWrapper,\n      image:'images/tokens/WETH.svg',\n      desc:'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props:{\n        startContract:{\n          name:'ETH',\n          token:'ETH',\n          decimals:18,\n          wrapMethod:'deposit',\n        },\n        destContract:{\n          abi:WETH,\n          name:'WETH',\n          decimals:18,\n          token:'WETH',\n          unwrapMethod:'withdraw',\n          address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    stake:{\n      enabled:true,\n      icon:'Layers',\n      label:'LP Staking',\n      route:'lp-staking',\n      subComponent:Staking,\n      desc:'Stake your Sushi Swap LP tokens and earn $IDLE rewards',\n      props:{\n        availableTokens:{\n          SLP:{\n            contract:{\n              decimals:24,\n              abi:LpStaking,\n              name:'LpStaking',\n              maxMultiplier:3,\n              maxBonusDays:120,\n              rewardToken:'IDLE',\n              address:'0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d' // Mainnet\n              // address:'0x95274E30C33083F3E3fEA9454347b9BD59e85225' // Fork\n            },\n            name:'SLP',\n            token:'SLP',\n            decimals:18,\n            enabled:true,\n            abi:SushiLiquidityPool,\n            label:'SushiSwap IDLE/ETH LP Token',\n            icon:'images/protocols/sushiswap.png',\n            address:'0xa7f11e026a0af768d285360a855f2bded3047530', // Mainnet\n            poolLink:'https://analytics.sushi.com/pairs/0xa7f11e026a0af768d285360a855f2bded3047530',\n          }\n        }\n      }\n    },\n    coverProtocol:{\n      enabled:false,\n      label:'Cover Protocol',\n      route:'cover-protocol',\n      subComponent:CoverProtocol,\n      image:'images/protocols/cover-logo.svg',\n      desc:'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl:'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props:{\n        contract:{\n          decimals:18,\n          abi:CoverMint,\n          name:'CoverMint',\n          address:'0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages:[\n          {\n            collateral:'DAI',\n            expirationTimestamp:1614470400,\n            tokens:{\n              Claim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                address:'0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                  address:'0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c',\n                }\n              },\n              NoClaim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                address:'0x53df0bfa014b7522299c129c5a7b318f02adb469',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                  address:'0xce0e9e7a1163badb7ee79cfe96b5148e178cab73',\n                }\n              }\n            }\n          },\n        ],\n      }\n    },\n    batchDeposit:{\n      enabled:true,\n      icon:'Storage',\n      claimEnabled:true,\n      depositEnabled:true,\n      route:'batch-deposit',\n      label:'Batch Deposit',\n      subComponent:BatchDeposit,\n      desc:'Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            strategy:'best',\n            baseToken:'DAI',\n            minPoolSize:20000,\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAI',\n              address:'0x633fb4d38B24dC890b11Db2AE2B248D13F996A79', // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  usePermit:true,\n                  label:'Deposit',\n                  permitName:'permitAndDeposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:6,\n            strategy:'best',\n            baseToken:'USDC',\n            minPoolSize:20000,\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDC',\n              address:'0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B', // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                  permitName:'permitEIP2612AndDepositUnlimited'\n                },\n              ]\n            },\n          },\n          /*\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  usePermit:true,\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n          */\n        }\n      }\n    },\n    batchMigration:{\n      enabled:true,\n      claimEnabled:true,\n      depositEnabled:false,\n      icon:'FileDownload',\n      route:'batch-migration',\n      label:'Batch Migration',\n      subComponent:BatchMigration,\n      desc:'Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'DAI',\n            name:'idleDAIYieldV3',\n            token:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAI',\n              address:'0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDC',\n            name:'idleUSDCYieldV3',\n            token:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDC',\n              address:'0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            name:'idleUSDTYieldV3',\n            token:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            name:'idleSUSDYieldV3',\n            token:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            name:'idleTUSDYieldV3',\n            token:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            name:'idleWBTCYieldV3',\n            token:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            name:'idleDAISafeV3',\n            token:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            name:'idleUSDCSafeV3',\n            token:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            name:'idleUSDTSafeV3',\n            token:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n        }\n      }\n    },\n    tokenMigration:{\n      enabled:true,\n      icon:'SwapHoriz',\n      route:'convert',\n      label:'Token Migration',\n      desc:'Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle',\n      subComponent:TokenMigration,\n      props:{\n        migrationContract:{\n          name:'IdleConverterV4',\n          abi:IdleConverterPersonalSignV4,\n          address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n          oldAddresses:[],\n          functions:[\n            {\n              label:'Migrate',\n              name:'migrateFromToIdle'\n            },\n          ]\n        },\n        availableStrategies:['best','risk'],\n        availableTokens:{\n          idleDAIv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            baseToken:'DAI',\n            abi:IdleTokenV2,\n            token:'idleDAIOld',\n            icon:'images/tokens/idleDAI.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0x10eC0D497824e342bCB0EDcE00959142aAa766dD',\n          },\n          cDAI:{\n            decimals:8,\n            enabled:true,\n            token:\"cDAI\",\n            baseToken:'DAI',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\",\n          },\n          iDAI:{\n            decimals:18,\n            enabled:false,\n            token:\"iDAI\",\n            baseToken:'DAI',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x493c57c4763932315a328269e1adad09653b9081\",\n          },\n          aDAI:{\n            decimals:18,\n            enabled:true,\n            token:\"aDAI\",\n            protocol:\"aave\",\n            baseToken:'DAI',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\",\n          },\n          yDAIv3:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv3\",\n            abi:yDAIv3.abi,\n            baseToken:'DAI',\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xC2cB1040220768554cf699b0d863A3cd4324ce32\",\n          },\n          yDAIv2:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv2\",\n            baseToken:'DAI',\n            abi:yDAIv3.abi,\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\",\n          },\n          idleUSDCv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            abi:IdleTokenV2,\n            baseToken:'USDC',\n            token:'idleUSDCOld',\n            icon:'images/tokens/idleUSDC.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0xeB66ACc3d011056B00ea521F8203580C2E5d3991',\n          },\n          cUSDC:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDC\",\n            baseToken:'USDC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x39aa39c021dfbae8fac545936693ac917d5e7563\",\n          },\n          iUSDC:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDC\",\n            baseToken:'USDC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\",\n          },\n          aUSDC:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDC\",\n            protocol:\"aave\",\n            baseToken:'USDC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\",\n          },\n          yUSDCv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv3\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x26EA744E5B887E5205727f55dFBE8685e3b21951\",\n          },\n          yUSDCv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv2\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\",\n          },\n          cUSDT:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDT\",\n            baseToken:'USDT',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\",\n          },\n          iUSDT:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDT\",\n            baseToken:'USDT',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x8326645f3aa6de6420102fdb7da9e3a91855045b\",\n          },\n          aUSDT:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDT\",\n            protocol:\"aave\",\n            baseToken:'USDT',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\",\n          },\n          yUSDTv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv3\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\",\n          },\n          yUSDTv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv2\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\",\n          },\n          idleSUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'SUSD',\n            token:'idleSUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleSUSDYield.svg',\n            address:'0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5',\n          },\n          aSUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aSUSD\",\n            protocol:\"aave\",\n            baseToken:'SUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x625aE63000f46200499120B906716420bd059240\",\n          },\n          ySUSDv3:{\n            decimals:18,\n            enabled:true,\n            token:\"ySUSDv3\",\n            abi:ySUSDv3,\n            baseToken:'SUSD',\n            protocol:\"iearn\",\n            availableStrategies:['best'],\n            icon:'images/tokens/ySUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xf61718057901f84c4eec4339ef8f0d86d2b45600\",\n          },\n          idleTUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'TUSD',\n            token:'idleTUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleTUSDYield.svg',\n            address:'0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6',\n          },\n          aTUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aTUSD\",\n            protocol:\"aave\",\n            baseToken:'TUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x4DA9b813057D04BAef4e5800E36083717b4a0341\",\n          },\n          yTUSDv3:{\n            decimals:18,\n            enabled:true,\n            abi:yTUSDv3,\n            token:\"yTUSDv3\",\n            baseToken:'TUSD',\n            protocol:\"iearn\",\n            icon:'images/tokens/yTUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x73a052500105205d34daf004eab301916da8190f\",\n          },\n          cWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"cWBTC\",\n            baseToken:'WBTC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\",\n          },\n          iWBTC:{\n            decimals:8,\n            enabled:false,\n            token:\"iWBTC\",\n            baseToken:'WBTC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\",\n          },\n          aWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"aWBTC\",\n            protocol:\"aave\",\n            baseToken:'WBTC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\",\n          },\n        }\n      }\n    },\n    addFunds:{\n      enabled:true,\n      icon:'AddCircleOutline',\n      route:'add-funds',\n      label:'Add Funds',\n      desc:'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent:BuyModal,\n      directProps:{\n        showInline:true,\n        showAllTokens:true\n      }\n    },\n    insurance:{\n      enabled:false,\n      icon:'Security',\n      route:'nexus-mutual',\n      label:'Nexus Mutual',\n      desc:'Buy tokens with Bank account or Credit card',\n      subComponent:NexusMutual,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n        }\n      },\n      directProps:{\n        ens:'idlefinancev3.nexusmutual.eth',\n        address:'0x78751B12Da02728F467A44eAc40F5cbc16Bd7934'\n      }\n    },\n    tokenSwap:{\n      enabled:true,\n      icon:'Sync',\n      route:'token-swap',\n      label:'Token Swap',\n      desc:'Easily swap your tokens using Kyber Swap widget',\n      subComponent:TokenSwap,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n          \"SUSD\":{\"token\":\"SUSD\"},\n          \"TUSD\":{\"token\":\"TUSD\"},\n          \"USDC\":{\"token\":\"USDC\"},\n          \"USDS\":{\"token\":\"USDS\"},\n          \"USDT\":{\"token\":\"USDT\"},\n          \"WBTC\":{\"token\":\"WBTC\"},\n          \"WETH\":{\"token\":\"WETH\"},\n          \"BUSD\":{\"token\":\"BUSD\"},\n          \"EURS\":{\"token\":\"EURS\"},\n          \"2KEY\":{\"token\":\"2KEY\"},\n          \"ABT\":{\"token\":\"ABT\"},\n          \"ABYSS\":{\"token\":\"ABYSS\"},\n          \"AMPL\":{\"token\":\"AMPL\"},\n          \"ANT\":{\"token\":\"ANT\"},\n          \"BAM\":{\"token\":\"BAM\"},\n          \"BAND\":{\"token\":\"BAND\"},\n          \"BAT\":{\"token\":\"BAT\"},\n          \"BLZ\":{\"token\":\"BLZ\"},\n          \"BNT\":{\"token\":\"BNT\"},\n          \"BQX\":{\"token\":\"BQX\"},\n          \"BTU\":{\"token\":\"BTU\"},\n          \"CDT\":{\"token\":\"CDT\"},\n          \"CVC\":{\"token\":\"CVC\"},\n          \"DAT\":{\"token\":\"DAT\"},\n          \"DGX\":{\"token\":\"DGX\"},\n          \"EKG\":{\"token\":\"EKG\"},\n          \"ELF\":{\"token\":\"ELF\"},\n          \"ENJ\":{\"token\":\"ENJ\"},\n          \"EQUAD\":{\"token\":\"EQUAD\"},\n          \"FXC\":{\"token\":\"FXC\"},\n          \"GDC\":{\"token\":\"GDC\"},\n          \"GEN\":{\"token\":\"GEN\"},\n          \"GHT\":{\"token\":\"GHT\"},\n          \"GNO\":{\"token\":\"GNO\"},\n          \"IOST\":{\"token\":\"IOST\"},\n          \"KEY\":{\"token\":\"KEY\"},\n          \"KNC\":{\"token\":\"KNC\"},\n          \"LEND\":{\"token\":\"LEND\"},\n          \"LINK\":{\"token\":\"LINK\"},\n          \"LOOM\":{\"token\":\"LOOM\"},\n          \"LRC\":{\"token\":\"LRC\"},\n          \"MANA\":{\"token\":\"MANA\"},\n          \"MCO\":{\"token\":\"MCO\"},\n          \"MET\":{\"token\":\"MET\"},\n          \"MFG\":{\"token\":\"MFG\"},\n          \"MKR\":{\"token\":\"MKR\"},\n          \"MLN\":{\"token\":\"MLN\"},\n          \"MTL\":{\"token\":\"MTL\"},\n          \"MYB\":{\"token\":\"MYB\"},\n          \"NEXXO\":{\"token\":\"NEXXO\"},\n          \"NPXS\":{\"token\":\"NPXS\"},\n          \"OGN\":{\"token\":\"OGN\"},\n          \"OMG\":{\"token\":\"OMG\"},\n          \"OST\":{\"token\":\"OST\"},\n          \"PAX\":{\"token\":\"PAX\"},\n          \"PBTC\":{\"token\":\"PBTC\"},\n          \"PLR\":{\"token\":\"PLR\"},\n          \"PNK\":{\"token\":\"PNK\"},\n          \"POLY\":{\"token\":\"POLY\"},\n          \"POWR\":{\"token\":\"POWR\"},\n          \"PT\":{\"token\":\"PT\"},\n          \"QKC\":{\"token\":\"QKC\"},\n          \"QNT\":{\"token\":\"QNT\"},\n          \"RAE\":{\"token\":\"RAE\"},\n          \"REN\":{\"token\":\"REN\"},\n          \"REP\":{\"token\":\"REP\"},\n          \"REQ\":{\"token\":\"REQ\"},\n          \"RLC\":{\"token\":\"RLC\"},\n          \"RSR\":{\"token\":\"RSR\"},\n          \"RSV\":{\"token\":\"RSV\"},\n          \"SAN\":{\"token\":\"SAN\"},\n          \"SNT\":{\"token\":\"SNT\"},\n          \"SNX\":{\"token\":\"SNX\"},\n          \"SPIKE\":{\"token\":\"SPIKE\"},\n          \"SPN\":{\"token\":\"SPN\"},\n          \"TKN\":{\"token\":\"TKN\"},\n          \"TKX\":{\"token\":\"TKX\"},\n          \"TRYB\":{\"token\":\"TRYB\"},\n          \"UBT\":{\"token\":\"UBT\"},\n          \"UPP\":{\"token\":\"UPP\"},\n          \"ZRX\":{\"token\":\"ZRX\"}\n        }\n      },\n      directProps:{\n      }\n    }\n  },\n  payments: { // Payment methods & providers\n    methods:{\n      bank:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/bank.png',\n          caption:'Bank Account'\n        }\n      },\n      card:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/debit-card.png',\n          caption:'Credit Card'\n        }\n      },\n      wallet:{\n        defaultProvider:'zeroExInstant',\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/ethereum-wallet.svg',\n          caption:'Ethereum Wallet',\n          imageProps:{\n            padding:['0','5px']\n          }\n        }\n      },\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: 'images/payments/wyre.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.75% fee ~',\n        supportedMethods:['card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        remoteResources:{},\n        env:'prod',\n        envParams:{\n          test:{\n            accountId:'AC_Q2Y4AARC3TP'\n          },\n          prod:{\n            accountId:'AC_PQQBX33XVEQ'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n              break;\n              case 'card':\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = 'https://pay.sendwyre.com/purchase';\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken ),\n            referrerAccountId,\n            redirectUrl:globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const wyreWidget = document.getElementById('wyre-widget');\n          if (!wyreWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById('wyreWidget_style')){\n              const wyreStyle = document.createElement('style');\n              wyreStyle.id = 'wyreWidget_style';\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        },\n      },\n      ramp: {\n        enabled:true,\n        imageSrc: 'images/payments/ramp.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods:['bank','card'],\n        badge: {\n          text:'NO ID REQUIRED',\n          color:'#fff',\n          bgColor:'#0cade4'\n        },\n        supportedTokens:['ETH','DAI','USDC'],\n        supportedCountries:['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'],\n        getInfo: (props) => {\n          const info = {};\n            switch (props.selectedMethod){\n              case 'bank':\n                info.supportedCountries = ['GBR','EUR'];\n                info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n              case 'card':\n                info.supportedCountries = ['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'];\n                info.subcaption = `~ 2.90% fee ~`;\n              break;\n              default:\n              break;\n            }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n        \treturn {\n\t          hostAppName: 'Idle',\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? 'mobile' : 'desktop',\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset ? props.tokenConfig.ramp.swapAsset : props.selectedToken )\n        \t};\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on('*', async (event) => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type){\n                case 'PURCHASE_SUCCESSFUL':\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil.BNify(tokenAmount.toString()).div(functionsUtil.BNify(Math.pow(10,parseInt(tokenDecimals)).toString())).toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: 'light',\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\",\n                  });\n\n                break;\n                default:\n                break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled:true,\n        imageSrc: 'images/payments/transak.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods:['bank','card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR','IND'],\n        supportedTokens:['ETH','DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n        remoteResources:{'https://global.transak.com/v1/widget.js':{}},\n        env:'prod',\n        badge:{\n          text:'INSTANT',\n          bgColor:'#0069ee'\n        },\n        envParams:{\n          test:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_TEST,\n            url:'https://global.transak.com'\n          },\n          prod:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_PROD,\n            url:'https://global.transak.com'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === 'bank' ? '1.5%' : '4.5%';\n\n          if (props.selectedCountry && props.selectedCountry.value){\n            switch (props.selectedCountry.value.toUpperCase()){\n              case 'GBR':\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n              break;\n              case 'IND':\n                fee = '1.0%';\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n              break;\n              case 'EUR':\n                if (selectedMethod === 'bank'){\n                  info.badge = {\n                    text:'SEPA',\n                    color:'#f7cb05 ',\n                    bgColor:'#10288a'\n                  };\n                } else {\n                  info.badge = {\n                    text:'INSTANT',\n                    bgColor:'#0069ee'\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams = globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value){\n            switch (buyParams.selectedCountry.value.toUpperCase()){\n              case 'IND':\n                fiatCurrency = 'INR';\n              break;\n              case 'GBR':\n                fiatCurrency = 'GBP';\n              break;\n              case 'EUR':\n                fiatCurrency = 'EUR';\n              break;\n              case 'USA':\n                fiatCurrency = 'USD';\n              break;\n              default:\n                fiatCurrency = 'GBP';\n              break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.transak && props.tokenConfig.transak.currencyCode ? props.tokenConfig.transak.currencyCode : props.selectedToken);\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width:'100%',\n            height:'100%'\n            // email,\n          };\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          if (window.transakGlobal){\n\n            const transakWidget = document.getElementById('transak-widget');\n            if (!transakWidget){\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById('transakWidget_style')){\n                const transakStyle = document.createElement('style');\n                transakStyle.id = 'transakWidget_style';\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, 'transak-widget-container');\n          }\n        }\n      },\n      moonpay: {\n        enabled:true,\n        imageSrc: 'images/payments/moonpay.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 4.5% fee ~',\n        supportedMethods:['card','bank'],\n        supportedCountries:['GBR','EUR','AUS','BRA','CHN','MEX','CAN','HKG','RUS','ZAF','KOR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        env:'prod',\n        envParams:{\n          test:{\n            url:'https://buy-staging.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod:{\n            url:'https://buy.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                if (props.selectedCountry && props.selectedCountry.value){\n                  switch (props.selectedCountry.value.toUpperCase()){\n                    case 'EUR':\n                      info.badge = {\n                        text:'SEPA',\n                        color:'#f7cb05 ',\n                        bgColor:'#10288a'\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                    break;\n                    case 'GBR':\n                      info.badge = {\n                        text:'GBP',\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                    break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                    break;\n                  }\n                }\n              break;\n              case 'card':\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams = globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.moonpay && props.tokenConfig.moonpay.currencyCode ? props.tokenConfig.moonpay.currencyCode : props.selectedToken.toLowerCase()),\n            walletAddress:props.account,\n            baseCurrencyCode:'USD',\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            'bank':{\n              'GBR':'gbp_bank_transfer',\n              'EUR':'sepa_bank_transfer'\n            },\n            'card':'credit_debit_card'\n          };\n\n          const selectedCountry = buyParams.selectedCountry && buyParams.selectedCountry.value ? buyParams.selectedCountry.value.toUpperCase() : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod){\n            switch (buyParams.selectedMethod){\n              case 'bank':\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod]['EUR'];\n                switch (selectedCountry){\n                  case 'GBR':\n                  case 'EUR':\n                    params.enabledPaymentMethods = methods[buyParams.selectedMethod][selectedCountry];\n                  break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(methods[buyParams.selectedMethod]).join(',');\n                  break;\n                }\n              break;\n              case 'card':\n              default:\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod];\n              break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry){\n            case 'GBR':\n              params.baseCurrencyCode = 'GBP';\n            break;\n            case 'EUR':\n              params.baseCurrencyCode = 'EUR';\n            break;\n            default:\n              params.baseCurrencyCode = 'USD';\n            break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (!document.cookie.match(/^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/)) {\n              document.cookie = \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const moonpayWidget = document.getElementById('moonpay-widget');\n          if (!moonpayWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById('moonpayWidget_style')){\n              const moonpayStyle = document.createElement('style');\n              moonpayStyle.id = 'moonpayWidget_style';\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: 'images/payments/zeroexinstant.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        remoteResources:{'https://instant.0x.org/v3/instant.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onSuccess,onClose) => {\n\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context ? window.RimbleWeb3_context.connectorName : null;\n\n          if (!tokenParams.zeroExInstant){\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider: connectorName && connectorName!=='Injected' && window.RimbleWeb3_context.connector[connectorName.toLowerCase()] ? window.RimbleWeb3_context.connector[window.RimbleWeb3_context.connectorName.toLowerCase()].provider : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount) => {\n          if (window.zeroExInstant && initParams){\n            if (amount){\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, 'body');\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: 'images/payments/kyber.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Swap with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['WETH','USDC','DAI','USDT','TUSD','SUSD','WBTC','RAI'],\n        web3Subscription:{ // Data for web3 subscription\n          enabled: true,\n          contractAddress: '0x818e6fecd516ecc3849daf6845e3ec868087b755',\n          decodeLogsData: [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_startAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_tokenAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_startAmount\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_tokenAmount\",\n              \"type\": \"uint256\"\n            },\n          ],\n        },\n        remoteResources:{\n          'https://widget.kyber.network/v0.7.5/widget.css':{},\n          'https://widget.kyber.network/v0.7.5/widget.js':{\n            parentElement:document.body,\n            precall: (props,globalConfigs,providerInfo) => {\n\n              // Remove previous elements\n              const buttons = document.querySelectorAll('.kyber-widget-button');\n              for (let i=0;i<buttons.length;i++){\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll('.script_kyberSwap');\n              for (let i=0;i<scripts.length;i++){\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId ? props.buttonId : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)){\n                const a = document.createElement('a');\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props,globalConfigs);\n                a.target = '_blank';\n                a.rel = 'nofollow noopener noreferrer';\n                a.className = 'kyber-widget-button theme-ocean theme-supported';\n                a.title = 'Swap with Kyber';\n                a.style = 'display:none;';\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props,globalConfigs,buyParams=null) => {\n          const baseToken = props.baseToken ? props.baseToken : 'ETH';\n          const params = {\n            lang:'en',\n            type:'swap',\n            mode:'iframe',\n            theme:'theme-ocean',\n            paramForwarding:true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens:`${baseToken}_${props.selectedToken}`,\n            title:`Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair:`${baseToken}_${props.selectedToken}`,\n            commissionId:'0x4215606a720477178AdFCd5A59775C63138711e8',\n            network: globalConfigs.network.requiredNetwork === 1 ? 'mainnet' : 'test',\n          };\n\n          const url  = 'https://widget.kyber.network/v0.7.5/';\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props) => {\n          const buttonId = props.buttonId ? props.buttonId :`kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a){\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n                      \n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: 'images/payments/airswap.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://cdn.airswap.io/airswap-instant-widget.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            env: 'production',\n            mode: 'buy',\n            token: props.tokenConfig.address,\n            baseToken: 'ETH',\n            onComplete: onComplete ? onComplete : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.AirSwapInstant){\n            if (amount){\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams,'body');\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: 'images/payments/totle.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://widget.totle.com/latest/dist.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null,\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.TotleWidget){\n            const nodeId = 'totle-widget';\n            if (!document.getElementById(nodeId)){\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(initParams,document.getElementById(nodeId));\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      if (this.tokenConfig && this.tokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport globalConfigs from '../configs/globalConfigs';\n\nconst ethereumjsABI = require('ethereumjs-abi');\nconst env = process.env;\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber( typeof s === 'object' ? s : String(s) )\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'),...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'),...props); }\n  getContractByName = (contractName) => {\n    const contract = this.props.contracts.find(c => c.name === contractName);\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g,\"\\n\")\n            .replace(/<p>/g,\"\")\n            .replace(/<br>/g,\"\")\n            .replace(/&nbsp;/g,\" \")\n            .replace(/<\\/p>/g,\"\");\n  }\n  capitalize = (str) => {\n    return str.substr(0,1).toUpperCase()+str.substr(1);\n  }\n  strToMoment = (date,format=null) => {\n    return moment(date,format);\n  }\n  replaceArrayProps = (arr1,arr2) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  stripHtml = (html) => {\n     var tmp = document.createElement(\"DIV\");\n     tmp.innerHTML = html;\n     return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d/2;\n      if (t < 1) return c/2*t*t + b;\n      t--;\n      return -c/2 * (t*(t-2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n        currentTime += increment;\n        var val = Math.easeInOutQuad(currentTime, start, change, duration);\n        window.scrollTo(0,val);\n        if(currentTime < duration) {\n          window.setTimeout(animateScroll, increment);\n        }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n        results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx,tokenConfig) => {\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();    \n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1 ) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx){\n      action = 'Deposit';\n    } else if (isRedeemTx){\n      action = 'Redeem';\n    } else if (isMigrationTx){\n      action = 'Migrate';\n    } else if (isSendTransferTx){\n      action = 'Send';\n    } else if (isReceiveTransferTx){\n      action = 'Receive';\n    } else if (isSwapTx){\n      action = 'Swap';\n    } else if (isSwapTx){\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  getAccountPortfolio = async (availableTokens=null,account=null) => {\n    const portfolio = {\n      tokensBalance:{},\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n      totalBalanceConverted:this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens){\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const idleTokenBalance = await this.getTokenBalance(tokenConfig.idle.token,account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance,token,tokenConfig,isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()){\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach( token => {\n      if (portfolio.tokensBalance[token]){\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens,async (token) => {\n      const tokenConfig = availableTokens[token];\n      const amountDeposited = await this.getAmountDeposited(tokenConfig,account);\n\n      // console.log(token,'amountDeposited',amountDeposited.toString(),'amountLent',amountLents[token].toString());\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n      const [\n        tokenAprs\n        // tokenEarnings\n      ] = await Promise.all([\n        this.getTokenAprs(tokenConfig)\n        // this.loadAssetField('earnings',token,tokenConfig,this.props.account,false),\n      ]);\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings){\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY){\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken){\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // debugger;\n\n    return portfolio;\n  }\n  getCurveAvgSlippage = async (enabledTokens=[],account=null,fixDecimals=true) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]){\n              processedTxs[tx.hash] = {\n                price:null,\n                received:null,\n                slippage:null,\n                deposited:this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null){\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]){\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)){\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach( tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens=[],account=null) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n        \n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)){\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    enabledTokens.forEach( selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance= this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice){\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action){\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n            break;\n            default:\n            break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)){\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx){\n                firstDepositTx = tx;\n              }\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens=[],account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens,account);\n    if (firstDepositTxs){\n      return Object.keys(firstDepositTxs).reduce( (acc,token) => {\n        if (firstDepositTxs[token]){\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      },{});\n    }\n\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig,account) => {\n    let [tokenBalance,userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,account),\n      this.genericContractCall(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice){\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice,tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return amountDeposited;\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens=[],account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens,false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getEtherscanBaseTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network','firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber,firstBlockNumber);\n\n    const requiredNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n\n    let results = [];\n    let etherscanBaseTxs = null;\n    let etherscanBaseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      etherscanBaseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      etherscanBaseTxs = this.getCachedRequest(etherscanBaseEndpoint);\n\n      if (debug){\n        console.log('DEBUG - CACHED - etherscanBaseTxs',etherscanBaseTxs);\n      }\n\n      // Check if the latest blockNumber is actually the latest one\n      if (etherscanBaseTxs && etherscanBaseTxs.data.result && Object.values(etherscanBaseTxs.data.result).length){\n\n        const lastCachedTx = Object.values(etherscanBaseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber)+1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length){\n          \n          latestTxs = await this.filterEtherscanTxs(latestTxs.data.result,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.blockNumber)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with etherscanBaseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(etherscanBaseTxs.data.result).includes(tx.hashKey);\n                if (!txFound){\n                  etherscanBaseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanBaseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        etherscanBaseTxs = null;\n      }\n\n      let txs = etherscanBaseTxs;\n\n      if (debug){\n        console.log('DEBUG - txs',txs);\n      }\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(etherscanBaseEndpoint);\n\n        // console.log('makeRequest 1',account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status)===0){\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(etherscanBaseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount<5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status)>0){\n          const timestamp = parseInt(Date.now()/1000);\n          const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          cachedRequests[etherscanBaseEndpoint] = {\n            data:txs,\n            timestamp\n          };\n          this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n      }\n\n      if (txs && txs.data && txs.data.result){\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    };\n  }\n  getCurveTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const results = await this.getEtherscanTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results,enabledTokens);\n  }\n  saveEtherscanTxs = (endpoint,txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')){\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data:{\n        result:txsToStore\n      }\n    };\n    this.saveCachedRequest(endpoint,false,cachedRequest);\n  }\n  getEtherscanTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    const {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    } = await this.getEtherscanBaseTxs(account,firstBlockNumber,endBlockNumber,enabledTokens,debug);\n\n    // Initialize prevTxs\n    let etherscanTxs = {};\n    if (etherscanBaseTxs){\n      // Filter txs for token\n      etherscanTxs = await this.processStoredTxs(results,enabledTokens);\n    } else {\n      const allAvailableTokens = Object.keys(this.props.availableTokens);\n      // Save base endpoint with all available tokens\n      etherscanTxs = await this.filterEtherscanTxs(results,allAvailableTokens);\n\n      // Store filtered txs\n      if (etherscanTxs && Object.keys(etherscanTxs).length){\n        this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanTxs);\n      }\n    }\n\n    if (debug){\n      console.log('DEBUG - getEtherscanTxs -',etherscanTxs);\n    }\n\n    return Object\n            .values(etherscanTxs)\n            .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n            .sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  filterCurveTxs = async (results,enabledTokens=[]) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter( tx => (enabledTokens.includes(tx.token) && ['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut'].includes(tx.action)) );\n\n    if (curveTxs.length){\n      curveTxs.sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  filterEtherscanTxs = async (results,enabledTokens=[],processTxs=true,processStoredTxs=true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools','tokenMigration','props','migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',tokenConfig.idle.token]);\n\n      results.forEach( tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length>1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length>0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find( iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 )) );\n        const isRedeemInternalTx = isRightToken && internalTxs.find( iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase() );\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase()) ) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 ));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length>1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase()) ).length>0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find( tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase()) ) );\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut){\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx){\n            action = 'Deposit';\n          } else if (isRedeemTx){\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx){\n            action = 'Migrate';\n          } else if (isSendTransferTx){\n            action = 'Send';\n          } else if (isReceiveTransferTx){\n            action = 'Receive';\n          } else if (isSwapTx){\n            action = 'Swap';\n          } else if (isSwapOutTx){\n            action = 'SwapOut';\n          } else if (isWithdrawTx){\n            action = 'Withdraw';\n          } else if (isCurveDepositTx){\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx){\n            action = 'CurveOut';\n          } else if (isCurveZapIn){\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut){\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn){\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut){\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn){\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut){\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx){\n            hashKey += '_'+tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value,curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)){\n              hashKey+='_'+action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()){\n            tokenDecimals = 18;\n          } else if (isCurveTx){\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]){\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action){\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx){\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value,tokenDecimals);\n                }\n              break;\n              default:\n                if (!curveTx){\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value,tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n              break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut){\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTokens = this.fixTokenDecimals(tx.value,curvePoolContract.decimals);\n                curveTransfersTxs.push({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n              }\n            } else {\n              etherscanTxs[hashKey] = ({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action){\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length>0){\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value,iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                break;\n                default:\n                break;\n              }\n            }   \n          }\n        }\n      });\n    });\n    \n    curveTransfersTxs.forEach( tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n  \n    if (processTxs){\n      etherscanTxs = await this.processEtherscanTransactions(etherscanTxs,enabledTokens,processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey,transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]){\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]){\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]){\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions',JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account=null,tokenKey=null,selectedToken=null) => {\n    const storedTxs = this.getStoredItem('transactions',true,{});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account){\n      if (storedTxs[account]){\n        output = storedTxs[account];\n        if (tokenKey){\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken){\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()){\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processEtherscanTransactions = async (etherscanTxs,enabledTokens=[],processStoredTxs=true) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object'){\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n    Object.keys(curveAvailableTokens).forEach( token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats','tokens',curveTokenConfig.baseToken]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object'){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = {...storedTxs[this.props.account][tokenKey]};\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        await this.asyncForEach(filteredTxs,async (tx,index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n          \n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()){\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig,tx.blockNumber,tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash){\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action){\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n            break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount){\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n            break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n            break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n            break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n            break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount){\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length-1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x','').toLowerCase()}` ) );\n\n                  this.customLog('filteredLogs',filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length){\n                    filteredLogs.forEach( log => {\n                      let tokenAmount = parseInt(log.data,16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount ('+tx.hash+')',baseTokensConfig.token,tokenAmount.toFixed(5),storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n            break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens){\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n                  const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (log.address.toLowerCase()===idleTokenAddress ) );\n                  if (filteredLogs && filteredLogs.length){\n                    idleTokens = parseInt(filteredLogs[0].data,16);\n                    idleTokens = this.fixTokenDecimals(idleTokens,idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n            break;\n            default:\n            break;\n          }\n            \n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs){\n        etherscanTxs = await this.processStoredTxs(etherscanTxs,[selectedToken],this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs,enabledTokens=[],txsToProcess=null) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions',true,{})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]){\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({},etherscanTxs);\n\n    const networkId = this.getGlobalConfig(['network','requiredNetwork']);\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account,tokenKey,selectedToken);\n      \n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess),async (txKey,i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))){\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken:'Deposit',\n          redeemIdleToken:'Redeem',\n          migrateFromToIdle:'Migrate',\n          mintIdleTokensProxy:'Deposit',\n          migrateFromAaveToIdle:'Migrate',\n          migrateFromIearnToIdle:'Migrate',\n          executeMetaTransaction:'Migrate',\n          migrateFromFulcrumToIdle:'Migrate',\n          migrateFromCompoundToIdle:'Migrate',\n        };\n        const pendingStatus = ['pending','started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice){\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length){\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status:'Pending',\n            token:selectedToken,\n            action:allowedMethods[tx.method],\n            timeStamp:parseInt(tx.created/1000),\n            hash:txHash ? tx.transactionHash : null,\n            tokenSymbol:isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0],decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed){\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx){\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise( async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash,(err,txReceipt)=>{\n              if (err){\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())){\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig,realTx.blockNumber,realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created/1000);\n\n        let txValue = null;\n        switch (tx.method){\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()){\n              // Remove wrong contract tx\n              if (isStoredTx){\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0],tokenConfig.decimals).toString() : 0;\n            if (!txValue){\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n          break;\n          case 'redeemIdleToken':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice){\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0],18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n          break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt){\n              executeMetaTransactionReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract','deposit','proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo){\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x','').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length){\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data,16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data,16) : null;\n\n            if (!metaTxValue){\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue,tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n          break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract){\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt){\n              migrationTxReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x','');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x','');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length>=3 && tx.topics[tx.topics.length-2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length){\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ],migrationInternalTransfer.data,migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token){\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue,tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n          break;\n          default:\n          break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx){\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint,alias=false,data) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    const timestamp = parseInt(Date.now()/1000);\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress',false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress',customAddress);\n  }\n  getCachedRequest = (endpoint,alias=false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]){\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  makeRequest = async(endpoint,error_callback=false,config=null) => {\n    const data = await axios\n                  .get(endpoint,config)\n                  .catch(err => {\n                    if (typeof error_callback === 'function'){\n                      error_callback(err);\n                    }\n                  });\n    return data;\n  }\n  makeCachedRequest = async (endpoint,TTL=60,return_data=false,alias=false,config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp-cachedRequests[key].timestamp<TTL){\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makeRequest(endpoint,false,config);\n\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)){\n      const errorCode = parseInt(error.code);\n      switch (errorCode){\n        case 4001:\n          output = 'denied';\n        break;\n        default:\n          output = `error_${errorCode}`;\n        break;\n      }\n    } else if (error.message){\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path,array) => {\n    path = Object.assign([],path);\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path,array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path,configs=false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return configs[prop] ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path,configs[prop]);\n      }\n    }\n    return null;\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsEvent = async (eventData,callback=null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && ( debugEnabled || originOk)){\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet){\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1){\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n        // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise( async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function'){\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function'){\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\",name,address,error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider=null) => {\n    return this.getStoredItem('walletProvider',false,defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo,simpleID) => {\n    if (!userInfo.address && this.props.account){\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider){\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email){\n      delete userInfo.email;\n    }\n    if (!userInfo.address){\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID){\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (tx_address) => {\n    return tx_address ? 'https://etherscan.io/tx/'+tx_address : null;\n  }\n  getEtherscanAddressUrl = (address) => {\n    return address ? 'https://etherscan.io/address/'+address : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly=false) => {\n\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network','providers','snapshot','whitelist']).map( addr => addr.toLowerCase() );\n    const endpoint = this.getGlobalConfig(['network','providers','snapshot','endpoints','proposals']);\n    let proposals = await this.makeCachedRequest(endpoint,1440,true);\n\n    if (proposals){\n      proposals = Object.values(proposals);\n\n      const currTime = parseInt(Date.now()/1000);\n      if (activeOnly){\n        proposals =  proposals.filter( p => (p.msg.payload.start<=currTime && p.msg.payload.end>currTime) );\n      }\n\n      // console.log(proposals);\n\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        // Add proposal if ended\n        if (p.msg.payload.end<=currTime || whitelist.includes(p.address.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.msg.payload.snapshot;\n\n          let checkedStrategies = false;\n          await this.asyncForEach( p.msg.payload.metadata.strategies, async (s) => {\n            if (checkedStrategies){\n              return;\n            }\n            if (s.name==='erc20-balance-of'){\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract){\n                const tokenBalance = await this.getTokenBalance(tokenName,p.address,true,blockNumber);\n                // console.log(p.relayerIpfsHash,p.address,s.name,tokenBalance ? tokenBalance.toFixed() : null);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)){\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n\n            // console.log(p.relayerIpfsHash,p.address,s.name,checkedStrategies);\n          });\n          \n          // Add proposal is passed token balances check\n          if (checkedStrategies){\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey,validProposals);\n    }\n\n  }\n  getTokenApiData = async (address,isRisk=null,startTimestamp=null,endTimestamp=null,forceStartTimestamp=false,frequency=null,order=null,limit=null) => {\n    if (globalConfigs.network.requiredNetwork!==1 || !globalConfigs.stats.enabled){\n      return [];\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData){\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter( c => ( (c.startTimestamp===null || (startTimestamp && c.startTimestamp<=startTimestamp)) && (c.endTimestamp===null || (endTimestamp && c.endTimestamp>=endTimestamp)) ) )\n\n      if (filteredCachedData && filteredCachedData.length>0){\n        const filteredData = filteredCachedData.pop().data;\n        if (filteredData){\n          return filteredData.filter( d => ((!startTimestamp || d.timestamp>=startTimestamp) && (!endTimestamp || d.timestamp<=endTimestamp)) );\n        }\n        return null;\n      }\n    // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    let endpoint = `${apiInfo.endpoint}${address}`;\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null){\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)){\n        if (forceStartTimestamp){\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp-(60*60*24*2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)){\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null){\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)){\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null){\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)){\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length){\n        endpoint += '?'+params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    let output = await this.makeRequest(endpoint,false,config);\n    if (!output){\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null){\n      filteredData = data.filter( d => ( d.isRisk === isRisk ) );\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data:filteredData,\n    });\n\n    this.setCachedData(cachedDataKey,cachedData);\n\n    return data;\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName ? contractName : this.props.selectedToken;\n    return await this.genericContractCall(contractName,'decimals');\n  }\n  getAvgApr = (aprs,allocations,totalAllocation) => {\n    if (aprs && allocations && totalAllocation){\n      let avgApr = Object.keys(aprs).reduce((aprWeighted,protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      },0);\n\n      if (avgApr){\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency,quantity=1) => {\n    const frequency_seconds = {\n      hour:3600,\n      day:86400,\n      week:604800\n    };\n    return frequency_seconds[frequency]*quantity;\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance,tokenDecimals,round=true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance,tokenDecimals,exchangeRate=null) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()){\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName=null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCall(contractName, 'paused', [], {}).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key,parse_json=true,return_default=null) => {\n    let output = return_default;\n    if (window.localStorage){\n      const item = localStorage.getItem(key);\n      if (item){\n        output = item;\n        if (parse_json){\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output){\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys=[]) => {\n    if (window.localStorage){\n\n      if (!excludeKeys || !excludeKeys.length){\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i=0;i<window.localStorage.length;i++){\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)){\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage){\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key,value,stringify=false) => {\n    if (window.localStorage){\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key,value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig){\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length){\n      return false;\n    }\n\n    for (let protocolIndex=0;protocolIndex<allocations.length;protocolIndex++){\n      const lastAllocationsPromise = new Promise( async (resolve, reject) => {\n        try{\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations',[protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error){\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations){\n      return true;\n    }\n\n    const diff = allocations.filter( (alloc,index) => alloc !== newAllocations[index] );\n\n    return diff.length>0;\n  }\n  checkMigration = async (tokenConfig,account) => {\n\n    if (!tokenConfig || !account){\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled){\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract){\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName,account);\n\n        if (oldContractBalance){\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  estimateMethodGasUsage = async (contractName, methodName, methodParams = [], account = null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n    const contract = this.getContractByName(contractName);\n    if (contract && contract.methods[methodName]){\n      const functionCall = contract.methods[methodName](...methodParams);\n      const [\n        gasPrice,\n        gasLimit\n      ] = await Promise.all([\n        this.props.web3.eth.getGasPrice(),\n        functionCall.estimateGas({from: account})\n      ]);\n\n      if (gasPrice && gasLimit){\n        return this.fixTokenDecimals(this.fixTokenDecimals(gasPrice,9).times(gasLimit),9);\n      }\n    }\n    return null;\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function(hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function(confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\",receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null,error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\",\"address\",\"uint256\",\"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network','providers','biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`,null,{\n      headers:{\n        'x-api-key':biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data){\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName,methodName,methodParams,nonce,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]){\n      callback(null,'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try{\n      const userAddress = this.props.account;\n      const chainId = this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null,error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName,tokenAddress,permitType,callData,gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      return false;\n    }\n\n    console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx({\n      permitType,\n      data:callData,\n      token:tokenAddress,\n      to:contract._address,\n      txGas:Number(gasLimit)\n    });\n\n    return tx;\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req,metaInfo,callback,callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({req,metaInfo});\n      transactionHash = txResponse.txHash;\n      console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null,true);\n      return false;\n    }\n\n    if (!transactionHash){\n      console.log('!transactionHash ERROR');\n      callback(null,true);\n      return false;\n    }\n    \n    const tx = {\n      method:'mintIdleToken',\n      transactionHash\n    };\n    console.log('sendBiconomyTxWithErc20Forwarder',transactionHash);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(()=> {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt)=> {\n        console.log('sendBiconomyTxWithErc20Forwarder',transactionHash,err,receipt);\n        if(!err && receipt){\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx,err);\n\n          if (typeof window.updateTransaction === 'function'){\n            window.updateTransaction(tx,transactionHash,tx.status,null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName,functionSignature,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    try{\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce=0) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit',baseContractName]);\n\n    // console.log('permitConfig',permitConfig);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = permitConfig.nonceMethod ? await baseContract.methods[permitConfig.nonceMethod](holder).call() : null;\n    if (addToNonce>0){\n      nonce = parseInt(nonce)+parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion){\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        const value = this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n      break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n      break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit=null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters){\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find( f => f.name === methodName );\n      const useNonce = methodAbi ? methodAbi.inputs.find( i => i.name === 'nonce' ) : true;\n      if (!isNaN(parseInt(nonce)) && useNonce){\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null,'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName,contractAddress,functionSignature,callback,callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null,error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n            \n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName,contractAddr,walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName,walletAddr,false),\n      this.getAllowance(contractName,contractAddr,walletAddr)\n    ]);\n    this.customLog('checkTokenApproved',contractName,this.BNify(allowance).toFixed(),this.BNify(balance).toFixed(),(allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName,contractAddr,walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr){\n      return false;\n    }\n    this.customLog('getAllowance',contractName,contractAddr,walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapper = (contractName,methodName,params,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  disableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  loadAssetField = async (field,token,tokenConfig,account,addGovTokens=true,addCurveApy=false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies',this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined'){\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken){\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig){\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)){\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field){\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([],account),\n          this.getCurveTokenBalance(account,true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance){\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage){\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n      break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1,redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)){\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n      break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n      break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n      break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n      break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy',token,tokenConfig,account),\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve){\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n      break;\n      case 'earningsPerc':\n        let [amountLent1,redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)){\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n      break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp',token,tokenConfig,account);\n        if (depositTimestamp){\n          const currTimestamp = parseInt(Date.now()/1000);\n          output = (currTimestamp-depositTimestamp)/86400;\n        }\n      break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig,addGovTokens);\n        }\n      break;\n      case 'userDistributionSpeed':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'stkAAVE':\n            output = await this.getStkAaveUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account,govTokenAvailableTokens);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n          if (output){\n            output = this.fixDistributionSpeed(output,tokenConfig.distributionFrequency,tokenConfig.distributionMode);\n          }\n        }\n      break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance','props','tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens',tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output){\n\n          output = this.fixTokenDecimals(output,govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency){\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n            break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n            break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n            break;\n            case 'year':\n              output = output.times(blocksPerYear);\n            break;\n            default:\n            break;\n          }\n        }\n      break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token){\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n          break;\n          case 'stkAAVE':\n            output = await this.getStkAaveDistribution(selectedTokenConfig);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n        }\n      break;\n      case 'apr':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n          break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n            if (tokenAprs && tokenAprs.avgApr !== null){\n              output = tokenAprs.avgApr;\n            }\n          break;\n        }\n      break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n\n        // console.log('apr',token,tokenApys.avgApr ? tokenApys.avgApr.toString() : null,tokenApys.avgApy ? tokenApys.avgApy.toString() : null);\n\n        output = this.BNify(0);\n\n        if (tokenApys && !this.BNify(tokenApys.avgApy).isNaN()){\n          output = this.BNify(tokenApys.avgApy);\n\n          if (addCurveApy){\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY){\n              output = output.plus(curveAPY);\n            }\n          }\n        } else {\n\n        }\n      break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token],account),\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]){\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig,firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n      break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account),\n          this.loadAssetField('earningsPerc',token,tokenConfig,account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc){\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n      break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token],account) : false;\n        if (depositTimestamps && depositTimestamps[token]){\n          output = depositTimestamps[token];\n        }\n      break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig,account) : false;\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n      break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig,govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()){\n            output = '-';\n          }\n        } else {\n          output = await this.genericContractCall(tokenConfig.idle.token, 'tokenPrice');\n        }\n      break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig,account);\n      break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getTokenBalance(token,account);\n          if (!output || output.isNaN()){\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token,account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()){\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n      break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token,account) : false;\n        if (idleTokenBalance){\n          output = idleTokenBalance;\n        }\n      break;\n      case 'redeemableBalanceCounter':\n        let [tokenAPY1,amountLent2,redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy',token,tokenConfig,account,false),\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false),\n        ]);\n\n        let redeemableBalanceEnd = redeemableBalanceStart;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2){\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        // this.customLog('redeemableBalanceCounter',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd));\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n      break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig,account,govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance',token,tokenConfig,account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account,govTokenAvailableTokens,token) : null,\n          ]);\n\n          if (idleTokenBalance2 && idleTokenPrice1){\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()){\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n        }\n      break;\n      case 'earningsCurve':\n        let [amountLentCurve2,redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (!amountLentCurve2){\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1){\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n      break;\n      case 'earnings':\n        let [amountLent,redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (!amountLent){\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2){\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))){\n          output = this.BNify(0);\n        }\n      break;\n      default:\n      break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken,blockNumber='latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.genericContractCall(idleToken,'totalSupply',[],{},blockNumber);\n    if (idleTokenSupply){\n      idleTokenSupply = this.BNify(idleTokenSupply);\n      return this.setCachedDataWithLocalStorage(cachedDataKey,idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig,account,blockNumber='latest') => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCall(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCall(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCall(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n    \n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))){\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig,blockNumber='latest',timestamp=false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    // if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    // }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCall(tokenConfig.idle.token,'tokenPrice',[],{},blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp){\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp)-(60*60);\n      const endTimestamp = parseInt(timestamp)+(60*60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,endTimestamp,true);\n\n      let beforePrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      let afterPrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      tokenData.forEach( d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp)-parseInt(timestamp));\n        if (parseInt(d.timestamp)<parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff<beforePrice.timeDiff)){\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp)>parseInt(timestamp) && !afterPrice.timeDiff){\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data){\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()){\n      tokenPrice = this.fixTokenDecimals(tokenPrice,decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)){\n      tokenPrice = this.BNify(1);\n    }\n\n    // if (blockNumber !== 'latest'){\n      this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice);\n    // }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = () => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function'){\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData();\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 3 minutes\n  */\n  setCachedData = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL,true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key,defaultValue=null) => {\n    return this.getCachedData(key,defaultValue,true);\n  }\n  getCachedData = (key,defaultValue=null,useLocalStorage=false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[key]){\n      cachedData = this.props.cachedData[key];\n    // Get cache from local storage\n    } else if (useLocalStorage) {\n      cachedData = this.getStoredItem('cachedData');\n      if (cachedData && cachedData[key]){\n        cachedData = cachedData[key];\n      } else {\n        cachedData = null;\n      }\n    }\n\n    if (cachedData && cachedData.data && (!cachedData.expirationDate || cachedData.expirationDate>=parseInt(Date.now()/1000))){\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr,tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,walletAddr,false),\n      this.genericContractCall(tokenConfig.idle.token,'totalSupply')\n    ]);\n\n    let userShare = this.BNify(0);\n    if (this.BNify(idleTokensBalance).gt(0) && this.BNify(idleTokensTotalSupply).gt(0)){\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url,'_blank','noopener');\n  }\n  getActiveCoverages = async (account=null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account){\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now()/1000);\n    const coverProtocolConfig = this.getGlobalConfig(['tools','coverProtocol']);\n    if (coverProtocolConfig.enabled){\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name,account);\n        if (balance && balance.gt(0)){\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const fileClaimUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp<=currTimestamp ? 'Expired' : 'Active';\n          const expirationDate = moment(coverage.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            collateral,\n            protocolName,\n            fileClaimUrl,\n            protocolImage,\n            expirationDate\n          });\n        }\n      });\n    }\n\n    return activeCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint,1800,true);\n      if (transactions && typeof transactions.result === 'object'){\n        return transactions.result.filter( tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase() );\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account=null,filter_by_status=null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools','batchDeposit']);\n    if (!batchDepositConfig.enabled){\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name,migrationContract.address,migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name,'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name,'batchTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null){\n          batchTotals = this.fixTokenDecimals(batchTotal,tokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchRedeem = this.fixTokenDecimals(batchRedeem,18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit,tokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)){\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status){\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,batchedDeposits);\n  }\n  getETHBalance = async (walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName,walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName,walletAddr,blockNumber)\n    ]);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ',contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function'){\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url,props,callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props){\n      Object.keys(props).forEach((attr,i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function'){\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function() {\n          if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)){\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getTokenTotalSupply = async (contractName,blockNumber='latest') => {\n    return await this.genericContractCall(contractName, 'totalSupply', [], {}, blockNumber);\n  }\n  getContractBalance = async (contractName,address,blockNumber='latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    return await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n  }\n  getProtocolBalance = async (contractName,address) => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    return await this.genericContractCall(contractName, 'balanceOf', [address]);\n  }\n  getAprs = async (contractName) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const aprs = await this.genericContractCall(contractName, 'getAPRs');\n    if (aprs){\n      return {\n        aprs:aprs[1],\n        addresses:aprs[0]\n      };\n    }\n    return null;\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxDecodedLogs = async (tx,logAddr,decodeLogs,storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt){\n      txReceipt = await (new Promise( async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n          if (err){\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt){\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length){\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs,internalTransfers[0].data,internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getContractPastEvents = async (contractName,methodName,params = {}) => {\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.getPastEvents(methodName, params);\n  }\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest') => {\n\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try{\n      this.customLog(`genericContractCall - ${contractName} - ${methodName}`);\n      const value = await contract.methods[methodName](...params).call(callParams,blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      this.customLog(`genericContractCall - ${contractName} - ${methodName} : ${value}`);\n      return value;\n    } catch (error) {\n      this.customLog(\"genericContractCall error\", error);\n    }\n  }\n  asyncForEach = async (array, callback, async=true) => {\n    if (async){\n      await Promise.all(array.map( (c,index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        await callback(array[index], index, array);\n      }\n    }\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(12))).pow(12).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token,tokenConfig.idle.address);\n    if (unlentBalance){\n      unlentBalance = this.fixTokenDecimals(unlentBalance,tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig,addGovTokens=true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN() ) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent){\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPool);\n      }\n    }\n\n    return null;\n  }\n  /*\n  Get idleToken allocation between protocols\n  */\n  getTokenAllocation = async (tokenConfig,protocolsAprs=false,addGovTokens=true) => {\n\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    let totalAllocation = this.BNify(0);\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance:null,\n      totalAllocation:null,\n      protocolsBalances:{},\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null,\n      totalAllocationConverted:null,\n      totalAllocationWithUnlent:null,\n      totalAllocationWithUnlentConverted:null,\n    };\n\n    const exchangeRates = {};\n    const protocolsBalances = {};\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const contractName = protocolInfo.token;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n\n      let [\n        tokenDecimals,\n        protocolBalance,\n        exchangeRate\n      ] = await Promise.all([\n        this.getTokenDecimals(contractName),\n        this.getProtocolBalance(contractName,tokenConfig.idle.address),\n        ( protocolInfo.functions.exchangeRate ? this.genericContractCall(contractName,protocolInfo.functions.exchangeRate.name,protocolInfo.functions.exchangeRate.params) : null )\n      ]);\n\n      if (!protocolBalance){\n        return;\n      }\n\n      if (exchangeRate && protocolInfo.decimals){\n        exchangeRates[protocolAddr] = exchangeRate;\n        exchangeRate = this.fixTokenDecimals(exchangeRate,protocolInfo.decimals);\n      }\n\n      let protocolAllocation = this.fixTokenDecimals(protocolBalance,tokenDecimals,exchangeRate);\n\n      if (protocolAllocation.lt(this.BNify(0.00000001))){\n        protocolBalance = this.BNify(0);\n        protocolAllocation = this.BNify(0);\n      }\n\n      protocolsBalances[protocolAddr] = protocolBalance;\n      protocolsAllocations[protocolAddr] = protocolAllocation;\n      totalAllocation = totalAllocation.plus(protocolAllocation);\n\n      // console.log('getTokenAllocation',contractName,protocolAddr,protocolAllocation.toFixed(5),exchangeRate ? exchangeRate.toFixed(5) : null,totalAllocation.toFixed(5));\n    });\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = this.BNify(totalAllocation);\n\n    // Add unlent balance to the pool\n    let unlentBalance = await this.getUnlentBalance(tokenConfig);\n    if (unlentBalance){\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    // console.log('totalAllocationWithUnlent 1',addGovTokens,tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n\n    Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n      const protocolAllocation = protocolsAllocations[protocolAddr];\n      const protocolAllocationPerc = protocolAllocation.div(totalAllocation);\n      protocolsAllocationsPerc[protocolAddr] = protocolAllocationPerc;\n    });\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    if (addGovTokens){\n      const govTokensBalances = await this.getGovTokensBalances(tokenConfig.idle.address);\n\n      // Sum gov tokens balances\n      if (govTokensBalances.total){\n        const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,false);\n        if (tokenUsdConversionRate){\n          govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n        }\n\n        tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n\n        // console.log('totalAllocationWithUnlent 2',govTokensBalances.total.toFixed(5),tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n      }\n    }\n\n    tokenAllocation.totalAllocationConverted = await this.convertTokenBalance(tokenAllocation.totalAllocation,tokenConfig.token,tokenConfig);\n    tokenAllocation.totalAllocationWithUnlentConverted = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,tokenConfig.token,tokenConfig);\n\n    if (protocolsAprs){\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    return this.setCachedData(cachedDataKey,tokenAllocation);\n  }\n  getUniswapConversionRate_path = async (path) => {\n    const one = this.normalizeTokenDecimals(18);\n    const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n    return unires;\n  }\n  getSushiswapPoolTokenPrice = async (contractName,pairAddresses) => {\n    const [\n      token0_address,\n      token1_address,\n      poolReserves,\n      totalSupply\n    ] = await Promise.all([\n      this.genericContractCall(contractName,'token0'),\n      this.genericContractCall(contractName,'token1'),\n      this.genericContractCall(contractName,'getReserves'),\n      this.genericContractCall(contractName,'totalSupply')\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply){\n      const token0_config = {\n        address:token0_address\n      };\n      const token1_config = {\n        address:token1_address\n      };\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getSushiswapConversionRate(DAITokenConfig,token0_config),\n        this.getSushiswapConversionRate(DAITokenConfig,token1_config)\n      ]);\n\n      if (token0_price && token1_price){\n        // token0_price = this.BNify(1).div(this.BNify(token0_price));\n        // token1_price = this.BNify(1).div(this.BNify(token1_price));\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0],18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1],18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply,18));\n\n        // console.log(parseFloat(token0_price),parseFloat(token1_price),parseFloat(poolTokenPrice));\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `sushiswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getGlobalConfig(['stats','tokens','WETH','address']);\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const res = await this.genericContractCall('SushiswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      if (res){\n        const price = this.BNify(res[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  getUniswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log('getUniswapConversionRate - CACHED',cachedDataKey,cachedData);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getGlobalConfig(['stats','tokens','WETH','address']);\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      // console.log('getUniswapConversionRate',cachedDataKey,this.BNify(unires[0]).div(one).toFixed());\n\n      if (unires){\n        const price = this.BNify(unires[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account,enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach( tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]){\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action){\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n        break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])){\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)){\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n        break;\n        default:\n        break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)){\n        Object.keys(idleTokensBalances).forEach( token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)){\n            if (tokenBalance.gt(remainingCurveTokens)){\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts,max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve','rates']);\n    if (curveRatesInfo){\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data){\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path,results.data);\n        if (curveApy){\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies){\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve','availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce( (availableTokens,token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled){\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    },{});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber){\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice,prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price'),\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price',[],{},blockNumber-blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice){\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      return await this.genericContractCall(curvePoolContract.name,'totalSupply');\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account=null,fixDecimals=true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name,account,fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber='latest',fixDecimals=true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCall(migrationContract.name,'get_virtual_price',[],{},blockNumber);\n    if (curveTokenPrice){\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals){\n        const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice,curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice,curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice){\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve','depositContract']);\n    if (depositContractInfo){\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi){\n        curveDepositContract = await this.props.initContract(depositContractInfo.name,depositContractInfo.address,depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve','zapContract']);\n    if (zapContractInfo){\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi){\n        curveZapContract = await this.props.initContract(zapContractInfo.name,zapContractInfo.address,zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve','poolContract']);\n    if (poolContractInfo){\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi){\n        curvePoolContract = await this.props.initContract(poolContractInfo.name,poolContractInfo.address,poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve','migrationContract']);\n    if (migrationContractInfo){\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi){\n        migrationContract = await this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account=null,curveTokenBalance=null,max_slippage=null) => {\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage){\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]);\n        if (curveIdleTokens){\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage){\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account=null,curveTokenBalance=null,fixDecimals=false,useCoinIndex=false) => {\n\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals){\n          tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token,amount,deposit=false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount)>0){\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount,18);\n        if (!deposit){\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount,curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts,deposit=true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract){\n      return await this.genericContractCall(migrationContract.name,'calc_token_amount',[amounts,deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token,amount,deposit=true,uneven_amounts=null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract){\n\n      const n_coins = this.getGlobalConfig(['curve','params','n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)){\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins){\n        amounts = await this.getCurveAmounts(token,amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name,'get_virtual_price'),\n        this.genericContractCall(depositContract.name,'calc_token_amount',[amounts,deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount){\n        amount = this.fixTokenDecimals(amount,18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice,18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount,18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit){\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit){\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getStkAaveDistribution = async (tokenConfig,aTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getStkAaveDistribution_${tokenConfig.idle.token}_${aTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let aaveDistribution = this.BNify(0);\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    const aTokenConfig = tokenConfig.protocols.find( p => p.name === stkAAVETokenConfig.protocol );\n\n    if (!aTokenConfig || stkAAVETokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n      return aaveDistribution;\n    }\n\n    const aaveIncentivesController_address = await this.genericContractCall(aTokenConfig.token,'getIncentivesController');\n\n    // console.log('getStkAaveDistribution',tokenConfig.idle.token,aTokenConfig.token,aaveIncentivesController_address);\n\n    if (!aaveIncentivesController_address){\n      return aaveDistribution;\n    }\n\n    const IAaveIncentivesController_name = `IAaveIncentivesController_${aTokenConfig.token}`;\n    await this.props.initContract(IAaveIncentivesController_name,aaveIncentivesController_address,stkAAVETokenConfig.abi);\n\n    let [\n      aTokenTotalSupply,\n      tokenAllocation,\n      assetData,\n    ] = await Promise.all([\n      this.getTokenTotalSupply(aTokenConfig.token),\n      this.getTokenAllocation(tokenConfig,false,false),\n      this.genericContractCall(IAaveIncentivesController_name,'getAssetData',[aTokenConfig.address]),\n    ]);\n\n    if (assetData && tokenAllocation){\n\n      const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n\n      if (aaveAllocationPerc && aaveAllocationPerc.gte(0.001)){\n        if (!aTokenIdleSupply){\n          aTokenIdleSupply = await this.genericContractCall(aTokenConfig.token,'balanceOf',[tokenConfig.idle.address]);\n        }\n\n        const aaveSpeed = this.BNify(assetData[1]);\n        aTokenIdleSupply = this.BNify(aTokenIdleSupply);\n        aTokenTotalSupply = this.BNify(aTokenTotalSupply);\n        const secondsPerYear = this.getGlobalConfig(['network','secondsPerYear']);\n\n        const aavePoolShare = aTokenIdleSupply.div(aTokenTotalSupply);\n        aaveDistribution = aaveSpeed.times(aavePoolShare);\n\n        if (annualize){\n          aaveDistribution = aaveDistribution.div(1e18).times(secondsPerYear);\n        }\n\n        // console.log('getStkAaveDistribution',tokenConfig.idle.token,aTokenIdleSupply.toFixed(),aTokenTotalSupply.toFixed(),aavePoolShare.toFixed(),aaveSpeed.toFixed(),aaveDistribution.toFixed());\n\n        if (!this.BNify(aaveDistribution).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,aaveDistribution);\n        }\n      }\n    }\n\n    return aaveDistribution;\n  }\n  getStkAaveUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const aTokenInfo = tokenConfig.protocols.find( p => (p.name === stkAAVETokenConfig.protocol) );\n      if (aTokenInfo){\n        const [\n          userPoolShare,\n          aaveDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getStkAaveDistribution(tokenConfig,null,false),\n        ]);\n\n        if (aaveDistribution && userPoolShare){\n          output = output.plus(aaveDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getStkAaveApr = async (token,tokenConfig,aaveConversionRate=null) => {\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    if (!stkAAVETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getStkAaveApr_${tokenConfig.idle.token}_${aaveConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let stkAaveAPR = this.BNify(0);\n    const aaveDistribution = await this.getStkAaveDistribution(tokenConfig);\n\n    if (aaveDistribution && this.BNify(aaveDistribution).gt(0)){\n\n      // Get COMP conversion rate\n      if (!aaveConversionRate){\n        const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        try {\n          const destTokenConfig = {\n            address:stkAAVETokenConfig.addressForPrice || stkAAVETokenConfig.address\n          };\n          aaveConversionRate = await this.getUniswapConversionRate(DAITokenConfig,destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!aaveConversionRate || aaveConversionRate.isNaN()){\n          aaveConversionRate = this.BNify(1);\n        }\n      }\n\n      const stkAaveValue = this.BNify(aaveConversionRate).times(aaveDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        stkAaveAPR = stkAaveValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('getStkAaveApr',tokenConfig.idle.token,aaveDistribution.toFixed(),this.BNify(aaveConversionRate).toFixed(),stkAaveValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),stkAaveAPR.toFixed());\n\n        if (!this.BNify(stkAaveAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,stkAaveAPR);\n        }\n      }\n    }\n\n    return stkAaveAPR;\n  }\n  getCompAPR = async (token,tokenConfig,cTokenIdleSupply=null,compConversionRate=null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens','COMP']);\n    if (!COMPTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig,cTokenIdleSupply);\n\n    if (compDistribution){\n\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get COMP conversion rate\n      if (!compConversionRate){\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig,COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()){\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCall('Comptroller','compSpeeds',[cTokenAddress]);\n    if (compSpeed){\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig,cTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n    if (cTokenInfo){\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)){\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.genericContractCall(cTokenInfo.token,'totalSupply'),\n        ]);\n\n        if (compSpeed && cTokenTotalSupply){\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply){\n            cTokenIdleSupply = await this.genericContractCall(cTokenInfo.token,'balanceOf',[tokenConfig.idle.address]);\n          }\n\n          if (cTokenIdleSupply){\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network','blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize){\n              compDistribution = compDistribution.div(1e18).times(this.BNify(blocksPerYear));\n            }\n\n            if (!this.BNify(compDistribution).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (cTokenInfo){\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getCompDistribution(tokenConfig,null,false),\n        ]);\n\n        if (compDistribution && userPoolShare){\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens=null) => {\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr,tokenAllocation] = await Promise.all([\n        this.getCompAPR(token,tokenConfig),\n        this.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (compApr && tokenAllocation){\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function() {\n      return this.reduce(function(pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function() {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function() {\n      return this.sum()/this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,7200,'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length-1];\n\n        rates.forEach( r => {\n          if (!protocols){\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach( p1 => {\n              const foundProtocol = tokenConfig.protocols.find( p2 => ( p2.address.toLowerCase() === p1.protocolAddr.toLowerCase() ) );\n              if (foundProtocol){\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach( p => {\n              header.push('APR '+p.name);\n              header.push('SCORE '+p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp*1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach( pInfo => {\n            const pData = r.protocolsData.find( p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()) );\n            let pRate = '';\n            let pScore = '';\n            if (pData){\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined'){\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()){\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n                if (!isNaN(parseFloat(pRate))){\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))){\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach( p => {\n          const avgRate = aprAvg[p].sum()/aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach( p => {\n          const avgScore = scoreAvg[p].sum()/scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken=null,availableTokens=null,convertToken=null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address,convertToken,enabledTokens);\n      if (compTokenBalance && compTokenBalance.total){\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken){\n      this.idleGovToken = new IdleGovToken(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach( govToken => {\n      const govTokenConfig = govTokens[govToken];\n      if (!govTokenConfig.enabled || govTokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n      if (govTokenConfig.protocol === 'idle'){\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find( p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()) )\n        if (foundProtocol){\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed,frequency='day',mode='block') => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n    const secondsPerYear = this.BNify(this.getGlobalConfig(['network','secondsPerYear']));\n    const multipliers = {\n      'day':{\n        'block':blocksPerYear.div(365.242199),\n        'second':secondsPerYear.div(365.242199)\n      },\n      'week':{\n        'block':blocksPerYear.div(52.1429),\n        'second':secondsPerYear.div(52.1429)\n      },\n      'month':{\n        'block':blocksPerYear.div(12),\n        'second':secondsPerYear.div(12)\n      },\n      'year':{\n        'block':blocksPerYear.div(1),\n        'second':secondsPerYear.div(1)\n      }\n    };\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()){\n      return speed.times(multipliers[frequency][mode]);\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account,tokenConfig=null,enabledTokens=null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken){\n        case 'COMP':\n          output = await this.getCompUserDistribution(account,availableTokens);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account,availableTokens);\n        break;\n        default:\n        break;\n      }\n\n      if (output){\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig,enabledTokens=null) => {\n    const govTokensDistribution = {};\n    const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n    \n    await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n      let govSpeed = null;\n      const govTokenConfig = tokenGovTokens[govToken];\n\n      switch (govToken){\n        case 'COMP':\n          govSpeed = await this.getCompDistribution(tokenConfig,null,false);\n        break;\n        case 'stkAAVE':\n          govSpeed = await this.getStkAaveDistribution(tokenConfig,null,false);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n        break;\n        default:\n        break;\n      }\n\n      if (govSpeed){\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency && govTokenConfig.distributionMode){\n          govSpeed = this.fixDistributionSpeed(govSpeed,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token,tokenConfig,enabledTokens=null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false){\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken){\n        case 'stkAAVE':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getStkAaveApr(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the AAVE token proportionally on Idle funds allocation in aave\n              if (tokenAllocation){\n                const aTokenConfig = tokenConfig.protocols.find( p => (p.name === govTokenConfig.protocol) );\n                if (aTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()]){\n                    const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n                    output = output.times(aaveAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getCompAPR(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation){\n                const cTokenConfig = tokenConfig.protocols.find( p => (p.name === 'compound') );\n                if (cTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()]){\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode){\n            case 'apr':\n              output = await idleGovToken.getAPR(token,tokenConfig);\n            break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output){\n                output = this.fixTokenDecimals(output,18);\n                output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n              }\n            break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n            break;\n            default:\n            break;\n          }\n        break;\n        default:\n        break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)){\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address=null,convertToken='DAI',enabledTokens=null) => {\n    if (!address){\n      address = this.props.tokenConfig.idle.address;\n    }\n\n    const cachedDataKey = `getGovTokensBalances_${address}_${convertToken}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)){\n        return;\n      }\n      \n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const destTokenConfig = {\n        address:govTokenConfig.addressForPrice || govTokenConfig.address\n      };\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token,address);\n\n      if (govTokenBalance){\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken){\n          const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,destTokenConfig);\n          } catch (error) {\n            tokenConversionRate = this.BNify(0);\n          }\n        }\n\n        const tokenBalance = this.fixTokenDecimals(govTokenBalance,govTokens[token].decimals,tokenConversionRate);\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = tokenBalance;\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total){\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,govTokensBalances);\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address){\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find( tokenConfig => (tokenConfig.enabled && tokenConfig.address.toLowerCase() === address.toLowerCase()) );\n  }\n  getGovTokensUserTotalBalance = async (account=null,availableTokens=null,convertToken=null,checkShowBalance=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${JSON.stringify(availableTokens)}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,null,checkShowBalance);\n    if (govTokensUserBalances){\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce( (acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensIndexes = async (account,tokenConfig) => {\n    if (!account){\n      account = this.props.account;\n    }\n    const output = {};\n    const govTokensAmounts = await this.genericContractCall(tokenConfig.idle.token,'getGovTokensAmounts',[account]);\n    if (govTokensAmounts){\n      await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n        // Get gov Token config by index\n        const govTokenAddress = await this.genericContractCall(tokenConfig.idle.token,'govTokens',[govTokenIndex]);\n\n        if (govTokenAddress){\n          const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n\n          if (govTokenConfig){\n            output[govTokenConfig.token] = govTokenIndex;\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n  getGovTokensUserBalances = async (account=null,availableTokens=null,convertToken=null,govTokenConfigForced=null,checkShowBalance=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.genericContractCall(idleTokenConfig.token,'getGovTokensAmounts',[account]);\n\n      if (govTokensAmounts){\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.genericContractCall(idleTokenConfig.token,'govTokens',[govTokenIndex]);\n\n          if (govTokenAddress){\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()){\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken){\n                const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n                if (fromTokenConfig){\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n                  } catch (error) {\n                    \n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount,govTokenConfig.decimals,tokenConversionRate);\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]){\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCall(tokenConfig.idle.token, 'fee');\n    if (fee){\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig=null,account=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig){\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent',tokenConfig.token,tokenConfig,account),\n      this.loadAssetField('redeemableBalance',tokenConfig.token,tokenConfig,account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance){\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig,account=null,availableTokens=null,convertToken=null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce( (totalTVL,tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()){\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    },this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens:{},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(tokenConfig)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply,18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL,token,tokenConfig,isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (govTokenBalance && govTokenConversionRate){\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance,govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()){\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply){\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply,18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL,token,oldTokenConfig,isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()){\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint,false,config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length>0){\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey,latestFeed,endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAggregatedStats = async (addGovTokens=true) => {\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','tvls']);\n    const tvls = await this.makeCachedRequest(endpointInfo.endpoint,endpointInfo.TTL,true,false,config);\n\n    if (tvls){\n      const avgAPY = this.BNify(tvls.avgAPY);\n      const totalAUM = this.BNify(tvls.totalTVL);\n      return {\n        avgAPY,\n        totalAUM\n      };\n    } else {\n      return await this.getAggregatedStats_chain();\n    }\n  }\n  getAggregatedStats_chain = async (addGovTokens=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())){\n      return {\n        avgAPR:this.BNify(cachedData.avgAPR),\n        avgAPY:this.BNify(cachedData.avgAPY),\n        totalAUM:this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig,tokenAllocation,addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()){\n          const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig,isRisk);\n          totalAUM = totalAUM.plus(tokenAUM);\n          // console.log(tokenConfig.idle.token+'V4',tokenAUM.toFixed());\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()){\n            avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (tokenBalance && tokenConversionRate){\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance,govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()){\n                // console.log(tokenConfig.idle.token+'V4 - COMP',tokenBalanceConverted.toFixed());\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig,false,false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()){\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation,token,oldTokenConfig,isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy=null) => {\n\n    if (!this.props.availableStrategies || !this.props.account){\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy){\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig,this.props.account);\n        \n        if (migrationEnabled){\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol=null) => {\n    if (!this.props.account){\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools','tokenMigration','props','availableTokens']);\n    if (protocolsTokens){\n      await this.asyncForEach(Object.keys(protocolsTokens),async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase() ){\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi){\n          tokenContract = await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n        }\n        if (tokenContract){\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token,this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)){\n            tokenBalances[token] = {\n              tokenConfig,\n              balance:tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance,token,tokenConfig,isRisk=false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,isRisk);\n      if (tokenUsdConversionRate){\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n\n  getAvgAPYStats = async (address,isRisk,startTimestamp=null,endTimestamp=null) => {\n\n    const apiResults = await this.getTokenApiData(address,isRisk,startTimestamp,endTimestamp,true,7200);\n\n    if (apiResults && apiResults.length){\n      const apr = apiResults.reduce( (sum,r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate,18);\n        return sum.plus(idleRate);\n      },this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return this.BNify(0);\n  }\n\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig,isRisk,conversionRateField=null,count=0) => {\n\n    if (!conversionRateField){\n      conversionRateField = this.getGlobalConfig(['stats','tokens',tokenConfig.token,'conversionRateField']);\n      if (!conversionRateField){\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      // console.log('CACHED -',count,cachedDataKey,this.BNify(cachedData).toFixed());\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,null,'desc',1);\n\n    // console.log('TOKEN DATA - ',tokenConfig.address,isRisk,tokenData);\n\n    if (tokenData && tokenData.length){\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()){\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField],18);\n        if (!this.BNify(conversionRate).isNaN()){\n          // console.log('NOT CACHED -',count,cachedDataKey,this.BNify(conversionRate).toFixed());\n          return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n        }\n      }\n    } else {\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n      const conversionRate = await this.getUniswapConversionRate(DAITokenConfig,tokenConfig);\n      if (!this.BNify(conversionRate).isNaN()){\n        // console.log('NOT CACHED -',count,cachedDataKey,this.BNify(conversionRate).toFixed());\n        return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n      }\n    }\n\n    if (count<3){\n      return await this.getTokenConversionRate(tokenConfig,isRisk,conversionRateField,count+1); \n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config),\n      this.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenData && tokenAllocation){\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach( protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001) && tokenData.length>0){\n          const protocolInfo = tokenData[0].protocolsData.find( p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase()) );\n          if (protocolInfo){\n            const protocolScore = this.BNify(protocolInfo.defiScore);\n            if (!protocolScore.isNaN()){\n              tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n            }\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)){\n      tokenScore = await this.getTokenScoreApi(tokenConfig,isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.scores;\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}`;\n    let scores = await this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config);\n\n    if (scores && scores.length>0){\n      let tokenData = scores.find( s => s.address.toLowerCase() === tokenConfig.address.toLowerCase() );\n      if (tokenData){\n        let tokenScore = this.BNify(tokenData.idleScore);\n        if (tokenScore && tokenScore.gt(0)){\n          // Set cached data\n          return this.setCachedData(cachedDataKey,tokenScore);\n        // Take latest historical valid score\n        } else {\n          const timestamp = parseInt(Date.now()/1000);\n          const startTimestamp = parseInt(timestamp)-(60*60*24);\n          tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,null,true,null,'DESC');\n\n          const filteredTokenData = tokenData.filter( d => (this.BNify(d.idleScore).gt(0)) );\n          if (filteredTokenData.length){\n            tokenScore = this.BNify(filteredTokenData[0].idleScore);\n            if (!this.BNify(tokenScore).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n            }\n          }\n        }\n      }\n    }\n\n    return this.BNify(0);\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig,tokenAllocation=false,addGovTokens=true) => {\n\n    const tokenAprs = {\n      avgApr: this.BNify(0),\n      avgApy: this.BNify(0)\n    };\n\n    if (!tokenConfig.idle){\n      return tokenAprs;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgApr && !this.BNify(cachedData.avgApr).isNaN()) && (cachedData.avgApy && !this.BNify(cachedData.avgApy).isNaN()) ){\n      return {\n        avgApr:this.BNify(cachedData.avgApr),\n        avgApy:this.BNify(cachedData.avgApy)\n      };\n    }\n\n    const Aprs = await this.getAprs(tokenConfig.idle.token);\n\n    if (!Aprs){\n      return tokenAprs;\n    }\n\n    if (!tokenAllocation){\n      tokenAllocation = await this.getTokenAllocation(tokenConfig);\n    }\n\n    if (!tokenAllocation){\n      return tokenAprs;\n    }\n\n    const addresses = Aprs.addresses.map((addr,i) => { return addr.toString().toLowerCase() });\n    const aprs = Aprs.aprs;\n\n    const govTokensAprs = {};\n    const protocolsAprs = {};\n    const protocolsApys = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const protocolAddr = protocolInfo.address.toString().toLowerCase();\n      const addrIndex = addresses.indexOf(protocolAddr);\n      if ( addrIndex !== -1 ) {\n        let protocolApr = this.BNify(+this.toEth(aprs[addrIndex]));\n        let protocolApy = this.apr2apy(protocolApr.div(100)).times(100);\n\n        if (addGovTokens){\n          let govTokenAPR = null;\n          const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n          await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n            switch (govToken){\n              case 'COMP':\n                govTokenAPR = await this.getCompAPR(tokenConfig.token,tokenConfig);\n              break;\n              case 'stkAAVE':\n                govTokenAPR = await this.getStkAaveApr(tokenConfig.token,tokenConfig);\n              break;\n              default:\n              break;\n            }\n            if (govTokenAPR){\n              govTokensAprs[govToken] = govTokenAPR;\n            }\n          });\n          \n        }\n\n        protocolsApys[protocolAddr] = protocolApy;\n        protocolsAprs[protocolAddr] = protocolApr;\n      }\n    });\n\n    if (tokenAllocation){\n      tokenAprs.avgApr = this.getAvgApr(protocolsAprs,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n      tokenAprs.avgApy = this.getAvgApr(protocolsApys,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n\n      Object.values(govTokensAprs).forEach( govTokenAPR => {\n        tokenAprs.avgApr = tokenAprs.avgApr.plus(govTokenAPR);\n        tokenAprs.avgApy = tokenAprs.avgApy.plus(govTokenAPR);\n      });\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = this.getGlobalConfig(['govTokens','IDLE','showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens','IDLE','enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR){\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token,tokenConfig);\n        if (idleAPR){\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n\n      if (this.BNify(tokenAprs.avgApy).isNaN()){\n        tokenAprs.avgApy = this.BNify(0);\n      }\n      if (this.BNify(tokenAprs.avgApr).isNaN()){\n        tokenAprs.avgApr = this.BNify(0);\n      }\n\n      // console.log(tokenConfig.idle.token,tokenAprs,govTokensAprs);\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,tokenAprs);\n    }\n\n    return tokenAprs;\n  }\n  abbreviateNumber(value,decimals=3,maxPrecision=5,minPrecision=0){\n\n    const isNegative = parseFloat(value)<0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\",\"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1,maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value>=1000){\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2,decimals) : null;\n      newValue = parseInt(newValue).toString()+( decimalPart ? '.'+decimalPart : '' );\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue>=1 && (newValue.length-1)>maxPrecision){\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length-1)<minPrecision) {\n      const difference = minPrecision-(newValue.length-1);\n      const append = this.BNify(value).abs().toString().replace('.','').substr((newValue.length-1),difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative){\n      newValue = '-'+newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance,label,decimals,maxLen,highlightedDecimals){\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.','').length;\n    if (numLen>maxLen){\n      decimals = Math.max(0,decimals-(numLen-maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance%1).toPrecision(decimals).substr(2,decimals);;\n    decPart = (decPart+(\"0\".repeat(decimals))).substr(0,decimals);\n\n    if (highlightedDecimals){\n      const highlightedDec = decPart.substr(0,highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? ( <>{highlightedIntPart}<small style={{fontSize:'70%'}}>{decPart}</small> <Text.span fontSize={[1,2]}>{label}</Text.span></> ) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? ( <>{intPart}<small>.{decPart}</small>{ label !== '%' ? ' ' : null }{ label ? <Text.span fontSize={[1,2]}>{label}</Text.span> : null }</> ) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver:false\n  }\n\n  setMouseOver(mouseOver){\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p:0,\n      border:1,\n      boxShadow:1,\n      borderRadius:2,\n      borderColor:null,\n      position:'relative',\n      minHeight:'initial',\n      backgroundColor:'cardBg'\n    };\n\n    if (isActive || (isInteractive && this.state.mouseOver)){\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length){\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]){\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length>0 &&\n            <Flex\n              mt={[3,4]}\n              ml={[3,4]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              {...this.props.titleParentProps}\n            >\n              <Heading.h4\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n                {...this.props.titleProps}\n              >\n                {this.props.title}\n              </Heading.h4>\n              {\n                this.props.description && this.props.description.length>0 &&\n                  <Tooltip\n                    placement={'top'}\n                    message={this.props.description}\n                  >\n                    <Icon\n                      ml={2}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n              }\n            </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034','1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    alert:'#ff9900',\n    arrowActive:'#d8d8d8',\n    arrowInactive:'#4f4f4f',\n    selectBgFocused:'#1e3657',\n    selectBg:'#162e4d',\n    backButtonBg:'#162e4d',\n    lineChartStroke:'#a4aec6',\n    wrongNetworkBannerBg:'#0e2133',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    link:'#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg:'#162e4d',\n    menuBg:'#162e4d',\n    menuHover:'#1e3657',\n    flashColor:'#bac5ff',\n    cardBgHover:'#1e3657',\n    cardBorder:'#0d2034',\n    menuRightBorder:'#0d2034',\n    cardHoverShadow:'0px 0px 0px 1px rgb(45 74 114)',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    // console.log('onActivation',this.provider);\n\n    if (this.provider){\n\n      await this.provider.enable();\n\n      /*\n      // Subscribe to accounts change\n      this.provider.on(\"accountsChanged\", (accounts) => {\n        console.log('accountsChanged',accounts);\n      });\n\n      // Subscribe to chainId change\n      this.provider.on(\"chainChanged\", (chainId) => {\n        console.log('chainChanged',chainId);\n      });\n\n      // Subscribe to networkId change\n      this.provider.on(\"networkChanged\", (networkId) => {\n        console.log('networkChanged',networkId);\n      });\n\n      // Subscribe to session connection/open\n      this.provider.on(\"open\", () => {\n        console.log('open');\n      });\n\n      // Subscribe to session disconnection/close\n      this.provider.on(\"close\", (code, reason) => {\n        console.log('close',code, reason);\n      });\n      */\n\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura).forEach((networkId,index) => {\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: [defaultNetwork]\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: globalConfigs.network.providers.infura[defaultNetwork]+env.REACT_APP_INFURA_KEY\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              You should be on the {this.props.network.required.name} Ethereum\n              network. You are currently connected to the{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                {this.props.network.current.name}\n              </Text.span>{\" \"}\n              Network - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isCorrectNetwork === false && this.props.web3\n          ?\n            <WrongNetworkBanner\n              network={this.props.network}\n            />\n          :\n            null\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  const buttons = basicConnectorsName.map(connectorName => {\n\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageSrc={`images/${walletIcon}`}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/browser-wallet.png`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      await this.props.context.setFirstValidConnector(['Infura']);\n      this.props.setConnector('Infura',null);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\nimport { TerminalHttpProvider, SourceType } from '@terminal-packages/sdk';\n\nrequire('dotenv').config();\nconst INFURA_KEY = process.env[\"REACT_APP_INFURA_KEY\"];\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    window.initWeb3 = this.initWeb3;\n  }\n\n  componentDidMount = async () => {\n    this.initSimpleID();\n\n    // this.functionsUtil.customLog('RimbleWeb3 componentDidMount');\n    this.initWeb3();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // this.functionsUtil.customLog('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    if (prevProps.connectorName !== this.props.connectorName && this.props.connectorName){\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect') {\n        this.initWeb3();\n      }\n    } else if ( (this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      this.initWeb3();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    if (customAddressChanged){\n      this.initAccount();\n    }\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    const availableStrategiesChanged = prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies));\n\n    // Reset tokenDecimals if token is changed\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    if (tokenChanged/* || availableTokensChanged*/ || availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    const metamaskProvider = await detectEthereumProvider();\n    if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n      window.ethereum = metamaskProvider;\n    }\n\n    // Suppress console warning\n    if (window.ethereum && window.ethereum.autoRefreshOnNetworkChange) {\n      window.ethereum.autoRefreshOnNetworkChange = false;\n    }\n\n    const context = this.props.context;\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(globalConfigs.network.providers.infura[globalConfigs.network.requiredNetwork]+INFURA_KEY));\n\n    let web3 = context.library;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorNameChanged,context.connectorName,connectorName,setConnectorName);\n\n    if (!context.active || connectorNameChanged) {\n      // Select preferred web3 provider\n      if (connectorName && connectorNameChanged){\n        // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n        setConnectorName = connectorName;\n        await context.setConnector(connectorName);\n        // await context.setFirstValidConnector([connectorName, 'Infura']);\n        return web3;\n      }\n      /*\n      else if (setConnectorName){\n        // Catch WalletConnect unexpected disconnect and fallback to Infura\n        if (connectorName === 'WalletConnect' && connectorName === setConnectorName && last_context && last_context.active && last_context.connectorName==='WalletConnect' && !context.connectorName){\n          this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          this.functionsUtil.removeStoredItem('walletProvider');\n          this.functionsUtil.removeStoredItem('connectorName');\n          this.functionsUtil.setLocalStorage('context',JSON.stringify({active:context.active,connectorName:context.connectorName}));\n          setConnectorName = null;\n          await context.setConnector('Infura');\n          if (context.connector && typeof context.connector.disable === 'function'){\n            await context.connector.disable();\n          }\n        }\n\n        this.functionsUtil.customLog('initWeb3 skip due to setConnectorName ('+setConnectorName+') already set');\n        return web3;\n      }\n      */\n    }\n    /* else if (context.connectorName === \"WalletConnect\") {\n      if (!context.account) {\n\n        // WalletConnect already opened\n        if (document.getElementById('walletconnect-wrapper')){\n          return web3;\n        }\n\n        WalletConnectQRCodeModal.open(\n          context.connector.walletConnector.uri,\n          async () => {\n            document.getElementById('walletconnect-wrapper').remove();\n            this.props.setConnector('Infura',null);\n            await context.setConnector('Infura');\n            setConnectorName = null;\n          }\n        );\n      } else {\n        try {\n          WalletConnectQRCodeModal.close();\n        } catch {}\n      }\n    // Reset web3 if Infura\n    } */\n    /*\n    else if (context.active && (connectorName === 'Infura' || context.connectorName === \"Infura\")){\n      if (typeof web3.currentProvider.disable === 'function'){\n        await web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        await context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n    */\n\n    let web3Host = null;\n    let web3Provider = null;\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = globalConfigs.network.providers.infura[globalConfigs.network.requiredNetwork]+INFURA_KEY;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = globalConfigs.network.providers.infura[globalConfigs.network.requiredNetwork]+INFURA_KEY;\n        forceCallback = true;\n      }\n    }\n\n    const terminalInfo = globalConfigs.network.providers.terminal;\n\n    if (terminalInfo && terminalInfo.enabled && terminalInfo.supportedNetworks.indexOf(globalConfigs.network.requiredNetwork) !== -1 ){\n      const TerminalHttpProviderParams = terminalInfo.params;\n      const terminalSourceType = localStorage && localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : SourceType.Infura;\n      TerminalHttpProviderParams.source = terminalSourceType;\n\n      if (web3Provider){\n        TerminalHttpProviderParams.customHttpProvider = web3Provider;\n      } else if (web3Host){\n        TerminalHttpProviderParams.host = web3Host;\n      }\n\n      const terminalHttpProvider = new TerminalHttpProvider(TerminalHttpProviderParams);\n      web3 = new Web3(terminalHttpProvider);\n    } else {\n      // Injected web3 provider\n      if (web3Provider){\n        web3 = new Web3(web3Provider);\n      // Infura\n      } else if (web3Host) {\n        web3 = new Web3(new Web3.providers.HttpProvider(web3Host));\n        if (connectorName !== 'Infura'){\n          this.props.setConnector('Infura',null);\n        }\n      }\n    }\n\n    const web3Callback = async () => {\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // After setting the web3 provider, check network\n      try {\n        await this.checkNetwork();\n        if (this.state.network.isCorrectNetwork){\n\n          if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          }\n\n          if (context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n            await this.setState({\n              accountInizialized: true,\n              account: this.props.customAddress\n            });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(globalConfigs.network.requiredNetwork) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      if (this.state.biconomy === null){\n        const biconomyWeb3Provider = web3Provider ? web3Provider : web3Host;\n\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || this.state.biconomy === biconomy){\n              return false;\n            }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              permitClient,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, web3Callback);\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            // console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                web3Infura,\n                biconomy:false\n              }, web3Callback);\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            web3Infura,\n            biconomy:false\n          }, web3Callback);\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3,\n          web3Infura,\n        }, web3Callback);\n      } else if (context.account || forceCallback){\n        web3Callback();\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`Init contract: ${name}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`creating contract ${name} - addr: ${address}`);\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : this.state.web3;\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      this.setState(state => ({\n        ...state,\n        contracts: [...state.contracts, {name, contract}]\n      }));\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(globalConfigs.network.requiredNetwork) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      });\n\n      // After account is complete, get the balance\n      this.getAccountBalance();\n\n      return false;\n    }\n\n    try {\n      if (!account){\n        const wallets = await this.state.web3.eth.getAccounts();\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account || this.state.account === account){\n        this.setState({\n          accountInizialized: true\n        });\n        return false;\n      }\n\n      // Request account access if needed\n      if (account && walletProvider !== 'Infura'){\n\n        if (walletProvider === 'Infura'){\n          this.setState({\n            accountInizialized: true,\n            account:this.props.customAddress\n          });\n          return false;\n        }\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        /*\n        // Unsubscribes to all subscriptions\n        if (this.state.web3SocketProvider && typeof this.state.web3SocketProvider.clearSubscriptions === 'function'){\n          this.functionsUtil.customLog('Clear all web3SocketProvider subscriptions');\n          this.state.web3SocketProvider.clearSubscriptions();\n        }\n\n        const networkName = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork].toLowerCase();\n        const web3SocketProvider = new Web3(new Web3.providers.WebsocketProvider(`wss://${networkName}.infura.io/ws/v3/${INFURA_KEY}`));\n\n        // Subscribe to logs\n        const addressTopic = '0x00000000000000000000000'+account.toLowerCase().replace('x','');\n\n        // Subscribe for payment methods\n        const paymentProviders = Object.keys(globalConfigs.payments.providers).filter((providerName,i) => { const providerInfo = globalConfigs.payments.providers[providerName]; return providerInfo.enabled && providerInfo.web3Subscription && providerInfo.web3Subscription.enabled  })\n        if (paymentProviders && paymentProviders.length){\n          paymentProviders.forEach((providerName,i) => {\n            const providerInfo = globalConfigs.payments.providers[providerName];\n\n            this.functionsUtil.customLog(`Subscribe to ${providerName} logs`);\n\n            // Subscribe for deposit transactions\n            web3SocketProvider.eth.subscribe('logs', {\n                address: [account,providerInfo.web3Subscription.contractAddress],\n                topics: [null,[addressTopic]]\n            }, function(error, result){\n              \n            })\n            .on(\"data\", async (log) => {\n              this.functionsUtil.customLog(providerName,'logs',log);\n\n              if (log){\n                const txHash = log.transactionHash;\n                const subscribedTransactions = this.state.subscribedTransactions;\n                const walletAddressFound = log.topics.filter((addr,i) => { return addr.toLowerCase().includes(addressTopic); });\n\n                this.functionsUtil.customLog(providerName,txHash,walletAddressFound);\n\n                if (!subscribedTransactions[txHash] && walletAddressFound.length){\n                  const decodedLogs = web3SocketProvider.eth.abi.decodeLog(providerInfo.web3Subscription.decodeLogsData,log.data,log.topics);\n\n                  this.functionsUtil.customLog(providerName,txHash,decodedLogs);\n\n                  if (decodedLogs && decodedLogs._tokenAmount && decodedLogs._tokenAddress && decodedLogs._tokenAddress.toLowerCase() === this.props.tokenConfig.address.toLowerCase()){\n\n                    const receiptCallback = async (tx,decodedLogs) => {\n                      const tokenDecimals = await this.getTokenDecimals();\n                      const tokenAmount = this.functionsUtil.BNify(decodedLogs._tokenAmount);\n                      const tokenAmountFixed = this.functionsUtil.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      const tokenAmountFormatted = parseFloat(tokenAmountFixed.toString()).toFixed(2);\n                      const isProviderTx = tx.from.toLowerCase() === account.toLowerCase() && tx.to.toLowerCase() === providerInfo.web3Subscription.contractAddress.toLowerCase();\n\n                      if (isProviderTx){\n\n                        // Mined\n                        if (tx.blockNumber && tx.status){\n                          // Toast message\n                          window.showToastMessage({\n                            variant:'success',\n                            message:'Deposit completed',\n                            secondaryMessage:`${providerName} sent you ${tokenAmountFormatted} ${this.props.selectedToken}`,\n                          });\n\n                          // Update User Balance\n                          this.getAccountBalance(tokenAmount);\n                        } else {\n                          // Toast message\n                          window.showToastMessage({\n                            variant:'processing',\n                            message:'Deposit pending',\n                            secondaryMessage:`${providerName} is sending ${tokenAmountFormatted} ${this.props.selectedToken}`,\n                          });\n                        }\n                      }\n                    }\n\n                    let checkTransactionReceiptTimeoutID = null;\n\n                    const checkTransactionReceipt = (txHash,decodedLogs) => {\n                      if (checkTransactionReceiptTimeoutID){\n                        window.clearTimeout(checkTransactionReceiptTimeoutID);\n                      }\n                      web3SocketProvider.eth.getTransactionReceipt(txHash,(err,txReceipt)=>{\n                        if (!err){\n                          if (txReceipt){\n                            receiptCallback(txReceipt,decodedLogs);\n                          } else{\n                            checkTransactionReceiptTimeoutID = window.setTimeout(() => { checkTransactionReceipt(txHash,decodedLogs) },3000);\n                          }\n                        }\n                      });\n                    }\n\n                    checkTransactionReceipt(txHash,decodedLogs);\n\n                    subscribedTransactions[txHash] = log;\n                    this.setState({subscribedTransactions});\n                  }\n                }\n              }\n            });\n          })\n        }\n\n        // Subscribe for deposit transactions\n        web3SocketProvider.eth.subscribe('logs', {\n            address: [account,this.props.tokenConfig.address],\n            topics: [null,null,[addressTopic]]\n        }, function(error, result){\n\n        })\n        .on(\"data\", async (log) => {\n          if (log){\n            const txHash = log.transactionHash;\n            const subscribedTransactions = this.state.subscribedTransactions;\n            const walletAddressFound = log.topics.filter((addr,i) => { return addr.toLowerCase().includes(addressTopic); });\n\n            if (!subscribedTransactions[txHash] && walletAddressFound.length){\n              const decodedLogs = web3SocketProvider.eth.abi.decodeLog([\n                {\n                  \"internalType\": \"uint256\",\n                  \"name\": \"_tokenAmount\",\n                  \"type\": \"uint256\"\n                },\n              ],log.data,log.topics);\n\n              if (decodedLogs && decodedLogs._tokenAmount){\n\n                const receiptCallback = async (tx,decodedLogs) => {\n                  const tokenDecimals = await this.getTokenDecimals();\n                  const tokenAmount = this.functionsUtil.BNify(decodedLogs._tokenAmount);\n                  const tokenAmountFixed = this.functionsUtil.fixTokenDecimals(tokenAmount,tokenDecimals);\n                  const tokenAmountFormatted = parseFloat(tokenAmountFixed.toString()).toFixed(2);\n                  const isDepositTokenTx = tx.to.toLowerCase() === this.props.tokenConfig.address.toLowerCase();\n\n                  if (isDepositTokenTx){\n\n                    // Mined\n                    if (tx.blockNumber && tx.status){\n                      // Toast message\n                      window.showToastMessage({\n                        message:'Deposit completed',\n                        secondaryMessage: `${tokenAmountFormatted} ${this.props.selectedToken} has been deposited`,\n                        variant: \"success\",\n                      });\n\n                      // Update User Balance\n                      this.getAccountBalance(tokenAmount);\n                    } else {\n                      // Toast message\n                      window.showToastMessage({\n                        message:'Deposit pending',\n                        secondaryMessage: `${tokenAmountFormatted} ${this.props.selectedToken} are on the way`,\n                        variant: \"processing\",\n                      });\n                    }\n                  }\n                }\n\n                let checkTransactionReceiptTimeoutID = null;\n\n                const checkTransactionReceipt = (txHash,decodedLogs) => {\n                  if (checkTransactionReceiptTimeoutID){\n                    window.clearTimeout(checkTransactionReceiptTimeoutID);\n                  }\n                  web3SocketProvider.eth.getTransactionReceipt(txHash,(err,txReceipt)=>{\n                    if (!err){\n                      if (txReceipt){\n                        receiptCallback(txReceipt,decodedLogs);\n                      } else{\n                        checkTransactionReceiptTimeoutID = window.setTimeout(() => { checkTransactionReceipt(txHash,decodedLogs) },3000);\n                      }\n                    }\n                  });\n                }\n\n                checkTransactionReceipt(txHash,decodedLogs);\n\n                subscribedTransactions[txHash] = log;\n                this.setState({subscribedTransactions});\n              }\n            }\n          }\n        })\n        .on(\"changed\", log => {\n          \n        });\n        */\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // this.functionsUtil.customLog(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    const contracts = this.functionsUtil.getGlobalConfig(['contracts']);\n    await this.functionsUtil.asyncForEach(Object.keys(contracts),async (contractName) => {\n      const contractInfo = contracts[contractName];\n      if (contractInfo.address !== null && contractInfo.abi !== null){\n        this.functionsUtil.customLog('initializeContracts, init contract', contractName, contractInfo.address);\n        await this.initContract(contractName, contractInfo.address, contractInfo.abi);\n      }\n    });\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    await this.functionsUtil.asyncForEach(Object.keys(govTokens),async (token) => {\n      const govTokenConfig = govTokens[token];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      // Initialize govToken contracts\n      let foundGovTokenContract = this.state.contracts.find(c => c.name === token);\n      if (!foundGovTokenContract) {\n        this.functionsUtil.customLog('initializeContracts, init contract', token, govTokenConfig.address);\n        await this.initContract(token, govTokenConfig.address, govTokenConfig.abi);\n      }\n    });\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n        \n        const availableTokens = this.props.availableStrategies[strategy];\n\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          let foundTokenContract = this.state.contracts.find(c => c.name === token);\n          if (!foundTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            await this.initContract(token, tokenConfig.address, tokenConfig.abi);\n          }\n\n          // Initialize idleTokens contracts\n          let foundIdleTokenContract = this.state.contracts.find(c => c.name === tokenConfig.idle.token);\n          if (!foundIdleTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            await this.initContract(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi);\n          }\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n            if (!foundProtocolContract) {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              await this.initContract(p.token, p.address, p.abi);\n            }\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              await this.initContract(oldContract.name, oldContract.address, oldContract.abi);\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n                if (!foundProtocolContract) {\n                  this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                  await this.initContract(p.token, p.address, p.abi);\n                }\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              await this.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n            }\n          }\n        })\n      });\n    }\n\n    return this.setState({\n      contractsInitialized:true\n    });\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n\n    const networkId =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.requiredNetwork !== \"undefined\"\n        ? this.props.config.requiredNetwork\n        : globalConfigs.network.requiredNetwork;\n\n    let networkName = globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId] : 'unknown';\n\n    let requiredNetwork = {\n      name: networkName,\n      id: networkId\n    };\n\n    let network = { ...this.state.network };\n    network.required = requiredNetwork;\n\n    this.setState({ network });\n  }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = { ...this.state.network };\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  getNetworkName = async () => {\n    try {\n      return this.state.web3.eth.net.getNetworkType((error, networkName) => {\n        let current = { ...this.state.network.current };\n        current.name = networkName;\n        let network = { ...this.state.network };\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network Name: \", error);\n    }\n  }\n\n  checkNetwork = async () => {\n    this.getRequiredNetwork();\n\n    await Promise.all([\n      this.getNetworkId(),\n      this.getNetworkName()\n    ]);\n\n    let network = { ...this.state.network };\n    network.isCorrectNetwork = this.state.network.current.id === this.state.network.required.id;\n\n    // console.log('checkNetwork',this.state.network.current.id,this.state.network.required.id);\n\n    // To do, check window.web3.currentProvider.networkVersion to see if Metamask is in the requiredNetwork\n\n    this.setState({ network });\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas/*, common*/ } : { from: account, gas/*, common*/ })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n\n    // this.functionsUtil.customLog('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n\n    modals.data.connectionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    transactions: {},\n    CrispClient: null,\n    permitClient:null,\n    tokenDecimals:null,\n    accountBalance: null,\n    web3Subscription: null,\n    accountValidated: null,\n    accountBalanceDAI: null,\n    erc20ForwarderClient:null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    accountInizialized:false,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                position={'relative'}\n                src={'images/logo.svg'}\n                height={['35px','48px']}\n              />\n            </RouterLink>\n          </Flex>\n            <Flex\n              width={[0.5,8/12]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={\"flex-end\"}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    mr={4}\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile &&\n                  <>\n                    <Link\n                      mr={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n              }\n            </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport fToken from '../abis/fuse/fToken.json';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport crToken from '../abis/cream/crToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n    },\n  },\n  1337:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:USDC,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n    }\n  },\n  1:{ // Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token:'aDAIv2',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            name:'aavev2',\n            token:'aUSDCv2',\n            address:'0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            name:'aavev2',\n            enabled:true,\n            token:'aUSDTv2',\n            address:'0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'aavev2',\n            enabled:true,\n            abi:aToken,\n            address:'0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token:'aSUSDv2',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aTUSDv2',\n            address:'0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            token:'cWBTC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xc11b1268c1a384e55c48c2391d8d480264a3a7f4',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:false,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'aWBTC',\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aWBTCv2',\n            address:'0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      RAI:{\n        deposit:{},\n        token:'RAI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(169,42%,37%)',\n        icon:'images/tokens/RAI.png',\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleRAIYield',\n          address:'0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crRAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fRAI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from 'jquery';\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from './connectors';\nimport Web3Provider from 'web3-react';\nimport { Web3Consumer } from 'web3-react';\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from '../configs/availableTokens';\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from 'rimble-ui';\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import('../Dashboard/Dashboard'));\nconst Governance = React.lazy(() => import('../Governance/Governance'));\n\nclass App extends Component {\n  state = {\n    cachedData:{},\n    buyToken: null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode:'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme:theme,\n    currentSection:null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  closeToastMessage = (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps:null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps:props\n    });\n  }\n\n  processCustomParam = (props,prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = () => {\n    this.functionsUtil.setLocalStorage('cachedData',{},true);\n    this.setState({\n      cachedData:{}\n    });\n    return true;\n  }\n\n  setCachedData = (key,data,TTL=null,useLocalStorage=false) => {\n\n    key = key.toLowerCase();\n    const cachedKeyFound = this.state.cachedData[key];\n    const currentTime = parseInt(Date.now()/1000);\n\n    const update_key = !cachedKeyFound || ( (!cachedKeyFound.expirationDate || cachedKeyFound.expirationDate>=currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data));\n\n    let output = false;\n\n    if (update_key){\n      const expirationDate = TTL ? currentTime+(TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage){\n        let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n        if (!storedCachedData){\n          storedCachedData = {};\n        }\n        storedCachedData = {\n          ...storedCachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        };\n        // console.log('STORED CACHE - INSERT KEY',key,data);\n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        }\n      }));\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)){\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress){\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw:false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({...state, selectedTab: tabIndex}));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const requiredNetwork = globalConfigs.network.requiredNetwork;\n\n    // Load available strategies\n    Object.keys(availableTokens[requiredNetwork]).forEach((strategy) => {\n      availableStrategies[strategy] = Object.keys(availableTokens[requiredNetwork][strategy]).reduce( (enabledTokens,token) => {\n        const tokenConfig = availableTokens[requiredNetwork][strategy][token];\n        if (tokenConfig.enabled){\n          enabledTokens[token] = tokenConfig;\n        }\n        return enabledTokens;\n      },{});\n    });\n\n    newState.availableStrategies = availableStrategies;\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && this.state.availableStrategies[selectedStrategy]){\n      newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]){\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy,selectedToken){\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    const newState = {\n      tokenConfig:!selectedToken ? null : this.state.tokenConfig,\n      availableTokens:!selectedToken ? null : this.state.availableTokens,\n      selectedToken:!selectedToken ? selectedToken :this.state.selectedToken,\n      selectedStrategy:!selectedStrategy ? selectedStrategy :this.state.selectedStrategy,\n    };\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken) {\n      if ( this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase()) ){\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',newState);\n\n    await this.setState(newState,callback);\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      },callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      },callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())){\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState,callback);\n    } else if(!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig:null\n      },callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction){\n      window.console.error = () => {};\n      window.console.warn = () => {};\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage){\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version',false);\n      if (version !== globalConfigs.version){\n        this.functionsUtil.clearStoredData(['walletProvider','connectorName','themeMode']);\n        this.functionsUtil.setLocalStorage('version',globalConfigs.version);\n      }\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode',false);\n    if (themeMode){\n      this.setThemeMode(themeMode);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i=0;i<iFrames.length;i++){\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w){\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCustomAddress();\n    this.loadAvailableTokens();\n  }\n\n  loadCustomAddress(){\n    if (!this.state.customAddress){\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom'){\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress){\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged){\n      if (this.state.currentSection === 'landing'){\n        this.setThemeMode('light',false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode',false) || this.functionsUtil.getGlobalConfig(['dashboard','theme','mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n\n    if (tokenChanged || strategyChanged){\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n      window.parent.closeIframe(window.self);\n    }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage){\n      const connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      const walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      this.setConnector(connectorName,walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width:this.state.width,\n      height:this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged){\n      if (widthChanged){\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged){\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  // Optional parameters to pass into RimbleWeb3\n  config = globalConfigs.network;\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e){\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken:null,\n      buyModalOpened:false\n    });\n  }\n\n  openBuyModal(e,buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened:true\n    });\n  }\n\n  async logout(){\n    // Reset Custom Address\n    this.setState({\n      customAddress:null\n    });\n    // Reset Localstorage\n    this.functionsUtil.clearStoredData(['version','themeMode','lastLogin']);\n  }\n\n  setConnector(connectorName,walletProvider){\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider){\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    if ( (connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if ( connectorName === 'Injected' ){\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider){\n        case 'Metamask':\n          if (!hasMetamask && hasDapper){\n            walletProvider = 'Dapper';\n          }\n        break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask){\n            walletProvider = 'Metamask';\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    },() => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode,store=true){\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard','theme','darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled){\n      themeMode = 'light';\n    }\n\n    switch (themeMode){\n      default:\n      case 'light':\n        selectedTheme = theme;\n      break;\n      case 'dark':\n        selectedTheme = themeDark;\n      break;\n    }\n\n    if (store){\n      this.functionsUtil.setLocalStorage('themeMode',themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection){\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize:4,\n            fontWeight:2\n          }}\n          loaderProps={{\n            mb:3,\n            size:'80px',\n            color:'primary'\n          }}\n          flexProps={{\n            my:3,\n            flexDirection:'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer>\n              {context => {\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    config={this.config}\n                    connectors={connectors}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        accountBalanceLow,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper\n                      }) => {\n                        return (\n                        <Box>\n                          <Switch>\n                            <Route\n                              path=\"/dashboard/:section?/:param1?/:param2?\"\n                              render={\n                                (props) => \n                                  <Suspense\n                                    fallback={SuspenseLoader}\n                                  >\n                                    <Dashboard\n                                      {...props}\n                                      web3={web3}\n                                      modals={modals}\n                                      network={network}\n                                      context={context}\n                                      account={account}\n                                      isDashboard={true}\n                                      initWeb3={initWeb3}\n                                      biconomy={biconomy}\n                                      isMobile={isMobile}\n                                      simpleID={simpleID}\n                                      contracts={contracts}\n                                      initAccount={initAccount}\n                                      permitClient={permitClient}\n                                      initSimpleID={initSimpleID}\n                                      initContract={initContract}\n                                      transactions={transactions}\n                                      buyToken={this.state.buyToken}\n                                      logout={this.logout.bind(this)}\n                                      accountBalance={accountBalance}\n                                      themeMode={this.state.themeMode}\n                                      theme={this.state.selectedTheme}\n                                      validateAccount={validateAccount}\n                                      connecting={this.state.connecting}\n                                      cachedData={this.state.cachedData}\n                                      setToken={this.setToken.bind(this)}\n                                      accountValidated={accountValidated}\n                                      getTokenDecimals={getTokenDecimals}\n                                      rejectValidation={rejectValidation}\n                                      tokenConfig={this.state.tokenConfig}\n                                      getAccountBalance={getAccountBalance}\n                                      accountBalanceLow={accountBalanceLow}\n                                      accountInizialized={accountInizialized}\n                                      selectedToken={this.state.selectedToken}\n                                      connectorName={this.state.connectorName}\n                                      setStrategy={this.setStrategy.bind(this)}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountBalanceToken={accountBalanceToken}\n                                      initializeContracts={initializeContracts}\n                                      walletProvider={this.state.walletProvider}\n                                      buyModalOpened={this.state.buyModalOpened}\n                                      erc20ForwarderClient={erc20ForwarderClient}\n                                      contractsInitialized={contractsInitialized}\n                                      openBuyModal={this.openBuyModal.bind(this)}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      handleMenuClick={this.selectTab.bind(this)}\n                                      setConnector={this.setConnector.bind(this)}\n                                      setThemeMode={this.setThemeMode.bind(this)}\n                                      availableTokens={this.state.availableTokens}\n                                      closeBuyModal={this.closeBuyModal.bind(this)}\n                                      setCachedData={this.setCachedData.bind(this)}\n                                      selectedStrategy={this.state.selectedStrategy}\n                                      userRejectedValidation={userRejectedValidation}\n                                      clearCachedData={this.clearCachedData.bind(this)}\n                                      setStrategyToken={this.setStrategyToken.bind(this)}\n                                      accountValidationPending={accountValidationPending}\n                                      availableStrategies={this.state.availableStrategies}\n                                      setCurrentSection={this.setCurrentSection.bind(this)}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      contractMethodSendWrapper={contractMethodSendWrapper}\n                                      setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                    />\n                                  </Suspense>\n\n                              }\n                            >\n                            </Route>\n                            {\n                              governanceEnabled && \n                                <Route\n                                  path=\"/governance/:section?/:item_id?\"\n                                  render={\n                                    (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Governance\n                                          {...props}\n                                          web3={web3}\n                                          modals={modals}\n                                          network={network}\n                                          context={context}\n                                          account={account}\n                                          initWeb3={initWeb3}\n                                          biconomy={biconomy}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          isGovernance={true}\n                                          contracts={contracts}\n                                          initAccount={initAccount}\n                                          initSimpleID={initSimpleID}\n                                          initContract={initContract}\n                                          transactions={transactions}\n                                          buyToken={this.state.buyToken}\n                                          logout={this.logout.bind(this)}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          validateAccount={validateAccount}\n                                          connecting={this.state.connecting}\n                                          cachedData={this.state.cachedData}\n                                          setToken={this.setToken.bind(this)}\n                                          accountValidated={accountValidated}\n                                          getTokenDecimals={getTokenDecimals}\n                                          rejectValidation={rejectValidation}\n                                          tokenConfig={this.state.tokenConfig}\n                                          getAccountBalance={getAccountBalance}\n                                          accountBalanceLow={accountBalanceLow}\n                                          accountInizialized={accountInizialized}\n                                          selectedToken={this.state.selectedToken}\n                                          connectorName={this.state.connectorName}\n                                          setStrategy={this.setStrategy.bind(this)}\n                                          userRejectedConnect={userRejectedConnect}\n                                          accountBalanceToken={accountBalanceToken}\n                                          initializeContracts={initializeContracts}\n                                          walletProvider={this.state.walletProvider}\n                                          buyModalOpened={this.state.buyModalOpened}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          rejectAccountConnect={rejectAccountConnect}\n                                          handleMenuClick={this.selectTab.bind(this)}\n                                          setConnector={this.setConnector.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          availableTokens={this.state.availableTokens}\n                                          closeBuyModal={this.closeBuyModal.bind(this)}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          selectedStrategy={this.state.selectedStrategy}\n                                          userRejectedValidation={userRejectedValidation}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          setStrategyToken={this.setStrategyToken.bind(this)}\n                                          accountValidationPending={accountValidationPending}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          contractMethodSendWrapper={contractMethodSendWrapper}\n                                          setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        />\n                                      </Suspense>\n                                  }\n                                >\n                                </Route>\n                            }\n                            <Route>\n                              <Header\n                                modals={modals}\n                                network={network}\n                                context={context}\n                                account={account}\n                                initWeb3={initWeb3}\n                                isMobile={isMobile}\n                                contracts={contracts}\n                                initAccount={initAccount}\n                                initContract={initContract}\n                                buyToken={this.state.buyToken}\n                                accountBalance={accountBalance}\n                                logout={this.logout.bind(this)}\n                                validateAccount={validateAccount}\n                                connecting={this.state.connecting}\n                                accountValidated={accountValidated}\n                                getTokenDecimals={getTokenDecimals}\n                                rejectValidation={rejectValidation}\n                                tokenConfig={this.state.tokenConfig}\n                                getAccountBalance={getAccountBalance}\n                                accountBalanceLow={accountBalanceLow}\n                                selectedToken={this.state.selectedToken}\n                                connectorName={this.state.connectorName}\n                                userRejectedConnect={userRejectedConnect}\n                                accountBalanceToken={accountBalanceToken}\n                                walletProvider={this.state.walletProvider}\n                                buyModalOpened={this.state.buyModalOpened}\n                                contractsInitialized={contractsInitialized}\n                                openBuyModal={this.openBuyModal.bind(this)}\n                                rejectAccountConnect={rejectAccountConnect}\n                                handleMenuClick={this.selectTab.bind(this)}\n                                setConnector={this.setConnector.bind(this)}\n                                availableTokens={this.state.availableTokens}\n                                closeBuyModal={this.closeBuyModal.bind(this)}\n                                userRejectedValidation={userRejectedValidation}\n                                accountValidationPending={accountValidationPending}\n                                connectAndValidateAccount={connectAndValidateAccount}\n                                setToken={ e => { this.setToken(e) } }\n                              />\n\n                              {this.state.route === \"onboarding\" ? (\n                                <Web3Debugger\n                                  web3={web3}\n                                  account={account}\n                                  accountBalance={accountBalance}\n                                  accountBalanceToken={accountBalanceToken}\n                                  accountBalanceLow={accountBalanceLow}\n                                  initAccount={initAccount}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountValidated={accountValidated}\n                                  accountValidationPending={accountValidationPending}\n                                  rejectValidation={rejectValidation}\n                                  userRejectedValidation={userRejectedValidation}\n                                  validateAccount={validateAccount}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  modals={modals}\n                                  network={network}\n                                  transaction={transaction}\n                                />\n                              ) : null}\n\n                              {this.state.route === \"default\" ? (\n                                <Switch>\n                                  <Route exact path=\"/\"\n                                    render={ (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Landing\n                                          {...props}\n                                          web3={web3}\n                                          network={network}\n                                          account={account}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          contracts={contracts}\n                                          initContract={initContract}\n                                          innerWidth={this.state.width}\n                                          logout={this.logout.bind(this)}\n                                          innerHeight={this.state.height}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          cachedData={this.state.cachedData}\n                                          connecting={this.state.connecting}\n                                          selectedTab={this.state.selectedTab}\n                                          tokenConfig={this.state.tokenConfig}\n                                          accountBalanceLow={accountBalanceLow}\n                                          getAccountBalance={getAccountBalance}\n                                          customAddress={this.state.customAddress}\n                                          selectedToken={this.state.selectedToken}\n                                          accountBalanceToken={accountBalanceToken}\n                                          closeToastMessage={this.closeToastMessage}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          processCustomParam={this.processCustomParam}\n                                          availableTokens={this.state.availableTokens}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          updateSelectedTab={this.selectTab.bind(this)}\n                                          toastMessageProps={this.state.toastMessageProps}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          setToken={ e => { this.setToken(e) } }\n                                        />\n                                        <CookieConsent\n                                          expires={365}\n                                          buttonText={\"Ok\"}\n                                          location={\"bottom\"}\n                                          acceptOnScroll={true}\n                                          cookieName={\"cookieAccepted\"}\n                                          acceptOnScrollPercentage={5}\n                                          style={{background: \"rgba(255,255,255,0.95)\",zIndex:'9999999'}}\n                                          buttonStyle={{display: isMobile ? \"block\" : \"none\", backgroundColor:'#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\"}}\n                                        >\n                                          <Flex flexDirection={'row'} alignItems={['flex-start','center']} justifyContent={'flex-start'} maxHeight={['150px','initial']} style={ isMobile ? {overflowY:'scroll'} : null }>\n                                            <Image display={['none','block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                            <Text pl={[0,3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                              This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                              You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                            </Text>\n                                          </Flex>\n                                        </CookieConsent>\n                                      </Suspense>\n                                    }\n                                  ></Route>\n                                  <Route exact path=\"/terms-of-service\">\n                                    <Tos />\n                                  </Route>\n                                  <Route>\n                                    <PageNotFound />\n                                  </Route>\n                                </Switch>\n                              ) : null}\n                            </Route>\n                          </Switch>\n                          <TransactionToastUtil\n                            transactions={transactions}\n                            themeMode={this.state.themeMode}\n                          />\n                        </Box>\n                      )}}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={ isInteractive ? e => this.props.handleClick(this.props) : null }\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={fieldInfo.style || {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            <FieldComponent\n                              {...this.props}\n                              fieldInfo={fieldInfo}\n                              colProps={colInfo.props}\n                              parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            />\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            web3={this.props.web3}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          web3={this.props.web3}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      web3={this.props.web3}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens[token];\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                return (\n                  <ImageButton\n                    caption={token}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    imageSrc={`images/tokens/${token}.svg`}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} my={0}>\n                {\n                  this.props.showInline && this.props.buyToken ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `How do you prefer to buy ${this.state.selectedToken}?`\n                }\n              </Text>\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  maxWidth={ this.props.showInline ? '35em' : 'initial' }\n                  width={ (this.props.showInline && !this.props.isMobile) ? 0.72 : 1 }\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={`images/tokens/${token}.svg`} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.notion.so/idlelabs/Idle-Finance-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import React, { Component } from 'react';\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign({\n      py:1,\n      width:'auto',\n      px:['12px',3],\n    },this.props.cardProps);\n\n    return (\n       <DashboardCard\n         cardProps={cardProps}\n         isInteractive={true}\n         isActive={this.props.isActive}\n         handleClick={this.props.handleClick}\n       >\n         <Flex\n           my={1}\n           alignItems={'center'}\n           flexDirection={'row'}\n           justifyContent={'center'}\n         >\n          {\n            this.props.image ? (\n              <Image\n                align={'center'}\n                src={this.props.image}\n                height={ this.props.isMobile ? '1.2em' : '1.4em' }\n                width={ this.props.isMobile ? '1.2em' : '1.4em' }\n                {...this.props.imageProps}\n              />\n            ) : this.props.useIconOnly ? (\n              <Icon\n                align={'center'}\n                name={this.props.icon}\n                size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n                {...this.props.iconProps}\n              />\n            ) : (\n             <Flex\n               mr={2}\n               p={['4px','7px']}\n               borderRadius={'50%'}\n               alignItems={'center'}\n               justifyContent={'center'}\n               backgroundColor={ this.props.iconBgColor ? this.props.iconBgColor : this.props.theme.colors.transactions.actionBg.redeem }\n             >\n               <Icon\n                 align={'center'}\n                 name={this.props.icon}\n                 size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                 color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n                 {...this.props.iconProps}\n               />\n             </Flex>\n            )\n          }\n           <Text\n             fontWeight={3}\n             fontSize={[1,3]}\n             {...this.props.textProps}\n           >\n             {this.props.text}\n           </Text>\n         </Flex>\n       </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          let [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              // if (isRisk){\n              //   debugger;\n              // }\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                aprChartData[0].data.push({ x, y });\n              });\n            }\n\n            this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n          }\n\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    const tokenConfig = this.props.tokenConfig || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens && Object.keys(this.state.govTokens).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state.govTokens ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        output = this.state.score !== undefined && this.state.score !== null && this.functionsUtil.BNify(this.state.score).gt(0) ? (\n          <SmartNumber {...fieldProps} decimals={2} number={this.state.score} />\n        ) : this.functionsUtil.BNify(this.state.score).lte(0) ? '-' : loader\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            const customFieldName = Object.values(fieldInfo.path).pop();\n            if (this.props.tokenConfig[`${customFieldName}Props`]){\n              const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n              // Replace props\n              if (customFieldProps && Object.keys(customFieldProps).length){\n                Object.keys(customFieldProps).forEach(p => {\n                  fieldProps[p] = customFieldProps[p];\n                });\n              }\n            }\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n"],"sourceRoot":""}