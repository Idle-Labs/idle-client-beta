{"version":3,"sources":["ExecuteTransaction/ExecuteTransaction.js"],"names":["ExecuteTransaction","state","txStatus","processing","txHash","loading","functionsUtil","this","setProps","props","FunctionsUtil","loadUtils","prevProps","prevState","setState","_this2","contractMethodSendWrapper","contractName","methodName","params","tx","error","eventData","eventCategory","eventLabel","eventAction","getTransactionError","status","sendGoogleAnalyticsEvent","callback","transactionHash","Object","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","ExecuteComponent","Component","react__WEBPACK_IMPORTED_MODULE_9___default","a","createElement","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","parentProps","children","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_11__","web3","hash","waitText","concat","action","cancelTransaction","bind","endMessage","assign","onClick","execute","componentProps","value"],"mappings":"sNAKMA,6MAEJC,MAAQ,CACNC,SAAS,KACTC,WAAW,CACTC,OAAO,KACPC,SAAQ,MAKZC,cAAgB,gFAGVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,4JAK9CF,KAAKI,iMAGkBC,EAAUC,mEACjCN,KAAKI,qQAILJ,KAAKO,SAAS,CACZX,WAAY,CACVC,OAAO,KACPC,SAAQ,yIAKL,IAAAU,EAAAR,KA8CPA,KAAKD,cAAcU,0BAA0BT,KAAKE,MAAMQ,aAAaV,KAAKE,MAAMS,WAAWX,KAAKE,MAAMU,OA5CrF,SAACC,EAAGC,GAEnB,IAAMC,EAAY,CAChBC,cAAe,cACfC,WAAYT,EAAKN,MAAMS,WACvBO,YAAaV,EAAKN,MAAMQ,cAGtBI,IACFC,EAAUE,WAAaT,EAAKT,cAAcoB,oBAAoBL,KAI5DA,GAA8B,UAArBC,EAAUK,SACrBZ,EAAKT,cAAcsB,yBAAyBN,GAGZ,YAAdF,EAAGO,QAEc,oBAAxBZ,EAAKN,MAAMoB,UACpBd,EAAKN,MAAMoB,WAIfd,EAAKD,SAAS,CACZZ,SAASkB,EAAGO,OACZxB,WAAY,CACVC,OAAO,KACPC,SAAQ,MAKU,SAACe,GACvB,IAAMhB,EAASgB,EAAGU,gBAClBf,EAAKD,SAAS,SAACD,GAAD,MAAgB,CAC5BX,SAAS,aACTC,WAAW4B,OAAAC,EAAA,EAAAD,CAAA,GACNlB,EAAUV,WADL,CAERC,gBAONG,KAAKO,SAAS,SAACD,GAAD,MAAgB,CAC5BX,SAAS,UACTC,WAAW4B,OAAAC,EAAA,EAAAD,CAAA,GACNlB,EAAUV,WADL,CAERE,SAAQ,wCAMZ,IAAM4B,EAAmB1B,KAAKE,MAAMyB,UACpC,OACEC,EAAAC,EAAAC,cAACC,EAAA,EACK/B,KAAKE,MAAM8B,YAGW,YAAxBhC,KAAKN,MAAMC,UAA0BK,KAAKE,MAAM+B,SAC9CjC,KAAKE,MAAM+B,SACXjC,KAAKN,MAAME,YAAcI,KAAKN,MAAME,WAAWE,QAC/C8B,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACEC,KAAMnC,KAAKE,MAAMiC,KACjBC,KAAMpC,KAAKN,MAAME,WAAWC,OAC5BwC,SAAQ,GAAAC,OAAKtC,KAAKE,MAAMqC,OAAhB,iBACRC,kBAAmBxC,KAAKwC,kBAAkBC,KAAKzC,MAC/C0C,WAAU,cAAAJ,OAAgBtC,KAAKE,MAAMqC,OAA3B,iBAGZX,EAAAC,EAAAC,cAACJ,EAADF,OAAAmB,OAAA,CACEC,QAAS5C,KAAK6C,QAAQJ,KAAKzC,OACvBA,KAAKE,MAAM4C,gBAEd9C,KAAKE,MAAM4C,eAAeC,eArHRpB,aA8HlBlC","file":"static/js/32.d21f7c4d.chunk.js","sourcesContent":["import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  execute(){\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback();\n        }\n      }\n\n      this.setState({\n        txStatus:tx.status,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,this.props.params,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              hash={this.state.processing.txHash}\n              waitText={`${this.props.action} estimated in`}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;\n"],"sourceRoot":""}